#!/usr/bin/evn python
# -*- coding: utf-8 -*-

import csv
import json
import sys

# Parse arguments.
usage = 'Usage: python {} TARGET(c,j,n,w) SYMBOL FILE-PREFIX INPUT-FILE...'.format(__file__)
args  = sys.argv
if len(args) < 5:
    print(usage)
    sys.exit(1)

target = args[1]
symbol = args[2]
prefix = args[3]
# array of IDs
ids    = []
# language(and ID) -> ID -> message
roots  = {}

for in_fname in args[4:]:
    # Open a input file and read a header line.
    tsv = csv.reader(file(in_fname), delimiter='\t')
    header = next(tsv)

    # Create root dict if not exist yet.
    for key in header:
        if not key in roots:
            roots[key] = {}

    # Read messages and make dict.
    for row in tsv:
        mid = row[0]
        for idx, message in enumerate(row):
            key = header[idx]
            roots[key][mid] = message
        # Check duplicate id.
        if ids.count(mid) != 0:
            print('Duplicate id : ' + mid);
            sys.exit(2)
        ids.append(mid)

# Output message as JSON.
for key, d in roots.items():
    if key == 'ID':
        continue

    # Open file and write
    out = open(prefix + '_' + key + '.json', 'w')
    out.write(json.dumps(d, sort_keys=True, indent=2))
    out.close()

# Output for C/C++
if 'c' in target:
    out = open(prefix + '.hpp', 'w')
    out.write('/* THIS FILE WAS GENERATED BY A PROGRAM.\n'
              ' * You should edit not this file but the source file to change value. */\n'
              '#pragma once\n\n'
              '#include "message.hpp"\n\n'
              'namespace processwarp {\n'
              'namespace ' + symbol + ' {\n')
    for mid in ids:
        out.write('static Message::_Type ' + mid + ' = "' + mid + '";\n')
    out.write('}  // namespace ' + symbol + '\n'
              '}  // namespace processwarp\n')
    out.close()

# Output for Java(Android)

# Output for JavaScript(Node.js)
if 'n' in target:
    out = open(prefix + '.json', 'w')
    out.write(json.dumps(roots['ID'], sort_keys=True, indent=2))
    out.close()

# Output for JavaScript(web browser)
