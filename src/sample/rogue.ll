; ModuleID = 'rogue.bc'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%struct.coord = type { i32, i32 }
%struct._win_st = type { i16, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.ldat*, i16, i16, i32, i32, %struct._win_st*, %struct.pdat, i16 }
%struct.ldat = type opaque
%struct.pdat = type { i16, i16, i16, i16, i16, i16 }
%struct._RuneLocale = type { [8 x i8], [32 x i8], i32 (i8*, i64, i8**)*, i32 (i32, i8*, i64, i8**)*, i32, [256 x i32], [256 x i32], [256 x i32], %struct._RuneRange, %struct._RuneRange, %struct._RuneRange, i8*, i32, i32, %struct._RuneCharClass* }
%struct._RuneRange = type { i32, %struct._RuneEntry* }
%struct._RuneEntry = type { i32, i32, i32, i32* }
%struct._RuneCharClass = type { [14 x i8], i32 }
%struct.delayed_action = type { i32, void (...)*, i32, i32 }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%union.thing = type { %struct.anon }
%struct.anon = type { %union.thing*, %union.thing*, %struct.coord, i8, i8, i8, i8, %struct.coord*, i16, %struct.stats, %struct.room*, %union.thing*, i32 }
%struct.stats = type { i32, i32, i32, i32, i32, [13 x i8], i32 }
%struct.room = type { %struct.coord, %struct.coord, %struct.coord, i32, i16, i32, [12 x %struct.coord] }
%struct.monster = type { i8*, i32, i16, %struct.stats }
%struct.PLACE = type { i8, i8, %union.thing* }
%struct.stat = type { i32, i16, i16, i64, i32, i32, i32, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64, i64, i32, i32, i32, i32, [2 x i64] }
%struct.timespec = type { i64, i64 }
%struct.term = type { %struct.termtype, i16, %struct.termios, %struct.termios, i32, i8* }
%struct.termtype = type { i8*, i8*, i8*, i16*, i8**, i8*, i8**, i16, i16, i16, i16, i16, i16 }
%struct.termios = type { i64, i64, i64, i64, [20 x i8], i64, i64 }
%struct.optstruct = type { i8*, i8*, i8*, void (i8*)*, i32 (i8*, %struct._win_st*)* }
%struct.rdes = type { [9 x i8], [9 x i8], i8 }
%struct.PACT = type { i32, void (...)*, i32, i8*, i8* }
%struct.spot = type { i32, [4 x %struct.coord], i32 }
%struct.init_weaps = type { i8*, i8*, i8, i32 }
%struct.anon.0 = type { %union.thing*, %union.thing*, i32, %struct.coord, i8*, i32, i8, [8 x i8], [8 x i8], i32, i32, i32, i32, i32, i32, i32, i8* }
%struct.h_list = type { i8, i8*, i8 }
%struct.obj_info = type { i8*, i32, i32, i8*, i8 }
%struct.STONE = type { i8*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.passwd = type { i8*, i8*, i32, i32, i64, i8*, i8*, i8*, i8*, i64 }
%struct.sc_ent = type { i32, i32, i32, i16, [1024 x i8], i32, i32 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }

@.str = private unnamed_addr constant [5 x i8] c"wear\00", align 1
@.str1 = private unnamed_addr constant [29 x i8] c"you are already wearing some\00", align 1
@.str2 = private unnamed_addr constant [36 x i8] c".  You'll have to take it off first\00", align 1
@.str3 = private unnamed_addr constant [20 x i8] c"you can't wear that\00", align 1
@.str4 = private unnamed_addr constant [13 x i8] c"you are now \00", align 1
@.str5 = private unnamed_addr constant [11 x i8] c"wearing %s\00", align 1
@.str6 = private unnamed_addr constant [18 x i8] c"not wearing armor\00", align 1
@.str7 = private unnamed_addr constant [29 x i8] c"you aren't wearing any armor\00", align 1
@.str8 = private unnamed_addr constant [4 x i8] c"was\00", align 1
@.str9 = private unnamed_addr constant [15 x i8] c"you used to be\00", align 1
@.str10 = private unnamed_addr constant [16 x i8] c" wearing %c) %s\00", align 1
@runners.orig_pos = internal unnamed_addr global %struct.coord zeroinitializer, align 8
@stdscr = external global %struct._win_st*
@do_chase.this = internal global %struct.coord zeroinitializer, align 8
@.str11 = private unnamed_addr constant [6 x i8] c"flame\00", align 1
@ch_ret = internal global %struct.coord zeroinitializer, align 8
@chase.tryp = internal global %struct.coord zeroinitializer, align 8
@.str112 = private unnamed_addr constant [31 x i8] c"in some bizarre place (%d, %d)\00", align 1
@cansee.tp = internal global %struct.coord zeroinitializer, align 4
@command.countch = internal unnamed_addr global i8 0, align 1
@command.direction = internal unnamed_addr global i8 0, align 1
@command.newcount = internal unnamed_addr global i1 false
@.str13 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str114 = private unnamed_addr constant [19 x i8] c"you can move again\00", align 1
@.str215 = private unnamed_addr constant [10 x i8] c"there is \00", align 1
@.str316 = private unnamed_addr constant [13 x i8] c"nothing here\00", align 1
@.str417 = private unnamed_addr constant [12 x i8] c" to pick up\00", align 1
@.str518 = private unnamed_addr constant [7 x i8] c"I see \00", align 1
@.str619 = private unnamed_addr constant [17 x i8] c"no monster there\00", align 1
@.str720 = private unnamed_addr constant [32 x i8] c"you haven't typed a command yet\00", align 1
@curscr = external global %struct._win_st*
@.str821 = private unnamed_addr constant [30 x i8] c"version %s. (mctesq was here)\00", align 1
@.str922 = private unnamed_addr constant [16 x i8] c"You have found \00", align 1
@.str1023 = private unnamed_addr constant [14 x i8] c"no trap there\00", align 1
@.str1124 = private unnamed_addr constant [9 x i8] c"wielding\00", align 1
@.str12 = private unnamed_addr constant [8 x i8] c"wearing\00", align 1
@.str1325 = private unnamed_addr constant [4 x i8] c"(L)\00", align 1
@.str14 = private unnamed_addr constant [13 x i8] c"on left hand\00", align 1
@.str15 = private unnamed_addr constant [4 x i8] c"(R)\00", align 1
@.str16 = private unnamed_addr constant [14 x i8] c"on right hand\00", align 1
@.str17 = private unnamed_addr constant [21 x i8] c"illegal command '%s'\00", align 1
@.str18 = private unnamed_addr constant [14 x i8] c"a secret door\00", align 1
@.str19 = private unnamed_addr constant [11 x i8] c"you found \00", align 1
@.str20 = private unnamed_addr constant [42 x i8] c"character you want help for (* for all): \00", align 1
@.str21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str22 = private unnamed_addr constant [23 x i8] c"unknown character '%s'\00", align 1
@LINES = external global i32
@COLS = external global i32
@.str23 = private unnamed_addr constant [28 x i8] c"--Press space to continue--\00", align 1
@identify.ident_list = internal unnamed_addr constant <{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }> <{ { i8, i8*, i8, [7 x i8] } { i8 124, i8* getelementptr inbounds ([15 x i8]* @.str24, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 45, i8* getelementptr inbounds ([15 x i8]* @.str24, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 42, i8* getelementptr inbounds ([5 x i8]* @.str25, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 37, i8* getelementptr inbounds ([12 x i8]* @.str26, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 43, i8* getelementptr inbounds ([5 x i8]* @.str27, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 46, i8* getelementptr inbounds ([11 x i8]* @.str28, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 64, i8* getelementptr inbounds ([4 x i8]* @.str29, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 35, i8* getelementptr inbounds ([8 x i8]* @.str30, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 94, i8* getelementptr inbounds ([5 x i8]* @.str31, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 33, i8* getelementptr inbounds ([7 x i8]* @.str32, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 63, i8* getelementptr inbounds ([7 x i8]* @.str33, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 58, i8* getelementptr inbounds ([5 x i8]* @.str34, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 41, i8* getelementptr inbounds ([7 x i8]* @.str35, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 32, i8* getelementptr inbounds ([11 x i8]* @.str36, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 93, i8* getelementptr inbounds ([6 x i8]* @.str37, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 44, i8* getelementptr inbounds ([21 x i8]* @.str38, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 61, i8* getelementptr inbounds ([5 x i8]* @.str39, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 47, i8* getelementptr inbounds ([14 x i8]* @.str40, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 0, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str24 = private unnamed_addr constant [15 x i8] c"wall of a room\00", align 1
@.str25 = private unnamed_addr constant [5 x i8] c"gold\00", align 1
@.str26 = private unnamed_addr constant [12 x i8] c"a staircase\00", align 1
@.str27 = private unnamed_addr constant [5 x i8] c"door\00", align 1
@.str28 = private unnamed_addr constant [11 x i8] c"room floor\00", align 1
@.str29 = private unnamed_addr constant [4 x i8] c"you\00", align 1
@.str30 = private unnamed_addr constant [8 x i8] c"passage\00", align 1
@.str31 = private unnamed_addr constant [5 x i8] c"trap\00", align 1
@.str32 = private unnamed_addr constant [7 x i8] c"potion\00", align 1
@.str33 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str34 = private unnamed_addr constant [5 x i8] c"food\00", align 1
@.str35 = private unnamed_addr constant [7 x i8] c"weapon\00", align 1
@.str36 = private unnamed_addr constant [11 x i8] c"solid rock\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"armor\00", align 1
@.str38 = private unnamed_addr constant [21 x i8] c"the Amulet of Yendor\00", align 1
@.str39 = private unnamed_addr constant [5 x i8] c"ring\00", align 1
@.str40 = private unnamed_addr constant [14 x i8] c"wand or staff\00", align 1
@.str41 = private unnamed_addr constant [30 x i8] c"what do you want identified? \00", align 1
@.str42 = private unnamed_addr constant [18 x i8] c"unknown character\00", align 1
@.str43 = private unnamed_addr constant [9 x i8] c"'%s': %s\00", align 1
@.str44 = private unnamed_addr constant [18 x i8] c"I see no way down\00", align 1
@.str45 = private unnamed_addr constant [43 x i8] c"you feel a wrenching sensation in your gut\00", align 1
@.str46 = private unnamed_addr constant [30 x i8] c"your way is magically blocked\00", align 1
@.str47 = private unnamed_addr constant [16 x i8] c"I see no way up\00", align 1
@.str48 = private unnamed_addr constant [44 x i8] c"You can't.  You're floating off the ground!\00", align 1
@.str49 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str50 = private unnamed_addr constant [29 x i8] c"you can't call that anything\00", align 1
@.str51 = private unnamed_addr constant [33 x i8] c"that has already been identified\00", align 1
@.str52 = private unnamed_addr constant [5 x i8] c"Was \00", align 1
@.str53 = private unnamed_addr constant [12 x i8] c"called \22%s\22\00", align 1
@.str54 = private unnamed_addr constant [10 x i8] c"call it: \00", align 1
@.str55 = private unnamed_addr constant [30 x i8] c"what do you want to call it? \00", align 1
@.str56 = private unnamed_addr constant [13 x i8] c"you are %s (\00", align 1
@.str57 = private unnamed_addr constant [7 x i8] c"%c) %s\00", align 1
@.str58 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str59 = private unnamed_addr constant [9 x i8] c"you are \00", align 1
@.str60 = private unnamed_addr constant [11 x i8] c"%s nothing\00", align 1
@_DefaultRuneLocale = external global %struct._RuneLocale
@d_list = global [20 x %struct.delayed_action] zeroinitializer, align 16
@between = global i32 0, align 4
@.str61 = private unnamed_addr constant [21 x i8] c"you feel less %s now\00", align 1
@.str162 = private unnamed_addr constant [7 x i8] c"trippy\00", align 1
@.str263 = private unnamed_addr constant [9 x i8] c"confused\00", align 1
@.str364 = private unnamed_addr constant [41 x i8] c"far out!  Everything is all cosmic again\00", align 1
@.str465 = private unnamed_addr constant [27 x i8] c"the veil of darkness lifts\00", align 1
@.str566 = private unnamed_addr constant [31 x i8] c"you feel yourself slowing down\00", align 1
@.str667 = private unnamed_addr constant [50 x i8] c"the munchies overpower your motor capabilities.  \00", align 1
@.str768 = private unnamed_addr constant [39 x i8] c"you feel too weak from lack of food.  \00", align 1
@.str869 = private unnamed_addr constant [14 x i8] c"You freak out\00", align 1
@.str970 = private unnamed_addr constant [10 x i8] c"You faint\00", align 1
@.str1071 = private unnamed_addr constant [57 x i8] c"the munchies are interfering with your motor capabilites\00", align 1
@.str1172 = private unnamed_addr constant [30 x i8] c"you are starting to feel weak\00", align 1
@.str1273 = private unnamed_addr constant [21 x i8] c"getting the munchies\00", align 1
@.str1374 = private unnamed_addr constant [15 x i8] c"getting hungry\00", align 1
@.str1475 = private unnamed_addr constant [29 x i8] c"you are getting the munchies\00", align 1
@.str1576 = private unnamed_addr constant [31 x i8] c"you are starting to get hungry\00", align 1
@.str1677 = private unnamed_addr constant [32 x i8] c"Everything looks SO boring now.\00", align 1
@.str1778 = private unnamed_addr constant [31 x i8] c"bummer!  You've hit the ground\00", align 1
@.str1879 = private unnamed_addr constant [31 x i8] c"you float gently to the ground\00", align 1
@amulet = global i8 0, align 1
@door_stop = global i8 0, align 1
@fight_flush = global i8 0, align 1
@firstmove = global i8 0, align 1
@got_ltc = global i8 0, align 1
@has_hit = global i8 0, align 1
@in_shell = global i8 0, align 1
@inv_describe = global i8 1, align 1
@jump = global i8 0, align 1
@kamikaze = global i8 0, align 1
@lower_msg = global i8 0, align 1
@move_on = global i8 0, align 1
@msg_esc = global i8 0, align 1
@passgo = global i8 0, align 1
@playing = global i8 1, align 1
@q_comm = global i8 0, align 1
@running = global i8 0, align 1
@save_msg = global i8 1, align 1
@see_floor = global i8 1, align 1
@stat_msg = global i8 0, align 1
@terse = global i8 0, align 1
@to_death = global i8 0, align 1
@tombstone = global i8 1, align 1
@pack_used = global [26 x i8] zeroinitializer, align 16
@fruit = global [1024 x i8] c"slime-moldalign 16
@home = global [1024 x i8] zeroinitializer, align 16
@.str113 = private unnamed_addr constant [10 x i8] c"Overwrite\00", align 1
@.str1114 = private unnamed_addr constant [5 x i8] c"Slow\00", align 1
@.str2115 = private unnamed_addr constant [6 x i8] c"Clear\00", align 1
@inv_t_name = global [3 x i8*] [i8* getelementptr inbounds ([10 x i8]* @.str113, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str1114, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str2115, i32 0, i32 0)], align 16
@l_last_comm = global i8 0, align 1
@l_last_dir = global i8 0, align 1
@last_comm = global i8 0, align 1
@last_dir = global i8 0, align 1
@.str3124 = private unnamed_addr constant [11 x i8] c"a trapdoor\00", align 1
@.str4125 = private unnamed_addr constant [14 x i8] c"an arrow trap\00", align 1
@.str5126 = private unnamed_addr constant [20 x i8] c"a sleeping gas trap\00", align 1
@.str6127 = private unnamed_addr constant [11 x i8] c"a beartrap\00", align 1
@.str7128 = private unnamed_addr constant [16 x i8] c"a teleport trap\00", align 1
@.str8129 = private unnamed_addr constant [19 x i8] c"a poison dart trap\00", align 1
@.str9130 = private unnamed_addr constant [12 x i8] c"a rust trap\00", align 1
@.str10131 = private unnamed_addr constant [18 x i8] c"a mysterious trap\00", align 1
@tr_name = global [8 x i8*] [i8* getelementptr inbounds ([11 x i8]* @.str3124, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str4125, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str5126, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str6127, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str7128, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str8129, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str9130, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str10131, i32 0, i32 0)], align 16
@hungry_state = global i32 0, align 4
@inpack = global i32 0, align 4
@inv_type = global i32 0, align 4
@level = global i32 1, align 4
@mpos = global i32 0, align 4
@no_food = global i32 0, align 4
@a_class = global [8 x i32] [i32 8, i32 7, i32 7, i32 6, i32 5, i32 4, i32 4, i32 3], align 16
@count = global i32 0, align 4
@scoreboard = global %struct.__sFILE* null, align 8
@lastscore = global i32 -1, align 4
@no_command = global i32 0, align 4
@no_move = global i32 0, align 4
@purse = global i32 0, align 4
@quiet = global i32 0, align 4
@vf_hit = global i32 0, align 4
@e_levels = global [21 x i32] [i32 10, i32 20, i32 40, i32 80, i32 160, i32 320, i32 640, i32 1300, i32 2600, i32 5200, i32 13000, i32 26000, i32 50000, i32 100000, i32 200000, i32 400000, i32 800000, i32 2000000, i32 4000000, i32 8000000, i32 0], align 16
@l_last_pick = global %union.thing* null, align 8
@last_pick = global %union.thing* null, align 8
@lvl_obj = global %union.thing* null, align 8
@mlist = global %union.thing* null, align 8
@hw = global %struct._win_st* null, align 8
@max_stats = global %struct.stats { i32 16, i32 0, i32 1, i32 10, i32 12, [13 x i8] c"1x4\00\00\00\00\00\00\00\00\00\00", i32 12 }, align 4
@passages = global [13 x %struct.room] [%struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room { %struct.coord zeroinitializer, %struct.coord zeroinitializer, %struct.coord zeroinitializer, i32 0, i16 3, i32 0, [12 x %struct.coord] zeroinitializer }, %struct.room zeroinitializer], align 16
@.str11162 = private unnamed_addr constant [8 x i8] c"aquator\00", align 1
@.str12163 = private unnamed_addr constant [4 x i8] c"bat\00", align 1
@.str13164 = private unnamed_addr constant [8 x i8] c"centaur\00", align 1
@.str14165 = private unnamed_addr constant [7 x i8] c"dragon\00", align 1
@.str15166 = private unnamed_addr constant [4 x i8] c"emu\00", align 1
@.str16167 = private unnamed_addr constant [14 x i8] c"venus flytrap\00", align 1
@.str17168 = private unnamed_addr constant [8 x i8] c"griffin\00", align 1
@.str18169 = private unnamed_addr constant [10 x i8] c"hobgoblin\00", align 1
@.str19170 = private unnamed_addr constant [12 x i8] c"ice monster\00", align 1
@.str20171 = private unnamed_addr constant [11 x i8] c"jabberwock\00", align 1
@.str21172 = private unnamed_addr constant [8 x i8] c"kestrel\00", align 1
@.str22173 = private unnamed_addr constant [11 x i8] c"leprechaun\00", align 1
@.str23174 = private unnamed_addr constant [7 x i8] c"medusa\00", align 1
@.str24175 = private unnamed_addr constant [6 x i8] c"nymph\00", align 1
@.str25176 = private unnamed_addr constant [4 x i8] c"orc\00", align 1
@.str26177 = private unnamed_addr constant [8 x i8] c"phantom\00", align 1
@.str27178 = private unnamed_addr constant [7 x i8] c"quagga\00", align 1
@.str28179 = private unnamed_addr constant [12 x i8] c"rattlesnake\00", align 1
@.str29180 = private unnamed_addr constant [6 x i8] c"snake\00", align 1
@.str30181 = private unnamed_addr constant [6 x i8] c"troll\00", align 1
@.str31182 = private unnamed_addr constant [14 x i8] c"black unicorn\00", align 1
@.str32183 = private unnamed_addr constant [8 x i8] c"vampire\00", align 1
@.str33184 = private unnamed_addr constant [7 x i8] c"wraith\00", align 1
@.str34185 = private unnamed_addr constant [6 x i8] c"xeroc\00", align 1
@.str35186 = private unnamed_addr constant [5 x i8] c"yeti\00", align 1
@.str36187 = private unnamed_addr constant [7 x i8] c"zombie\00", align 1
@monsters = global [26 x %struct.monster] [%struct.monster { i8* getelementptr inbounds ([8 x i8]* @.str11162, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 20, i32 5, i32 2, i32 1, [13 x i8] c"0x0/0x0\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([4 x i8]* @.str12163, i32 0, i32 0), i32 0, i16 16384, %struct.stats { i32 10, i32 1, i32 1, i32 3, i32 1, [13 x i8] c"1x2\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([8 x i8]* @.str13164, i32 0, i32 0), i32 15, i16 0, %struct.stats { i32 10, i32 17, i32 4, i32 4, i32 1, [13 x i8] c"1x2/1x5/1x5\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([7 x i8]* @.str14165, i32 0, i32 0), i32 100, i16 2048, %struct.stats { i32 10, i32 5000, i32 10, i32 -1, i32 1, [13 x i8] c"1x8/1x8/3x10\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([4 x i8]* @.str15166, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 2, i32 1, i32 7, i32 1, [13 x i8] c"1x2\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([14 x i8]* @.str16167, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 80, i32 8, i32 3, i32 1, [13 x i8] c"%%%x0\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([8 x i8]* @.str17168, i32 0, i32 0), i32 20, i16 22528, %struct.stats { i32 10, i32 2000, i32 13, i32 2, i32 1, [13 x i8] c"4x3/3x5\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([10 x i8]* @.str18169, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 3, i32 1, i32 5, i32 1, [13 x i8] c"1x8\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([12 x i8]* @.str19170, i32 0, i32 0), i32 0, i16 0, %struct.stats { i32 10, i32 5, i32 1, i32 9, i32 1, [13 x i8] c"0x0\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([11 x i8]* @.str20171, i32 0, i32 0), i32 70, i16 0, %struct.stats { i32 10, i32 3000, i32 15, i32 6, i32 1, [13 x i8] c"2x12/2x4\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([8 x i8]* @.str21172, i32 0, i32 0), i32 0, i16 18432, %struct.stats { i32 10, i32 1, i32 1, i32 7, i32 1, [13 x i8] c"1x4\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([11 x i8]* @.str22173, i32 0, i32 0), i32 0, i16 0, %struct.stats { i32 10, i32 10, i32 3, i32 8, i32 1, [13 x i8] c"1x1\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([7 x i8]* @.str23174, i32 0, i32 0), i32 40, i16 2048, %struct.stats { i32 10, i32 200, i32 8, i32 2, i32 1, [13 x i8] c"3x4/3x4/2x5\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([6 x i8]* @.str24175, i32 0, i32 0), i32 100, i16 0, %struct.stats { i32 10, i32 37, i32 3, i32 9, i32 1, [13 x i8] c"0x0\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([4 x i8]* @.str25176, i32 0, i32 0), i32 15, i16 32, %struct.stats { i32 10, i32 5, i32 1, i32 6, i32 1, [13 x i8] c"1x8\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([8 x i8]* @.str26177, i32 0, i32 0), i32 0, i16 1024, %struct.stats { i32 10, i32 120, i32 8, i32 3, i32 1, [13 x i8] c"4x4\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([7 x i8]* @.str27178, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 15, i32 3, i32 3, i32 1, [13 x i8] c"1x5/1x5\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([12 x i8]* @.str28179, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 9, i32 2, i32 3, i32 1, [13 x i8] c"1x6\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([6 x i8]* @.str29180, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 2, i32 1, i32 5, i32 1, [13 x i8] c"1x3\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([6 x i8]* @.str30181, i32 0, i32 0), i32 50, i16 6144, %struct.stats { i32 10, i32 120, i32 6, i32 4, i32 1, [13 x i8] c"1x8/1x8/2x6\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([14 x i8]* @.str31182, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 190, i32 7, i32 -2, i32 1, [13 x i8] c"1x9/1x9/2x9\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([8 x i8]* @.str32183, i32 0, i32 0), i32 20, i16 6144, %struct.stats { i32 10, i32 350, i32 8, i32 1, i32 1, [13 x i8] c"1x10\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([7 x i8]* @.str33184, i32 0, i32 0), i32 0, i16 0, %struct.stats { i32 10, i32 55, i32 5, i32 4, i32 1, [13 x i8] c"1x6\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([6 x i8]* @.str34185, i32 0, i32 0), i32 30, i16 0, %struct.stats { i32 10, i32 100, i32 7, i32 7, i32 1, [13 x i8] c"4x4\00\00\00\00\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([5 x i8]* @.str35186, i32 0, i32 0), i32 30, i16 0, %struct.stats { i32 10, i32 50, i32 4, i32 6, i32 1, [13 x i8] c"1x6/1x6\00\00\00\00\00\00", i32 0 } }, %struct.monster { i8* getelementptr inbounds ([7 x i8]* @.str36187, i32 0, i32 0), i32 0, i16 2048, %struct.stats { i32 10, i32 6, i32 2, i32 8, i32 1, [13 x i8] c"1x8\00\00\00\00\00\00\00\00\00\00", i32 0 } }], align 16
@things = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 26, i32 0, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 36, i32 0, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 16, i32 0, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 7, i32 0, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 7, i32 0, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 4, i32 0, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 4, i32 0, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str37190 = private unnamed_addr constant [14 x i8] c"leather armor\00", align 1
@.str38191 = private unnamed_addr constant [10 x i8] c"ring mail\00", align 1
@.str39192 = private unnamed_addr constant [22 x i8] c"studded leather armor\00", align 1
@.str40193 = private unnamed_addr constant [11 x i8] c"scale mail\00", align 1
@.str41194 = private unnamed_addr constant [11 x i8] c"chain mail\00", align 1
@.str42195 = private unnamed_addr constant [12 x i8] c"splint mail\00", align 1
@.str43196 = private unnamed_addr constant [12 x i8] c"banded mail\00", align 1
@.str44197 = private unnamed_addr constant [11 x i8] c"plate mail\00", align 1
@arm_info = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str37190, i32 0, i32 0), i32 20, i32 20, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str38191, i32 0, i32 0), i32 15, i32 25, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([22 x i8]* @.str39192, i32 0, i32 0), i32 15, i32 20, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str40193, i32 0, i32 0), i32 13, i32 30, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str41194, i32 0, i32 0), i32 12, i32 75, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str42195, i32 0, i32 0), i32 10, i32 80, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str43196, i32 0, i32 0), i32 10, i32 90, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str44197, i32 0, i32 0), i32 5, i32 150, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str45198 = private unnamed_addr constant [10 x i8] c"confusion\00", align 1
@.str46199 = private unnamed_addr constant [14 x i8] c"hallucination\00", align 1
@.str47200 = private unnamed_addr constant [7 x i8] c"poison\00", align 1
@.str48201 = private unnamed_addr constant [14 x i8] c"gain strength\00", align 1
@.str49202 = private unnamed_addr constant [14 x i8] c"see invisible\00", align 1
@.str50203 = private unnamed_addr constant [8 x i8] c"healing\00", align 1
@.str51204 = private unnamed_addr constant [18 x i8] c"monster detection\00", align 1
@.str52205 = private unnamed_addr constant [16 x i8] c"magic detection\00", align 1
@.str53206 = private unnamed_addr constant [12 x i8] c"raise level\00", align 1
@.str54207 = private unnamed_addr constant [14 x i8] c"extra healing\00", align 1
@.str55208 = private unnamed_addr constant [11 x i8] c"haste self\00", align 1
@.str56209 = private unnamed_addr constant [17 x i8] c"restore strength\00", align 1
@.str57210 = private unnamed_addr constant [10 x i8] c"blindness\00", align 1
@.str58211 = private unnamed_addr constant [11 x i8] c"levitation\00", align 1
@pot_info = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str45198, i32 0, i32 0), i32 7, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str46199, i32 0, i32 0), i32 8, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str47200, i32 0, i32 0), i32 8, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str48201, i32 0, i32 0), i32 13, i32 150, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str49202, i32 0, i32 0), i32 3, i32 100, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str50203, i32 0, i32 0), i32 13, i32 130, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str51204, i32 0, i32 0), i32 6, i32 130, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str52205, i32 0, i32 0), i32 6, i32 105, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str53206, i32 0, i32 0), i32 2, i32 250, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str54207, i32 0, i32 0), i32 5, i32 200, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str55208, i32 0, i32 0), i32 5, i32 190, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str56209, i32 0, i32 0), i32 13, i32 130, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str57210, i32 0, i32 0), i32 5, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str58211, i32 0, i32 0), i32 6, i32 75, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str59214 = private unnamed_addr constant [11 x i8] c"protection\00", align 1
@.str60215 = private unnamed_addr constant [13 x i8] c"add strength\00", align 1
@.str61216 = private unnamed_addr constant [17 x i8] c"sustain strength\00", align 1
@.str62 = private unnamed_addr constant [10 x i8] c"searching\00", align 1
@.str63 = private unnamed_addr constant [10 x i8] c"adornment\00", align 1
@.str64 = private unnamed_addr constant [18 x i8] c"aggravate monster\00", align 1
@.str65 = private unnamed_addr constant [10 x i8] c"dexterity\00", align 1
@.str66 = private unnamed_addr constant [16 x i8] c"increase damage\00", align 1
@.str67 = private unnamed_addr constant [13 x i8] c"regeneration\00", align 1
@.str68 = private unnamed_addr constant [15 x i8] c"slow digestion\00", align 1
@.str69 = private unnamed_addr constant [14 x i8] c"teleportation\00", align 1
@.str70 = private unnamed_addr constant [8 x i8] c"stealth\00", align 1
@.str71 = private unnamed_addr constant [15 x i8] c"maintain armor\00", align 1
@ring_info = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str59214, i32 0, i32 0), i32 9, i32 400, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str60215, i32 0, i32 0), i32 9, i32 400, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str61216, i32 0, i32 0), i32 5, i32 280, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str62, i32 0, i32 0), i32 10, i32 420, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str49202, i32 0, i32 0), i32 10, i32 310, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str63, i32 0, i32 0), i32 1, i32 10, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str64, i32 0, i32 0), i32 10, i32 10, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str65, i32 0, i32 0), i32 8, i32 440, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str66, i32 0, i32 0), i32 8, i32 400, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str67, i32 0, i32 0), i32 4, i32 460, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str68, i32 0, i32 0), i32 9, i32 240, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str69, i32 0, i32 0), i32 5, i32 30, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str70, i32 0, i32 0), i32 7, i32 470, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str71, i32 0, i32 0), i32 5, i32 380, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str72 = private unnamed_addr constant [18 x i8] c"monster confusion\00", align 1
@.str73 = private unnamed_addr constant [14 x i8] c"magic mapping\00", align 1
@.str74 = private unnamed_addr constant [13 x i8] c"hold monster\00", align 1
@.str75 = private unnamed_addr constant [6 x i8] c"sleep\00", align 1
@.str76 = private unnamed_addr constant [14 x i8] c"enchant armor\00", align 1
@.str77 = private unnamed_addr constant [16 x i8] c"identify potion\00", align 1
@.str78 = private unnamed_addr constant [16 x i8] c"identify scroll\00", align 1
@.str79 = private unnamed_addr constant [16 x i8] c"identify weapon\00", align 1
@.str80 = private unnamed_addr constant [15 x i8] c"identify armor\00", align 1
@.str81 = private unnamed_addr constant [29 x i8] c"identify ring, wand or staff\00", align 1
@.str82 = private unnamed_addr constant [14 x i8] c"scare monster\00", align 1
@.str83 = private unnamed_addr constant [15 x i8] c"food detection\00", align 1
@.str84 = private unnamed_addr constant [15 x i8] c"enchant weapon\00", align 1
@.str85 = private unnamed_addr constant [15 x i8] c"create monster\00", align 1
@.str86 = private unnamed_addr constant [13 x i8] c"remove curse\00", align 1
@.str87 = private unnamed_addr constant [19 x i8] c"aggravate monsters\00", align 1
@.str88 = private unnamed_addr constant [14 x i8] c"protect armor\00", align 1
@scr_info = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([18 x i8]* @.str72, i32 0, i32 0), i32 7, i32 140, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str73, i32 0, i32 0), i32 4, i32 150, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str74, i32 0, i32 0), i32 2, i32 180, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str75, i32 0, i32 0), i32 3, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str76, i32 0, i32 0), i32 7, i32 160, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str77, i32 0, i32 0), i32 10, i32 80, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str78, i32 0, i32 0), i32 10, i32 80, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([16 x i8]* @.str79, i32 0, i32 0), i32 6, i32 80, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str80, i32 0, i32 0), i32 7, i32 100, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([29 x i8]* @.str81, i32 0, i32 0), i32 10, i32 115, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str82, i32 0, i32 0), i32 3, i32 200, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str83, i32 0, i32 0), i32 2, i32 60, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str69, i32 0, i32 0), i32 5, i32 165, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str84, i32 0, i32 0), i32 8, i32 150, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str85, i32 0, i32 0), i32 4, i32 75, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str86, i32 0, i32 0), i32 7, i32 105, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([19 x i8]* @.str87, i32 0, i32 0), i32 3, i32 20, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str88, i32 0, i32 0), i32 2, i32 250, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str89 = private unnamed_addr constant [5 x i8] c"mace\00", align 1
@.str90 = private unnamed_addr constant [11 x i8] c"long sword\00", align 1
@.str91 = private unnamed_addr constant [10 x i8] c"short bow\00", align 1
@.str92 = private unnamed_addr constant [6 x i8] c"arrow\00", align 1
@.str93 = private unnamed_addr constant [7 x i8] c"dagger\00", align 1
@.str94 = private unnamed_addr constant [17 x i8] c"two handed sword\00", align 1
@.str95 = private unnamed_addr constant [5 x i8] c"dart\00", align 1
@.str96 = private unnamed_addr constant [9 x i8] c"shuriken\00", align 1
@.str97 = private unnamed_addr constant [6 x i8] c"spear\00", align 1
@weap_info = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str89, i32 0, i32 0), i32 11, i32 8, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str90, i32 0, i32 0), i32 11, i32 15, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str91, i32 0, i32 0), i32 12, i32 15, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str92, i32 0, i32 0), i32 12, i32 1, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str93, i32 0, i32 0), i32 8, i32 3, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([17 x i8]* @.str94, i32 0, i32 0), i32 10, i32 75, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str95, i32 0, i32 0), i32 12, i32 2, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str96, i32 0, i32 0), i32 12, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str97, i32 0, i32 0), i32 12, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* null, i32 0, i32 0, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str98 = private unnamed_addr constant [6 x i8] c"light\00", align 1
@.str99 = private unnamed_addr constant [13 x i8] c"invisibility\00", align 1
@.str100 = private unnamed_addr constant [10 x i8] c"lightning\00", align 1
@.str101 = private unnamed_addr constant [5 x i8] c"fire\00", align 1
@.str102 = private unnamed_addr constant [5 x i8] c"cold\00", align 1
@.str103 = private unnamed_addr constant [10 x i8] c"polymorph\00", align 1
@.str104 = private unnamed_addr constant [14 x i8] c"magic missile\00", align 1
@.str105 = private unnamed_addr constant [14 x i8] c"haste monster\00", align 1
@.str106 = private unnamed_addr constant [13 x i8] c"slow monster\00", align 1
@.str107 = private unnamed_addr constant [11 x i8] c"drain life\00", align 1
@.str108 = private unnamed_addr constant [8 x i8] c"nothing\00", align 1
@.str109 = private unnamed_addr constant [14 x i8] c"teleport away\00", align 1
@.str110 = private unnamed_addr constant [12 x i8] c"teleport to\00", align 1
@.str111 = private unnamed_addr constant [13 x i8] c"cancellation\00", align 1
@ws_info = global <{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }> <{ { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str98, i32 0, i32 0), i32 12, i32 250, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str99, i32 0, i32 0), i32 6, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str100, i32 0, i32 0), i32 3, i32 330, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str101, i32 0, i32 0), i32 3, i32 330, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str102, i32 0, i32 0), i32 3, i32 330, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str103, i32 0, i32 0), i32 15, i32 310, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str104, i32 0, i32 0), i32 10, i32 170, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str105, i32 0, i32 0), i32 10, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str106, i32 0, i32 0), i32 11, i32 350, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str107, i32 0, i32 0), i32 9, i32 300, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str108, i32 0, i32 0), i32 1, i32 5, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([14 x i8]* @.str109, i32 0, i32 0), i32 6, i32 340, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str110, i32 0, i32 0), i32 6, i32 50, i8* null, i8 0, [7 x i8] undef }, { i8*, i32, i32, i8*, i8, [7 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str111, i32 0, i32 0), i32 5, i32 280, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str112223 = private unnamed_addr constant [13 x i8] c"\09prints help\00", align 1
@.str113224 = private unnamed_addr constant [17 x i8] c"\09identify object\00", align 1
@.str114225 = private unnamed_addr constant [6 x i8] c"\09left\00", align 1
@.str115 = private unnamed_addr constant [6 x i8] c"\09down\00", align 1
@.str116 = private unnamed_addr constant [4 x i8] c"\09up\00", align 1
@.str117 = private unnamed_addr constant [7 x i8] c"\09right\00", align 1
@.str118 = private unnamed_addr constant [11 x i8] c"\09up & left\00", align 1
@.str119 = private unnamed_addr constant [12 x i8] c"\09up & right\00", align 1
@.str120 = private unnamed_addr constant [13 x i8] c"\09down & left\00", align 1
@.str121 = private unnamed_addr constant [14 x i8] c"\09down & right\00", align 1
@.str122 = private unnamed_addr constant [10 x i8] c"\09run left\00", align 1
@.str123 = private unnamed_addr constant [10 x i8] c"\09run down\00", align 1
@.str124 = private unnamed_addr constant [8 x i8] c"\09run up\00", align 1
@.str125 = private unnamed_addr constant [11 x i8] c"\09run right\00", align 1
@.str126 = private unnamed_addr constant [15 x i8] c"\09run up & left\00", align 1
@.str127 = private unnamed_addr constant [16 x i8] c"\09run up & right\00", align 1
@.str128 = private unnamed_addr constant [17 x i8] c"\09run down & left\00", align 1
@.str129 = private unnamed_addr constant [18 x i8] c"\09run down & right\00", align 1
@.str130 = private unnamed_addr constant [25 x i8] c"\09run left until adjacent\00", align 1
@.str131 = private unnamed_addr constant [25 x i8] c"\09run down until adjacent\00", align 1
@.str132 = private unnamed_addr constant [23 x i8] c"\09run up until adjacent\00", align 1
@.str133 = private unnamed_addr constant [26 x i8] c"\09run right until adjacent\00", align 1
@.str134 = private unnamed_addr constant [30 x i8] c"\09run up & left until adjacent\00", align 1
@.str135 = private unnamed_addr constant [31 x i8] c"\09run up & right until adjacent\00", align 1
@.str136 = private unnamed_addr constant [32 x i8] c"\09run down & left until adjacent\00", align 1
@.str137 = private unnamed_addr constant [33 x i8] c"\09run down & right until adjacent\00", align 1
@.str138 = private unnamed_addr constant [28 x i8] c"\09<SHIFT><dir>: run that way\00", align 1
@.str139 = private unnamed_addr constant [32 x i8] c"\09<CTRL><dir>: run till adjacent\00", align 1
@.str140 = private unnamed_addr constant [37 x i8] c"<dir>\09fight till death or near death\00", align 1
@.str141 = private unnamed_addr constant [22 x i8] c"<dir>\09throw something\00", align 1
@.str142 = private unnamed_addr constant [35 x i8] c"<dir>\09move onto without picking up\00", align 1
@.str143 = private unnamed_addr constant [32 x i8] c"<dir>\09zap a wand in a direction\00", align 1
@.str144 = private unnamed_addr constant [25 x i8] c"<dir>\09identify trap type\00", align 1
@.str145 = private unnamed_addr constant [29 x i8] c"\09search for trap/secret door\00", align 1
@.str146 = private unnamed_addr constant [21 x i8] c"\09go down a staircase\00", align 1
@.str147 = private unnamed_addr constant [19 x i8] c"\09go up a staircase\00", align 1
@.str148 = private unnamed_addr constant [17 x i8] c"\09rest for a turn\00", align 1
@.str149 = private unnamed_addr constant [19 x i8] c"\09pick something up\00", align 1
@.str150 = private unnamed_addr constant [11 x i8] c"\09inventory\00", align 1
@.str151 = private unnamed_addr constant [23 x i8] c"\09inventory single item\00", align 1
@.str152 = private unnamed_addr constant [14 x i8] c"\09quaff potion\00", align 1
@.str153 = private unnamed_addr constant [13 x i8] c"\09read scroll\00", align 1
@.str154 = private unnamed_addr constant [10 x i8] c"\09eat food\00", align 1
@.str155 = private unnamed_addr constant [16 x i8] c"\09wield a weapon\00", align 1
@.str156 = private unnamed_addr constant [12 x i8] c"\09wear armor\00", align 1
@.str157 = private unnamed_addr constant [16 x i8] c"\09take armor off\00", align 1
@.str158 = private unnamed_addr constant [13 x i8] c"\09put on ring\00", align 1
@.str159 = private unnamed_addr constant [13 x i8] c"\09remove ring\00", align 1
@.str160 = private unnamed_addr constant [13 x i8] c"\09drop object\00", align 1
@.str161 = private unnamed_addr constant [13 x i8] c"\09call object\00", align 1
@.str162226 = private unnamed_addr constant [21 x i8] c"\09repeat last command\00", align 1
@.str163 = private unnamed_addr constant [22 x i8] c"\09print current weapon\00", align 1
@.str164 = private unnamed_addr constant [21 x i8] c"\09print current armor\00", align 1
@.str165 = private unnamed_addr constant [21 x i8] c"\09print current rings\00", align 1
@.str166 = private unnamed_addr constant [21 x i8] c"\09print current stats\00", align 1
@.str167 = private unnamed_addr constant [31 x i8] c"\09recall what's been discovered\00", align 1
@.str168 = private unnamed_addr constant [21 x i8] c"\09examine/set options\00", align 1
@.str169 = private unnamed_addr constant [15 x i8] c"\09redraw screen\00", align 1
@.str170 = private unnamed_addr constant [21 x i8] c"\09repeat last message\00", align 1
@.str171 = private unnamed_addr constant [16 x i8] c"\09cancel command\00", align 1
@.str172 = private unnamed_addr constant [11 x i8] c"\09save game\00", align 1
@.str173 = private unnamed_addr constant [6 x i8] c"\09quit\00", align 1
@.str174 = private unnamed_addr constant [14 x i8] c"\09shell escape\00", align 1
@.str175 = private unnamed_addr constant [36 x i8] c"<dir>\09fight till either of you dies\00", align 1
@.str176 = private unnamed_addr constant [22 x i8] c"\09print version number\00", align 1
@helpstr = global <{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }> <{ { i8, i8*, i8, [7 x i8] } { i8 63, i8* getelementptr inbounds ([13 x i8]* @.str112223, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 47, i8* getelementptr inbounds ([17 x i8]* @.str113224, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 104, i8* getelementptr inbounds ([6 x i8]* @.str114225, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 106, i8* getelementptr inbounds ([6 x i8]* @.str115, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 107, i8* getelementptr inbounds ([4 x i8]* @.str116, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 108, i8* getelementptr inbounds ([7 x i8]* @.str117, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 121, i8* getelementptr inbounds ([11 x i8]* @.str118, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 117, i8* getelementptr inbounds ([12 x i8]* @.str119, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 98, i8* getelementptr inbounds ([13 x i8]* @.str120, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 110, i8* getelementptr inbounds ([14 x i8]* @.str121, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 72, i8* getelementptr inbounds ([10 x i8]* @.str122, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 74, i8* getelementptr inbounds ([10 x i8]* @.str123, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 75, i8* getelementptr inbounds ([8 x i8]* @.str124, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 76, i8* getelementptr inbounds ([11 x i8]* @.str125, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 89, i8* getelementptr inbounds ([15 x i8]* @.str126, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 85, i8* getelementptr inbounds ([16 x i8]* @.str127, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 66, i8* getelementptr inbounds ([17 x i8]* @.str128, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 78, i8* getelementptr inbounds ([18 x i8]* @.str129, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 8, i8* getelementptr inbounds ([25 x i8]* @.str130, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 10, i8* getelementptr inbounds ([25 x i8]* @.str131, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 11, i8* getelementptr inbounds ([23 x i8]* @.str132, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 12, i8* getelementptr inbounds ([26 x i8]* @.str133, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 25, i8* getelementptr inbounds ([30 x i8]* @.str134, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 21, i8* getelementptr inbounds ([31 x i8]* @.str135, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 2, i8* getelementptr inbounds ([32 x i8]* @.str136, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 14, i8* getelementptr inbounds ([33 x i8]* @.str137, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 0, i8* getelementptr inbounds ([28 x i8]* @.str138, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 0, i8* getelementptr inbounds ([32 x i8]* @.str139, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 102, i8* getelementptr inbounds ([37 x i8]* @.str140, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 116, i8* getelementptr inbounds ([22 x i8]* @.str141, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 109, i8* getelementptr inbounds ([35 x i8]* @.str142, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 122, i8* getelementptr inbounds ([32 x i8]* @.str143, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 94, i8* getelementptr inbounds ([25 x i8]* @.str144, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 115, i8* getelementptr inbounds ([29 x i8]* @.str145, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 62, i8* getelementptr inbounds ([21 x i8]* @.str146, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 60, i8* getelementptr inbounds ([19 x i8]* @.str147, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 46, i8* getelementptr inbounds ([17 x i8]* @.str148, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 44, i8* getelementptr inbounds ([19 x i8]* @.str149, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 105, i8* getelementptr inbounds ([11 x i8]* @.str150, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 73, i8* getelementptr inbounds ([23 x i8]* @.str151, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 113, i8* getelementptr inbounds ([14 x i8]* @.str152, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 114, i8* getelementptr inbounds ([13 x i8]* @.str153, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 101, i8* getelementptr inbounds ([10 x i8]* @.str154, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 119, i8* getelementptr inbounds ([16 x i8]* @.str155, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 87, i8* getelementptr inbounds ([12 x i8]* @.str156, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 84, i8* getelementptr inbounds ([16 x i8]* @.str157, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 80, i8* getelementptr inbounds ([13 x i8]* @.str158, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 82, i8* getelementptr inbounds ([13 x i8]* @.str159, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 100, i8* getelementptr inbounds ([13 x i8]* @.str160, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 99, i8* getelementptr inbounds ([13 x i8]* @.str161, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 97, i8* getelementptr inbounds ([21 x i8]* @.str162226, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 41, i8* getelementptr inbounds ([22 x i8]* @.str163, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 93, i8* getelementptr inbounds ([21 x i8]* @.str164, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 61, i8* getelementptr inbounds ([21 x i8]* @.str165, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 64, i8* getelementptr inbounds ([21 x i8]* @.str166, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 68, i8* getelementptr inbounds ([31 x i8]* @.str167, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 111, i8* getelementptr inbounds ([21 x i8]* @.str168, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 18, i8* getelementptr inbounds ([15 x i8]* @.str169, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 16, i8* getelementptr inbounds ([21 x i8]* @.str170, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 27, i8* getelementptr inbounds ([16 x i8]* @.str171, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 83, i8* getelementptr inbounds ([11 x i8]* @.str172, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 81, i8* getelementptr inbounds ([6 x i8]* @.str173, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 33, i8* getelementptr inbounds ([14 x i8]* @.str174, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 70, i8* getelementptr inbounds ([36 x i8]* @.str175, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 118, i8* getelementptr inbounds ([22 x i8]* @.str176, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 0, i8* null, i8 0, [7 x i8] undef } }>, align 16
@after = common global i8 0, align 1
@again = common global i8 0, align 1
@noscore = common global i32 0, align 4
@seenstairs = common global i8 0, align 1
@dir_ch = common global i8 0, align 1
@file_name = common global [1024 x i8] zeroinitializer, align 16
@huh = common global [1024 x i8] zeroinitializer, align 16
@p_colors = common global [14 x i8*] zeroinitializer, align 16
@prbuf = common global [2048 x i8] zeroinitializer, align 16
@r_stones = common global [14 x i8*] zeroinitializer, align 16
@runch = common global i8 0, align 1
@s_names = common global [18 x i8*] zeroinitializer, align 16
@take = common global i8 0, align 1
@whoami = common global [1024 x i8] zeroinitializer, align 16
@ws_made = common global [14 x i8*] zeroinitializer, align 16
@ws_type = common global [14 x i8*] zeroinitializer, align 16
@orig_dsusp = common global i32 0, align 4
@n_objs = common global i32 0, align 4
@ntraps = common global i32 0, align 4
@max_hit = common global i32 0, align 4
@max_level = common global i32 0, align 4
@food_left = common global i32 0, align 4
@dnum = common global i32 0, align 4
@seed = common global i32 0, align 4
@delta = common global %struct.coord zeroinitializer, align 4
@oldpos = common global %struct.coord zeroinitializer, align 4
@stairs = common global %struct.coord zeroinitializer, align 4
@places = common global [2560 x %struct.PLACE] zeroinitializer, align 16
@cur_armor = common global %union.thing* null, align 8
@cur_ring = common global [2 x %union.thing*] zeroinitializer, align 16
@cur_weapon = common global %union.thing* null, align 8
@player = common global %union.thing zeroinitializer, align 8
@oldrp = common global %struct.room* null, align 8
@rooms = common global [9 x %struct.room] zeroinitializer, align 16
@.str273 = private unnamed_addr constant [29 x i8] c" scored an excellent hit on \00", align 1
@.str1274 = private unnamed_addr constant [6 x i8] c" hit \00", align 1
@.str2275 = private unnamed_addr constant [15 x i8] c" have injured \00", align 1
@.str3276 = private unnamed_addr constant [16 x i8] c" swing and hit \00", align 1
@.str4277 = private unnamed_addr constant [14 x i8] c" has injured \00", align 1
@.str5278 = private unnamed_addr constant [18 x i8] c" swings and hits \00", align 1
@h_names = global [8 x i8*] [i8* getelementptr inbounds ([29 x i8]* @.str273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str1274, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str2275, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str3276, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str1274, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str4277, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str5278, i32 0, i32 0)], align 16
@.str6279 = private unnamed_addr constant [6 x i8] c" miss\00", align 1
@.str7280 = private unnamed_addr constant [16 x i8] c" swing and miss\00", align 1
@.str8281 = private unnamed_addr constant [13 x i8] c" barely miss\00", align 1
@.str9282 = private unnamed_addr constant [11 x i8] c" don't hit\00", align 1
@.str10283 = private unnamed_addr constant [8 x i8] c" misses\00", align 1
@.str11284 = private unnamed_addr constant [19 x i8] c" swings and misses\00", align 1
@.str12285 = private unnamed_addr constant [15 x i8] c" barely misses\00", align 1
@.str13286 = private unnamed_addr constant [13 x i8] c" doesn't hit\00", align 1
@m_names = global [8 x i8*] [i8* getelementptr inbounds ([6 x i8]* @.str6279, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str7280, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str8281, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str9282, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str10283, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str11284, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str12285, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str13286, i32 0, i32 0)], align 16
@.str14287 = private unnamed_addr constant [32 x i8] c"heavy!  That's a nasty critter!\00", align 1
@.str15288 = private unnamed_addr constant [23 x i8] c"wait!  That's a xeroc!\00", align 1
@.str16289 = private unnamed_addr constant [27 x i8] c"your hands stop glowing %s\00", align 1
@.str17290 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@.str18291 = private unnamed_addr constant [20 x i8] c"%s appears confused\00", align 1
@.str19292 = private unnamed_addr constant [4 x i8] c".  \00", align 1
@.str20293 = private unnamed_addr constant [15 x i8] c"you are frozen\00", align 1
@.str21294 = private unnamed_addr constant [11 x i8] c" by the %s\00", align 1
@.str22295 = private unnamed_addr constant [48 x i8] c"you feel a bite in your leg and now feel weaker\00", align 1
@.str23296 = private unnamed_addr constant [24 x i8] c"a bite has weakened you\00", align 1
@.str24297 = private unnamed_addr constant [31 x i8] c"a bite momentarily weakens you\00", align 1
@.str25298 = private unnamed_addr constant [19 x i8] c"bite has no effect\00", align 1
@.str26299 = private unnamed_addr constant [25 x i8] c"you suddenly feel weaker\00", align 1
@.str27300 = private unnamed_addr constant [5 x i8] c"%dx1\00", align 1
@.str28301 = private unnamed_addr constant [25 x i8] c"your purse feels lighter\00", align 1
@.str29302 = private unnamed_addr constant [14 x i8] c"she stole %s!\00", align 1
@set_mname.tbuf = internal global [1024 x i8] c"thealign 16
@.str30303 = private unnamed_addr constant [3 x i8] c"it\00", align 1
@.str31304 = private unnamed_addr constant [10 x i8] c"something\00", align 1
@str_plus = internal unnamed_addr constant [32 x i32] [i32 -7, i32 -6, i32 -5, i32 -4, i32 -3, i32 -2, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3], align 16
@add_dam = internal unnamed_addr constant [32 x i32] [i32 -7, i32 -6, i32 -5, i32 -4, i32 -3, i32 -2, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 2, i32 3, i32 3, i32 4, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 6], align 16
@prname.tbuf = internal global [1024 x i8] zeroinitializer, align 16
@.str33305 = private unnamed_addr constant [13 x i8] c"the %s hits \00", align 1
@.str34306 = private unnamed_addr constant [9 x i8] c"you hit \00", align 1
@.str35307 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str36308 = private unnamed_addr constant [5 x i8] c" hit\00", align 1
@.str37309 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str38310 = private unnamed_addr constant [15 x i8] c"the %s misses \00", align 1
@.str39311 = private unnamed_addr constant [12 x i8] c"you missed \00", align 1
@.str40312 = private unnamed_addr constant [6 x i8] c"000x0\00", align 1
@.str41313 = private unnamed_addr constant [13 x i8] c".  Defeated \00", align 1
@.str42314 = private unnamed_addr constant [10 x i8] c"you have \00", align 1
@.str43315 = private unnamed_addr constant [10 x i8] c"defeated \00", align 1
@.str318 = private unnamed_addr constant [6 x i8] c"amber\00", align 1
@.str1319 = private unnamed_addr constant [11 x i8] c"aquamarine\00", align 1
@.str2320 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str3321 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@.str4322 = private unnamed_addr constant [6 x i8] c"brown\00", align 1
@.str5323 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str6324 = private unnamed_addr constant [8 x i8] c"crimson\00", align 1
@.str7325 = private unnamed_addr constant [5 x i8] c"cyan\00", align 1
@.str8326 = private unnamed_addr constant [5 x i8] c"ecru\00", align 1
@.str9327 = private unnamed_addr constant [5 x i8] c"gold\00", align 1
@.str10328 = private unnamed_addr constant [6 x i8] c"green\00", align 1
@.str11329 = private unnamed_addr constant [5 x i8] c"grey\00", align 1
@.str12330 = private unnamed_addr constant [8 x i8] c"magenta\00", align 1
@.str13331 = private unnamed_addr constant [7 x i8] c"orange\00", align 1
@.str14332 = private unnamed_addr constant [5 x i8] c"pink\00", align 1
@.str15333 = private unnamed_addr constant [6 x i8] c"plaid\00", align 1
@.str16334 = private unnamed_addr constant [7 x i8] c"purple\00", align 1
@.str17335 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@.str18336 = private unnamed_addr constant [7 x i8] c"silver\00", align 1
@.str19337 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str20338 = private unnamed_addr constant [10 x i8] c"tangerine\00", align 1
@.str21339 = private unnamed_addr constant [6 x i8] c"topaz\00", align 1
@.str22340 = private unnamed_addr constant [10 x i8] c"turquoise\00", align 1
@.str23341 = private unnamed_addr constant [10 x i8] c"vermilion\00", align 1
@.str24342 = private unnamed_addr constant [7 x i8] c"violet\00", align 1
@.str25343 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@.str26344 = private unnamed_addr constant [7 x i8] c"yellow\00", align 1
@rainbow = global [27 x i8*] [i8* getelementptr inbounds ([6 x i8]* @.str318, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str1319, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str2320, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str3321, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str4322, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str5323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str6324, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str7325, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str8326, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str9327, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str10328, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str11329, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str12330, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str13331, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str14332, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str15333, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str16334, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str17335, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str18336, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str19337, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str20338, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str21339, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str22340, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str23341, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str24342, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str25343, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str26344, i32 0, i32 0)], align 16
@cNCOLORS = global i32 27, align 4
@.str27345 = private unnamed_addr constant [6 x i8] c"agate\00", align 1
@.str28346 = private unnamed_addr constant [12 x i8] c"alexandrite\00", align 1
@.str29347 = private unnamed_addr constant [9 x i8] c"amethyst\00", align 1
@.str30348 = private unnamed_addr constant [10 x i8] c"carnelian\00", align 1
@.str31349 = private unnamed_addr constant [8 x i8] c"diamond\00", align 1
@.str32350 = private unnamed_addr constant [8 x i8] c"emerald\00", align 1
@.str33351 = private unnamed_addr constant [10 x i8] c"germanium\00", align 1
@.str34352 = private unnamed_addr constant [8 x i8] c"granite\00", align 1
@.str35353 = private unnamed_addr constant [7 x i8] c"garnet\00", align 1
@.str36354 = private unnamed_addr constant [5 x i8] c"jade\00", align 1
@.str37355 = private unnamed_addr constant [11 x i8] c"kryptonite\00", align 1
@.str38356 = private unnamed_addr constant [13 x i8] c"lapis lazuli\00", align 1
@.str39357 = private unnamed_addr constant [10 x i8] c"moonstone\00", align 1
@.str40358 = private unnamed_addr constant [9 x i8] c"obsidian\00", align 1
@.str41359 = private unnamed_addr constant [5 x i8] c"onyx\00", align 1
@.str42360 = private unnamed_addr constant [5 x i8] c"opal\00", align 1
@.str43361 = private unnamed_addr constant [6 x i8] c"pearl\00", align 1
@.str44362 = private unnamed_addr constant [8 x i8] c"peridot\00", align 1
@.str45363 = private unnamed_addr constant [5 x i8] c"ruby\00", align 1
@.str46364 = private unnamed_addr constant [9 x i8] c"sapphire\00", align 1
@.str47365 = private unnamed_addr constant [15 x i8] c"stibotantalite\00", align 1
@.str48366 = private unnamed_addr constant [10 x i8] c"tiger eye\00", align 1
@.str49367 = private unnamed_addr constant [10 x i8] c"taaffeite\00", align 1
@.str50368 = private unnamed_addr constant [7 x i8] c"zircon\00", align 1
@stones = global <{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }> <{ { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str27345, i32 0, i32 0), i32 25, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([12 x i8]* @.str28346, i32 0, i32 0), i32 40, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str29347, i32 0, i32 0), i32 50, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str30348, i32 0, i32 0), i32 40, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str31349, i32 0, i32 0), i32 300, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str32350, i32 0, i32 0), i32 300, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str33351, i32 0, i32 0), i32 225, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str34352, i32 0, i32 0), i32 5, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str35353, i32 0, i32 0), i32 50, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str36354, i32 0, i32 0), i32 150, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([11 x i8]* @.str37355, i32 0, i32 0), i32 300, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([13 x i8]* @.str38356, i32 0, i32 0), i32 50, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str39357, i32 0, i32 0), i32 50, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str40358, i32 0, i32 0), i32 15, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str41359, i32 0, i32 0), i32 60, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str42360, i32 0, i32 0), i32 200, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str43361, i32 0, i32 0), i32 220, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([8 x i8]* @.str44362, i32 0, i32 0), i32 63, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([5 x i8]* @.str45363, i32 0, i32 0), i32 350, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([9 x i8]* @.str46364, i32 0, i32 0), i32 285, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([15 x i8]* @.str47365, i32 0, i32 0), i32 200, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str48366, i32 0, i32 0), i32 50, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([6 x i8]* @.str21339, i32 0, i32 0), i32 60, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str22340, i32 0, i32 0), i32 70, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([10 x i8]* @.str49367, i32 0, i32 0), i32 300, [4 x i8] undef }, { i8*, i32, [4 x i8] } { i8* getelementptr inbounds ([7 x i8]* @.str50368, i32 0, i32 0), i32 80, [4 x i8] undef } }>, align 16
@cNSTONES = global i32 26, align 4
@.str51369 = private unnamed_addr constant [13 x i8] c"avocado wood\00", align 1
@.str52370 = private unnamed_addr constant [6 x i8] c"balsa\00", align 1
@.str53371 = private unnamed_addr constant [7 x i8] c"bamboo\00", align 1
@.str54372 = private unnamed_addr constant [7 x i8] c"banyan\00", align 1
@.str55373 = private unnamed_addr constant [6 x i8] c"birch\00", align 1
@.str56374 = private unnamed_addr constant [6 x i8] c"cedar\00", align 1
@.str57375 = private unnamed_addr constant [7 x i8] c"cherry\00", align 1
@.str58376 = private unnamed_addr constant [9 x i8] c"cinnibar\00", align 1
@.str59377 = private unnamed_addr constant [8 x i8] c"cypress\00", align 1
@.str60378 = private unnamed_addr constant [8 x i8] c"dogwood\00", align 1
@.str61379 = private unnamed_addr constant [10 x i8] c"driftwood\00", align 1
@.str62380 = private unnamed_addr constant [6 x i8] c"ebony\00", align 1
@.str63381 = private unnamed_addr constant [4 x i8] c"elm\00", align 1
@.str64382 = private unnamed_addr constant [11 x i8] c"eucalyptus\00", align 1
@.str65383 = private unnamed_addr constant [5 x i8] c"fall\00", align 1
@.str66384 = private unnamed_addr constant [8 x i8] c"hemlock\00", align 1
@.str67385 = private unnamed_addr constant [6 x i8] c"holly\00", align 1
@.str68386 = private unnamed_addr constant [9 x i8] c"ironwood\00", align 1
@.str69387 = private unnamed_addr constant [11 x i8] c"kukui wood\00", align 1
@.str70388 = private unnamed_addr constant [9 x i8] c"mahogany\00", align 1
@.str71389 = private unnamed_addr constant [10 x i8] c"manzanita\00", align 1
@.str72390 = private unnamed_addr constant [6 x i8] c"maple\00", align 1
@.str73391 = private unnamed_addr constant [6 x i8] c"oaken\00", align 1
@.str74392 = private unnamed_addr constant [15 x i8] c"persimmon wood\00", align 1
@.str75393 = private unnamed_addr constant [6 x i8] c"pecan\00", align 1
@.str76394 = private unnamed_addr constant [5 x i8] c"pine\00", align 1
@.str77395 = private unnamed_addr constant [7 x i8] c"poplar\00", align 1
@.str78396 = private unnamed_addr constant [8 x i8] c"redwood\00", align 1
@.str79397 = private unnamed_addr constant [9 x i8] c"rosewood\00", align 1
@.str80398 = private unnamed_addr constant [7 x i8] c"spruce\00", align 1
@.str81399 = private unnamed_addr constant [5 x i8] c"teak\00", align 1
@.str82400 = private unnamed_addr constant [7 x i8] c"walnut\00", align 1
@.str83401 = private unnamed_addr constant [10 x i8] c"zebrawood\00", align 1
@wood = global [33 x i8*] [i8* getelementptr inbounds ([13 x i8]* @.str51369, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str52370, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str53371, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str54372, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str55373, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str56374, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str57375, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str58376, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str59377, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str60378, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str61379, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str62380, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str63381, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str64382, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str65383, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str66384, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str67385, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str68386, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str69387, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str70388, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str71389, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str72390, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str73391, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str74392, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str75393, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str76394, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str77395, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str78396, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str79397, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str80398, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str81399, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str82400, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str83401, i32 0, i32 0)], align 16
@cNWOOD = global i32 33, align 4
@.str84402 = private unnamed_addr constant [9 x i8] c"aluminum\00", align 1
@.str85403 = private unnamed_addr constant [10 x i8] c"beryllium\00", align 1
@.str86404 = private unnamed_addr constant [5 x i8] c"bone\00", align 1
@.str87405 = private unnamed_addr constant [6 x i8] c"brass\00", align 1
@.str88406 = private unnamed_addr constant [7 x i8] c"bronze\00", align 1
@.str89407 = private unnamed_addr constant [7 x i8] c"copper\00", align 1
@.str90408 = private unnamed_addr constant [9 x i8] c"electrum\00", align 1
@.str91409 = private unnamed_addr constant [5 x i8] c"iron\00", align 1
@.str92410 = private unnamed_addr constant [5 x i8] c"lead\00", align 1
@.str93411 = private unnamed_addr constant [10 x i8] c"magnesium\00", align 1
@.str94412 = private unnamed_addr constant [8 x i8] c"mercury\00", align 1
@.str95413 = private unnamed_addr constant [7 x i8] c"nickel\00", align 1
@.str96414 = private unnamed_addr constant [7 x i8] c"pewter\00", align 1
@.str97415 = private unnamed_addr constant [9 x i8] c"platinum\00", align 1
@.str98416 = private unnamed_addr constant [6 x i8] c"steel\00", align 1
@.str99417 = private unnamed_addr constant [8 x i8] c"silicon\00", align 1
@.str100418 = private unnamed_addr constant [4 x i8] c"tin\00", align 1
@.str101419 = private unnamed_addr constant [9 x i8] c"titanium\00", align 1
@.str102420 = private unnamed_addr constant [9 x i8] c"tungsten\00", align 1
@.str103421 = private unnamed_addr constant [5 x i8] c"zinc\00", align 1
@metal = global [22 x i8*] [i8* getelementptr inbounds ([9 x i8]* @.str84402, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str85403, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str86404, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str87405, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str88406, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str89407, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str90408, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str9327, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str91409, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str92410, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str93411, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str94412, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str95413, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str96414, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str97415, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str98416, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str18336, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str99417, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str100418, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str101419, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str102420, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str103421, i32 0, i32 0)], align 16
@cNMETAL = global i32 22, align 4
@used = internal unnamed_addr global [33 x i8] zeroinitializer, align 16
@sylls = internal unnamed_addr constant [147 x i8*] [i8* getelementptr inbounds ([2 x i8]* @.str106424, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str107425, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str108426, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str109427, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str110428, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str111429, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str112430, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str113431, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str114432, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str115433, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str116434, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str117435, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str118436, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str119437, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str120438, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str121439, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str122440, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str123441, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str124442, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str125443, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str126444, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str127445, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str128446, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str129447, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str130448, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str131449, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str132450, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str133451, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str134452, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str135453, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str136454, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str137455, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str138456, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str139457, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str140458, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str141459, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str142460, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str143461, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str144462, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str145463, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str146464, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str147465, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str148466, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str149467, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str150468, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str151469, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str152470, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str153471, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str154472, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str155473, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str156474, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str157475, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str158476, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str159477, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str160478, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str161479, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str162480, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str163481, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str164482, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str165483, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str166484, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str167485, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str168486, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str169487, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str170488, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str171489, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str172490, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str173491, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str174492, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str175493, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str176494, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str177, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str177, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str178, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str179, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str180, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str181, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str182, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str183, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str184, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str185, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str186, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str187, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str188, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str189, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str190, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str191, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str192, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str193, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str194, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str195, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str196, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str197, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str199, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str200, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str201, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str203, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str204, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str205, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str206, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str207, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str208, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str209, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str210, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str211, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str212, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str213, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str214, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str215495, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str216, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str217, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str218, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str219, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str220, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str221, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str222, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str223, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str224, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str225, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str226, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str227, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str228, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str229, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str230, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str231, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str232, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str233, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str234, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str235, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str236, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str237, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str238, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str239, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str240, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str241, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str242, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str243, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str244, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str245, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str246, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str247, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str248, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str249, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str250, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str251, i32 0, i32 0)], align 16
@init_materials.metused = internal unnamed_addr global [22 x i8] zeroinitializer, align 16
@.str104422 = private unnamed_addr constant [5 x i8] c"wand\00", align 1
@.str105423 = private unnamed_addr constant [6 x i8] c"staff\00", align 1
@.str106424 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str107425 = private unnamed_addr constant [3 x i8] c"ab\00", align 1
@.str108426 = private unnamed_addr constant [3 x i8] c"ag\00", align 1
@.str109427 = private unnamed_addr constant [4 x i8] c"aks\00", align 1
@.str110428 = private unnamed_addr constant [4 x i8] c"ala\00", align 1
@.str111429 = private unnamed_addr constant [3 x i8] c"an\00", align 1
@.str112430 = private unnamed_addr constant [4 x i8] c"app\00", align 1
@.str113431 = private unnamed_addr constant [4 x i8] c"arg\00", align 1
@.str114432 = private unnamed_addr constant [5 x i8] c"arze\00", align 1
@.str115433 = private unnamed_addr constant [4 x i8] c"ash\00", align 1
@.str116434 = private unnamed_addr constant [4 x i8] c"bek\00", align 1
@.str117435 = private unnamed_addr constant [4 x i8] c"bie\00", align 1
@.str118436 = private unnamed_addr constant [4 x i8] c"bit\00", align 1
@.str119437 = private unnamed_addr constant [5 x i8] c"bjor\00", align 1
@.str120438 = private unnamed_addr constant [4 x i8] c"blu\00", align 1
@.str121439 = private unnamed_addr constant [4 x i8] c"bot\00", align 1
@.str122440 = private unnamed_addr constant [3 x i8] c"bu\00", align 1
@.str123441 = private unnamed_addr constant [4 x i8] c"byt\00", align 1
@.str124442 = private unnamed_addr constant [5 x i8] c"comp\00", align 1
@.str125443 = private unnamed_addr constant [4 x i8] c"con\00", align 1
@.str126444 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str127445 = private unnamed_addr constant [4 x i8] c"cre\00", align 1
@.str128446 = private unnamed_addr constant [5 x i8] c"dalf\00", align 1
@.str129447 = private unnamed_addr constant [4 x i8] c"dan\00", align 1
@.str130448 = private unnamed_addr constant [4 x i8] c"den\00", align 1
@.str131449 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str132450 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str133451 = private unnamed_addr constant [4 x i8] c"eep\00", align 1
@.str134452 = private unnamed_addr constant [3 x i8] c"el\00", align 1
@.str135453 = private unnamed_addr constant [4 x i8] c"eng\00", align 1
@.str136454 = private unnamed_addr constant [3 x i8] c"er\00", align 1
@.str137455 = private unnamed_addr constant [4 x i8] c"ere\00", align 1
@.str138456 = private unnamed_addr constant [4 x i8] c"erk\00", align 1
@.str139457 = private unnamed_addr constant [4 x i8] c"esh\00", align 1
@.str140458 = private unnamed_addr constant [4 x i8] c"evs\00", align 1
@.str141459 = private unnamed_addr constant [3 x i8] c"fa\00", align 1
@.str142460 = private unnamed_addr constant [4 x i8] c"fid\00", align 1
@.str143461 = private unnamed_addr constant [4 x i8] c"fri\00", align 1
@.str144462 = private unnamed_addr constant [3 x i8] c"fu\00", align 1
@.str145463 = private unnamed_addr constant [4 x i8] c"gan\00", align 1
@.str146464 = private unnamed_addr constant [4 x i8] c"gar\00", align 1
@.str147465 = private unnamed_addr constant [5 x i8] c"glen\00", align 1
@.str148466 = private unnamed_addr constant [4 x i8] c"gop\00", align 1
@.str149467 = private unnamed_addr constant [4 x i8] c"gre\00", align 1
@.str150468 = private unnamed_addr constant [3 x i8] c"ha\00", align 1
@.str151469 = private unnamed_addr constant [4 x i8] c"hyd\00", align 1
@.str152470 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@.str153471 = private unnamed_addr constant [4 x i8] c"ing\00", align 1
@.str154472 = private unnamed_addr constant [3 x i8] c"ip\00", align 1
@.str155473 = private unnamed_addr constant [4 x i8] c"ish\00", align 1
@.str156474 = private unnamed_addr constant [3 x i8] c"it\00", align 1
@.str157475 = private unnamed_addr constant [4 x i8] c"ite\00", align 1
@.str158476 = private unnamed_addr constant [3 x i8] c"iv\00", align 1
@.str159477 = private unnamed_addr constant [3 x i8] c"jo\00", align 1
@.str160478 = private unnamed_addr constant [4 x i8] c"kho\00", align 1
@.str161479 = private unnamed_addr constant [4 x i8] c"kli\00", align 1
@.str162480 = private unnamed_addr constant [5 x i8] c"klis\00", align 1
@.str163481 = private unnamed_addr constant [3 x i8] c"la\00", align 1
@.str164482 = private unnamed_addr constant [5 x i8] c"lech\00", align 1
@.str165483 = private unnamed_addr constant [4 x i8] c"mar\00", align 1
@.str166484 = private unnamed_addr constant [3 x i8] c"me\00", align 1
@.str167485 = private unnamed_addr constant [3 x i8] c"mi\00", align 1
@.str168486 = private unnamed_addr constant [4 x i8] c"mic\00", align 1
@.str169487 = private unnamed_addr constant [4 x i8] c"mik\00", align 1
@.str170488 = private unnamed_addr constant [4 x i8] c"mon\00", align 1
@.str171489 = private unnamed_addr constant [5 x i8] c"mung\00", align 1
@.str172490 = private unnamed_addr constant [4 x i8] c"mur\00", align 1
@.str173491 = private unnamed_addr constant [4 x i8] c"nej\00", align 1
@.str174492 = private unnamed_addr constant [5 x i8] c"nelg\00", align 1
@.str175493 = private unnamed_addr constant [4 x i8] c"nep\00", align 1
@.str176494 = private unnamed_addr constant [4 x i8] c"ner\00", align 1
@.str177 = private unnamed_addr constant [4 x i8] c"nes\00", align 1
@.str178 = private unnamed_addr constant [4 x i8] c"nih\00", align 1
@.str179 = private unnamed_addr constant [4 x i8] c"nin\00", align 1
@.str180 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str181 = private unnamed_addr constant [3 x i8] c"od\00", align 1
@.str182 = private unnamed_addr constant [4 x i8] c"ood\00", align 1
@.str183 = private unnamed_addr constant [4 x i8] c"org\00", align 1
@.str184 = private unnamed_addr constant [4 x i8] c"orn\00", align 1
@.str185 = private unnamed_addr constant [3 x i8] c"ox\00", align 1
@.str186 = private unnamed_addr constant [4 x i8] c"oxy\00", align 1
@.str187 = private unnamed_addr constant [4 x i8] c"pay\00", align 1
@.str188 = private unnamed_addr constant [4 x i8] c"ple\00", align 1
@.str189 = private unnamed_addr constant [4 x i8] c"plu\00", align 1
@.str190 = private unnamed_addr constant [3 x i8] c"po\00", align 1
@.str191 = private unnamed_addr constant [4 x i8] c"pot\00", align 1
@.str192 = private unnamed_addr constant [5 x i8] c"prok\00", align 1
@.str193 = private unnamed_addr constant [3 x i8] c"re\00", align 1
@.str194 = private unnamed_addr constant [4 x i8] c"rea\00", align 1
@.str195 = private unnamed_addr constant [5 x i8] c"rhov\00", align 1
@.str196 = private unnamed_addr constant [3 x i8] c"ri\00", align 1
@.str197 = private unnamed_addr constant [3 x i8] c"ro\00", align 1
@.str198 = private unnamed_addr constant [4 x i8] c"rog\00", align 1
@.str199 = private unnamed_addr constant [4 x i8] c"rok\00", align 1
@.str200 = private unnamed_addr constant [4 x i8] c"rol\00", align 1
@.str201 = private unnamed_addr constant [3 x i8] c"sa\00", align 1
@.str202 = private unnamed_addr constant [4 x i8] c"san\00", align 1
@.str203 = private unnamed_addr constant [4 x i8] c"sat\00", align 1
@.str204 = private unnamed_addr constant [4 x i8] c"sef\00", align 1
@.str205 = private unnamed_addr constant [4 x i8] c"seh\00", align 1
@.str206 = private unnamed_addr constant [4 x i8] c"shu\00", align 1
@.str207 = private unnamed_addr constant [4 x i8] c"ski\00", align 1
@.str208 = private unnamed_addr constant [4 x i8] c"sna\00", align 1
@.str209 = private unnamed_addr constant [4 x i8] c"sne\00", align 1
@.str210 = private unnamed_addr constant [5 x i8] c"snik\00", align 1
@.str211 = private unnamed_addr constant [4 x i8] c"sno\00", align 1
@.str212 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str213 = private unnamed_addr constant [4 x i8] c"sol\00", align 1
@.str214 = private unnamed_addr constant [4 x i8] c"sri\00", align 1
@.str215495 = private unnamed_addr constant [4 x i8] c"sta\00", align 1
@.str216 = private unnamed_addr constant [4 x i8] c"sun\00", align 1
@.str217 = private unnamed_addr constant [3 x i8] c"ta\00", align 1
@.str218 = private unnamed_addr constant [4 x i8] c"tab\00", align 1
@.str219 = private unnamed_addr constant [4 x i8] c"tem\00", align 1
@.str220 = private unnamed_addr constant [5 x i8] c"ther\00", align 1
@.str221 = private unnamed_addr constant [3 x i8] c"ti\00", align 1
@.str222 = private unnamed_addr constant [4 x i8] c"tox\00", align 1
@.str223 = private unnamed_addr constant [5 x i8] c"trol\00", align 1
@.str224 = private unnamed_addr constant [4 x i8] c"tue\00", align 1
@.str225 = private unnamed_addr constant [5 x i8] c"turs\00", align 1
@.str226 = private unnamed_addr constant [2 x i8] c"u\00", align 1
@.str227 = private unnamed_addr constant [4 x i8] c"ulk\00", align 1
@.str228 = private unnamed_addr constant [3 x i8] c"um\00", align 1
@.str229 = private unnamed_addr constant [3 x i8] c"un\00", align 1
@.str230 = private unnamed_addr constant [4 x i8] c"uni\00", align 1
@.str231 = private unnamed_addr constant [3 x i8] c"ur\00", align 1
@.str232 = private unnamed_addr constant [4 x i8] c"val\00", align 1
@.str233 = private unnamed_addr constant [4 x i8] c"viv\00", align 1
@.str234 = private unnamed_addr constant [4 x i8] c"vly\00", align 1
@.str235 = private unnamed_addr constant [4 x i8] c"vom\00", align 1
@.str236 = private unnamed_addr constant [4 x i8] c"wah\00", align 1
@.str237 = private unnamed_addr constant [4 x i8] c"wed\00", align 1
@.str238 = private unnamed_addr constant [5 x i8] c"werg\00", align 1
@.str239 = private unnamed_addr constant [4 x i8] c"wex\00", align 1
@.str240 = private unnamed_addr constant [5 x i8] c"whon\00", align 1
@.str241 = private unnamed_addr constant [4 x i8] c"wun\00", align 1
@.str242 = private unnamed_addr constant [3 x i8] c"xo\00", align 1
@.str243 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str244 = private unnamed_addr constant [4 x i8] c"yot\00", align 1
@.str245 = private unnamed_addr constant [3 x i8] c"yu\00", align 1
@.str246 = private unnamed_addr constant [5 x i8] c"zant\00", align 1
@.str247 = private unnamed_addr constant [4 x i8] c"zeb\00", align 1
@.str248 = private unnamed_addr constant [4 x i8] c"zim\00", align 1
@.str249 = private unnamed_addr constant [4 x i8] c"zok\00", align 1
@.str250 = private unnamed_addr constant [4 x i8] c"zon\00", align 1
@.str251 = private unnamed_addr constant [4 x i8] c"zum\00", align 1
@msgbuf = internal global [143 x i8] zeroinitializer, align 16
@.str498 = private unnamed_addr constant [9 x i8] c"--More--\00", align 1
@newpos = internal unnamed_addr global i32 0, align 4
@doadd.buf = internal global [1024 x i8] zeroinitializer, align 16
@status.hpwidth = internal unnamed_addr global i32 0, align 4
@status.s_hungry = internal unnamed_addr global i32 0, align 4
@status.s_lvl = internal unnamed_addr global i32 0, align 4
@status.s_pur = internal unnamed_addr global i32 -1, align 4
@status.s_hp = internal unnamed_addr global i32 0, align 4
@status.s_arm = internal unnamed_addr global i32 0, align 4
@status.s_str = internal unnamed_addr global i32 0, align 4
@status.s_exp = internal unnamed_addr global i32 0, align 4
@status.state_name = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([1 x i8]* @.str1499, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str2500, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str3501, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str4502, i32 0, i32 0)], align 16
@.str1499 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str2500 = private unnamed_addr constant [7 x i8] c"Hungry\00", align 1
@.str3501 = private unnamed_addr constant [5 x i8] c"Weak\00", align 1
@.str4502 = private unnamed_addr constant [6 x i8] c"Faint\00", align 1
@.str5503 = private unnamed_addr constant [78 x i8] c"Level: %d  Gold: %-5d  Hp: %*d(%*d)  Str: %2d(%d)  Arm: %-2d  Exp: %d/%ld  %s\00", align 1
@.str6504 = private unnamed_addr constant [77 x i8] c"Level: %d  Gold: %-5d  Hp: %*d(%*d)  Str: %2d(%d)  Arm: %-2d  Exp: %d/%d  %s\00", align 1
@numscores = global i32 10, align 4
@.str527 = private unnamed_addr constant [4 x i8] c"Ten\00", align 1
@Numname = global i8* getelementptr inbounds ([4 x i8]* @.str527, i64 0, i64 0), align 8
@allscore = global i8 1, align 1
@.str1528 = private unnamed_addr constant [10 x i8] c"rogue.scr\00", align 1
@.str2529 = private unnamed_addr constant [3 x i8] c"r+\00", align 1
@.str3530 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@__stderrp = external global %struct.__sFILE*
@.str4531 = private unnamed_addr constant [35 x i8] c"Could not open %s for writing: %s\0A\00", align 1
@lock_sc.sbuf = internal global %struct.stat zeroinitializer, align 8
@.str5532 = private unnamed_addr constant [10 x i8] c"rogue.lck\00", align 1
@lfd = internal unnamed_addr global %struct.__sFILE* null, align 8
@__stdinp = external global %struct.__sFILE*
@str = private unnamed_addr constant [57 x i8] c"The score file is very busy.  Do you want to wait longer\00"
@str9 = private unnamed_addr constant [52 x i8] c"for it to become free so your score can get posted?\00"
@str10 = private unnamed_addr constant [16 x i8] c"If so, type \22y\22\00"
@.str535 = private unnamed_addr constant [11 x i8] c"rogue.save\00", align 1
@.str1536 = private unnamed_addr constant [10 x i8] c"ROGUEOPTS\00", align 1
@.str2537 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str3538 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str4539 = private unnamed_addr constant [51 x i8] c"Hello %s, just a moment while I dig the dungeon...\00", align 1
@__stdoutp = external global %struct.__sFILE*
@.str5540 = private unnamed_addr constant [43 x i8] c"\0ASorry, the screen must be at least %dx%d\0A\00", align 1
@.str6541 = private unnamed_addr constant [16 x i8] c"Okay, bye bye!\0A\00", align 1
@.str7542 = private unnamed_addr constant [13 x i8] c"really quit?\00", align 1
@.str8543 = private unnamed_addr constant [29 x i8] c"You quit with %d gold pieces\00", align 1
@leave.buf = internal global [1024 x i8] zeroinitializer, align 16
@.str9544 = private unnamed_addr constant [28 x i8] c"\0A[Press return to continue]\00", align 1
@ESCDELAY = external global i32
@cur_term = external global %struct.term*
@.str553 = private unnamed_addr constant [45 x i8] c"Could not drop setgid privileges.  Aborting.\00", align 1
@.str1554 = private unnamed_addr constant [45 x i8] c"Could not drop setuid privileges.  Aborting.\00", align 1
@md_getusername.login = internal global [80 x i8] zeroinitializer, align 16
@.str2555 = private unnamed_addr constant [9 x i8] c"USERNAME\00", align 1
@.str3556 = private unnamed_addr constant [8 x i8] c"LOGNAME\00", align 1
@.str4557 = private unnamed_addr constant [5 x i8] c"USER\00", align 1
@.str5558 = private unnamed_addr constant [7 x i8] c"nobody\00", align 1
@md_gethomedir.homedir = internal global [1024 x i8] zeroinitializer, align 16
@.str6559 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str7560 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str8561 = private unnamed_addr constant [10 x i8] c"HOMEDRIVE\00", align 1
@.str9562 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str10563 = private unnamed_addr constant [9 x i8] c"HOMEPATH\00", align 1
@md_getshell.shell = internal global [1024 x i8] zeroinitializer, align 16
@.str11564 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str12565 = private unnamed_addr constant [8 x i8] c"COMSPEC\00", align 1
@.str13566 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str14567 = private unnamed_addr constant [11 x i8] c"SystemRoot\00", align 1
@.str15568 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str16569 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str17570 = private unnamed_addr constant [10 x i8] c"No shelly\00", align 1
@md_getrealname.uidstr = internal global [20 x i8] zeroinitializer, align 16
@.str18571 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str606 = private unnamed_addr constant [4 x i8] c"eat\00", align 1
@.str1607 = private unnamed_addr constant [39 x i8] c"ugh, you would get ill if you ate that\00", align 1
@.str2608 = private unnamed_addr constant [17 x i8] c"that's Inedible!\00", align 1
@.str3609 = private unnamed_addr constant [24 x i8] c"my, that was a yummy %s\00", align 1
@.str4610 = private unnamed_addr constant [27 x i8] c"%s, this food tastes awful\00", align 1
@.str5611 = private unnamed_addr constant [7 x i8] c"bummer\00", align 1
@.str6612 = private unnamed_addr constant [4 x i8] c"yuk\00", align 1
@.str7613 = private unnamed_addr constant [21 x i8] c"%s, that tasted good\00", align 1
@.str8614 = private unnamed_addr constant [8 x i8] c"oh, wow\00", align 1
@.str9615 = private unnamed_addr constant [4 x i8] c"yum\00", align 1
@.str10616 = private unnamed_addr constant [20 x i8] c"welcome to level %d\00", align 1
@.str11617 = private unnamed_addr constant [26 x i8] c"you faint from exhaustion\00", align 1
@.str12618 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str13619 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str14620 = private unnamed_addr constant [16 x i8] c"That's already \00", align 1
@.str15621 = private unnamed_addr constant [7 x i8] c"in use\00", align 1
@get_dir.last_delt.0 = internal unnamed_addr global i32 0
@get_dir.last_delt.1 = internal unnamed_addr global i32 0
@.str16622 = private unnamed_addr constant [18 x i8] c"which direction? \00", align 1
@.str17623 = private unnamed_addr constant [12 x i8] c"direction: \00", align 1
@.str18624 = private unnamed_addr constant [10 x i8] c"call it: \00", align 1
@.str19625 = private unnamed_addr constant [30 x i8] c"what do you want to call it? \00", align 1
@rnd_thing.thing_list = internal unnamed_addr constant [10 x i8] c"!?=/:)]%*,", align 1
@wand_mons = internal unnamed_addr constant [26 x i8] c"KEBSH\00ROZ\00CQA\00Y\00TWP\00UMVGJ\00", align 16
@lvl_mons = internal unnamed_addr constant [26 x i8] c"KEBSHIROZLCQANYFTWPXUMVGJD", align 16
@wanderer.cp = internal global %struct.coord zeroinitializer, align 4
@.str644 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str1645 = private unnamed_addr constant [3 x i8] c"it\00", align 1
@.str2646 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str3647 = private unnamed_addr constant [24 x i8] c"s gaze has confused you\00", align 1
@.str654 = private unnamed_addr constant [37 x i8] c"you are still stuck in the bear trap\00", align 1
@nh = common global %struct.coord zeroinitializer, align 4
@.str1655 = private unnamed_addr constant [19 x i8] c"you are being held\00", align 1
@.str2656 = private unnamed_addr constant [22 x i8] c"you fell into a trap!\00", align 1
@.str3657 = private unnamed_addr constant [30 x i8] c"you are caught in a bear trap\00", align 1
@.str4658 = private unnamed_addr constant [41 x i8] c"you are suddenly in a parallel dimension\00", align 1
@.str5659 = private unnamed_addr constant [36 x i8] c"the light in here suddenly seems %s\00", align 1
@.str6660 = private unnamed_addr constant [42 x i8] c"you feel a sting in the side of your neck\00", align 1
@.str7661 = private unnamed_addr constant [48 x i8] c"multi-colored lines swirl around you, then fade\00", align 1
@.str8662 = private unnamed_addr constant [32 x i8] c"a %s light flashes in your eyes\00", align 1
@.str9663 = private unnamed_addr constant [30 x i8] c"a spike shoots past your ear!\00", align 1
@.str10664 = private unnamed_addr constant [34 x i8] c"%s sparks dance across your armor\00", align 1
@.str11665 = private unnamed_addr constant [31 x i8] c"you suddenly feel very thirsty\00", align 1
@.str12666 = private unnamed_addr constant [32 x i8] c"you feel time speed up suddenly\00", align 1
@.str13667 = private unnamed_addr constant [34 x i8] c"time now seems to be going slower\00", align 1
@.str14668 = private unnamed_addr constant [19 x i8] c"you pack turns %s!\00", align 1
@.str15669 = private unnamed_addr constant [54 x i8] c"a strange white mist envelops you and you fall asleep\00", align 1
@.str16670 = private unnamed_addr constant [20 x i8] c"an arrow killed you\00", align 1
@.str17671 = private unnamed_addr constant [25 x i8] c"oh no! An arrow shot you\00", align 1
@.str18672 = private unnamed_addr constant [25 x i8] c"an arrow shoots past you\00", align 1
@.str19673 = private unnamed_addr constant [46 x i8] c"a small dart whizzes by your ear and vanishes\00", align 1
@.str20674 = private unnamed_addr constant [27 x i8] c"a poisoned dart killed you\00", align 1
@.str21675 = private unnamed_addr constant [42 x i8] c"a small dart just hit you in the shoulder\00", align 1
@.str22676 = private unnamed_addr constant [37 x i8] c"a gush of water hits you on the head\00", align 1
@rndmove.ret = internal global %struct.coord zeroinitializer, align 8
@.str23677 = private unnamed_addr constant [28 x i8] c"the rust vanishes instantly\00", align 1
@.str24678 = private unnamed_addr constant [44 x i8] c"your armor appears to be weaker now. Oh my!\00", align 1
@.str25679 = private unnamed_addr constant [19 x i8] c"your armor weakens\00", align 1
@.str688 = private unnamed_addr constant [4 x i8] c"0x0\00", align 1
@treas_room.mp = internal global %struct.coord zeroinitializer, align 8
@.str691 = private unnamed_addr constant [6 x i8] c"terse\00", align 1
@.str1692 = private unnamed_addr constant [13 x i8] c"Terse output\00", align 1
@.str2693 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str3694 = private unnamed_addr constant [30 x i8] c"Flush typeahead during battle\00", align 1
@.str4695 = private unnamed_addr constant [5 x i8] c"jump\00", align 1
@.str5696 = private unnamed_addr constant [33 x i8] c"Show position only at end of run\00", align 1
@.str6697 = private unnamed_addr constant [9 x i8] c"seefloor\00", align 1
@.str7698 = private unnamed_addr constant [32 x i8] c"Show the lamp-illuminated floor\00", align 1
@.str8699 = private unnamed_addr constant [7 x i8] c"passgo\00", align 1
@.str9700 = private unnamed_addr constant [31 x i8] c"Follow turnings in passageways\00", align 1
@.str10701 = private unnamed_addr constant [10 x i8] c"tombstone\00", align 1
@.str11702 = private unnamed_addr constant [32 x i8] c"Print out tombstone when killed\00", align 1
@.str12703 = private unnamed_addr constant [6 x i8] c"inven\00", align 1
@.str13704 = private unnamed_addr constant [16 x i8] c"Inventory style\00", align 1
@.str14705 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str15706 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str16707 = private unnamed_addr constant [6 x i8] c"fruit\00", align 1
@.str17708 = private unnamed_addr constant [6 x i8] c"Fruit\00", align 1
@.str18709 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str19710 = private unnamed_addr constant [10 x i8] c"Save file\00", align 1
@optlist = global [10 x %struct.optstruct] [%struct.optstruct { i8* getelementptr inbounds ([6 x i8]* @.str691, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str1692, i32 0, i32 0), i8* @terse, void (i8*)* @put_bool, i32 (i8*, %struct._win_st*)* @get_bool }, %struct.optstruct { i8* getelementptr inbounds ([6 x i8]* @.str2693, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str3694, i32 0, i32 0), i8* @fight_flush, void (i8*)* @put_bool, i32 (i8*, %struct._win_st*)* @get_bool }, %struct.optstruct { i8* getelementptr inbounds ([5 x i8]* @.str4695, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8]* @.str5696, i32 0, i32 0), i8* @jump, void (i8*)* @put_bool, i32 (i8*, %struct._win_st*)* @get_bool }, %struct.optstruct { i8* getelementptr inbounds ([9 x i8]* @.str6697, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str7698, i32 0, i32 0), i8* @see_floor, void (i8*)* @put_bool, i32 (i8*, %struct._win_st*)* @get_sf }, %struct.optstruct { i8* getelementptr inbounds ([7 x i8]* @.str8699, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8]* @.str9700, i32 0, i32 0), i8* @passgo, void (i8*)* @put_bool, i32 (i8*, %struct._win_st*)* @get_bool }, %struct.optstruct { i8* getelementptr inbounds ([10 x i8]* @.str10701, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str11702, i32 0, i32 0), i8* @tombstone, void (i8*)* @put_bool, i32 (i8*, %struct._win_st*)* @get_bool }, %struct.optstruct { i8* getelementptr inbounds ([6 x i8]* @.str12703, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str13704, i32 0, i32 0), i8* bitcast (i32* @inv_type to i8*), void (i8*)* @put_inv_t, i32 (i8*, %struct._win_st*)* @get_inv_t }, %struct.optstruct { i8* getelementptr inbounds ([5 x i8]* @.str14705, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str15706, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @whoami, i32 0, i32 0), void (i8*)* @put_str, i32 (i8*, %struct._win_st*)* @get_str }, %struct.optstruct { i8* getelementptr inbounds ([6 x i8]* @.str16707, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str17708, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @fruit, i32 0, i32 0), void (i8*)* @put_str, i32 (i8*, %struct._win_st*)* @get_str }, %struct.optstruct { i8* getelementptr inbounds ([5 x i8]* @.str18709, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str19710, i32 0, i32 0), i8* getelementptr inbounds ([1024 x i8]* @file_name, i32 0, i32 0), void (i8*)* @put_str, i32 (i8*, %struct._win_st*)* @get_str }], align 16
@.str20711 = private unnamed_addr constant [28 x i8] c"--Press space to continue--\00", align 1
@.str21712 = private unnamed_addr constant [12 x i8] c"%s (\22%s\22): \00", align 1
@.str22713 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@.str23714 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@.str24715 = private unnamed_addr constant [9 x i8] c"(T or F)\00", align 1
@get_str.buf = internal global [1024 x i8] zeroinitializer, align 16
@.str25716 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str26717 = private unnamed_addr constant [13 x i8] c"(O, S, or C)\00", align 1
@.str27718 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str727 = private unnamed_addr constant [43 x i8] c"the scroll turns to dust as you pick it up\00", align 1
@.str1728 = private unnamed_addr constant [14 x i8] c"you now have \00", align 1
@.str2729 = private unnamed_addr constant [8 x i8] c"%s (%c)\00", align 1
@.str3730 = private unnamed_addr constant [9 x i8] c"there's \00", align 1
@.str4731 = private unnamed_addr constant [8 x i8] c"no room\00", align 1
@.str5732 = private unnamed_addr constant [14 x i8] c" in your pack\00", align 1
@inventory.inv_temp = internal global [1024 x i8] zeroinitializer, align 16
@.str6733 = private unnamed_addr constant [8 x i8] c"%c) %%s\00", align 1
@.str7734 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str8735 = private unnamed_addr constant [13 x i8] c"empty handed\00", align 1
@.str9736 = private unnamed_addr constant [20 x i8] c"nothing appropriate\00", align 1
@.str10737 = private unnamed_addr constant [21 x i8] c"you are empty handed\00", align 1
@.str11738 = private unnamed_addr constant [36 x i8] c"you don't have anything appropriate\00", align 1
@.str12739 = private unnamed_addr constant [5 x i8] c"you \00", align 1
@.str13740 = private unnamed_addr constant [14 x i8] c"moved onto %s\00", align 1
@.str14741 = private unnamed_addr constant [29 x i8] c"you aren't carrying anything\00", align 1
@.str15742 = private unnamed_addr constant [6 x i8] c"a) %s\00", align 1
@.str16743 = private unnamed_addr constant [7 x i8] c"item: \00", align 1
@.str17744 = private unnamed_addr constant [38 x i8] c"which item do you wish to inventory: \00", align 1
@.str18745 = private unnamed_addr constant [7 x i8] c"%c) %s\00", align 1
@.str19746 = private unnamed_addr constant [17 x i8] c"'%s' not in pack\00", align 1
@.str20747 = private unnamed_addr constant [12 x i8] c"you ran out\00", align 1
@.str21748 = private unnamed_addr constant [29 x i8] c"which object do you want to \00", align 1
@.str22749 = private unnamed_addr constant [6 x i8] c" what\00", align 1
@.str23750 = private unnamed_addr constant [17 x i8] c"? (* for list): \00", align 1
@.str24751 = private unnamed_addr constant [25 x i8] c"'%s' is not a valid item\00", align 1
@.str25752 = private unnamed_addr constant [11 x i8] c"you found \00", align 1
@.str26753 = private unnamed_addr constant [15 x i8] c"%d gold pieces\00", align 1
@do_passages.rdes = internal global [9 x %struct.rdes] [%struct.rdes { [9 x i8] c"\00\01\00\01\00\00\00\00\00", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\01\00\01\00\01\00\00\00\00", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\00\01\00\00\00\01\00\00\00", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\01\00\00\00\01\00\01\00\00", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\00\01\00\01\00\01\00\01\00", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\00\00\01\00\01\00\00\00\01", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\00\00\00\01\00\00\00\01\00", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\00\00\00\00\01\00\01\00\01", [9 x i8] zeroinitializer, i8 0 }, %struct.rdes { [9 x i8] c"\00\00\00\00\00\01\00\01\00", [9 x i8] zeroinitializer, i8 0 }], align 16
@conn.del.0 = internal unnamed_addr global i1 false
@conn.del.1 = internal unnamed_addr global i1 false
@conn.curr = internal global %struct.coord zeroinitializer, align 4
@conn.turn_delta.0 = internal unnamed_addr global i32 0
@conn.turn_delta.1 = internal unnamed_addr global i32 0
@conn.spos = internal global %struct.coord zeroinitializer, align 4
@conn.epos = internal global %struct.coord zeroinitializer, align 4
@.str770 = private unnamed_addr constant [44 x i8] c"warning, connectivity problem on this level\00", align 1
@pnum = internal unnamed_addr global i32 0, align 4
@newpnum = internal unnamed_addr global i1 false
@.str773 = private unnamed_addr constant [6 x i8] c"quaff\00", align 1
@.str1774 = private unnamed_addr constant [39 x i8] c"yuk! Why would you want to drink that?\00", align 1
@.str2775 = private unnamed_addr constant [19 x i8] c"that's undrinkable\00", align 1
@.str3776 = private unnamed_addr constant [26 x i8] c"you feel momentarily sick\00", align 1
@.str4777 = private unnamed_addr constant [23 x i8] c"you feel very sick now\00", align 1
@.str5778 = private unnamed_addr constant [25 x i8] c"you begin to feel better\00", align 1
@.str6779 = private unnamed_addr constant [47 x i8] c"you feel stronger, now.  What bulging muscles!\00", align 1
@.str7780 = private unnamed_addr constant [51 x i8] c"you have a %s feeling for a moment, then it passes\00", align 1
@.str8781 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str9782 = private unnamed_addr constant [8 x i8] c"strange\00", align 1
@.str10783 = private unnamed_addr constant [55 x i8] c"You sense the presence of magic on this level.--More--\00", align 1
@.str11784 = private unnamed_addr constant [33 x i8] c"this potion tastes like %s juice\00", align 1
@.str12785 = private unnamed_addr constant [37 x i8] c"you suddenly feel much more skillful\00", align 1
@.str13786 = private unnamed_addr constant [30 x i8] c"you begin to feel much better\00", align 1
@.str14787 = private unnamed_addr constant [37 x i8] c"you feel yourself moving much faster\00", align 1
@.str15788 = private unnamed_addr constant [56 x i8] c"hey, this tastes great.  It make you feel warm all over\00", align 1
@p_actions = internal unnamed_addr constant [14 x %struct.PACT] [%struct.PACT { i32 512, void (...)* bitcast (void ()* @unconfuse to void (...)*), i32 20, i8* getelementptr inbounds ([22 x i8]* @.str16789, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8]* @.str17790, i32 0, i32 0) }, %struct.PACT { i32 2048, void (...)* bitcast (void ()* @come_down to void (...)*), i32 850, i8* getelementptr inbounds ([38 x i8]* @.str18791, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8]* @.str18791, i32 0, i32 0) }, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT { i32 2, void (...)* bitcast (void ()* @unsee to void (...)*), i32 850, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i32 0, i32 0), i8* getelementptr inbounds ([2048 x i8]* @prbuf, i32 0, i32 0) }, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT zeroinitializer, %struct.PACT { i32 4, void (...)* bitcast (void ()* @sight to void (...)*), i32 850, i8* getelementptr inbounds ([40 x i8]* @.str19792, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8]* @.str20793, i32 0, i32 0) }, %struct.PACT { i32 8, void (...)* bitcast (void ()* @land to void (...)*), i32 30, i8* getelementptr inbounds ([38 x i8]* @.str21794, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @.str22795, i32 0, i32 0) }], align 16
@.str16789 = private unnamed_addr constant [22 x i8] c"what a tripy feeling!\00", align 1
@.str17790 = private unnamed_addr constant [44 x i8] c"wait, what's going on here. Huh? What? Who?\00", align 1
@.str18791 = private unnamed_addr constant [38 x i8] c"Oh, wow!  Everything seems so cosmic!\00", align 1
@.str19792 = private unnamed_addr constant [40 x i8] c"oh, bummer!  Everything is dark!  Help!\00", align 1
@.str20793 = private unnamed_addr constant [37 x i8] c"a cloak of darkness falls around you\00", align 1
@.str21794 = private unnamed_addr constant [38 x i8] c"oh, wow!  You're floating in the air!\00", align 1
@.str22795 = private unnamed_addr constant [30 x i8] c"you start to float in the air\00", align 1
@.str802 = private unnamed_addr constant [7 x i8] c"put on\00", align 1
@.str1803 = private unnamed_addr constant [51 x i8] c"it would be difficult to wrap that around a finger\00", align 1
@.str2804 = private unnamed_addr constant [11 x i8] c"not a ring\00", align 1
@.str3805 = private unnamed_addr constant [37 x i8] c"you already have a ring on each hand\00", align 1
@.str4806 = private unnamed_addr constant [12 x i8] c"wearing two\00", align 1
@.str5807 = private unnamed_addr constant [21 x i8] c"you are now wearing \00", align 1
@.str6808 = private unnamed_addr constant [8 x i8] c"%s (%c)\00", align 1
@.str7809 = private unnamed_addr constant [9 x i8] c"no rings\00", align 1
@.str8810 = private unnamed_addr constant [29 x i8] c"you aren't wearing any rings\00", align 1
@.str9811 = private unnamed_addr constant [24 x i8] c"not wearing such a ring\00", align 1
@.str10812 = private unnamed_addr constant [19 x i8] c"was wearing %s(%c)\00", align 1
@.str11813 = private unnamed_addr constant [21 x i8] c"left or right ring? \00", align 1
@.str12814 = private unnamed_addr constant [26 x i8] c"left hand or right hand? \00", align 1
@.str13815 = private unnamed_addr constant [7 x i8] c"L or R\00", align 1
@.str14816 = private unnamed_addr constant [19 x i8] c"please type L or R\00", align 1
@ring_eat.uses = internal unnamed_addr constant [14 x i32] [i32 1, i32 1, i32 1, i32 -3, i32 -5, i32 0, i32 0, i32 -3, i32 -3, i32 2, i32 -2, i32 0, i32 1, i32 1], align 16
@ring_num.buf = internal global [10 x i8] zeroinitializer, align 1
@.str15817 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str16818 = private unnamed_addr constant [6 x i8] c" [%s]\00", align 1
@score.reason = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([7 x i8]* @.str825, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str1826, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str2827, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str3828, i32 0, i32 0)], align 16
@.str825 = private unnamed_addr constant [7 x i8] c"killed\00", align 1
@.str1826 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str2827 = private unnamed_addr constant [15 x i8] c"A total winner\00", align 1
@.str3828 = private unnamed_addr constant [19 x i8] c"killed with Amulet\00", align 1
@.str4829 = private unnamed_addr constant [27 x i8] c"[Press return to continue]\00", align 1
@.str6830 = private unnamed_addr constant [12 x i8] c"Top %s %s:\0A\00", align 1
@.str7831 = private unnamed_addr constant [7 x i8] c"Scores\00", align 1
@.str8832 = private unnamed_addr constant [10 x i8] c"Rogueists\00", align 1
@.str10833 = private unnamed_addr constant [27 x i8] c"%2d %5d %s: %s on level %d\00", align 1
@.str11834 = private unnamed_addr constant [7 x i8] c" by %s\00", align 1
@death.date = internal global i64 0, align 8
@.str13835 = private unnamed_addr constant [11 x i8] c"Killed by \00", align 1
@.str14836 = private unnamed_addr constant [5 x i8] c"a%s \00", align 1
@.str15837 = private unnamed_addr constant [16 x i8] c"%s with %d gold\00", align 1
@.str16838 = private unnamed_addr constant [6 x i8] c"%d Au\00", align 1
@.str17839 = private unnamed_addr constant [4 x i8] c"%4d\00", align 1
@.str18840 = private unnamed_addr constant [65 x i8] c"                                                               \0A\00", align 1
@.str19841 = private unnamed_addr constant [65 x i8] c"  @   @               @   @           @          @@@  @     @  \0A\00", align 1
@.str20842 = private unnamed_addr constant [65 x i8] c"  @   @               @@ @@           @           @   @     @  \0A\00", align 1
@.str21843 = private unnamed_addr constant [65 x i8] c"  @   @  @@@  @   @   @ @ @  @@@   @@@@  @@@      @  @@@    @  \0A\00", align 1
@.str22844 = private unnamed_addr constant [65 x i8] c"   @@@@ @   @ @   @   @   @     @ @   @ @   @     @   @     @  \0A\00", align 1
@.str23845 = private unnamed_addr constant [65 x i8] c"      @ @   @ @   @   @   @  @@@@ @   @ @@@@@     @   @     @  \0A\00", align 1
@.str24846 = private unnamed_addr constant [65 x i8] c"  @   @ @   @ @  @@   @   @ @   @ @   @ @         @   @  @     \0A\00", align 1
@.str25847 = private unnamed_addr constant [65 x i8] c"   @@@   @@@   @@ @   @   @  @@@@  @@@@  @@@     @@@   @@   @  \0A\00", align 1
@.str26848 = private unnamed_addr constant [65 x i8] c"     Congratulations, you have made it to the light of day!    \0A\00", align 1
@.str27849 = private unnamed_addr constant [64 x i8] c"\0AYou have joined the elite ranks of those who have escaped the\0A\00", align 1
@.str28850 = private unnamed_addr constant [69 x i8] c"Dungeons of Doom alive.  You journey home and sell all your loot at\0A\00", align 1
@.str29851 = private unnamed_addr constant [57 x i8] c"a great profit and are admitted to the Fighters' Guild.\0A\00", align 1
@.str30852 = private unnamed_addr constant [28 x i8] c"--Press space to continue--\00", align 1
@.str31853 = private unnamed_addr constant [16 x i8] c"   Worth  Item\0A\00", align 1
@.str32854 = private unnamed_addr constant [13 x i8] c"%c) %5d  %s\0A\00", align 1
@.str33855 = private unnamed_addr constant [30 x i8] c"   %5d  Gold Pieces          \00", align 1
@killname.nlist = internal unnamed_addr constant <{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }> <{ { i8, i8*, i8, [7 x i8] } { i8 97, i8* getelementptr inbounds ([6 x i8]* @.str34856, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 98, i8* getelementptr inbounds ([5 x i8]* @.str35857, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 100, i8* getelementptr inbounds ([5 x i8]* @.str36858, i32 0, i32 0), i8 1, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 104, i8* getelementptr inbounds ([12 x i8]* @.str37859, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 115, i8* getelementptr inbounds ([11 x i8]* @.str38860, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 0, i8* null, i8 0, [7 x i8] undef } }>, align 16
@.str34856 = private unnamed_addr constant [6 x i8] c"arrow\00", align 1
@.str35857 = private unnamed_addr constant [5 x i8] c"bolt\00", align 1
@.str36858 = private unnamed_addr constant [5 x i8] c"dart\00", align 1
@.str37859 = private unnamed_addr constant [12 x i8] c"hypothermia\00", align 1
@.str38860 = private unnamed_addr constant [11 x i8] c"starvation\00", align 1
@.str39861 = private unnamed_addr constant [24 x i8] c"Wally the Wonder Badger\00", align 1
@death_monst.poss = internal unnamed_addr constant [32 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabhds ", align 16
@.str40862 = private unnamed_addr constant [35 x i8] c"                       __________\0A\00", align 1
@.str41863 = private unnamed_addr constant [36 x i8] c"                      /          \5C\0A\00", align 1
@.str42864 = private unnamed_addr constant [37 x i8] c"                     /    REST    \5C\0A\00", align 1
@.str43865 = private unnamed_addr constant [38 x i8] c"                    /      IN      \5C\0A\00", align 1
@.str44866 = private unnamed_addr constant [39 x i8] c"                   /     PEACE      \5C\0A\00", align 1
@.str45867 = private unnamed_addr constant [40 x i8] c"                  /                  \5C\0A\00", align 1
@.str46868 = private unnamed_addr constant [40 x i8] c"                  |                  |\0A\00", align 1
@.str47869 = private unnamed_addr constant [40 x i8] c"                  |   killed by a    |\0A\00", align 1
@.str48870 = private unnamed_addr constant [40 x i8] c"                  |       1980       |\0A\00", align 1
@.str49871 = private unnamed_addr constant [42 x i8] c"                 *|     *  *  *      | *\0A\00", align 1
@.str50872 = private unnamed_addr constant [49 x i8] c"         ________)/\5C\5C_//(\5C/(/\5C)/\5C//\5C/|_)_______\0A\00", align 1
@str873 = private unnamed_addr constant [14 x i8] c"   Score Name\00"
@do_rooms.top.0 = internal unnamed_addr global i32 0
@do_rooms.top.1 = internal unnamed_addr global i32 0
@do_maze.pos = internal global %struct.coord zeroinitializer, align 4
@maze = internal global [9 x [27 x %struct.spot]] zeroinitializer, align 16
@Maxy = internal unnamed_addr global i32 0, align 4
@Maxx = internal unnamed_addr global i32 0, align 4
@Starty = internal unnamed_addr global i32 0, align 4
@Startx = internal unnamed_addr global i32 0, align 4
@dig.pos = internal global %struct.coord zeroinitializer, align 4
@dig.del = internal constant [4 x %struct.coord] [%struct.coord { i32 2, i32 0 }, %struct.coord { i32 -2, i32 0 }, %struct.coord { i32 0, i32 2 }, %struct.coord { i32 0, i32 -2 }], align 16
@.str890 = private unnamed_addr constant [17 x i8] c"save file (%s)? \00", align 1
@.str1891 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str2892 = private unnamed_addr constant [21 x i8] c"please answer Y or N\00", align 1
@.str3893 = private unnamed_addr constant [5 x i8] c"Yes\0A\00", align 1
@.str4894 = private unnamed_addr constant [12 x i8] c"file name: \00", align 1
@sbuf = internal global %struct.stat zeroinitializer, align 8
@.str5895 = private unnamed_addr constant [43 x i8] c"File exists.  Do you wish to overwrite it?\00", align 1
@.str6896 = private unnamed_addr constant [21 x i8] c"Please answer Y or N\00", align 1
@.str7897 = private unnamed_addr constant [14 x i8] c"file name: %s\00", align 1
@.str8898 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str9899 = private unnamed_addr constant [9 x i8] c"%d x %d\0A\00", align 1
@.str10900 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str11901 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str13902 = private unnamed_addr constant [60 x i8] c"Sorry, original game was played on a screen with %d lines.\0A\00", align 1
@.str14903 = private unnamed_addr constant [58 x i8] c"Current screen only has %d lines. Unable to restore game\0A\00", align 1
@.str15904 = private unnamed_addr constant [62 x i8] c"Sorry, original game was played on a screen with %d columns.\0A\00", align 1
@.str16905 = private unnamed_addr constant [60 x i8] c"Current screen only has %d columns. Unable to restore game\0A\00", align 1
@environ = external global i8**
@scoreline = internal global [100 x i8] zeroinitializer, align 16
@.str20906 = private unnamed_addr constant [22 x i8] c" %u %d %u %hu %d %x \0A\00", align 1
@str907 = private unnamed_addr constant [18 x i8] c"\0A\22He's dead, Jim\22\00"
@str21 = private unnamed_addr constant [35 x i8] c"\0ACannot restore from a linked file\00"
@str22 = private unnamed_addr constant [19 x i8] c"Cannot unlink file\00"
@str23 = private unnamed_addr constant [34 x i8] c"Sorry, saved game is out of date.\00"
@read_scroll.mp = internal global %struct.coord zeroinitializer, align 4
@.str918 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str1919 = private unnamed_addr constant [31 x i8] c"there is nothing on it to read\00", align 1
@.str2920 = private unnamed_addr constant [16 x i8] c"nothing to read\00", align 1
@.str3921 = private unnamed_addr constant [28 x i8] c"your hands begin to glow %s\00", align 1
@.str4922 = private unnamed_addr constant [4 x i8] c"red\00", align 1
@.str5923 = private unnamed_addr constant [33 x i8] c"your armor glows %s for a moment\00", align 1
@.str6924 = private unnamed_addr constant [7 x i8] c"silver\00", align 1
@.str7925 = private unnamed_addr constant [12 x i8] c"the monster\00", align 1
@.str8926 = private unnamed_addr constant [13 x i8] c"s around you\00", align 1
@.str9927 = private unnamed_addr constant [8 x i8] c" freeze\00", align 1
@.str10928 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str11929 = private unnamed_addr constant [33 x i8] c"you feel a strange sense of loss\00", align 1
@.str12930 = private unnamed_addr constant [16 x i8] c"you fall asleep\00", align 1
@.str13931 = private unnamed_addr constant [48 x i8] c"you hear a faint cry of anguish in the distance\00", align 1
@read_scroll.id_type = internal unnamed_addr constant [10 x i8] c"\00\00\00\00\00!?)]\FE", align 1
@.str14932 = private unnamed_addr constant [28 x i8] c"this scroll is an %s scroll\00", align 1
@.str15933 = private unnamed_addr constant [36 x i8] c"oh, now this scroll has a map on it\00", align 1
@.str16934 = private unnamed_addr constant [46 x i8] c"Your nose tingles and you smell food.--More--\00", align 1
@.str17935 = private unnamed_addr constant [18 x i8] c"your nose tingles\00", align 1
@.str18936 = private unnamed_addr constant [30 x i8] c"your %s glows %s for a moment\00", align 1
@.str19937 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@.str20938 = private unnamed_addr constant [43 x i8] c"you hear maniacal laughter in the distance\00", align 1
@.str21939 = private unnamed_addr constant [44 x i8] c"you feel in touch with the Universal Onenes\00", align 1
@.str22940 = private unnamed_addr constant [45 x i8] c"you feel as if somebody is watching over you\00", align 1
@.str23941 = private unnamed_addr constant [38 x i8] c"you hear a high pitched humming noise\00", align 1
@.str24942 = private unnamed_addr constant [48 x i8] c"your armor is covered by a shimmering %s shield\00", align 1
@.str25943 = private unnamed_addr constant [5 x i8] c"gold\00", align 1
@write_error = internal unnamed_addr global i1 false
@read_error = internal unnamed_addr global i1 false
@format_error = internal unnamed_addr global i1 false
@.str946 = private unnamed_addr constant [6 x i8] c"staff\00", align 1
@.str1947 = private unnamed_addr constant [5 x i8] c"wand\00", align 1
@.str952 = private unnamed_addr constant [6 x i8] c"staff\00", align 1
@.str1953 = private unnamed_addr constant [4 x i8] c"2x3\00", align 1
@.str2954 = private unnamed_addr constant [4 x i8] c"1x1\00", align 1
@do_zap.bolt = internal global %union.thing zeroinitializer, align 8
@.str3955 = private unnamed_addr constant [9 x i8] c"zap with\00", align 1
@.str4956 = private unnamed_addr constant [25 x i8] c"you can't zap with that!\00", align 1
@.str5957 = private unnamed_addr constant [16 x i8] c"nothing happens\00", align 1
@.str6958 = private unnamed_addr constant [34 x i8] c"the corridor glows and then fades\00", align 1
@.str7959 = private unnamed_addr constant [16 x i8] c"the room is lit\00", align 1
@.str8960 = private unnamed_addr constant [26 x i8] c" by a shimmering %s light\00", align 1
@.str9961 = private unnamed_addr constant [5 x i8] c"blue\00", align 1
@.str10962 = private unnamed_addr constant [27 x i8] c"you are too weak to use it\00", align 1
@.str11963 = private unnamed_addr constant [4 x i8] c"1x4\00", align 1
@.str12964 = private unnamed_addr constant [16 x i8] c"missle vanishes\00", align 1
@.str13965 = private unnamed_addr constant [41 x i8] c"the missle vanishes with a puff of smoke\00", align 1
@.str14966 = private unnamed_addr constant [5 x i8] c"bolt\00", align 1
@.str15967 = private unnamed_addr constant [6 x i8] c"flame\00", align 1
@.str16968 = private unnamed_addr constant [4 x i8] c"ice\00", align 1
@drain.drainee = internal global [40 x %union.thing*] zeroinitializer, align 16
@.str17969 = private unnamed_addr constant [28 x i8] c"you have a tingling feeling\00", align 1
@fire_bolt.pos = internal global %struct.coord zeroinitializer, align 8
@fire_bolt.spotpos = internal global [6 x %struct.coord] zeroinitializer, align 16
@.str18970 = private unnamed_addr constant [4 x i8] c"6x6\00", align 1
@.str19971 = private unnamed_addr constant [15 x i8] c"the %s bounces\00", align 1
@.str20972 = private unnamed_addr constant [18 x i8] c"the flame bounces\00", align 1
@.str21973 = private unnamed_addr constant [16 x i8] c" off the dragon\00", align 1
@.str22974 = private unnamed_addr constant [10 x i8] c"%s misses\00", align 1
@.str23975 = private unnamed_addr constant [23 x i8] c"the %s whizzes past %s\00", align 1
@.str24976 = private unnamed_addr constant [12 x i8] c"the %s hits\00", align 1
@.str25977 = private unnamed_addr constant [22 x i8] c"you are hit by the %s\00", align 1
@.str26978 = private unnamed_addr constant [22 x i8] c"the %s whizzes by you\00", align 1
@charge_str.buf = internal global [20 x i8] zeroinitializer, align 16
@.str27979 = private unnamed_addr constant [6 x i8] c" [%d]\00", align 1
@.str28980 = private unnamed_addr constant [14 x i8] c" [%d charges]\00", align 1
@.str985 = private unnamed_addr constant [7 x i8] c"potion\00", align 1
@.str1986 = private unnamed_addr constant [5 x i8] c"ring\00", align 1
@.str2987 = private unnamed_addr constant [10 x i8] c"A scroll \00", align 1
@.str3988 = private unnamed_addr constant [12 x i8] c"%d scrolls \00", align 1
@.str4989 = private unnamed_addr constant [6 x i8] c"of %s\00", align 1
@.str5990 = private unnamed_addr constant [10 x i8] c"called %s\00", align 1
@.str6991 = private unnamed_addr constant [12 x i8] c"titled '%s'\00", align 1
@.str7992 = private unnamed_addr constant [7 x i8] c"A%s %s\00", align 1
@.str8993 = private unnamed_addr constant [7 x i8] c"%d %ss\00", align 1
@.str9994 = private unnamed_addr constant [10 x i8] c"Some food\00", align 1
@.str10995 = private unnamed_addr constant [19 x i8] c"%d rations of food\00", align 1
@.str11996 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str12997 = private unnamed_addr constant [5 x i8] c"A%s \00", align 1
@.str13998 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str14999 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str151000 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str161001 = private unnamed_addr constant [11 x i8] c" called %s\00", align 1
@.str171002 = private unnamed_addr constant [8 x i8] c"%s %s [\00", align 1
@.str181003 = private unnamed_addr constant [12 x i8] c"protection \00", align 1
@.str191004 = private unnamed_addr constant [4 x i8] c"%d]\00", align 1
@.str201005 = private unnamed_addr constant [21 x i8] c"The Amulet of Yendor\00", align 1
@.str211006 = private unnamed_addr constant [15 x i8] c"%d Gold pieces\00", align 1
@.str221007 = private unnamed_addr constant [14 x i8] c" (being worn)\00", align 1
@.str231008 = private unnamed_addr constant [18 x i8] c" (weapon in hand)\00", align 1
@.str241009 = private unnamed_addr constant [16 x i8] c" (on left hand)\00", align 1
@.str251010 = private unnamed_addr constant [17 x i8] c" (on right hand)\00", align 1
@.str261011 = private unnamed_addr constant [33 x i8] c"there is something there already\00", align 1
@.str271012 = private unnamed_addr constant [5 x i8] c"drop\00", align 1
@.str281013 = private unnamed_addr constant [11 x i8] c"dropped %s\00", align 1
@.str291014 = private unnamed_addr constant [36 x i8] c"you can't.  It appears to be cursed\00", align 1
@.str301015 = private unnamed_addr constant [4 x i8] c"0x0\00", align 1
@.str311016 = private unnamed_addr constant [5 x i8] c"for \00", align 1
@.str321017 = private unnamed_addr constant [10 x i8] c"what type\00", align 1
@.str331018 = private unnamed_addr constant [30 x i8] c" of object do you want a list\00", align 1
@.str341019 = private unnamed_addr constant [14 x i8] c"? (* for all)\00", align 1
@.str351020 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str361021 = private unnamed_addr constant [11 x i8] c"Not a type\00", align 1
@.str371022 = private unnamed_addr constant [45 x i8] c"Please type one of %c%c%c%c (ESCAPE to quit)\00", align 1
@print_disc.obj = internal global %union.thing zeroinitializer, align 8
@print_disc.order = internal global [18 x i32] zeroinitializer, align 16
@.str381023 = private unnamed_addr constant [28 x i8] c"--Press space to continue--\00", align 1
@add_line.maxlen = internal unnamed_addr global i32 -1, align 4
@line_cnt = internal unnamed_addr global i32 0, align 4
@newpage = internal unnamed_addr global i1 false
@lastfmt = internal unnamed_addr global i8* null, align 8
@lastarg = internal unnamed_addr global i8* null, align 8
@.str391024 = private unnamed_addr constant [8 x i8] c"Nothing\00", align 1
@.str401025 = private unnamed_addr constant [28 x i8] c"Haven't discovered anything\00", align 1
@.str411026 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str421027 = private unnamed_addr constant [6 x i8] c"stick\00", align 1
@.str431028 = private unnamed_addr constant [15 x i8] c" about any %ss\00", align 1
@.str441029 = private unnamed_addr constant [6 x i8] c"A %s \00", align 1
@.str451030 = private unnamed_addr constant [8 x i8] c"%d %ss \00", align 1
@.str461031 = private unnamed_addr constant [12 x i8] c"of %s%s(%s)\00", align 1
@.str471032 = private unnamed_addr constant [16 x i8] c"called %s%s(%s)\00", align 1
@.str481033 = private unnamed_addr constant [10 x i8] c"A%s %s %s\00", align 1
@.str491034 = private unnamed_addr constant [10 x i8] c"%d %s %ss\00", align 1
@.str1049 = private unnamed_addr constant [6 x i8] c"5.4.4\00", align 1
@release = global i8* getelementptr inbounds ([6 x i8]* @.str1049, i64 0, i64 0), align 8
@encstr = global [40 x i8] c"\C0k||`\A9Y.'\C5\D1\81+\BF~r\22]\A0_\93=1\E1)\92\8A\A1t;\09$\B8\CC/<#\81\AC\00", align 16
@statlist = global [38 x i8] c"\EDkl{+\84\AD\CBidJ\F1\8C=4:\C9\B9\E1wK<\CA\D1\8B,,7\B9/Rk%\08\CA\0C\A6\00", align 16
@version = global [28 x i8] c"rogue (rogueforge) 09/05/07\00", align 16
@group = global i32 2, align 4
@.str1060 = private unnamed_addr constant [6 x i8] c"throw\00", align 1
@fall.fpos = internal global %struct.coord zeroinitializer, align 8
@.str11061 = private unnamed_addr constant [38 x i8] c"the %s vanishes as it hits the ground\00", align 1
@init_dam = internal unnamed_addr constant [9 x %struct.init_weaps] [%struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str101070, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str111071, i32 0, i32 0), i8 -1, i32 0 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str121072, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str131073, i32 0, i32 0), i8 -1, i32 0 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str141074, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str141074, i32 0, i32 0), i8 -1, i32 0 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str141074, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str151075, i32 0, i32 0), i8 2, i32 12 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str161076, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str171077, i32 0, i32 0), i8 -1, i32 4 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str181078, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str131073, i32 0, i32 0), i8 -1, i32 0 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str141074, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str111071, i32 0, i32 0), i8 -1, i32 12 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str131073, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str101070, i32 0, i32 0), i8 -1, i32 12 }, %struct.init_weaps { i8* getelementptr inbounds ([4 x i8]* @.str151075, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str161076, i32 0, i32 0), i8 -1, i32 4 }], align 16
@hit_monster.mp = internal global %struct.coord zeroinitializer, align 4
@num.numbuf = internal global [10 x i8] zeroinitializer, align 1
@.str21062 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str31063 = private unnamed_addr constant [4 x i8] c"+%d\00", align 1
@.str41064 = private unnamed_addr constant [4 x i8] c",%d\00", align 1
@.str51065 = private unnamed_addr constant [5 x i8] c",+%d\00", align 1
@.str61066 = private unnamed_addr constant [6 x i8] c"wield\00", align 1
@.str71067 = private unnamed_addr constant [22 x i8] c"you can't wield armor\00", align 1
@.str81068 = private unnamed_addr constant [13 x i8] c"you are now \00", align 1
@.str91069 = private unnamed_addr constant [17 x i8] c"wielding %s (%c)\00", align 1
@.str101070 = private unnamed_addr constant [4 x i8] c"2x4\00", align 1
@.str111071 = private unnamed_addr constant [4 x i8] c"1x3\00", align 1
@.str121072 = private unnamed_addr constant [4 x i8] c"3x4\00", align 1
@.str131073 = private unnamed_addr constant [4 x i8] c"1x2\00", align 1
@.str141074 = private unnamed_addr constant [4 x i8] c"1x1\00", align 1
@.str151075 = private unnamed_addr constant [4 x i8] c"2x3\00", align 1
@.str161076 = private unnamed_addr constant [4 x i8] c"1x6\00", align 1
@.str171077 = private unnamed_addr constant [4 x i8] c"1x4\00", align 1
@.str181078 = private unnamed_addr constant [4 x i8] c"4x4\00", align 1
@.str1095 = private unnamed_addr constant [49 x i8] c"you don't have anything in your pack to identify\00", align 1
@.str11096 = private unnamed_addr constant [9 x i8] c"identify\00", align 1
@.str21097 = private unnamed_addr constant [28 x i8] c"you must identify something\00", align 1
@.str31098 = private unnamed_addr constant [23 x i8] c"you must identify a %s\00", align 1
@type_name.tlist = internal unnamed_addr constant <{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }> <{ { i8, i8*, i8, [7 x i8] } { i8 33, i8* getelementptr inbounds ([7 x i8]* @.str41099, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 63, i8* getelementptr inbounds ([7 x i8]* @.str51100, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 58, i8* getelementptr inbounds ([5 x i8]* @.str61101, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 -2, i8* getelementptr inbounds ([20 x i8]* @.str71102, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 61, i8* getelementptr inbounds ([5 x i8]* @.str81103, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 47, i8* getelementptr inbounds ([14 x i8]* @.str91104, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 41, i8* getelementptr inbounds ([7 x i8]* @.str101105, i32 0, i32 0), i8 0, [7 x i8] undef }, { i8, i8*, i8, [7 x i8] } { i8 93, i8* getelementptr inbounds ([14 x i8]* @.str111106, i32 0, i32 0), i8 0, [7 x i8] undef } }>, align 16
@.str41099 = private unnamed_addr constant [7 x i8] c"potion\00", align 1
@.str51100 = private unnamed_addr constant [7 x i8] c"scroll\00", align 1
@.str61101 = private unnamed_addr constant [5 x i8] c"food\00", align 1
@.str71102 = private unnamed_addr constant [20 x i8] c"ring, wand or staff\00", align 1
@.str81103 = private unnamed_addr constant [5 x i8] c"ring\00", align 1
@.str91104 = private unnamed_addr constant [14 x i8] c"wand or staff\00", align 1
@.str101105 = private unnamed_addr constant [7 x i8] c"weapon\00", align 1
@.str111106 = private unnamed_addr constant [14 x i8] c"suit of armor\00", align 1
@teleport.c = internal global %struct.coord zeroinitializer, align 8
@.str121107 = private unnamed_addr constant [6 x i8] c"000x0\00", align 1
@md_endian = global i32 16909060, align 4
@xcrypt.output = internal global [21 x i8] zeroinitializer, align 16
@des_initialised = internal unnamed_addr global i1 false
@ascii64 = internal unnamed_addr constant [65 x i8] c"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\00", align 16
@en_keysl = internal unnamed_addr global [16 x i32] zeroinitializer, align 16
@en_keysr = internal unnamed_addr global [16 x i32] zeroinitializer, align 16
@de_keysl = internal unnamed_addr global [16 x i32] zeroinitializer, align 16
@de_keysr = internal unnamed_addr global [16 x i32] zeroinitializer, align 16
@ip_maskl = internal unnamed_addr global [8 x [256 x i32]] zeroinitializer, align 16
@ip_maskr = internal unnamed_addr global [8 x [256 x i32]] zeroinitializer, align 16
@saltbits = internal unnamed_addr global i32 0, align 4
@m_sbox = internal unnamed_addr global [4 x [4096 x i8]] zeroinitializer, align 16
@psbox = internal unnamed_addr global [4 x [256 x i32]] zeroinitializer, align 16
@fp_maskl = internal unnamed_addr global [8 x [256 x i32]] zeroinitializer, align 16
@fp_maskr = internal unnamed_addr global [8 x [256 x i32]] zeroinitializer, align 16
@old_salt = internal unnamed_addr global i32 0, align 4
@old_rawkey0 = internal unnamed_addr global i32 0, align 4
@old_rawkey1 = internal unnamed_addr global i32 0, align 4
@key_perm_maskl = internal unnamed_addr global [8 x [128 x i32]] zeroinitializer, align 16
@key_perm_maskr = internal unnamed_addr global [8 x [128 x i32]] zeroinitializer, align 16
@key_shifts = internal unnamed_addr constant [16 x i8] c"\01\01\02\02\02\02\02\02\01\02\02\02\02\02\02\01", align 16
@comp_maskl = internal unnamed_addr global [8 x [128 x i32]] zeroinitializer, align 16
@comp_maskr = internal unnamed_addr global [8 x [128 x i32]] zeroinitializer, align 16
@bits32 = internal global [32 x i32] [i32 -2147483648, i32 1073741824, i32 536870912, i32 268435456, i32 134217728, i32 67108864, i32 33554432, i32 16777216, i32 8388608, i32 4194304, i32 2097152, i32 1048576, i32 524288, i32 262144, i32 131072, i32 65536, i32 32768, i32 16384, i32 8192, i32 4096, i32 2048, i32 1024, i32 512, i32 256, i32 128, i32 64, i32 32, i32 16, i32 8, i32 4, i32 2, i32 1], align 16
@bits28 = internal unnamed_addr global i32* null, align 8
@bits24 = internal unnamed_addr global i32* null, align 8
@sbox = internal unnamed_addr constant [8 x [64 x i8]] [[64 x i8] c"\0E\04\0D\01\02\0F\0B\08\03\0A\06\0C\05\09\00\07\00\0F\07\04\0E\02\0D\01\0A\06\0C\0B\09\05\03\08\04\01\0E\08\0D\06\02\0B\0F\0C\09\07\03\0A\05\00\0F\0C\08\02\04\09\01\07\05\0B\03\0E\0A\00\06\0D", [64 x i8] c"\0F\01\08\0E\06\0B\03\04\09\07\02\0D\0C\00\05\0A\03\0D\04\07\0F\02\08\0E\0C\00\01\0A\06\09\0B\05\00\0E\07\0B\0A\04\0D\01\05\08\0C\06\09\03\02\0F\0D\08\0A\01\03\0F\04\02\0B\06\07\0C\00\05\0E\09", [64 x i8] c"\0A\00\09\0E\06\03\0F\05\01\0D\0C\07\0B\04\02\08\0D\07\00\09\03\04\06\0A\02\08\05\0E\0C\0B\0F\01\0D\06\04\09\08\0F\03\00\0B\01\02\0C\05\0A\0E\07\01\0A\0D\00\06\09\08\07\04\0F\0E\03\0B\05\02\0C", [64 x i8] c"\07\0D\0E\03\00\06\09\0A\01\02\08\05\0B\0C\04\0F\0D\08\0B\05\06\0F\00\03\04\07\02\0C\01\0A\0E\09\0A\06\09\00\0C\0B\07\0D\0F\01\03\0E\05\02\08\04\03\0F\00\06\0A\01\0D\08\09\04\05\0B\0C\07\02\0E", [64 x i8] c"\02\0C\04\01\07\0A\0B\06\08\05\03\0F\0D\00\0E\09\0E\0B\02\0C\04\07\0D\01\05\00\0F\0A\03\09\08\06\04\02\01\0B\0A\0D\07\08\0F\09\0C\05\06\03\00\0E\0B\08\0C\07\01\0E\02\0D\06\0F\00\09\0A\04\05\03", [64 x i8] c"\0C\01\0A\0F\09\02\06\08\00\0D\03\04\0E\07\05\0B\0A\0F\04\02\07\0C\09\05\06\01\0D\0E\00\0B\03\08\09\0E\0F\05\02\08\0C\03\07\00\04\0A\01\0D\0B\06\04\03\02\0C\09\05\0F\0A\0B\0E\01\07\06\00\08\0D", [64 x i8] c"\04\0B\02\0E\0F\00\08\0D\03\0C\09\07\05\0A\06\01\0D\00\0B\07\04\09\01\0A\0E\03\05\0C\02\0F\08\06\01\04\0B\0D\0C\03\07\0E\0A\0F\06\08\00\05\09\02\06\0B\0D\08\01\04\0A\07\09\05\00\0F\0E\02\03\0C", [64 x i8] c"\0D\02\08\04\06\0F\0B\01\0A\09\03\0E\05\00\0C\07\01\0F\0D\08\0A\03\07\04\0C\05\06\0B\00\0E\09\02\07\0B\04\01\09\0C\0E\02\00\06\0A\0D\0F\03\05\08\02\01\0E\07\04\0A\08\0D\0F\0C\09\00\03\05\06\0B"], align 16
@u_sbox = internal unnamed_addr global [8 x [64 x i8]] zeroinitializer, align 16
@IP = internal unnamed_addr constant [64 x i8] c":2*\22\1A\12\0A\02<4,$\1C\14\0C\04>6.&\1E\16\0E\06@80( \18\10\0891)!\19\11\09\01;3+#\1B\13\0B\03=5-%\1D\15\0D\05?7/'\1F\17\0F\07", align 16
@final_perm = internal unnamed_addr global [64 x i8] zeroinitializer, align 16
@init_perm = internal unnamed_addr global [64 x i8] zeroinitializer, align 16
@inv_key_perm = internal unnamed_addr global [64 x i8] zeroinitializer, align 16
@key_perm = internal unnamed_addr constant [56 x i8] c"91)!\19\11\09\01:2*\22\1A\12\0A\02;3+#\1B\13\0B\03<4,$?7/'\1F\17\0F\07>6.&\1E\16\0E\06=5-%\1D\15\0D\05\1C\14\0C\04", align 16
@inv_comp_perm = internal unnamed_addr global [56 x i8] zeroinitializer, align 16
@comp_perm = internal unnamed_addr constant [48 x i8] c"\0E\11\0B\18\01\05\03\1C\0F\06\15\0A\17\13\0C\04\1A\08\10\07\1B\14\0D\02)4\1F%/7\1E(3-!0,1'8\225.*2$\1D ", align 16
@bits8 = internal unnamed_addr constant [8 x i8] c"\80@ \10\08\04\02\01", align 1
@pbox = internal unnamed_addr constant [32 x i8] c"\10\07\14\15\1D\0C\1C\11\01\0F\17\1A\05\12\1F\0A\02\08\18\0E \1B\03\09\13\0D\1E\06\16\0B\04\19", align 16
@un_pbox = internal unnamed_addr global [32 x i8] zeroinitializer, align 16

; Function Attrs: nounwind ssp uwtable
define void @wear() #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([5 x i8]* @.str, i64 0, i64 0), i32 93) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %33, label %3

; <label>:3                                       ; preds = %0
  %4 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %5 = icmp eq %union.thing* %4, null
  br i1 %5, label %12, label %6

; <label>:6                                       ; preds = %3
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([29 x i8]* @.str1, i64 0, i64 0)) #8
  %7 = load i8* @terse, align 1, !tbaa !5, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %6
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([36 x i8]* @.str2, i64 0, i64 0)) #8
  br label %10

; <label>:10                                      ; preds = %9, %6
  %11 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %33

; <label>:12                                      ; preds = %3
  %13 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %14 = load i32* %13, align 4, !tbaa !8
  %15 = icmp eq i32 %14, 93
  br i1 %15, label %18, label %16

; <label>:16                                      ; preds = %12
  %17 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([20 x i8]* @.str3, i64 0, i64 0)) #8
  br label %33

; <label>:18                                      ; preds = %12
  %19 = bitcast %union.thing* %1 to %struct.anon.0*
  %20 = tail call i32 @spread(i32 1) #8
  tail call void @do_daemons(i32 %20) #8
  %21 = tail call i32 @spread(i32 1) #8
  tail call void @do_fuses(i32 %21) #8
  %22 = tail call i32 @spread(i32 2) #8
  tail call void @do_daemons(i32 %22) #8
  %23 = tail call i32 @spread(i32 2) #8
  tail call void @do_fuses(i32 %23) #8
  %24 = getelementptr inbounds %struct.anon.0* %19, i64 0, i32 14
  %25 = load i32* %24, align 4, !tbaa !12
  %26 = or i32 %25, 2
  store i32 %26, i32* %24, align 4, !tbaa !12
  %27 = tail call i8* @inv_name(%union.thing* %1, i1 zeroext true) #8
  store %union.thing* %1, %union.thing** @cur_armor, align 8, !tbaa !1
  %28 = load i8* @terse, align 1, !tbaa !5, !range !7
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %18
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str4, i64 0, i64 0)) #8
  br label %31

; <label>:31                                      ; preds = %30, %18
  %32 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([11 x i8]* @.str5, i64 0, i64 0), i8* %27) #8
  br label %33

; <label>:33                                      ; preds = %31, %16, %10, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @take_off() #0 {
  %1 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %3, label %10

; <label>:3                                       ; preds = %0
  store i8 0, i8* @after, align 1, !tbaa !5
  %4 = load i8* @terse, align 1, !tbaa !5, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

; <label>:6                                       ; preds = %3
  %7 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([18 x i8]* @.str6, i64 0, i64 0)) #8
  br label %24

; <label>:8                                       ; preds = %3
  %9 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([29 x i8]* @.str7, i64 0, i64 0)) #8
  br label %24

; <label>:10                                      ; preds = %0
  %11 = tail call zeroext i1 @dropcheck(%union.thing* %1) #8
  br i1 %11, label %12, label %24

; <label>:12                                      ; preds = %10
  store %union.thing* null, %union.thing** @cur_armor, align 8, !tbaa !1
  %13 = load i8* @terse, align 1, !tbaa !5, !range !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %12
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([4 x i8]* @.str8, i64 0, i64 0)) #8
  br label %17

; <label>:16                                      ; preds = %12
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([15 x i8]* @.str9, i64 0, i64 0)) #8
  br label %17

; <label>:17                                      ; preds = %16, %15
  %18 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9
  %19 = bitcast %struct.stats* %18 to i8*
  %20 = load i8* %19, align 1, !tbaa !13
  %21 = sext i8 %20 to i32
  %22 = tail call i8* @inv_name(%union.thing* %1, i1 zeroext true) #8
  %23 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([16 x i8]* @.str10, i64 0, i64 0), i32 %21, i8* %22) #8
  br label %24

; <label>:24                                      ; preds = %17, %10, %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @waste_time() #0 {
  %1 = tail call i32 @spread(i32 1) #8
  tail call void @do_daemons(i32 %1) #8
  %2 = tail call i32 @spread(i32 1) #8
  tail call void @do_fuses(i32 %2) #8
  %3 = tail call i32 @spread(i32 2) #8
  tail call void @do_daemons(i32 %3) #8
  %4 = tail call i32 @spread(i32 2) #8
  tail call void @do_fuses(i32 %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @runners() #0 {
  %1 = load %union.thing** @mlist, align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %move_monst.exit.thread._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %move_monst.exit.thread.backedge, %0
  %tp.06 = phi %union.thing* [ %4, %move_monst.exit.thread.backedge ], [ %1, %0 ]
  %3 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 0
  %4 = load %union.thing** %3, align 8, !tbaa !14
  %5 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 8
  %6 = load i16* %5, align 2, !tbaa !18
  %7 = and i16 %6, 8448
  %8 = icmp eq i16 %7, 8192
  br i1 %8, label %9, label %move_monst.exit.thread.backedge

; <label>:9                                       ; preds = %.lr.ph
  %10 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 2
  %11 = bitcast %struct.coord* %10 to i64*
  %12 = load i64* %11, align 4
  store i64 %12, i64* bitcast (%struct.coord* @runners.orig_pos to i64*), align 8
  %13 = load i16* %5, align 2, !tbaa !18
  %14 = and i16 %13, 128
  %15 = icmp eq i16 %14, 0
  %16 = icmp slt i16 %13, 0
  br i1 %16, label %17, label %21

; <label>:17                                      ; preds = %9
  %18 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 3
  %19 = load i8* %18, align 1, !tbaa !19, !range !7
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

; <label>:21                                      ; preds = %17, %9
  %22 = tail call i32 @do_chase(%union.thing* %tp.06) #8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %move_monst.exit.thread.backedge, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %21
  %.pre.i = load i16* %5, align 2, !tbaa !18
  br label %24

; <label>:24                                      ; preds = %._crit_edge.i, %17
  %25 = phi i16 [ %.pre.i, %._crit_edge.i ], [ %13, %17 ]
  %26 = and i16 %25, 64
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %31, label %28

; <label>:28                                      ; preds = %24
  %29 = tail call i32 @do_chase(%union.thing* %tp.06) #8
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %move_monst.exit.thread.backedge, label %._crit_edge

._crit_edge:                                      ; preds = %28
  %.pre = load i16* %5, align 2, !tbaa !18
  br label %31

; <label>:31                                      ; preds = %._crit_edge, %24
  %32 = phi i16 [ %.pre, %._crit_edge ], [ %25, %24 ]
  %33 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 3
  %34 = load i8* %33, align 1, !tbaa !19, !range !7
  %35 = xor i8 %34, 1
  store i8 %35, i8* %33, align 1, !tbaa !19
  %36 = and i16 %32, 16384
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %move_monst.exit5, label %38

; <label>:38                                      ; preds = %31
  %39 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !20
  %40 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !21
  %41 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 2, i32 1
  %42 = load i32* %41, align 4, !tbaa !20
  %43 = getelementptr inbounds %struct.coord* %10, i64 0, i32 0
  %44 = load i32* %43, align 4, !tbaa !21
  %45 = sub nsw i32 %44, %40
  %46 = mul nsw i32 %45, %45
  %47 = sub nsw i32 %42, %39
  %48 = mul nsw i32 %47, %47
  %49 = add nsw i32 %46, %48
  %50 = icmp sgt i32 %49, 2
  br i1 %50, label %51, label %move_monst.exit5

; <label>:51                                      ; preds = %38
  %52 = icmp slt i16 %32, 0
  %53 = icmp eq i8 %34, 1
  %or.cond = and i1 %52, %53
  br i1 %or.cond, label %57, label %54

; <label>:54                                      ; preds = %51
  %55 = tail call i32 @do_chase(%union.thing* %tp.06) #8
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %move_monst.exit5, label %._crit_edge.i3

._crit_edge.i3:                                   ; preds = %54
  %.pre.i2 = load i16* %5, align 2, !tbaa !18
  br label %57

; <label>:57                                      ; preds = %._crit_edge.i3, %51
  %58 = phi i16 [ %.pre.i2, %._crit_edge.i3 ], [ %32, %51 ]
  %59 = and i16 %58, 64
  %60 = icmp eq i16 %59, 0
  br i1 %60, label %64, label %61

; <label>:61                                      ; preds = %57
  %62 = tail call i32 @do_chase(%union.thing* %tp.06) #8
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %move_monst.exit5, label %64

; <label>:64                                      ; preds = %61, %57
  %65 = load i8* %33, align 1, !tbaa !19, !range !7
  %66 = xor i8 %65, 1
  store i8 %66, i8* %33, align 1, !tbaa !19
  br label %move_monst.exit5

move_monst.exit5:                                 ; preds = %64, %61, %54, %38, %31
  br i1 %15, label %move_monst.exit.thread.backedge, label %68

move_monst.exit.thread.backedge:                  ; preds = %80, %74, %move_monst.exit5, %28, %21, %.lr.ph
  %67 = icmp eq %union.thing* %4, null
  br i1 %67, label %move_monst.exit.thread._crit_edge, label %.lr.ph

; <label>:68                                      ; preds = %move_monst.exit5
  %69 = load i64* bitcast (%struct.coord* @runners.orig_pos to i64*), align 8
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %struct.coord* %10, i64 0, i32 0
  %72 = load i32* %71, align 4, !tbaa !22
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %80

; <label>:74                                      ; preds = %68
  %75 = lshr i64 %69, 32
  %76 = trunc i64 %75 to i32
  %77 = getelementptr inbounds %union.thing* %tp.06, i64 0, i32 0, i32 2, i32 1
  %78 = load i32* %77, align 4, !tbaa !23
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %move_monst.exit.thread.backedge, label %80

; <label>:80                                      ; preds = %74, %68
  %81 = load i16* %5, align 2, !tbaa !18
  %82 = and i16 %81, -129
  store i16 %82, i16* %5, align 2, !tbaa !18
  store i8 0, i8* @to_death, align 1, !tbaa !5
  br label %move_monst.exit.thread.backedge

move_monst.exit.thread._crit_edge:                ; preds = %move_monst.exit.thread.backedge, %0
  %83 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

; <label>:85                                      ; preds = %move_monst.exit.thread._crit_edge
  %86 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  br label %87

; <label>:87                                      ; preds = %85, %move_monst.exit.thread._crit_edge
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @move_monst(%union.thing* %tp) #0 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 8
  %2 = load i16* %1, align 2, !tbaa !18
  %3 = icmp slt i16 %2, 0
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 3
  %6 = load i8* %5, align 1, !tbaa !19, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %4, %0
  %9 = tail call i32 @do_chase(%union.thing* %tp)
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %22, label %._crit_edge

._crit_edge:                                      ; preds = %8
  %.pre = load i16* %1, align 2, !tbaa !18
  br label %11

; <label>:11                                      ; preds = %._crit_edge, %4
  %12 = phi i16 [ %.pre, %._crit_edge ], [ %2, %4 ]
  %13 = and i16 %12, 64
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %18, label %15

; <label>:15                                      ; preds = %11
  %16 = tail call i32 @do_chase(%union.thing* %tp)
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %22, label %18

; <label>:18                                      ; preds = %15, %11
  %19 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 3
  %20 = load i8* %19, align 1, !tbaa !19, !range !7
  %21 = xor i8 %20, 1
  store i8 %21, i8* %19, align 1, !tbaa !19
  br label %22

; <label>:22                                      ; preds = %18, %15, %8
  %.0 = phi i32 [ 0, %18 ], [ -1, %8 ], [ -1, %15 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @dist_cp(%struct.coord* nocapture readonly %c1, %struct.coord* nocapture readonly %c2) #1 {
  %1 = getelementptr inbounds %struct.coord* %c1, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !20
  %3 = getelementptr inbounds %struct.coord* %c1, i64 0, i32 0
  %4 = load i32* %3, align 4, !tbaa !21
  %5 = getelementptr inbounds %struct.coord* %c2, i64 0, i32 1
  %6 = load i32* %5, align 4, !tbaa !20
  %7 = getelementptr inbounds %struct.coord* %c2, i64 0, i32 0
  %8 = load i32* %7, align 4, !tbaa !21
  %9 = sub nsw i32 %8, %4
  %10 = mul nsw i32 %9, %9
  %11 = sub nsw i32 %6, %2
  %12 = mul nsw i32 %11, %11
  %13 = add nsw i32 %10, %12
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define i32 @do_chase(%union.thing* %th) #0 {
  %1 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 10
  %2 = load %struct.room** %1, align 8, !tbaa !24
  %3 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 8
  %4 = load i16* %3, align 2, !tbaa !18
  %5 = and i16 %4, 32
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %13, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.room* %2, i64 0, i32 3
  %9 = load i32* %8, align 4, !tbaa !25
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %7
  %12 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 7
  store %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord** %12, align 8, !tbaa !27
  br label %13

; <label>:13                                      ; preds = %11, %7, %0
  %14 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 7
  %15 = load %struct.coord** %14, align 8, !tbaa !27
  %16 = icmp eq %struct.coord* %15, getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)
  br i1 %16, label %17, label %19

; <label>:17                                      ; preds = %13
  %18 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  br label %roomin.exit

; <label>:19                                      ; preds = %13
  %20 = getelementptr inbounds %struct.coord* %15, i64 0, i32 0
  %21 = load i32* %20, align 4, !tbaa !21
  %22 = shl i32 %21, 5
  %23 = getelementptr inbounds %struct.coord* %15, i64 0, i32 1
  %24 = load i32* %23, align 4, !tbaa !20
  %25 = add nsw i32 %22, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %26, i32 1
  %28 = load i8* %27, align 1, !tbaa !28
  %29 = sext i8 %28 to i32
  %30 = and i32 %29, 128
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %.preheader.i, label %32

.preheader.i:                                     ; preds = %19
  br i1 true, label %.lr.ph.i, label %._crit_edge.i

; <label>:32                                      ; preds = %19
  %33 = and i32 %29, 15
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %34
  br label %roomin.exit

.lr.ph.i:                                         ; preds = %51, %.preheader.i
  %rp.03.i = phi %struct.room* [ %52, %51 ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader.i ]
  %36 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 0
  %37 = load i32* %36, align 4, !tbaa !29
  %38 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 0
  %39 = load i32* %38, align 4, !tbaa !30
  %40 = add nsw i32 %39, %37
  %41 = icmp sgt i32 %21, %40
  %42 = icmp sgt i32 %37, %21
  %or.cond.i = or i1 %41, %42
  br i1 %or.cond.i, label %51, label %43

; <label>:43                                      ; preds = %.lr.ph.i
  %44 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 1
  %45 = load i32* %44, align 4, !tbaa !31
  %46 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 1
  %47 = load i32* %46, align 4, !tbaa !32
  %48 = add nsw i32 %47, %45
  %49 = icmp sgt i32 %24, %48
  %50 = icmp sgt i32 %45, %24
  %or.cond1.i = or i1 %49, %50
  br i1 %or.cond1.i, label %51, label %roomin.exit

; <label>:51                                      ; preds = %43, %.lr.ph.i
  %52 = getelementptr inbounds %struct.room* %rp.03.i, i64 1
  %53 = icmp ult %struct.room* %52, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %53, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %51, %.preheader.i
  %54 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str112, i64 0, i64 0), i32 %24, i32 %21) #8
  br label %roomin.exit

roomin.exit:                                      ; preds = %._crit_edge.i, %43, %32, %17
  %ree.0 = phi %struct.room* [ %18, %17 ], [ %35, %32 ], [ null, %._crit_edge.i ], [ %rp.03.i, %43 ]
  %55 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 2
  %56 = getelementptr inbounds %struct.coord* %55, i64 0, i32 0
  %57 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 2, i32 1
  %58 = icmp eq %struct.room* %2, %ree.0
  br i1 %58, label %._crit_edge16, label %.lr.ph15

.lr.ph15:                                         ; preds = %roomin.exit
  %59 = load i32* %56, align 4, !tbaa !22
  %60 = load i32* %57, align 4, !tbaa !23
  %61 = shl i32 %59, 5
  %62 = add nsw i32 %61, %60
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %63, i32 0
  %65 = load i8* %64, align 8, !tbaa !33
  %66 = icmp eq i8 %65, 43
  br label %67

; <label>:67                                      ; preds = %98, %.lr.ph15
  %door.014 = phi i1 [ %66, %.lr.ph15 ], [ false, %98 ]
  %mindist.013 = phi i32 [ 32767, %.lr.ph15 ], [ %mindist.1.lcssa, %98 ]
  %rer.012 = phi %struct.room* [ %2, %.lr.ph15 ], [ %108, %98 ]
  %68 = getelementptr inbounds %struct.room* %rer.012, i64 0, i32 5
  %69 = load i32* %68, align 4, !tbaa !35
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %.lr.ph10, label %._crit_edge

.lr.ph10:                                         ; preds = %67
  %71 = getelementptr inbounds %struct.room* %rer.012, i64 0, i32 6, i64 0
  br label %72

; <label>:72                                      ; preds = %92, %.lr.ph10
  %73 = phi i32 [ %69, %.lr.ph10 ], [ %93, %92 ]
  %mindist.19 = phi i32 [ %mindist.013, %.lr.ph10 ], [ %mindist.2, %92 ]
  %cp.08 = phi %struct.coord* [ %71, %.lr.ph10 ], [ %94, %92 ]
  %74 = load %struct.coord** %14, align 8, !tbaa !27
  %75 = getelementptr inbounds %struct.coord* %74, i64 0, i32 1
  %76 = load i32* %75, align 4, !tbaa !20
  %77 = getelementptr inbounds %struct.coord* %74, i64 0, i32 0
  %78 = load i32* %77, align 4, !tbaa !21
  %79 = getelementptr inbounds %struct.coord* %cp.08, i64 0, i32 1
  %80 = load i32* %79, align 4, !tbaa !20
  %81 = getelementptr inbounds %struct.coord* %cp.08, i64 0, i32 0
  %82 = load i32* %81, align 4, !tbaa !21
  %83 = sub nsw i32 %82, %78
  %84 = mul nsw i32 %83, %83
  %85 = sub nsw i32 %80, %76
  %86 = mul nsw i32 %85, %85
  %87 = add nsw i32 %84, %86
  %88 = icmp slt i32 %87, %mindist.19
  br i1 %88, label %89, label %92

; <label>:89                                      ; preds = %72
  %90 = bitcast %struct.coord* %cp.08 to i64*
  %91 = load i64* %90, align 4
  store i64 %91, i64* bitcast (%struct.coord* @do_chase.this to i64*), align 8
  %.pre23 = load i32* %68, align 4, !tbaa !35
  br label %92

; <label>:92                                      ; preds = %89, %72
  %93 = phi i32 [ %.pre23, %89 ], [ %73, %72 ]
  %mindist.2 = phi i32 [ %87, %89 ], [ %mindist.19, %72 ]
  %94 = getelementptr inbounds %struct.coord* %cp.08, i64 1
  %95 = sext i32 %93 to i64
  %96 = getelementptr inbounds %struct.room* %rer.012, i64 0, i32 6, i64 %95
  %97 = icmp ult %struct.coord* %94, %96
  br i1 %97, label %72, label %._crit_edge

._crit_edge:                                      ; preds = %92, %67
  %mindist.1.lcssa = phi i32 [ %mindist.013, %67 ], [ %mindist.2, %92 ]
  br i1 %door.014, label %98, label %.loopexit11

; <label>:98                                      ; preds = %._crit_edge
  %99 = load i32* %56, align 4, !tbaa !22
  %100 = shl i32 %99, 5
  %101 = load i32* %57, align 4, !tbaa !23
  %102 = add nsw i32 %100, %101
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %103, i32 1
  %105 = load i8* %104, align 1, !tbaa !36
  %106 = zext i8 %105 to i64
  %107 = and i64 %106, 15
  %108 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %107
  %109 = icmp eq %struct.room* %108, %ree.0
  br i1 %109, label %._crit_edge16, label %67

._crit_edge16:                                    ; preds = %98, %roomin.exit
  %110 = load %struct.coord** %14, align 8, !tbaa !27
  %111 = bitcast %struct.coord* %110 to i64*
  %112 = load i64* %111, align 4
  store i64 %112, i64* bitcast (%struct.coord* @do_chase.this to i64*), align 8
  %113 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 4
  %114 = load i8* %113, align 1, !tbaa !37
  %115 = icmp eq i8 %114, 68
  br i1 %115, label %116, label %.loopexit11

; <label>:116                                     ; preds = %._crit_edge16
  %117 = load i32* %57, align 4, !tbaa !23
  %118 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %119 = icmp eq i32 %117, %118
  %.pre = load i32* %56, align 4, !tbaa !21
  br i1 %119, label %._crit_edge21, label %120

._crit_edge21:                                    ; preds = %116
  %.pre22 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !21
  br label %132

; <label>:120                                     ; preds = %116
  %121 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %122 = trunc i64 %121 to i32
  %123 = icmp eq i32 %.pre, %122
  %124 = lshr i64 %121, 32
  %125 = trunc i64 %124 to i32
  br i1 %123, label %132, label %126

; <label>:126                                     ; preds = %120
  %127 = sub nsw i32 %117, %118
  %ispos = icmp sgt i32 %127, -1
  %neg = sub i32 0, %127
  %128 = select i1 %ispos, i32 %127, i32 %neg
  %129 = sub nsw i32 %.pre, %122
  %ispos1 = icmp sgt i32 %129, -1
  %neg2 = sub i32 0, %129
  %130 = select i1 %ispos1, i32 %129, i32 %neg2
  %131 = icmp eq i32 %128, %130
  br i1 %131, label %132, label %.loopexit11

; <label>:132                                     ; preds = %126, %120, %._crit_edge21
  %133 = phi i32 [ %.pre22, %._crit_edge21 ], [ %122, %126 ], [ %.pre, %120 ]
  %134 = phi i32 [ %117, %._crit_edge21 ], [ %125, %126 ], [ %125, %120 ]
  %135 = sub nsw i32 %133, %.pre
  %136 = mul nsw i32 %135, %135
  %137 = sub nsw i32 %134, %117
  %138 = mul nsw i32 %137, %137
  %139 = add nsw i32 %136, %138
  %140 = icmp slt i32 %139, 37
  br i1 %140, label %141, label %.loopexit11

; <label>:141                                     ; preds = %132
  %142 = load i16* %3, align 2, !tbaa !18
  %143 = and i16 %142, 8
  %144 = icmp eq i16 %143, 0
  br i1 %144, label %145, label %.loopexit11

; <label>:145                                     ; preds = %141
  %146 = tail call i32 @rnd(i32 5) #8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %.loopexit11

; <label>:148                                     ; preds = %145
  %149 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %150 = load i32* %57, align 4, !tbaa !23
  %151 = sub nsw i32 %149, %150
  %152 = tail call i32 @sign(i32 %151) #8
  store i32 %152, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %153 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %154 = load i32* %56, align 4, !tbaa !22
  %155 = sub nsw i32 %153, %154
  %156 = tail call i32 @sign(i32 %155) #8
  store i32 %156, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %157 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %161, label %159

; <label>:159                                     ; preds = %148
  %160 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %161

; <label>:161                                     ; preds = %159, %148
  tail call void @fire_bolt(%struct.coord* %55, %struct.coord* @delta, i8* getelementptr inbounds ([6 x i8]* @.str11, i64 0, i64 0)) #8
  store i8 0, i8* @running, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  store i32 0, i32* @quiet, align 4, !tbaa !38
  %162 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %236, label %164

; <label>:164                                     ; preds = %161
  %165 = load i16* %3, align 2, !tbaa !18
  %166 = and i16 %165, 128
  %167 = icmp eq i16 %166, 0
  br i1 %167, label %168, label %236

; <label>:168                                     ; preds = %164
  store i8 0, i8* @to_death, align 1, !tbaa !5
  store i8 0, i8* @kamikaze, align 1, !tbaa !5
  br label %236

.loopexit11:                                      ; preds = %145, %141, %132, %126, %._crit_edge16, %._crit_edge
  %169 = tail call zeroext i1 @chase(%union.thing* %th, %struct.coord* @do_chase.this)
  br i1 %169, label %218, label %170

; <label>:170                                     ; preds = %.loopexit11
  %171 = load i64* bitcast (%struct.coord* @do_chase.this to i64*), align 8
  %172 = trunc i64 %171 to i32
  %173 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %174 = trunc i64 %173 to i32
  %175 = icmp eq i32 %172, %174
  %176 = lshr i64 %171, 32
  %177 = trunc i64 %176 to i32
  br i1 %175, label %178, label %184

; <label>:178                                     ; preds = %170
  %179 = lshr i64 %173, 32
  %180 = trunc i64 %179 to i32
  %181 = icmp eq i32 %177, %180
  br i1 %181, label %182, label %184

; <label>:182                                     ; preds = %178
  %183 = tail call i32 @attack(%union.thing* %th) #8
  br label %236

; <label>:184                                     ; preds = %178, %170
  %185 = load %struct.coord** %14, align 8, !tbaa !27
  %186 = getelementptr inbounds %struct.coord* %185, i64 0, i32 0
  %187 = load i32* %186, align 4, !tbaa !21
  %188 = icmp eq i32 %172, %187
  br i1 %188, label %189, label %.critedge4

; <label>:189                                     ; preds = %184
  %190 = getelementptr inbounds %struct.coord* %185, i64 0, i32 1
  %191 = load i32* %190, align 4, !tbaa !20
  %192 = icmp eq i32 %177, %191
  br i1 %192, label %.preheader, label %.critedge3

.preheader:                                       ; preds = %189
  %obj.06 = load %union.thing** @lvl_obj, align 8
  %193 = icmp eq %union.thing* %obj.06, null
  br i1 %193, label %.loopexit, label %.lr.ph

; <label>:194                                     ; preds = %.lr.ph
  %195 = getelementptr inbounds %union.thing* %obj.07, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %195, align 8
  %196 = icmp eq %union.thing* %obj.0, null
  br i1 %196, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %194, %.preheader
  %obj.07 = phi %union.thing* [ %obj.0, %194 ], [ %obj.06, %.preheader ]
  %197 = getelementptr inbounds %union.thing* %obj.07, i64 0, i32 0, i32 2, i32 1
  %198 = bitcast i32* %197 to %struct.coord*
  %199 = icmp eq %struct.coord* %185, %198
  br i1 %199, label %200, label %194

; <label>:200                                     ; preds = %.lr.ph
  tail call void @_detach(%union.thing** @lvl_obj, %union.thing* %obj.07) #8
  %201 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 11
  tail call void @_attach(%union.thing** %201, %union.thing* %obj.07) #8
  %202 = load %struct.room** %1, align 8, !tbaa !24
  %203 = getelementptr inbounds %struct.room* %202, i64 0, i32 4
  %204 = load i16* %203, align 2, !tbaa !39
  %205 = and i16 %204, 2
  %206 = icmp ne i16 %205, 0
  %207 = select i1 %206, i8 35, i8 46
  %208 = load i32* %197, align 4, !tbaa !40
  %209 = shl i32 %208, 5
  %210 = getelementptr inbounds i32* %197, i64 1
  %211 = load i32* %210, align 4, !tbaa !41
  %212 = add nsw i32 %209, %211
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %213, i32 0
  store i8 %207, i8* %214, align 8, !tbaa !33
  %215 = tail call %struct.coord* @find_dest(%union.thing* %th)
  store %struct.coord* %215, %struct.coord** %14, align 8, !tbaa !27
  br label %.loopexit

.loopexit:                                        ; preds = %200, %194, %.preheader
  %216 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 4
  %217 = load i8* %216, align 1, !tbaa !37
  %not. = icmp eq i8 %217, 70
  tail call void @relocate(%union.thing* %th, %struct.coord* @ch_ret)
  br i1 %not., label %236, label %222

; <label>:218                                     ; preds = %.loopexit11
  %219 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 4
  %220 = load i8* %219, align 1, !tbaa !37
  %221 = icmp eq i8 %220, 70
  br i1 %221, label %236, label %.critedge

; <label>:222                                     ; preds = %.loopexit
  %223 = load i32* %56, align 4, !tbaa !22
  %224 = load %struct.coord** %14, align 8, !tbaa !27
  %225 = getelementptr inbounds %struct.coord* %224, i64 0, i32 0
  %226 = load i32* %225, align 4, !tbaa !21
  %227 = icmp eq i32 %223, %226
  br i1 %227, label %228, label %236

; <label>:228                                     ; preds = %222
  %229 = load i32* %57, align 4, !tbaa !23
  %230 = getelementptr inbounds %struct.coord* %224, i64 0, i32 1
  %231 = load i32* %230, align 4, !tbaa !20
  %232 = icmp eq i32 %229, %231
  br i1 %232, label %233, label %236

; <label>:233                                     ; preds = %228
  %234 = load i16* %3, align 2, !tbaa !18
  %235 = and i16 %234, -8193
  store i16 %235, i16* %3, align 2, !tbaa !18
  br label %236

.critedge:                                        ; preds = %218
  tail call void @relocate(%union.thing* %th, %struct.coord* @ch_ret)
  br label %236

.critedge3:                                       ; preds = %189
  tail call void @relocate(%union.thing* %th, %struct.coord* @ch_ret)
  br label %236

.critedge4:                                       ; preds = %184
  tail call void @relocate(%union.thing* %th, %struct.coord* @ch_ret)
  br label %236

; <label>:236                                     ; preds = %.critedge4, %.critedge3, %.critedge, %233, %228, %222, %218, %.loopexit, %182, %168, %164, %161
  %.0 = phi i32 [ %183, %182 ], [ 0, %164 ], [ 0, %161 ], [ 0, %168 ], [ 0, %218 ], [ 0, %.critedge4 ], [ 0, %.critedge3 ], [ 0, %.critedge ], [ 0, %233 ], [ 0, %228 ], [ 0, %222 ], [ 0, %.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @relocate(%union.thing* %th, %struct.coord* nocapture readonly %new_loc) #0 {
  %1 = getelementptr inbounds %struct.coord* %new_loc, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 2
  %4 = getelementptr inbounds %struct.coord* %3, i64 0, i32 0
  %5 = load i32* %4, align 4, !tbaa !22
  %6 = icmp eq i32 %2, %5
  br i1 %6, label %7, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 2, i32 1
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !23
  br label %13

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.coord* %new_loc, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !20
  %10 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 2, i32 1
  %11 = load i32* %10, align 4, !tbaa !23
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %74, label %13

; <label>:13                                      ; preds = %7, %._crit_edge
  %14 = phi i32 [ %.pre, %._crit_edge ], [ %11, %7 ]
  %15 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %16 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 2, i32 1
  %17 = tail call i32 @wmove(%struct._win_st* %15, i32 %14, i32 %5) #8
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %25, label %19

; <label>:19                                      ; preds = %13
  %20 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %21 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 6
  %22 = load i8* %21, align 1, !tbaa !42
  %23 = sext i8 %22 to i32
  %24 = tail call i32 @waddch(%struct._win_st* %20, i32 %23) #8
  br label %25

; <label>:25                                      ; preds = %19, %13
  %26 = load i32* %1, align 4, !tbaa !21
  %27 = shl i32 %26, 5
  %28 = getelementptr inbounds %struct.coord* %new_loc, i64 0, i32 1
  %29 = load i32* %28, align 4, !tbaa !20
  %30 = add nsw i32 %27, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %31, i32 1
  %33 = load i8* %32, align 1, !tbaa !28
  %34 = sext i8 %33 to i32
  %35 = and i32 %34, 128
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %.preheader.i, label %37

.preheader.i:                                     ; preds = %25
  br i1 true, label %.lr.ph.i, label %._crit_edge.i

; <label>:37                                      ; preds = %25
  %38 = and i32 %34, 15
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %39
  br label %.loopexit

.lr.ph.i:                                         ; preds = %56, %.preheader.i
  %rp.03.i = phi %struct.room* [ %57, %56 ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader.i ]
  %41 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 0
  %42 = load i32* %41, align 4, !tbaa !29
  %43 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 0
  %44 = load i32* %43, align 4, !tbaa !30
  %45 = add nsw i32 %44, %42
  %46 = icmp sgt i32 %26, %45
  %47 = icmp sgt i32 %42, %26
  %or.cond.i = or i1 %46, %47
  br i1 %or.cond.i, label %56, label %48

; <label>:48                                      ; preds = %.lr.ph.i
  %49 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 1
  %50 = load i32* %49, align 4, !tbaa !31
  %51 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 1
  %52 = load i32* %51, align 4, !tbaa !32
  %53 = add nsw i32 %52, %50
  %54 = icmp sgt i32 %29, %53
  %55 = icmp sgt i32 %50, %29
  %or.cond1.i = or i1 %54, %55
  br i1 %or.cond1.i, label %56, label %.loopexit

; <label>:56                                      ; preds = %48, %.lr.ph.i
  %57 = getelementptr inbounds %struct.room* %rp.03.i, i64 1
  %58 = icmp ult %struct.room* %57, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %58, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %56, %.preheader.i
  %59 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str112, i64 0, i64 0), i32 %29, i32 %26) #8
  br label %.loopexit

.loopexit:                                        ; preds = %._crit_edge.i, %48, %37
  %.0.i = phi %struct.room* [ %40, %37 ], [ null, %._crit_edge.i ], [ %rp.03.i, %48 ]
  %60 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 10
  store %struct.room* %.0.i, %struct.room** %60, align 8, !tbaa !24
  tail call void @set_oldch(%union.thing* %th, %struct.coord* %new_loc)
  %61 = load i32* %4, align 4, !tbaa !22
  %62 = shl i32 %61, 5
  %63 = load i32* %16, align 4, !tbaa !23
  %64 = add nsw i32 %62, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %65, i32 2
  store %union.thing* null, %union.thing** %66, align 8, !tbaa !43
  %.phi.trans.insert3 = bitcast %struct.coord* %new_loc to i64*
  %.pre4 = load i64* %.phi.trans.insert3, align 4
  %67 = bitcast %struct.coord* %3 to i64*
  store i64 %.pre4, i64* %67, align 4
  %68 = load i32* %1, align 4, !tbaa !21
  %69 = shl i32 %68, 5
  %70 = load i32* %28, align 4, !tbaa !20
  %71 = add nsw i32 %69, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %72, i32 2
  store %union.thing* %th, %union.thing** %73, align 8, !tbaa !43
  br label %74

; <label>:74                                      ; preds = %.loopexit, %7
  %75 = phi i32 [ %68, %.loopexit ], [ %2, %7 ]
  %76 = phi i32 [ %70, %.loopexit ], [ %9, %7 ]
  %77 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %78 = tail call i32 @wmove(%struct._win_st* %77, i32 %76, i32 %75) #8
  %79 = tail call zeroext i1 @see_monst(%union.thing* %th)
  br i1 %79, label %80, label %86

; <label>:80                                      ; preds = %74
  %81 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %82 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 5
  %83 = load i8* %82, align 1, !tbaa !44
  %84 = sext i8 %83 to i32
  %85 = tail call i32 @waddch(%struct._win_st* %81, i32 %84) #8
  br label %99

; <label>:86                                      ; preds = %74
  %87 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %88 = and i16 %87, 16384
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %99, label %90

; <label>:90                                      ; preds = %86
  %91 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %92 = getelementptr inbounds %struct._win_st* %91, i64 0, i32 7
  store i32 65536, i32* %92, align 4, !tbaa !45
  %93 = getelementptr inbounds %union.thing* %th, i64 0, i32 0, i32 4
  %94 = load i8* %93, align 1, !tbaa !37
  %95 = sext i8 %94 to i32
  %96 = tail call i32 @waddch(%struct._win_st* %91, i32 %95) #8
  %97 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %98 = getelementptr inbounds %struct._win_st* %97, i64 0, i32 7
  store i32 0, i32* %98, align 4, !tbaa !45
  br label %99

; <label>:99                                      ; preds = %90, %86, %80
  ret void
}

declare i32 @wmove(%struct._win_st*, i32, i32) #2

declare i32 @waddch(%struct._win_st*, i32) #2

; Function Attrs: nounwind ssp uwtable
define %struct.room* @roomin(%struct.coord* nocapture readonly %cp) #0 {
  %1 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = shl i32 %2, 5
  %4 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %5 = load i32* %4, align 4, !tbaa !20
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 1
  %9 = load i8* %8, align 1, !tbaa !28
  %10 = sext i8 %9 to i32
  %11 = and i32 %10, 128
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %.preheader, label %13

.preheader:                                       ; preds = %0
  br i1 true, label %.lr.ph, label %._crit_edge

; <label>:13                                      ; preds = %0
  %14 = and i32 %10, 15
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %15
  br label %.loopexit

.lr.ph:                                           ; preds = %32, %.preheader
  %rp.03 = phi %struct.room* [ %33, %32 ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader ]
  %17 = getelementptr inbounds %struct.room* %rp.03, i64 0, i32 0, i32 0
  %18 = load i32* %17, align 4, !tbaa !29
  %19 = getelementptr inbounds %struct.room* %rp.03, i64 0, i32 1, i32 0
  %20 = load i32* %19, align 4, !tbaa !30
  %21 = add nsw i32 %20, %18
  %22 = icmp sgt i32 %2, %21
  %23 = icmp sgt i32 %18, %2
  %or.cond = or i1 %22, %23
  br i1 %or.cond, label %32, label %24

; <label>:24                                      ; preds = %.lr.ph
  %25 = getelementptr inbounds %struct.room* %rp.03, i64 0, i32 0, i32 1
  %26 = load i32* %25, align 4, !tbaa !31
  %27 = getelementptr inbounds %struct.room* %rp.03, i64 0, i32 1, i32 1
  %28 = load i32* %27, align 4, !tbaa !32
  %29 = add nsw i32 %28, %26
  %30 = icmp sgt i32 %5, %29
  %31 = icmp sgt i32 %26, %5
  %or.cond1 = or i1 %30, %31
  br i1 %or.cond1, label %32, label %.loopexit

; <label>:32                                      ; preds = %24, %.lr.ph
  %33 = getelementptr inbounds %struct.room* %rp.03, i64 1
  %34 = icmp ult %struct.room* %33, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %34, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %32, %.preheader
  %35 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str112, i64 0, i64 0), i32 %5, i32 %2) #8
  br label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %24, %13
  %.0 = phi %struct.room* [ %16, %13 ], [ null, %._crit_edge ], [ %rp.03, %24 ]
  ret %struct.room* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @set_oldch(%union.thing* nocapture %tp, %struct.coord* nocapture readonly %cp) #0 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2, i32 0
  %2 = load i32* %1, align 4, !tbaa !22
  %3 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %4 = load i32* %3, align 4, !tbaa !21
  %5 = icmp eq i32 %2, %4
  br i1 %5, label %6, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !20
  br label %12

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2, i32 1
  %8 = load i32* %7, align 4, !tbaa !23
  %9 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %10 = load i32* %9, align 4, !tbaa !20
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %58, label %12

; <label>:12                                      ; preds = %6, %._crit_edge
  %13 = phi i32 [ %.pre, %._crit_edge ], [ %10, %6 ]
  %14 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 6
  %15 = load i8* %14, align 1, !tbaa !42
  %16 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %17 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %18 = tail call i32 @wmove(%struct._win_st* %16, i32 %13, i32 %4) #8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %23, label %20

; <label>:20                                      ; preds = %12
  %21 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %22 = tail call i32 @winch(%struct._win_st* %21) #8
  %phitmp1 = trunc i32 %22 to i8
  br label %23

; <label>:23                                      ; preds = %20, %12
  %24 = phi i8 [ %phitmp1, %20 ], [ -1, %12 ]
  store i8 %24, i8* %14, align 1, !tbaa !42
  %25 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %26 = and i16 %25, 4
  %27 = icmp eq i16 %26, 0
  br i1 %27, label %28, label %58

; <label>:28                                      ; preds = %23
  %29 = icmp eq i8 %15, 46
  %30 = icmp eq i8 %24, 46
  %or.cond = or i1 %29, %30
  br i1 %or.cond, label %31, label %39

; <label>:31                                      ; preds = %28
  %32 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 10
  %33 = load %struct.room** %32, align 8, !tbaa !24
  %34 = getelementptr inbounds %struct.room* %33, i64 0, i32 4
  %35 = load i16* %34, align 2, !tbaa !39
  %36 = and i16 %35, 1
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %39, label %38

; <label>:38                                      ; preds = %31
  store i8 32, i8* %14, align 1, !tbaa !42
  br label %58

; <label>:39                                      ; preds = %31, %28
  %40 = load i32* %17, align 4, !tbaa !20
  %41 = load i32* %3, align 4, !tbaa !21
  %42 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !20
  %43 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !21
  %44 = sub nsw i32 %43, %41
  %45 = mul nsw i32 %44, %44
  %46 = sub nsw i32 %42, %40
  %47 = mul nsw i32 %46, %46
  %48 = add nsw i32 %45, %47
  %49 = icmp sgt i32 %48, 3
  %50 = load i8* @see_floor, align 1
  %51 = icmp eq i8 %50, 0
  %or.cond3 = or i1 %49, %51
  br i1 %or.cond3, label %58, label %52

; <label>:52                                      ; preds = %39
  %53 = shl i32 %41, 5
  %54 = add nsw i32 %53, %40
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %55, i32 0
  %57 = load i8* %56, align 8, !tbaa !33
  store i8 %57, i8* %14, align 1, !tbaa !42
  br label %58

; <label>:58                                      ; preds = %52, %39, %38, %23, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.coord* @find_dest(%union.thing* nocapture readonly %tp) #0 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 4
  %2 = load i8* %1, align 1, !tbaa !37
  %3 = sext i8 %2 to i64
  %4 = add i64 %3, -65
  %5 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %4, i32 1
  %6 = load i32* %5, align 8, !tbaa !48
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %.loopexit, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 10
  %10 = load %struct.room** %9, align 8, !tbaa !24
  %11 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %12 = icmp eq %struct.room* %10, %11
  br i1 %12, label %.loopexit, label %13

; <label>:13                                      ; preds = %8
  %14 = tail call zeroext i1 @see_monst(%union.thing* %tp)
  br i1 %14, label %.loopexit, label %.preheader7

.preheader7:                                      ; preds = %13
  %obj.010 = load %union.thing** @lvl_obj, align 8
  %15 = icmp eq %union.thing* %obj.010, null
  br i1 %15, label %.loopexit, label %.lr.ph13

.lr.ph13:                                         ; preds = %.loopexit19, %.preheader7
  %obj.012 = phi %union.thing* [ %obj.0, %.loopexit19 ], [ %obj.010, %.preheader7 ]
  %.0111 = phi %union.thing* [ %.2, %.loopexit19 ], [ %tp, %.preheader7 ]
  %16 = getelementptr inbounds %union.thing* %obj.012, i64 0, i32 0, i32 2, i32 0
  %17 = load i32* %16, align 4, !tbaa !8
  %18 = icmp eq i32 %17, 63
  br i1 %18, label %19, label %24

; <label>:19                                      ; preds = %.lr.ph13
  %20 = getelementptr inbounds %union.thing* %obj.012, i64 0, i32 0, i32 9, i32 5, i64 4
  %21 = bitcast i8* %20 to i32*
  %22 = load i32* %21, align 4, !tbaa !50
  %23 = icmp eq i32 %22, 10
  br i1 %23, label %.loopexit19, label %24

; <label>:24                                      ; preds = %19, %.lr.ph13
  %25 = getelementptr inbounds %union.thing* %obj.012, i64 0, i32 0, i32 2, i32 1
  %26 = bitcast i32* %25 to %struct.coord*
  %27 = load i32* %25, align 4, !tbaa !21
  %28 = shl i32 %27, 5
  %29 = getelementptr inbounds i32* %25, i64 1
  %30 = load i32* %29, align 4, !tbaa !20
  %31 = add nsw i32 %28, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %32, i32 1
  %34 = load i8* %33, align 1, !tbaa !28
  %35 = sext i8 %34 to i32
  %36 = and i32 %35, 128
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %.preheader.i, label %38

.preheader.i:                                     ; preds = %24
  br i1 true, label %.lr.ph.i, label %._crit_edge.i

; <label>:38                                      ; preds = %24
  %39 = and i32 %35, 15
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %40
  br label %roomin.exit

.lr.ph.i:                                         ; preds = %57, %.preheader.i
  %rp.03.i = phi %struct.room* [ %58, %57 ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader.i ]
  %42 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 0
  %43 = load i32* %42, align 4, !tbaa !29
  %44 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 0
  %45 = load i32* %44, align 4, !tbaa !30
  %46 = add nsw i32 %45, %43
  %47 = icmp sgt i32 %27, %46
  %48 = icmp sgt i32 %43, %27
  %or.cond.i = or i1 %47, %48
  br i1 %or.cond.i, label %57, label %49

; <label>:49                                      ; preds = %.lr.ph.i
  %50 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 1
  %51 = load i32* %50, align 4, !tbaa !31
  %52 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 1
  %53 = load i32* %52, align 4, !tbaa !32
  %54 = add nsw i32 %53, %51
  %55 = icmp sgt i32 %30, %54
  %56 = icmp sgt i32 %51, %30
  %or.cond1.i = or i1 %55, %56
  br i1 %or.cond1.i, label %57, label %roomin.exit

; <label>:57                                      ; preds = %49, %.lr.ph.i
  %58 = getelementptr inbounds %struct.room* %rp.03.i, i64 1
  %59 = icmp ult %struct.room* %58, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %59, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %57, %.preheader.i
  %60 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str112, i64 0, i64 0), i32 %30, i32 %27) #8
  br label %roomin.exit

roomin.exit:                                      ; preds = %._crit_edge.i, %49, %38
  %.0.i = phi %struct.room* [ %41, %38 ], [ null, %._crit_edge.i ], [ %rp.03.i, %49 ]
  %61 = getelementptr inbounds %union.thing* %.0111, i64 0, i32 0, i32 10
  %62 = load %struct.room** %61, align 8, !tbaa !24
  %63 = icmp eq %struct.room* %.0.i, %62
  br i1 %63, label %64, label %.loopexit19

; <label>:64                                      ; preds = %roomin.exit
  %65 = tail call i32 @rnd(i32 100) #8
  %66 = icmp slt i32 %65, %6
  br i1 %66, label %.preheader, label %.loopexit19

.preheader:                                       ; preds = %64
  %.14 = load %union.thing** @mlist, align 8
  %cond5 = icmp eq %union.thing* %.14, null
  br i1 %cond5, label %.loopexit, label %.lr.ph

; <label>:67                                      ; preds = %.lr.ph
  %68 = getelementptr inbounds %union.thing* %.16, i64 0, i32 0, i32 0
  %.1 = load %union.thing** %68, align 8
  %cond = icmp eq %union.thing* %.1, null
  br i1 %cond, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %67, %.preheader
  %.16 = phi %union.thing* [ %.1, %67 ], [ %.14, %.preheader ]
  %69 = getelementptr inbounds %union.thing* %.16, i64 0, i32 0, i32 7
  %70 = load %struct.coord** %69, align 8, !tbaa !27
  %71 = icmp eq %struct.coord* %70, %26
  br i1 %71, label %.loopexit19, label %67

.loopexit19:                                      ; preds = %.lr.ph, %64, %roomin.exit, %19
  %.2 = phi %union.thing* [ %.0111, %19 ], [ %.0111, %64 ], [ %.0111, %roomin.exit ], [ %.16, %.lr.ph ]
  %72 = getelementptr inbounds %union.thing* %obj.012, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %72, align 8
  %73 = icmp eq %union.thing* %obj.0, null
  br i1 %73, label %.loopexit, label %.lr.ph13

.loopexit:                                        ; preds = %.loopexit19, %67, %.preheader, %.preheader7, %13, %8, %0
  %.0 = phi %struct.coord* [ getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %13 ], [ getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %8 ], [ getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %0 ], [ getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %.preheader7 ], [ %26, %67 ], [ getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %.loopexit19 ], [ %26, %.preheader ]
  ret %struct.coord* %.0
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @see_monst(%union.thing* nocapture readonly %mp) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = sext i16 %1 to i32
  %3 = and i32 %2, 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %58

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 8
  %7 = load i16* %6, align 2, !tbaa !18
  %8 = and i16 %7, 1024
  %9 = icmp ne i16 %8, 0
  %10 = and i32 %2, 2
  %11 = icmp eq i32 %10, 0
  %or.cond = and i1 %9, %11
  br i1 %or.cond, label %58, label %12

; <label>:12                                      ; preds = %5
  %13 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2, i32 1
  %14 = load i32* %13, align 4, !tbaa !23
  %15 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2, i32 0
  %16 = load i32* %15, align 4, !tbaa !22
  %17 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %18 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %19 = sub nsw i32 %18, %16
  %20 = mul nsw i32 %19, %19
  %21 = sub nsw i32 %17, %14
  %22 = mul nsw i32 %21, %21
  %23 = add nsw i32 %20, %22
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %48

; <label>:25                                      ; preds = %12
  %26 = icmp eq i32 %17, %14
  %27 = icmp eq i32 %18, %16
  %or.cond2 = or i1 %26, %27
  br i1 %or.cond2, label %47, label %28

; <label>:28                                      ; preds = %25
  %29 = shl i32 %18, 5
  %30 = add nsw i32 %29, %14
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %31, i32 0
  %33 = load i8* %32, align 8, !tbaa !33
  %34 = sext i8 %33 to i32
  %35 = tail call i32 @step_ok(i32 %34) #8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %47

; <label>:37                                      ; preds = %28
  %38 = shl i32 %16, 5
  %39 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %40 = add nsw i32 %39, %38
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %41, i32 0
  %43 = load i8* %42, align 8, !tbaa !33
  %44 = sext i8 %43 to i32
  %45 = tail call i32 @step_ok(i32 %44) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %58, label %47

; <label>:47                                      ; preds = %37, %28, %25
  br label %58

; <label>:48                                      ; preds = %12
  %49 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 10
  %50 = load %struct.room** %49, align 8, !tbaa !24
  %51 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %52 = icmp eq %struct.room* %50, %51
  br i1 %52, label %53, label %58

; <label>:53                                      ; preds = %48
  %54 = getelementptr inbounds %struct.room* %50, i64 0, i32 4
  %55 = load i16* %54, align 2, !tbaa !39
  %56 = and i16 %55, 1
  %57 = icmp eq i16 %56, 0
  br label %58

; <label>:58                                      ; preds = %53, %48, %47, %37, %5, %0
  %.0 = phi i1 [ true, %47 ], [ %57, %53 ], [ false, %0 ], [ false, %5 ], [ false, %37 ], [ false, %48 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @chase(%union.thing* %tp, %struct.coord* nocapture readonly %ee) #0 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2
  %2 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 8
  %3 = load i16* %2, align 2, !tbaa !18
  %4 = and i16 %3, 512
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %0
  %7 = tail call i32 @rnd(i32 5) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %22

; <label>:9                                       ; preds = %6, %0
  %10 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 4
  %11 = load i8* %10, align 1, !tbaa !37
  %12 = icmp eq i8 %11, 80
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %9
  %14 = tail call i32 @rnd(i32 5) #8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %22, label %thread-pre-split

thread-pre-split:                                 ; preds = %13
  %.pr = load i8* %10, align 1, !tbaa !37
  br label %16

; <label>:16                                      ; preds = %thread-pre-split, %9
  %17 = phi i8 [ %.pr, %thread-pre-split ], [ %11, %9 ]
  %18 = icmp eq i8 %17, 66
  br i1 %18, label %19, label %42

; <label>:19                                      ; preds = %16
  %20 = tail call i32 @rnd(i32 2) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %42

; <label>:22                                      ; preds = %19, %13, %6
  %23 = tail call %struct.coord* @rndmove(%union.thing* %tp) #8
  %24 = bitcast %struct.coord* %23 to i64*
  %25 = load i64* %24, align 4
  store i64 %25, i64* bitcast (%struct.coord* @ch_ret to i64*), align 8
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %trunc = trunc i64 %25 to i32
  %28 = getelementptr inbounds %struct.coord* %ee, i64 0, i32 1
  %29 = load i32* %28, align 4, !tbaa !20
  %30 = getelementptr inbounds %struct.coord* %ee, i64 0, i32 0
  %31 = load i32* %30, align 4, !tbaa !21
  %32 = sub nsw i32 %31, %trunc
  %33 = mul nsw i32 %32, %32
  %34 = sub nsw i32 %29, %27
  %35 = mul nsw i32 %34, %34
  %36 = add nsw i32 %33, %35
  %37 = tail call i32 @rnd(i32 20) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %.loopexit15

; <label>:39                                      ; preds = %22
  %40 = load i16* %2, align 2, !tbaa !18
  %41 = and i16 %40, -513
  store i16 %41, i16* %2, align 2, !tbaa !18
  br label %.loopexit15

; <label>:42                                      ; preds = %19, %16
  %43 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2, i32 1
  %44 = load i32* %43, align 4, !tbaa !20
  %45 = getelementptr inbounds %struct.coord* %1, i64 0, i32 0
  %46 = load i32* %45, align 4, !tbaa !21
  %47 = getelementptr inbounds %struct.coord* %ee, i64 0, i32 1
  %48 = load i32* %47, align 4, !tbaa !20
  %49 = getelementptr inbounds %struct.coord* %ee, i64 0, i32 0
  %50 = load i32* %49, align 4, !tbaa !21
  %51 = sub nsw i32 %50, %46
  %52 = mul nsw i32 %51, %51
  %53 = sub nsw i32 %48, %44
  %54 = mul nsw i32 %53, %53
  %55 = add nsw i32 %52, %54
  %56 = bitcast %struct.coord* %1 to i64*
  %57 = load i64* %56, align 4
  store i64 %57, i64* bitcast (%struct.coord* @ch_ret to i64*), align 8
  %58 = load i32* %43, align 4, !tbaa !20
  %59 = add nsw i32 %58, 1
  %60 = icmp sgt i32 %59, 22
  %. = select i1 %60, i32 22, i32 %59
  %61 = load i32* %45, align 4, !tbaa !21
  %62 = add nsw i32 %61, 1
  %63 = icmp sgt i32 %62, 79
  %.1 = select i1 %63, i32 79, i32 %62
  %64 = add i32 %61, -1
  %65 = icmp sgt i32 %64, %.1
  br i1 %65, label %.loopexit15, label %.lr.ph21

.lr.ph21:                                         ; preds = %42
  %66 = sext i32 %64 to i64
  br label %67

; <label>:67                                      ; preds = %.loopexit, %.lr.ph21
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %.loopexit ], [ %66, %.lr.ph21 ]
  %plcnt.020 = phi i32 [ %plcnt.3, %.loopexit ], [ 1, %.lr.ph21 ]
  %curdist.016 = phi i32 [ %curdist.3, %.loopexit ], [ %55, %.lr.ph21 ]
  %68 = trunc i64 %indvars.iv25 to i32
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %.loopexit, label %70

; <label>:70                                      ; preds = %67
  store i32 %68, i32* getelementptr inbounds (%struct.coord* @chase.tryp, i64 0, i32 0), align 8, !tbaa !21
  %71 = load i32* %43, align 4, !tbaa !20
  %72 = add i32 %71, -1
  %73 = icmp sgt i32 %72, %.
  br i1 %73, label %.loopexit, label %.lr.ph13

.lr.ph13:                                         ; preds = %70
  %74 = shl i32 %68, 5
  %75 = sext i32 %72 to i64
  %76 = sext i32 %74 to i64
  br label %77

; <label>:77                                      ; preds = %diag_ok.exit.thread._crit_edge, %.lr.ph13
  %78 = phi i32 [ %.pre, %diag_ok.exit.thread._crit_edge ], [ %68, %.lr.ph13 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %diag_ok.exit.thread._crit_edge ], [ %75, %.lr.ph13 ]
  %plcnt.112 = phi i32 [ %plcnt.2, %diag_ok.exit.thread._crit_edge ], [ %plcnt.020, %.lr.ph13 ]
  %curdist.19 = phi i32 [ %curdist.2, %diag_ok.exit.thread._crit_edge ], [ %curdist.016, %.lr.ph13 ]
  %79 = trunc i64 %indvars.iv to i32
  store i32 %79, i32* getelementptr inbounds (%struct.coord* @chase.tryp, i64 0, i32 1), align 4, !tbaa !20
  %80 = icmp ugt i32 %78, 79
  %.off.i = add i32 %79, -1
  %81 = icmp ugt i32 %.off.i, 21
  %or.cond = or i1 %80, %81
  br i1 %or.cond, label %diag_ok.exit.thread, label %82

; <label>:82                                      ; preds = %77
  %83 = load i32* %45, align 4, !tbaa !21
  %84 = icmp eq i32 %78, %83
  br i1 %84, label %diag_ok.exit.thread3, label %85

; <label>:85                                      ; preds = %82
  %86 = load i32* %43, align 4, !tbaa !20
  %87 = icmp eq i32 %79, %86
  br i1 %87, label %diag_ok.exit.thread3, label %88

; <label>:88                                      ; preds = %85
  %89 = shl i32 %83, 5
  %90 = add nsw i32 %89, %79
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %91, i32 0
  %93 = load i8* %92, align 8, !tbaa !33
  %94 = sext i8 %93 to i32
  %95 = tail call i32 @step_ok(i32 %94) #8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %diag_ok.exit.thread, label %diag_ok.exit

diag_ok.exit:                                     ; preds = %88
  %97 = load i32* getelementptr inbounds (%struct.coord* @chase.tryp, i64 0, i32 0), align 8, !tbaa !21
  %98 = shl i32 %97, 5
  %99 = load i32* %43, align 4, !tbaa !20
  %100 = add nsw i32 %98, %99
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %101, i32 0
  %103 = load i8* %102, align 8, !tbaa !33
  %104 = sext i8 %103 to i32
  %105 = tail call i32 @step_ok(i32 %104) #8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %diag_ok.exit.thread, label %diag_ok.exit.thread3

diag_ok.exit.thread3:                             ; preds = %diag_ok.exit, %85, %82
  %107 = add nsw i64 %indvars.iv, %76
  %108 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %107, i32 2
  %109 = load %union.thing** %108, align 8, !tbaa !43
  %110 = icmp eq %union.thing* %109, null
  br i1 %110, label %113, label %111

; <label>:111                                     ; preds = %diag_ok.exit.thread3
  %112 = getelementptr inbounds %union.thing* %109, i64 0, i32 0, i32 5
  br label %115

; <label>:113                                     ; preds = %diag_ok.exit.thread3
  %114 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %107, i32 0
  br label %115

; <label>:115                                     ; preds = %113, %111
  %.sink.in = phi i8* [ %112, %111 ], [ %114, %113 ]
  %.sink = load i8* %.sink.in, align 1
  %116 = sext i8 %.sink to i32
  %117 = tail call i32 @step_ok(i32 %116) #8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %diag_ok.exit.thread, label %119

; <label>:119                                     ; preds = %115
  %120 = icmp eq i8 %.sink, 63
  br i1 %120, label %.preheader, label %.critedge

.preheader:                                       ; preds = %119
  %obj.07 = load %union.thing** @lvl_obj, align 8
  %121 = icmp eq %union.thing* %obj.07, null
  br i1 %121, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %129, %.preheader
  %obj.08 = phi %union.thing* [ %obj.0, %129 ], [ %obj.07, %.preheader ]
  %122 = getelementptr inbounds %union.thing* %obj.08, i64 0, i32 0, i32 2, i32 1
  %123 = getelementptr inbounds i32* %122, i64 1
  %124 = load i32* %123, align 4, !tbaa !41
  %125 = icmp eq i32 %79, %124
  br i1 %125, label %126, label %129

; <label>:126                                     ; preds = %.lr.ph
  %127 = load i32* %122, align 4, !tbaa !40
  %128 = icmp eq i32 %68, %127
  br i1 %128, label %132, label %129

; <label>:129                                     ; preds = %126, %.lr.ph
  %130 = getelementptr inbounds %union.thing* %obj.08, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %130, align 8
  %131 = icmp eq %union.thing* %obj.0, null
  br i1 %131, label %.critedge, label %.lr.ph

; <label>:132                                     ; preds = %126
  %133 = getelementptr inbounds %union.thing* %obj.08, i64 0, i32 0, i32 9, i32 5, i64 4
  %134 = bitcast i8* %133 to i32*
  %135 = load i32* %134, align 4, !tbaa !50
  %136 = icmp eq i32 %135, 10
  br i1 %136, label %diag_ok.exit.thread, label %.critedge

.critedge:                                        ; preds = %132, %129, %.preheader, %119
  %137 = load %union.thing** %108, align 8, !tbaa !43
  %138 = icmp eq %union.thing* %137, null
  br i1 %138, label %143, label %139

; <label>:139                                     ; preds = %.critedge
  %140 = getelementptr inbounds %union.thing* %137, i64 0, i32 0, i32 4
  %141 = load i8* %140, align 1, !tbaa !37
  %142 = icmp eq i8 %141, 88
  br i1 %142, label %diag_ok.exit.thread, label %143

; <label>:143                                     ; preds = %139, %.critedge
  %144 = load i32* %47, align 4, !tbaa !20
  %145 = load i32* %49, align 4, !tbaa !21
  %146 = sub nsw i32 %145, %68
  %147 = mul nsw i32 %146, %146
  %148 = sub nsw i32 %144, %79
  %149 = mul nsw i32 %148, %148
  %150 = add nsw i32 %147, %149
  %151 = icmp slt i32 %150, %curdist.19
  br i1 %151, label %152, label %154

; <label>:152                                     ; preds = %143
  %153 = load i64* bitcast (%struct.coord* @chase.tryp to i64*), align 8
  store i64 %153, i64* bitcast (%struct.coord* @ch_ret to i64*), align 8
  br label %diag_ok.exit.thread

; <label>:154                                     ; preds = %143
  %155 = icmp eq i32 %150, %curdist.19
  br i1 %155, label %156, label %diag_ok.exit.thread

; <label>:156                                     ; preds = %154
  %157 = add nsw i32 %plcnt.112, 1
  %158 = tail call i32 @rnd(i32 %157) #8
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %diag_ok.exit.thread

; <label>:160                                     ; preds = %156
  %161 = load i64* bitcast (%struct.coord* @chase.tryp to i64*), align 8
  store i64 %161, i64* bitcast (%struct.coord* @ch_ret to i64*), align 8
  br label %diag_ok.exit.thread

diag_ok.exit.thread:                              ; preds = %160, %156, %154, %152, %139, %132, %115, %diag_ok.exit, %88, %77
  %curdist.2 = phi i32 [ %curdist.19, %132 ], [ %curdist.19, %139 ], [ %150, %152 ], [ %curdist.19, %160 ], [ %curdist.19, %156 ], [ %curdist.19, %154 ], [ %curdist.19, %115 ], [ %curdist.19, %diag_ok.exit ], [ %curdist.19, %77 ], [ %curdist.19, %88 ]
  %plcnt.2 = phi i32 [ %plcnt.112, %132 ], [ %plcnt.112, %139 ], [ 1, %152 ], [ %157, %160 ], [ %157, %156 ], [ %plcnt.112, %154 ], [ %plcnt.112, %115 ], [ %plcnt.112, %diag_ok.exit ], [ %plcnt.112, %77 ], [ %plcnt.112, %88 ]
  %162 = icmp slt i32 %79, %.
  br i1 %162, label %diag_ok.exit.thread._crit_edge, label %.loopexit

diag_ok.exit.thread._crit_edge:                   ; preds = %diag_ok.exit.thread
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %.pre = load i32* getelementptr inbounds (%struct.coord* @chase.tryp, i64 0, i32 0), align 8, !tbaa !21
  br label %77

.loopexit:                                        ; preds = %diag_ok.exit.thread, %70, %67
  %curdist.3 = phi i32 [ %curdist.016, %67 ], [ %curdist.016, %70 ], [ %curdist.2, %diag_ok.exit.thread ]
  %plcnt.3 = phi i32 [ %plcnt.020, %67 ], [ %plcnt.020, %70 ], [ %plcnt.2, %diag_ok.exit.thread ]
  %163 = icmp slt i32 %68, %.1
  %indvars.iv.next26 = add nsw i64 %indvars.iv25, 1
  br i1 %163, label %67, label %.loopexit15

.loopexit15:                                      ; preds = %.loopexit, %42, %39, %22
  %curdist.4 = phi i32 [ %36, %39 ], [ %36, %22 ], [ %55, %42 ], [ %curdist.3, %.loopexit ]
  %164 = icmp eq i32 %curdist.4, 0
  br i1 %164, label %176, label %165

; <label>:165                                     ; preds = %.loopexit15
  %166 = load i64* bitcast (%struct.coord* @ch_ret to i64*), align 8
  %167 = trunc i64 %166 to i32
  %168 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %169 = trunc i64 %168 to i32
  %170 = icmp eq i32 %167, %169
  br i1 %170, label %171, label %176

; <label>:171                                     ; preds = %165
  %172 = lshr i64 %168, 32
  %173 = lshr i64 %166, 32
  %174 = trunc i64 %172 to i32
  %175 = trunc i64 %173 to i32
  %phitmp = icmp ne i32 %175, %174
  br label %176

; <label>:176                                     ; preds = %171, %165, %.loopexit15
  %177 = phi i1 [ false, %.loopexit15 ], [ true, %165 ], [ %phitmp, %171 ]
  ret i1 %177
}

declare i32 @winch(%struct._win_st*) #2

; Function Attrs: nounwind readnone ssp uwtable
define i32 @dist(i32 %y1, i32 %x1, i32 %y2, i32 %x2) #3 {
  %1 = sub nsw i32 %x2, %x1
  %2 = mul nsw i32 %1, %1
  %3 = sub nsw i32 %y2, %y1
  %4 = mul nsw i32 %3, %3
  %5 = add nsw i32 %2, %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define void @runto(%struct.coord* nocapture readonly %runner) #0 {
  %1 = getelementptr inbounds %struct.coord* %runner, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = shl i32 %2, 5
  %4 = getelementptr inbounds %struct.coord* %runner, i64 0, i32 1
  %5 = load i32* %4, align 4, !tbaa !20
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 2
  %9 = load %union.thing** %8, align 8, !tbaa !43
  %10 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 8
  %11 = load i16* %10, align 2, !tbaa !18
  %12 = and i16 %11, -8449
  %13 = or i16 %12, 8192
  store i16 %13, i16* %10, align 2, !tbaa !18
  %14 = tail call %struct.coord* @find_dest(%union.thing* %9)
  %15 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 7
  store %struct.coord* %14, %struct.coord** %15, align 8, !tbaa !27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @diag_ok(%struct.coord* nocapture readonly %sp, %struct.coord* nocapture readonly %ep) #0 {
  %1 = getelementptr inbounds %struct.coord* %ep, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = icmp ugt i32 %2, 79
  br i1 %3, label %36, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.coord* %ep, i64 0, i32 1
  %6 = load i32* %5, align 4, !tbaa !20
  %.off = add i32 %6, -1
  %7 = icmp ugt i32 %.off, 21
  br i1 %7, label %36, label %8

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.coord* %sp, i64 0, i32 0
  %10 = load i32* %9, align 4, !tbaa !21
  %11 = icmp eq i32 %2, %10
  br i1 %11, label %36, label %12

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %struct.coord* %sp, i64 0, i32 1
  %14 = load i32* %13, align 4, !tbaa !20
  %15 = icmp eq i32 %6, %14
  br i1 %15, label %36, label %16

; <label>:16                                      ; preds = %12
  %17 = shl i32 %10, 5
  %18 = add nsw i32 %17, %6
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %19, i32 0
  %21 = load i8* %20, align 8, !tbaa !33
  %22 = sext i8 %21 to i32
  %23 = tail call i32 @step_ok(i32 %22) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %36, label %25

; <label>:25                                      ; preds = %16
  %26 = load i32* %1, align 4, !tbaa !21
  %27 = shl i32 %26, 5
  %28 = load i32* %13, align 4, !tbaa !20
  %29 = add nsw i32 %27, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %30, i32 0
  %32 = load i8* %31, align 8, !tbaa !33
  %33 = sext i8 %32 to i32
  %34 = tail call i32 @step_ok(i32 %33) #8
  %35 = icmp ne i32 %34, 0
  br label %36

; <label>:36                                      ; preds = %25, %16, %12, %8, %4, %0
  %.0 = phi i1 [ false, %4 ], [ false, %0 ], [ true, %12 ], [ true, %8 ], [ false, %16 ], [ %35, %25 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @cansee(i32 %y, i32 %x) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 4
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %4, label %80

; <label>:4                                       ; preds = %0
  %5 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %6 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %7 = sub nsw i32 %6, %x
  %8 = mul nsw i32 %7, %7
  %9 = sub nsw i32 %5, %y
  %10 = mul nsw i32 %9, %9
  %11 = add nsw i32 %8, %10
  %12 = icmp slt i32 %11, 3
  br i1 %12, label %13, label %41

; <label>:13                                      ; preds = %4
  %14 = shl i32 %x, 5
  %15 = add nsw i32 %14, %y
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %16, i32 1
  %18 = load i8* %17, align 1, !tbaa !36
  %19 = icmp sgt i8 %18, -1
  %20 = icmp eq i32 %5, %y
  %or.cond = or i1 %19, %20
  %21 = icmp eq i32 %6, %x
  %or.cond2 = or i1 %or.cond, %21
  br i1 %or.cond2, label %40, label %22

; <label>:22                                      ; preds = %13
  %23 = shl i32 %6, 5
  %24 = add nsw i32 %23, %y
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %25, i32 0
  %27 = load i8* %26, align 8, !tbaa !33
  %28 = sext i8 %27 to i32
  %29 = tail call i32 @step_ok(i32 %28) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %40

; <label>:31                                      ; preds = %22
  %32 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %33 = add nsw i32 %32, %14
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %34, i32 0
  %36 = load i8* %35, align 8, !tbaa !33
  %37 = sext i8 %36 to i32
  %38 = tail call i32 @step_ok(i32 %37) #8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %80, label %40

; <label>:40                                      ; preds = %31, %22, %13
  br label %80

; <label>:41                                      ; preds = %4
  store i32 %y, i32* getelementptr inbounds (%struct.coord* @cansee.tp, i64 0, i32 1), align 4, !tbaa !20
  store i32 %x, i32* getelementptr inbounds (%struct.coord* @cansee.tp, i64 0, i32 0), align 4, !tbaa !21
  %42 = shl i32 %x, 5
  %43 = add nsw i32 %42, %y
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %44, i32 1
  %46 = load i8* %45, align 1, !tbaa !28
  %47 = sext i8 %46 to i32
  %48 = and i32 %47, 128
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %.preheader.i, label %50

.preheader.i:                                     ; preds = %41
  br i1 true, label %.lr.ph.i, label %._crit_edge.i

; <label>:50                                      ; preds = %41
  %51 = and i32 %47, 15
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %52
  br label %roomin.exit

.lr.ph.i:                                         ; preds = %69, %.preheader.i
  %rp.03.i = phi %struct.room* [ %70, %69 ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader.i ]
  %54 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 0
  %55 = load i32* %54, align 4, !tbaa !29
  %56 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 0
  %57 = load i32* %56, align 4, !tbaa !30
  %58 = add nsw i32 %57, %55
  %59 = icmp slt i32 %58, %x
  %60 = icmp sgt i32 %55, %x
  %or.cond.i = or i1 %59, %60
  br i1 %or.cond.i, label %69, label %61

; <label>:61                                      ; preds = %.lr.ph.i
  %62 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 0, i32 1
  %63 = load i32* %62, align 4, !tbaa !31
  %64 = getelementptr inbounds %struct.room* %rp.03.i, i64 0, i32 1, i32 1
  %65 = load i32* %64, align 4, !tbaa !32
  %66 = add nsw i32 %65, %63
  %67 = icmp slt i32 %66, %y
  %68 = icmp sgt i32 %63, %y
  %or.cond1.i = or i1 %67, %68
  br i1 %or.cond1.i, label %69, label %roomin.exit

; <label>:69                                      ; preds = %61, %.lr.ph.i
  %70 = getelementptr inbounds %struct.room* %rp.03.i, i64 1
  %71 = icmp ult %struct.room* %70, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %71, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %69, %.preheader.i
  %72 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str112, i64 0, i64 0), i32 %y, i32 %x) #8
  br label %roomin.exit

roomin.exit:                                      ; preds = %._crit_edge.i, %61, %50
  %.0.i = phi %struct.room* [ %53, %50 ], [ null, %._crit_edge.i ], [ %rp.03.i, %61 ]
  %73 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %74 = icmp eq %struct.room* %.0.i, %73
  br i1 %74, label %75, label %80

; <label>:75                                      ; preds = %roomin.exit
  %76 = getelementptr inbounds %struct.room* %.0.i, i64 0, i32 4
  %77 = load i16* %76, align 2, !tbaa !39
  %78 = and i16 %77, 1
  %79 = icmp eq i16 %78, 0
  br label %80

; <label>:80                                      ; preds = %75, %roomin.exit, %40, %31, %0
  %.0 = phi i1 [ true, %40 ], [ false, %0 ], [ false, %31 ], [ false, %roomin.exit ], [ %79, %75 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @command() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 64
  %3 = zext i16 %2 to i32
  %4 = lshr exact i32 %3, 6
  %5 = add i32 %4, 1
  %6 = tail call i32 @spread(i32 1) #8
  tail call void @do_daemons(i32 %6) #8
  %7 = tail call i32 @spread(i32 1) #8
  tail call void @do_fuses(i32 %7) #8
  br label %8

; <label>:8                                       ; preds = %337, %0
  %ntimes.187 = phi i32 [ %5, %0 ], [ %ntimes.1., %337 ]
  store i8 0, i8* @again, align 1, !tbaa !5
  %9 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %8
  %12 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  br label %13

; <label>:13                                      ; preds = %11, %8
  %14 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %15 = and i16 %14, -27488
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %18, label %17

; <label>:17                                      ; preds = %13
  tail call void @exit(i32 1) #10
  unreachable

; <label>:18                                      ; preds = %13
  tail call void @look(i1 zeroext true) #8
  %19 = load i8* @running, align 1, !tbaa !5, !range !7
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %18
  store i8 0, i8* @door_stop, align 1, !tbaa !5
  br label %22

; <label>:22                                      ; preds = %21, %18
  tail call void (...)* bitcast (void ()* @status to void (...)*)() #8
  %23 = load i32* @purse, align 4, !tbaa !38
  store i32 %23, i32* @lastscore, align 4, !tbaa !38
  %24 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %25 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %26 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %27 = tail call i32 @wmove(%struct._win_st* %24, i32 %25, i32 %26) #8
  %28 = load i8* @running, align 1, !tbaa !5, !range !7
  %29 = load i32* @count, align 4
  %notlhs = icmp eq i8 %28, 0
  %notrhs = icmp eq i32 %29, 0
  %or.cond.not = and i1 %notrhs, %notlhs
  %30 = load i8* @jump, align 1
  %31 = icmp eq i8 %30, 0
  %or.cond10 = or i1 %or.cond.not, %31
  br i1 %or.cond10, label %32, label %35

; <label>:32                                      ; preds = %22
  %33 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %34 = tail call i32 @wrefresh(%struct._win_st* %33) #8
  br label %35

; <label>:35                                      ; preds = %32, %22
  store i8 0, i8* @take, align 1, !tbaa !28
  store i8 1, i8* @after, align 1, !tbaa !5
  %36 = load i32* @no_command, align 4, !tbaa !38
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %.thread

; <label>:38                                      ; preds = %35
  %39 = load i8* @running, align 1, !tbaa !5, !range !7
  %40 = load i8* @to_death, align 1
  %41 = or i8 %40, %39
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %45, label %43

; <label>:43                                      ; preds = %38
  %44 = load i8* @runch, align 1, !tbaa !28
  br label %56

; <label>:45                                      ; preds = %38
  %46 = load i32* @count, align 4, !tbaa !38
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

; <label>:48                                      ; preds = %45
  %49 = load i8* @command.countch, align 1, !tbaa !28
  br label %56

; <label>:50                                      ; preds = %45
  %51 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  store i8 0, i8* @move_on, align 1, !tbaa !5
  %52 = load i32* @mpos, align 4, !tbaa !38
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

; <label>:54                                      ; preds = %50
  %55 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str13, i64 0, i64 0)) #8
  br label %56

; <label>:56                                      ; preds = %54, %50, %48, %43
  %ch.0.ph = phi i8 [ %51, %50 ], [ %44, %43 ], [ %51, %54 ], [ %49, %48 ]
  %.pr = load i32* @no_command, align 4, !tbaa !38
  %57 = icmp eq i32 %.pr, 0
  br i1 %57, label %65, label %.thread

.thread:                                          ; preds = %56, %35
  %58 = phi i32 [ %.pr, %56 ], [ %36, %35 ]
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* @no_command, align 4, !tbaa !38
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %329

; <label>:61                                      ; preds = %.thread
  %62 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %63 = or i16 %62, 8192
  store i16 %63, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %64 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str114, i64 0, i64 0)) #8
  br label %329

; <label>:65                                      ; preds = %56
  store i1 false, i1* @command.newcount, align 1
  %66 = sext i8 %ch.0.ph to i32
  %isdigittmp = add i32 %66, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  br i1 %isdigit, label %.lr.ph, label %76

.lr.ph:                                           ; preds = %65
  store i32 0, i32* @count, align 4, !tbaa !38
  store i1 true, i1* @command.newcount, align 1
  br label %67

; <label>:67                                      ; preds = %._crit_edge149, %.lr.ph
  %68 = phi i32 [ 0, %.lr.ph ], [ %phitmp, %._crit_edge149 ]
  %69 = phi i32 [ %66, %.lr.ph ], [ %74, %._crit_edge149 ]
  %70 = add nsw i32 %69, -48
  %71 = add nsw i32 %70, %68
  %72 = icmp sgt i32 %71, 255
  %. = select i1 %72, i32 255, i32 %71
  store i32 %., i32* @count, align 4, !tbaa !38
  %73 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %74 = sext i8 %73 to i32
  %isdigittmp6 = add i32 %74, -48
  %isdigit7 = icmp ult i32 %isdigittmp6, 10
  br i1 %isdigit7, label %._crit_edge149, label %._crit_edge

._crit_edge149:                                   ; preds = %67
  %.pre = load i32* @count, align 4, !tbaa !38
  %phitmp = mul i32 %.pre, 10
  br label %67

._crit_edge:                                      ; preds = %67
  store i8 %73, i8* @command.countch, align 1, !tbaa !28
  switch i32 %74, label %75 [
    i32 2, label %76
    i32 8, label %76
    i32 10, label %76
    i32 11, label %76
    i32 12, label %76
    i32 14, label %76
    i32 21, label %76
    i32 25, label %76
    i32 46, label %76
    i32 97, label %76
    i32 98, label %76
    i32 104, label %76
    i32 106, label %76
    i32 107, label %76
    i32 108, label %76
    i32 109, label %76
    i32 110, label %76
    i32 113, label %76
    i32 114, label %76
    i32 115, label %76
    i32 116, label %76
    i32 117, label %76
    i32 121, label %76
    i32 122, label %76
    i32 66, label %76
    i32 67, label %76
    i32 72, label %76
    i32 73, label %76
    i32 74, label %76
    i32 75, label %76
    i32 76, label %76
    i32 78, label %76
    i32 85, label %76
    i32 89, label %76
  ]

; <label>:75                                      ; preds = %._crit_edge
  store i32 0, i32* @count, align 4, !tbaa !38
  br label %76

; <label>:76                                      ; preds = %75, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %._crit_edge, %65
  %ch.2 = phi i8 [ %73, %75 ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %73, %._crit_edge ], [ %ch.0.ph, %65 ]
  %77 = load i32* @count, align 4, !tbaa !38
  %78 = icmp ne i32 %77, 0
  %79 = load i8* @running, align 1
  %80 = icmp eq i8 %79, 0
  %or.cond14 = and i1 %78, %80
  br i1 %or.cond14, label %81, label %83

; <label>:81                                      ; preds = %76
  %82 = add nsw i32 %77, -1
  store i32 %82, i32* @count, align 4, !tbaa !38
  br label %83

; <label>:83                                      ; preds = %81, %76
  %84 = phi i32 [ %77, %76 ], [ %82, %81 ]
  switch i8 %ch.2, label %85 [
    i8 97, label %.preheader
    i8 27, label %.preheader
  ]

; <label>:85                                      ; preds = %83
  %notrhs22 = icmp eq i32 %84, 0
  %or.cond3.not = and i1 %notrhs22, %80
  %86 = load i8* @to_death, align 1
  %87 = icmp eq i8 %86, 0
  %or.cond16 = and i1 %or.cond3.not, %87
  br i1 %or.cond16, label %88, label %.preheader

; <label>:88                                      ; preds = %85
  %89 = load i8* @last_comm, align 1, !tbaa !28
  store i8 %89, i8* @l_last_comm, align 1, !tbaa !28
  %90 = load i8* @last_dir, align 1, !tbaa !28
  store i8 %90, i8* @l_last_dir, align 1, !tbaa !28
  %91 = load %union.thing** @last_pick, align 8, !tbaa !1
  store %union.thing* %91, %union.thing** @l_last_pick, align 8, !tbaa !1
  store i8 %ch.2, i8* @last_comm, align 1, !tbaa !28
  store i8 0, i8* @last_dir, align 1, !tbaa !28
  store %union.thing* null, %union.thing** @last_pick, align 8, !tbaa !1
  br label %.preheader

.preheader:                                       ; preds = %307, %199, %183, %150, %148, %88, %85, %83, %83
  %ch.3 = phi i8 [ %ch.2, %88 ], [ %ch.2, %83 ], [ %ch.2, %83 ], [ %ch.2, %85 ], [ %308, %307 ], [ %195, %199 ], [ %187, %183 ], [ %151, %150 ], [ %149, %148 ]
  %92 = sext i8 %ch.3 to i32
  switch i32 %92, label %323 [
    i32 44, label %.loopexit
    i32 33, label %124
    i32 104, label %125
    i32 106, label %126
    i32 107, label %127
    i32 108, label %128
    i32 121, label %129
    i32 117, label %130
    i32 98, label %131
    i32 110, label %132
    i32 72, label %133
    i32 74, label %134
    i32 75, label %135
    i32 76, label %136
    i32 89, label %137
    i32 85, label %138
    i32 66, label %139
    i32 78, label %140
    i32 8, label %._crit_edge157
    i32 10, label %._crit_edge157
    i32 11, label %._crit_edge157
    i32 12, label %._crit_edge157
    i32 25, label %._crit_edge157
    i32 21, label %._crit_edge157
    i32 2, label %._crit_edge157
    i32 14, label %._crit_edge157
    i32 70, label %152
    i32 102, label %153
    i32 116, label %188
    i32 97, label %194
    i32 113, label %200
    i32 81, label %201
    i32 105, label %202
    i32 73, label %205
    i32 100, label %206
    i32 114, label %207
    i32 101, label %208
    i32 119, label %209
    i32 87, label %210
    i32 84, label %211
    i32 80, label %212
    i32 82, label %213
    i32 111, label %214
    i32 99, label %215
    i32 62, label %216
    i32 60, label %236
    i32 63, label %237
    i32 47, label %238
    i32 115, label %239
    i32 122, label %240
    i32 68, label %244
    i32 16, label %245
    i32 18, label %247
    i32 118, label %252
    i32 83, label %255
    i32 46, label %d_level.exit
    i32 32, label %256
    i32 94, label %257
    i32 27, label %303
    i32 109, label %304
    i32 41, label %309
    i32 93, label %311
    i32 61, label %313
    i32 64, label %322
  ]

.loopexit:                                        ; preds = %.preheader
  %obj.084 = load %union.thing** @lvl_obj, align 8
  %93 = icmp eq %union.thing* %obj.084, null
  br i1 %93, label %.critedge, label %.lr.ph86

.lr.ph86:                                         ; preds = %.loopexit
  %94 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %95 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  br label %96

; <label>:96                                      ; preds = %104, %.lr.ph86
  %obj.085 = phi %union.thing* [ %obj.084, %.lr.ph86 ], [ %obj.0, %104 ]
  %97 = getelementptr inbounds %union.thing* %obj.085, i64 0, i32 0, i32 2, i32 1
  %98 = getelementptr inbounds i32* %97, i64 1
  %99 = load i32* %98, align 4, !tbaa !41
  %100 = icmp eq i32 %99, %94
  br i1 %100, label %101, label %104

; <label>:101                                     ; preds = %96
  %102 = load i32* %97, align 4, !tbaa !40
  %103 = icmp eq i32 %102, %95
  br i1 %103, label %107, label %104

; <label>:104                                     ; preds = %101, %96
  %105 = getelementptr inbounds %union.thing* %obj.085, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %105, align 8
  %106 = icmp eq %union.thing* %obj.0, null
  br i1 %106, label %.critedge, label %96

; <label>:107                                     ; preds = %101
  %108 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %109 = and i16 %108, 8
  %110 = icmp eq i16 %109, 0
  br i1 %110, label %levit_check.exit, label %levit_check.exit.thread

levit_check.exit.thread:                          ; preds = %107
  %111 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str48, i64 0, i64 0)) #8
  br label %d_level.exit

levit_check.exit:                                 ; preds = %107
  %112 = getelementptr inbounds %union.thing* %obj.085, i64 0, i32 0, i32 2, i32 0
  %113 = load i32* %112, align 4, !tbaa !8
  %114 = trunc i32 %113 to i8
  tail call void @pick_up(i8 signext %114) #8
  br label %d_level.exit

.critedge:                                        ; preds = %104, %.loopexit
  %115 = load i8* @terse, align 1, !tbaa !5, !range !7
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %118

; <label>:117                                     ; preds = %.critedge
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([10 x i8]* @.str215, i64 0, i64 0)) #8
  br label %118

; <label>:118                                     ; preds = %117, %.critedge
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str316, i64 0, i64 0)) #8
  %119 = load i8* @terse, align 1, !tbaa !5, !range !7
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %122

; <label>:121                                     ; preds = %118
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([12 x i8]* @.str417, i64 0, i64 0)) #8
  br label %122

; <label>:122                                     ; preds = %121, %118
  %123 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %d_level.exit

; <label>:124                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @shell to void (...)*)() #8
  br label %d_level.exit

; <label>:125                                     ; preds = %.preheader
  tail call void @do_move(i32 0, i32 -1) #8
  br label %d_level.exit

; <label>:126                                     ; preds = %.preheader
  tail call void @do_move(i32 1, i32 0) #8
  br label %d_level.exit

; <label>:127                                     ; preds = %.preheader
  tail call void @do_move(i32 -1, i32 0) #8
  br label %d_level.exit

; <label>:128                                     ; preds = %.preheader
  tail call void @do_move(i32 0, i32 1) #8
  br label %d_level.exit

; <label>:129                                     ; preds = %.preheader
  tail call void @do_move(i32 -1, i32 -1) #8
  br label %d_level.exit

; <label>:130                                     ; preds = %.preheader
  tail call void @do_move(i32 -1, i32 1) #8
  br label %d_level.exit

; <label>:131                                     ; preds = %.preheader
  tail call void @do_move(i32 1, i32 -1) #8
  br label %d_level.exit

; <label>:132                                     ; preds = %.preheader
  tail call void @do_move(i32 1, i32 1) #8
  br label %d_level.exit

; <label>:133                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 104) #8
  br label %d_level.exit

; <label>:134                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 106) #8
  br label %d_level.exit

; <label>:135                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 107) #8
  br label %d_level.exit

; <label>:136                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 108) #8
  br label %d_level.exit

; <label>:137                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 121) #8
  br label %d_level.exit

; <label>:138                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 117) #8
  br label %d_level.exit

; <label>:139                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 98) #8
  br label %d_level.exit

; <label>:140                                     ; preds = %.preheader
  tail call void @do_run(i8 signext 110) #8
  br label %d_level.exit

._crit_edge157:                                   ; preds = %.preheader, %.preheader, %.preheader, %.preheader, %.preheader, %.preheader, %.preheader, %.preheader
  %141 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8
  %142 = and i16 %141, 4
  %143 = icmp eq i16 %142, 0
  br i1 %143, label %144, label %145

; <label>:144                                     ; preds = %._crit_edge157
  store i8 1, i8* @door_stop, align 1, !tbaa !5
  store i8 1, i8* @firstmove, align 1, !tbaa !5
  br label %145

; <label>:145                                     ; preds = %144, %._crit_edge157
  %146 = load i32* @count, align 4, !tbaa !38
  %147 = icmp eq i32 %146, 0
  %.b = load i1* @command.newcount, align 1
  %or.cond5 = or i1 %147, %.b
  br i1 %or.cond5, label %150, label %148

; <label>:148                                     ; preds = %145
  %149 = load i8* @command.direction, align 1, !tbaa !28
  br label %.preheader

; <label>:150                                     ; preds = %145
  %151 = add i8 %ch.3, 64
  store i8 %151, i8* @command.direction, align 1, !tbaa !28
  br label %.preheader

; <label>:152                                     ; preds = %.preheader
  store i8 1, i8* @kamikaze, align 1, !tbaa !5
  br label %153

; <label>:153                                     ; preds = %152, %.preheader
  %154 = tail call zeroext i1 (...)* bitcast (i1 ()* @get_dir to i1 (...)*)() #8
  br i1 %154, label %156, label %155

; <label>:155                                     ; preds = %153
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:156                                     ; preds = %153
  %157 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %158 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %159 = add nsw i32 %158, %157
  store i32 %159, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %160 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %161 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %162 = add nsw i32 %161, %160
  store i32 %162, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %163 = shl i32 %162, 5
  %164 = add nsw i32 %163, %159
  %165 = sext i32 %164 to i64
  %166 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %165, i32 2
  %167 = load %union.thing** %166, align 8, !tbaa !43
  %168 = icmp eq %union.thing* %167, null
  br i1 %168, label %175, label %169

; <label>:169                                     ; preds = %156
  %170 = tail call zeroext i1 @see_monst(%union.thing* %167) #8
  br i1 %170, label %181, label %171

; <label>:171                                     ; preds = %169
  %172 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %173 = and i16 %172, 16384
  %174 = icmp eq i16 %173, 0
  br i1 %174, label %175, label %181

; <label>:175                                     ; preds = %171, %156
  %176 = load i8* @terse, align 1, !tbaa !5, !range !7
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %178, label %179

; <label>:178                                     ; preds = %175
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([7 x i8]* @.str518, i64 0, i64 0)) #8
  br label %179

; <label>:179                                     ; preds = %178, %175
  %180 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([17 x i8]* @.str619, i64 0, i64 0)) #8
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:181                                     ; preds = %171, %169
  %182 = tail call zeroext i1 @diag_ok(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord* @delta) #8
  br i1 %182, label %183, label %d_level.exit

; <label>:183                                     ; preds = %181
  store i8 1, i8* @to_death, align 1, !tbaa !5
  store i32 0, i32* @max_hit, align 4, !tbaa !38
  %184 = getelementptr inbounds %union.thing* %167, i64 0, i32 0, i32 8
  %185 = load i16* %184, align 2, !tbaa !18
  %186 = or i16 %185, 128
  store i16 %186, i16* %184, align 2, !tbaa !18
  %187 = load i8* @dir_ch, align 1, !tbaa !28
  store i8 %187, i8* @runch, align 1, !tbaa !28
  br label %.preheader

; <label>:188                                     ; preds = %.preheader
  %189 = tail call zeroext i1 (...)* bitcast (i1 ()* @get_dir to i1 (...)*)() #8
  br i1 %189, label %191, label %190

; <label>:190                                     ; preds = %188
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:191                                     ; preds = %188
  %192 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %193 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  tail call void @missile(i32 %192, i32 %193) #8
  br label %d_level.exit

; <label>:194                                     ; preds = %.preheader
  %195 = load i8* @last_comm, align 1, !tbaa !28
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %197, label %199

; <label>:197                                     ; preds = %194
  %198 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([32 x i8]* @.str720, i64 0, i64 0)) #8
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:199                                     ; preds = %194
  store i8 1, i8* @again, align 1, !tbaa !5
  br label %.preheader

; <label>:200                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @quaff to void (...)*)() #8
  br label %d_level.exit

; <label>:201                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  store i8 1, i8* @q_comm, align 1, !tbaa !5
  tail call void @quit(i32 0) #8
  store i8 0, i8* @q_comm, align 1, !tbaa !5
  br label %d_level.exit

; <label>:202                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  %203 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %204 = tail call zeroext i1 @inventory(%union.thing* %203, i32 0) #8
  br label %d_level.exit

; <label>:205                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @picky_inven to void (...)*)() #8
  br label %d_level.exit

; <label>:206                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @drop to void (...)*)() #8
  br label %d_level.exit

; <label>:207                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @read_scroll to void (...)*)() #8
  br label %d_level.exit

; <label>:208                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @eat to void (...)*)() #8
  br label %d_level.exit

; <label>:209                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @wield to void (...)*)() #8
  br label %d_level.exit

; <label>:210                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @wear to void (...)*)() #8
  br label %d_level.exit

; <label>:211                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @take_off to void (...)*)() #8
  br label %d_level.exit

; <label>:212                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @ring_on to void (...)*)() #8
  br label %d_level.exit

; <label>:213                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @ring_off to void (...)*)() #8
  br label %d_level.exit

; <label>:214                                     ; preds = %.preheader
  tail call void (...)* bitcast (void ()* @option to void (...)*)() #8
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:215                                     ; preds = %.preheader
  tail call void @call()
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:216                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  %217 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %218 = and i16 %217, 8
  %219 = icmp eq i16 %218, 0
  br i1 %219, label %levit_check.exit.i, label %levit_check.exit.thread.i

levit_check.exit.thread.i:                        ; preds = %216
  %220 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str48, i64 0, i64 0)) #8
  br label %d_level.exit

levit_check.exit.i:                               ; preds = %216
  %221 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %222 = trunc i64 %221 to i32
  %223 = shl i32 %222, 5
  %224 = lshr i64 %221, 32
  %225 = trunc i64 %224 to i32
  %226 = add nsw i32 %223, %225
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %227, i32 0
  %229 = load i8* %228, align 8, !tbaa !33
  %230 = icmp eq i8 %229, 37
  br i1 %230, label %233, label %231

; <label>:231                                     ; preds = %levit_check.exit.i
  %232 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([18 x i8]* @.str44, i64 0, i64 0)) #8
  br label %d_level.exit

; <label>:233                                     ; preds = %levit_check.exit.i
  %234 = load i32* @level, align 4, !tbaa !38
  %235 = add nsw i32 %234, 1
  store i32 %235, i32* @level, align 4, !tbaa !38
  store i8 0, i8* @seenstairs, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @new_level to void (...)*)() #8
  br label %d_level.exit

; <label>:236                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  tail call void @u_level()
  br label %d_level.exit

; <label>:237                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  tail call void @help()
  br label %d_level.exit

; <label>:238                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  tail call void @identify()
  br label %d_level.exit

; <label>:239                                     ; preds = %.preheader
  tail call void @search()
  br label %d_level.exit

; <label>:240                                     ; preds = %.preheader
  %241 = tail call zeroext i1 (...)* bitcast (i1 ()* @get_dir to i1 (...)*)() #8
  br i1 %241, label %242, label %243

; <label>:242                                     ; preds = %240
  tail call void (...)* bitcast (void ()* @do_zap to void (...)*)() #8
  br label %d_level.exit

; <label>:243                                     ; preds = %240
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:244                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @discovered to void (...)*)() #8
  br label %d_level.exit

; <label>:245                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  %246 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1024 x i8]* @huh, i64 0, i64 0)) #8
  br label %d_level.exit

; <label>:247                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  %248 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %249 = tail call i32 @clearok(%struct._win_st* %248, i1 zeroext true) #8
  %250 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %251 = tail call i32 @wrefresh(%struct._win_st* %250) #8
  br label %d_level.exit

; <label>:252                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  %253 = load i8** @release, align 8, !tbaa !1
  %254 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str821, i64 0, i64 0), i8* %253) #8
  br label %d_level.exit

; <label>:255                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @save_game to void (...)*)() #8
  br label %d_level.exit

; <label>:256                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:257                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  %258 = tail call zeroext i1 (...)* bitcast (i1 ()* @get_dir to i1 (...)*)() #8
  br i1 %258, label %259, label %d_level.exit

; <label>:259                                     ; preds = %257
  %260 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %261 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %262 = add nsw i32 %261, %260
  store i32 %262, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %263 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %264 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %265 = add nsw i32 %264, %263
  store i32 %265, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %266 = shl i32 %265, 5
  %267 = add nsw i32 %266, %262
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %268, i32 1
  %270 = load i8* @terse, align 1, !tbaa !5, !range !7
  %271 = icmp eq i8 %270, 0
  br i1 %271, label %272, label %273

; <label>:272                                     ; preds = %259
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([16 x i8]* @.str922, i64 0, i64 0)) #8
  %.pre166 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %.pre167 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  br label %273

; <label>:273                                     ; preds = %272, %259
  %274 = phi i32 [ %262, %259 ], [ %.pre167, %272 ]
  %275 = phi i32 [ %265, %259 ], [ %.pre166, %272 ]
  %276 = shl i32 %275, 5
  %277 = add nsw i32 %276, %274
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %278, i32 0
  %280 = load i8* %279, align 8, !tbaa !33
  %281 = icmp eq i8 %280, 94
  br i1 %281, label %284, label %282

; <label>:282                                     ; preds = %273
  %283 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str1023, i64 0, i64 0)) #8
  br label %d_level.exit

; <label>:284                                     ; preds = %273
  %285 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %286 = and i16 %285, 2048
  %287 = icmp eq i16 %286, 0
  br i1 %287, label %294, label %288

; <label>:288                                     ; preds = %284
  %289 = tail call i32 @rnd(i32 8) #8
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [0 x i8*]* bitcast ([8 x i8*]* @tr_name to [0 x i8*]*), i64 0, i64 %290
  %292 = load i8** %291, align 8, !tbaa !1
  %293 = tail call i32 (i8*, ...)* @msg(i8* %292) #8
  br label %d_level.exit

; <label>:294                                     ; preds = %284
  %295 = load i8* %269, align 1, !tbaa !28
  %296 = zext i8 %295 to i64
  %297 = and i64 %296, 7
  %298 = getelementptr inbounds [0 x i8*]* bitcast ([8 x i8*]* @tr_name to [0 x i8*]*), i64 0, i64 %297
  %299 = load i8** %298, align 8, !tbaa !1
  %300 = tail call i32 (i8*, ...)* @msg(i8* %299) #8
  %301 = load i8* %269, align 1, !tbaa !28
  %302 = or i8 %301, 64
  store i8 %302, i8* %269, align 1, !tbaa !28
  br label %d_level.exit

; <label>:303                                     ; preds = %.preheader
  store i8 0, i8* @door_stop, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  store i8 0, i8* @after, align 1, !tbaa !5
  store i8 0, i8* @again, align 1, !tbaa !5
  br label %d_level.exit

; <label>:304                                     ; preds = %.preheader
  store i8 1, i8* @move_on, align 1, !tbaa !5
  %305 = tail call zeroext i1 (...)* bitcast (i1 ()* @get_dir to i1 (...)*)() #8
  br i1 %305, label %307, label %306

; <label>:306                                     ; preds = %304
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:307                                     ; preds = %304
  %308 = load i8* @dir_ch, align 1, !tbaa !28
  store i8 %308, i8* @command.countch, align 1, !tbaa !28
  br label %.preheader

; <label>:309                                     ; preds = %.preheader
  %310 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  tail call void @current(%union.thing* %310, i8* getelementptr inbounds ([9 x i8]* @.str1124, i64 0, i64 0), i8* null)
  br label %d_level.exit

; <label>:311                                     ; preds = %.preheader
  %312 = load %union.thing** @cur_armor, align 8, !tbaa !1
  tail call void @current(%union.thing* %312, i8* getelementptr inbounds ([8 x i8]* @.str12, i64 0, i64 0), i8* null)
  br label %d_level.exit

; <label>:313                                     ; preds = %.preheader
  %314 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %315 = load i8* @terse, align 1, !tbaa !5, !range !7
  %316 = icmp ne i8 %315, 0
  %317 = select i1 %316, i8* getelementptr inbounds ([4 x i8]* @.str1325, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str14, i64 0, i64 0)
  tail call void @current(%union.thing* %314, i8* getelementptr inbounds ([8 x i8]* @.str12, i64 0, i64 0), i8* %317)
  %318 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %319 = load i8* @terse, align 1, !tbaa !5, !range !7
  %320 = icmp ne i8 %319, 0
  %321 = select i1 %320, i8* getelementptr inbounds ([4 x i8]* @.str15, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str16, i64 0, i64 0)
  tail call void @current(%union.thing* %318, i8* getelementptr inbounds ([8 x i8]* @.str12, i64 0, i64 0), i8* %321)
  br label %d_level.exit

; <label>:322                                     ; preds = %.preheader
  store i8 1, i8* @stat_msg, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @status to void (...)*)() #8
  store i8 0, i8* @stat_msg, align 1, !tbaa !5
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %d_level.exit

; <label>:323                                     ; preds = %.preheader
  store i8 0, i8* @after, align 1, !tbaa !5
  store i8 0, i8* @save_msg, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  %324 = tail call i8* @unctrl(i32 %92) #8
  %325 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str17, i64 0, i64 0), i8* %324) #8
  store i8 1, i8* @save_msg, align 1, !tbaa !5
  br label %d_level.exit

d_level.exit:                                     ; preds = %323, %322, %313, %311, %309, %306, %303, %294, %288, %282, %257, %256, %255, %252, %247, %245, %244, %243, %242, %239, %238, %237, %236, %233, %231, %levit_check.exit.thread.i, %215, %214, %213, %212, %211, %210, %209, %208, %207, %206, %205, %202, %201, %200, %197, %191, %190, %181, %179, %155, %140, %139, %138, %137, %136, %135, %134, %133, %132, %131, %130, %129, %128, %127, %126, %125, %124, %122, %levit_check.exit, %levit_check.exit.thread, %.preheader
  %326 = load i8* @running, align 1, !tbaa !5, !range !7
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %328, label %329

; <label>:328                                     ; preds = %d_level.exit
  store i8 0, i8* @door_stop, align 1, !tbaa !5
  br label %329

; <label>:329                                     ; preds = %328, %d_level.exit, %61, %.thread
  %330 = load i8* @take, align 1, !tbaa !28
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %333, label %332

; <label>:332                                     ; preds = %329
  tail call void @pick_up(i8 signext %330) #8
  br label %333

; <label>:333                                     ; preds = %332, %329
  %334 = load i8* @running, align 1, !tbaa !5, !range !7
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %336, label %337

; <label>:336                                     ; preds = %333
  store i8 0, i8* @door_stop, align 1, !tbaa !5
  br label %337

; <label>:337                                     ; preds = %336, %333
  %338 = load i8* @after, align 1, !tbaa !5, !range !7
  %339 = shl nuw i8 %338, 7
  %sext = ashr exact i8 %339, 7
  %340 = sext i8 %sext to i32
  %ntimes.1. = add nsw i32 %340, %ntimes.187
  %341 = icmp eq i32 %ntimes.1., 0
  br i1 %341, label %342, label %8

; <label>:342                                     ; preds = %337
  %343 = tail call i32 @spread(i32 2) #8
  tail call void @do_daemons(i32 %343) #8
  %344 = tail call i32 @spread(i32 2) #8
  tail call void @do_fuses(i32 %344) #8
  %345 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %346 = icmp eq %union.thing* %345, null
  br i1 %346, label %.thread18, label %347

; <label>:347                                     ; preds = %342
  %348 = getelementptr inbounds %union.thing* %345, i64 0, i32 0, i32 9, i32 5, i64 4
  %349 = bitcast i8* %348 to i32*
  %350 = load i32* %349, align 4, !tbaa !50
  switch i32 %350, label %.thread18 [
    i32 3, label %351
    i32 11, label %352
  ]

; <label>:351                                     ; preds = %347
  tail call void @search()
  br label %.thread18

; <label>:352                                     ; preds = %347
  %353 = tail call i32 @rnd(i32 50) #8
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %.thread18

; <label>:355                                     ; preds = %352
  tail call void (...)* bitcast (void ()* @teleport to void (...)*)() #8
  br label %.thread18

.thread18:                                        ; preds = %355, %352, %351, %347, %342
  %356 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %357 = icmp eq %union.thing* %356, null
  br i1 %357, label %.thread20, label %358

; <label>:358                                     ; preds = %.thread18
  %359 = getelementptr inbounds %union.thing* %356, i64 0, i32 0, i32 9, i32 5, i64 4
  %360 = bitcast i8* %359 to i32*
  %361 = load i32* %360, align 4, !tbaa !50
  switch i32 %361, label %.thread20 [
    i32 3, label %362
    i32 11, label %363
  ]

; <label>:362                                     ; preds = %358
  tail call void @search()
  br label %.thread20

; <label>:363                                     ; preds = %358
  %364 = tail call i32 @rnd(i32 50) #8
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %.thread20

; <label>:366                                     ; preds = %363
  tail call void (...)* bitcast (void ()* @teleport to void (...)*)() #8
  br label %.thread20

.thread20:                                        ; preds = %366, %363, %362, %358, %.thread18
  ret void
}

; Function Attrs: noreturn
declare void @exit(i32) #4

declare i32 @wrefresh(%struct._win_st*) #2

declare i32 @clearok(%struct._win_st*, i1 zeroext) #2

; Function Attrs: nounwind ssp uwtable
define void @current(%union.thing* %cur, i8* %how, i8* %where) #0 {
  store i8 0, i8* @after, align 1, !tbaa !5
  %1 = icmp eq %union.thing* %cur, null
  %2 = load i8* @terse, align 1, !tbaa !5, !range !7
  %3 = icmp ne i8 %2, 0
  br i1 %1, label %16, label %4

; <label>:4                                       ; preds = %0
  br i1 %3, label %6, label %5

; <label>:5                                       ; preds = %4
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str56, i64 0, i64 0), i8* %how) #8
  br label %6

; <label>:6                                       ; preds = %5, %4
  store i8 0, i8* @inv_describe, align 1, !tbaa !5
  %7 = getelementptr inbounds %union.thing* %cur, i64 0, i32 0, i32 9
  %8 = bitcast %struct.stats* %7 to i8*
  %9 = load i8* %8, align 1, !tbaa !13
  %10 = sext i8 %9 to i32
  %11 = tail call i8* @inv_name(%union.thing* %cur, i1 zeroext true) #8
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([7 x i8]* @.str57, i64 0, i64 0), i32 %10, i8* %11) #8
  store i8 1, i8* @inv_describe, align 1, !tbaa !5
  %12 = icmp eq i8* %where, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %6
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([4 x i8]* @.str58, i64 0, i64 0), i8* %where) #8
  br label %14

; <label>:14                                      ; preds = %13, %6
  %15 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %23

; <label>:16                                      ; preds = %0
  br i1 %3, label %18, label %17

; <label>:17                                      ; preds = %16
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([9 x i8]* @.str59, i64 0, i64 0)) #8
  br label %18

; <label>:18                                      ; preds = %17, %16
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([11 x i8]* @.str60, i64 0, i64 0), i8* %how) #8
  %19 = icmp eq i8* %where, null
  br i1 %19, label %21, label %20

; <label>:20                                      ; preds = %18
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([4 x i8]* @.str58, i64 0, i64 0), i8* %where) #8
  br label %21

; <label>:21                                      ; preds = %20, %18
  %22 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %23

; <label>:23                                      ; preds = %21, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @illcom(i32 %ch) #0 {
  store i8 0, i8* @save_msg, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  %1 = tail call i8* @unctrl(i32 %ch) #8
  %2 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str17, i64 0, i64 0), i8* %1) #8
  store i8 1, i8* @save_msg, align 1, !tbaa !5
  ret void
}

declare i8* @unctrl(i32) #2

; Function Attrs: nounwind ssp uwtable
define void @search() #0 {
  %1 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %2 = add nsw i32 %1, 1
  %3 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %4 = trunc i64 %3 to i32
  %5 = add nsw i32 %4, 1
  %6 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %7 = sext i16 %6 to i32
  %8 = and i32 %7, 2048
  %9 = icmp ne i32 %8, 0
  %10 = select i1 %9, i32 3, i32 0
  %11 = lshr i32 %7, 1
  %12 = and i32 %11, 2
  %13 = add nsw i32 %10, %12
  %14 = add nsw i32 %1, -1
  %15 = add nsw i32 %13, 5
  %16 = add nsw i32 %13, 2
  %17 = add nsw i32 %13, 3
  br label %18

; <label>:18                                      ; preds = %._crit_edge7, %0
  %19 = phi i64 [ %3, %0 ], [ %.pre, %._crit_edge7 ]
  %20 = phi i32 [ %4, %0 ], [ %86, %._crit_edge7 ]
  %found.06 = phi i8 [ 0, %0 ], [ %found.1.lcssa, %._crit_edge7 ]
  %y.04 = phi i32 [ %14, %0 ], [ %85, %._crit_edge7 ]
  %21 = add i32 %20, -1
  %22 = icmp sgt i32 %21, %5
  br i1 %22, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %18
  %.in = lshr i64 %19, 32
  %23 = trunc i64 %.in to i32
  %24 = sext i32 %21 to i64
  br label %25

; <label>:25                                      ; preds = %._crit_edge8, %.lr.ph
  %26 = phi i64 [ %.pre10, %._crit_edge8 ], [ %19, %.lr.ph ]
  %27 = phi i32 [ %.pre9, %._crit_edge8 ], [ %23, %.lr.ph ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge8 ], [ %24, %.lr.ph ]
  %found.13 = phi i8 [ %found.2, %._crit_edge8 ], [ %found.06, %.lr.ph ]
  %28 = icmp eq i32 %y.04, %27
  %29 = trunc i64 %26 to i32
  %30 = trunc i64 %indvars.iv to i32
  %31 = icmp eq i32 %30, %29
  %or.cond = and i1 %28, %31
  br i1 %or.cond, label %82, label %32

; <label>:32                                      ; preds = %25
  %33 = shl i32 %30, 5
  %34 = add nsw i32 %33, %y.04
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %35, i32 1
  %37 = load i8* %36, align 1, !tbaa !28
  %38 = and i8 %37, 16
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %82

; <label>:40                                      ; preds = %32
  %41 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %35, i32 0
  %42 = load i8* %41, align 8, !tbaa !33
  %43 = sext i8 %42 to i32
  switch i32 %43, label %82 [
    i32 124, label %44
    i32 45, label %44
    i32 46, label %52
    i32 32, label %78
  ]

; <label>:44                                      ; preds = %40, %40
  %45 = tail call i32 @rnd(i32 %15) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %82

; <label>:47                                      ; preds = %44
  store i8 43, i8* %41, align 8, !tbaa !33
  %48 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str18, i64 0, i64 0)) #8
  br label %49

; <label>:49                                      ; preds = %81, %69, %63, %47
  %50 = load i8* %36, align 1, !tbaa !28
  %51 = or i8 %50, 16
  store i8 %51, i8* %36, align 1, !tbaa !28
  store i32 0, i32* @count, align 4, !tbaa !38
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %82

; <label>:52                                      ; preds = %40
  %53 = tail call i32 @rnd(i32 %16) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %82

; <label>:55                                      ; preds = %52
  store i8 94, i8* %41, align 8, !tbaa !33
  %56 = load i8* @terse, align 1, !tbaa !5, !range !7
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([11 x i8]* @.str19, i64 0, i64 0)) #8
  br label %59

; <label>:59                                      ; preds = %58, %55
  %60 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %61 = and i16 %60, 2048
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %69, label %63

; <label>:63                                      ; preds = %59
  %64 = tail call i32 @rnd(i32 8) #8
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [0 x i8*]* bitcast ([8 x i8*]* @tr_name to [0 x i8*]*), i64 0, i64 %65
  %67 = load i8** %66, align 8, !tbaa !1
  %68 = tail call i32 (i8*, ...)* @msg(i8* %67) #8
  br label %49

; <label>:69                                      ; preds = %59
  %70 = load i8* %36, align 1, !tbaa !28
  %71 = zext i8 %70 to i64
  %72 = and i64 %71, 7
  %73 = getelementptr inbounds [0 x i8*]* bitcast ([8 x i8*]* @tr_name to [0 x i8*]*), i64 0, i64 %72
  %74 = load i8** %73, align 8, !tbaa !1
  %75 = tail call i32 (i8*, ...)* @msg(i8* %74) #8
  %76 = load i8* %36, align 1, !tbaa !28
  %77 = or i8 %76, 64
  store i8 %77, i8* %36, align 1, !tbaa !28
  br label %49

; <label>:78                                      ; preds = %40
  %79 = tail call i32 @rnd(i32 %17) #8
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

; <label>:81                                      ; preds = %78
  store i8 35, i8* %41, align 8, !tbaa !33
  br label %49

; <label>:82                                      ; preds = %78, %52, %49, %44, %40, %32, %25
  %found.2 = phi i8 [ %found.13, %32 ], [ %found.13, %40 ], [ %found.13, %78 ], [ 1, %49 ], [ %found.13, %52 ], [ %found.13, %44 ], [ %found.13, %25 ]
  %83 = icmp slt i32 %30, %5
  br i1 %83, label %._crit_edge8, label %._crit_edge

._crit_edge8:                                     ; preds = %82
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %.pre9 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %.pre10 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  br label %25

._crit_edge:                                      ; preds = %82, %18
  %found.1.lcssa = phi i8 [ %found.06, %18 ], [ %found.2, %82 ]
  %84 = icmp slt i32 %y.04, %2
  br i1 %84, label %._crit_edge7, label %87

._crit_edge7:                                     ; preds = %._crit_edge
  %85 = add nsw i32 %y.04, 1
  %.pre = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %86 = trunc i64 %.pre to i32
  br label %18

; <label>:87                                      ; preds = %._crit_edge
  %88 = and i8 %found.1.lcssa, 1
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %91, label %90

; <label>:90                                      ; preds = %87
  tail call void @look(i1 zeroext false) #8
  br label %91

; <label>:91                                      ; preds = %90, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @help() #0 {
  %1 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([42 x i8]* @.str20, i64 0, i64 0)) #8
  %2 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %3 = sext i8 %2 to i32
  %4 = icmp eq i8 %2, 42
  br i1 %4, label %.preheader, label %7

.preheader:                                       ; preds = %0
  %5 = load i8** getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0, i32 1), align 8, !tbaa !52
  %6 = icmp eq i8* %5, null
  br i1 %6, label %._crit_edge7, label %.lr.ph6

; <label>:7                                       ; preds = %0
  %8 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %9 = tail call i32 @wmove(%struct._win_st* %8, i32 0, i32 0) #8
  %10 = load i8** getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0, i32 1), align 8, !tbaa !52
  %11 = icmp eq i8* %10, null
  br i1 %11, label %._crit_edge13, label %.lr.ph12

; <label>:12                                      ; preds = %.lr.ph12
  %13 = getelementptr inbounds %struct.h_list* %strp.010, i64 1
  %14 = getelementptr inbounds %struct.h_list* %strp.010, i64 1, i32 1
  %15 = load i8** %14, align 8, !tbaa !52
  %16 = icmp eq i8* %15, null
  br i1 %16, label %._crit_edge13, label %.lr.ph12

.lr.ph12:                                         ; preds = %12, %7
  %17 = phi i8** [ %14, %12 ], [ getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0, i32 1), %7 ]
  %strp.010 = phi %struct.h_list* [ %13, %12 ], [ getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0), %7 ]
  %18 = getelementptr inbounds %struct.h_list* %strp.010, i64 0, i32 0
  %19 = load i8* %18, align 1, !tbaa !54
  %20 = icmp eq i8 %19, %2
  br i1 %20, label %21, label %12

; <label>:21                                      ; preds = %.lr.ph12
  store i8 1, i8* @lower_msg, align 1, !tbaa !5
  %22 = tail call i8* @unctrl(i32 %3) #8
  %23 = load i8** %17, align 8, !tbaa !52
  %24 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i8* %22, i8* %23) #8
  store i8 0, i8* @lower_msg, align 1, !tbaa !5
  br label %101

._crit_edge13:                                    ; preds = %12, %7
  %25 = tail call i8* @unctrl(i32 %3) #8
  %26 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([23 x i8]* @.str22, i64 0, i64 0), i8* %25) #8
  br label %101

.lr.ph6:                                          ; preds = %.lr.ph6, %.preheader
  %numprint.05 = phi i32 [ %numprint.0., %.lr.ph6 ], [ 0, %.preheader ]
  %strp.14 = phi %struct.h_list* [ %30, %.lr.ph6 ], [ getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0), %.preheader ]
  %27 = getelementptr inbounds %struct.h_list* %strp.14, i64 0, i32 2
  %28 = load i8* %27, align 1, !tbaa !55, !range !7
  %29 = zext i8 %28 to i32
  %numprint.0. = add nsw i32 %29, %numprint.05
  %30 = getelementptr inbounds %struct.h_list* %strp.14, i64 1
  %31 = getelementptr inbounds %struct.h_list* %strp.14, i64 1, i32 1
  %32 = load i8** %31, align 8, !tbaa !52
  %33 = icmp eq i8* %32, null
  br i1 %33, label %._crit_edge7, label %.lr.ph6

._crit_edge7:                                     ; preds = %.lr.ph6, %.preheader
  %numprint.0.lcssa = phi i32 [ 0, %.preheader ], [ %numprint.0., %.lr.ph6 ]
  %34 = and i32 %numprint.0.lcssa, 1
  %numprint.0.1 = add nsw i32 %34, %numprint.0.lcssa
  %35 = sdiv i32 %numprint.0.1, 2
  %36 = load i32* @LINES, align 4, !tbaa !38
  %37 = add nsw i32 %36, -1
  %38 = icmp sgt i32 %35, %37
  %numprint.3 = select i1 %38, i32 %37, i32 %35
  %39 = load %struct._win_st** @hw, align 8, !tbaa !1
  %40 = tail call i32 @wclear(%struct._win_st* %39) #8
  %41 = load i8** getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0, i32 1), align 8, !tbaa !52
  %42 = icmp eq i8* %41, null
  br i1 %42, label %split, label %.lr.ph

.lr.ph:                                           ; preds = %._crit_edge7
  %43 = shl nsw i32 %numprint.3, 1
  br label %44

; <label>:44                                      ; preds = %73, %.lr.ph
  %45 = phi i8** [ getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0, i32 1), %.lr.ph ], [ %75, %73 ]
  %cnt.03 = phi i32 [ 0, %.lr.ph ], [ %cnt.1, %73 ]
  %strp.22 = phi %struct.h_list* [ getelementptr inbounds ([0 x %struct.h_list]* bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @helpstr to [0 x %struct.h_list]*), i64 0, i64 0), %.lr.ph ], [ %74, %73 ]
  %46 = getelementptr inbounds %struct.h_list* %strp.22, i64 0, i32 2
  %47 = load i8* %46, align 1, !tbaa !55, !range !7
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %73, label %49

; <label>:49                                      ; preds = %44
  %50 = load %struct._win_st** @hw, align 8, !tbaa !1
  %51 = srem i32 %cnt.03, %numprint.3
  %52 = icmp slt i32 %cnt.03, %numprint.3
  br i1 %52, label %56, label %53

; <label>:53                                      ; preds = %49
  %54 = load i32* @COLS, align 4, !tbaa !38
  %55 = sdiv i32 %54, 2
  br label %56

; <label>:56                                      ; preds = %53, %49
  %57 = phi i32 [ %55, %53 ], [ 0, %49 ]
  %58 = tail call i32 @wmove(%struct._win_st* %50, i32 %51, i32 %57) #8
  %59 = getelementptr inbounds %struct.h_list* %strp.22, i64 0, i32 0
  %60 = load i8* %59, align 1, !tbaa !54
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %67, label %62

; <label>:62                                      ; preds = %56
  %63 = load %struct._win_st** @hw, align 8, !tbaa !1
  %64 = sext i8 %60 to i32
  %65 = tail call i8* @unctrl(i32 %64) #8
  %66 = tail call i32 @waddnstr(%struct._win_st* %63, i8* %65, i32 -1) #8
  br label %67

; <label>:67                                      ; preds = %62, %56
  %68 = load %struct._win_st** @hw, align 8, !tbaa !1
  %69 = load i8** %45, align 8, !tbaa !52
  %70 = tail call i32 @waddnstr(%struct._win_st* %68, i8* %69, i32 -1) #8
  %71 = add nsw i32 %cnt.03, 1
  %72 = icmp slt i32 %71, %43
  br i1 %72, label %73, label %split

; <label>:73                                      ; preds = %67, %44
  %cnt.1 = phi i32 [ %71, %67 ], [ %cnt.03, %44 ]
  %74 = getelementptr inbounds %struct.h_list* %strp.22, i64 1
  %75 = getelementptr inbounds %struct.h_list* %strp.22, i64 1, i32 1
  %76 = load i8** %75, align 8, !tbaa !52
  %77 = icmp eq i8* %76, null
  br i1 %77, label %split, label %44

split:                                            ; preds = %73, %67, %._crit_edge7
  %78 = load %struct._win_st** @hw, align 8, !tbaa !1
  %79 = load i32* @LINES, align 4, !tbaa !38
  %80 = add nsw i32 %79, -1
  %81 = tail call i32 @wmove(%struct._win_st* %78, i32 %80, i32 0) #8
  %82 = load %struct._win_st** @hw, align 8, !tbaa !1
  %83 = tail call i32 @waddnstr(%struct._win_st* %82, i8* getelementptr inbounds ([28 x i8]* @.str23, i64 0, i64 0), i32 -1) #8
  %84 = load %struct._win_st** @hw, align 8, !tbaa !1
  %85 = tail call i32 @wrefresh(%struct._win_st* %84) #8
  tail call void @wait_for(i32 32) #8
  %86 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %87 = tail call i32 @clearok(%struct._win_st* %86, i1 zeroext true) #8
  %88 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str13, i64 0, i64 0)) #8
  %89 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %90 = icmp eq %struct._win_st* %89, null
  br i1 %90, label %96, label %91

; <label>:91                                      ; preds = %split
  %92 = getelementptr inbounds %struct._win_st* %89, i64 0, i32 2
  %93 = load i16* %92, align 2, !tbaa !56
  %94 = sext i16 %93 to i32
  %95 = add nsw i32 %94, 1
  br label %96

; <label>:96                                      ; preds = %91, %split
  %97 = phi i32 [ %95, %91 ], [ -1, %split ]
  %98 = tail call i32 @wtouchln(%struct._win_st* %89, i32 0, i32 %97, i32 1) #8
  %99 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %100 = tail call i32 @wrefresh(%struct._win_st* %99) #8
  br label %101

; <label>:101                                     ; preds = %96, %._crit_edge13, %21
  ret void
}

declare i32 @wclear(%struct._win_st*) #2

declare i32 @waddnstr(%struct._win_st*, i8*, i32) #2

declare i32 @wtouchln(%struct._win_st*, i32, i32, i32) #2

; Function Attrs: nounwind ssp uwtable
define void @identify() #0 {
  %1 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str41, i64 0, i64 0)) #8
  %2 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %3 = sext i8 %2 to i32
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %4 = icmp eq i8 %2, 27
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str13, i64 0, i64 0)) #8
  br label %32

; <label>:7                                       ; preds = %0
  %isascii.i.i1 = icmp sgt i8 %2, -1
  br i1 %isascii.i.i1, label %8, label %13

; <label>:8                                       ; preds = %7
  %9 = sext i8 %2 to i64
  %10 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %9
  %11 = load i32* %10, align 4, !tbaa !38
  %12 = and i32 %11, 32768
  br label %isupper.exit

; <label>:13                                      ; preds = %7
  %14 = tail call i32 @__maskrune(i32 %3, i64 32768) #8
  br label %isupper.exit

isupper.exit:                                     ; preds = %13, %8
  %.sink.i.in.i = phi i32 [ %12, %8 ], [ %14, %13 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %.lr.ph, label %15

; <label>:15                                      ; preds = %isupper.exit
  %16 = add nsw i32 %3, -65
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %17, i32 0
  %19 = load i8** %18, align 8, !tbaa !57
  br label %.loopexit

; <label>:20                                      ; preds = %.lr.ph
  %21 = getelementptr inbounds %struct.h_list* %26, i64 0, i32 0
  %22 = load i8* %21, align 1, !tbaa !54
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %20, %isupper.exit
  %24 = phi i8 [ %22, %20 ], [ 124, %isupper.exit ]
  %hp.03 = phi %struct.h_list* [ %26, %20 ], [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @identify.ident_list to %struct.h_list*), %isupper.exit ]
  %25 = icmp eq i8 %24, %2
  %26 = getelementptr inbounds %struct.h_list* %hp.03, i64 1
  br i1 %25, label %27, label %20

; <label>:27                                      ; preds = %.lr.ph
  %28 = getelementptr inbounds %struct.h_list* %hp.03, i64 0, i32 1
  %29 = load i8** %28, align 8, !tbaa !52
  br label %.loopexit

.loopexit:                                        ; preds = %27, %20, %15
  %str.0 = phi i8* [ %19, %15 ], [ %29, %27 ], [ getelementptr inbounds ([18 x i8]* @.str42, i64 0, i64 0), %20 ]
  %30 = tail call i8* @unctrl(i32 %3) #8
  %31 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i8* %30, i8* %str.0) #8
  br label %32

; <label>:32                                      ; preds = %.loopexit, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @d_level() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 8
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %levit_check.exit, label %levit_check.exit.thread

levit_check.exit.thread:                          ; preds = %0
  %4 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str48, i64 0, i64 0)) #8
  br label %20

levit_check.exit:                                 ; preds = %0
  %5 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %6 = trunc i64 %5 to i32
  %7 = shl i32 %6, 5
  %8 = lshr i64 %5, 32
  %9 = trunc i64 %8 to i32
  %10 = add nsw i32 %7, %9
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %11, i32 0
  %13 = load i8* %12, align 8, !tbaa !33
  %14 = icmp eq i8 %13, 37
  br i1 %14, label %17, label %15

; <label>:15                                      ; preds = %levit_check.exit
  %16 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([18 x i8]* @.str44, i64 0, i64 0)) #8
  br label %20

; <label>:17                                      ; preds = %levit_check.exit
  %18 = load i32* @level, align 4, !tbaa !38
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @level, align 4, !tbaa !38
  store i8 0, i8* @seenstairs, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @new_level to void (...)*)() #8
  br label %20

; <label>:20                                      ; preds = %17, %15, %levit_check.exit.thread
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @u_level() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 8
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %levit_check.exit, label %levit_check.exit.thread

levit_check.exit.thread:                          ; preds = %0
  %4 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str48, i64 0, i64 0)) #8
  br label %29

levit_check.exit:                                 ; preds = %0
  %5 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %6 = trunc i64 %5 to i32
  %7 = shl i32 %6, 5
  %8 = lshr i64 %5, 32
  %9 = trunc i64 %8 to i32
  %10 = add nsw i32 %7, %9
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %11, i32 0
  %13 = load i8* %12, align 8, !tbaa !33
  %14 = icmp eq i8 %13, 37
  br i1 %14, label %15, label %27

; <label>:15                                      ; preds = %levit_check.exit
  %16 = load i8* @amulet, align 1, !tbaa !5, !range !7
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18

; <label>:18                                      ; preds = %15
  %19 = load i32* @level, align 4, !tbaa !38
  %20 = add nsw i32 %19, -1
  store i32 %20, i32* @level, align 4, !tbaa !38
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %18
  tail call void (...)* bitcast (void ()* @total_winner to void (...)*)() #8
  br label %23

; <label>:23                                      ; preds = %22, %18
  tail call void (...)* bitcast (void ()* @new_level to void (...)*)() #8
  %24 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([43 x i8]* @.str45, i64 0, i64 0)) #8
  br label %29

; <label>:25                                      ; preds = %15
  %26 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str46, i64 0, i64 0)) #8
  br label %29

; <label>:27                                      ; preds = %levit_check.exit
  %28 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([16 x i8]* @.str47, i64 0, i64 0)) #8
  br label %29

; <label>:29                                      ; preds = %27, %25, %23, %levit_check.exit.thread
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @levit_check() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 8
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str48, i64 0, i64 0)) #8
  br label %6

; <label>:6                                       ; preds = %4, %0
  %.0 = phi i1 [ true, %4 ], [ false, %0 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @call() #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([5 x i8]* @.str49, i64 0, i64 0), i32 -1) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %89, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  switch i32 %5, label %.thread [
    i32 61, label %6
    i32 33, label %13
    i32 63, label %20
    i32 47, label %27
    i32 58, label %34
  ]

; <label>:6                                       ; preds = %3
  %7 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = load i32* %8, align 4, !tbaa !50
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %10
  %12 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @r_stones to [0 x i8*]*), i64 0, i64 %10
  br label %41

; <label>:13                                      ; preds = %3
  %14 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %15 = bitcast i8* %14 to i32*
  %16 = load i32* %15, align 4, !tbaa !50
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %17
  %19 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @p_colors to [0 x i8*]*), i64 0, i64 %17
  br label %41

; <label>:20                                      ; preds = %3
  %21 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %22 = bitcast i8* %21 to i32*
  %23 = load i32* %22, align 4, !tbaa !50
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %24
  %26 = getelementptr inbounds [0 x i8*]* bitcast ([18 x i8*]* @s_names to [0 x i8*]*), i64 0, i64 %24
  br label %41

; <label>:27                                      ; preds = %3
  %28 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %29 = bitcast i8* %28 to i32*
  %30 = load i32* %29, align 4, !tbaa !50
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %31
  %33 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %31
  br label %41

; <label>:34                                      ; preds = %3
  %35 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([29 x i8]* @.str50, i64 0, i64 0)) #8
  br label %89

.thread:                                          ; preds = %3
  %36 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 11
  %37 = bitcast %union.thing** %36 to i8**
  %38 = load %union.thing** %36, align 8
  %39 = bitcast %union.thing* %38 to i8*
  %40 = bitcast %union.thing* %38 to i8*
  br label %50

; <label>:41                                      ; preds = %27, %20, %13, %6
  %op.0 = phi %struct.obj_info* [ %32, %27 ], [ %25, %20 ], [ %18, %13 ], [ %11, %6 ]
  %elsewise.0.in = phi i8** [ %33, %27 ], [ %26, %20 ], [ %19, %13 ], [ %12, %6 ]
  %elsewise.0 = load i8** %elsewise.0.in, align 8
  %42 = getelementptr inbounds %struct.obj_info* %op.0, i64 0, i32 3
  %43 = load i8** %42, align 8, !tbaa !1
  %44 = icmp eq i8* %43, null
  %elsewise.0. = select i1 %44, i8* %elsewise.0, i8* %43
  %45 = getelementptr inbounds %struct.obj_info* %op.0, i64 0, i32 4
  %46 = load i8* %45, align 8, !tbaa !5, !range !7
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

; <label>:48                                      ; preds = %41
  %49 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([33 x i8]* @.str51, i64 0, i64 0)) #8
  br label %89

; <label>:50                                      ; preds = %41, %.thread
  %51 = phi i8* [ %40, %.thread ], [ %43, %41 ]
  %elsewise.12 = phi i8* [ %39, %.thread ], [ %elsewise.0., %41 ]
  %guess.01 = phi i8** [ %37, %.thread ], [ %42, %41 ]
  %52 = icmp eq i8* %elsewise.12, null
  br i1 %52, label %61, label %53

; <label>:53                                      ; preds = %50
  %54 = icmp eq i8* %elsewise.12, %51
  br i1 %54, label %55, label %61

; <label>:55                                      ; preds = %53
  %56 = load i8* @terse, align 1, !tbaa !5, !range !7
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([5 x i8]* @.str52, i64 0, i64 0)) #8
  br label %59

; <label>:59                                      ; preds = %58, %55
  %60 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([12 x i8]* @.str53, i64 0, i64 0), i8* %51) #8
  br label %61

; <label>:61                                      ; preds = %59, %53, %50
  %elsewise.13 = phi i8* [ null, %50 ], [ %51, %59 ], [ %elsewise.12, %53 ]
  %62 = load i8* @terse, align 1, !tbaa !5, !range !7
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

; <label>:64                                      ; preds = %61
  %65 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([10 x i8]* @.str54, i64 0, i64 0)) #8
  br label %68

; <label>:66                                      ; preds = %61
  %67 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str55, i64 0, i64 0)) #8
  br label %68

; <label>:68                                      ; preds = %66, %64
  %69 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %52, label %70, label %72

; <label>:70                                      ; preds = %68
  %71 = tail call i8* @__memcpy_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8]* @.str13, i64 0, i64 0), i64 1, i64 %69)
  br label %74

; <label>:72                                      ; preds = %68
  %73 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* %elsewise.13, i64 %69) #8
  br label %74

; <label>:74                                      ; preds = %72, %70
  %75 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %76 = tail call i32 @get_str(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %struct._win_st* %75) #8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %89

; <label>:78                                      ; preds = %74
  %79 = load i8** %guess.01, align 8, !tbaa !1
  %80 = icmp eq i8* %79, null
  br i1 %80, label %82, label %81

; <label>:81                                      ; preds = %78
  tail call void @free(i8* %79)
  br label %82

; <label>:82                                      ; preds = %81, %78
  %83 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %84 = add i64 %83, 1
  %85 = and i64 %84, 4294967295
  %86 = tail call i8* @malloc(i64 %85) #8
  store i8* %86, i8** %guess.01, align 8, !tbaa !1
  %87 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %86, i1 false)
  %88 = tail call i8* @__strcpy_chk(i8* %86, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i64 %87) #8
  br label %89

; <label>:89                                      ; preds = %82, %74, %48, %34, %0
  ret void
}

; Function Attrs: nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) #5

; Function Attrs: nounwind readnone
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1) #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) #5

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #5

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #7

declare i32 @__maskrune(i32, i64) #2

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #8

; Function Attrs: nounwind readonly ssp uwtable
define %struct.delayed_action* @d_slot() #1 {
  br label %3

; <label>:1                                       ; preds = %3
  %2 = icmp ugt %struct.delayed_action* %7, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %2, label %8, label %3

; <label>:3                                       ; preds = %1, %0
  %dev.01 = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %7, %1 ]
  %4 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 0
  %5 = load i32* %4, align 4, !tbaa !58
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 1
  br i1 %6, label %8, label %1

; <label>:8                                       ; preds = %3, %1
  %.0 = phi %struct.delayed_action* [ %dev.01, %3 ], [ null, %1 ]
  ret %struct.delayed_action* %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define %struct.delayed_action* @find_slot(void (...)* readnone %func) #1 {
  br label %1

; <label>:1                                       ; preds = %9, %0
  %dev.01 = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %10, %9 ]
  %2 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !58
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 1
  %7 = load void (...)** %6, align 8, !tbaa !60
  %8 = icmp eq void (...)* %7, %func
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %5, %1
  %10 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 1
  %11 = icmp ugt %struct.delayed_action* %10, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %11, label %12, label %1

; <label>:12                                      ; preds = %9, %5
  %.0 = phi %struct.delayed_action* [ %dev.01, %5 ], [ null, %9 ]
  ret %struct.delayed_action* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @start_daemon(void (...)* %func, i32 %arg, i32 %type) #0 {
  br label %3

; <label>:1                                       ; preds = %3
  %2 = icmp ugt %struct.delayed_action* %7, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %2, label %d_slot.exit, label %3

; <label>:3                                       ; preds = %1, %0
  %dev.01.i = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %7, %1 ]
  %4 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 0
  %5 = load i32* %4, align 4, !tbaa !58
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 1
  br i1 %6, label %d_slot.exit, label %1

d_slot.exit:                                      ; preds = %3, %1
  %.0.i = phi %struct.delayed_action* [ %dev.01.i, %3 ], [ null, %1 ]
  %8 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 0
  store i32 %type, i32* %8, align 4, !tbaa !58
  %9 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 1
  store void (...)* %func, void (...)** %9, align 8, !tbaa !60
  %10 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 2
  store i32 %arg, i32* %10, align 4, !tbaa !61
  %11 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 3
  store i32 -1, i32* %11, align 4, !tbaa !62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @kill_daemon(void (...)* readnone %func) #0 {
  br label %1

; <label>:1                                       ; preds = %9, %0
  %dev.01.i = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %10, %9 ]
  %2 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !58
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 1
  %7 = load void (...)** %6, align 8, !tbaa !60
  %8 = icmp eq void (...)* %7, %func
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %5, %1
  %10 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 1
  %11 = icmp ugt %struct.delayed_action* %10, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %11, label %find_slot.exit.thread, label %1

; <label>:12                                      ; preds = %5
  store i32 0, i32* %2, align 4, !tbaa !58
  br label %find_slot.exit.thread

find_slot.exit.thread:                            ; preds = %12, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_daemons(i32 %flag) #0 {
  br label %1

; <label>:1                                       ; preds = %15, %0
  %dev.01 = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %16, %15 ]
  %2 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !58
  %4 = icmp eq i32 %3, %flag
  br i1 %4, label %5, label %15

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 3
  %7 = load i32* %6, align 4, !tbaa !62
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %15

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 1
  %11 = load void (...)** %10, align 8, !tbaa !60
  %12 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 0, i32 2
  %13 = load i32* %12, align 4, !tbaa !61
  %14 = bitcast void (...)* %11 to void (i32, ...)*
  tail call void (i32, ...)* %14(i32 %13) #8
  br label %15

; <label>:15                                      ; preds = %9, %5, %1
  %16 = getelementptr inbounds %struct.delayed_action* %dev.01, i64 1
  %17 = icmp ugt %struct.delayed_action* %16, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %17, label %18, label %1

; <label>:18                                      ; preds = %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @fuse(void (...)* %func, i32 %arg, i32 %time, i32 %type) #0 {
  br label %3

; <label>:1                                       ; preds = %3
  %2 = icmp ugt %struct.delayed_action* %7, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %2, label %d_slot.exit, label %3

; <label>:3                                       ; preds = %1, %0
  %dev.01.i = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %7, %1 ]
  %4 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 0
  %5 = load i32* %4, align 4, !tbaa !58
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 1
  br i1 %6, label %d_slot.exit, label %1

d_slot.exit:                                      ; preds = %3, %1
  %.0.i = phi %struct.delayed_action* [ %dev.01.i, %3 ], [ null, %1 ]
  %8 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 0
  store i32 %type, i32* %8, align 4, !tbaa !58
  %9 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 1
  store void (...)* %func, void (...)** %9, align 8, !tbaa !60
  %10 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 2
  store i32 %arg, i32* %10, align 4, !tbaa !61
  %11 = getelementptr inbounds %struct.delayed_action* %.0.i, i64 0, i32 3
  store i32 %time, i32* %11, align 4, !tbaa !62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lengthen(void (...)* readnone %func, i32 %xtime) #0 {
  br label %1

; <label>:1                                       ; preds = %9, %0
  %dev.01.i = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %10, %9 ]
  %2 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !58
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 1
  %7 = load void (...)** %6, align 8, !tbaa !60
  %8 = icmp eq void (...)* %7, %func
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %5, %1
  %10 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 1
  %11 = icmp ugt %struct.delayed_action* %10, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %11, label %find_slot.exit.thread, label %1

; <label>:12                                      ; preds = %5
  %13 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 3
  %14 = load i32* %13, align 4, !tbaa !62
  %15 = add nsw i32 %14, %xtime
  store i32 %15, i32* %13, align 4, !tbaa !62
  br label %find_slot.exit.thread

find_slot.exit.thread:                            ; preds = %12, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @extinguish(void (...)* readnone %func) #0 {
  br label %1

; <label>:1                                       ; preds = %9, %0
  %dev.01.i = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %10, %9 ]
  %2 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !58
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 0, i32 1
  %7 = load void (...)** %6, align 8, !tbaa !60
  %8 = icmp eq void (...)* %7, %func
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %5, %1
  %10 = getelementptr inbounds %struct.delayed_action* %dev.01.i, i64 1
  %11 = icmp ugt %struct.delayed_action* %10, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %11, label %find_slot.exit.thread, label %1

; <label>:12                                      ; preds = %5
  store i32 0, i32* %2, align 4, !tbaa !58
  br label %find_slot.exit.thread

find_slot.exit.thread:                            ; preds = %12, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_fuses(i32 %flag) #0 {
  br label %1

; <label>:1                                       ; preds = %18, %0
  %wire.01 = phi %struct.delayed_action* [ getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), %0 ], [ %19, %18 ]
  %2 = getelementptr inbounds %struct.delayed_action* %wire.01, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !58
  %4 = icmp eq i32 %3, %flag
  br i1 %4, label %5, label %18

; <label>:5                                       ; preds = %1
  %6 = getelementptr inbounds %struct.delayed_action* %wire.01, i64 0, i32 3
  %7 = load i32* %6, align 4, !tbaa !62
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %18

; <label>:9                                       ; preds = %5
  %10 = add nsw i32 %7, -1
  store i32 %10, i32* %6, align 4, !tbaa !62
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %9
  store i32 0, i32* %2, align 4, !tbaa !58
  %13 = getelementptr inbounds %struct.delayed_action* %wire.01, i64 0, i32 1
  %14 = load void (...)** %13, align 8, !tbaa !60
  %15 = getelementptr inbounds %struct.delayed_action* %wire.01, i64 0, i32 2
  %16 = load i32* %15, align 4, !tbaa !61
  %17 = bitcast void (...)* %14 to void (i32, ...)*
  tail call void (i32, ...)* %17(i32 %16) #8
  br label %18

; <label>:18                                      ; preds = %12, %9, %5, %1
  %19 = getelementptr inbounds %struct.delayed_action* %wire.01, i64 1
  %20 = icmp ugt %struct.delayed_action* %19, getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 19)
  br i1 %20, label %21, label %1

; <label>:21                                      ; preds = %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @doctor() #0 {
  %1 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %2 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %3 = load i32* @quiet, align 4, !tbaa !38
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* @quiet, align 4, !tbaa !38
  %5 = icmp slt i32 %1, 8
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %0
  %7 = shl i32 %1, 1
  %8 = add nsw i32 %4, %7
  %9 = icmp sgt i32 %8, 20
  br i1 %9, label %10, label %20

; <label>:10                                      ; preds = %6
  %11 = add nsw i32 %2, 1
  store i32 %11, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %20

; <label>:12                                      ; preds = %0
  %13 = icmp sgt i32 %3, 1
  br i1 %13, label %14, label %20

; <label>:14                                      ; preds = %12
  %15 = add nsw i32 %1, -7
  %16 = tail call i32 @rnd(i32 %15) #8
  %17 = add nsw i32 %16, 1
  %18 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %19 = add nsw i32 %17, %18
  store i32 %19, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %20

; <label>:20                                      ; preds = %14, %12, %10, %6
  %21 = phi i32 [ %2, %12 ], [ %19, %14 ], [ %2, %6 ], [ %11, %10 ]
  %22 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %23 = icmp eq %union.thing* %22, null
  br i1 %23, label %31, label %24

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds %union.thing* %22, i64 0, i32 0, i32 9, i32 5, i64 4
  %26 = bitcast i8* %25 to i32*
  %27 = load i32* %26, align 4, !tbaa !50
  %28 = icmp eq i32 %27, 9
  br i1 %28, label %29, label %31

; <label>:29                                      ; preds = %24
  %30 = add nsw i32 %21, 1
  store i32 %30, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %31

; <label>:31                                      ; preds = %29, %24, %20
  %32 = phi i32 [ %21, %20 ], [ %30, %29 ], [ %21, %24 ]
  %33 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %34 = icmp eq %union.thing* %33, null
  br i1 %34, label %42, label %35

; <label>:35                                      ; preds = %31
  %36 = getelementptr inbounds %union.thing* %33, i64 0, i32 0, i32 9, i32 5, i64 4
  %37 = bitcast i8* %36 to i32*
  %38 = load i32* %37, align 4, !tbaa !50
  %39 = icmp eq i32 %38, 9
  br i1 %39, label %40, label %42

; <label>:40                                      ; preds = %35
  %41 = add nsw i32 %32, 1
  store i32 %41, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %42

; <label>:42                                      ; preds = %40, %35, %31
  %43 = phi i32 [ %32, %31 ], [ %41, %40 ], [ %32, %35 ]
  %44 = icmp eq i32 %2, %43
  br i1 %44, label %50, label %45

; <label>:45                                      ; preds = %42
  %46 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %47 = icmp sgt i32 %43, %46
  br i1 %47, label %48, label %49

; <label>:48                                      ; preds = %45
  store i32 %46, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %49

; <label>:49                                      ; preds = %48, %45
  store i32 0, i32* @quiet, align 4, !tbaa !38
  br label %50

; <label>:50                                      ; preds = %49, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @swander() #0 {
  %1 = tail call i32 @spread(i32 1) #8
  tail call void @start_daemon(void (...)* bitcast (void ()* @rollwand to void (...)*), i32 0, i32 %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @rollwand() #0 {
  %1 = load i32* @between, align 4, !tbaa !38
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @between, align 4, !tbaa !38
  %3 = icmp sgt i32 %1, 2
  br i1 %3, label %4, label %11

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @roll(i32 1, i32 6) #8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %10

; <label>:7                                       ; preds = %4
  tail call void (...)* bitcast (void ()* @wanderer to void (...)*)() #8
  tail call void @kill_daemon(void (...)* bitcast (void ()* @rollwand to void (...)*)) #8
  %8 = tail call i32 @spread(i32 70) #8
  %9 = tail call i32 @spread(i32 1) #8
  tail call void @fuse(void (...)* bitcast (void ()* @swander to void (...)*), i32 0, i32 %8, i32 %9) #8
  br label %10

; <label>:10                                      ; preds = %7, %4
  store i32 0, i32* @between, align 4, !tbaa !38
  br label %11

; <label>:11                                      ; preds = %10, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @unconfuse() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, -513
  store i16 %2, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %3 = tail call i8* @choose_str(i8* getelementptr inbounds ([7 x i8]* @.str162, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str263, i64 0, i64 0)) #8
  %4 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str61, i64 0, i64 0), i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @unsee() #0 {
  %th.01 = load %union.thing** @mlist, align 8
  %1 = icmp eq %union.thing* %th.01, null
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %22, %0
  %th.02 = phi %union.thing* [ %th.0, %22 ], [ %th.01, %0 ]
  %2 = getelementptr inbounds %union.thing* %th.02, i64 0, i32 0, i32 8
  %3 = load i16* %2, align 2, !tbaa !18
  %4 = and i16 %3, 1024
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %22, label %6

; <label>:6                                       ; preds = %.lr.ph
  %7 = tail call zeroext i1 @see_monst(%union.thing* %th.02) #8
  br i1 %7, label %8, label %22

; <label>:8                                       ; preds = %6
  %9 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %10 = getelementptr inbounds %union.thing* %th.02, i64 0, i32 0, i32 2, i32 1
  %11 = load i32* %10, align 4, !tbaa !23
  %12 = getelementptr inbounds %union.thing* %th.02, i64 0, i32 0, i32 2, i32 0
  %13 = load i32* %12, align 4, !tbaa !22
  %14 = tail call i32 @wmove(%struct._win_st* %9, i32 %11, i32 %13) #8
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %22, label %16

; <label>:16                                      ; preds = %8
  %17 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %18 = getelementptr inbounds %union.thing* %th.02, i64 0, i32 0, i32 6
  %19 = load i8* %18, align 1, !tbaa !42
  %20 = sext i8 %19 to i32
  %21 = tail call i32 @waddch(%struct._win_st* %17, i32 %20) #8
  br label %22

; <label>:22                                      ; preds = %16, %8, %6, %.lr.ph
  %23 = getelementptr inbounds %union.thing* %th.02, i64 0, i32 0, i32 0
  %th.0 = load %union.thing** %23, align 8
  %24 = icmp eq %union.thing* %th.0, null
  br i1 %24, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %22, %0
  %25 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %26 = and i16 %25, -3
  store i16 %26, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @sight() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 4
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %16, label %4

; <label>:4                                       ; preds = %0
  tail call void @extinguish(void (...)* bitcast (void ()* @sight to void (...)*)) #8
  %5 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %6 = and i16 %5, -5
  store i16 %6, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %7 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %8 = getelementptr inbounds %struct.room* %7, i64 0, i32 4
  %9 = load i16* %8, align 2, !tbaa !39
  %10 = and i16 %9, 2
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %4
  tail call void @enter_room(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  br label %13

; <label>:13                                      ; preds = %12, %4
  %14 = tail call i8* @choose_str(i8* getelementptr inbounds ([41 x i8]* @.str364, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8]* @.str465, i64 0, i64 0)) #8
  %15 = tail call i32 (i8*, ...)* @msg(i8* %14) #8
  br label %16

; <label>:16                                      ; preds = %13, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @nohaste() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, -65
  store i16 %2, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %3 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str566, i64 0, i64 0)) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @stomach() #0 {
  %1 = load i32* @hungry_state, align 4, !tbaa !38
  %2 = load i32* @food_left, align 4, !tbaa !38
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %26

; <label>:4                                       ; preds = %0
  %5 = add nsw i32 %2, -1
  store i32 %5, i32* @food_left, align 4, !tbaa !38
  %6 = icmp slt i32 %2, -850
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  tail call void @death(i8 signext 115) #8
  br label %8

; <label>:8                                       ; preds = %7, %4
  %9 = load i32* @no_command, align 4, !tbaa !38
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %57

; <label>:11                                      ; preds = %8
  %12 = tail call i32 @rnd(i32 5) #8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %57

; <label>:14                                      ; preds = %11
  %15 = tail call i32 @rnd(i32 8) #8
  %16 = add nsw i32 %15, 4
  %17 = load i32* @no_command, align 4, !tbaa !38
  %18 = add nsw i32 %16, %17
  store i32 %18, i32* @no_command, align 4, !tbaa !38
  store i32 3, i32* @hungry_state, align 4, !tbaa !38
  %19 = load i8* @terse, align 1, !tbaa !5, !range !7
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %14
  %22 = tail call i8* @choose_str(i8* getelementptr inbounds ([50 x i8]* @.str667, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8]* @.str768, i64 0, i64 0)) #8
  tail call void (i8*, ...)* @addmsg(i8* %22) #8
  br label %23

; <label>:23                                      ; preds = %21, %14
  %24 = tail call i8* @choose_str(i8* getelementptr inbounds ([14 x i8]* @.str869, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str970, i64 0, i64 0)) #8
  %25 = tail call i32 (i8*, ...)* @msg(i8* %24) #8
  br label %51

; <label>:26                                      ; preds = %0
  %27 = tail call i32 @ring_eat(i32 0) #8
  %28 = tail call i32 @ring_eat(i32 1) #8
  %29 = load i8* @amulet, align 1, !tbaa !5, !range !7
  %30 = zext i8 %29 to i32
  %31 = load i32* @food_left, align 4, !tbaa !38
  %.neg5 = xor i32 %27, -1
  %.neg6 = sub i32 %.neg5, %28
  %32 = add i32 %.neg6, %30
  %33 = add i32 %32, %31
  store i32 %33, i32* @food_left, align 4, !tbaa !38
  %34 = icmp slt i32 %33, 150
  %35 = icmp sgt i32 %2, 149
  %or.cond = and i1 %34, %35
  br i1 %or.cond, label %36, label %39

; <label>:36                                      ; preds = %26
  store i32 2, i32* @hungry_state, align 4, !tbaa !38
  %37 = tail call i8* @choose_str(i8* getelementptr inbounds ([57 x i8]* @.str1071, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str1172, i64 0, i64 0)) #8
  %38 = tail call i32 (i8*, ...)* @msg(i8* %37) #8
  br label %51

; <label>:39                                      ; preds = %26
  %40 = icmp slt i32 %33, 300
  %41 = icmp sgt i32 %2, 299
  %or.cond3 = and i1 %40, %41
  br i1 %or.cond3, label %42, label %51

; <label>:42                                      ; preds = %39
  store i32 1, i32* @hungry_state, align 4, !tbaa !38
  %43 = load i8* @terse, align 1, !tbaa !5, !range !7
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

; <label>:45                                      ; preds = %42
  %46 = tail call i8* @choose_str(i8* getelementptr inbounds ([21 x i8]* @.str1273, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8]* @.str1374, i64 0, i64 0)) #8
  %47 = tail call i32 (i8*, ...)* @msg(i8* %46) #8
  br label %51

; <label>:48                                      ; preds = %42
  %49 = tail call i8* @choose_str(i8* getelementptr inbounds ([29 x i8]* @.str1475, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8]* @.str1576, i64 0, i64 0)) #8
  %50 = tail call i32 (i8*, ...)* @msg(i8* %49) #8
  br label %51

; <label>:51                                      ; preds = %48, %45, %39, %36, %23
  %52 = load i32* @hungry_state, align 4, !tbaa !38
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %57, label %54

; <label>:54                                      ; preds = %51
  %55 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %56 = and i16 %55, -8193
  store i16 %56, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  store i8 0, i8* @running, align 1, !tbaa !5
  store i8 0, i8* @to_death, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  br label %57

; <label>:57                                      ; preds = %54, %51, %11, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @come_down() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 2048
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %83, label %4

; <label>:4                                       ; preds = %0
  tail call void @kill_daemon(void (...)* bitcast (void ()* @visuals to void (...)*)) #8
  %5 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %6 = and i16 %5, -2049
  store i16 %6, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %7 = and i16 %5, 4
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %.preheader, label %83

.preheader:                                       ; preds = %4
  %tp.04 = load %union.thing** @lvl_obj, align 8
  %9 = icmp eq %union.thing* %tp.04, null
  br i1 %9, label %29, label %.lr.ph6

.lr.ph6:                                          ; preds = %26, %.preheader
  %tp.05 = phi %union.thing* [ %tp.0, %26 ], [ %tp.04, %.preheader ]
  %10 = getelementptr inbounds %union.thing* %tp.05, i64 0, i32 0, i32 2, i32 1
  %11 = getelementptr inbounds i32* %10, i64 1
  %12 = load i32* %11, align 4, !tbaa !41
  %13 = load i32* %10, align 4, !tbaa !40
  %14 = tail call zeroext i1 @cansee(i32 %12, i32 %13) #8
  br i1 %14, label %15, label %26

; <label>:15                                      ; preds = %.lr.ph6
  %16 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %17 = load i32* %11, align 4, !tbaa !41
  %18 = load i32* %10, align 4, !tbaa !40
  %19 = tail call i32 @wmove(%struct._win_st* %16, i32 %17, i32 %18) #8
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %26, label %21

; <label>:21                                      ; preds = %15
  %22 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %23 = getelementptr inbounds %union.thing* %tp.05, i64 0, i32 0, i32 2, i32 0
  %24 = load i32* %23, align 4, !tbaa !8
  %25 = tail call i32 @waddch(%struct._win_st* %22, i32 %24) #8
  br label %26

; <label>:26                                      ; preds = %21, %15, %.lr.ph6
  %27 = getelementptr inbounds %union.thing* %tp.05, i64 0, i32 0, i32 0
  %tp.0 = load %union.thing** %27, align 8
  %28 = icmp eq %union.thing* %tp.0, null
  br i1 %28, label %._crit_edge7, label %.lr.ph6

._crit_edge7:                                     ; preds = %26
  %.pre = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  br label %29

; <label>:29                                      ; preds = %._crit_edge7, %.preheader
  %30 = phi i16 [ %.pre, %._crit_edge7 ], [ %6, %.preheader ]
  %31 = and i16 %30, 16384
  %32 = icmp eq i16 %31, 0
  %tp.11 = load %union.thing** @mlist, align 8
  %33 = icmp eq %union.thing* %tp.11, null
  br i1 %33, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %79, %29
  %tp.12 = phi %union.thing* [ %tp.1, %79 ], [ %tp.11, %29 ]
  %34 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %35 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 2, i32 1
  %36 = load i32* %35, align 4, !tbaa !23
  %37 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 2, i32 0
  %38 = load i32* %37, align 4, !tbaa !22
  %39 = tail call i32 @wmove(%struct._win_st* %34, i32 %36, i32 %38) #8
  %40 = load i32* %35, align 4, !tbaa !23
  %41 = load i32* %37, align 4, !tbaa !22
  %42 = tail call zeroext i1 @cansee(i32 %40, i32 %41) #8
  br i1 %42, label %43, label %69

; <label>:43                                      ; preds = %.lr.ph
  %44 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 8
  %45 = load i16* %44, align 2, !tbaa !18
  %46 = and i16 %45, 1024
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %52, label %48

; <label>:48                                      ; preds = %43
  %49 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %50 = and i16 %49, 2
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %58, label %52

; <label>:52                                      ; preds = %48, %43
  %53 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %54 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 5
  %55 = load i8* %54, align 1, !tbaa !44
  %56 = sext i8 %55 to i32
  %57 = tail call i32 @waddch(%struct._win_st* %53, i32 %56) #8
  br label %79

; <label>:58                                      ; preds = %48
  %59 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %60 = load i32* %37, align 4, !tbaa !22
  %61 = shl i32 %60, 5
  %62 = load i32* %35, align 4, !tbaa !23
  %63 = add nsw i32 %61, %62
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %64, i32 0
  %66 = load i8* %65, align 8, !tbaa !33
  %67 = sext i8 %66 to i32
  %68 = tail call i32 @waddch(%struct._win_st* %59, i32 %67) #8
  br label %79

; <label>:69                                      ; preds = %.lr.ph
  br i1 %32, label %79, label %70

; <label>:70                                      ; preds = %69
  %71 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %72 = getelementptr inbounds %struct._win_st* %71, i64 0, i32 7
  store i32 65536, i32* %72, align 4, !tbaa !45
  %73 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 4
  %74 = load i8* %73, align 1, !tbaa !37
  %75 = sext i8 %74 to i32
  %76 = tail call i32 @waddch(%struct._win_st* %71, i32 %75) #8
  %77 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %78 = getelementptr inbounds %struct._win_st* %77, i64 0, i32 7
  store i32 0, i32* %78, align 4, !tbaa !45
  br label %79

; <label>:79                                      ; preds = %70, %69, %58, %52
  %80 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 0
  %tp.1 = load %union.thing** %80, align 8
  %81 = icmp eq %union.thing* %tp.1, null
  br i1 %81, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %79, %29
  %82 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([32 x i8]* @.str1677, i64 0, i64 0)) #8
  br label %83

; <label>:83                                      ; preds = %._crit_edge, %4, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @visuals() #0 {
  %1 = load i8* @after, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %.loopexit, label %3

; <label>:3                                       ; preds = %0
  %4 = load i8* @running, align 1, !tbaa !5, !range !7
  %5 = icmp eq i8 %4, 0
  %6 = load i8* @jump, align 1
  %7 = icmp eq i8 %6, 0
  %or.cond = or i1 %5, %7
  br i1 %or.cond, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %3
  %tp.04 = load %union.thing** @lvl_obj, align 8
  %8 = icmp eq %union.thing* %tp.04, null
  br i1 %8, label %._crit_edge, label %.lr.ph6

.lr.ph6:                                          ; preds = %25, %.preheader
  %tp.05 = phi %union.thing* [ %tp.0, %25 ], [ %tp.04, %.preheader ]
  %9 = getelementptr inbounds %union.thing* %tp.05, i64 0, i32 0, i32 2, i32 1
  %10 = getelementptr inbounds i32* %9, i64 1
  %11 = load i32* %10, align 4, !tbaa !41
  %12 = load i32* %9, align 4, !tbaa !40
  %13 = tail call zeroext i1 @cansee(i32 %11, i32 %12) #8
  br i1 %13, label %14, label %25

; <label>:14                                      ; preds = %.lr.ph6
  %15 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %16 = load i32* %10, align 4, !tbaa !41
  %17 = load i32* %9, align 4, !tbaa !40
  %18 = tail call i32 @wmove(%struct._win_st* %15, i32 %16, i32 %17) #8
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %25, label %20

; <label>:20                                      ; preds = %14
  %21 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %22 = tail call signext i8 (...)* bitcast (i8 ()* @rnd_thing to i8 (...)*)() #8
  %23 = sext i8 %22 to i32
  %24 = tail call i32 @waddch(%struct._win_st* %21, i32 %23) #8
  br label %25

; <label>:25                                      ; preds = %20, %14, %.lr.ph6
  %26 = getelementptr inbounds %union.thing* %tp.05, i64 0, i32 0, i32 0
  %tp.0 = load %union.thing** %26, align 8
  %27 = icmp eq %union.thing* %tp.0, null
  br i1 %27, label %._crit_edge, label %.lr.ph6

._crit_edge:                                      ; preds = %25, %.preheader
  %28 = load i8* @seenstairs, align 1, !tbaa !5, !range !7
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %45

; <label>:30                                      ; preds = %._crit_edge
  %31 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %32 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  %33 = tail call zeroext i1 @cansee(i32 %31, i32 %32) #8
  br i1 %33, label %34, label %45

; <label>:34                                      ; preds = %30
  %35 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %36 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %37 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  %38 = tail call i32 @wmove(%struct._win_st* %35, i32 %36, i32 %37) #8
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %45, label %40

; <label>:40                                      ; preds = %34
  %41 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %42 = tail call signext i8 (...)* bitcast (i8 ()* @rnd_thing to i8 (...)*)() #8
  %43 = sext i8 %42 to i32
  %44 = tail call i32 @waddch(%struct._win_st* %41, i32 %43) #8
  br label %45

; <label>:45                                      ; preds = %40, %34, %30, %._crit_edge
  %46 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %47 = and i16 %46, 16384
  %48 = icmp eq i16 %47, 0
  %tp.12 = load %union.thing** @mlist, align 8
  %49 = icmp eq %union.thing* %tp.12, null
  br i1 %49, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %84, %45
  %tp.13 = phi %union.thing* [ %tp.1, %84 ], [ %tp.12, %45 ]
  %50 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %51 = getelementptr inbounds %union.thing* %tp.13, i64 0, i32 0, i32 2, i32 1
  %52 = load i32* %51, align 4, !tbaa !23
  %53 = getelementptr inbounds %union.thing* %tp.13, i64 0, i32 0, i32 2, i32 0
  %54 = load i32* %53, align 4, !tbaa !22
  %55 = tail call i32 @wmove(%struct._win_st* %50, i32 %52, i32 %54) #8
  %56 = tail call zeroext i1 @see_monst(%union.thing* %tp.13) #8
  br i1 %56, label %57, label %75

; <label>:57                                      ; preds = %.lr.ph
  %58 = getelementptr inbounds %union.thing* %tp.13, i64 0, i32 0, i32 4
  %59 = load i8* %58, align 1, !tbaa !37
  %60 = icmp eq i8 %59, 88
  br i1 %60, label %61, label %70

; <label>:61                                      ; preds = %57
  %62 = getelementptr inbounds %union.thing* %tp.13, i64 0, i32 0, i32 5
  %63 = load i8* %62, align 1, !tbaa !44
  %64 = icmp eq i8 %63, 88
  br i1 %64, label %70, label %65

; <label>:65                                      ; preds = %61
  %66 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %67 = tail call signext i8 (...)* bitcast (i8 ()* @rnd_thing to i8 (...)*)() #8
  %68 = sext i8 %67 to i32
  %69 = tail call i32 @waddch(%struct._win_st* %66, i32 %68) #8
  br label %84

; <label>:70                                      ; preds = %61, %57
  %71 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %72 = tail call i32 @rnd(i32 26) #8
  %73 = add nsw i32 %72, 65
  %74 = tail call i32 @waddch(%struct._win_st* %71, i32 %73) #8
  br label %84

; <label>:75                                      ; preds = %.lr.ph
  br i1 %48, label %84, label %76

; <label>:76                                      ; preds = %75
  %77 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %78 = getelementptr inbounds %struct._win_st* %77, i64 0, i32 7
  store i32 65536, i32* %78, align 4, !tbaa !45
  %79 = tail call i32 @rnd(i32 26) #8
  %80 = add nsw i32 %79, 65
  %81 = tail call i32 @waddch(%struct._win_st* %77, i32 %80) #8
  %82 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %83 = getelementptr inbounds %struct._win_st* %82, i64 0, i32 7
  store i32 0, i32* %83, align 4, !tbaa !45
  br label %84

; <label>:84                                      ; preds = %76, %75, %70, %65
  %85 = getelementptr inbounds %union.thing* %tp.13, i64 0, i32 0, i32 0
  %tp.1 = load %union.thing** %85, align 8
  %86 = icmp eq %union.thing* %tp.1, null
  br i1 %86, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %84, %45, %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @land() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, -9
  store i16 %2, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %3 = tail call i8* @choose_str(i8* getelementptr inbounds ([31 x i8]* @.str1778, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8]* @.str1879, i64 0, i64 0)) #8
  %4 = tail call i32 (i8*, ...)* @msg(i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @fight(%struct.coord* %mp, %union.thing* readonly %weap, i1 zeroext %thrown) #0 {
  %1 = getelementptr inbounds %struct.coord* %mp, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = shl i32 %2, 5
  %4 = getelementptr inbounds %struct.coord* %mp, i64 0, i32 1
  %5 = load i32* %4, align 4, !tbaa !20
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 2
  %9 = load %union.thing** %8, align 8, !tbaa !43
  store i32 0, i32* @count, align 4, !tbaa !38
  store i32 0, i32* @quiet, align 4, !tbaa !38
  tail call void @runto(%struct.coord* %mp) #8
  %10 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 4
  %11 = load i8* %10, align 1, !tbaa !37
  %12 = icmp eq i8 %11, 88
  br i1 %12, label %13, label %41

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 5
  %15 = load i8* %14, align 1, !tbaa !44
  %16 = icmp eq i8 %15, 88
  br i1 %16, label %41, label %17

; <label>:17                                      ; preds = %13
  %18 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %19 = and i16 %18, 4
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %41

; <label>:21                                      ; preds = %17
  store i8 88, i8* %14, align 1, !tbaa !44
  %22 = and i16 %18, 2048
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %38, label %24

; <label>:24                                      ; preds = %21
  %25 = tail call i32 @rnd(i32 26) #8
  %26 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %27 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 2, i32 1
  %28 = load i32* %27, align 4, !tbaa !23
  %29 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 2, i32 0
  %30 = load i32* %29, align 4, !tbaa !22
  %31 = tail call i32 @wmove(%struct._win_st* %26, i32 %28, i32 %30) #8
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %38, label %33

; <label>:33                                      ; preds = %24
  %34 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %35 = shl i32 %25, 24
  %sext = add i32 %35, 1090519040
  %36 = ashr exact i32 %sext, 24
  %37 = tail call i32 @waddch(%struct._win_st* %34, i32 %36) #8
  br label %38

; <label>:38                                      ; preds = %33, %24, %21
  %39 = tail call i8* @choose_str(i8* getelementptr inbounds ([32 x i8]* @.str14287, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8]* @.str15288, i64 0, i64 0)) #8
  %40 = tail call i32 (i8*, ...)* @msg(i8* %39) #8
  br i1 %thrown, label %41, label %bounce.exit

; <label>:41                                      ; preds = %38, %17, %13, %0
  %42 = tail call i8* @set_mname(%union.thing* %9)
  %43 = load i8* @terse, align 1, !tbaa !5, !range !7
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

; <label>:45                                      ; preds = %41
  %46 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %47 = xor i8 %46, 1
  br label %48

; <label>:48                                      ; preds = %45, %41
  %49 = phi i8 [ 0, %41 ], [ %47, %45 ]
  store i8 %49, i8* @has_hit, align 1, !tbaa !5
  %50 = tail call zeroext i1 @roll_em(%union.thing* @player, %union.thing* %9, %union.thing* %weap, i1 zeroext %thrown)
  %51 = load i8* @terse, align 1, !tbaa !5, !range !7
  %52 = icmp ne i8 %51, 0
  br i1 %50, label %53, label %97

; <label>:53                                      ; preds = %48
  br i1 %thrown, label %54, label %72

; <label>:54                                      ; preds = %53
  %55 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %thunk.exit

; <label>:57                                      ; preds = %54
  %58 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 2, i32 0
  %59 = load i32* %58, align 4, !tbaa !8
  %60 = icmp eq i32 %59, 41
  br i1 %60, label %61, label %68

; <label>:61                                      ; preds = %57
  %62 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 4
  %63 = bitcast i8* %62 to i32*
  %64 = load i32* %63, align 4, !tbaa !50
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %65, i32 0
  %67 = load i8** %66, align 8, !tbaa !66
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str33305, i64 0, i64 0), i8* %67) #8
  br label %69

; <label>:68                                      ; preds = %57
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([9 x i8]* @.str34306, i64 0, i64 0)) #8
  br label %69

; <label>:69                                      ; preds = %68, %61
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([3 x i8]* @.str35307, i64 0, i64 0), i8* %42) #8
  br i1 %52, label %thunk.exit, label %70

; <label>:70                                      ; preds = %69
  %71 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %thunk.exit

; <label>:72                                      ; preds = %53
  tail call void @hit(i8* null, i8* %42, i1 zeroext %52)
  br label %thunk.exit

thunk.exit:                                       ; preds = %72, %70, %69, %54
  %73 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %74 = and i16 %73, 1
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %85, label %76

; <label>:76                                      ; preds = %thunk.exit
  %77 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 8
  %78 = load i16* %77, align 2, !tbaa !18
  %79 = or i16 %78, 512
  store i16 %79, i16* %77, align 2, !tbaa !18
  %80 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %81 = and i16 %80, -2
  store i16 %81, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %82 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  %83 = tail call i8* @pick_color(i8* getelementptr inbounds ([4 x i8]* @.str17290, i64 0, i64 0)) #8
  %84 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([27 x i8]* @.str16289, i64 0, i64 0), i8* %83) #8
  br label %85

; <label>:85                                      ; preds = %76, %thunk.exit
  %did_hit.0 = phi i1 [ true, %76 ], [ false, %thunk.exit ]
  %86 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 9, i32 4
  %87 = load i32* %86, align 4, !tbaa !64
  %88 = icmp slt i32 %87, 1
  br i1 %88, label %89, label %90

; <label>:89                                      ; preds = %85
  tail call void @killed(%union.thing* %9, i1 zeroext true)
  br label %bounce.exit

; <label>:90                                      ; preds = %85
  br i1 %did_hit.0, label %91, label %bounce.exit

; <label>:91                                      ; preds = %90
  %92 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %93 = and i16 %92, 4
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %95, label %bounce.exit

; <label>:95                                      ; preds = %91
  %96 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([20 x i8]* @.str18291, i64 0, i64 0), i8* %42) #8
  br label %bounce.exit

; <label>:97                                      ; preds = %48
  br i1 %thrown, label %98, label %116

; <label>:98                                      ; preds = %97
  %99 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %bounce.exit

; <label>:101                                     ; preds = %98
  %102 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 2, i32 0
  %103 = load i32* %102, align 4, !tbaa !8
  %104 = icmp eq i32 %103, 41
  br i1 %104, label %105, label %112

; <label>:105                                     ; preds = %101
  %106 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 4
  %107 = bitcast i8* %106 to i32*
  %108 = load i32* %107, align 4, !tbaa !50
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %109, i32 0
  %111 = load i8** %110, align 8, !tbaa !66
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([15 x i8]* @.str38310, i64 0, i64 0), i8* %111) #8
  br label %113

; <label>:112                                     ; preds = %101
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([12 x i8]* @.str39311, i64 0, i64 0)) #8
  br label %113

; <label>:113                                     ; preds = %112, %105
  tail call void (i8*, ...)* @addmsg(i8* %42) #8
  br i1 %52, label %bounce.exit, label %114

; <label>:114                                     ; preds = %113
  %115 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %bounce.exit

; <label>:116                                     ; preds = %97
  tail call void @miss(i8* null, i8* %42, i1 zeroext %52)
  br label %bounce.exit

bounce.exit:                                      ; preds = %116, %114, %113, %98, %95, %91, %90, %89, %38
  %.0 = phi i32 [ 0, %38 ], [ 0, %116 ], [ 1, %91 ], [ 1, %90 ], [ 1, %95 ], [ 1, %89 ], [ 0, %98 ], [ 0, %113 ], [ 0, %114 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @set_mname(%union.thing* %tp) #0 {
  %1 = tail call zeroext i1 @see_monst(%union.thing* %tp) #8
  %.pre = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %.not = xor i1 %1, true
  %2 = and i16 %.pre, 16384
  %3 = icmp eq i16 %2, 0
  %or.cond = and i1 %3, %.not
  br i1 %or.cond, label %4, label %._crit_edge

; <label>:4                                       ; preds = %0
  %5 = load i8* @terse, align 1, !tbaa !5, !range !7
  %6 = icmp ne i8 %5, 0
  %7 = select i1 %6, i8* getelementptr inbounds ([3 x i8]* @.str30303, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str31304, i64 0, i64 0)
  br label %37

._crit_edge:                                      ; preds = %0
  %8 = and i16 %.pre, 2048
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %30, label %10

; <label>:10                                      ; preds = %._crit_edge
  %11 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %12 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2, i32 1
  %13 = load i32* %12, align 4, !tbaa !23
  %14 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2, i32 0
  %15 = load i32* %14, align 4, !tbaa !22
  %16 = tail call i32 @wmove(%struct._win_st* %11, i32 %13, i32 %15) #8
  %17 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %18 = tail call i32 @winch(%struct._win_st* %17) #8
  %19 = and i32 %18, 127
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %20
  %22 = load i32* %21, align 4, !tbaa !38
  %.lobit = and i32 %22, 32768
  %23 = icmp eq i32 %.lobit, 0
  br i1 %23, label %24, label %26

; <label>:24                                      ; preds = %10
  %25 = tail call i32 @rnd(i32 26) #8
  br label %28

; <label>:26                                      ; preds = %10
  %27 = add nsw i32 %19, -65
  br label %28

; <label>:28                                      ; preds = %26, %24
  %ch.0 = phi i32 [ %27, %26 ], [ %25, %24 ]
  %29 = sext i32 %ch.0 to i64
  br label %35

; <label>:30                                      ; preds = %._crit_edge
  %31 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 4
  %32 = load i8* %31, align 1, !tbaa !37
  %33 = sext i8 %32 to i64
  %34 = add i64 %33, -65
  br label %35

; <label>:35                                      ; preds = %30, %28
  %.pn = phi i64 [ %29, %28 ], [ %34, %30 ]
  %mname.0.in = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %.pn, i32 0
  %mname.0 = load i8** %mname.0.in, align 8
  %36 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @set_mname.tbuf, i64 0, i64 4), i8* %mname.0, i64 1020) #8
  br label %37

; <label>:37                                      ; preds = %35, %4
  %.0 = phi i8* [ getelementptr inbounds ([1024 x i8]* @set_mname.tbuf, i64 0, i64 0), %35 ], [ %7, %4 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @roll_em(%union.thing* readonly %thatt, %union.thing* %thdef, %union.thing* readonly %weap, i1 zeroext %hurl) #0 {
  %1 = icmp eq %union.thing* %weap, null
  br i1 %1, label %2, label %4

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %union.thing* %thatt, i64 0, i32 0, i32 9, i32 5, i64 0
  br label %72

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 8
  %6 = bitcast i8* %5 to i32*
  %7 = load i32* %6, align 4, !tbaa !68
  %8 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 12
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !69
  %11 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %12 = icmp eq %union.thing* %11, %weap
  br i1 %12, label %13, label %.thread3

; <label>:13                                      ; preds = %4
  %14 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %15 = icmp eq %union.thing* %14, null
  br i1 %15, label %.thread, label %16

; <label>:16                                      ; preds = %13
  %17 = getelementptr inbounds %union.thing* %14, i64 0, i32 0, i32 9, i32 5, i64 4
  %18 = bitcast i8* %17 to i32*
  %19 = load i32* %18, align 4, !tbaa !50
  switch i32 %19, label %.thread [
    i32 8, label %20
    i32 7, label %24
  ]

; <label>:20                                      ; preds = %16
  %21 = getelementptr inbounds %union.thing* %14, i64 0, i32 0, i32 9, i32 6
  %22 = load i32* %21, align 4, !tbaa !70
  %23 = add nsw i32 %22, %10
  br label %.thread

; <label>:24                                      ; preds = %16
  %25 = getelementptr inbounds %union.thing* %14, i64 0, i32 0, i32 9, i32 6
  %26 = load i32* %25, align 4, !tbaa !70
  %27 = add nsw i32 %26, %7
  br label %.thread

.thread:                                          ; preds = %24, %20, %16, %13
  %hplus.0 = phi i32 [ %7, %20 ], [ %27, %24 ], [ %7, %13 ], [ %7, %16 ]
  %dplus.0 = phi i32 [ %23, %20 ], [ %10, %24 ], [ %10, %13 ], [ %10, %16 ]
  %28 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %29 = icmp eq %union.thing* %28, null
  br i1 %29, label %.thread3, label %30

; <label>:30                                      ; preds = %.thread
  %31 = getelementptr inbounds %union.thing* %28, i64 0, i32 0, i32 9, i32 5, i64 4
  %32 = bitcast i8* %31 to i32*
  %33 = load i32* %32, align 4, !tbaa !50
  switch i32 %33, label %.thread3 [
    i32 8, label %34
    i32 7, label %38
  ]

; <label>:34                                      ; preds = %30
  %35 = getelementptr inbounds %union.thing* %28, i64 0, i32 0, i32 9, i32 6
  %36 = load i32* %35, align 4, !tbaa !70
  %37 = add nsw i32 %36, %dplus.0
  br label %.thread3

; <label>:38                                      ; preds = %30
  %39 = getelementptr inbounds %union.thing* %28, i64 0, i32 0, i32 9, i32 6
  %40 = load i32* %39, align 4, !tbaa !70
  %41 = add nsw i32 %40, %hplus.0
  br label %.thread3

.thread3:                                         ; preds = %38, %34, %30, %.thread, %4
  %hplus.1 = phi i32 [ %hplus.0, %34 ], [ %41, %38 ], [ %7, %4 ], [ %hplus.0, %.thread ], [ %hplus.0, %30 ]
  %dplus.1 = phi i32 [ %37, %34 ], [ %dplus.0, %38 ], [ %10, %4 ], [ %dplus.0, %.thread ], [ %dplus.0, %30 ]
  %42 = bitcast %union.thing* %weap to %struct.anon.0*
  %43 = getelementptr inbounds %struct.anon.0* %42, i64 0, i32 7, i64 0
  br i1 %hurl, label %44, label %72

; <label>:44                                      ; preds = %.thread3
  %45 = getelementptr inbounds %struct.anon.0* %42, i64 0, i32 14
  %46 = load i32* %45, align 4, !tbaa !12
  %47 = and i32 %46, 4
  %48 = icmp ne i32 %47, 0
  %49 = icmp ne %union.thing* %11, null
  %or.cond = and i1 %48, %49
  br i1 %or.cond, label %50, label %._crit_edge

._crit_edge:                                      ; preds = %44
  %.phi.trans.insert = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 8
  %.phi.trans.insert6 = bitcast i16* %.phi.trans.insert to i32*
  %.pre = load i32* %.phi.trans.insert6, align 4, !tbaa !71
  br label %68

; <label>:50                                      ; preds = %44
  %51 = getelementptr inbounds %union.thing* %11, i64 0, i32 0, i32 9, i32 5, i64 4
  %52 = bitcast i8* %51 to i32*
  %53 = load i32* %52, align 4, !tbaa !50
  %54 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 8
  %55 = bitcast i16* %54 to i32*
  %56 = load i32* %55, align 4, !tbaa !71
  %57 = icmp eq i32 %53, %56
  br i1 %57, label %58, label %68

; <label>:58                                      ; preds = %50
  %59 = getelementptr inbounds %struct.anon.0* %42, i64 0, i32 8, i64 0
  %60 = getelementptr inbounds %union.thing* %11, i64 0, i32 0, i32 9, i32 5, i64 8
  %61 = bitcast i8* %60 to i32*
  %62 = load i32* %61, align 4, !tbaa !68
  %63 = add nsw i32 %62, %hplus.1
  %64 = getelementptr inbounds %union.thing* %11, i64 0, i32 0, i32 9, i32 5, i64 12
  %65 = bitcast i8* %64 to i32*
  %66 = load i32* %65, align 4, !tbaa !69
  %67 = add nsw i32 %66, %dplus.1
  br label %72

; <label>:68                                      ; preds = %50, %._crit_edge
  %69 = phi i32 [ %.pre, %._crit_edge ], [ %56, %50 ]
  %70 = icmp slt i32 %69, 0
  %71 = getelementptr inbounds %struct.anon.0* %42, i64 0, i32 8, i64 0
  %. = select i1 %70, i8* %71, i8* %43
  br label %72

; <label>:72                                      ; preds = %68, %58, %.thread3, %2
  %hplus.2 = phi i32 [ 0, %2 ], [ %63, %58 ], [ %hplus.1, %.thread3 ], [ %hplus.1, %68 ]
  %dplus.2 = phi i32 [ 0, %2 ], [ %67, %58 ], [ %dplus.1, %.thread3 ], [ %dplus.1, %68 ]
  %cp.0 = phi i8* [ %3, %2 ], [ %59, %58 ], [ %43, %.thread3 ], [ %., %68 ]
  %73 = getelementptr inbounds %union.thing* %thdef, i64 0, i32 0, i32 8
  %74 = load i16* %73, align 2, !tbaa !18
  %75 = and i16 %74, 8192
  %76 = icmp eq i16 %75, 0
  %77 = add nsw i32 %hplus.2, 4
  %.hplus.2 = select i1 %76, i32 %77, i32 %hplus.2
  %78 = getelementptr inbounds %union.thing* %thdef, i64 0, i32 0, i32 9, i32 3
  %79 = load i32* %78, align 4, !tbaa !72
  %80 = icmp eq %union.thing* %thdef, @player
  br i1 %80, label %81, label %.preheader

; <label>:81                                      ; preds = %72
  %82 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %83 = icmp eq %union.thing* %82, null
  br i1 %83, label %87, label %84

; <label>:84                                      ; preds = %81
  %85 = getelementptr inbounds %union.thing* %82, i64 0, i32 0, i32 9, i32 6
  %86 = load i32* %85, align 4, !tbaa !70
  br label %87

; <label>:87                                      ; preds = %84, %81
  %def_arm.0 = phi i32 [ %86, %84 ], [ %79, %81 ]
  %88 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %89 = icmp eq %union.thing* %88, null
  br i1 %89, label %99, label %90

; <label>:90                                      ; preds = %87
  %91 = getelementptr inbounds %union.thing* %88, i64 0, i32 0, i32 9, i32 5, i64 4
  %92 = bitcast i8* %91 to i32*
  %93 = load i32* %92, align 4, !tbaa !50
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %99

; <label>:95                                      ; preds = %90
  %96 = getelementptr inbounds %union.thing* %88, i64 0, i32 0, i32 9, i32 6
  %97 = load i32* %96, align 4, !tbaa !70
  %98 = sub nsw i32 %def_arm.0, %97
  br label %99

; <label>:99                                      ; preds = %95, %90, %87
  %def_arm.1 = phi i32 [ %98, %95 ], [ %def_arm.0, %90 ], [ %def_arm.0, %87 ]
  %100 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %101 = icmp eq %union.thing* %100, null
  br i1 %101, label %.preheader, label %102

; <label>:102                                     ; preds = %99
  %103 = getelementptr inbounds %union.thing* %100, i64 0, i32 0, i32 9, i32 5, i64 4
  %104 = bitcast i8* %103 to i32*
  %105 = load i32* %104, align 4, !tbaa !50
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %.preheader

; <label>:107                                     ; preds = %102
  %108 = getelementptr inbounds %union.thing* %100, i64 0, i32 0, i32 9, i32 6
  %109 = load i32* %108, align 4, !tbaa !70
  %110 = sub nsw i32 %def_arm.1, %109
  br label %.preheader

.preheader:                                       ; preds = %107, %102, %99, %72
  %def_arm.2.ph = phi i32 [ %def_arm.1, %102 ], [ %110, %107 ], [ %79, %72 ], [ %def_arm.1, %99 ]
  %111 = load i8* %cp.0, align 1, !tbaa !28
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader
  %113 = getelementptr inbounds %union.thing* %thatt, i64 0, i32 0, i32 9, i32 2
  %114 = getelementptr inbounds %union.thing* %thatt, i64 0, i32 0, i32 9, i32 0
  %115 = sub i32 20, %def_arm.2.ph
  %116 = getelementptr inbounds %union.thing* %thdef, i64 0, i32 0, i32 9, i32 4
  br label %120

; <label>:117                                     ; preds = %149
  %118 = load i8* %152, align 1, !tbaa !28
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %.critedge, label %120

; <label>:120                                     ; preds = %117, %.lr.ph
  %cp.15 = phi i8* [ %cp.0, %.lr.ph ], [ %152, %117 ]
  %did_hit.04 = phi i8 [ 0, %.lr.ph ], [ %did_hit.1, %117 ]
  %121 = tail call i32 @atoi(i8* %cp.15) #8
  %122 = tail call i8* @strchr(i8* %cp.15, i32 120) #8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %.critedge, label %124

; <label>:124                                     ; preds = %120
  %125 = getelementptr inbounds i8* %122, i64 1
  %126 = tail call i32 @atoi(i8* %125) #8
  %127 = load i32* %113, align 4, !tbaa !73
  %128 = load i32* %114, align 4, !tbaa !74
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds [32 x i32]* @str_plus, i64 0, i64 %129
  %131 = load i32* %130, align 4, !tbaa !38
  %132 = add nsw i32 %131, %.hplus.2
  %133 = tail call i32 @rnd(i32 20) #8
  %134 = sub i32 %115, %127
  %135 = add nsw i32 %132, %133
  %136 = icmp slt i32 %135, %134
  br i1 %136, label %149, label %137

; <label>:137                                     ; preds = %124
  %138 = tail call i32 @roll(i32 %121, i32 %126) #8
  %139 = add nsw i32 %138, %dplus.2
  %140 = load i32* %114, align 4, !tbaa !74
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [32 x i32]* @add_dam, i64 0, i64 %141
  %143 = load i32* %142, align 4, !tbaa !38
  %144 = add nsw i32 %139, %143
  %145 = icmp slt i32 %144, 0
  %146 = select i1 %145, i32 0, i32 %144
  %147 = load i32* %116, align 4, !tbaa !75
  %148 = sub nsw i32 %147, %146
  store i32 %148, i32* %116, align 4, !tbaa !75
  br label %149

; <label>:149                                     ; preds = %137, %124
  %did_hit.1 = phi i8 [ 1, %137 ], [ %did_hit.04, %124 ]
  %150 = tail call i8* @strchr(i8* %125, i32 47) #8
  %151 = icmp eq i8* %150, null
  %152 = getelementptr inbounds i8* %150, i64 1
  br i1 %151, label %.critedge, label %117

.critedge:                                        ; preds = %149, %120, %117, %.preheader
  %did_hit.2 = phi i8 [ 0, %.preheader ], [ %did_hit.1, %117 ], [ %did_hit.1, %149 ], [ %did_hit.04, %120 ]
  %153 = and i8 %did_hit.2, 1
  %154 = icmp ne i8 %153, 0
  ret i1 %154
}

; Function Attrs: nounwind ssp uwtable
define void @thunk(%union.thing* nocapture readonly %weap, i8* %mname, i1 zeroext %noend) #0 {
  %1 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %18

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 41
  br i1 %6, label %7, label %14

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !50
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %11, i32 0
  %13 = load i8** %12, align 8, !tbaa !66
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str33305, i64 0, i64 0), i8* %13) #8
  br label %15

; <label>:14                                      ; preds = %3
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([9 x i8]* @.str34306, i64 0, i64 0)) #8
  br label %15

; <label>:15                                      ; preds = %14, %7
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([3 x i8]* @.str35307, i64 0, i64 0), i8* %mname) #8
  br i1 %noend, label %18, label %16

; <label>:16                                      ; preds = %15
  %17 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %18

; <label>:18                                      ; preds = %16, %15, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @hit(i8* %er, i8* %ee, i1 zeroext %noend) #0 {
  %1 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %30

; <label>:3                                       ; preds = %0
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %4 = icmp eq i8* %er, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %3
  store i32 7696249, i32* bitcast ([1024 x i8]* @prname.tbuf to i32*), align 16
  br label %prname.exit

; <label>:6                                       ; preds = %3
  %7 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), i8* %er, i64 1024) #8
  %.pre = load i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %phitmp = sext i8 %.pre to i32
  br label %prname.exit

prname.exit:                                      ; preds = %6, %5
  %8 = phi i32 [ 121, %5 ], [ %phitmp, %6 ]
  %9 = tail call i32 @__toupper(i32 %8) #8
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0)) #8
  %11 = load i8* @terse, align 1, !tbaa !5, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

; <label>:13                                      ; preds = %prname.exit
  %14 = tail call i32 @rnd(i32 4) #8
  %15 = add nsw i32 %14, 4
  %. = select i1 %4, i32 %14, i32 %15
  %16 = sext i32 %. to i64
  %17 = getelementptr inbounds [8 x i8*]* @h_names, i64 0, i64 %16
  %18 = load i8** %17, align 8, !tbaa !1
  br label %19

; <label>:19                                      ; preds = %13, %prname.exit
  %s.0 = phi i8* [ %18, %13 ], [ getelementptr inbounds ([5 x i8]* @.str36308, i64 0, i64 0), %prname.exit ]
  tail call void (i8*, ...)* @addmsg(i8* %s.0) #8
  %20 = load i8* @terse, align 1, !tbaa !5, !range !7
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

; <label>:22                                      ; preds = %19
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %23 = icmp eq i8* %ee, null
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %22
  store i32 7696249, i32* bitcast ([1024 x i8]* @prname.tbuf to i32*), align 16
  br label %prname.exit1

; <label>:25                                      ; preds = %22
  %26 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), i8* %ee, i64 1024) #8
  br label %prname.exit1

prname.exit1:                                     ; preds = %25, %24
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0)) #8
  br label %27

; <label>:27                                      ; preds = %prname.exit1, %19
  br i1 %noend, label %30, label %28

; <label>:28                                      ; preds = %27
  %29 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %30

; <label>:30                                      ; preds = %28, %27, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @killed(%union.thing* %tp, i1 zeroext %pr) #0 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 1
  %2 = load i32* %1, align 4, !tbaa !76
  %3 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %4 = add nsw i32 %3, %2
  store i32 %4, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %5 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 4
  %6 = load i8* %5, align 1, !tbaa !37
  %7 = sext i8 %6 to i32
  switch i32 %7, label %59 [
    i32 70, label %8
    i32 76, label %13
  ]

; <label>:8                                       ; preds = %0
  %9 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %10 = and i16 %9, -257
  store i16 %10, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  store i32 0, i32* @vf_hit, align 4, !tbaa !38
  %11 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 5, i32 3, i32 5, i64 0), i1 false)
  %12 = tail call i8* @__memcpy_chk(i8* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 5, i32 3, i32 5, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str40312, i64 0, i64 0), i64 6, i64 %11)
  br label %59

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 10
  %16 = load %struct.room** %15, align 8, !tbaa !24
  %17 = getelementptr inbounds %struct.room* %16, i64 0, i32 2
  %18 = tail call zeroext i1 @fallpos(%struct.coord* %14, %struct.coord* %17) #8
  br i1 %18, label %19, label %59

; <label>:19                                      ; preds = %13
  %20 = load i32* @level, align 4, !tbaa !38
  %21 = load i32* @max_level, align 4, !tbaa !38
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %59, label %23

; <label>:23                                      ; preds = %19
  %24 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %25 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 2, i32 0
  store i32 42, i32* %25, align 4, !tbaa !8
  %26 = load i32* @level, align 4, !tbaa !38
  %27 = mul nsw i32 %26, 10
  %28 = add nsw i32 %27, 50
  %29 = tail call i32 @rnd(i32 %28) #8
  %30 = add nsw i32 %29, 2
  %31 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 9, i32 6
  store i32 %30, i32* %31, align 4, !tbaa !70
  %32 = tail call i32 @save(i32 3) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %57, label %34

; <label>:34                                      ; preds = %23
  %35 = load i32* @level, align 4, !tbaa !38
  %36 = mul nsw i32 %35, 10
  %37 = add nsw i32 %36, 50
  %38 = tail call i32 @rnd(i32 %37) #8
  %39 = load i32* @level, align 4, !tbaa !38
  %40 = mul nsw i32 %39, 10
  %41 = add nsw i32 %40, 50
  %42 = tail call i32 @rnd(i32 %41) #8
  %43 = load i32* @level, align 4, !tbaa !38
  %44 = mul nsw i32 %43, 10
  %45 = add nsw i32 %44, 50
  %46 = tail call i32 @rnd(i32 %45) #8
  %47 = load i32* @level, align 4, !tbaa !38
  %48 = mul nsw i32 %47, 10
  %49 = add nsw i32 %48, 50
  %50 = tail call i32 @rnd(i32 %49) #8
  %51 = load i32* %31, align 4, !tbaa !70
  %52 = add i32 %38, 8
  %53 = add i32 %52, %42
  %54 = add i32 %53, %46
  %55 = add i32 %54, %50
  %56 = add i32 %55, %51
  store i32 %56, i32* %31, align 4, !tbaa !70
  br label %57

; <label>:57                                      ; preds = %34, %23
  %58 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 11
  tail call void @_attach(%union.thing** %58, %union.thing* %24) #8
  br label %59

; <label>:59                                      ; preds = %57, %19, %13, %8, %0
  %60 = tail call i8* @set_mname(%union.thing* %tp)
  %61 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2
  tail call void @remove_mon(%struct.coord* %61, %union.thing* %tp, i1 zeroext true)
  br i1 %pr, label %62, label %73

; <label>:62                                      ; preds = %59
  %63 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

; <label>:65                                      ; preds = %62
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str41313, i64 0, i64 0)) #8
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  br label %71

; <label>:66                                      ; preds = %62
  %67 = load i8* @terse, align 1, !tbaa !5, !range !7
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %70

; <label>:69                                      ; preds = %66
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([10 x i8]* @.str42314, i64 0, i64 0)) #8
  br label %70

; <label>:70                                      ; preds = %69, %66
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([10 x i8]* @.str43315, i64 0, i64 0)) #8
  br label %71

; <label>:71                                      ; preds = %70, %65
  %72 = tail call i32 (i8*, ...)* @msg(i8* %60) #8
  br label %73

; <label>:73                                      ; preds = %71, %59
  tail call void (...)* bitcast (void ()* @check_level to void (...)*)() #8
  %74 = load i8* @fight_flush, align 1, !tbaa !5, !range !7
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %77, label %76

; <label>:76                                      ; preds = %73
  tail call void (...)* bitcast (void ()* @flush_type to void (...)*)() #8
  br label %77

; <label>:77                                      ; preds = %76, %73
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @bounce(%union.thing* nocapture readonly %weap, i8* %mname, i1 zeroext %noend) #0 {
  %1 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %18

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 41
  br i1 %6, label %7, label %14

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !50
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %11, i32 0
  %13 = load i8** %12, align 8, !tbaa !66
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([15 x i8]* @.str38310, i64 0, i64 0), i8* %13) #8
  br label %15

; <label>:14                                      ; preds = %3
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([12 x i8]* @.str39311, i64 0, i64 0)) #8
  br label %15

; <label>:15                                      ; preds = %14, %7
  tail call void (i8*, ...)* @addmsg(i8* %mname) #8
  br i1 %noend, label %18, label %16

; <label>:16                                      ; preds = %15
  %17 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %18

; <label>:18                                      ; preds = %16, %15, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @miss(i8* %er, i8* %ee, i1 zeroext %noend) #0 {
  %1 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %30

; <label>:3                                       ; preds = %0
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %4 = icmp eq i8* %er, null
  br i1 %4, label %5, label %6

; <label>:5                                       ; preds = %3
  store i32 7696249, i32* bitcast ([1024 x i8]* @prname.tbuf to i32*), align 16
  br label %prname.exit

; <label>:6                                       ; preds = %3
  %7 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), i8* %er, i64 1024) #8
  %.pre = load i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %phitmp = sext i8 %.pre to i32
  br label %prname.exit

prname.exit:                                      ; preds = %6, %5
  %8 = phi i32 [ 121, %5 ], [ %phitmp, %6 ]
  %9 = tail call i32 @__toupper(i32 %8) #8
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0)) #8
  %11 = load i8* @terse, align 1, !tbaa !5, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %prname.exit
  %14 = tail call i32 @rnd(i32 4) #8
  br label %15

; <label>:15                                      ; preds = %13, %prname.exit
  %i.0 = phi i32 [ %14, %13 ], [ 0, %prname.exit ]
  %16 = add nsw i32 %i.0, 4
  %i.0. = select i1 %4, i32 %i.0, i32 %16
  %17 = sext i32 %i.0. to i64
  %18 = getelementptr inbounds [8 x i8*]* @m_names, i64 0, i64 %17
  %19 = load i8** %18, align 8, !tbaa !1
  tail call void (i8*, ...)* @addmsg(i8* %19) #8
  %20 = load i8* @terse, align 1, !tbaa !5, !range !7
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

; <label>:22                                      ; preds = %15
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %23 = icmp eq i8* %ee, null
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %22
  store i32 7696249, i32* bitcast ([1024 x i8]* @prname.tbuf to i32*), align 16
  br label %prname.exit1

; <label>:25                                      ; preds = %22
  %26 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), i8* %ee, i64 1024) #8
  br label %prname.exit1

prname.exit1:                                     ; preds = %25, %24
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([4 x i8]* @.str37309, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0)) #8
  br label %27

; <label>:27                                      ; preds = %prname.exit1, %15
  br i1 %noend, label %30, label %28

; <label>:28                                      ; preds = %27
  %29 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %30

; <label>:30                                      ; preds = %28, %27, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @attack(%union.thing* %mp) #0 {
  store i8 0, i8* @running, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  store i32 0, i32* @quiet, align 4, !tbaa !38
  %1 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 8
  %5 = load i16* %4, align 2, !tbaa !18
  %6 = and i16 %5, 128
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %3
  store i8 0, i8* @to_death, align 1, !tbaa !5
  store i8 0, i8* @kamikaze, align 1, !tbaa !5
  br label %9

; <label>:9                                       ; preds = %8, %3, %0
  %10 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 4
  %11 = load i8* %10, align 1, !tbaa !37
  %12 = icmp eq i8 %11, 88
  br i1 %12, label %13, label %37

; <label>:13                                      ; preds = %9
  %14 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 5
  %15 = load i8* %14, align 1, !tbaa !44
  %16 = icmp eq i8 %15, 88
  br i1 %16, label %37, label %17

; <label>:17                                      ; preds = %13
  %18 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %19 = and i16 %18, 4
  %20 = icmp eq i16 %19, 0
  br i1 %20, label %21, label %37

; <label>:21                                      ; preds = %17
  store i8 88, i8* %14, align 1, !tbaa !44
  %22 = and i16 %18, 2048
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %37, label %24

; <label>:24                                      ; preds = %21
  %25 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %26 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2, i32 1
  %27 = load i32* %26, align 4, !tbaa !23
  %28 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2, i32 0
  %29 = load i32* %28, align 4, !tbaa !22
  %30 = tail call i32 @wmove(%struct._win_st* %25, i32 %27, i32 %29) #8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %37, label %32

; <label>:32                                      ; preds = %24
  %33 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %34 = tail call i32 @rnd(i32 26) #8
  %35 = add nsw i32 %34, 65
  %36 = tail call i32 @waddch(%struct._win_st* %33, i32 %35) #8
  br label %37

; <label>:37                                      ; preds = %32, %24, %21, %17, %13, %9
  %38 = tail call i8* @set_mname(%union.thing* %mp)
  %39 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %40 = tail call zeroext i1 @roll_em(%union.thing* %mp, %union.thing* @player, %union.thing* null, i1 zeroext false)
  %41 = load i8* %10, align 1, !tbaa !37
  %42 = icmp ne i8 %41, 73
  br i1 %40, label %43, label %256

; <label>:43                                      ; preds = %37
  %44 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %45 = icmp ne i8 %44, 0
  br i1 %42, label %46, label %49

; <label>:46                                      ; preds = %43
  br i1 %45, label %47, label %48

; <label>:47                                      ; preds = %46
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([4 x i8]* @.str19292, i64 0, i64 0)) #8
  br label %48

; <label>:48                                      ; preds = %47, %46
  tail call void @hit(i8* %38, i8* null, i1 zeroext false)
  br label %52

; <label>:49                                      ; preds = %43
  br i1 %45, label %50, label %52

; <label>:50                                      ; preds = %49
  %51 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %52

; <label>:52                                      ; preds = %50, %49, %48
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  %53 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %54 = icmp slt i32 %53, 1
  br i1 %54, label %55, label %57

; <label>:55                                      ; preds = %52
  %56 = load i8* %10, align 1, !tbaa !37
  tail call void @death(i8 signext %56) #8
  br label %69

; <label>:57                                      ; preds = %52
  %58 = load i8* @kamikaze, align 1, !tbaa !5, !range !7
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %69

; <label>:60                                      ; preds = %57
  %61 = sub nsw i32 %39, %53
  %62 = load i32* @max_hit, align 4, !tbaa !38
  %63 = icmp sgt i32 %61, %62
  br i1 %63, label %64, label %65

; <label>:64                                      ; preds = %60
  store i32 %61, i32* @max_hit, align 4, !tbaa !38
  br label %65

; <label>:65                                      ; preds = %64, %60
  %66 = phi i32 [ %61, %64 ], [ %62, %60 ]
  %67 = icmp sgt i32 %53, %66
  br i1 %67, label %69, label %68

; <label>:68                                      ; preds = %65
  store i8 0, i8* @to_death, align 1, !tbaa !5
  br label %69

; <label>:69                                      ; preds = %68, %65, %57, %55
  %70 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 8
  %71 = load i16* %70, align 2, !tbaa !18
  %72 = and i16 %71, 8
  %73 = icmp eq i16 %72, 0
  br i1 %73, label %74, label %._crit_edge.thread

; <label>:74                                      ; preds = %69
  %75 = load i8* %10, align 1, !tbaa !37
  %76 = sext i8 %75 to i32
  switch i32 %76, label %._crit_edge.thread [
    i32 65, label %78
    i32 73, label %80
    i32 82, label %98
    i32 87, label %134
    i32 86, label %134
    i32 70, label %173
    i32 76, label %184
    i32 78, label %.preheader
  ]

.preheader:                                       ; preds = %74
  %obj.017 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8
  %77 = icmp eq %union.thing* %obj.017, null
  br i1 %77, label %._crit_edge.thread, label %.lr.ph

; <label>:78                                      ; preds = %74
  %79 = load %union.thing** @cur_armor, align 8, !tbaa !1
  tail call void @rust_armor(%union.thing* %79) #8
  br label %._crit_edge.thread

; <label>:80                                      ; preds = %74
  %81 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %82 = and i16 %81, -8193
  store i16 %82, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %83 = load i32* @no_command, align 4, !tbaa !38
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %91

; <label>:85                                      ; preds = %80
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([15 x i8]* @.str20293, i64 0, i64 0)) #8
  %86 = load i8* @terse, align 1, !tbaa !5, !range !7
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %89

; <label>:88                                      ; preds = %85
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([11 x i8]* @.str21294, i64 0, i64 0), i8* %38) #8
  br label %89

; <label>:89                                      ; preds = %88, %85
  %90 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %91

; <label>:91                                      ; preds = %89, %80
  %92 = tail call i32 @rnd(i32 2) #8
  %93 = add nsw i32 %92, 2
  %94 = load i32* @no_command, align 4, !tbaa !38
  %95 = add nsw i32 %93, %94
  store i32 %95, i32* @no_command, align 4, !tbaa !38
  %96 = icmp sgt i32 %95, 50
  br i1 %96, label %97, label %._crit_edge.thread

; <label>:97                                      ; preds = %91
  tail call void @death(i8 signext 104) #8
  br label %._crit_edge.thread

; <label>:98                                      ; preds = %74
  %99 = tail call i32 @save(i32 0) #8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %._crit_edge.thread

; <label>:101                                     ; preds = %98
  %102 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %103 = icmp eq %union.thing* %102, null
  br i1 %103, label %109, label %104

; <label>:104                                     ; preds = %101
  %105 = getelementptr inbounds %union.thing* %102, i64 0, i32 0, i32 9, i32 5, i64 4
  %106 = bitcast i8* %105 to i32*
  %107 = load i32* %106, align 4, !tbaa !50
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %124, label %109

; <label>:109                                     ; preds = %104, %101
  %110 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %111 = icmp eq %union.thing* %110, null
  br i1 %111, label %117, label %112

; <label>:112                                     ; preds = %109
  %113 = getelementptr inbounds %union.thing* %110, i64 0, i32 0, i32 9, i32 5, i64 4
  %114 = bitcast i8* %113 to i32*
  %115 = load i32* %114, align 4, !tbaa !50
  %116 = icmp eq i32 %115, 2
  br i1 %116, label %124, label %117

; <label>:117                                     ; preds = %112, %109
  tail call void @chg_str(i32 -1) #8
  %118 = load i8* @terse, align 1, !tbaa !5, !range !7
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %122

; <label>:120                                     ; preds = %117
  %121 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([48 x i8]* @.str22295, i64 0, i64 0)) #8
  br label %._crit_edge.thread

; <label>:122                                     ; preds = %117
  %123 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([24 x i8]* @.str23296, i64 0, i64 0)) #8
  br label %._crit_edge.thread

; <label>:124                                     ; preds = %112, %104
  %125 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %127, label %._crit_edge.thread

; <label>:127                                     ; preds = %124
  %128 = load i8* @terse, align 1, !tbaa !5, !range !7
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %132

; <label>:130                                     ; preds = %127
  %131 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str24297, i64 0, i64 0)) #8
  br label %._crit_edge.thread

; <label>:132                                     ; preds = %127
  %133 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str25298, i64 0, i64 0)) #8
  br label %._crit_edge.thread

; <label>:134                                     ; preds = %74, %74
  %135 = tail call i32 @rnd(i32 100) #8
  %136 = load i8* %10, align 1, !tbaa !37
  %137 = icmp eq i8 %136, 87
  %138 = select i1 %137, i32 15, i32 30
  %139 = icmp slt i32 %135, %138
  br i1 %139, label %140, label %._crit_edge.thread

; <label>:140                                     ; preds = %134
  br i1 %137, label %141, label %158

; <label>:141                                     ; preds = %140
  %142 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

; <label>:144                                     ; preds = %141
  tail call void @death(i8 signext 87) #8
  br label %145

; <label>:145                                     ; preds = %144, %141
  %146 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %147 = add nsw i32 %146, -1
  store i32 %147, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

; <label>:149                                     ; preds = %145
  store i32 0, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  store i32 1, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  br label %156

; <label>:150                                     ; preds = %145
  %151 = add nsw i32 %146, -2
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [0 x i32]* bitcast ([21 x i32]* @e_levels to [0 x i32]*), i64 0, i64 %152
  %154 = load i32* %153, align 4, !tbaa !38
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  br label %156

; <label>:156                                     ; preds = %150, %149
  %157 = tail call i32 @roll(i32 1, i32 10) #8
  br label %160

; <label>:158                                     ; preds = %140
  %159 = tail call i32 @roll(i32 1, i32 3) #8
  br label %160

; <label>:160                                     ; preds = %158, %156
  %fewer.0 = phi i32 [ %157, %156 ], [ %159, %158 ]
  %161 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %162 = sub nsw i32 %161, %fewer.0
  store i32 %162, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %163 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %164 = sub nsw i32 %163, %fewer.0
  store i32 %164, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %165 = icmp slt i32 %162, 1
  br i1 %165, label %166, label %167

; <label>:166                                     ; preds = %160
  store i32 1, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %167

; <label>:167                                     ; preds = %166, %160
  %168 = icmp slt i32 %164, 1
  br i1 %168, label %169, label %171

; <label>:169                                     ; preds = %167
  %170 = load i8* %10, align 1, !tbaa !37
  tail call void @death(i8 signext %170) #8
  br label %171

; <label>:171                                     ; preds = %169, %167
  %172 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str26299, i64 0, i64 0)) #8
  br label %._crit_edge.thread

; <label>:173                                     ; preds = %74
  %174 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %175 = or i16 %174, 256
  store i16 %175, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %176 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 5, i32 3, i32 5, i64 0), i1 false)
  %177 = load i32* @vf_hit, align 4, !tbaa !38
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* @vf_hit, align 4, !tbaa !38
  %179 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 5, i32 3, i32 5, i64 0), i32 0, i64 %176, i8* getelementptr inbounds ([5 x i8]* @.str27300, i64 0, i64 0), i32 %178) #8
  %180 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %181 = add nsw i32 %180, -1
  store i32 %181, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %182 = icmp slt i32 %180, 2
  br i1 %182, label %183, label %._crit_edge.thread

; <label>:183                                     ; preds = %173
  tail call void @death(i8 signext 70) #8
  br label %._crit_edge.thread

; <label>:184                                     ; preds = %74
  %185 = load i32* @purse, align 4, !tbaa !38
  %186 = load i32* @level, align 4, !tbaa !38
  %187 = mul nsw i32 %186, 10
  %188 = add nsw i32 %187, 50
  %189 = tail call i32 @rnd(i32 %188) #8
  %190 = load i32* @purse, align 4, !tbaa !38
  %.neg8 = sub i32 -2, %189
  %191 = add i32 %.neg8, %190
  store i32 %191, i32* @purse, align 4, !tbaa !38
  %192 = tail call i32 @save(i32 3) #8
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %thread-pre-split

; <label>:194                                     ; preds = %184
  %195 = load i32* @level, align 4, !tbaa !38
  %196 = mul nsw i32 %195, 10
  %197 = add nsw i32 %196, 50
  %198 = tail call i32 @rnd(i32 %197) #8
  %199 = load i32* @level, align 4, !tbaa !38
  %200 = mul nsw i32 %199, 10
  %201 = add nsw i32 %200, 50
  %202 = tail call i32 @rnd(i32 %201) #8
  %203 = load i32* @level, align 4, !tbaa !38
  %204 = mul nsw i32 %203, 10
  %205 = add nsw i32 %204, 50
  %206 = tail call i32 @rnd(i32 %205) #8
  %207 = load i32* @level, align 4, !tbaa !38
  %208 = mul nsw i32 %207, 10
  %209 = add nsw i32 %208, 50
  %210 = tail call i32 @rnd(i32 %209) #8
  %211 = load i32* @purse, align 4, !tbaa !38
  %.neg11 = sub i32 -8, %198
  %.neg13 = sub i32 %.neg11, %202
  %.neg15 = sub i32 %.neg13, %206
  %.neg16 = sub i32 %.neg15, %210
  %212 = add i32 %.neg16, %211
  store i32 %212, i32* @purse, align 4, !tbaa !38
  br label %213

thread-pre-split:                                 ; preds = %184
  %.pr7 = load i32* @purse, align 4, !tbaa !38
  br label %213

; <label>:213                                     ; preds = %thread-pre-split, %194
  %214 = phi i32 [ %.pr7, %thread-pre-split ], [ %212, %194 ]
  %215 = icmp slt i32 %214, 0
  br i1 %215, label %216, label %217

; <label>:216                                     ; preds = %213
  store i32 0, i32* @purse, align 4, !tbaa !38
  br label %217

; <label>:217                                     ; preds = %216, %213
  %218 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2
  tail call void @remove_mon(%struct.coord* %218, %union.thing* %mp, i1 zeroext false)
  %219 = load i32* @purse, align 4, !tbaa !38
  %220 = icmp eq i32 %219, %185
  br i1 %220, label %._crit_edge.thread, label %221

; <label>:221                                     ; preds = %217
  %222 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str28301, i64 0, i64 0)) #8
  br label %._crit_edge.thread

.lr.ph:                                           ; preds = %238, %.preheader
  %obj.020 = phi %union.thing* [ %obj.0, %238 ], [ %obj.017, %.preheader ]
  %nobj.019 = phi i32 [ %nobj.1, %238 ], [ 0, %.preheader ]
  %steal.018 = phi %union.thing* [ %steal.1, %238 ], [ null, %.preheader ]
  %223 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %224 = icmp eq %union.thing* %obj.020, %223
  %225 = load %union.thing** @cur_weapon, align 8
  %226 = icmp eq %union.thing* %obj.020, %225
  %or.cond = or i1 %224, %226
  %227 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8
  %228 = icmp eq %union.thing* %obj.020, %227
  %or.cond4 = or i1 %or.cond, %228
  br i1 %or.cond4, label %238, label %229

; <label>:229                                     ; preds = %.lr.ph
  %230 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %231 = icmp eq %union.thing* %obj.020, %230
  br i1 %231, label %238, label %232

; <label>:232                                     ; preds = %229
  %233 = tail call zeroext i1 @is_magic(%union.thing* %obj.020) #8
  br i1 %233, label %234, label %238

; <label>:234                                     ; preds = %232
  %235 = add nsw i32 %nobj.019, 1
  %236 = tail call i32 @rnd(i32 %235) #8
  %237 = icmp eq i32 %236, 0
  %obj.0.steal.0 = select i1 %237, %union.thing* %obj.020, %union.thing* %steal.018
  br label %238

; <label>:238                                     ; preds = %234, %232, %229, %.lr.ph
  %steal.1 = phi %union.thing* [ %steal.018, %232 ], [ %steal.018, %229 ], [ %steal.018, %.lr.ph ], [ %obj.0.steal.0, %234 ]
  %nobj.1 = phi i32 [ %nobj.019, %232 ], [ %nobj.019, %229 ], [ %nobj.019, %.lr.ph ], [ %235, %234 ]
  %239 = getelementptr inbounds %union.thing* %obj.020, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %239, align 8
  %240 = icmp eq %union.thing* %obj.0, null
  br i1 %240, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %238
  %241 = icmp eq %union.thing* %steal.1, null
  br i1 %241, label %._crit_edge.thread, label %242

; <label>:242                                     ; preds = %._crit_edge
  %243 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2
  %244 = getelementptr inbounds %struct.coord* %243, i64 0, i32 0
  %245 = load i32* %244, align 4, !tbaa !22
  %246 = shl i32 %245, 5
  %247 = getelementptr inbounds %union.thing* %mp, i64 0, i32 0, i32 2, i32 1
  %248 = load i32* %247, align 4, !tbaa !23
  %249 = add nsw i32 %246, %248
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %250, i32 2
  %252 = load %union.thing** %251, align 8, !tbaa !43
  tail call void @remove_mon(%struct.coord* %243, %union.thing* %252, i1 zeroext false)
  %253 = tail call %union.thing* @leave_pack(%union.thing* %steal.1, i1 zeroext false, i1 zeroext false) #8
  %254 = tail call i8* @inv_name(%union.thing* %steal.1, i1 zeroext true) #8
  %255 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str29302, i64 0, i64 0), i8* %254) #8
  tail call void @discard(%union.thing* %steal.1) #8
  br label %._crit_edge.thread

; <label>:256                                     ; preds = %37
  br i1 %42, label %257, label %._crit_edge.thread

; <label>:257                                     ; preds = %256
  %258 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %261, label %260

; <label>:260                                     ; preds = %257
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([4 x i8]* @.str19292, i64 0, i64 0)) #8
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  %.pre = load i8* %10, align 1, !tbaa !37
  br label %261

; <label>:261                                     ; preds = %260, %257
  %262 = phi i8 [ %41, %257 ], [ %.pre, %260 ]
  %263 = icmp eq i8 %262, 70
  br i1 %263, label %264, label %270

; <label>:264                                     ; preds = %261
  %265 = load i32* @vf_hit, align 4, !tbaa !38
  %266 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %267 = sub nsw i32 %266, %265
  store i32 %267, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %268 = icmp slt i32 %267, 1
  br i1 %268, label %269, label %270

; <label>:269                                     ; preds = %264
  tail call void @death(i8 signext 70) #8
  br label %270

; <label>:270                                     ; preds = %269, %264, %261
  tail call void @miss(i8* %38, i8* null, i1 zeroext false)
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %270, %256, %242, %._crit_edge, %221, %217, %183, %173, %171, %134, %132, %130, %124, %122, %120, %98, %97, %91, %78, %.preheader, %74, %69
  %.01 = phi %union.thing* [ %mp, %69 ], [ %mp, %74 ], [ null, %242 ], [ %mp, %._crit_edge ], [ null, %221 ], [ null, %217 ], [ %mp, %183 ], [ %mp, %173 ], [ %mp, %171 ], [ %mp, %134 ], [ %mp, %98 ], [ %mp, %124 ], [ %mp, %132 ], [ %mp, %130 ], [ %mp, %122 ], [ %mp, %120 ], [ %mp, %97 ], [ %mp, %91 ], [ %mp, %78 ], [ %mp, %270 ], [ %mp, %256 ], [ %mp, %.preheader ]
  %271 = load i8* @fight_flush, align 1, !tbaa !5, !range !7
  %272 = icmp ne i8 %271, 0
  %273 = load i8* @to_death, align 1
  %274 = icmp eq i8 %273, 0
  %or.cond6 = and i1 %272, %274
  br i1 %or.cond6, label %275, label %276

; <label>:275                                     ; preds = %._crit_edge.thread
  tail call void (...)* bitcast (void ()* @flush_type to void (...)*)() #8
  br label %276

; <label>:276                                     ; preds = %275, %._crit_edge.thread
  store i32 0, i32* @count, align 4, !tbaa !38
  tail call void (...)* bitcast (void ()* @status to void (...)*)() #8
  %277 = icmp eq %union.thing* %.01, null
  %. = sext i1 %277 to i32
  ret i32 %.
}

declare i32 @__sprintf_chk(i8*, i32, i64, i8*, ...) #2

; Function Attrs: nounwind ssp uwtable
define void @remove_mon(%struct.coord* nocapture readonly %mp, %union.thing* %tp, i1 zeroext %waskill) #0 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 11
  %2 = load %union.thing** %1, align 8, !tbaa !51
  %3 = icmp eq %union.thing* %2, null
  br i1 %3, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2
  %5 = bitcast %struct.coord* %4 to i64*
  br label %6

; <label>:6                                       ; preds = %.backedge, %.lr.ph
  %obj.01 = phi %union.thing* [ %2, %.lr.ph ], [ %8, %.backedge ]
  %7 = getelementptr inbounds %union.thing* %obj.01, i64 0, i32 0, i32 0
  %8 = load %union.thing** %7, align 8, !tbaa !14
  %9 = getelementptr inbounds %union.thing* %obj.01, i64 0, i32 0, i32 2, i32 1
  %10 = bitcast i32* %9 to i64*
  %11 = load i64* %5, align 4
  store i64 %11, i64* %10, align 4
  tail call void @_detach(%union.thing** %1, %union.thing* %obj.01) #8
  br i1 %waskill, label %12, label %14

; <label>:12                                      ; preds = %6
  tail call void @fall(%union.thing* %obj.01, i1 zeroext false) #8
  br label %.backedge

.backedge:                                        ; preds = %14, %12
  %13 = icmp eq %union.thing* %8, null
  br i1 %13, label %._crit_edge, label %6

; <label>:14                                      ; preds = %6
  tail call void @discard(%union.thing* %obj.01) #8
  br label %.backedge

._crit_edge:                                      ; preds = %.backedge, %0
  %15 = getelementptr inbounds %struct.coord* %mp, i64 0, i32 0
  %16 = load i32* %15, align 4, !tbaa !21
  %17 = shl i32 %16, 5
  %18 = getelementptr inbounds %struct.coord* %mp, i64 0, i32 1
  %19 = load i32* %18, align 4, !tbaa !20
  %20 = add nsw i32 %17, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %21, i32 2
  store %union.thing* null, %union.thing** %22, align 8, !tbaa !43
  %23 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %24 = tail call i32 @wmove(%struct._win_st* %23, i32 %19, i32 %16) #8
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %32, label %26

; <label>:26                                      ; preds = %._crit_edge
  %27 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %28 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 6
  %29 = load i8* %28, align 1, !tbaa !42
  %30 = sext i8 %29 to i32
  %31 = tail call i32 @waddch(%struct._win_st* %27, i32 %30) #8
  br label %32

; <label>:32                                      ; preds = %26, %._crit_edge
  tail call void @_detach(%union.thing** @mlist, %union.thing* %tp) #8
  %33 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 8
  %34 = load i16* %33, align 2, !tbaa !18
  %35 = and i16 %34, 128
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %41, label %37

; <label>:37                                      ; preds = %32
  store i8 0, i8* @kamikaze, align 1, !tbaa !5
  store i8 0, i8* @to_death, align 1, !tbaa !5
  %38 = load i8* @fight_flush, align 1, !tbaa !5, !range !7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %41, label %40

; <label>:40                                      ; preds = %37
  tail call void (...)* bitcast (void ()* @flush_type to void (...)*)() #8
  br label %41

; <label>:41                                      ; preds = %40, %37, %32
  tail call void @discard(%union.thing* %tp) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @swing(i32 %at_lvl, i32 %op_arm, i32 %wplus) #0 {
  %1 = tail call i32 @rnd(i32 20) #8
  %2 = sub i32 20, %at_lvl
  %3 = sub i32 %2, %op_arm
  %4 = add nsw i32 %1, %wplus
  %5 = icmp sge i32 %4, %3
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8* nocapture) #7

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #7

; Function Attrs: nounwind ssp uwtable
define i8* @prname(i8* %mname, i1 zeroext %upper) #0 {
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %1 = icmp eq i8* %mname, null
  br i1 %1, label %2, label %3

; <label>:2                                       ; preds = %0
  store i32 7696249, i32* bitcast ([1024 x i8]* @prname.tbuf to i32*), align 16
  br label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), i8* %mname, i64 1024) #8
  br label %5

; <label>:5                                       ; preds = %3, %2
  br i1 %upper, label %6, label %11

; <label>:6                                       ; preds = %5
  %7 = load i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  %8 = sext i8 %7 to i32
  %9 = tail call i32 @__toupper(i32 %8) #8
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0), align 16, !tbaa !28
  br label %11

; <label>:11                                      ; preds = %6, %5
  ret i8* getelementptr inbounds ([1024 x i8]* @prname.tbuf, i64 0, i64 0)
}

declare i32 @__toupper(i32) #2

; Function Attrs: nounwind ssp uwtable
define void @init_player() #0 {
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.stats* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9) to i8*), i8* bitcast (%struct.stats* @max_stats to i8*), i64 40, i32 4, i1 false), !tbaa.struct !77
  store i32 1300, i32* @food_left, align 4, !tbaa !38
  %1 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %2 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 58, i32* %2, align 4, !tbaa !8
  %3 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5
  %4 = bitcast [13 x i8]* %3 to i32*
  store i32 1, i32* %4, align 4, !tbaa !78
  tail call void @add_pack(%union.thing* %1, i1 zeroext true) #8
  %5 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %6 = bitcast %union.thing* %5 to %struct.anon.0*
  %7 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 2, i32 0
  store i32 93, i32* %7, align 4, !tbaa !8
  %8 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 9, i32 5, i64 4
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4, !tbaa !50
  %10 = load i32* getelementptr inbounds ([8 x i32]* @a_class, i64 0, i64 1), align 4, !tbaa !38
  %11 = add nsw i32 %10, -1
  %12 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 9, i32 6
  store i32 %11, i32* %12, align 4, !tbaa !70
  %13 = getelementptr inbounds %struct.anon.0* %6, i64 0, i32 14
  %14 = load i32* %13, align 4, !tbaa !12
  %15 = or i32 %14, 2
  store i32 %15, i32* %13, align 4, !tbaa !12
  %16 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 9, i32 5
  %17 = bitcast [13 x i8]* %16 to i32*
  store i32 1, i32* %17, align 4, !tbaa !78
  store %union.thing* %5, %union.thing** @cur_armor, align 8, !tbaa !1
  tail call void @add_pack(%union.thing* %5, i1 zeroext true) #8
  %18 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  tail call void @init_weapon(%union.thing* %18, i32 0) #8
  %19 = bitcast %union.thing* %18 to %struct.anon.0*
  %20 = getelementptr inbounds %union.thing* %18, i64 0, i32 0, i32 9, i32 5, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4, !tbaa !68
  %22 = getelementptr inbounds %union.thing* %18, i64 0, i32 0, i32 9, i32 5, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 4, !tbaa !69
  %24 = getelementptr inbounds %struct.anon.0* %19, i64 0, i32 14
  %25 = load i32* %24, align 4, !tbaa !12
  %26 = or i32 %25, 2
  store i32 %26, i32* %24, align 4, !tbaa !12
  tail call void @add_pack(%union.thing* %18, i1 zeroext true) #8
  store %union.thing* %18, %union.thing** @cur_weapon, align 8, !tbaa !1
  %27 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  tail call void @init_weapon(%union.thing* %27, i32 2) #8
  %28 = bitcast %union.thing* %27 to %struct.anon.0*
  %29 = getelementptr inbounds %union.thing* %27, i64 0, i32 0, i32 9, i32 5, i64 8
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4, !tbaa !68
  %31 = getelementptr inbounds %struct.anon.0* %28, i64 0, i32 14
  %32 = load i32* %31, align 4, !tbaa !12
  %33 = or i32 %32, 2
  store i32 %33, i32* %31, align 4, !tbaa !12
  tail call void @add_pack(%union.thing* %27, i1 zeroext true) #8
  %34 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  tail call void @init_weapon(%union.thing* %34, i32 3) #8
  %35 = tail call i32 @rnd(i32 15) #8
  %36 = add nsw i32 %35, 25
  %37 = bitcast %union.thing* %34 to %struct.anon.0*
  %38 = getelementptr inbounds %union.thing* %34, i64 0, i32 0, i32 9, i32 5
  %39 = bitcast [13 x i8]* %38 to i32*
  store i32 %36, i32* %39, align 4, !tbaa !78
  %40 = getelementptr inbounds %struct.anon.0* %37, i64 0, i32 14
  %41 = load i32* %40, align 4, !tbaa !12
  %42 = or i32 %41, 2
  store i32 %42, i32* %40, align 4, !tbaa !12
  tail call void @add_pack(%union.thing* %34, i1 zeroext true) #8
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: nounwind ssp uwtable
define void @init_colors() #0 {
.preheader2:
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([33 x i8]* @used, i64 0, i64 0), i8 0, i64 27, i32 16, i1 false)
  br label %.preheader

.preheader:                                       ; preds = %6, %.preheader2
  %indvars.iv = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next, %6 ]
  br label %0

; <label>:0                                       ; preds = %0, %.preheader
  %1 = tail call i32 @rnd(i32 27) #8
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [33 x i8]* @used, i64 0, i64 %2
  %4 = load i8* %3, align 1, !tbaa !5, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %0

; <label>:6                                       ; preds = %0
  store i8 1, i8* %3, align 1, !tbaa !5
  %7 = getelementptr inbounds [27 x i8*]* @rainbow, i64 0, i64 %2
  %8 = load i8** %7, align 8, !tbaa !1
  %9 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @p_colors to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* %8, i8** %9, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %10, label %.preheader

; <label>:10                                      ; preds = %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @init_names() #0 {
  br label %1

; <label>:1                                       ; preds = %._crit_edge10, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %._crit_edge10 ]
  %2 = tail call i32 @rnd(i32 3) #8
  %3 = icmp eq i32 %2, -2
  br i1 %3, label %._crit_edge10, label %.lr.ph9

.lr.ph9:                                          ; preds = %1
  %4 = add nsw i32 %2, 1
  br label %5

; <label>:5                                       ; preds = %split6, %.lr.ph9
  %6 = phi i32 [ %4, %.lr.ph9 ], [ %27, %split6 ]
  %cp.07 = phi i8* [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %.lr.ph9 ], [ %26, %split6 ]
  %7 = tail call i32 @rnd(i32 3) #8
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %split6, label %.lr.ph4

.loopexit:                                        ; preds = %.lr.ph, %.preheader
  %cp.2.lcssa = phi i8* [ %cp.13, %.preheader ], [ %23, %.lr.ph ]
  %9 = add nsw i32 %11, -1
  %10 = icmp eq i32 %11, 0
  br i1 %10, label %split6, label %.lr.ph4

.lr.ph4:                                          ; preds = %.loopexit, %5
  %11 = phi i32 [ %9, %.loopexit ], [ %7, %5 ]
  %cp.13 = phi i8* [ %cp.2.lcssa, %.loopexit ], [ %cp.07, %5 ]
  %12 = tail call i32 @rnd(i32 147) #8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [147 x i8*]* @sylls, i64 0, i64 %13
  %15 = load i8** %14, align 8, !tbaa !1
  %16 = tail call i64 @strlen(i8* %15) #8
  %17 = getelementptr inbounds i8* %cp.13, i64 %16
  %18 = icmp ugt i8* %17, getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 40)
  br i1 %18, label %split6, label %.preheader

.preheader:                                       ; preds = %.lr.ph4
  %19 = load i8* %15, align 1, !tbaa !28
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %21 = phi i8 [ %24, %.lr.ph ], [ %19, %.preheader ]
  %sp.02 = phi i8* [ %22, %.lr.ph ], [ %15, %.preheader ]
  %cp.21 = phi i8* [ %23, %.lr.ph ], [ %cp.13, %.preheader ]
  %22 = getelementptr inbounds i8* %sp.02, i64 1
  %23 = getelementptr inbounds i8* %cp.21, i64 1
  store i8 %21, i8* %cp.21, align 1, !tbaa !28
  %24 = load i8* %22, align 1, !tbaa !28
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %.loopexit, label %.lr.ph

split6:                                           ; preds = %.lr.ph4, %.loopexit, %5
  %cp.1.lcssa = phi i8* [ %cp.07, %5 ], [ %cp.2.lcssa, %.loopexit ], [ %cp.13, %.lr.ph4 ]
  %26 = getelementptr inbounds i8* %cp.1.lcssa, i64 1
  store i8 32, i8* %cp.1.lcssa, align 1, !tbaa !28
  %27 = add nsw i32 %6, -1
  %28 = icmp eq i32 %6, 0
  br i1 %28, label %._crit_edge10, label %5

._crit_edge10:                                    ; preds = %split6, %1
  %cp.0.lcssa = phi i8* [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %1 ], [ %26, %split6 ]
  %29 = getelementptr inbounds i8* %cp.0.lcssa, i64 -1
  store i8 0, i8* %29, align 1, !tbaa !28
  %30 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %31 = add i64 %30, 1
  %32 = and i64 %31, 4294967295
  %33 = tail call i8* @malloc(i64 %32) #8
  %34 = getelementptr inbounds [0 x i8*]* bitcast ([18 x i8*]* @s_names to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* %33, i8** %34, align 8, !tbaa !1
  %35 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %33, i1 false)
  %36 = tail call i8* @__strcpy_chk(i8* %33, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i64 %35) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 18
  br i1 %exitcond, label %37, label %1

; <label>:37                                      ; preds = %._crit_edge10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @init_stones() #0 {
.preheader2:
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([33 x i8]* @used, i64 0, i64 0), i8 0, i64 26, i32 16, i1 false)
  br label %.preheader

.preheader:                                       ; preds = %6, %.preheader2
  %indvars.iv = phi i64 [ 0, %.preheader2 ], [ %indvars.iv.next, %6 ]
  br label %0

; <label>:0                                       ; preds = %0, %.preheader
  %1 = tail call i32 @rnd(i32 26) #8
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [33 x i8]* @used, i64 0, i64 %2
  %4 = load i8* %3, align 1, !tbaa !5, !range !7
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %0

; <label>:6                                       ; preds = %0
  store i8 1, i8* %3, align 1, !tbaa !5
  %7 = getelementptr inbounds [26 x %struct.STONE]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @stones to [26 x %struct.STONE]*), i64 0, i64 %2, i32 0
  %8 = load i8** %7, align 16, !tbaa !79
  %9 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @r_stones to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* %8, i8** %9, align 8, !tbaa !1
  %10 = getelementptr inbounds [26 x %struct.STONE]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @stones to [26 x %struct.STONE]*), i64 0, i64 %2, i32 1
  %11 = load i32* %10, align 8, !tbaa !81
  %12 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %indvars.iv, i32 2
  %13 = load i32* %12, align 4, !tbaa !82
  %14 = add nsw i32 %13, %11
  store i32 %14, i32* %12, align 4, !tbaa !82
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %15, label %.preheader

; <label>:15                                      ; preds = %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @init_materials() #0 {
.preheader6:
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([33 x i8]* @used, i64 0, i64 0), i8 0, i64 33, i32 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([22 x i8]* @init_materials.metused, i64 0, i64 0), i8 0, i64 22, i32 16, i1 false)
  br label %.preheader

.preheader:                                       ; preds = %22, %.preheader6
  %indvars.iv = phi i64 [ 0, %.preheader6 ], [ %indvars.iv.next, %22 ]
  br label %.backedge

.backedge:                                        ; preds = %12, %2, %.preheader
  %0 = tail call i32 @rnd(i32 2) #8
  %1 = icmp eq i32 %0, 0
  br i1 %1, label %2, label %12

; <label>:2                                       ; preds = %.backedge
  %3 = tail call i32 @rnd(i32 22) #8
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [22 x i8]* @init_materials.metused, i64 0, i64 %4
  %6 = load i8* %5, align 1, !tbaa !5, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %.backedge

; <label>:8                                       ; preds = %2
  %9 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* getelementptr inbounds ([5 x i8]* @.str104422, i64 0, i64 0), i8** %9, align 8, !tbaa !1
  %10 = getelementptr inbounds [22 x i8*]* @metal, i64 0, i64 %4
  %11 = load i8** %10, align 8, !tbaa !1
  store i8 1, i8* %5, align 1, !tbaa !5
  br label %22

; <label>:12                                      ; preds = %.backedge
  %13 = tail call i32 @rnd(i32 33) #8
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [33 x i8]* @used, i64 0, i64 %14
  %16 = load i8* %15, align 1, !tbaa !5, !range !7
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %.backedge

; <label>:18                                      ; preds = %12
  %19 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* getelementptr inbounds ([6 x i8]* @.str105423, i64 0, i64 0), i8** %19, align 8, !tbaa !1
  %20 = getelementptr inbounds [33 x i8*]* @wood, i64 0, i64 %14
  %21 = load i8** %20, align 8, !tbaa !1
  store i8 1, i8* %15, align 1, !tbaa !5
  br label %22

; <label>:22                                      ; preds = %18, %8
  %str.0 = phi i8* [ %11, %8 ], [ %21, %18 ]
  %23 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* %str.0, i8** %23, align 8, !tbaa !1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %24, label %.preheader

; <label>:24                                      ; preds = %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @sumprobs(%struct.obj_info* %info, i32 %bound) #0 {
  %1 = sext i32 %bound to i64
  %2 = getelementptr inbounds %struct.obj_info* %info, i64 %1
  %3 = icmp sgt i32 %bound, 1
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.obj_info* %info, i64 1
  br label %5

; <label>:5                                       ; preds = %5, %.lr.ph
  %6 = phi %struct.obj_info* [ %4, %.lr.ph ], [ %12, %5 ]
  %.01 = phi %struct.obj_info* [ %info, %.lr.ph ], [ %6, %5 ]
  %7 = getelementptr inbounds %struct.obj_info* %.01, i64 0, i32 1
  %8 = load i32* %7, align 4, !tbaa !83
  %9 = getelementptr inbounds %struct.obj_info* %.01, i64 1, i32 1
  %10 = load i32* %9, align 4, !tbaa !83
  %11 = add nsw i32 %10, %8
  store i32 %11, i32* %9, align 4, !tbaa !83
  %12 = getelementptr inbounds %struct.obj_info* %6, i64 1
  %13 = icmp ult %struct.obj_info* %12, %2
  br i1 %13, label %5, label %._crit_edge

._crit_edge:                                      ; preds = %5, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @init_probs() #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %2 = phi %struct.obj_info* [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 1), %0 ], [ %8, %1 ]
  %.01.i = phi %struct.obj_info* [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 0), %0 ], [ %2, %1 ]
  %3 = getelementptr inbounds %struct.obj_info* %.01.i, i64 0, i32 1
  %4 = load i32* %3, align 4, !tbaa !83
  %5 = getelementptr inbounds %struct.obj_info* %.01.i, i64 1, i32 1
  %6 = load i32* %5, align 4, !tbaa !83
  %7 = add nsw i32 %6, %4
  store i32 %7, i32* %5, align 4, !tbaa !83
  %8 = getelementptr inbounds %struct.obj_info* %2, i64 1
  %9 = icmp ult %struct.obj_info* %8, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 7)
  br i1 %9, label %1, label %sumprobs.exit

sumprobs.exit:                                    ; preds = %sumprobs.exit, %1
  %10 = phi %struct.obj_info* [ %16, %sumprobs.exit ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 1), %1 ]
  %.01.i11 = phi %struct.obj_info* [ %10, %sumprobs.exit ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 0), %1 ]
  %11 = getelementptr inbounds %struct.obj_info* %.01.i11, i64 0, i32 1
  %12 = load i32* %11, align 4, !tbaa !83
  %13 = getelementptr inbounds %struct.obj_info* %.01.i11, i64 1, i32 1
  %14 = load i32* %13, align 4, !tbaa !83
  %15 = add nsw i32 %14, %12
  store i32 %15, i32* %13, align 4, !tbaa !83
  %16 = getelementptr inbounds %struct.obj_info* %10, i64 1
  %17 = icmp ult %struct.obj_info* %16, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  br i1 %17, label %sumprobs.exit, label %sumprobs.exit12

sumprobs.exit12:                                  ; preds = %sumprobs.exit12, %sumprobs.exit
  %18 = phi %struct.obj_info* [ %24, %sumprobs.exit12 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 1), %sumprobs.exit ]
  %.01.i9 = phi %struct.obj_info* [ %18, %sumprobs.exit12 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 0), %sumprobs.exit ]
  %19 = getelementptr inbounds %struct.obj_info* %.01.i9, i64 0, i32 1
  %20 = load i32* %19, align 4, !tbaa !83
  %21 = getelementptr inbounds %struct.obj_info* %.01.i9, i64 1, i32 1
  %22 = load i32* %21, align 4, !tbaa !83
  %23 = add nsw i32 %22, %20
  store i32 %23, i32* %21, align 4, !tbaa !83
  %24 = getelementptr inbounds %struct.obj_info* %18, i64 1
  %25 = icmp ult %struct.obj_info* %24, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 18)
  br i1 %25, label %sumprobs.exit12, label %sumprobs.exit10

sumprobs.exit10:                                  ; preds = %sumprobs.exit10, %sumprobs.exit12
  %26 = phi %struct.obj_info* [ %32, %sumprobs.exit10 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 1), %sumprobs.exit12 ]
  %.01.i7 = phi %struct.obj_info* [ %26, %sumprobs.exit10 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 0), %sumprobs.exit12 ]
  %27 = getelementptr inbounds %struct.obj_info* %.01.i7, i64 0, i32 1
  %28 = load i32* %27, align 4, !tbaa !83
  %29 = getelementptr inbounds %struct.obj_info* %.01.i7, i64 1, i32 1
  %30 = load i32* %29, align 4, !tbaa !83
  %31 = add nsw i32 %30, %28
  store i32 %31, i32* %29, align 4, !tbaa !83
  %32 = getelementptr inbounds %struct.obj_info* %26, i64 1
  %33 = icmp ult %struct.obj_info* %32, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  br i1 %33, label %sumprobs.exit10, label %sumprobs.exit8

sumprobs.exit8:                                   ; preds = %sumprobs.exit8, %sumprobs.exit10
  %34 = phi %struct.obj_info* [ %40, %sumprobs.exit8 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 1), %sumprobs.exit10 ]
  %.01.i5 = phi %struct.obj_info* [ %34, %sumprobs.exit8 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 0), %sumprobs.exit10 ]
  %35 = getelementptr inbounds %struct.obj_info* %.01.i5, i64 0, i32 1
  %36 = load i32* %35, align 4, !tbaa !83
  %37 = getelementptr inbounds %struct.obj_info* %.01.i5, i64 1, i32 1
  %38 = load i32* %37, align 4, !tbaa !83
  %39 = add nsw i32 %38, %36
  store i32 %39, i32* %37, align 4, !tbaa !83
  %40 = getelementptr inbounds %struct.obj_info* %34, i64 1
  %41 = icmp ult %struct.obj_info* %40, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  br i1 %41, label %sumprobs.exit8, label %sumprobs.exit6

sumprobs.exit6:                                   ; preds = %sumprobs.exit6, %sumprobs.exit8
  %42 = phi %struct.obj_info* [ %48, %sumprobs.exit6 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 1), %sumprobs.exit8 ]
  %.01.i3 = phi %struct.obj_info* [ %42, %sumprobs.exit6 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 0), %sumprobs.exit8 ]
  %43 = getelementptr inbounds %struct.obj_info* %.01.i3, i64 0, i32 1
  %44 = load i32* %43, align 4, !tbaa !83
  %45 = getelementptr inbounds %struct.obj_info* %.01.i3, i64 1, i32 1
  %46 = load i32* %45, align 4, !tbaa !83
  %47 = add nsw i32 %46, %44
  store i32 %47, i32* %45, align 4, !tbaa !83
  %48 = getelementptr inbounds %struct.obj_info* %42, i64 1
  %49 = icmp ult %struct.obj_info* %48, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 9)
  br i1 %49, label %sumprobs.exit6, label %sumprobs.exit4

sumprobs.exit4:                                   ; preds = %sumprobs.exit4, %sumprobs.exit6
  %50 = phi %struct.obj_info* [ %56, %sumprobs.exit4 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 1), %sumprobs.exit6 ]
  %.01.i1 = phi %struct.obj_info* [ %50, %sumprobs.exit4 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 0), %sumprobs.exit6 ]
  %51 = getelementptr inbounds %struct.obj_info* %.01.i1, i64 0, i32 1
  %52 = load i32* %51, align 4, !tbaa !83
  %53 = getelementptr inbounds %struct.obj_info* %.01.i1, i64 1, i32 1
  %54 = load i32* %53, align 4, !tbaa !83
  %55 = add nsw i32 %54, %52
  store i32 %55, i32* %53, align 4, !tbaa !83
  %56 = getelementptr inbounds %struct.obj_info* %50, i64 1
  %57 = icmp ult %struct.obj_info* %56, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 8)
  br i1 %57, label %sumprobs.exit4, label %sumprobs.exit2

sumprobs.exit2:                                   ; preds = %sumprobs.exit4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @pick_color(i8* readnone %col) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 2048
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @rnd(i32 27) #8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [27 x i8*]* @rainbow, i64 0, i64 %6
  %8 = load i8** %7, align 8, !tbaa !1
  br label %9

; <label>:9                                       ; preds = %4, %0
  %10 = phi i8* [ %8, %4 ], [ %col, %0 ]
  ret i8* %10
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #8

; Function Attrs: nounwind ssp uwtable
define i32 @msg(i8* %fmt, ...) #0 {
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %1 = load i8* %fmt, align 1, !tbaa !28
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %8

; <label>:3                                       ; preds = %0
  %4 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %5 = call i32 @wmove(%struct._win_st* %4, i32 0, i32 0) #8
  %6 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %7 = call i32 @wclrtoeol(%struct._win_st* %6) #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  br label %23

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %10 = bitcast [1 x %struct.__va_list_tag]* %args to i8*
  call void @llvm.va_start(i8* %10)
  %11 = call i32 @__vsprintf_chk(i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0), i32 0, i64 1024, i8* %fmt, %struct.__va_list_tag* %9) #8
  %12 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0)) #8
  %13 = load i32* @newpos, align 4, !tbaa !38
  %14 = sext i32 %13 to i64
  %15 = add i64 %14, %12
  %16 = icmp ugt i64 %15, 70
  br i1 %16, label %17, label %doadd.exit

; <label>:17                                      ; preds = %8
  %18 = call i32 @endmsg() #8
  br label %doadd.exit

doadd.exit:                                       ; preds = %17, %8
  %19 = call i8* @__strcat_chk(i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0), i64 143) #8
  %20 = call i64 @strlen(i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0)) #8
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* @newpos, align 4, !tbaa !38
  call void @llvm.va_end(i8* %10)
  %22 = call i32 @endmsg()
  br label %23

; <label>:23                                      ; preds = %doadd.exit, %3
  %.0 = phi i32 [ -28, %3 ], [ %22, %doadd.exit ]
  ret i32 %.0
}

declare i32 @wclrtoeol(%struct._win_st*) #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind ssp uwtable
define void @doadd(i8* %fmt, %struct.__va_list_tag* %args) #0 {
  %1 = tail call i32 @__vsprintf_chk(i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0), i32 0, i64 1024, i8* %fmt, %struct.__va_list_tag* %args) #8
  %2 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0)) #8
  %3 = load i32* @newpos, align 4, !tbaa !38
  %4 = sext i32 %3 to i64
  %5 = add i64 %4, %2
  %6 = icmp ugt i64 %5, 70
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @endmsg()
  br label %9

; <label>:9                                       ; preds = %7, %0
  %10 = tail call i8* @__strcat_chk(i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0), i64 143) #8
  %11 = tail call i64 @strlen(i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0)) #8
  %12 = trunc i64 %11 to i32
  store i32 %12, i32* @newpos, align 4, !tbaa !38
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: nounwind ssp uwtable
define void @addmsg(i8* %fmt, ...) #0 {
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %2 = bitcast [1 x %struct.__va_list_tag]* %args to i8*
  call void @llvm.va_start(i8* %2)
  %3 = call i32 @__vsprintf_chk(i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0), i32 0, i64 1024, i8* %fmt, %struct.__va_list_tag* %1) #8
  %4 = call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0)) #8
  %5 = load i32* @newpos, align 4, !tbaa !38
  %6 = sext i32 %5 to i64
  %7 = add i64 %6, %4
  %8 = icmp ugt i64 %7, 70
  br i1 %8, label %9, label %doadd.exit

; <label>:9                                       ; preds = %0
  %10 = call i32 @endmsg() #8
  br label %doadd.exit

doadd.exit:                                       ; preds = %9, %0
  %11 = call i8* @__strcat_chk(i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @doadd.buf, i64 0, i64 0), i64 143) #8
  %12 = call i64 @strlen(i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0)) #8
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* @newpos, align 4, !tbaa !38
  call void @llvm.va_end(i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @endmsg() #0 {
  %1 = load i8* @save_msg, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %6, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([1024 x i8]* @huh, i64 0, i64 0), i1 false)
  %5 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @huh, i64 0, i64 0), i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), i64 %4) #8
  br label %6

; <label>:6                                       ; preds = %3, %0
  %7 = load i32* @mpos, align 4, !tbaa !38
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %wait_for.exit, label %9

; <label>:9                                       ; preds = %6
  tail call void @look(i1 zeroext false) #8
  %10 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %11 = load i32* @mpos, align 4, !tbaa !38
  %12 = tail call i32 @wmove(%struct._win_st* %10, i32 0, i32 %11) #8
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %17, label %14

; <label>:14                                      ; preds = %9
  %15 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %16 = tail call i32 @waddnstr(%struct._win_st* %15, i8* getelementptr inbounds ([9 x i8]* @.str498, i64 0, i64 0), i32 -1) #8
  br label %17

; <label>:17                                      ; preds = %14, %9
  %18 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %19 = tail call i32 @wrefresh(%struct._win_st* %18) #8
  %20 = load i8* @msg_esc, align 1, !tbaa !5, !range !7
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %.preheader4.i, label %.preheader

.preheader4.i:                                    ; preds = %readchar.exit3.i.thread, %.preheader4.i, %17
  %22 = tail call i32 (...)* bitcast (i32 ()* @md_readchar to i32 (...)*)() #8
  %sext.mask.i1.i = and i32 %22, 255
  switch i32 %sext.mask.i1.i, label %.preheader4.i [
    i32 3, label %readchar.exit3.i.thread
    i32 32, label %wait_for.exit
  ]

readchar.exit3.i.thread:                          ; preds = %.preheader4.i
  tail call void @quit(i32 0) #8
  br label %.preheader4.i

.preheader:                                       ; preds = %readchar.exit, %17
  %23 = tail call i32 (...)* bitcast (i32 ()* @md_readchar to i32 (...)*)() #8
  %sext.mask.i = and i32 %23, 255
  %24 = icmp eq i32 %sext.mask.i, 3
  br i1 %24, label %readchar.exit.thread, label %readchar.exit

readchar.exit.thread:                             ; preds = %.preheader
  tail call void @quit(i32 0) #8
  br label %.loopexit

readchar.exit:                                    ; preds = %.preheader
  %25 = trunc i32 %23 to i8
  switch i8 %25, label %.preheader [
    i8 32, label %wait_for.exit
    i8 27, label %.loopexit
  ]

.loopexit:                                        ; preds = %readchar.exit, %readchar.exit.thread
  store i32 0, i32* @mpos, align 4, !tbaa !38
  store i32 0, i32* @newpos, align 4, !tbaa !38
  store i8 0, i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), align 16, !tbaa !28
  br label %59

wait_for.exit:                                    ; preds = %readchar.exit, %.preheader4.i, %6
  %26 = load i16* bitcast ([143 x i8]* @msgbuf to i16*), align 16
  %27 = trunc i16 %26 to i8
  %isascii.i.i4 = icmp sgt i8 %27, -1
  br i1 %isascii.i.i4, label %28, label %35

; <label>:28                                      ; preds = %wait_for.exit
  %29 = lshr i16 %26, 8
  %30 = trunc i16 %29 to i8
  %31 = sext i8 %27 to i64
  %32 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %31
  %33 = load i32* %32, align 4, !tbaa !38
  %34 = and i32 %33, 4096
  br label %islower.exit

; <label>:35                                      ; preds = %wait_for.exit
  %36 = sext i8 %27 to i32
  %37 = tail call i32 @__maskrune(i32 %36, i64 4096) #8
  %.pre = load i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 1), align 1
  br label %islower.exit

islower.exit:                                     ; preds = %35, %28
  %38 = phi i8 [ %30, %28 ], [ %.pre, %35 ]
  %.sink.i.in.i = phi i32 [ %34, %28 ], [ %37, %35 ]
  %39 = load i8* @lower_msg, align 1
  %notlhs = icmp eq i32 %.sink.i.in.i, 0
  %notrhs = icmp ne i8 %39, 0
  %or.cond.not = or i1 %notrhs, %notlhs
  %40 = icmp eq i8 %38, 41
  %or.cond3 = or i1 %or.cond.not, %40
  br i1 %or.cond3, label %46, label %41

; <label>:41                                      ; preds = %islower.exit
  %42 = load i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), align 16, !tbaa !28
  %43 = sext i8 %42 to i32
  %44 = tail call i32 @__toupper(i32 %43) #8
  %45 = trunc i32 %44 to i8
  store i8 %45, i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), align 16, !tbaa !28
  br label %46

; <label>:46                                      ; preds = %41, %islower.exit
  %47 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %48 = tail call i32 @wmove(%struct._win_st* %47, i32 0, i32 0) #8
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %46
  %51 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %52 = tail call i32 @waddnstr(%struct._win_st* %51, i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), i32 -1) #8
  br label %53

; <label>:53                                      ; preds = %50, %46
  %54 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %55 = tail call i32 @wclrtoeol(%struct._win_st* %54) #8
  %56 = load i32* @newpos, align 4, !tbaa !38
  store i32 %56, i32* @mpos, align 4, !tbaa !38
  store i32 0, i32* @newpos, align 4, !tbaa !38
  store i8 0, i8* getelementptr inbounds ([143 x i8]* @msgbuf, i64 0, i64 0), align 16, !tbaa !28
  %57 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %58 = tail call i32 @wrefresh(%struct._win_st* %57) #8
  br label %59

; <label>:59                                      ; preds = %53, %.loopexit
  %.0 = phi i32 [ 27, %.loopexit ], [ -28, %53 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @wait_for(i32 %ch) #0 {
  %1 = icmp eq i32 %ch, 10
  br i1 %1, label %.preheader, label %.preheader4

.preheader:                                       ; preds = %readchar.exit, %readchar.exit.thread, %0
  %2 = tail call i32 (...)* bitcast (i32 ()* @md_readchar to i32 (...)*)() #8
  %sext.mask.i = and i32 %2, 255
  %3 = icmp eq i32 %sext.mask.i, 3
  br i1 %3, label %readchar.exit.thread, label %readchar.exit

readchar.exit.thread:                             ; preds = %.preheader
  tail call void @quit(i32 0) #8
  br label %.preheader

readchar.exit:                                    ; preds = %.preheader
  %4 = trunc i32 %2 to i8
  switch i8 %4, label %.preheader [
    i8 10, label %.critedge
    i8 13, label %.critedge
  ]

.preheader4:                                      ; preds = %readchar.exit3, %0
  %5 = tail call i32 (...)* bitcast (i32 ()* @md_readchar to i32 (...)*)() #8
  %sext.mask.i1 = and i32 %5, 255
  %6 = icmp eq i32 %sext.mask.i1, 3
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %.preheader4
  tail call void @quit(i32 0) #8
  br label %readchar.exit3

; <label>:8                                       ; preds = %.preheader4
  %sext = shl i32 %5, 24
  %phitmp = ashr exact i32 %sext, 24
  br label %readchar.exit3

readchar.exit3:                                   ; preds = %8, %7
  %.0.i2 = phi i32 [ 27, %7 ], [ %phitmp, %8 ]
  %9 = icmp eq i32 %.0.i2, %ch
  br i1 %9, label %.critedge, label %.preheader4

.critedge:                                        ; preds = %readchar.exit3, %readchar.exit, %readchar.exit
  ret void
}

declare i32 @__vsprintf_chk(i8*, i32, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare i8* @__strcat_chk(i8*, i8*, i64) #5

; Function Attrs: nounwind ssp uwtable
define i32 @step_ok(i32 %ch) #0 {
  switch i32 %ch, label %1 [
    i32 32, label %11
    i32 124, label %11
    i32 45, label %11
  ]

; <label>:1                                       ; preds = %0
  %isascii.i.i = icmp ult i32 %ch, 128
  br i1 %isascii.i.i, label %2, label %7

; <label>:2                                       ; preds = %1
  %3 = sext i32 %ch to i64
  %4 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %3
  %5 = load i32* %4, align 4, !tbaa !38
  %6 = and i32 %5, 256
  br label %isalpha.exit

; <label>:7                                       ; preds = %1
  %8 = tail call i32 @__maskrune(i32 %ch, i64 256) #8
  br label %isalpha.exit

isalpha.exit:                                     ; preds = %7, %2
  %.sink.i.in.i = phi i32 [ %6, %2 ], [ %8, %7 ]
  %9 = icmp eq i32 %.sink.i.in.i, 0
  %10 = zext i1 %9 to i32
  br label %11

; <label>:11                                      ; preds = %isalpha.exit, %0, %0, %0
  %.0 = phi i32 [ %10, %isalpha.exit ], [ 0, %0 ], [ 0, %0 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @readchar() #0 {
  %1 = tail call i32 (...)* bitcast (i32 ()* @md_readchar to i32 (...)*)() #8
  %sext.mask = and i32 %1, 255
  %2 = icmp eq i32 %sext.mask, 3
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @quit(i32 0) #8
  br label %6

; <label>:4                                       ; preds = %0
  %5 = trunc i32 %1 to i8
  br label %6

; <label>:6                                       ; preds = %4, %3
  %.0 = phi i8 [ 27, %3 ], [ %5, %4 ]
  ret i8 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @status() #0 {
  %1 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, null
  %3 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 6
  %.in = select i1 %2, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 3), i32* %3
  %4 = load i32* %.in, align 4
  %5 = load i32* @status.s_hp, align 4, !tbaa !38
  %6 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %32

; <label>:8                                       ; preds = %0
  %9 = load i32* @status.s_exp, align 4, !tbaa !38
  %10 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %11 = icmp eq i32 %9, %10
  br i1 %11, label %12, label %32

; <label>:12                                      ; preds = %8
  %13 = load i32* @status.s_pur, align 4, !tbaa !38
  %14 = load i32* @purse, align 4, !tbaa !38
  %15 = icmp eq i32 %13, %14
  %16 = load i32* @status.s_arm, align 4
  %17 = icmp eq i32 %16, %4
  %or.cond = and i1 %15, %17
  br i1 %or.cond, label %18, label %32

; <label>:18                                      ; preds = %12
  %19 = load i32* @status.s_str, align 4, !tbaa !38
  %20 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !84
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %32

; <label>:22                                      ; preds = %18
  %23 = load i32* @status.s_lvl, align 4, !tbaa !38
  %24 = load i32* @level, align 4, !tbaa !38
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %32

; <label>:26                                      ; preds = %22
  %27 = load i32* @status.s_hungry, align 4, !tbaa !38
  %28 = load i32* @hungry_state, align 4, !tbaa !38
  %29 = icmp eq i32 %27, %28
  %30 = load i8* @stat_msg, align 1
  %31 = icmp eq i8 %30, 0
  %or.cond3 = and i1 %29, %31
  br i1 %or.cond3, label %100, label %32

; <label>:32                                      ; preds = %26, %22, %18, %12, %8, %0
  store i32 %4, i32* @status.s_arm, align 4, !tbaa !38
  %33 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %34 = icmp eq %struct._win_st* %33, null
  br i1 %34, label %.thread, label %35

; <label>:35                                      ; preds = %32
  %36 = getelementptr inbounds %struct._win_st* %33, i64 0, i32 0
  %37 = load i16* %36, align 2, !tbaa !85
  %38 = sext i16 %37 to i32
  %39 = getelementptr inbounds %struct._win_st* %33, i64 0, i32 1
  %40 = load i16* %39, align 2, !tbaa !86
  %41 = sext i16 %40 to i32
  br label %.thread

.thread:                                          ; preds = %35, %32
  %42 = phi %struct._win_st* [ %33, %35 ], [ null, %32 ]
  %43 = phi i32 [ %38, %35 ], [ -1, %32 ]
  %44 = phi i32 [ %41, %35 ], [ -1, %32 ]
  %45 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %46 = icmp eq i32 %5, %45
  br i1 %46, label %.loopexit, label %47

; <label>:47                                      ; preds = %.thread
  store i32 %45, i32* @status.s_hp, align 4, !tbaa !38
  store i32 0, i32* @status.hpwidth, align 4, !tbaa !38
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %47
  %temp.05 = phi i32 [ %49, %.lr.ph ], [ %45, %47 ]
  %storemerge4 = phi i32 [ %50, %.lr.ph ], [ 0, %47 ]
  %49 = sdiv i32 %temp.05, 10
  %50 = add nsw i32 %storemerge4, 1
  %temp.05.off = add i32 %temp.05, 9
  %51 = icmp ult i32 %temp.05.off, 19
  br i1 %51, label %..loopexit_crit_edge, label %.lr.ph

..loopexit_crit_edge:                             ; preds = %.lr.ph
  store i32 %50, i32* @status.hpwidth, align 4, !tbaa !38
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %47, %.thread
  %52 = load i32* @level, align 4, !tbaa !38
  store i32 %52, i32* @status.s_lvl, align 4, !tbaa !38
  %53 = load i32* @purse, align 4, !tbaa !38
  store i32 %53, i32* @status.s_pur, align 4, !tbaa !38
  store i32 %6, i32* @status.s_hp, align 4, !tbaa !38
  %54 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !84
  store i32 %54, i32* @status.s_str, align 4, !tbaa !38
  %55 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  store i32 %55, i32* @status.s_exp, align 4, !tbaa !38
  %56 = load i32* @hungry_state, align 4, !tbaa !38
  store i32 %56, i32* @status.s_hungry, align 4, !tbaa !38
  %57 = load i8* @stat_msg, align 1, !tbaa !5, !range !7
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %77, label %59

; <label>:59                                      ; preds = %.loopexit
  %60 = tail call i32 @wmove(%struct._win_st* %42, i32 0, i32 0) #8
  %61 = load i32* @level, align 4, !tbaa !38
  %62 = load i32* @purse, align 4, !tbaa !38
  %63 = load i32* @status.hpwidth, align 4, !tbaa !38
  %64 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %65 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %66 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !84
  %67 = load i32* getelementptr inbounds (%struct.stats* @max_stats, i64 0, i32 0), align 4, !tbaa !74
  %68 = load i32* @status.s_arm, align 4, !tbaa !38
  %69 = sub nsw i32 10, %68
  %70 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %71 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %72 = load i32* @hungry_state, align 4, !tbaa !38
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [4 x i8*]* @status.state_name, i64 0, i64 %73
  %75 = load i8** %74, align 8, !tbaa !1
  %76 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([78 x i8]* @.str5503, i64 0, i64 0), i32 %61, i32 %62, i32 %63, i32 %64, i32 %63, i32 %65, i32 %66, i32 %67, i32 %69, i32 %70, i32 %71, i8* %75)
  br label %95

; <label>:77                                      ; preds = %.loopexit
  %78 = tail call i32 @wmove(%struct._win_st* %42, i32 23, i32 0) #8
  %79 = load i32* @level, align 4, !tbaa !38
  %80 = load i32* @purse, align 4, !tbaa !38
  %81 = load i32* @status.hpwidth, align 4, !tbaa !38
  %82 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %83 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %84 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !84
  %85 = load i32* getelementptr inbounds (%struct.stats* @max_stats, i64 0, i32 0), align 4, !tbaa !74
  %86 = load i32* @status.s_arm, align 4, !tbaa !38
  %87 = sub nsw i32 10, %86
  %88 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %89 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %90 = load i32* @hungry_state, align 4, !tbaa !38
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [4 x i8*]* @status.state_name, i64 0, i64 %91
  %93 = load i8** %92, align 8, !tbaa !1
  %94 = tail call i32 (i8*, ...)* @printw(i8* getelementptr inbounds ([77 x i8]* @.str6504, i64 0, i64 0), i32 %79, i32 %80, i32 %81, i32 %82, i32 %81, i32 %83, i32 %84, i32 %85, i32 %87, i32 %88, i32 %89, i8* %93) #8
  br label %95

; <label>:95                                      ; preds = %77, %59
  %96 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %97 = tail call i32 @wclrtoeol(%struct._win_st* %96) #8
  %98 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %99 = tail call i32 @wmove(%struct._win_st* %98, i32 %43, i32 %44) #8
  br label %100

; <label>:100                                     ; preds = %95, %26
  ret void
}

declare i32 @printw(i8*, ...) #2

; Function Attrs: nounwind ssp uwtable
define void @show_win(i8* %message) #0 {
  %1 = load %struct._win_st** @hw, align 8, !tbaa !1
  %2 = tail call i32 @wmove(%struct._win_st* %1, i32 0, i32 0) #8
  %3 = tail call i32 @waddnstr(%struct._win_st* %1, i8* %message, i32 -1) #8
  %4 = icmp eq %struct._win_st* %1, null
  br i1 %4, label %10, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct._win_st* %1, i64 0, i32 2
  %7 = load i16* %6, align 2, !tbaa !56
  %8 = sext i16 %7 to i32
  %9 = add nsw i32 %8, 1
  br label %10

; <label>:10                                      ; preds = %5, %0
  %11 = phi i32 [ %9, %5 ], [ -1, %0 ]
  %12 = tail call i32 @wtouchln(%struct._win_st* %1, i32 0, i32 %11, i32 1) #8
  %13 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %14 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %15 = tail call i32 @wmove(%struct._win_st* %1, i32 %13, i32 %14) #8
  %16 = tail call i32 @wrefresh(%struct._win_st* %1) #8
  br label %.preheader4.i

.preheader4.i:                                    ; preds = %readchar.exit3.i.thread, %.preheader4.i, %10
  %17 = tail call i32 (...)* bitcast (i32 ()* @md_readchar to i32 (...)*)() #8
  %sext.mask.i1.i = and i32 %17, 255
  switch i32 %sext.mask.i1.i, label %.preheader4.i [
    i32 3, label %readchar.exit3.i.thread
    i32 32, label %wait_for.exit
  ]

readchar.exit3.i.thread:                          ; preds = %.preheader4.i
  tail call void @quit(i32 0) #8
  br label %.preheader4.i

wait_for.exit:                                    ; preds = %.preheader4.i
  %18 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %19 = tail call i32 @clearok(%struct._win_st* %18, i1 zeroext true) #8
  %20 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %21 = icmp eq %struct._win_st* %20, null
  br i1 %21, label %27, label %22

; <label>:22                                      ; preds = %wait_for.exit
  %23 = getelementptr inbounds %struct._win_st* %20, i64 0, i32 2
  %24 = load i16* %23, align 2, !tbaa !56
  %25 = sext i16 %24 to i32
  %26 = add nsw i32 %25, 1
  br label %27

; <label>:27                                      ; preds = %22, %wait_for.exit
  %28 = phi i32 [ %26, %22 ], [ -1, %wait_for.exit ]
  %29 = tail call i32 @wtouchln(%struct._win_st* %20, i32 0, i32 %28, i32 1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @_detach(%union.thing** nocapture %list, %union.thing* %item) #0 {
  %1 = load %union.thing** %list, align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, %item
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %item, i64 0, i32 0, i32 0
  %5 = load %union.thing** %4, align 8, !tbaa !14
  store %union.thing* %5, %union.thing** %list, align 8, !tbaa !1
  br label %6

; <label>:6                                       ; preds = %3, %0
  %7 = getelementptr inbounds %union.thing* %item, i64 0, i32 0, i32 1
  %8 = load %union.thing** %7, align 8, !tbaa !87
  %9 = icmp eq %union.thing* %8, null
  %.pre = getelementptr inbounds %union.thing* %item, i64 0, i32 0, i32 0
  br i1 %9, label %._crit_edge, label %10

; <label>:10                                      ; preds = %6
  %11 = load %union.thing** %.pre, align 8, !tbaa !14
  %12 = getelementptr inbounds %union.thing* %8, i64 0, i32 0, i32 0
  store %union.thing* %11, %union.thing** %12, align 8, !tbaa !14
  br label %._crit_edge

._crit_edge:                                      ; preds = %10, %6
  %13 = load %union.thing** %.pre, align 8, !tbaa !14
  %14 = icmp eq %union.thing* %13, null
  br i1 %14, label %17, label %15

; <label>:15                                      ; preds = %._crit_edge
  %16 = getelementptr inbounds %union.thing* %13, i64 0, i32 0, i32 1
  store %union.thing* %8, %union.thing** %16, align 8, !tbaa !87
  br label %17

; <label>:17                                      ; preds = %15, %._crit_edge
  store %union.thing* null, %union.thing** %.pre, align 8, !tbaa !14
  store %union.thing* null, %union.thing** %7, align 8, !tbaa !87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @_attach(%union.thing** nocapture %list, %union.thing* %item) #0 {
  %1 = load %union.thing** %list, align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %8, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %item, i64 0, i32 0, i32 0
  store %union.thing* %1, %union.thing** %4, align 8, !tbaa !14
  %5 = load %union.thing** %list, align 8, !tbaa !1
  %6 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 1
  store %union.thing* %item, %union.thing** %6, align 8, !tbaa !87
  %7 = getelementptr inbounds %union.thing* %item, i64 0, i32 0, i32 1
  store %union.thing* null, %union.thing** %7, align 8, !tbaa !87
  br label %10

; <label>:8                                       ; preds = %0
  %9 = bitcast %union.thing* %item to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 16, i32 8, i1 false)
  br label %10

; <label>:10                                      ; preds = %8, %3
  store %union.thing* %item, %union.thing** %list, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @_free_list(%union.thing** nocapture %ptr) #0 {
  %1 = load %union.thing** %ptr, align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %3 = phi %union.thing* [ %7, %.lr.ph ], [ %1, %0 ]
  %4 = getelementptr inbounds %union.thing* %3, i64 0, i32 0, i32 0
  %5 = load %union.thing** %4, align 8, !tbaa !14
  store %union.thing* %5, %union.thing** %ptr, align 8, !tbaa !1
  %6 = bitcast %union.thing* %3 to i8*
  tail call void @free(i8* %6) #8
  %7 = load %union.thing** %ptr, align 8, !tbaa !1
  %8 = icmp eq %union.thing* %7, null
  br i1 %8, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @discard(%union.thing* nocapture %item) #0 {
  %1 = bitcast %union.thing* %item to i8*
  tail call void @free(i8* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define noalias %union.thing* @new_item() #0 {
  %1 = tail call i8* @calloc(i64 1, i64 112) #8
  %2 = bitcast i8* %1 to %union.thing*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 16, i32 8, i1 false)
  ret %union.thing* %2
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #5

; Function Attrs: nounwind readnone ssp uwtable
define void @init_check() #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @open_score() #0 {
  %1 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %2 = icmp eq %struct.__sFILE* %1, null
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  tail call void @rewind(%struct.__sFILE* %1) #8
  br label %.thread

; <label>:4                                       ; preds = %0
  %5 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str1528, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str2529, i64 0, i64 0)) #8
  store %struct.__sFILE* %5, %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %6 = icmp eq %struct.__sFILE* %5, null
  br i1 %6, label %7, label %.thread

; <label>:7                                       ; preds = %4
  %8 = tail call i32* @__error() #8
  %9 = load i32* %8, align 4, !tbaa !38
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %14

; <label>:11                                      ; preds = %7
  %12 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str1528, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %12, %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %13 = tail call i32 @md_chmod(i8* getelementptr inbounds ([10 x i8]* @.str1528, i64 0, i64 0), i32 436) #8
  br label %14

; <label>:14                                      ; preds = %11, %7
  %.pr = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %15 = icmp eq %struct.__sFILE* %.pr, null
  br i1 %15, label %16, label %.thread

; <label>:16                                      ; preds = %14
  %17 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !1
  %18 = tail call i32* @__error() #8
  %19 = load i32* %18, align 4, !tbaa !38
  %20 = tail call i8* @"\01_strerror"(i32 %19) #8
  %21 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %17, i8* getelementptr inbounds ([35 x i8]* @.str4531, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1528, i64 0, i64 0), i8* %20) #8
  %22 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !1
  %23 = tail call i32 @fflush(%struct.__sFILE* %22) #8
  br label %.thread

.thread:                                          ; preds = %16, %14, %4, %3
  ret void
}

; Function Attrs: nounwind
declare void @rewind(%struct.__sFILE* nocapture) #5

declare %struct.__sFILE* @"\01_fopen"(i8*, i8*) #2

declare i32* @__error() #2

; Function Attrs: nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) #5

declare i8* @"\01_strerror"(i32) #2

; Function Attrs: nounwind
declare i32 @fflush(%struct.__sFILE* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define void @setup() #0 {
  tail call void (...)* bitcast (void ()* @md_onsignal_default to void (...)*)() #8
  %1 = tail call i32 @raw() #8
  %2 = tail call i32 @noecho() #8
  %3 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %4 = tail call i32 @keypad(%struct._win_st* %3, i1 zeroext true) #8
  store i8 1, i8* @got_ltc, align 1, !tbaa !5
  %5 = tail call i32 (...)* bitcast (i32 ()* @md_dsuspchar to i32 (...)*)() #8
  store i32 %5, i32* @orig_dsusp, align 4, !tbaa !38
  %6 = tail call i32 (...)* bitcast (i32 ()* @md_suspchar to i32 (...)*)() #8
  %7 = tail call i32 @md_setdsuspchar(i32 %6) #8
  ret void
}

declare i32 @raw() #2

declare i32 @noecho() #2

declare i32 @keypad(%struct._win_st*, i1 zeroext) #2

; Function Attrs: nounwind ssp uwtable
define void @getltchars() #0 {
  store i8 1, i8* @got_ltc, align 1, !tbaa !5
  %1 = tail call i32 (...)* bitcast (i32 ()* @md_dsuspchar to i32 (...)*)() #8
  store i32 %1, i32* @orig_dsusp, align 4, !tbaa !38
  %2 = tail call i32 (...)* bitcast (i32 ()* @md_suspchar to i32 (...)*)() #8
  %3 = tail call i32 @md_setdsuspchar(i32 %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @resetltchars() #0 {
  %1 = load i8* @got_ltc, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %6, label %3

; <label>:3                                       ; preds = %0
  %4 = load i32* @orig_dsusp, align 4, !tbaa !38
  %5 = tail call i32 @md_setdsuspchar(i32 %4) #8
  br label %6

; <label>:6                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @playltchars() #0 {
  %1 = load i8* @got_ltc, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %6, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (...)* bitcast (i32 ()* @md_suspchar to i32 (...)*)() #8
  %5 = tail call i32 @md_setdsuspchar(i32 %4) #8
  br label %6

; <label>:6                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define void @start_score() #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @is_symlink(i8* %sp) #0 {
  %sbuf2 = alloca %struct.stat, align 8
  %1 = bitcast %struct.stat* %sbuf2 to i8*
  call void @llvm.lifetime.start(i64 144, i8* %1) #8
  %2 = call i32 @"\01_lstat$INODE64"(i8* %sp, %struct.stat* %sbuf2) #8
  %3 = icmp slt i32 %2, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.stat* %sbuf2, i64 0, i32 1
  %6 = load i16* %5, align 4, !tbaa !88
  %7 = and i16 %6, -4096
  %8 = icmp ne i16 %7, -32768
  br label %9

; <label>:9                                       ; preds = %4, %0
  %.0 = phi i1 [ %8, %4 ], [ false, %0 ]
  call void @llvm.lifetime.end(i64 144, i8* %1) #8
  ret i1 %.0
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #8

declare i32 @"\01_lstat$INODE64"(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #8

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @lock_sc() #0 {
  br label %1

; <label>:1                                       ; preds = %19, %0
  %2 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %2, %struct.__sFILE** @lfd, align 8, !tbaa !1
  %3 = icmp eq %struct.__sFILE* %2, null
  br i1 %3, label %.preheader3, label %.loopexit

; <label>:4                                       ; preds = %.preheader3
  %5 = icmp slt i32 %8, 5
  br i1 %5, label %.preheader3, label %9

.preheader3:                                      ; preds = %4, %1
  %cnt.05 = phi i32 [ %8, %4 ], [ 0, %1 ]
  tail call void @md_sleep(i32 1) #8
  %6 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %6, %struct.__sFILE** @lfd, align 8, !tbaa !1
  %7 = icmp eq %struct.__sFILE* %6, null
  %8 = add nsw i32 %cnt.05, 1
  br i1 %7, label %4, label %.loopexit

; <label>:9                                       ; preds = %4
  %10 = tail call i32 @"\01_stat$INODE64"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), %struct.stat* @lock_sc.sbuf) #8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %14

; <label>:12                                      ; preds = %9
  %13 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %13, %struct.__sFILE** @lfd, align 8, !tbaa !1
  br label %.loopexit

; <label>:14                                      ; preds = %9
  %15 = tail call i64 @time(i64* null) #8
  %16 = load i64* getelementptr inbounds (%struct.stat* @lock_sc.sbuf, i64 0, i32 8, i32 0), align 8, !tbaa !93
  %17 = sub nsw i64 %15, %16
  %18 = icmp sgt i64 %17, 10
  br i1 %18, label %19, label %22

; <label>:19                                      ; preds = %14
  %20 = tail call i32 @md_unlink(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0)) #8
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %.loopexit, label %1

; <label>:22                                      ; preds = %14
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([57 x i8]* @str, i64 0, i64 0))
  %puts1 = tail call i32 @puts(i8* getelementptr inbounds ([52 x i8]* @str9, i64 0, i64 0))
  %puts2 = tail call i32 @puts(i8* getelementptr inbounds ([16 x i8]* @str10, i64 0, i64 0))
  %23 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !1
  %24 = tail call i8* @fgets(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 1024, %struct.__sFILE* %23) #8
  %25 = load i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %26 = icmp eq i8 %25, 121
  br i1 %26, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %22
  %27 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %27, %struct.__sFILE** @lfd, align 8, !tbaa !1
  %28 = icmp eq %struct.__sFILE* %27, null
  br i1 %28, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %41, %.preheader
  %29 = tail call i32 @"\01_stat$INODE64"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), %struct.stat* @lock_sc.sbuf) #8
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33

; <label>:31                                      ; preds = %.lr.ph
  %32 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %32, %struct.__sFILE** @lfd, align 8, !tbaa !1
  br label %.loopexit

; <label>:33                                      ; preds = %.lr.ph
  %34 = tail call i64 @time(i64* null) #8
  %35 = load i64* getelementptr inbounds (%struct.stat* @lock_sc.sbuf, i64 0, i32 8, i32 0), align 8, !tbaa !93
  %36 = sub nsw i64 %34, %35
  %37 = icmp sgt i64 %36, 10
  br i1 %37, label %38, label %41

; <label>:38                                      ; preds = %33
  %39 = tail call i32 @md_unlink(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0)) #8
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %.loopexit, label %41

; <label>:41                                      ; preds = %38, %33
  tail call void @md_sleep(i32 1) #8
  %42 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str3530, i64 0, i64 0)) #8
  store %struct.__sFILE* %42, %struct.__sFILE** @lfd, align 8, !tbaa !1
  %43 = icmp eq %struct.__sFILE* %42, null
  br i1 %43, label %.lr.ph, label %.loopexit

.loopexit:                                        ; preds = %41, %38, %31, %.preheader, %22, %19, %12, %.preheader3, %1
  %.0 = phi i1 [ true, %12 ], [ true, %31 ], [ false, %22 ], [ true, %.preheader ], [ false, %38 ], [ true, %41 ], [ true, %.preheader3 ], [ false, %19 ], [ true, %1 ]
  ret i1 %.0
}

declare i32 @"\01_stat$INODE64"(i8*, %struct.stat*) #2

declare i64 @time(i64*) #2

; Function Attrs: nounwind
declare i8* @fgets(i8*, i32, %struct.__sFILE* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define void @unlock_sc() #0 {
  %1 = load %struct.__sFILE** @lfd, align 8, !tbaa !1
  %2 = icmp eq %struct.__sFILE* %1, null
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @fclose(%struct.__sFILE* %1) #8
  br label %5

; <label>:5                                       ; preds = %3, %0
  store %struct.__sFILE* null, %struct.__sFILE** @lfd, align 8, !tbaa !1
  %6 = tail call i32 @md_unlink(i8* getelementptr inbounds ([10 x i8]* @.str5532, i64 0, i64 0)) #8
  ret void
}

; Function Attrs: nounwind
declare i32 @fclose(%struct.__sFILE* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define void @flush_type() #0 {
  %1 = tail call i32 @flushinp() #8
  ret void
}

declare i32 @flushinp() #2

; Function Attrs: nounwind
declare i32 @puts(i8* nocapture readonly) #8

; Function Attrs: noreturn nounwind ssp uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv, i8** %envp) #9 {
  tail call void (...)* bitcast (void ()* @md_init to void (...)*)() #8
  %1 = tail call i8* (...)* bitcast (i8* ()* @md_gethomedir to i8* (...)*)() #8
  %2 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i1 false)
  %3 = tail call i8* @__strncpy_chk(i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i8* %1, i64 1024, i64 %2) #8
  %4 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i1 false)
  %5 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i64 %4) #8
  %6 = tail call i8* @__strcat_chk(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str535, i64 0, i64 0), i64 %4) #8
  %7 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8]* @.str1536, i64 0, i64 0)) #8
  %cond = icmp eq i8* %7, null
  br i1 %cond, label %11, label %8

; <label>:8                                       ; preds = %0
  tail call void @parse_opts(i8* %7) #8
  %9 = load i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0), align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16

; <label>:11                                      ; preds = %8, %0
  %12 = tail call i8* (...)* bitcast (i8* ()* @md_getusername to i8* (...)*)() #8
  %13 = tail call i8* (...)* bitcast (i8* ()* @md_getusername to i8* (...)*)() #8
  %14 = tail call i64 @strlen(i8* %13) #8
  %15 = trunc i64 %14 to i32
  tail call void @strucpy(i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0), i8* %12, i32 %15) #8
  br label %16

; <label>:16                                      ; preds = %11, %8
  %17 = tail call i64 @time(i64* null) #8
  %18 = trunc i64 %17 to i32
  %19 = tail call i32 (...)* bitcast (i32 ()* @md_getpid to i32 (...)*)() #8
  %20 = add nsw i32 %18, %19
  store i32 %20, i32* @dnum, align 4, !tbaa !38
  store i32 %20, i32* @seed, align 4, !tbaa !38
  tail call void (...)* bitcast (void ()* @open_score to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @md_normaluser to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @md_normaluser to void (...)*)() #8
  %21 = icmp eq i32 %argc, 2
  br i1 %21, label %22, label %.critedge

; <label>:22                                      ; preds = %16
  %23 = getelementptr inbounds i8** %argv, i64 1
  %24 = load i8** %23, align 8, !tbaa !1
  %25 = tail call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8]* @.str2537, i64 0, i64 0)) #8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %22
  store i32 1, i32* @noscore, align 4, !tbaa !38
  tail call void @score(i32 0, i32 -1, i8 signext 0) #8
  tail call void @exit(i32 0) #10
  unreachable

; <label>:28                                      ; preds = %22
  %29 = tail call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8]* @.str3538, i64 0, i64 0)) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %55

; <label>:31                                      ; preds = %28
  %32 = load i32* @seed, align 4, !tbaa !38
  %33 = mul nsw i32 %32, 11109
  %34 = add nsw i32 %33, 13849
  store i32 %34, i32* @seed, align 4, !tbaa !38
  %35 = lshr i32 %34, 16
  %36 = urem i32 %35, 100
  store i32 %36, i32* @dnum, align 4, !tbaa !38
  br label %37

; <label>:37                                      ; preds = %37, %31
  %38 = phi i32 [ %43, %37 ], [ %34, %31 ]
  %39 = phi i32 [ %40, %37 ], [ %36, %31 ]
  %40 = add nsw i32 %39, -1
  %41 = icmp eq i32 %40, 0
  %42 = mul nsw i32 %38, 11109
  %43 = add nsw i32 %42, 13849
  br i1 %41, label %44, label %37

; <label>:44                                      ; preds = %37
  store i32 0, i32* @dnum, align 4, !tbaa !38
  %45 = lshr i32 %43, 16
  %46 = urem i32 %45, 100
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* @purse, align 4, !tbaa !38
  %48 = mul nsw i32 %43, 11109
  %49 = add nsw i32 %48, 13849
  store i32 %49, i32* @seed, align 4, !tbaa !38
  %50 = lshr i32 %49, 16
  %51 = urem i32 %50, 100
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* @level, align 4, !tbaa !38
  %53 = tail call %struct._win_st* @initscr() #8
  tail call void (...)* bitcast (void ()* @getltchars to void (...)*)() #8
  %54 = tail call signext i8 (...)* bitcast (i8 ()* @death_monst to i8 (...)*)() #8
  tail call void @death(i8 signext %54) #8
  tail call void @exit(i32 0) #10
  unreachable

; <label>:55                                      ; preds = %28
  tail call void (...)* bitcast (void ()* @init_check to void (...)*)() #8
  %56 = load i8** %23, align 8, !tbaa !1
  %57 = tail call zeroext i1 @restore(i8* %56, i8** %envp) #8
  br i1 %57, label %59, label %58

; <label>:58                                      ; preds = %55
  tail call void @my_exit(i32 1)
  unreachable

.critedge:                                        ; preds = %16
  tail call void (...)* bitcast (void ()* @init_check to void (...)*)() #8
  br label %59

; <label>:59                                      ; preds = %.critedge, %55
  %60 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str4539, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0)) #8
  %61 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %62 = tail call i32 @fflush(%struct.__sFILE* %61) #8
  %63 = tail call %struct._win_st* @initscr() #8
  tail call void (...)* bitcast (void ()* @init_probs to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @init_player to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @init_names to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @init_colors to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @init_stones to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @init_materials to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @setup to void (...)*)() #8
  %64 = load i32* @LINES, align 4, !tbaa !38
  %65 = icmp slt i32 %64, 24
  %66 = load i32* @COLS, align 4
  %67 = icmp slt i32 %66, 80
  %or.cond = or i1 %65, %67
  br i1 %or.cond, label %68, label %71

; <label>:68                                      ; preds = %59
  %69 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str5540, i64 0, i64 0), i32 24, i32 80) #8
  %70 = tail call i32 @endwin() #8
  tail call void @my_exit(i32 1)
  unreachable

; <label>:71                                      ; preds = %59
  %72 = tail call %struct._win_st* @newwin(i32 %64, i32 %66, i32 0, i32 0) #8
  store %struct._win_st* %72, %struct._win_st** @hw, align 8, !tbaa !1
  %73 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %74 = tail call i32 @idlok(%struct._win_st* %73, i1 zeroext true) #8
  %75 = load %struct._win_st** @hw, align 8, !tbaa !1
  %76 = tail call i32 @idlok(%struct._win_st* %75, i1 zeroext true) #8
  tail call void (...)* bitcast (void ()* @new_level to void (...)*)() #8
  %77 = tail call i32 @spread(i32 2) #8
  tail call void @start_daemon(void (...)* bitcast (void ()* @runners to void (...)*), i32 0, i32 %77) #8
  %78 = tail call i32 @spread(i32 2) #8
  tail call void @start_daemon(void (...)* bitcast (void ()* @doctor to void (...)*), i32 0, i32 %78) #8
  %79 = tail call i32 @spread(i32 70) #8
  %80 = tail call i32 @spread(i32 2) #8
  tail call void @fuse(void (...)* bitcast (void ()* @swander to void (...)*), i32 0, i32 %79, i32 %80) #8
  %81 = tail call i32 @spread(i32 2) #8
  tail call void @start_daemon(void (...)* bitcast (void ()* @stomach to void (...)*), i32 0, i32 %81) #8
  tail call void @playit()
  unreachable
}

; Function Attrs: nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) #5

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) #7

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define i32 @rnd(i32 %range) #0 {
  %1 = icmp eq i32 %range, 0
  br i1 %1, label %8, label %2

; <label>:2                                       ; preds = %0
  %3 = load i32* @seed, align 4, !tbaa !38
  %4 = mul nsw i32 %3, 11109
  %5 = add nsw i32 %4, 13849
  store i32 %5, i32* @seed, align 4, !tbaa !38
  %6 = lshr i32 %5, 16
  %7 = srem i32 %6, %range
  br label %8

; <label>:8                                       ; preds = %2, %0
  %9 = phi i32 [ %7, %2 ], [ 0, %0 ]
  ret i32 %9
}

declare %struct._win_st* @initscr() #2

; Function Attrs: nounwind
declare i32 @printf(i8* nocapture readonly, ...) #5

declare i32 @endwin() #2

declare %struct._win_st* @newwin(i32, i32, i32, i32) #2

declare i32 @idlok(%struct._win_st*, i1 zeroext) #2

; Function Attrs: noreturn nounwind ssp uwtable
define void @endit(i32 %sig) #9 {
  tail call void @fatal(i8* getelementptr inbounds ([16 x i8]* @.str6541, i64 0, i64 0))
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @fatal(i8* %s) #9 {
  %1 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %2 = load i32* @LINES, align 4, !tbaa !38
  %3 = add nsw i32 %2, -2
  %4 = tail call i32 @wmove(%struct._win_st* %1, i32 %3, i32 0) #8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %0
  %7 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %8 = tail call i32 @waddnstr(%struct._win_st* %7, i8* %s, i32 -1) #8
  br label %9

; <label>:9                                       ; preds = %6, %0
  %10 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %11 = tail call i32 @wrefresh(%struct._win_st* %10) #8
  %12 = tail call i32 @endwin() #8
  tail call void @my_exit(i32 0)
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define i32 @roll(i32 %number, i32 %sides) #0 {
  %1 = icmp eq i32 %number, 0
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %2 = icmp eq i32 %sides, 0
  br label %3

; <label>:3                                       ; preds = %rnd.exit, %.lr.ph
  %dtotal.02 = phi i32 [ 0, %.lr.ph ], [ %12, %rnd.exit ]
  %.01 = phi i32 [ %number, %.lr.ph ], [ %4, %rnd.exit ]
  %4 = add nsw i32 %.01, -1
  br i1 %2, label %rnd.exit, label %5

; <label>:5                                       ; preds = %3
  %6 = load i32* @seed, align 4, !tbaa !38
  %7 = mul nsw i32 %6, 11109
  %8 = add nsw i32 %7, 13849
  store i32 %8, i32* @seed, align 4, !tbaa !38
  %9 = lshr i32 %8, 16
  %10 = srem i32 %9, %sides
  %phitmp = add i32 %10, 1
  br label %rnd.exit

rnd.exit:                                         ; preds = %5, %3
  %11 = phi i32 [ %phitmp, %5 ], [ 1, %3 ]
  %12 = add nsw i32 %11, %dtotal.02
  %13 = icmp eq i32 %4, 0
  br i1 %13, label %._crit_edge, label %3

._crit_edge:                                      ; preds = %rnd.exit, %0
  %dtotal.0.lcssa = phi i32 [ 0, %0 ], [ %12, %rnd.exit ]
  ret i32 %dtotal.0.lcssa
}

; Function Attrs: nounwind ssp uwtable
define void @tstp(i32 %ignored) #0 {
  %1 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %2 = icmp eq %struct._win_st* %1, null
  br i1 %2, label %.thread, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct._win_st* %1, i64 0, i32 0
  %5 = load i16* %4, align 2, !tbaa !85
  %6 = sext i16 %5 to i32
  %7 = getelementptr inbounds %struct._win_st* %1, i64 0, i32 1
  %8 = load i16* %7, align 2, !tbaa !86
  %9 = sext i16 %8 to i32
  br label %.thread

.thread:                                          ; preds = %3, %0
  %10 = phi i32 [ %6, %3 ], [ -1, %0 ]
  %11 = phi i32 [ %9, %3 ], [ -1, %0 ]
  %12 = load i32* @COLS, align 4, !tbaa !38
  %13 = add nsw i32 %12, -1
  %14 = load i32* @LINES, align 4, !tbaa !38
  %15 = add nsw i32 %14, -1
  %16 = tail call i32 @mvcur(i32 0, i32 %13, i32 %15, i32 0) #8
  %17 = tail call i32 @endwin() #8
  tail call void @resetltchars() #8
  %18 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %19 = tail call i32 @fflush(%struct.__sFILE* %18) #8
  tail call void (...)* bitcast (void ()* @md_tstpsignal to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @md_tstpresume to void (...)*)() #8
  %20 = tail call i32 @raw() #8
  %21 = tail call i32 @noecho() #8
  %22 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %23 = tail call i32 @keypad(%struct._win_st* %22, i1 zeroext true) #8
  tail call void @playltchars() #8
  %24 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %25 = tail call i32 @clearok(%struct._win_st* %24, i1 zeroext true) #8
  %26 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %27 = tail call i32 @wrefresh(%struct._win_st* %26) #8
  %28 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %29 = icmp eq %struct._win_st* %28, null
  br i1 %29, label %.thread2, label %30

; <label>:30                                      ; preds = %.thread
  %31 = getelementptr inbounds %struct._win_st* %28, i64 0, i32 0
  %32 = load i16* %31, align 2, !tbaa !85
  %33 = sext i16 %32 to i32
  %34 = getelementptr inbounds %struct._win_st* %28, i64 0, i32 1
  %35 = load i16* %34, align 2, !tbaa !86
  %36 = sext i16 %35 to i32
  br label %.thread2

.thread2:                                         ; preds = %30, %.thread
  %37 = phi i32 [ %33, %30 ], [ -1, %.thread ]
  %38 = phi i32 [ %36, %30 ], [ -1, %.thread ]
  %39 = tail call i32 @mvcur(i32 %37, i32 %38, i32 %10, i32 %11) #8
  %40 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %41 = tail call i32 @fflush(%struct.__sFILE* %40) #8
  %42 = trunc i32 %10 to i16
  %43 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %44 = getelementptr inbounds %struct._win_st* %43, i64 0, i32 0
  store i16 %42, i16* %44, align 2, !tbaa !85
  %45 = trunc i32 %11 to i16
  %46 = getelementptr inbounds %struct._win_st* %43, i64 0, i32 1
  store i16 %45, i16* %46, align 2, !tbaa !86
  ret void
}

declare i32 @mvcur(i32, i32, i32, i32) #2

; Function Attrs: noreturn nounwind ssp uwtable
define void @playit() #9 {
  %1 = tail call i32 @baudrate() #8
  %2 = icmp slt i32 %1, 1201
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  store i8 1, i8* @terse, align 1, !tbaa !5
  store i8 1, i8* @jump, align 1, !tbaa !5
  store i8 0, i8* @see_floor, align 1, !tbaa !5
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = tail call i32 (...)* bitcast (i32 ()* @md_hasclreol to i32 (...)*)() #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %4
  store i32 2, i32* @inv_type, align 4, !tbaa !38
  br label %8

; <label>:8                                       ; preds = %7, %4
  %9 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8]* @.str1536, i64 0, i64 0)) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %8
  tail call void @parse_opts(i8* %9) #8
  br label %12

; <label>:12                                      ; preds = %11, %8
  %13 = load i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  store i64 %13, i64* bitcast (%struct.coord* @oldpos to i64*), align 4
  %14 = tail call %struct.room* @roomin(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  store %struct.room* %14, %struct.room** @oldrp, align 8, !tbaa !1
  %15 = load i8* @playing, align 1, !tbaa !5, !range !7
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %12
  tail call void (...)* bitcast (void ()* @command to void (...)*)() #8
  %17 = load i8* @playing, align 1, !tbaa !5, !range !7
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %12
  tail call void @endit(i32 undef)
  unreachable
}

declare i32 @baudrate() #2

; Function Attrs: nounwind ssp uwtable
define void @quit(i32 %sig) #0 {
  %1 = load i8* @q_comm, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  store i32 0, i32* @mpos, align 4, !tbaa !38
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %6 = icmp eq %struct._win_st* %5, null
  br i1 %6, label %.thread, label %7

; <label>:7                                       ; preds = %4
  %8 = getelementptr inbounds %struct._win_st* %5, i64 0, i32 0
  %9 = load i16* %8, align 2, !tbaa !85
  %10 = sext i16 %9 to i32
  %11 = getelementptr inbounds %struct._win_st* %5, i64 0, i32 1
  %12 = load i16* %11, align 2, !tbaa !86
  %13 = sext i16 %12 to i32
  br label %.thread

.thread:                                          ; preds = %7, %4
  %14 = phi i32 [ %10, %7 ], [ -1, %4 ]
  %15 = phi i32 [ %13, %7 ], [ -1, %4 ]
  %16 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([13 x i8]* @.str7542, i64 0, i64 0)) #8
  %17 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %18 = icmp eq i8 %17, 121
  br i1 %18, label %19, label %34

; <label>:19                                      ; preds = %.thread
  %20 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @leave) #8
  %21 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %22 = tail call i32 @wclear(%struct._win_st* %21) #8
  %23 = load i32* @LINES, align 4, !tbaa !38
  %24 = add nsw i32 %23, -2
  %25 = load i32* @purse, align 4, !tbaa !38
  %26 = tail call i32 (i32, i32, i8*, ...)* @mvprintw(i32 %24, i32 0, i8* getelementptr inbounds ([29 x i8]* @.str8543, i64 0, i64 0), i32 %25) #8
  %27 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %28 = load i32* @LINES, align 4, !tbaa !38
  %29 = add nsw i32 %28, -1
  %30 = tail call i32 @wmove(%struct._win_st* %27, i32 %29, i32 0) #8
  %31 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %32 = tail call i32 @wrefresh(%struct._win_st* %31) #8
  %33 = load i32* @purse, align 4, !tbaa !38
  tail call void @score(i32 %33, i32 1, i8 signext 0) #8
  tail call void @my_exit(i32 0)
  unreachable

; <label>:34                                      ; preds = %.thread
  %35 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %36 = tail call i32 @wmove(%struct._win_st* %35, i32 0, i32 0) #8
  %37 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %38 = tail call i32 @wclrtoeol(%struct._win_st* %37) #8
  tail call void (...)* bitcast (void ()* @status to void (...)*)() #8
  %39 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %40 = tail call i32 @wmove(%struct._win_st* %39, i32 %14, i32 %15) #8
  %41 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %42 = tail call i32 @wrefresh(%struct._win_st* %41) #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  store i32 0, i32* @count, align 4, !tbaa !38
  store i8 0, i8* @to_death, align 1, !tbaa !5
  ret void
}

declare void (i32)* @signal(i32, void (i32)*) #2

; Function Attrs: noreturn nounwind ssp uwtable
define void @leave(i32 %sig) #9 {
  %1 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  tail call void @setbuf(%struct.__sFILE* %1, i8* getelementptr inbounds ([1024 x i8]* @leave.buf, i64 0, i64 0)) #8
  %2 = tail call zeroext i1 @isendwin() #8
  br i1 %2, label %10, label %3

; <label>:3                                       ; preds = %0
  %4 = load i32* @COLS, align 4, !tbaa !38
  %5 = add nsw i32 %4, -1
  %6 = load i32* @LINES, align 4, !tbaa !38
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @mvcur(i32 0, i32 %5, i32 %7, i32 0) #8
  %9 = tail call i32 @endwin() #8
  br label %10

; <label>:10                                      ; preds = %3, %0
  %11 = tail call i32 @putchar(i32 10) #8
  tail call void @my_exit(i32 0)
  unreachable
}

declare i32 @mvprintw(i32, i32, i8*, ...) #2

; Function Attrs: nounwind
declare void @setbuf(%struct.__sFILE* nocapture, i8*) #5

declare zeroext i1 @isendwin() #2

; Function Attrs: nounwind
declare i32 @putchar(i32) #5

; Function Attrs: nounwind ssp uwtable
define void @shell() #0 {
  %1 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %2 = load i32* @LINES, align 4, !tbaa !38
  %3 = add nsw i32 %2, -1
  %4 = tail call i32 @wmove(%struct._win_st* %1, i32 %3, i32 0) #8
  %5 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %6 = tail call i32 @wrefresh(%struct._win_st* %5) #8
  %7 = tail call i32 @endwin() #8
  tail call void @resetltchars() #8
  %8 = tail call i32 @putchar(i32 10) #8
  store i8 1, i8* @in_shell, align 1, !tbaa !5
  store i8 0, i8* @after, align 1, !tbaa !5
  %9 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %10 = tail call i32 @fflush(%struct.__sFILE* %9) #8
  %11 = tail call i32 (...)* bitcast (i32 ()* @md_shellescape to i32 (...)*)() #8
  %12 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str9544, i64 0, i64 0)) #8
  %13 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %14 = tail call i32 @fflush(%struct.__sFILE* %13) #8
  %15 = tail call i32 @noecho() #8
  %16 = tail call i32 @raw() #8
  %17 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %18 = tail call i32 @keypad(%struct._win_st* %17, i1 zeroext true) #8
  tail call void @playltchars() #8
  store i8 0, i8* @in_shell, align 1, !tbaa !5
  tail call void @wait_for(i32 10) #8
  %19 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %20 = tail call i32 @clearok(%struct._win_st* %19, i1 zeroext true) #8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @my_exit(i32 %st) #9 {
  tail call void @resetltchars() #8
  tail call void @exit(i32 %st) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define void @md_init() #0 {
  store i32 64, i32* @ESCDELAY, align 4, !tbaa !38
  tail call void @md_onsignal_exit()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @md_onsignal_default() #0 {
  %1 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 1, void (i32)* null) #8
  %2 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 3, void (i32)* null) #8
  %3 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 4, void (i32)* null) #8
  %4 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 5, void (i32)* null) #8
  %5 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 6, void (i32)* null) #8
  %6 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 7, void (i32)* null) #8
  %7 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 8, void (i32)* null) #8
  %8 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 10, void (i32)* null) #8
  %9 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 11, void (i32)* null) #8
  %10 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 12, void (i32)* null) #8
  %11 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 15, void (i32)* null) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @md_onsignal_exit() #0 {
  %1 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 1, void (i32)* null) #8
  %2 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 3, void (i32)* @exit) #8
  %3 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 4, void (i32)* @exit) #8
  %4 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 5, void (i32)* @exit) #8
  %5 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 6, void (i32)* @exit) #8
  %6 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 7, void (i32)* @exit) #8
  %7 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 8, void (i32)* @exit) #8
  %8 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 10, void (i32)* @exit) #8
  %9 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 11, void (i32)* @exit) #8
  %10 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 12, void (i32)* @exit) #8
  %11 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 15, void (i32)* @exit) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @md_onsignal_autosave() #0 {
  %1 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 1, void (i32)* @auto_save) #8
  %2 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 3, void (i32)* @endit) #8
  %3 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 4, void (i32)* @auto_save) #8
  %4 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 5, void (i32)* @auto_save) #8
  %5 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 6, void (i32)* @auto_save) #8
  %6 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 7, void (i32)* @auto_save) #8
  %7 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 8, void (i32)* @auto_save) #8
  %8 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 10, void (i32)* @auto_save) #8
  %9 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 11, void (i32)* @auto_save) #8
  %10 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 12, void (i32)* @auto_save) #8
  %11 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 15, void (i32)* @auto_save) #8
  %12 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @quit) #8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @md_hasclreol() #1 {
  %1 = load %struct.term** @cur_term, align 8, !tbaa !1
  %2 = icmp eq %struct.term* %1, null
  br i1 %2, label %17, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.term* %1, i64 0, i32 0, i32 4
  %5 = load i8*** %4, align 8, !tbaa !94
  %6 = icmp eq i8** %5, null
  br i1 %6, label %17, label %7

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds i8** %5, i64 6
  %9 = load i8** %8, align 8, !tbaa !1
  %10 = icmp eq i8* %9, null
  br i1 %10, label %14, label %11

; <label>:11                                      ; preds = %7
  %12 = load i8* %9, align 1, !tbaa !28
  %13 = icmp ne i8 %12, 0
  br label %14

; <label>:14                                      ; preds = %11, %7
  %15 = phi i1 [ false, %7 ], [ %13, %11 ]
  %16 = zext i1 %15 to i32
  br label %17

; <label>:17                                      ; preds = %14, %3, %0
  %.0 = phi i32 [ %16, %14 ], [ 0, %0 ], [ 0, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @md_putchar(i32 %c) #0 {
  %1 = tail call i32 @putchar(i32 %c) #8
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define void @md_raw_standout() #3 {
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define void @md_raw_standend() #3 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_unlink_open_file(i8* nocapture readonly %file, %struct.__sFILE* nocapture readnone %inf) #0 {
  %1 = tail call i32 @unlink(i8* %file) #8
  ret i32 %1
}

; Function Attrs: nounwind
declare i32 @unlink(i8* nocapture readonly) #5

; Function Attrs: nounwind ssp uwtable
define i32 @md_unlink(i8* nocapture readonly %file) #0 {
  %1 = tail call i32 @unlink(i8* %file) #8
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_chmod(i8* %filename, i32 %mode) #0 {
  %1 = trunc i32 %mode to i16
  %2 = tail call i32 @"\01_chmod"(i8* %filename, i16 zeroext %1) #8
  ret i32 %2
}

declare i32 @"\01_chmod"(i8*, i16 zeroext) #2

; Function Attrs: nounwind ssp uwtable
define void @md_normaluser() #0 {
  %1 = tail call i32 @getgid() #8
  %2 = tail call i32 @getuid() #8
  %3 = tail call i32 @"\01_setregid"(i32 %1, i32 %1) #8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %0
  tail call void @perror(i8* getelementptr inbounds ([45 x i8]* @.str553, i64 0, i64 0)) #11
  tail call void @exit(i32 1) #10
  unreachable

; <label>:6                                       ; preds = %0
  %7 = tail call i32 @"\01_setreuid"(i32 %2, i32 %2) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %6
  tail call void @perror(i8* getelementptr inbounds ([45 x i8]* @.str1554, i64 0, i64 0)) #11
  tail call void @exit(i32 1) #10
  unreachable

; <label>:10                                      ; preds = %6
  ret void
}

declare i32 @getgid() #2

declare i32 @getuid() #2

declare i32 @"\01_setregid"(i32, i32) #2

; Function Attrs: nounwind
declare void @perror(i8* nocapture readonly) #5

declare i32 @"\01_setreuid"(i32, i32) #2

; Function Attrs: nounwind ssp uwtable
define i32 @md_getuid() #0 {
  %1 = tail call i32 @getuid() #8
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_getpid() #0 {
  %1 = tail call i32 @getpid() #8
  ret i32 %1
}

declare i32 @getpid() #2

; Function Attrs: nounwind ssp uwtable
define i8* @md_getusername() #0 {
  %1 = tail call i32 @getuid() #8
  %2 = tail call %struct.passwd* @getpwuid(i32 %1) #8
  %3 = getelementptr inbounds %struct.passwd* %2, i64 0, i32 0
  %4 = load i8** %3, align 8, !tbaa !98
  %5 = icmp eq i8* %4, null
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %0
  %7 = load i8* %4, align 1, !tbaa !28
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

; <label>:9                                       ; preds = %6, %0
  %10 = tail call i8* @getenv(i8* getelementptr inbounds ([9 x i8]* @.str2555, i64 0, i64 0)) #8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %9
  %13 = tail call i8* @getenv(i8* getelementptr inbounds ([8 x i8]* @.str3556, i64 0, i64 0)) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8]* @.str4557, i64 0, i64 0)) #8
  %17 = icmp eq i8* %16, null
  %. = select i1 %17, i8* getelementptr inbounds ([7 x i8]* @.str5558, i64 0, i64 0), i8* %16
  br label %18

; <label>:18                                      ; preds = %15, %12, %9, %6
  %l.0 = phi i8* [ %., %15 ], [ %13, %12 ], [ %10, %9 ], [ %4, %6 ]
  %strncpy = tail call i8* @strncpy(i8* getelementptr inbounds ([80 x i8]* @md_getusername.login, i64 0, i64 0), i8* %l.0, i64 80)
  store i8 0, i8* getelementptr inbounds ([80 x i8]* @md_getusername.login, i64 0, i64 79), align 1, !tbaa !28
  ret i8* getelementptr inbounds ([80 x i8]* @md_getusername.login, i64 0, i64 0)
}

declare %struct.passwd* @getpwuid(i32) #2

; Function Attrs: nounwind ssp uwtable
define i8* @md_gethomedir() #0 {
  %1 = tail call i32 @getuid() #8
  %2 = tail call %struct.passwd* @getpwuid(i32 %1) #8
  %3 = getelementptr inbounds %struct.passwd* %2, i64 0, i32 7
  %4 = load i8** %3, align 8, !tbaa !100
  %5 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([2 x i8]* @.str6559, i64 0, i64 0)) #8
  %6 = icmp eq i32 %5, 0
  %.1 = select i1 %6, i8* null, i8* %4
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 0), align 16, !tbaa !28
  %7 = icmp eq i8* %.1, null
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %0
  %9 = load i8* %.1, align 1, !tbaa !28
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %20

; <label>:11                                      ; preds = %8, %0
  %12 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8]* @.str7560, i64 0, i64 0)) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %20

; <label>:14                                      ; preds = %11
  %15 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8]* @.str8561, i64 0, i64 0)) #8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

; <label>:17                                      ; preds = %14
  %strncpy = tail call i8* @strncpy(i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 0), i8* %15, i64 1023)
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 1023), align 1, !tbaa !28
  %18 = tail call i8* @getenv(i8* getelementptr inbounds ([9 x i8]* @.str10563, i64 0, i64 0)) #8
  %19 = icmp eq i8* %18, null
  %. = select i1 %19, i8* getelementptr inbounds ([1 x i8]* @.str9562, i64 0, i64 0), i8* %18
  br label %20

; <label>:20                                      ; preds = %17, %14, %11, %8
  %h.1 = phi i8* [ %., %17 ], [ %12, %11 ], [ %.1, %8 ], [ getelementptr inbounds ([1 x i8]* @.str9562, i64 0, i64 0), %14 ]
  %21 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 0)) #8
  %22 = sub i64 1023, %21
  %23 = tail call i8* @__strncat_chk(i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 0), i8* %h.1, i64 %22, i64 1024) #8
  %24 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 0)) #8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %35, label %26

; <label>:26                                      ; preds = %20
  %27 = add i64 %24, -1
  %28 = getelementptr inbounds [1024 x i8]* @md_gethomedir.homedir, i64 0, i64 %27
  %29 = load i8* %28, align 1, !tbaa !28
  %30 = icmp eq i8 %29, 47
  br i1 %30, label %35, label %31

; <label>:31                                      ; preds = %26
  %32 = getelementptr inbounds [1024 x i8]* @md_gethomedir.homedir, i64 0, i64 %24
  store i8 47, i8* %32, align 1, !tbaa !28
  %33 = add i64 %24, 1
  %34 = getelementptr inbounds [1024 x i8]* @md_gethomedir.homedir, i64 0, i64 %33
  store i8 0, i8* %34, align 1, !tbaa !28
  br label %35

; <label>:35                                      ; preds = %31, %26, %20
  ret i8* getelementptr inbounds ([1024 x i8]* @md_gethomedir.homedir, i64 0, i64 0)
}

; Function Attrs: nounwind
declare i8* @__strncat_chk(i8*, i8*, i64, i64) #5

; Function Attrs: nounwind ssp uwtable
define void @md_sleep(i32 %s) #0 {
  %1 = tail call i32 @"\01_sleep"(i32 %s) #8
  ret void
}

declare i32 @"\01_sleep"(i32) #2

; Function Attrs: nounwind ssp uwtable
define i8* @md_getshell() #0 {
  %1 = tail call i32 @getuid() #8
  %2 = tail call %struct.passwd* @getpwuid(i32 %1) #8
  %3 = getelementptr inbounds %struct.passwd* %2, i64 0, i32 8
  %4 = load i8** %3, align 8, !tbaa !101
  %5 = icmp eq i8* %4, null
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %0
  %7 = load i8* %4, align 1, !tbaa !28
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18

; <label>:9                                       ; preds = %6, %0
  %10 = tail call i8* @getenv(i8* getelementptr inbounds ([8 x i8]* @.str12565, i64 0, i64 0)) #8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %9
  %13 = tail call i8* @getenv(i8* getelementptr inbounds ([6 x i8]* @.str13566, i64 0, i64 0)) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %12
  %16 = tail call i8* @getenv(i8* getelementptr inbounds ([11 x i8]* @.str14567, i64 0, i64 0)) #8
  %17 = icmp eq i8* %16, null
  %. = select i1 %17, i8* getelementptr inbounds ([8 x i8]* @.str11564, i64 0, i64 0), i8* %16
  br label %18

; <label>:18                                      ; preds = %15, %12, %9, %6
  %s.0 = phi i8* [ %13, %12 ], [ %10, %9 ], [ %4, %6 ], [ %., %15 ]
  %strncpy = tail call i8* @strncpy(i8* getelementptr inbounds ([1024 x i8]* @md_getshell.shell, i64 0, i64 0), i8* %s.0, i64 1024)
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @md_getshell.shell, i64 0, i64 1023), align 1, !tbaa !28
  ret i8* getelementptr inbounds ([1024 x i8]* @md_getshell.shell, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_shellescape() #0 {
  %ret_status = alloca i32, align 4
  %1 = call i8* @md_getshell()
  %2 = call i32 @fork() #8
  %3 = icmp slt i32 %2, 0
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %0
  %4 = call i32 @"\01_sleep"(i32 1) #8
  %5 = call i32 @fork() #8
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %.lcssa = phi i32 [ %2, %0 ], [ %5, %.lr.ph ]
  %7 = icmp eq i32 %.lcssa, 0
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %._crit_edge
  call void @md_normaluser()
  %9 = call i32 (i8*, i8*, ...)* @execl(i8* getelementptr inbounds ([1024 x i8]* @md_getshell.shell, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str15568, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str16569, i64 0, i64 0), i8* null) #8
  call void @perror(i8* getelementptr inbounds ([10 x i8]* @.str17570, i64 0, i64 0)) #11
  call void @_exit(i32 -1) #10
  unreachable

; <label>:10                                      ; preds = %._crit_edge
  %11 = call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*)) #8
  %12 = call void (i32)* (i32, void (i32)*)* @signal(i32 3, void (i32)* inttoptr (i64 1 to void (i32)*)) #8
  br label %13

; <label>:13                                      ; preds = %13, %10
  %14 = call i32 @"\01_wait"(i32* %ret_status) #8
  %15 = icmp eq i32 %14, %.lcssa
  br i1 %15, label %16, label %13

; <label>:16                                      ; preds = %13
  %17 = call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* %12) #8
  %18 = call void (i32)* (i32, void (i32)*)* @signal(i32 3, void (i32)* %11) #8
  %19 = load i32* %ret_status, align 4, !tbaa !38
  ret i32 %19
}

declare i32 @fork() #2

declare i32 @execl(i8*, i8*, ...) #2

; Function Attrs: noreturn
declare void @_exit(i32) #4

declare i32 @"\01_wait"(i32*) #2

; Function Attrs: nounwind ssp uwtable
define i32 @directory_exists(i8* %dirname) #0 {
  %sb = alloca %struct.stat, align 8
  %1 = bitcast %struct.stat* %sb to i8*
  call void @llvm.lifetime.start(i64 144, i8* %1) #8
  %2 = call i32 @"\01_stat$INODE64"(i8* %dirname, %struct.stat* %sb) #8
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %9

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.stat* %sb, i64 0, i32 1
  %6 = load i16* %5, align 4, !tbaa !88
  %7 = zext i16 %6 to i32
  %8 = and i32 %7, 16384
  br label %9

; <label>:9                                       ; preds = %4, %0
  %.0 = phi i32 [ %8, %4 ], [ 0, %0 ]
  call void @llvm.lifetime.end(i64 144, i8* %1) #8
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @md_getrealname(i32 %uid) #0 {
  %1 = tail call %struct.passwd* @getpwuid(i32 %uid) #8
  %2 = icmp eq %struct.passwd* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([20 x i8]* @md_getrealname.uidstr, i64 0, i64 0), i32 0, i64 20, i8* getelementptr inbounds ([3 x i8]* @.str18571, i64 0, i64 0), i32 %uid) #8
  br label %8

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.passwd* %1, i64 0, i32 0
  %7 = load i8** %6, align 8, !tbaa !98
  br label %8

; <label>:8                                       ; preds = %5, %3
  %.0 = phi i8* [ getelementptr inbounds ([20 x i8]* @md_getrealname.uidstr, i64 0, i64 0), %3 ], [ %7, %5 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @md_crypt(i8* %key, i8* %salt) #0 {
  %1 = tail call i8* @xcrypt(i8* %key, i8* %salt) #8
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define i8* @md_getpass(i8* %prompt) #0 {
  %1 = tail call i8* @getpass(i8* %prompt) #8
  ret i8* %1
}

declare i8* @getpass(i8*) #2

; Function Attrs: nounwind ssp uwtable
define i32 @md_erasechar() #0 {
  %1 = tail call signext i8 @erasechar() #8
  %2 = sext i8 %1 to i32
  ret i32 %2
}

declare signext i8 @erasechar() #2

; Function Attrs: nounwind ssp uwtable
define i32 @md_killchar() #0 {
  %1 = tail call signext i8 @killchar() #8
  %2 = sext i8 %1 to i32
  ret i32 %2
}

declare signext i8 @killchar() #2

; Function Attrs: nounwind ssp uwtable
define i32 @md_dsuspchar() #0 {
  %attr = alloca %struct.termios, align 8
  %1 = bitcast %struct.termios* %attr to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #8
  %2 = call i32 @tcgetattr(i32 0, %struct.termios* %attr) #8
  %3 = getelementptr inbounds %struct.termios* %attr, i64 0, i32 4, i64 11
  %4 = load i8* %3, align 1, !tbaa !28
  %5 = zext i8 %4 to i32
  call void @llvm.lifetime.end(i64 72, i8* %1) #8
  ret i32 %5
}

declare i32 @tcgetattr(i32, %struct.termios*) #2

; Function Attrs: nounwind ssp uwtable
define i32 @md_setdsuspchar(i32 %c) #0 {
  %attr = alloca %struct.termios, align 8
  %1 = bitcast %struct.termios* %attr to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #8
  %2 = call i32 @tcgetattr(i32 0, %struct.termios* %attr) #8
  %3 = trunc i32 %c to i8
  %4 = getelementptr inbounds %struct.termios* %attr, i64 0, i32 4, i64 11
  store i8 %3, i8* %4, align 1, !tbaa !28
  %5 = call i32 @tcgetattr(i32 0, %struct.termios* %attr) #8
  call void @llvm.lifetime.end(i64 72, i8* %1) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_suspchar() #0 {
  %attr = alloca %struct.termios, align 8
  %1 = bitcast %struct.termios* %attr to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #8
  %2 = call i32 @tcgetattr(i32 0, %struct.termios* %attr) #8
  %3 = getelementptr inbounds %struct.termios* %attr, i64 0, i32 4, i64 10
  %4 = load i8* %3, align 2, !tbaa !28
  %5 = zext i8 %4 to i32
  call void @llvm.lifetime.end(i64 72, i8* %1) #8
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_setsuspchar(i32 %c) #0 {
  %attr = alloca %struct.termios, align 8
  %1 = bitcast %struct.termios* %attr to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #8
  %2 = call i32 @tcgetattr(i32 0, %struct.termios* %attr) #8
  %3 = trunc i32 %c to i8
  %4 = getelementptr inbounds %struct.termios* %attr, i64 0, i32 4, i64 10
  store i8 %3, i8* %4, align 2, !tbaa !28
  %5 = call i32 @tcgetattr(i32 0, %struct.termios* %attr) #8
  call void @llvm.lifetime.end(i64 72, i8* %1) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @md_readchar() #0 {
  %1 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %2 = tail call i32 @wgetch(%struct._win_st* %1) #8
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %.thread6._crit_edge, label %.lr.ph

.thread6._crit_edge:                              ; preds = %.thread6.backedge, %0
  %4 = tail call i32 @nocbreak() #8
  %5 = tail call i32 @raw() #8
  br label %.thread4.thread

.lr.ph:                                           ; preds = %.thread6.backedge, %0
  %6 = phi i32 [ %51, %.thread6.backedge ], [ %2, %0 ]
  %mode2.0195 = phi i32 [ %mode2.0.be, %.thread6.backedge ], [ 0, %0 ]
  %mode.0194 = phi i32 [ %mode.0.be, %.thread6.backedge ], [ 0, %0 ]
  %lastch.0193 = phi i32 [ %lastch.0.be, %.thread6.backedge ], [ 0, %0 ]
  switch i32 %mode.0194, label %.thread4 [
    i32 3, label %7
    i32 1, label %17
    i32 2, label %26
  ]

; <label>:7                                       ; preds = %.lr.ph
  switch i32 %6, label %12 [
    i32 94, label %.thread
    i32 126, label %10
  ]

.thread:                                          ; preds = %7
  %8 = tail call i32 @__toupper(i32 %lastch.0193) #8
  %9 = and i32 %8, 31
  br label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i32 @__tolower(i32 %lastch.0193) #8
  br label %12

; <label>:12                                      ; preds = %10, %.thread, %7
  %ch.1 = phi i32 [ %11, %10 ], [ %9, %.thread ], [ %6, %7 ]
  %13 = icmp eq i32 %mode2.0195, 1
  br i1 %13, label %14, label %.thread4.thread

; <label>:14                                      ; preds = %12
  %15 = tail call i32 @__toupper(i32 %ch.1) #8
  %16 = and i32 %15, 31
  br label %.thread4.thread

; <label>:17                                      ; preds = %.lr.ph
  %18 = icmp eq i32 %6, 27
  br i1 %18, label %.thread6.backedge, label %19

; <label>:19                                      ; preds = %17
  switch i32 %6, label %.thread4.thread.loopexit [
    i32 91, label %.thread6.backedge
    i32 79, label %.thread6.backedge
    i32 70, label %.thread6.backedge
    i32 260, label %.thread4.thread.loopexit382
    i32 261, label %.thread4.thread
    i32 259, label %20
    i32 258, label %21
    i32 262, label %22
    i32 339, label %23
    i32 338, label %24
    i32 360, label %25
  ]

; <label>:20                                      ; preds = %19
  br label %.thread4.thread

; <label>:21                                      ; preds = %19
  br label %.thread4.thread

; <label>:22                                      ; preds = %19
  br label %.thread4.thread

; <label>:23                                      ; preds = %19
  br label %.thread4.thread

; <label>:24                                      ; preds = %19
  br label %.thread4.thread

; <label>:25                                      ; preds = %19
  br label %.thread4.thread

; <label>:26                                      ; preds = %.lr.ph
  switch i32 %6, label %.thread4 [
    i32 94, label %.thread4.thread.loopexit
    i32 36, label %.thread4.thread.loopexit382
    i32 72, label %.thread4.thread
    i32 1, label %27
    i32 2, label %28
    i32 3, label %.thread4.thread.loopexit382
    i32 4, label %.thread4.thread.loopexit
    i32 263, label %29
    i32 19, label %30
    i32 20, label %31
    i32 21, label %32
    i32 71, label %33
    i32 55, label %.thread6.backedge
    i32 53, label %34
    i32 54, label %35
    i32 49, label %36
    i32 52, label %37
    i32 68, label %.thread4.thread.loopexit
    i32 67, label %.thread4.thread.loopexit382
    i32 65, label %38
    i32 66, label %39
    i32 116, label %40
    i32 118, label %41
    i32 120, label %42
    i32 114, label %43
    i32 119, label %.thread4.thread
    i32 121, label %44
    i32 115, label %45
    i32 113, label %46
    i32 117, label %47
  ]

; <label>:27                                      ; preds = %26
  br label %.thread4.thread

; <label>:28                                      ; preds = %26
  br label %.thread4.thread

; <label>:29                                      ; preds = %26
  br label %.thread4.thread

; <label>:30                                      ; preds = %26
  br label %.thread4.thread

; <label>:31                                      ; preds = %26
  br label %.thread4.thread

; <label>:32                                      ; preds = %26
  br label %.thread4.thread

; <label>:33                                      ; preds = %26
  br label %.thread4.thread

; <label>:34                                      ; preds = %26
  br label %.thread6.backedge

; <label>:35                                      ; preds = %26
  br label %.thread6.backedge

; <label>:36                                      ; preds = %26
  br label %.thread6.backedge

; <label>:37                                      ; preds = %26
  br label %.thread6.backedge

; <label>:38                                      ; preds = %26
  br label %.thread4.thread

; <label>:39                                      ; preds = %26
  br label %.thread4.thread

; <label>:40                                      ; preds = %26
  br label %.thread4.thread

; <label>:41                                      ; preds = %26
  br label %.thread4.thread

; <label>:42                                      ; preds = %26
  br label %.thread4.thread

; <label>:43                                      ; preds = %26
  br label %.thread4.thread

; <label>:44                                      ; preds = %26
  br label %.thread4.thread

; <label>:45                                      ; preds = %26
  br label %.thread4.thread

; <label>:46                                      ; preds = %26
  br label %.thread4.thread

; <label>:47                                      ; preds = %26
  br label %.thread4.thread

.thread4:                                         ; preds = %26, %.lr.ph
  switch i32 %6, label %.thread4.thread.loopexit [
    i32 27, label %48
    i32 260, label %.thread4.thread.loopexit382
    i32 258, label %.thread4.thread
    i32 259, label %53
    i32 261, label %54
    i32 262, label %55
    i32 339, label %56
    i32 360, label %57
    i32 347, label %58
    i32 338, label %59
    i32 348, label %60
    i32 349, label %61
    i32 351, label %62
    i32 352, label %63
    i32 350, label %64
    i32 402, label %65
    i32 393, label %66
    i32 391, label %67
    i32 398, label %68
    i32 386, label %69
    i32 396, label %70
    i32 326, label %71
    i32 325, label %72
    i32 335, label %73
    i32 511, label %74
    i32 512, label %75
    i32 514, label %76
    i32 516, label %77
    i32 518, label %78
    i32 519, label %79
    i32 263, label %80
  ]

; <label>:48                                      ; preds = %.thread4
  %49 = tail call i32 @halfdelay(i32 1) #8
  br label %.thread6.backedge

.thread6.backedge:                                ; preds = %48, %37, %36, %35, %34, %26, %19, %19, %19, %17
  %lastch.0.be = phi i32 [ %lastch.0193, %48 ], [ %lastch.0193, %17 ], [ %lastch.0193, %19 ], [ %lastch.0193, %19 ], [ %lastch.0193, %19 ], [ 98, %37 ], [ 121, %36 ], [ 78, %35 ], [ 85, %34 ], [ 89, %26 ]
  %mode.0.be = phi i32 [ 1, %48 ], [ 1, %17 ], [ 2, %19 ], [ 2, %19 ], [ 2, %19 ], [ 3, %37 ], [ 3, %36 ], [ 3, %35 ], [ 3, %34 ], [ 3, %26 ]
  %mode2.0.be = phi i32 [ %mode2.0195, %48 ], [ 1, %17 ], [ %mode2.0195, %19 ], [ %mode2.0195, %19 ], [ %mode2.0195, %19 ], [ %mode2.0195, %37 ], [ %mode2.0195, %36 ], [ %mode2.0195, %35 ], [ %mode2.0195, %34 ], [ %mode2.0195, %26 ]
  %50 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %51 = tail call i32 @wgetch(%struct._win_st* %50) #8
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %.thread6._crit_edge, label %.lr.ph

; <label>:53                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:54                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:55                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:56                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:57                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:58                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:59                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:60                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:61                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:62                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:63                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:64                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:65                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:66                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:67                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:68                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:69                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:70                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:71                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:72                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:73                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:74                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:75                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:76                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:77                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:78                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:79                                      ; preds = %.thread4
  br label %.thread4.thread

; <label>:80                                      ; preds = %.thread4
  br label %.thread4.thread

.thread4.thread.loopexit:                         ; preds = %.thread4, %26, %26, %26, %19
  %ch.4.ph = phi i32 [ 8, %26 ], [ 8, %26 ], [ 8, %26 ], [ %6, %.thread4 ], [ %6, %19 ]
  br label %.thread4.thread

.thread4.thread.loopexit382:                      ; preds = %.thread4, %26, %26, %26, %19
  %ch.4.ph383 = phi i32 [ 104, %.thread4 ], [ 12, %26 ], [ 12, %26 ], [ 12, %26 ], [ 8, %19 ]
  br label %.thread4.thread

.thread4.thread:                                  ; preds = %.thread4.thread.loopexit382, %.thread4.thread.loopexit, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %.thread4, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %33, %32, %31, %30, %29, %28, %27, %26, %26, %25, %24, %23, %22, %21, %20, %19, %14, %12, %.thread6._crit_edge
  %ch.4 = phi i32 [ 27, %.thread6._crit_edge ], [ %16, %14 ], [ %ch.1, %12 ], [ 2, %25 ], [ 14, %24 ], [ 21, %23 ], [ 25, %22 ], [ 10, %21 ], [ 11, %20 ], [ 8, %80 ], [ 11, %79 ], [ 11, %78 ], [ 12, %77 ], [ 8, %76 ], [ 10, %75 ], [ 10, %74 ], [ 2, %73 ], [ 10, %72 ], [ 11, %71 ], [ 14, %70 ], [ 2, %69 ], [ 21, %68 ], [ 25, %67 ], [ 8, %66 ], [ 12, %65 ], [ 117, %64 ], [ 110, %63 ], [ 98, %62 ], [ 117, %61 ], [ 121, %60 ], [ 110, %59 ], [ 98, %58 ], [ 98, %57 ], [ 117, %56 ], [ 121, %55 ], [ 108, %54 ], [ 107, %53 ], [ 46, %47 ], [ 98, %46 ], [ 110, %45 ], [ 117, %44 ], [ 106, %43 ], [ 107, %42 ], [ 108, %41 ], [ 104, %40 ], [ 10, %39 ], [ 11, %38 ], [ 46, %33 ], [ 2, %32 ], [ 14, %31 ], [ 21, %30 ], [ 25, %29 ], [ 10, %28 ], [ 11, %27 ], [ %ch.4.ph, %.thread4.thread.loopexit ], [ %ch.4.ph383, %.thread4.thread.loopexit382 ], [ 12, %19 ], [ 121, %26 ], [ 121, %26 ], [ 106, %.thread4 ]
  %81 = tail call i32 @nocbreak() #8
  %82 = tail call i32 @raw() #8
  %83 = and i32 %ch.4, 127
  ret i32 %83
}

declare i32 @wgetch(%struct._win_st*) #2

declare i32 @nocbreak() #2

declare i32 @halfdelay(i32) #2

; Function Attrs: nounwind ssp uwtable
define void @md_loadav(double* %avg) #0 {
  %1 = tail call i32 @getloadavg(double* %avg, i32 3) #8
  ret void
}

declare i32 @getloadavg(double*, i32) #2

; Function Attrs: nounwind ssp uwtable
define void @md_ignoreallsignals() #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %i.01 = phi i32 [ 0, %0 ], [ %3, %1 ]
  %2 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 %i.01, void (i32)* inttoptr (i64 1 to void (i32)*)) #8
  %3 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %3, 32
  br i1 %exitcond, label %4, label %1

; <label>:4                                       ; preds = %1
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define void @md_tstphold() #3 {
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define void @md_tstpresume() #3 {
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define void @md_tstpsignal() #3 {
  ret void
}

declare i32 @__tolower(i32) #2

; Function Attrs: nounwind
declare i8* @strncpy(i8*, i8* nocapture readonly, i64) #8

; Function Attrs: nounwind ssp uwtable
define void @look(i1 zeroext %wakeup) #0 {
  %1 = load i32* getelementptr inbounds (%struct.coord* @oldpos, i64 0, i32 0), align 4, !tbaa !21
  %2 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %3 = trunc i64 %2 to i32
  %4 = icmp eq i32 %1, %3
  %5 = lshr i64 %2, 32
  %6 = trunc i64 %5 to i32
  %7 = load i32* getelementptr inbounds (%struct.coord* @oldpos, i64 0, i32 1), align 4
  %8 = icmp eq i32 %7, %6
  %or.cond = and i1 %4, %8
  br i1 %or.cond, label %14, label %9

; <label>:9                                       ; preds = %0
  %10 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %11 = load %struct.room** @oldrp, align 8, !tbaa !1
  tail call void @erase_lamp(%struct.coord* @oldpos, %struct.room* %11)
  %12 = load i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  store i64 %12, i64* bitcast (%struct.coord* @oldpos to i64*), align 4
  store %struct.room* %10, %struct.room** @oldrp, align 8, !tbaa !1
  %.pre = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %13 = trunc i64 %12 to i32
  br label %14

; <label>:14                                      ; preds = %9, %0
  %15 = phi i32 [ %.pre, %9 ], [ %6, %0 ]
  %16 = phi i32 [ %13, %9 ], [ %1, %0 ]
  %17 = add nsw i32 %15, 1
  %18 = add nsw i32 %16, 1
  %19 = add i32 %16, -1
  %20 = add nsw i32 %15, -1
  %21 = load i8* @door_stop, align 1, !tbaa !5, !range !7
  %22 = load i8* @firstmove, align 1
  %notlhs = icmp eq i8 %21, 0
  %notrhs = icmp ne i8 %22, 0
  %or.cond.not = or i1 %notrhs, %notlhs
  %23 = load i8* @running, align 1
  %24 = icmp eq i8 %23, 0
  %or.cond15 = or i1 %or.cond.not, %24
  br i1 %or.cond15, label %28, label %25

; <label>:25                                      ; preds = %14
  %26 = add nsw i32 %16, %15
  %27 = sub nsw i32 %15, %16
  br label %28

; <label>:28                                      ; preds = %25, %14
  %sumhero.0 = phi i32 [ %26, %25 ], [ 0, %14 ]
  %diffhero.0 = phi i32 [ %27, %25 ], [ 0, %14 ]
  %29 = shl i32 %16, 5
  %30 = add nsw i32 %29, %15
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %31, i32 0
  %33 = load i8* %32, align 8, !tbaa !33
  %34 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %31, i32 1
  %35 = load i8* %34, align 1, !tbaa !36
  %x.0.neg39 = sub i32 1, %16
  %36 = icmp ne i8 %33, 43
  %37 = sext i32 %19 to i64
  br label %38

; <label>:38                                      ; preds = %.loopexit, %28
  %y.045 = phi i32 [ %20, %28 ], [ %222, %.loopexit ]
  %passcount.044 = phi i32 [ 0, %28 ], [ %passcount.3, %.loopexit ]
  %y.0.off = add i32 %y.045, -1
  %39 = icmp ult i32 %y.0.off, 22
  br i1 %39, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %38
  %40 = icmp eq i32 %y.045, %20
  %41 = icmp eq i32 %y.045, %17
  %42 = sub i32 %y.045, %sumhero.0
  %43 = sub i32 %y.045, %diffhero.0
  br label %44

; <label>:44                                      ; preds = %220, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %220 ], [ %37, %.preheader ]
  %x.0.neg43 = phi i32 [ %x.0.neg, %220 ], [ %x.0.neg39, %.preheader ]
  %passcount.140 = phi i32 [ %passcount.2, %220 ], [ %passcount.044, %.preheader ]
  %45 = trunc i64 %indvars.iv to i32
  %46 = icmp ugt i32 %45, 79
  br i1 %46, label %220, label %47

; <label>:47                                      ; preds = %44
  %48 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %49 = and i16 %48, 4
  %50 = icmp eq i16 %49, 0
  %51 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4
  %52 = icmp eq i32 %y.045, %51
  %or.cond17 = and i1 %50, %52
  %53 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %54 = trunc i64 %53 to i32
  %55 = icmp eq i32 %45, %54
  %or.cond19 = and i1 %or.cond17, %55
  %56 = lshr i64 %53, 32
  %57 = trunc i64 %56 to i32
  br i1 %or.cond19, label %220, label %58

; <label>:58                                      ; preds = %47
  %59 = shl i32 %45, 5
  %60 = add nsw i32 %59, %y.045
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %61, i32 0
  %63 = load i8* %62, align 8, !tbaa !33
  %64 = sext i8 %63 to i32
  %65 = icmp eq i8 %63, 32
  br i1 %65, label %220, label %66

; <label>:66                                      ; preds = %58
  %67 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %61, i32 1
  %68 = icmp ne i8 %63, 43
  %or.cond5 = and i1 %36, %68
  %69 = load i8* %67, align 1, !tbaa !28
  %70 = xor i8 %69, %35
  %71 = icmp slt i8 %70, 0
  %or.cond50 = and i1 %or.cond5, %71
  br i1 %or.cond50, label %220, label %._crit_edge

._crit_edge:                                      ; preds = %66
  %notlhs52 = icmp sgt i8 %69, -1
  %notrhs53 = icmp ne i8 %63, 43
  %or.cond7.not = and i1 %notrhs53, %notlhs52
  %notlhs54 = icmp sgt i8 %35, -1
  %notrhs55 = icmp ne i8 %33, 43
  %or.cond20.not = and i1 %notrhs55, %notlhs54
  %brmerge = or i1 %or.cond7.not, %or.cond20.not
  %72 = icmp eq i32 %57, %y.045
  %or.cond22 = or i1 %55, %72
  %or.cond51 = or i1 %brmerge, %or.cond22
  br i1 %or.cond51, label %91, label %73

; <label>:73                                      ; preds = %._crit_edge
  %74 = shl i32 %54, 5
  %75 = add nsw i32 %74, %y.045
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %76, i32 0
  %78 = load i8* %77, align 8, !tbaa !33
  %79 = sext i8 %78 to i32
  %80 = tail call i32 @step_ok(i32 %79) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %91

; <label>:82                                      ; preds = %73
  %83 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %84 = add nsw i32 %83, %59
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %85, i32 0
  %87 = load i8* %86, align 8, !tbaa !33
  %88 = sext i8 %87 to i32
  %89 = tail call i32 @step_ok(i32 %88) #8
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %220, label %91

; <label>:91                                      ; preds = %82, %73, %._crit_edge
  %92 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %61, i32 2
  %93 = load %union.thing** %92, align 8, !tbaa !43
  %94 = icmp eq %union.thing* %93, null
  %95 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  br i1 %94, label %96, label %118

; <label>:96                                      ; preds = %91
  %97 = and i16 %95, 2048
  %98 = icmp eq i16 %97, 0
  %99 = load i8* @after, align 1
  %100 = icmp eq i8 %99, 0
  %or.cond.i = or i1 %98, %100
  br i1 %or.cond.i, label %trip_ch.exit, label %101

; <label>:101                                     ; preds = %96
  switch i32 %64, label %102 [
    i32 46, label %trip_ch.exit
    i32 32, label %trip_ch.exit
    i32 35, label %trip_ch.exit
    i32 45, label %trip_ch.exit
    i32 124, label %trip_ch.exit
    i32 43, label %trip_ch.exit
    i32 94, label %trip_ch.exit
  ]

; <label>:102                                     ; preds = %101
  %103 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %104 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4
  %notlhs.i = icmp ne i32 %103, %y.045
  %notrhs.i = icmp ne i32 %104, %45
  %or.cond3.not.i = or i1 %notrhs.i, %notlhs.i
  %105 = load i8* @seenstairs, align 1
  %106 = icmp eq i8 %105, 0
  %or.cond5.i = or i1 %or.cond3.not.i, %106
  br i1 %or.cond5.i, label %107, label %trip_ch.exit

; <label>:107                                     ; preds = %102
  %108 = load i32* @level, align 4, !tbaa !38
  %109 = icmp sgt i32 %108, 25
  br i1 %109, label %110, label %112

; <label>:110                                     ; preds = %107
  %111 = tail call i32 @rnd(i32 10) #8
  br label %rnd_thing.exit.i

; <label>:112                                     ; preds = %107
  %113 = tail call i32 @rnd(i32 9) #8
  br label %rnd_thing.exit.i

rnd_thing.exit.i:                                 ; preds = %112, %110
  %i.0.i.i = phi i32 [ %111, %110 ], [ %113, %112 ]
  %114 = sext i32 %i.0.i.i to i64
  %115 = getelementptr inbounds [10 x i8]* @rnd_thing.thing_list, i64 0, i64 %114
  %116 = load i8* %115, align 1, !tbaa !28
  %117 = sext i8 %116 to i32
  br label %trip_ch.exit

; <label>:118                                     ; preds = %91
  %119 = and i16 %95, 16384
  %120 = icmp eq i16 %119, 0
  br i1 %120, label %132, label %121

; <label>:121                                     ; preds = %118
  %122 = getelementptr inbounds %union.thing* %93, i64 0, i32 0, i32 8
  %123 = load i16* %122, align 2, !tbaa !18
  %124 = and i16 %123, 1024
  %125 = icmp eq i16 %124, 0
  br i1 %125, label %132, label %126

; <label>:126                                     ; preds = %121
  %127 = load i8* @door_stop, align 1, !tbaa !5, !range !7
  %128 = icmp ne i8 %127, 0
  %129 = load i8* @firstmove, align 1
  %130 = icmp eq i8 %129, 0
  %or.cond24 = and i1 %128, %130
  br i1 %or.cond24, label %131, label %220

; <label>:131                                     ; preds = %126
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %220

; <label>:132                                     ; preds = %121, %118
  br i1 %wakeup, label %133, label %135

; <label>:133                                     ; preds = %132
  %134 = tail call %union.thing* @wake_monster(i32 %y.045, i32 %45) #8
  br label %135

; <label>:135                                     ; preds = %133, %132
  %136 = tail call zeroext i1 @see_monst(%union.thing* %93) #8
  br i1 %136, label %137, label %trip_ch.exit

; <label>:137                                     ; preds = %135
  %138 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %139 = and i16 %138, 2048
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %144, label %141

; <label>:141                                     ; preds = %137
  %142 = tail call i32 @rnd(i32 26) #8
  %143 = add nsw i32 %142, 65
  br label %trip_ch.exit

; <label>:144                                     ; preds = %137
  %145 = getelementptr inbounds %union.thing* %93, i64 0, i32 0, i32 5
  %146 = load i8* %145, align 1, !tbaa !44
  %147 = sext i8 %146 to i32
  br label %trip_ch.exit

trip_ch.exit:                                     ; preds = %144, %141, %135, %rnd_thing.exit.i, %102, %101, %101, %101, %101, %101, %101, %101, %96
  %ch.0 = phi i32 [ %143, %141 ], [ %147, %144 ], [ %64, %135 ], [ %117, %rnd_thing.exit.i ], [ %64, %101 ], [ %64, %101 ], [ %64, %101 ], [ %64, %101 ], [ %64, %101 ], [ %64, %101 ], [ %64, %101 ], [ %64, %96 ], [ %64, %102 ]
  %148 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %149 = and i16 %148, 4
  %150 = icmp eq i16 %149, 0
  br i1 %150, label %156, label %151

; <label>:151                                     ; preds = %trip_ch.exit
  %152 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %153 = icmp eq i32 %y.045, %152
  %154 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8
  %155 = icmp eq i32 %45, %154
  %or.cond26 = and i1 %153, %155
  br i1 %or.cond26, label %156, label %220

; <label>:156                                     ; preds = %151, %trip_ch.exit
  %157 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %158 = tail call i32 @wmove(%struct._win_st* %157, i32 %y.045, i32 %45) #8
  %159 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %160 = getelementptr inbounds %struct.room* %159, i64 0, i32 4
  %161 = load i16* %160, align 2, !tbaa !39
  %162 = and i16 %161, 1
  %163 = icmp eq i16 %162, 0
  br i1 %163, label %167, label %164

; <label>:164                                     ; preds = %156
  %165 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  %.not = icmp eq i8 %165, 0
  %166 = icmp eq i32 %ch.0, 46
  %or.cond9 = and i1 %.not, %166
  %.ch.0 = select i1 %or.cond9, i32 32, i32 %ch.0
  br label %167

; <label>:167                                     ; preds = %164, %156
  %ch.1 = phi i32 [ %ch.0, %156 ], [ %.ch.0, %164 ]
  br i1 %94, label %168, label %173

; <label>:168                                     ; preds = %167
  %169 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %170 = tail call i32 @winch(%struct._win_st* %169) #8
  %sext = shl i32 %170, 24
  %171 = ashr exact i32 %sext, 24
  %172 = icmp eq i32 %ch.1, %171
  br i1 %172, label %176, label %173

; <label>:173                                     ; preds = %168, %167
  %174 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %175 = tail call i32 @waddch(%struct._win_st* %174, i32 %ch.1) #8
  br label %176

; <label>:176                                     ; preds = %173, %168
  %177 = load i8* @door_stop, align 1, !tbaa !5, !range !7
  %178 = load i8* @firstmove, align 1
  %notlhs37 = icmp eq i8 %177, 0
  %notrhs38 = icmp ne i8 %178, 0
  %or.cond28.not = or i1 %notrhs38, %notlhs37
  %179 = load i8* @running, align 1
  %180 = icmp eq i8 %179, 0
  %or.cond30 = or i1 %or.cond28.not, %180
  br i1 %or.cond30, label %220, label %181

; <label>:181                                     ; preds = %176
  %182 = load i8* @runch, align 1, !tbaa !28
  %183 = sext i8 %182 to i32
  switch i32 %183, label %202 [
    i32 104, label %184
    i32 106, label %186
    i32 107, label %187
    i32 108, label %188
    i32 121, label %190
    i32 117, label %193
    i32 110, label %196
    i32 98, label %199
  ]

; <label>:184                                     ; preds = %181
  %185 = icmp eq i32 %45, %18
  br i1 %185, label %220, label %202

; <label>:186                                     ; preds = %181
  br i1 %40, label %220, label %202

; <label>:187                                     ; preds = %181
  br i1 %41, label %220, label %202

; <label>:188                                     ; preds = %181
  %189 = icmp eq i32 %45, %19
  br i1 %189, label %220, label %202

; <label>:190                                     ; preds = %181
  %191 = add i32 %42, %45
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %220, label %202

; <label>:193                                     ; preds = %181
  %194 = add i32 %43, %x.0.neg43
  %195 = icmp sgt i32 %194, 0
  br i1 %195, label %220, label %202

; <label>:196                                     ; preds = %181
  %197 = add i32 %42, %45
  %198 = icmp slt i32 %197, 0
  br i1 %198, label %220, label %202

; <label>:199                                     ; preds = %181
  %200 = add i32 %43, %x.0.neg43
  %201 = icmp slt i32 %200, 0
  br i1 %201, label %220, label %202

; <label>:202                                     ; preds = %199, %196, %193, %190, %188, %187, %186, %184, %181
  switch i32 %ch.1, label %219 [
    i32 43, label %203
    i32 35, label %211
    i32 46, label %220
    i32 124, label %220
    i32 45, label %220
    i32 32, label %220
  ]

; <label>:203                                     ; preds = %202
  %204 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %205 = trunc i64 %204 to i32
  %206 = icmp eq i32 %45, %205
  %207 = lshr i64 %204, 32
  %208 = trunc i64 %207 to i32
  %209 = icmp eq i32 %y.045, %208
  %or.cond32 = or i1 %206, %209
  br i1 %or.cond32, label %210, label %220

; <label>:210                                     ; preds = %203
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %220

; <label>:211                                     ; preds = %202
  %212 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %213 = trunc i64 %212 to i32
  %214 = icmp eq i32 %45, %213
  %215 = lshr i64 %212, 32
  %216 = trunc i64 %215 to i32
  %217 = icmp eq i32 %y.045, %216
  %or.cond34 = or i1 %214, %217
  %218 = zext i1 %or.cond34 to i32
  %.passcount.1 = add nsw i32 %218, %passcount.140
  br label %220

; <label>:219                                     ; preds = %202
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %220

; <label>:220                                     ; preds = %219, %211, %210, %203, %202, %202, %202, %202, %199, %196, %193, %190, %188, %187, %186, %184, %176, %151, %131, %126, %82, %66, %58, %47, %44
  %passcount.2 = phi i32 [ %passcount.140, %44 ], [ %passcount.140, %58 ], [ %passcount.140, %151 ], [ %passcount.140, %219 ], [ %passcount.140, %202 ], [ %passcount.140, %202 ], [ %passcount.140, %202 ], [ %passcount.140, %202 ], [ %passcount.140, %210 ], [ %passcount.140, %199 ], [ %passcount.140, %196 ], [ %passcount.140, %193 ], [ %passcount.140, %190 ], [ %passcount.140, %188 ], [ %passcount.140, %187 ], [ %passcount.140, %186 ], [ %passcount.140, %184 ], [ %passcount.140, %176 ], [ %passcount.140, %131 ], [ %passcount.140, %126 ], [ %passcount.140, %82 ], [ %passcount.140, %47 ], [ %passcount.140, %203 ], [ %.passcount.1, %211 ], [ %passcount.140, %66 ]
  %x.0.neg = xor i32 %45, -1
  %221 = icmp slt i32 %45, %18
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %221, label %44, label %.loopexit

.loopexit:                                        ; preds = %220, %38
  %passcount.3 = phi i32 [ %passcount.044, %38 ], [ %passcount.2, %220 ]
  %222 = add nsw i32 %y.045, 1
  %223 = icmp slt i32 %y.045, %17
  br i1 %223, label %38, label %224

; <label>:224                                     ; preds = %.loopexit
  %225 = load i8* @door_stop, align 1, !tbaa !5, !range !7
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %231, label %227

; <label>:227                                     ; preds = %224
  %228 = load i8* @firstmove, align 1, !tbaa !5, !range !7
  %.not10 = icmp eq i8 %228, 0
  %229 = icmp sgt i32 %passcount.3, 1
  %or.cond12 = and i1 %.not10, %229
  br i1 %or.cond12, label %230, label %231

; <label>:230                                     ; preds = %227
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %231

; <label>:231                                     ; preds = %230, %227, %224
  %232 = load i8* @running, align 1, !tbaa !5, !range !7
  %233 = icmp eq i8 %232, 0
  %234 = load i8* @jump, align 1
  %235 = icmp eq i8 %234, 0
  %or.cond36 = or i1 %233, %235
  br i1 %or.cond36, label %236, label %245

; <label>:236                                     ; preds = %231
  %237 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %238 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %239 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %240 = tail call i32 @wmove(%struct._win_st* %237, i32 %238, i32 %239) #8
  %241 = icmp eq i32 %240, -1
  br i1 %241, label %245, label %242

; <label>:242                                     ; preds = %236
  %243 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %244 = tail call i32 @waddch(%struct._win_st* %243, i32 64) #8
  br label %245

; <label>:245                                     ; preds = %242, %236, %231
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @erase_lamp(%struct.coord* nocapture readonly %pos, %struct.room* nocapture readonly %rp) #0 {
  %1 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %.loopexit, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.room* %rp, i64 0, i32 4
  %5 = load i16* %4, align 2, !tbaa !39
  %6 = and i16 %5, 3
  %7 = icmp eq i16 %6, 1
  br i1 %7, label %8, label %.loopexit

; <label>:8                                       ; preds = %3
  %9 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %10 = and i16 %9, 4
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %.loopexit

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %struct.coord* %pos, i64 0, i32 1
  %14 = load i32* %13, align 4, !tbaa !20
  %15 = add nsw i32 %14, 1
  %16 = getelementptr inbounds %struct.coord* %pos, i64 0, i32 0
  %17 = load i32* %16, align 4, !tbaa !21
  %18 = add nsw i32 %17, 1
  %19 = add nsw i32 %14, -1
  %20 = add nsw i32 %17, -1
  br label %.preheader

.preheader:                                       ; preds = %38, %12
  %x.03 = phi i32 [ %20, %12 ], [ %39, %38 ]
  br label %21

; <label>:21                                      ; preds = %35, %.preheader
  %y.02 = phi i32 [ %19, %.preheader ], [ %36, %35 ]
  %22 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %23 = icmp eq i32 %y.02, %22
  %24 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8
  %25 = icmp eq i32 %x.03, %24
  %or.cond = and i1 %23, %25
  br i1 %or.cond, label %35, label %26

; <label>:26                                      ; preds = %21
  %27 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %28 = tail call i32 @wmove(%struct._win_st* %27, i32 %y.02, i32 %x.03) #8
  %29 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %30 = tail call i32 @winch(%struct._win_st* %29) #8
  %31 = icmp eq i32 %30, 46
  br i1 %31, label %32, label %35

; <label>:32                                      ; preds = %26
  %33 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %34 = tail call i32 @waddch(%struct._win_st* %33, i32 32) #8
  br label %35

; <label>:35                                      ; preds = %32, %26, %21
  %36 = add nsw i32 %y.02, 1
  %37 = icmp slt i32 %y.02, %15
  br i1 %37, label %21, label %38

; <label>:38                                      ; preds = %35
  %39 = add nsw i32 %x.03, 1
  %40 = icmp slt i32 %x.03, %18
  br i1 %40, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %38, %8, %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @trip_ch(i32 %y, i32 %x, i32 %ch) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 2048
  %3 = icmp eq i16 %2, 0
  %4 = load i8* @after, align 1
  %5 = icmp eq i8 %4, 0
  %or.cond = or i1 %3, %5
  br i1 %or.cond, label %23, label %6

; <label>:6                                       ; preds = %0
  switch i32 %ch, label %7 [
    i32 46, label %23
    i32 32, label %23
    i32 35, label %23
    i32 45, label %23
    i32 124, label %23
    i32 43, label %23
    i32 94, label %23
  ]

; <label>:7                                       ; preds = %6
  %8 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %9 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4
  %notlhs = icmp ne i32 %8, %y
  %notrhs = icmp ne i32 %9, %x
  %or.cond3.not = or i1 %notrhs, %notlhs
  %10 = load i8* @seenstairs, align 1
  %11 = icmp eq i8 %10, 0
  %or.cond5 = or i1 %or.cond3.not, %11
  br i1 %or.cond5, label %12, label %23

; <label>:12                                      ; preds = %7
  %13 = load i32* @level, align 4, !tbaa !38
  %14 = icmp sgt i32 %13, 25
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %12
  %16 = tail call i32 @rnd(i32 10) #8
  br label %rnd_thing.exit

; <label>:17                                      ; preds = %12
  %18 = tail call i32 @rnd(i32 9) #8
  br label %rnd_thing.exit

rnd_thing.exit:                                   ; preds = %17, %15
  %i.0.i = phi i32 [ %16, %15 ], [ %18, %17 ]
  %19 = sext i32 %i.0.i to i64
  %20 = getelementptr inbounds [10 x i8]* @rnd_thing.thing_list, i64 0, i64 %19
  %21 = load i8* %20, align 1, !tbaa !28
  %22 = sext i8 %21 to i32
  br label %23

; <label>:23                                      ; preds = %rnd_thing.exit, %7, %6, %6, %6, %6, %6, %6, %6, %0
  %.0 = phi i32 [ %22, %rnd_thing.exit ], [ %ch, %6 ], [ %ch, %6 ], [ %ch, %6 ], [ %ch, %6 ], [ %ch, %6 ], [ %ch, %6 ], [ %ch, %6 ], [ %ch, %0 ], [ %ch, %7 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define zeroext i1 @show_floor() #1 {
  %1 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %2 = getelementptr inbounds %struct.room* %1, i64 0, i32 4
  %3 = load i16* %2, align 2, !tbaa !39
  %4 = and i16 %3, 3
  %5 = icmp eq i16 %4, 1
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %8 = and i16 %7, 4
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %13

; <label>:10                                      ; preds = %6
  %11 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  %12 = icmp ne i8 %11, 0
  br label %13

; <label>:13                                      ; preds = %10, %6, %0
  %.0 = phi i1 [ %12, %10 ], [ true, %6 ], [ true, %0 ]
  ret i1 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define %union.thing* @find_obj(i32 %y, i32 %x) #1 {
  %obj.01 = load %union.thing** @lvl_obj, align 8
  %1 = icmp eq %union.thing* %obj.01, null
  br i1 %1, label %split3, label %.lr.ph

.lr.ph:                                           ; preds = %9, %0
  %obj.02 = phi %union.thing* [ %obj.0, %9 ], [ %obj.01, %0 ]
  %2 = getelementptr inbounds %union.thing* %obj.02, i64 0, i32 0, i32 2, i32 1
  %3 = getelementptr inbounds i32* %2, i64 1
  %4 = load i32* %3, align 4, !tbaa !41
  %5 = icmp eq i32 %4, %y
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %.lr.ph
  %7 = load i32* %2, align 4, !tbaa !40
  %8 = icmp eq i32 %7, %x
  br i1 %8, label %split3, label %9

; <label>:9                                       ; preds = %6, %.lr.ph
  %10 = getelementptr inbounds %union.thing* %obj.02, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %10, align 8
  %11 = icmp eq %union.thing* %obj.0, null
  br i1 %11, label %split3, label %.lr.ph

split3:                                           ; preds = %9, %6, %0
  %.0 = phi %union.thing* [ null, %0 ], [ null, %9 ], [ %obj.02, %6 ]
  ret %union.thing* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @eat() #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([4 x i8]* @.str606, i64 0, i64 0), i32 58) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %71, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 58
  br i1 %6, label %14, label %7

; <label>:7                                       ; preds = %3
  %8 = load i8* @terse, align 1, !tbaa !5, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([39 x i8]* @.str1607, i64 0, i64 0)) #8
  br label %71

; <label>:12                                      ; preds = %7
  %13 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([17 x i8]* @.str2608, i64 0, i64 0)) #8
  br label %71

; <label>:14                                      ; preds = %3
  %15 = load i32* @food_left, align 4, !tbaa !38
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  store i32 0, i32* @food_left, align 4, !tbaa !38
  br label %18

; <label>:18                                      ; preds = %17, %14
  %19 = tail call i32 @rnd(i32 400) #8
  %20 = add nsw i32 %19, 1100
  %21 = load i32* @food_left, align 4, !tbaa !38
  %22 = add nsw i32 %20, %21
  %23 = icmp sgt i32 %22, 2000
  %. = select i1 %23, i32 2000, i32 %22
  store i32 %., i32* @food_left, align 4, !tbaa !38
  store i32 0, i32* @hungry_state, align 4, !tbaa !38
  %24 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %25 = icmp eq %union.thing* %1, %24
  br i1 %25, label %26, label %27

; <label>:26                                      ; preds = %18
  store %union.thing* null, %union.thing** @cur_weapon, align 8, !tbaa !1
  br label %27

; <label>:27                                      ; preds = %26, %18
  %28 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %29 = bitcast i8* %28 to i32*
  %30 = load i32* %29, align 4, !tbaa !50
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %34

; <label>:32                                      ; preds = %27
  %33 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([24 x i8]* @.str3609, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0)) #8
  br label %check_level.exit

; <label>:34                                      ; preds = %27
  %35 = tail call i32 @rnd(i32 100) #8
  %36 = icmp sgt i32 %35, 70
  br i1 %36, label %37, label %64

; <label>:37                                      ; preds = %34
  %38 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  %40 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %41 = and i16 %40, 2048
  %42 = icmp ne i16 %41, 0
  %43 = select i1 %42, i8* getelementptr inbounds ([7 x i8]* @.str5611, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str6612, i64 0, i64 0)
  %44 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([27 x i8]* @.str4610, i64 0, i64 0), i8* %43) #8
  %45 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4
  br label %46

; <label>:46                                      ; preds = %46, %37
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %46 ], [ 0, %37 ]
  %47 = getelementptr inbounds [0 x i32]* bitcast ([21 x i32]* @e_levels to [0 x i32]*), i64 0, i64 %indvars.iv.i
  %48 = load i32* %47, align 4, !tbaa !38
  %49 = icmp eq i32 %48, 0
  %50 = icmp sgt i32 %48, %45
  %or.cond.i = or i1 %49, %50
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %or.cond.i, label %51, label %46

; <label>:51                                      ; preds = %46
  %52 = trunc i64 %indvars.iv.i to i32
  %53 = trunc i64 %indvars.iv.next.i to i32
  %54 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  store i32 %53, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %55 = icmp slt i32 %52, %54
  br i1 %55, label %check_level.exit, label %56

; <label>:56                                      ; preds = %51
  %57 = sub nsw i32 %53, %54
  %58 = tail call i32 @roll(i32 %57, i32 10) #8
  %59 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %60 = add nsw i32 %59, %58
  store i32 %60, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %61 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %62 = add nsw i32 %61, %58
  store i32 %62, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %63 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([20 x i8]* @.str10616, i64 0, i64 0), i32 %53) #8
  br label %check_level.exit

; <label>:64                                      ; preds = %34
  %65 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %66 = and i16 %65, 2048
  %67 = icmp ne i16 %66, 0
  %68 = select i1 %67, i8* getelementptr inbounds ([8 x i8]* @.str8614, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str9615, i64 0, i64 0)
  %69 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str7613, i64 0, i64 0), i8* %68) #8
  br label %check_level.exit

check_level.exit:                                 ; preds = %64, %56, %51, %32
  %70 = tail call %union.thing* @leave_pack(%union.thing* %1, i1 zeroext false, i1 zeroext false) #8
  br label %71

; <label>:71                                      ; preds = %check_level.exit, %12, %10, %0
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @choose_str(i8* readnone %ts, i8* readnone %ns) #1 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 2048
  %3 = icmp ne i16 %2, 0
  %4 = select i1 %3, i8* %ts, i8* %ns
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define void @check_level() #0 {
  %1 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4
  br label %2

; <label>:2                                       ; preds = %2, %0
  %indvars.iv = phi i64 [ %indvars.iv.next, %2 ], [ 0, %0 ]
  %3 = getelementptr inbounds [0 x i32]* bitcast ([21 x i32]* @e_levels to [0 x i32]*), i64 0, i64 %indvars.iv
  %4 = load i32* %3, align 4, !tbaa !38
  %5 = icmp eq i32 %4, 0
  %6 = icmp sgt i32 %4, %1
  %or.cond = or i1 %5, %6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %or.cond, label %7, label %2

; <label>:7                                       ; preds = %2
  %8 = trunc i64 %indvars.iv to i32
  %9 = trunc i64 %indvars.iv.next to i32
  %10 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  store i32 %9, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %11 = icmp slt i32 %8, %10
  br i1 %11, label %20, label %12

; <label>:12                                      ; preds = %7
  %13 = sub nsw i32 %9, %10
  %14 = tail call i32 @roll(i32 %13, i32 10) #8
  %15 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %16 = add nsw i32 %15, %14
  store i32 %16, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %17 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %18 = add nsw i32 %17, %14
  store i32 %18, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %19 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([20 x i8]* @.str10616, i64 0, i64 0), i32 %9) #8
  br label %20

; <label>:20                                      ; preds = %12, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @chg_str(i32 %amt) #0 {
  %1 = icmp eq i32 %amt, 0
  br i1 %1, label %44, label %2

; <label>:2                                       ; preds = %0
  %3 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !38
  %4 = add i32 %3, %amt
  store i32 %4, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !38
  %5 = icmp ult i32 %4, 3
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %2
  store i32 3, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !38
  br label %add_str.exit

; <label>:7                                       ; preds = %2
  %8 = icmp ugt i32 %4, 31
  br i1 %8, label %9, label %add_str.exit

; <label>:9                                       ; preds = %7
  store i32 31, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !38
  br label %add_str.exit

add_str.exit:                                     ; preds = %9, %7, %6
  %10 = phi i32 [ 3, %6 ], [ %4, %7 ], [ 31, %9 ]
  %11 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %12 = icmp eq %union.thing* %11, null
  br i1 %12, label %add_str.exit2, label %13

; <label>:13                                      ; preds = %add_str.exit
  %14 = getelementptr inbounds %union.thing* %11, i64 0, i32 0, i32 9, i32 5, i64 4
  %15 = bitcast i8* %14 to i32*
  %16 = load i32* %15, align 4, !tbaa !50
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %add_str.exit2

; <label>:18                                      ; preds = %13
  %19 = getelementptr inbounds %union.thing* %11, i64 0, i32 0, i32 9, i32 6
  %20 = load i32* %19, align 4, !tbaa !70
  %21 = sub i32 %10, %20
  %22 = icmp ult i32 %21, 3
  br i1 %22, label %add_str.exit2, label %23

; <label>:23                                      ; preds = %18
  %24 = icmp ugt i32 %21, 31
  %. = select i1 %24, i32 31, i32 %21
  br label %add_str.exit2

add_str.exit2:                                    ; preds = %23, %18, %13, %add_str.exit
  %25 = phi i32 [ %10, %add_str.exit ], [ %10, %13 ], [ 3, %18 ], [ %., %23 ]
  %26 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %27 = icmp eq %union.thing* %26, null
  br i1 %27, label %add_str.exit1, label %28

; <label>:28                                      ; preds = %add_str.exit2
  %29 = getelementptr inbounds %union.thing* %26, i64 0, i32 0, i32 9, i32 5, i64 4
  %30 = bitcast i8* %29 to i32*
  %31 = load i32* %30, align 4, !tbaa !50
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %add_str.exit1

; <label>:33                                      ; preds = %28
  %34 = getelementptr inbounds %union.thing* %26, i64 0, i32 0, i32 9, i32 6
  %35 = load i32* %34, align 4, !tbaa !70
  %36 = sub i32 %25, %35
  %37 = icmp ult i32 %36, 3
  br i1 %37, label %add_str.exit1, label %38

; <label>:38                                      ; preds = %33
  %39 = icmp ugt i32 %36, 31
  %.3 = select i1 %39, i32 31, i32 %36
  br label %add_str.exit1

add_str.exit1:                                    ; preds = %38, %33, %28, %add_str.exit2
  %40 = phi i32 [ %25, %add_str.exit2 ], [ %25, %28 ], [ 3, %33 ], [ %.3, %38 ]
  %41 = load i32* getelementptr inbounds (%struct.stats* @max_stats, i64 0, i32 0), align 4, !tbaa !74
  %42 = icmp ugt i32 %40, %41
  br i1 %42, label %43, label %44

; <label>:43                                      ; preds = %add_str.exit1
  store i32 %40, i32* getelementptr inbounds (%struct.stats* @max_stats, i64 0, i32 0), align 4, !tbaa !74
  br label %44

; <label>:44                                      ; preds = %43, %add_str.exit1, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @add_str(i32* nocapture %sp, i32 %amt) #0 {
  %1 = load i32* %sp, align 4, !tbaa !38
  %2 = add i32 %1, %amt
  store i32 %2, i32* %sp, align 4, !tbaa !38
  %3 = icmp ult i32 %2, 3
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  store i32 3, i32* %sp, align 4, !tbaa !38
  br label %8

; <label>:5                                       ; preds = %0
  %6 = icmp ugt i32 %2, 31
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %5
  store i32 31, i32* %sp, align 4, !tbaa !38
  br label %8

; <label>:8                                       ; preds = %7, %5, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @add_haste(i1 zeroext %potion) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 64
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %11, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @rnd(i32 8) #8
  %6 = load i32* @no_command, align 4, !tbaa !38
  %7 = add nsw i32 %6, %5
  store i32 %7, i32* @no_command, align 4, !tbaa !38
  %8 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %9 = and i16 %8, -8257
  store i16 %9, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  tail call void @extinguish(void (...)* bitcast (void ()* @nohaste to void (...)*)) #8
  %10 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([26 x i8]* @.str11617, i64 0, i64 0)) #8
  br label %18

; <label>:11                                      ; preds = %0
  %12 = or i16 %1, 64
  store i16 %12, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  br i1 %potion, label %13, label %18

; <label>:13                                      ; preds = %11
  %14 = tail call i32 @rnd(i32 4) #8
  %15 = add nsw i32 %14, 4
  %16 = tail call i32 @rnd(i32 0) #8
  %17 = add nsw i32 %16, 2
  tail call void @fuse(void (...)* bitcast (void ()* @nohaste to void (...)*), i32 0, i32 %15, i32 %17) #8
  br label %18

; <label>:18                                      ; preds = %13, %11, %4
  %.0 = phi i1 [ false, %4 ], [ true, %13 ], [ true, %11 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @spread(i32 %nm) #0 {
  %.neg = sdiv i32 %nm, -20
  %1 = add i32 %.neg, %nm
  %2 = sdiv i32 %nm, 10
  %3 = tail call i32 @rnd(i32 %2) #8
  %4 = add nsw i32 %1, %3
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define void @aggravate() #0 {
  %mp.01 = load %union.thing** @mlist, align 8
  %1 = icmp eq %union.thing* %mp.01, null
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %mp.02 = phi %union.thing* [ %mp.0, %.lr.ph ], [ %mp.01, %0 ]
  %2 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 2
  tail call void @runto(%struct.coord* %2) #8
  %3 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 0
  %mp.0 = load %union.thing** %3, align 8
  %4 = icmp eq %union.thing* %mp.0, null
  br i1 %4, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @vowelstr(i8* nocapture readonly %str) #1 {
  %1 = load i8* %str, align 1, !tbaa !28
  %2 = sext i8 %1 to i32
  switch i32 %2, label %3 [
    i32 97, label %4
    i32 65, label %4
    i32 101, label %4
    i32 69, label %4
    i32 105, label %4
    i32 73, label %4
    i32 111, label %4
    i32 79, label %4
    i32 117, label %4
    i32 85, label %4
  ]

; <label>:3                                       ; preds = %0
  br label %4

; <label>:4                                       ; preds = %3, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0
  %.0 = phi i8* [ getelementptr inbounds ([1 x i8]* @.str13619, i64 0, i64 0), %3 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2 x i8]* @.str12618, i64 0, i64 0), %0 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @is_current(%union.thing* readnone %obj) #0 {
  %1 = icmp eq %union.thing* %obj, null
  br i1 %1, label %18, label %2

; <label>:2                                       ; preds = %0
  %3 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %4 = icmp eq %union.thing* %3, %obj
  %5 = load %union.thing** @cur_weapon, align 8
  %6 = icmp eq %union.thing* %5, %obj
  %or.cond = or i1 %4, %6
  %7 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8
  %8 = icmp eq %union.thing* %7, %obj
  %or.cond3 = or i1 %or.cond, %8
  br i1 %or.cond3, label %12, label %9

; <label>:9                                       ; preds = %2
  %10 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %11 = icmp eq %union.thing* %10, %obj
  br i1 %11, label %12, label %18

; <label>:12                                      ; preds = %9, %2
  %13 = load i8* @terse, align 1, !tbaa !5, !range !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %12
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([16 x i8]* @.str14620, i64 0, i64 0)) #8
  br label %16

; <label>:16                                      ; preds = %15, %12
  %17 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([7 x i8]* @.str15621, i64 0, i64 0)) #8
  br label %18

; <label>:18                                      ; preds = %16, %9, %0
  %.0 = phi i1 [ true, %16 ], [ false, %0 ], [ false, %9 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @get_dir() #0 {
  %1 = load i8* @again, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  %3 = load i8* @last_dir, align 1
  %4 = icmp eq i8 %3, 0
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %8, label %5

; <label>:5                                       ; preds = %0
  %6 = load i32* @get_dir.last_delt.1, align 4, !tbaa !20
  store i32 %6, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %7 = load i32* @get_dir.last_delt.0, align 4, !tbaa !21
  store i32 %7, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  store i8 %3, i8* @dir_ch, align 1, !tbaa !28
  br label %41

; <label>:8                                       ; preds = %0
  %9 = load i8* @terse, align 1, !tbaa !5, !range !7
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %.preheader5

; <label>:11                                      ; preds = %8
  %12 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([18 x i8]* @.str16622, i64 0, i64 0)) #8
  br label %.preheader5

.preheader5:                                      ; preds = %11, %8
  %prompt.0.ph = phi i8* [ getelementptr inbounds ([12 x i8]* @.str17623, i64 0, i64 0), %8 ], [ getelementptr inbounds ([18 x i8]* @.str16622, i64 0, i64 0), %11 ]
  br label %13

; <label>:13                                      ; preds = %.critedge3, %.preheader5
  %14 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  store i8 %14, i8* @dir_ch, align 1, !tbaa !28
  %15 = sext i8 %14 to i32
  switch i32 %15, label %.critedge3 [
    i32 104, label %16
    i32 72, label %16
    i32 106, label %17
    i32 74, label %17
    i32 107, label %18
    i32 75, label %18
    i32 108, label %19
    i32 76, label %19
    i32 121, label %20
    i32 89, label %20
    i32 117, label %21
    i32 85, label %21
    i32 98, label %22
    i32 66, label %22
    i32 110, label %23
    i32 78, label %23
    i32 27, label %24
  ]

; <label>:16                                      ; preds = %13, %13
  store i32 0, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 -1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:17                                      ; preds = %13, %13
  store i32 1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 0, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:18                                      ; preds = %13, %13
  store i32 -1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 0, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:19                                      ; preds = %13, %13
  store i32 0, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:20                                      ; preds = %13, %13
  store i32 -1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 -1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:21                                      ; preds = %13, %13
  store i32 -1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:22                                      ; preds = %13, %13
  store i32 1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 -1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:23                                      ; preds = %13, %13
  store i32 1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 1, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  br label %26

; <label>:24                                      ; preds = %13
  store i8 0, i8* @last_dir, align 1, !tbaa !28
  tail call void (...)* bitcast (void ()* @reset_last to void (...)*)() #8
  br label %55

.critedge3:                                       ; preds = %13
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %25 = tail call i32 (i8*, ...)* @msg(i8* %prompt.0.ph) #8
  br label %13

; <label>:26                                      ; preds = %23, %22, %21, %20, %19, %18, %17, %16
  %isascii.i.i4 = icmp sgt i8 %14, -1
  br i1 %isascii.i.i4, label %27, label %32

; <label>:27                                      ; preds = %26
  %28 = sext i8 %14 to i64
  %29 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %28
  %30 = load i32* %29, align 4, !tbaa !38
  %31 = and i32 %30, 32768
  br label %isupper.exit

; <label>:32                                      ; preds = %26
  %33 = tail call i32 @__maskrune(i32 %15, i64 32768) #8
  br label %isupper.exit

isupper.exit:                                     ; preds = %32, %27
  %.sink.i.in.i = phi i32 [ %31, %27 ], [ %33, %32 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  %.pre = load i8* @dir_ch, align 1, !tbaa !28
  br i1 %.sink.i.i, label %isupper.exit._crit_edge, label %34

; <label>:34                                      ; preds = %isupper.exit
  %35 = sext i8 %.pre to i32
  %36 = tail call i32 @__tolower(i32 %35) #8
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* @dir_ch, align 1, !tbaa !28
  br label %isupper.exit._crit_edge

isupper.exit._crit_edge:                          ; preds = %34, %isupper.exit
  %38 = phi i8 [ %37, %34 ], [ %.pre, %isupper.exit ]
  store i8 %38, i8* @last_dir, align 1, !tbaa !28
  %39 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 %39, i32* @get_dir.last_delt.1, align 4, !tbaa !20
  %40 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  store i32 %40, i32* @get_dir.last_delt.0, align 4, !tbaa !21
  br label %41

; <label>:41                                      ; preds = %isupper.exit._crit_edge, %5
  %42 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %43 = and i16 %42, 512
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %.critedge, label %45

; <label>:45                                      ; preds = %41
  %46 = tail call i32 @rnd(i32 5) #8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %.preheader, label %.critedge

.preheader:                                       ; preds = %.preheader, %45
  %48 = tail call i32 @rnd(i32 3) #8
  %49 = add nsw i32 %48, -1
  store i32 %49, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %50 = tail call i32 @rnd(i32 3) #8
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %52 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %53 = or i32 %52, %51
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %.preheader, label %.critedge

.critedge:                                        ; preds = %.preheader, %45, %41
  store i32 0, i32* @mpos, align 4, !tbaa !38
  br label %55

; <label>:55                                      ; preds = %.critedge, %24
  %.0 = phi i1 [ true, %.critedge ], [ false, %24 ]
  ret i1 %.0
}

; Function Attrs: nounwind readnone ssp uwtable
define i32 @sign(i32 %nm) #3 {
  %1 = icmp slt i32 %nm, 0
  br i1 %1, label %5, label %2

; <label>:2                                       ; preds = %0
  %3 = icmp sgt i32 %nm, 0
  %4 = zext i1 %3 to i32
  br label %5

; <label>:5                                       ; preds = %2, %0
  %.0 = phi i32 [ %4, %2 ], [ -1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @call_it(%struct.obj_info* nocapture %info) #0 {
  %1 = getelementptr inbounds %struct.obj_info* %info, i64 0, i32 4
  %2 = load i8* %1, align 1, !tbaa !102, !range !7
  %3 = icmp eq i8 %2, 0
  %4 = getelementptr inbounds %struct.obj_info* %info, i64 0, i32 3
  %5 = load i8** %4, align 8, !tbaa !103
  %6 = icmp ne i8* %5, null
  br i1 %3, label %9, label %7

; <label>:7                                       ; preds = %0
  br i1 %6, label %8, label %29

; <label>:8                                       ; preds = %7
  tail call void @free(i8* %5)
  store i8* null, i8** %4, align 8, !tbaa !103
  br label %29

; <label>:9                                       ; preds = %0
  br i1 %6, label %29, label %10

; <label>:10                                      ; preds = %9
  %11 = load i8* @terse, align 1, !tbaa !5, !range !7
  %12 = icmp ne i8 %11, 0
  %13 = select i1 %12, i8* getelementptr inbounds ([10 x i8]* @.str18624, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8]* @.str19625, i64 0, i64 0)
  %14 = tail call i32 (i8*, ...)* @msg(i8* %13) #8
  %15 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %16 = tail call i32 @get_str(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %struct._win_st* %15) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %29

; <label>:18                                      ; preds = %10
  %19 = load i8** %4, align 8, !tbaa !103
  %20 = icmp eq i8* %19, null
  br i1 %20, label %22, label %21

; <label>:21                                      ; preds = %18
  tail call void @free(i8* %19)
  br label %22

; <label>:22                                      ; preds = %21, %18
  %23 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %24 = add i64 %23, 1
  %25 = and i64 %24, 4294967295
  %26 = tail call i8* @malloc(i64 %25) #8
  store i8* %26, i8** %4, align 8, !tbaa !103
  %27 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %26, i1 false)
  %28 = tail call i8* @__strcpy_chk(i8* %26, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i64 %27) #8
  br label %29

; <label>:29                                      ; preds = %22, %10, %9, %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @rnd_thing() #0 {
  %1 = load i32* @level, align 4, !tbaa !38
  %2 = icmp sgt i32 %1, 25
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @rnd(i32 10) #8
  br label %7

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @rnd(i32 9) #8
  br label %7

; <label>:7                                       ; preds = %5, %3
  %i.0 = phi i32 [ %4, %3 ], [ %6, %5 ]
  %8 = sext i32 %i.0 to i64
  %9 = getelementptr inbounds [10 x i8]* @rnd_thing.thing_list, i64 0, i64 %8
  %10 = load i8* %9, align 1, !tbaa !28
  ret i8 %10
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @randmonster(i1 zeroext %wander) #0 {
  %1 = select i1 %wander, i8* getelementptr inbounds ([26 x i8]* @wand_mons, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8]* @lvl_mons, i64 0, i64 0)
  br label %2

; <label>:2                                       ; preds = %15, %0
  %3 = load i32* @level, align 4, !tbaa !38
  %4 = tail call i32 @rnd(i32 10) #8
  %5 = add i32 %3, -6
  %6 = add i32 %5, %4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %2
  %9 = tail call i32 @rnd(i32 5) #8
  br label %10

; <label>:10                                      ; preds = %8, %2
  %d.0 = phi i32 [ %9, %8 ], [ %6, %2 ]
  %11 = icmp sgt i32 %d.0, 25
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %10
  %13 = tail call i32 @rnd(i32 5) #8
  %14 = add nsw i32 %13, 21
  br label %15

; <label>:15                                      ; preds = %12, %10
  %d.1 = phi i32 [ %14, %12 ], [ %d.0, %10 ]
  %16 = sext i32 %d.1 to i64
  %17 = getelementptr inbounds i8* %1, i64 %16
  %18 = load i8* %17, align 1, !tbaa !28
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %2, label %20

; <label>:20                                      ; preds = %15
  ret i8 %18
}

; Function Attrs: nounwind ssp uwtable
define void @new_monster(%union.thing* %tp, i8 signext %type, %struct.coord* %cp) #0 {
  %1 = load i32* @level, align 4, !tbaa !38
  %2 = add nsw i32 %1, -26
  %3 = icmp slt i32 %2, 0
  %. = select i1 %3, i32 0, i32 %2
  tail call void @_attach(%union.thing** @mlist, %union.thing* %tp) #8
  %4 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 4
  store i8 %type, i8* %4, align 1, !tbaa !37
  %5 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 5
  store i8 %type, i8* %5, align 1, !tbaa !44
  %6 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 2
  %7 = bitcast %struct.coord* %cp to i64*
  %8 = bitcast %struct.coord* %6 to i64*
  %9 = load i64* %7, align 4
  store i64 %9, i64* %8, align 4
  %10 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %11 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %12 = load i32* %11, align 4, !tbaa !20
  %13 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %14 = load i32* %13, align 4, !tbaa !21
  %15 = tail call i32 @wmove(%struct._win_st* %10, i32 %12, i32 %14) #8
  %16 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %17 = tail call i32 @winch(%struct._win_st* %16) #8
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 6
  store i8 %18, i8* %19, align 1, !tbaa !42
  %20 = tail call %struct.room* @roomin(%struct.coord* %cp) #8
  %21 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 10
  store %struct.room* %20, %struct.room** %21, align 8, !tbaa !24
  %22 = load i32* %13, align 4, !tbaa !21
  %23 = shl i32 %22, 5
  %24 = load i32* %11, align 4, !tbaa !20
  %25 = add nsw i32 %23, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %26, i32 2
  store %union.thing* %tp, %union.thing** %27, align 8, !tbaa !43
  %28 = load i8* %4, align 1, !tbaa !37
  %29 = sext i8 %28 to i64
  %30 = add i64 %29, -65
  %31 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %30, i32 3, i32 2
  %32 = load i32* %31, align 8, !tbaa !104
  %33 = add nsw i32 %32, %.
  %34 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 2
  store i32 %33, i32* %34, align 4, !tbaa !63
  %35 = tail call i32 @roll(i32 %33, i32 8) #8
  %36 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 4
  store i32 %35, i32* %36, align 4, !tbaa !64
  %37 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 6
  store i32 %35, i32* %37, align 4, !tbaa !65
  %38 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %30, i32 3, i32 3
  %39 = load i32* %38, align 4, !tbaa !105
  %40 = sub nsw i32 %39, %.
  %41 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 3
  store i32 %40, i32* %41, align 4, !tbaa !106
  %42 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 5, i64 0
  %43 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %30, i32 3, i32 5, i64 0
  %44 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %42, i1 false)
  %45 = tail call i8* @__strcpy_chk(i8* %42, i8* %43, i64 %44) #8
  %46 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %30, i32 3, i32 0
  %47 = load i32* %46, align 8, !tbaa !107
  %48 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 0
  store i32 %47, i32* %48, align 4, !tbaa !84
  %49 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %30, i32 3, i32 1
  %50 = load i32* %49, align 4, !tbaa !108
  %51 = mul nsw i32 %., 10
  %52 = add nsw i32 %50, %51
  %53 = load i32* %34, align 4, !tbaa !63
  %54 = icmp eq i32 %53, 1
  %55 = load i32* %37, align 4, !tbaa !65
  br i1 %54, label %.thread.i, label %57

.thread.i:                                        ; preds = %0
  %56 = sdiv i32 %55, 8
  br label %62

; <label>:57                                      ; preds = %0
  %58 = sdiv i32 %55, 6
  %59 = icmp sgt i32 %53, 9
  br i1 %59, label %60, label %62

; <label>:60                                      ; preds = %57
  %61 = mul nsw i32 %58, 20
  br label %exp_add.exit

; <label>:62                                      ; preds = %57, %.thread.i
  %mod.01.i = phi i32 [ %56, %.thread.i ], [ %58, %57 ]
  %63 = icmp sgt i32 %53, 6
  %64 = shl nsw i32 %mod.01.i, 2
  %.mod.0.i = select i1 %63, i32 %64, i32 %mod.01.i
  br label %exp_add.exit

exp_add.exit:                                     ; preds = %62, %60
  %65 = phi i32 [ %61, %60 ], [ %.mod.0.i, %62 ]
  %66 = add nsw i32 %52, %65
  %67 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 1
  store i32 %66, i32* %67, align 4, !tbaa !76
  %68 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %30, i32 2
  %69 = load i16* %68, align 4, !tbaa !109
  %70 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 8
  store i16 %69, i16* %70, align 2, !tbaa !18
  %71 = load i32* @level, align 4, !tbaa !38
  %72 = icmp sgt i32 %71, 29
  br i1 %72, label %73, label %75

; <label>:73                                      ; preds = %exp_add.exit
  %74 = or i16 %69, 64
  store i16 %74, i16* %70, align 2, !tbaa !18
  br label %75

; <label>:75                                      ; preds = %73, %exp_add.exit
  %76 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 3
  store i8 1, i8* %76, align 1, !tbaa !19
  %77 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 11
  store %union.thing* null, %union.thing** %77, align 8, !tbaa !51
  %78 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %79 = icmp eq %union.thing* %78, null
  br i1 %79, label %85, label %80

; <label>:80                                      ; preds = %75
  %81 = getelementptr inbounds %union.thing* %78, i64 0, i32 0, i32 9, i32 5, i64 4
  %82 = bitcast i8* %81 to i32*
  %83 = load i32* %82, align 4, !tbaa !50
  %84 = icmp eq i32 %83, 6
  br i1 %84, label %93, label %85

; <label>:85                                      ; preds = %80, %75
  %86 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %87 = icmp eq %union.thing* %86, null
  br i1 %87, label %94, label %88

; <label>:88                                      ; preds = %85
  %89 = getelementptr inbounds %union.thing* %86, i64 0, i32 0, i32 9, i32 5, i64 4
  %90 = bitcast i8* %89 to i32*
  %91 = load i32* %90, align 4, !tbaa !50
  %92 = icmp eq i32 %91, 6
  br i1 %92, label %93, label %94

; <label>:93                                      ; preds = %88, %80
  tail call void @runto(%struct.coord* %cp) #8
  br label %94

; <label>:94                                      ; preds = %93, %88, %85
  %95 = icmp eq i8 %type, 88
  br i1 %95, label %96, label %98

; <label>:96                                      ; preds = %94
  %97 = tail call signext i8 (...)* bitcast (i8 ()* @rnd_thing to i8 (...)*)() #8
  store i8 %97, i8* %5, align 1, !tbaa !44
  br label %98

; <label>:98                                      ; preds = %96, %94
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @exp_add(%union.thing* nocapture readonly %tp) #1 {
  %1 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 2
  %2 = load i32* %1, align 4, !tbaa !63
  %3 = icmp eq i32 %2, 1
  %4 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 6
  %5 = load i32* %4, align 4, !tbaa !65
  br i1 %3, label %.thread, label %7

.thread:                                          ; preds = %0
  %6 = sdiv i32 %5, 8
  br label %12

; <label>:7                                       ; preds = %0
  %8 = sdiv i32 %5, 6
  %9 = icmp sgt i32 %2, 9
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = mul nsw i32 %8, 20
  ret i32 %11

; <label>:12                                      ; preds = %7, %.thread
  %mod.01 = phi i32 [ %6, %.thread ], [ %8, %7 ]
  %13 = icmp sgt i32 %2, 6
  %14 = shl nsw i32 %mod.01, 2
  %.mod.0 = select i1 %13, i32 %14, i32 %mod.01
  ret i32 %.mod.0
}

; Function Attrs: nounwind ssp uwtable
define void @wanderer() #0 {
  %1 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  br label %2

; <label>:2                                       ; preds = %2, %0
  %3 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* @wanderer.cp, i32 0, i1 zeroext true) #8
  %4 = tail call %struct.room* @roomin(%struct.coord* @wanderer.cp) #8
  %5 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %6 = icmp eq %struct.room* %4, %5
  br i1 %6, label %2, label %.preheader

.preheader:                                       ; preds = %19, %2
  %7 = load i32* @level, align 4, !tbaa !38
  %8 = tail call i32 @rnd(i32 10) #8
  %9 = add i32 %7, -6
  %10 = add i32 %9, %8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %14

; <label>:12                                      ; preds = %.preheader
  %13 = tail call i32 @rnd(i32 5) #8
  br label %14

; <label>:14                                      ; preds = %12, %.preheader
  %d.0.i = phi i32 [ %13, %12 ], [ %10, %.preheader ]
  %15 = icmp sgt i32 %d.0.i, 25
  br i1 %15, label %16, label %19

; <label>:16                                      ; preds = %14
  %17 = tail call i32 @rnd(i32 5) #8
  %18 = add nsw i32 %17, 21
  br label %19

; <label>:19                                      ; preds = %16, %14
  %d.1.i = phi i32 [ %18, %16 ], [ %d.0.i, %14 ]
  %20 = sext i32 %d.1.i to i64
  %21 = lshr i64 34120224, %20
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %randmonster.exit, label %.preheader

randmonster.exit:                                 ; preds = %19
  %24 = getelementptr inbounds [26 x i8]* @wand_mons, i64 0, i64 %20
  %25 = load i8* %24, align 1, !tbaa !28
  tail call void @new_monster(%union.thing* %1, i8 signext %25, %struct.coord* @wanderer.cp)
  %26 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %27 = and i16 %26, 16384
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %46, label %29

; <label>:29                                      ; preds = %randmonster.exit
  %30 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %31 = getelementptr inbounds %struct._win_st* %30, i64 0, i32 7
  store i32 65536, i32* %31, align 4, !tbaa !45
  %32 = and i16 %26, 2048
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %34, label %39

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 4
  %36 = load i8* %35, align 1, !tbaa !37
  %37 = sext i8 %36 to i32
  %38 = tail call i32 @waddch(%struct._win_st* %30, i32 %37) #8
  br label %43

; <label>:39                                      ; preds = %29
  %40 = tail call i32 @rnd(i32 26) #8
  %41 = add nsw i32 %40, 65
  %42 = tail call i32 @waddch(%struct._win_st* %30, i32 %41) #8
  br label %43

; <label>:43                                      ; preds = %39, %34
  %44 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %45 = getelementptr inbounds %struct._win_st* %44, i64 0, i32 7
  store i32 0, i32* %45, align 4, !tbaa !45
  br label %46

; <label>:46                                      ; preds = %43, %randmonster.exit
  %47 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2
  tail call void @runto(%struct.coord* %47) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %union.thing* @wake_monster(i32 %y, i32 %x) #0 {
  %1 = shl i32 %x, 5
  %2 = add nsw i32 %1, %y
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %3, i32 2
  %5 = load %union.thing** %4, align 8, !tbaa !43
  %6 = icmp eq %union.thing* %5, null
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @endwin() #8
  tail call void @abort() #10
  unreachable

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 4
  %11 = load i8* %10, align 1, !tbaa !37
  %12 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 8
  %13 = load i16* %12, align 2, !tbaa !18
  %14 = and i16 %13, 8192
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %16, label %46

; <label>:16                                      ; preds = %9
  %17 = tail call i32 @rnd(i32 3) #8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %46, label %19

; <label>:19                                      ; preds = %16
  %20 = load i16* %12, align 2, !tbaa !18
  %21 = and i16 %20, 2304
  %22 = icmp eq i16 %21, 2048
  br i1 %22, label %23, label %46

; <label>:23                                      ; preds = %19
  %24 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %25 = icmp eq %union.thing* %24, null
  br i1 %25, label %31, label %26

; <label>:26                                      ; preds = %23
  %27 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 9, i32 5, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32* %28, align 4, !tbaa !50
  %30 = icmp eq i32 %29, 12
  br i1 %30, label %46, label %31

; <label>:31                                      ; preds = %26, %23
  %32 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %33 = icmp eq %union.thing* %32, null
  br i1 %33, label %39, label %34

; <label>:34                                      ; preds = %31
  %35 = getelementptr inbounds %union.thing* %32, i64 0, i32 0, i32 9, i32 5, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32* %36, align 4, !tbaa !50
  %38 = icmp eq i32 %37, 12
  br i1 %38, label %46, label %39

; <label>:39                                      ; preds = %34, %31
  %40 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %41 = and i16 %40, 8
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %46

; <label>:43                                      ; preds = %39
  %44 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 7
  store %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord** %44, align 8, !tbaa !27
  %45 = or i16 %20, 8192
  store i16 %45, i16* %12, align 2, !tbaa !18
  br label %46

; <label>:46                                      ; preds = %43, %39, %34, %26, %19, %16, %9
  %47 = icmp eq i8 %11, 77
  br i1 %47, label %48, label %117

; <label>:48                                      ; preds = %46
  %49 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %50 = and i16 %49, 2052
  %51 = icmp eq i16 %50, 0
  br i1 %51, label %52, label %117

; <label>:52                                      ; preds = %48
  %53 = load i16* %12, align 2, !tbaa !18
  %54 = and i16 %53, 8216
  %55 = icmp eq i16 %54, 8192
  br i1 %55, label %56, label %117

; <label>:56                                      ; preds = %52
  %57 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %58 = icmp eq %struct.room* %57, null
  br i1 %58, label %64, label %59

; <label>:59                                      ; preds = %56
  %60 = getelementptr inbounds %struct.room* %57, i64 0, i32 4
  %61 = load i16* %60, align 2, !tbaa !39
  %62 = and i16 %61, 1
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %69, label %64

; <label>:64                                      ; preds = %59, %56
  %65 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %66 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %67 = tail call i32 @dist(i32 %y, i32 %x, i32 %65, i32 %66) #8
  %68 = icmp slt i32 %67, 3
  br i1 %68, label %._crit_edge, label %117

._crit_edge:                                      ; preds = %64
  %.pre = load i16* %12, align 2, !tbaa !18
  br label %69

; <label>:69                                      ; preds = %._crit_edge, %59
  %70 = phi i16 [ %.pre, %._crit_edge ], [ %53, %59 ]
  %71 = or i16 %70, 16
  store i16 %71, i16* %12, align 2, !tbaa !18
  %72 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %73 = icmp eq %union.thing* %72, null
  br i1 %73, label %83, label %74

; <label>:74                                      ; preds = %69
  %75 = getelementptr inbounds %union.thing* %72, i64 0, i32 0, i32 9, i32 5, i64 4
  %76 = bitcast i8* %75 to i32*
  %77 = load i32* %76, align 4, !tbaa !50
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %83

; <label>:79                                      ; preds = %74
  %80 = getelementptr inbounds %union.thing* %72, i64 0, i32 0, i32 9, i32 6
  %81 = load i32* %80, align 4, !tbaa !70
  %82 = sub nsw i32 3, %81
  br label %83

; <label>:83                                      ; preds = %79, %74, %69
  %.0.i = phi i32 [ %82, %79 ], [ 3, %74 ], [ 3, %69 ]
  %84 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %85 = icmp eq %union.thing* %84, null
  br i1 %85, label %save.exit, label %86

; <label>:86                                      ; preds = %83
  %87 = getelementptr inbounds %union.thing* %84, i64 0, i32 0, i32 9, i32 5, i64 4
  %88 = bitcast i8* %87 to i32*
  %89 = load i32* %88, align 4, !tbaa !50
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %save.exit

; <label>:91                                      ; preds = %86
  %92 = getelementptr inbounds %union.thing* %84, i64 0, i32 0, i32 9, i32 6
  %93 = load i32* %92, align 4, !tbaa !70
  %94 = sub nsw i32 %.0.i, %93
  br label %save.exit

save.exit:                                        ; preds = %91, %86, %83
  %.1.i = phi i32 [ %94, %91 ], [ %.0.i, %86 ], [ %.0.i, %83 ]
  %95 = add nsw i32 %.1.i, 14
  %96 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %.neg.i.i = sdiv i32 %96, -2
  %97 = add i32 %95, %.neg.i.i
  %98 = tail call i32 @roll(i32 1, i32 20) #8
  %99 = icmp slt i32 %98, %97
  br i1 %99, label %100, label %117

; <label>:100                                     ; preds = %save.exit
  %101 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %102 = and i16 %101, 512
  %103 = icmp eq i16 %102, 0
  %104 = tail call i32 @spread(i32 20) #8
  br i1 %103, label %106, label %105

; <label>:105                                     ; preds = %100
  tail call void @lengthen(void (...)* bitcast (void ()* @unconfuse to void (...)*), i32 %104) #8
  br label %108

; <label>:106                                     ; preds = %100
  %107 = tail call i32 @spread(i32 2) #8
  tail call void @fuse(void (...)* bitcast (void ()* @unconfuse to void (...)*), i32 0, i32 %104, i32 %107) #8
  br label %108

; <label>:108                                     ; preds = %106, %105
  %109 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %110 = or i16 %109, 512
  store i16 %110, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %111 = tail call i8* @set_mname(%union.thing* %5) #8
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([3 x i8]* @.str644, i64 0, i64 0), i8* %111) #8
  %112 = tail call i32 @strcmp(i8* %111, i8* getelementptr inbounds ([3 x i8]* @.str1645, i64 0, i64 0)) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %115, label %114

; <label>:114                                     ; preds = %108
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([2 x i8]* @.str2646, i64 0, i64 0)) #8
  br label %115

; <label>:115                                     ; preds = %114, %108
  %116 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([24 x i8]* @.str3647, i64 0, i64 0)) #8
  br label %117

; <label>:117                                     ; preds = %115, %save.exit, %64, %52, %48, %46
  %118 = load i16* %12, align 2, !tbaa !18
  %119 = and i16 %118, 8224
  %120 = icmp eq i16 %119, 32
  br i1 %120, label %121, label %132

; <label>:121                                     ; preds = %117
  %122 = or i16 %118, 8192
  store i16 %122, i16* %12, align 2, !tbaa !18
  %123 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %124 = getelementptr inbounds %struct.room* %123, i64 0, i32 3
  %125 = load i32* %124, align 4, !tbaa !25
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

; <label>:127                                     ; preds = %121
  %128 = getelementptr inbounds %struct.room* %123, i64 0, i32 2
  %129 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 7
  store %struct.coord* %128, %struct.coord** %129, align 8, !tbaa !27
  br label %132

; <label>:130                                     ; preds = %121
  %131 = getelementptr inbounds %union.thing* %5, i64 0, i32 0, i32 7
  store %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord** %131, align 8, !tbaa !27
  br label %132

; <label>:132                                     ; preds = %130, %127, %117
  ret %union.thing* %5
}

; Function Attrs: noreturn
declare void @abort() #4

; Function Attrs: nounwind ssp uwtable
define i32 @save(i32 %which) #0 {
  %1 = icmp eq i32 %which, 3
  br i1 %1, label %2, label %26

; <label>:2                                       ; preds = %0
  %3 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %4 = icmp eq %union.thing* %3, null
  br i1 %4, label %14, label %5

; <label>:5                                       ; preds = %2
  %6 = getelementptr inbounds %union.thing* %3, i64 0, i32 0, i32 9, i32 5, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = load i32* %7, align 4, !tbaa !50
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %14

; <label>:10                                      ; preds = %5
  %11 = getelementptr inbounds %union.thing* %3, i64 0, i32 0, i32 9, i32 6
  %12 = load i32* %11, align 4, !tbaa !70
  %13 = sub nsw i32 3, %12
  br label %14

; <label>:14                                      ; preds = %10, %5, %2
  %.0 = phi i32 [ %13, %10 ], [ 3, %5 ], [ 3, %2 ]
  %15 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %16 = icmp eq %union.thing* %15, null
  br i1 %16, label %26, label %17

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds %union.thing* %15, i64 0, i32 0, i32 9, i32 5, i64 4
  %19 = bitcast i8* %18 to i32*
  %20 = load i32* %19, align 4, !tbaa !50
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %17
  %23 = getelementptr inbounds %union.thing* %15, i64 0, i32 0, i32 9, i32 6
  %24 = load i32* %23, align 4, !tbaa !70
  %25 = sub nsw i32 %.0, %24
  br label %26

; <label>:26                                      ; preds = %22, %17, %14, %0
  %.1 = phi i32 [ %25, %22 ], [ %.0, %17 ], [ %.0, %14 ], [ %which, %0 ]
  %27 = add nsw i32 %.1, 14
  %28 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %.neg.i = sdiv i32 %28, -2
  %29 = add i32 %27, %.neg.i
  %30 = tail call i32 @roll(i32 1, i32 20) #8
  %31 = icmp sge i32 %30, %29
  %32 = zext i1 %31 to i32
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define void @give_pack(%union.thing* %tp) #0 {
  %1 = load i32* @level, align 4, !tbaa !38
  %2 = load i32* @max_level, align 4, !tbaa !38
  %3 = icmp slt i32 %1, %2
  br i1 %3, label %16, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @rnd(i32 100) #8
  %6 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 4
  %7 = load i8* %6, align 1, !tbaa !37
  %8 = sext i8 %7 to i64
  %9 = add i64 %8, -65
  %10 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %9, i32 1
  %11 = load i32* %10, align 8, !tbaa !48
  %12 = icmp slt i32 %5, %11
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %4
  %14 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 11
  %15 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_thing to %union.thing* (...)*)() #8
  tail call void @_attach(%union.thing** %14, %union.thing* %15) #8
  br label %16

; <label>:16                                      ; preds = %13, %4, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @save_throw(i32 %which, %union.thing* nocapture readonly %tp) #0 {
  %1 = add nsw i32 %which, 14
  %2 = getelementptr inbounds %union.thing* %tp, i64 0, i32 0, i32 9, i32 2
  %3 = load i32* %2, align 4, !tbaa !63
  %.neg = sdiv i32 %3, -2
  %4 = add i32 %1, %.neg
  %5 = tail call i32 @roll(i32 1, i32 20) #8
  %6 = icmp sge i32 %5, %4
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define void @do_run(i8 signext %ch) #0 {
  store i8 1, i8* @running, align 1, !tbaa !5
  store i8 0, i8* @after, align 1, !tbaa !5
  store i8 %ch, i8* @runch, align 1, !tbaa !28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_move(i32 %dy, i32 %dx) #0 {
  store i8 0, i8* @firstmove, align 1, !tbaa !5
  %1 = load i32* @no_move, align 4, !tbaa !38
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %6, label %3

; <label>:3                                       ; preds = %0
  %4 = add nsw i32 %1, -1
  store i32 %4, i32* @no_move, align 4, !tbaa !38
  %5 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([37 x i8]* @.str654, i64 0, i64 0)) #8
  br label %298

; <label>:6                                       ; preds = %0
  %7 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %8 = and i16 %7, 512
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %turnref.exit, label %10

; <label>:10                                      ; preds = %6
  %11 = tail call i32 @rnd(i32 5) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %turnref.exit, label %13

; <label>:13                                      ; preds = %10
  %14 = tail call %struct.coord* @rndmove(%union.thing* @player)
  %15 = load i64* bitcast (%struct.coord* @rndmove.ret to i64*), align 8
  store i64 %15, i64* bitcast (%struct.coord* @nh to i64*), align 4
  %trunc = trunc i64 %15 to i32
  %16 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %trunc, %17
  %19 = lshr i64 %15, 32
  %20 = trunc i64 %19 to i32
  %21 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4
  %22 = icmp eq i32 %20, %21
  %or.cond36 = and i1 %18, %22
  br i1 %or.cond36, label %23, label %29

; <label>:23                                      ; preds = %13
  store i8 0, i8* @after, align 1, !tbaa !5
  store i8 0, i8* @running, align 1, !tbaa !5
  store i8 0, i8* @to_death, align 1, !tbaa !5
  br label %298

turnref.exit:                                     ; preds = %226, %204, %165, %142, %10, %6
  %.06 = phi i32 [ %dx, %10 ], [ %dx, %6 ], [ 0, %142 ], [ 0, %165 ], [ %.14, %204 ], [ %.14, %226 ]
  %.0 = phi i32 [ %dy, %10 ], [ %dy, %6 ], [ %.12, %142 ], [ %.12, %165 ], [ 0, %204 ], [ 0, %226 ]
  %24 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %25 = add nsw i32 %24, %.0
  store i32 %25, i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 1), align 4, !tbaa !20
  %26 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %27 = trunc i64 %26 to i32
  %28 = add nsw i32 %27, %.06
  store i32 %28, i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 0), align 4, !tbaa !21
  br label %29

; <label>:29                                      ; preds = %turnref.exit, %13
  %30 = phi i32 [ %20, %13 ], [ %25, %turnref.exit ]
  %31 = phi i32 [ %trunc, %13 ], [ %28, %turnref.exit ]
  %32 = icmp ugt i32 %31, 79
  %33 = icmp slt i32 %30, 1
  %or.cond3 = or i1 %32, %33
  %34 = icmp sgt i32 %30, 22
  %or.cond5 = or i1 %or.cond3, %34
  br i1 %or.cond5, label %._crit_edge, label %35

._crit_edge:                                      ; preds = %29
  %.pre = load i8* @running, align 1
  br label %87

; <label>:35                                      ; preds = %29
  %36 = tail call zeroext i1 @diag_ok(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord* @nh) #8
  br i1 %36, label %38, label %37

; <label>:37                                      ; preds = %35
  store i8 0, i8* @after, align 1, !tbaa !5
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %298

; <label>:38                                      ; preds = %35
  %39 = load i8* @running, align 1, !tbaa !5, !range !7
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %._crit_edge33, label %41

._crit_edge33:                                    ; preds = %38
  %.pre34 = load i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 0), align 4, !tbaa !21
  br label %51

; <label>:41                                      ; preds = %38
  %42 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %43 = trunc i64 %42 to i32
  %44 = load i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 0), align 4, !tbaa !21
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %51

; <label>:46                                      ; preds = %41
  %47 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %48 = load i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 1), align 4, !tbaa !20
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %51

; <label>:50                                      ; preds = %46
  store i8 0, i8* @running, align 1, !tbaa !5
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %51

; <label>:51                                      ; preds = %50, %46, %41, %._crit_edge33
  %52 = phi i32 [ %.pre34, %._crit_edge33 ], [ %43, %50 ], [ %43, %46 ], [ %44, %41 ]
  %53 = phi i8 [ 0, %._crit_edge33 ], [ 0, %50 ], [ %39, %46 ], [ %39, %41 ]
  %54 = shl i32 %52, 5
  %55 = load i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 1), align 4, !tbaa !20
  %56 = add nsw i32 %54, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %57, i32 1
  %59 = load i8* %58, align 1, !tbaa !36
  %60 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %57, i32 2
  %61 = load %union.thing** %60, align 8, !tbaa !43
  %62 = icmp eq %union.thing* %61, null
  br i1 %62, label %65, label %63

; <label>:63                                      ; preds = %51
  %64 = getelementptr inbounds %union.thing* %61, i64 0, i32 0, i32 5
  br label %67

; <label>:65                                      ; preds = %51
  %66 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %57, i32 0
  br label %67

; <label>:67                                      ; preds = %65, %63
  %.sink.in = phi i8* [ %64, %63 ], [ %66, %65 ]
  %.sink = load i8* %.sink.in, align 1
  %68 = sext i8 %59 to i32
  %69 = and i32 %68, 16
  %70 = icmp ne i32 %69, 0
  %.not = xor i1 %70, true
  %71 = icmp eq i8 %.sink, 46
  %or.cond = and i1 %71, %.not
  %72 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  br i1 %or.cond, label %73, label %79

; <label>:73                                      ; preds = %67
  %74 = and i16 %72, 8
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %76, label %85

; <label>:76                                      ; preds = %73
  %77 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %57, i32 0
  store i8 94, i8* %77, align 8, !tbaa !33
  %78 = or i8 %59, 16
  store i8 %78, i8* %58, align 1, !tbaa !36
  br label %85

; <label>:79                                      ; preds = %67
  %80 = and i16 %72, 256
  %81 = icmp eq i16 %80, 0
  %82 = icmp eq i8 %.sink, 70
  %or.cond9 = or i1 %81, %82
  br i1 %or.cond9, label %85, label %83

; <label>:83                                      ; preds = %79
  %84 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str1655, i64 0, i64 0)) #8
  br label %298

; <label>:85                                      ; preds = %79, %76, %73
  %ch.0 = phi i8 [ %.sink, %79 ], [ 46, %73 ], [ 94, %76 ]
  %86 = sext i8 %ch.0 to i32
  switch i32 %86, label %249 [
    i32 32, label %87
    i32 124, label %87
    i32 45, label %87
    i32 43, label %230
    i32 94, label %242
    i32 35, label %244
    i32 46, label %246
    i32 37, label %.thread
  ]

; <label>:87                                      ; preds = %85, %85, %85, %._crit_edge
  %88 = phi i8 [ %.pre, %._crit_edge ], [ %53, %85 ], [ %53, %85 ], [ %53, %85 ]
  %89 = load i8* @passgo, align 1, !tbaa !5, !range !7
  %90 = icmp eq i8 %89, 0
  %91 = icmp eq i8 %88, 0
  %or.cond11 = or i1 %90, %91
  br i1 %or.cond11, label %229, label %92

; <label>:92                                      ; preds = %87
  %93 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %94 = getelementptr inbounds %struct.room* %93, i64 0, i32 4
  %95 = load i16* %94, align 2, !tbaa !39
  %96 = and i16 %95, 2
  %97 = icmp eq i16 %96, 0
  br i1 %97, label %229, label %98

; <label>:98                                      ; preds = %92
  %99 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %100 = and i16 %99, 4
  %101 = icmp eq i16 %100, 0
  br i1 %101, label %102, label %229

; <label>:102                                     ; preds = %98
  %103 = load i8* @runch, align 1, !tbaa !28
  %104 = sext i8 %103 to i32
  switch i32 %104, label %229 [
    i32 104, label %._crit_edge25
    i32 108, label %._crit_edge25
    i32 106, label %._crit_edge29
    i32 107, label %._crit_edge30
  ]

._crit_edge30:                                    ; preds = %102
  %105 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  br label %168

._crit_edge29:                                    ; preds = %102
  %106 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  br label %168

._crit_edge25:                                    ; preds = %102, %102
  %107 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %.turn_ok.exit.thread_crit_edge, label %109

.turn_ok.exit.thread_crit_edge:                   ; preds = %._crit_edge25
  %.pre28 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  br label %turn_ok.exit.thread

; <label>:109                                     ; preds = %._crit_edge25
  %110 = add nsw i32 %107, -1
  %111 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %112 = trunc i64 %111 to i32
  %113 = shl i32 %112, 5
  %114 = add nsw i32 %110, %113
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %115, i32 0
  %117 = load i8* %116, align 8, !tbaa !33
  %118 = icmp eq i8 %117, 43
  %119 = lshr i64 %111, 32
  %120 = trunc i64 %119 to i32
  br i1 %118, label %turn_ok.exit, label %121

; <label>:121                                     ; preds = %109
  %122 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %115, i32 1
  %123 = load i8* %122, align 1, !tbaa !36
  %124 = and i8 %123, -112
  %125 = icmp eq i8 %124, -112
  br label %turn_ok.exit

turn_ok.exit:                                     ; preds = %121, %109
  %.ph = phi i1 [ %125, %121 ], [ true, %109 ]
  %126 = icmp eq i32 %120, 22
  br i1 %126, label %turn_ok.exit.turn_ok.exit15_crit_edge, label %turn_ok.exit.thread

turn_ok.exit.turn_ok.exit15_crit_edge:            ; preds = %turn_ok.exit
  br i1 %.ph, label %142, label %229

turn_ok.exit.thread:                              ; preds = %turn_ok.exit, %.turn_ok.exit.thread_crit_edge
  %127 = phi i32 [ %112, %turn_ok.exit ], [ %.pre28, %.turn_ok.exit.thread_crit_edge ]
  %128 = phi i1 [ %.ph, %turn_ok.exit ], [ false, %.turn_ok.exit.thread_crit_edge ]
  %129 = phi i32 [ %120, %turn_ok.exit ], [ 1, %.turn_ok.exit.thread_crit_edge ]
  %130 = add nsw i32 %129, 1
  %131 = shl i32 %127, 5
  %132 = add nsw i32 %130, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %133, i32 0
  %135 = load i8* %134, align 8, !tbaa !33
  %136 = icmp eq i8 %135, 43
  br i1 %136, label %.turn_ok.exit15_crit_edge, label %turn_ok.exit15

.turn_ok.exit15_crit_edge:                        ; preds = %turn_ok.exit.thread
  br i1 %128, label %229, label %142

turn_ok.exit15:                                   ; preds = %turn_ok.exit.thread
  %137 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %133, i32 1
  %138 = load i8* %137, align 1, !tbaa !36
  %139 = and i8 %138, -112
  %140 = icmp eq i8 %139, -112
  %141 = xor i1 %128, %140
  br i1 %141, label %142, label %229

; <label>:142                                     ; preds = %turn_ok.exit15, %.turn_ok.exit15_crit_edge, %turn_ok.exit.turn_ok.exit15_crit_edge
  %143 = phi i1 [ true, %turn_ok.exit.turn_ok.exit15_crit_edge ], [ %128, %turn_ok.exit15 ], [ false, %.turn_ok.exit15_crit_edge ]
  %. = select i1 %143, i8 107, i8 106
  %.12 = select i1 %143, i32 -1, i32 1
  store i8 %., i8* @runch, align 1, !tbaa !28
  %144 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %145 = trunc i64 %144 to i32
  %146 = shl i32 %145, 5
  %147 = lshr i64 %144, 32
  %148 = trunc i64 %147 to i32
  %149 = add nsw i32 %146, %148
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %150, i32 1
  %152 = load i8* %151, align 1, !tbaa !36
  %153 = and i8 %152, 64
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %turnref.exit

; <label>:155                                     ; preds = %142
  %156 = load i8* @jump, align 1, !tbaa !5, !range !7
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %165, label %158

; <label>:158                                     ; preds = %155
  %159 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %160 = tail call i32 @leaveok(%struct._win_st* %159, i1 zeroext true) #8
  %161 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %162 = tail call i32 @wrefresh(%struct._win_st* %161) #8
  %163 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %164 = tail call i32 @leaveok(%struct._win_st* %163, i1 zeroext false) #8
  %.pre.i = load i8* %151, align 1, !tbaa !36
  br label %165

; <label>:165                                     ; preds = %158, %155
  %166 = phi i8 [ %152, %155 ], [ %.pre.i, %158 ]
  %167 = or i8 %166, 64
  store i8 %167, i8* %151, align 1, !tbaa !36
  br label %turnref.exit

; <label>:168                                     ; preds = %._crit_edge29, %._crit_edge30
  %.sink37.in = phi i64 [ %105, %._crit_edge30 ], [ %106, %._crit_edge29 ]
  %.sink37 = lshr i64 %.sink37.in, 32
  %169 = trunc i64 %.sink37 to i32
  %170 = trunc i64 %.sink37.in to i32
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %turn_ok.exit16.thread, label %172

; <label>:172                                     ; preds = %168
  %173 = shl i32 %170, 5
  %174 = add i32 %173, -32
  %175 = add nsw i32 %174, %169
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %176, i32 0
  %178 = load i8* %177, align 8, !tbaa !33
  %179 = icmp eq i8 %178, 43
  br i1 %179, label %turn_ok.exit16, label %180

; <label>:180                                     ; preds = %172
  %181 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %176, i32 1
  %182 = load i8* %181, align 1, !tbaa !36
  %183 = and i8 %182, -112
  %184 = icmp eq i8 %183, -112
  br label %turn_ok.exit16

turn_ok.exit16:                                   ; preds = %180, %172
  %.ph20 = phi i1 [ %184, %180 ], [ true, %172 ]
  %185 = trunc i64 %.sink37.in to i32
  %186 = icmp eq i32 %185, 79
  %187 = lshr i64 %.sink37.in, 32
  %188 = trunc i64 %187 to i32
  br i1 %186, label %turn_ok.exit16.turn_ok.exit17_crit_edge, label %turn_ok.exit16.thread

turn_ok.exit16.turn_ok.exit17_crit_edge:          ; preds = %turn_ok.exit16
  br i1 %.ph20, label %204, label %229

turn_ok.exit16.thread:                            ; preds = %turn_ok.exit16, %168
  %189 = phi i32 [ %188, %turn_ok.exit16 ], [ %169, %168 ]
  %190 = phi i1 [ %.ph20, %turn_ok.exit16 ], [ false, %168 ]
  %191 = phi i32 [ %185, %turn_ok.exit16 ], [ 0, %168 ]
  %192 = shl i32 %191, 5
  %193 = add i32 %192, 32
  %194 = add nsw i32 %193, %189
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %195, i32 0
  %197 = load i8* %196, align 8, !tbaa !33
  %198 = icmp eq i8 %197, 43
  br i1 %198, label %.turn_ok.exit17_crit_edge, label %turn_ok.exit17

.turn_ok.exit17_crit_edge:                        ; preds = %turn_ok.exit16.thread
  br i1 %190, label %229, label %204

turn_ok.exit17:                                   ; preds = %turn_ok.exit16.thread
  %199 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %195, i32 1
  %200 = load i8* %199, align 1, !tbaa !36
  %201 = and i8 %200, -112
  %202 = icmp eq i8 %201, -112
  %203 = xor i1 %190, %202
  br i1 %203, label %204, label %229

; <label>:204                                     ; preds = %turn_ok.exit17, %.turn_ok.exit17_crit_edge, %turn_ok.exit16.turn_ok.exit17_crit_edge
  %205 = phi i1 [ true, %turn_ok.exit16.turn_ok.exit17_crit_edge ], [ %190, %turn_ok.exit17 ], [ false, %.turn_ok.exit17_crit_edge ]
  %.13 = select i1 %205, i8 104, i8 108
  %.14 = select i1 %205, i32 -1, i32 1
  store i8 %.13, i8* @runch, align 1, !tbaa !28
  %206 = trunc i64 %.sink37.in to i32
  %207 = shl i32 %206, 5
  %208 = lshr i64 %.sink37.in, 32
  %209 = trunc i64 %208 to i32
  %210 = add nsw i32 %207, %209
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %211, i32 1
  %213 = load i8* %212, align 1, !tbaa !36
  %214 = and i8 %213, 64
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %turnref.exit

; <label>:216                                     ; preds = %204
  %217 = load i8* @jump, align 1, !tbaa !5, !range !7
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %226, label %219

; <label>:219                                     ; preds = %216
  %220 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %221 = tail call i32 @leaveok(%struct._win_st* %220, i1 zeroext true) #8
  %222 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %223 = tail call i32 @wrefresh(%struct._win_st* %222) #8
  %224 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %225 = tail call i32 @leaveok(%struct._win_st* %224, i1 zeroext false) #8
  %.pre.i18 = load i8* %212, align 1, !tbaa !36
  br label %226

; <label>:226                                     ; preds = %219, %216
  %227 = phi i8 [ %213, %216 ], [ %.pre.i18, %219 ]
  %228 = or i8 %227, 64
  store i8 %228, i8* %212, align 1, !tbaa !36
  br label %turnref.exit

; <label>:229                                     ; preds = %turn_ok.exit17, %.turn_ok.exit17_crit_edge, %turn_ok.exit16.turn_ok.exit17_crit_edge, %turn_ok.exit15, %.turn_ok.exit15_crit_edge, %turn_ok.exit.turn_ok.exit15_crit_edge, %102, %98, %92, %87
  store i8 0, i8* @running, align 1, !tbaa !5
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %298

; <label>:230                                     ; preds = %85
  store i8 0, i8* @running, align 1, !tbaa !5
  %231 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %232 = trunc i64 %231 to i32
  %233 = shl i32 %232, 5
  %234 = lshr i64 %231, 32
  %235 = trunc i64 %234 to i32
  %236 = add nsw i32 %233, %235
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %237, i32 1
  %239 = load i8* %238, align 1, !tbaa !36
  %240 = icmp slt i8 %239, 0
  br i1 %240, label %241, label %272

; <label>:241                                     ; preds = %230
  tail call void @enter_room(%struct.coord* @nh) #8
  br label %272

; <label>:242                                     ; preds = %85
  %243 = tail call signext i8 @be_trapped(%struct.coord* @nh)
  switch i8 %243, label %272 [
    i8 0, label %298
    i8 4, label %298
  ]

; <label>:244                                     ; preds = %85
  %245 = tail call %struct.room* @roomin(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  store %struct.room* %245, %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  br label %272

; <label>:246                                     ; preds = %85
  br i1 %70, label %272, label %247

; <label>:247                                     ; preds = %246
  %248 = tail call signext i8 @be_trapped(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2))
  br label %272

.thread:                                          ; preds = %85
  store i8 1, i8* @seenstairs, align 1, !tbaa !5
  store i8 0, i8* @running, align 1, !tbaa !5
  br label %250

; <label>:249                                     ; preds = %85
  store i8 0, i8* @running, align 1, !tbaa !5
  %isascii.i.i23 = icmp sgt i8 %ch.0, -1
  br i1 %isascii.i.i23, label %250, label %255

; <label>:250                                     ; preds = %249, %.thread
  %251 = sext i8 %ch.0 to i64
  %252 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %251
  %253 = load i32* %252, align 4, !tbaa !38
  %254 = and i32 %253, 32768
  br label %isupper.exit

; <label>:255                                     ; preds = %249
  %256 = tail call i32 @__maskrune(i32 %86, i64 32768) #8
  br label %isupper.exit

isupper.exit:                                     ; preds = %255, %250
  %.sink.i.in.i = phi i32 [ %254, %250 ], [ %256, %255 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %257, label %266

; <label>:257                                     ; preds = %isupper.exit
  %258 = load i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 0), align 4, !tbaa !21
  %259 = shl i32 %258, 5
  %260 = load i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 1), align 4, !tbaa !20
  %261 = add nsw i32 %259, %260
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %262, i32 2
  %264 = load %union.thing** %263, align 8, !tbaa !43
  %265 = icmp eq %union.thing* %264, null
  br i1 %265, label %269, label %266

; <label>:266                                     ; preds = %257, %isupper.exit
  %267 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %268 = tail call i32 @fight(%struct.coord* @nh, %union.thing* %267, i1 zeroext false) #8
  br label %298

; <label>:269                                     ; preds = %257
  %270 = icmp eq i8 %ch.0, 37
  br i1 %270, label %272, label %271

; <label>:271                                     ; preds = %269
  store i8 %ch.0, i8* @take, align 1, !tbaa !28
  br label %272

; <label>:272                                     ; preds = %271, %269, %247, %246, %244, %242, %241, %230
  %273 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %274 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %275 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %276 = tail call i32 @wmove(%struct._win_st* %273, i32 %274, i32 %275) #8
  %277 = icmp eq i32 %276, -1
  br i1 %277, label %283, label %278

; <label>:278                                     ; preds = %272
  %279 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %280 = tail call signext i8 (...)* bitcast (i8 ()* @floor_at to i8 (...)*)() #8
  %281 = sext i8 %280 to i32
  %282 = tail call i32 @waddch(%struct._win_st* %279, i32 %281) #8
  br label %283

; <label>:283                                     ; preds = %278, %272
  %284 = and i32 %68, 128
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %296, label %286

; <label>:286                                     ; preds = %283
  %287 = load i32* getelementptr inbounds (%struct.coord* @oldpos, i64 0, i32 0), align 4, !tbaa !21
  %288 = shl i32 %287, 5
  %289 = load i32* getelementptr inbounds (%struct.coord* @oldpos, i64 0, i32 1), align 4, !tbaa !20
  %290 = add nsw i32 %288, %289
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %291, i32 0
  %293 = load i8* %292, align 8, !tbaa !33
  %294 = icmp eq i8 %293, 43
  br i1 %294, label %295, label %296

; <label>:295                                     ; preds = %286
  tail call void @leave_room(%struct.coord* @nh) #8
  br label %296

; <label>:296                                     ; preds = %295, %286, %283
  %297 = load i64* bitcast (%struct.coord* @nh to i64*), align 4
  store i64 %297, i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  br label %298

; <label>:298                                     ; preds = %296, %266, %242, %242, %229, %83, %37, %23, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.coord* @rndmove(%union.thing* %who) #0 {
  %1 = getelementptr inbounds %union.thing* %who, i64 0, i32 0, i32 2
  %2 = getelementptr inbounds %union.thing* %who, i64 0, i32 0, i32 2, i32 1
  %3 = load i32* %2, align 4, !tbaa !23
  %4 = tail call i32 @rnd(i32 3) #8
  %5 = add i32 %3, -1
  %6 = add i32 %5, %4
  store i32 %6, i32* getelementptr inbounds (%struct.coord* @rndmove.ret, i64 0, i32 1), align 4, !tbaa !20
  %7 = getelementptr inbounds %struct.coord* %1, i64 0, i32 0
  %8 = load i32* %7, align 4, !tbaa !22
  %9 = tail call i32 @rnd(i32 3) #8
  %10 = add i32 %8, -1
  %11 = add i32 %10, %9
  store i32 %11, i32* getelementptr inbounds (%struct.coord* @rndmove.ret, i64 0, i32 0), align 8, !tbaa !21
  %12 = load i32* %2, align 4, !tbaa !23
  %13 = icmp eq i32 %6, %12
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %0
  %15 = load i32* %7, align 4, !tbaa !22
  %16 = icmp eq i32 %11, %15
  br i1 %16, label %.critedge, label %17

; <label>:17                                      ; preds = %14, %0
  %18 = tail call zeroext i1 @diag_ok(%struct.coord* %1, %struct.coord* @rndmove.ret) #8
  br i1 %18, label %19, label %52

; <label>:19                                      ; preds = %17
  %20 = shl i32 %11, 5
  %21 = add nsw i32 %20, %6
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %22, i32 2
  %24 = load %union.thing** %23, align 8, !tbaa !43
  %25 = icmp eq %union.thing* %24, null
  br i1 %25, label %28, label %26

; <label>:26                                      ; preds = %19
  %27 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 5
  br label %30

; <label>:28                                      ; preds = %19
  %29 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %22, i32 0
  br label %30

; <label>:30                                      ; preds = %28, %26
  %.sink.in = phi i8* [ %27, %26 ], [ %29, %28 ]
  %.sink = load i8* %.sink.in, align 1
  %31 = sext i8 %.sink to i32
  %32 = tail call i32 @step_ok(i32 %31) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %52, label %34

; <label>:34                                      ; preds = %30
  %35 = icmp eq i8 %.sink, 63
  br i1 %35, label %.preheader, label %.critedge

.preheader:                                       ; preds = %34
  %obj.03 = load %union.thing** @lvl_obj, align 8
  %36 = icmp eq %union.thing* %obj.03, null
  br i1 %36, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %44, %.preheader
  %obj.04 = phi %union.thing* [ %obj.0, %44 ], [ %obj.03, %.preheader ]
  %37 = getelementptr inbounds %union.thing* %obj.04, i64 0, i32 0, i32 2, i32 1
  %38 = getelementptr inbounds i32* %37, i64 1
  %39 = load i32* %38, align 4, !tbaa !41
  %40 = icmp eq i32 %6, %39
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %.lr.ph
  %42 = load i32* %37, align 4, !tbaa !40
  %43 = icmp eq i32 %11, %42
  br i1 %43, label %47, label %44

; <label>:44                                      ; preds = %41, %.lr.ph
  %45 = getelementptr inbounds %union.thing* %obj.04, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %45, align 8
  %46 = icmp eq %union.thing* %obj.0, null
  br i1 %46, label %.critedge, label %.lr.ph

; <label>:47                                      ; preds = %41
  %48 = getelementptr inbounds %union.thing* %obj.04, i64 0, i32 0, i32 9, i32 5, i64 4
  %49 = bitcast i8* %48 to i32*
  %50 = load i32* %49, align 4, !tbaa !50
  %51 = icmp eq i32 %50, 10
  br i1 %51, label %52, label %.critedge

; <label>:52                                      ; preds = %47, %30, %17
  %53 = bitcast %struct.coord* %1 to i64*
  %54 = load i64* %53, align 4
  store i64 %54, i64* bitcast (%struct.coord* @rndmove.ret to i64*), align 8
  br label %.critedge

.critedge:                                        ; preds = %52, %47, %44, %.preheader, %34, %14
  ret %struct.coord* @rndmove.ret
}

; Function Attrs: nounwind readonly ssp uwtable
define zeroext i1 @turn_ok(i32 %y, i32 %x) #1 {
  %1 = shl i32 %x, 5
  %2 = add nsw i32 %1, %y
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %3, i32 0
  %5 = load i8* %4, align 8, !tbaa !33
  %6 = icmp eq i8 %5, 43
  br i1 %6, label %12, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %3, i32 1
  %9 = load i8* %8, align 1, !tbaa !36
  %10 = and i8 %9, -112
  %11 = icmp eq i8 %10, -112
  br label %12

; <label>:12                                      ; preds = %7, %0
  %13 = phi i1 [ true, %0 ], [ %11, %7 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @be_trapped(%struct.coord* nocapture readonly %tc) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 8
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %4, label %151

; <label>:4                                       ; preds = %0
  store i8 0, i8* @running, align 1, !tbaa !5
  store i32 0, i32* @count, align 4, !tbaa !38
  %5 = getelementptr inbounds %struct.coord* %tc, i64 0, i32 0
  %6 = load i32* %5, align 4, !tbaa !21
  %7 = shl i32 %6, 5
  %8 = getelementptr inbounds %struct.coord* %tc, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !20
  %10 = add nsw i32 %7, %9
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %11, i32 0
  store i8 94, i8* %12, align 8, !tbaa !33
  %13 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %11, i32 1
  %14 = load i8* %13, align 1, !tbaa !36
  %15 = and i8 %14, 7
  %16 = or i8 %14, 64
  store i8 %16, i8* %13, align 1, !tbaa !36
  %17 = zext i8 %15 to i32
  switch i32 %17, label %150 [
    i32 0, label %18
    i32 3, label %22
    i32 7, label %27
    i32 2, label %71
    i32 1, label %78
    i32 4, label %101
    i32 5, label %110
    i32 6, label %147
  ]

; <label>:18                                      ; preds = %4
  %19 = load i32* @level, align 4, !tbaa !38
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* @level, align 4, !tbaa !38
  tail call void (...)* bitcast (void ()* @new_level to void (...)*)() #8
  %21 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([22 x i8]* @.str2656, i64 0, i64 0)) #8
  br label %150

; <label>:22                                      ; preds = %4
  %23 = tail call i32 @spread(i32 3) #8
  %24 = load i32* @no_move, align 4, !tbaa !38
  %25 = add nsw i32 %24, %23
  store i32 %25, i32* @no_move, align 4, !tbaa !38
  %26 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str3657, i64 0, i64 0)) #8
  br label %150

; <label>:27                                      ; preds = %4
  %28 = tail call i32 @rnd(i32 11) #8
  switch i32 %28, label %150 [
    i32 0, label %29
    i32 1, label %31
    i32 2, label %38
    i32 3, label %40
    i32 4, label %42
    i32 5, label %49
    i32 6, label %51
    i32 7, label %58
    i32 8, label %60
    i32 9, label %62
    i32 10, label %64
  ]

; <label>:29                                      ; preds = %27
  %30 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([41 x i8]* @.str4658, i64 0, i64 0)) #8
  br label %150

; <label>:31                                      ; preds = %27
  %32 = load i32* @cNCOLORS, align 4, !tbaa !38
  %33 = tail call i32 @rnd(i32 %32) #8
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %34
  %36 = load i8** %35, align 8, !tbaa !1
  %37 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([36 x i8]* @.str5659, i64 0, i64 0), i8* %36) #8
  br label %150

; <label>:38                                      ; preds = %27
  %39 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([42 x i8]* @.str6660, i64 0, i64 0)) #8
  br label %150

; <label>:40                                      ; preds = %27
  %41 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([48 x i8]* @.str7661, i64 0, i64 0)) #8
  br label %150

; <label>:42                                      ; preds = %27
  %43 = load i32* @cNCOLORS, align 4, !tbaa !38
  %44 = tail call i32 @rnd(i32 %43) #8
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %45
  %47 = load i8** %46, align 8, !tbaa !1
  %48 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([32 x i8]* @.str8662, i64 0, i64 0), i8* %47) #8
  br label %150

; <label>:49                                      ; preds = %27
  %50 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str9663, i64 0, i64 0)) #8
  br label %150

; <label>:51                                      ; preds = %27
  %52 = load i32* @cNCOLORS, align 4, !tbaa !38
  %53 = tail call i32 @rnd(i32 %52) #8
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %54
  %56 = load i8** %55, align 8, !tbaa !1
  %57 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([34 x i8]* @.str10664, i64 0, i64 0), i8* %56) #8
  br label %150

; <label>:58                                      ; preds = %27
  %59 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str11665, i64 0, i64 0)) #8
  br label %150

; <label>:60                                      ; preds = %27
  %61 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([32 x i8]* @.str12666, i64 0, i64 0)) #8
  br label %150

; <label>:62                                      ; preds = %27
  %63 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([34 x i8]* @.str13667, i64 0, i64 0)) #8
  br label %150

; <label>:64                                      ; preds = %27
  %65 = load i32* @cNCOLORS, align 4, !tbaa !38
  %66 = tail call i32 @rnd(i32 %65) #8
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %67
  %69 = load i8** %68, align 8, !tbaa !1
  %70 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str14668, i64 0, i64 0), i8* %69) #8
  br label %150

; <label>:71                                      ; preds = %4
  %72 = tail call i32 @spread(i32 5) #8
  %73 = load i32* @no_command, align 4, !tbaa !38
  %74 = add nsw i32 %73, %72
  store i32 %74, i32* @no_command, align 4, !tbaa !38
  %75 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %76 = and i16 %75, -8193
  store i16 %76, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %77 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([54 x i8]* @.str15669, i64 0, i64 0)) #8
  br label %150

; <label>:78                                      ; preds = %4
  %79 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %80 = add nsw i32 %79, -1
  %81 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 3), align 4, !tbaa !106
  %82 = tail call i32 @swing(i32 %80, i32 %81, i32 1) #8
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %93, label %84

; <label>:84                                      ; preds = %78
  %85 = tail call i32 @roll(i32 1, i32 6) #8
  %86 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %87 = sub nsw i32 %86, %85
  store i32 %87, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %88 = icmp slt i32 %87, 1
  br i1 %88, label %89, label %91

; <label>:89                                      ; preds = %84
  %90 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([20 x i8]* @.str16670, i64 0, i64 0)) #8
  tail call void @death(i8 signext 97) #8
  br label %150

; <label>:91                                      ; preds = %84
  %92 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str17671, i64 0, i64 0)) #8
  br label %150

; <label>:93                                      ; preds = %78
  %94 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  tail call void @init_weapon(%union.thing* %94, i32 3) #8
  %95 = getelementptr inbounds %union.thing* %94, i64 0, i32 0, i32 9, i32 5
  %96 = bitcast [13 x i8]* %95 to i32*
  store i32 1, i32* %96, align 4, !tbaa !78
  %97 = getelementptr inbounds %union.thing* %94, i64 0, i32 0, i32 2, i32 1
  %98 = bitcast i32* %97 to i64*
  %99 = load i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  store i64 %99, i64* %98, align 4
  tail call void @fall(%union.thing* %94, i1 zeroext false) #8
  %100 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str18672, i64 0, i64 0)) #8
  br label %150

; <label>:101                                     ; preds = %4
  tail call void (...)* bitcast (void ()* @teleport to void (...)*)() #8
  %102 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %103 = load i32* %8, align 4, !tbaa !20
  %104 = load i32* %5, align 4, !tbaa !21
  %105 = tail call i32 @wmove(%struct._win_st* %102, i32 %103, i32 %104) #8
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %150, label %107

; <label>:107                                     ; preds = %101
  %108 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %109 = tail call i32 @waddch(%struct._win_st* %108, i32 94) #8
  br label %150

; <label>:110                                     ; preds = %4
  %111 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %112 = add nsw i32 %111, 1
  %113 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 3), align 4, !tbaa !106
  %114 = tail call i32 @swing(i32 %112, i32 %113, i32 1) #8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

; <label>:116                                     ; preds = %110
  %117 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([46 x i8]* @.str19673, i64 0, i64 0)) #8
  br label %150

; <label>:118                                     ; preds = %110
  %119 = tail call i32 @roll(i32 1, i32 4) #8
  %120 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %121 = sub nsw i32 %120, %119
  store i32 %121, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %122 = icmp slt i32 %121, 1
  br i1 %122, label %123, label %125

; <label>:123                                     ; preds = %118
  %124 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([27 x i8]* @.str20674, i64 0, i64 0)) #8
  tail call void @death(i8 signext 100) #8
  br label %125

; <label>:125                                     ; preds = %123, %118
  %126 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %127 = icmp eq %union.thing* %126, null
  br i1 %127, label %133, label %128

; <label>:128                                     ; preds = %125
  %129 = getelementptr inbounds %union.thing* %126, i64 0, i32 0, i32 9, i32 5, i64 4
  %130 = bitcast i8* %129 to i32*
  %131 = load i32* %130, align 4, !tbaa !50
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %145, label %133

; <label>:133                                     ; preds = %128, %125
  %134 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %135 = icmp eq %union.thing* %134, null
  br i1 %135, label %141, label %136

; <label>:136                                     ; preds = %133
  %137 = getelementptr inbounds %union.thing* %134, i64 0, i32 0, i32 9, i32 5, i64 4
  %138 = bitcast i8* %137 to i32*
  %139 = load i32* %138, align 4, !tbaa !50
  %140 = icmp eq i32 %139, 2
  br i1 %140, label %145, label %141

; <label>:141                                     ; preds = %136, %133
  %142 = tail call i32 @save(i32 0) #8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

; <label>:144                                     ; preds = %141
  tail call void @chg_str(i32 -1) #8
  br label %145

; <label>:145                                     ; preds = %144, %141, %136, %128
  %146 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([42 x i8]* @.str21675, i64 0, i64 0)) #8
  br label %150

; <label>:147                                     ; preds = %4
  %148 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([37 x i8]* @.str22676, i64 0, i64 0)) #8
  %149 = load %union.thing** @cur_armor, align 8, !tbaa !1
  tail call void @rust_armor(%union.thing* %149)
  br label %150

; <label>:150                                     ; preds = %147, %145, %116, %107, %101, %93, %91, %89, %71, %64, %62, %60, %58, %51, %49, %42, %40, %38, %31, %29, %27, %22, %18, %4
  tail call void (...)* bitcast (void ()* @flush_type to void (...)*)() #8
  br label %151

; <label>:151                                     ; preds = %150, %0
  %.0 = phi i8 [ %15, %150 ], [ 6, %0 ]
  ret i8 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @turnref() #0 {
  %1 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %2 = trunc i64 %1 to i32
  %3 = shl i32 %2, 5
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 1
  %9 = load i8* %8, align 1, !tbaa !36
  %10 = and i8 %9, 64
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %25

; <label>:12                                      ; preds = %0
  %13 = load i8* @jump, align 1, !tbaa !5, !range !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %15

; <label>:15                                      ; preds = %12
  %16 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %17 = tail call i32 @leaveok(%struct._win_st* %16, i1 zeroext true) #8
  %18 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %19 = tail call i32 @wrefresh(%struct._win_st* %18) #8
  %20 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %21 = tail call i32 @leaveok(%struct._win_st* %20, i1 zeroext false) #8
  %.pre = load i8* %8, align 1, !tbaa !36
  br label %22

; <label>:22                                      ; preds = %15, %12
  %23 = phi i8 [ %9, %12 ], [ %.pre, %15 ]
  %24 = or i8 %23, 64
  store i8 %24, i8* %8, align 1, !tbaa !36
  br label %25

; <label>:25                                      ; preds = %22, %0
  ret void
}

declare i32 @leaveok(%struct._win_st*, i1 zeroext) #2

; Function Attrs: nounwind ssp uwtable
define void @door_open(%struct.room* nocapture readonly %rp) #0 {
  %1 = getelementptr inbounds %struct.room* %rp, i64 0, i32 4
  %2 = load i16* %1, align 2, !tbaa !39
  %3 = and i16 %2, 2
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %5, label %.loopexit

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 1
  %8 = load i32* %7, align 4, !tbaa !32
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %.lr.ph5, label %.loopexit

.lr.ph5:                                          ; preds = %5
  %10 = load i32* %6, align 4, !tbaa !31
  %11 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 0
  %.pre = load i32* %12, align 4, !tbaa !30
  br label %13

; <label>:13                                      ; preds = %._crit_edge, %.lr.ph5
  %14 = phi i32 [ %.pre, %.lr.ph5 ], [ %47, %._crit_edge ]
  %y.03 = phi i32 [ %10, %.lr.ph5 ], [ %48, %._crit_edge ]
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %13
  %16 = load i32* %11, align 4, !tbaa !29
  %17 = sext i32 %16 to i64
  br label %18

; <label>:18                                      ; preds = %41, %.lr.ph
  %indvars.iv = phi i64 [ %17, %.lr.ph ], [ %indvars.iv.next, %41 ]
  %19 = trunc i64 %indvars.iv to i32
  %20 = shl i32 %19, 5
  %21 = add nsw i32 %20, %y.03
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %22, i32 2
  %24 = load %union.thing** %23, align 8, !tbaa !43
  %25 = icmp eq %union.thing* %24, null
  br i1 %25, label %28, label %26

; <label>:26                                      ; preds = %18
  %27 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 5
  br label %30

; <label>:28                                      ; preds = %18
  %29 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %22, i32 0
  br label %30

; <label>:30                                      ; preds = %28, %26
  %.sink.in = phi i8* [ %27, %26 ], [ %29, %28 ]
  %.sink = load i8* %.sink.in, align 1
  %isascii.i.i1 = icmp sgt i8 %.sink, -1
  br i1 %isascii.i.i1, label %31, label %36

; <label>:31                                      ; preds = %30
  %32 = sext i8 %.sink to i64
  %33 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %32
  %34 = load i32* %33, align 4, !tbaa !38
  %35 = and i32 %34, 32768
  br label %isupper.exit

; <label>:36                                      ; preds = %30
  %37 = sext i8 %.sink to i32
  %38 = tail call i32 @__maskrune(i32 %37, i64 32768) #8
  br label %isupper.exit

isupper.exit:                                     ; preds = %36, %31
  %.sink.i.in.i = phi i32 [ %35, %31 ], [ %38, %36 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %41, label %39

; <label>:39                                      ; preds = %isupper.exit
  %40 = tail call %union.thing* @wake_monster(i32 %y.03, i32 %19) #8
  br label %41

; <label>:41                                      ; preds = %39, %isupper.exit
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %42 = load i32* %11, align 4, !tbaa !29
  %43 = load i32* %12, align 4, !tbaa !30
  %44 = add nsw i32 %43, %42
  %45 = trunc i64 %indvars.iv.next to i32
  %46 = icmp slt i32 %45, %44
  br i1 %46, label %18, label %._crit_edge

._crit_edge:                                      ; preds = %41, %13
  %47 = phi i32 [ %14, %13 ], [ %43, %41 ]
  %48 = add nsw i32 %y.03, 1
  %49 = load i32* %6, align 4, !tbaa !31
  %50 = load i32* %7, align 4, !tbaa !32
  %51 = add nsw i32 %50, %49
  %52 = icmp slt i32 %48, %51
  br i1 %52, label %13, label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %5, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @rust_armor(%union.thing* %arm) #0 {
  %1 = icmp eq %union.thing* %arm, null
  br i1 %1, label %50, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast %union.thing* %arm to %struct.anon.0*
  %4 = getelementptr inbounds %union.thing* %arm, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 93
  br i1 %6, label %7, label %50

; <label>:7                                       ; preds = %2
  %8 = getelementptr inbounds %union.thing* %arm, i64 0, i32 0, i32 9, i32 5, i64 4
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !50
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %50, label %12

; <label>:12                                      ; preds = %7
  %13 = getelementptr inbounds %union.thing* %arm, i64 0, i32 0, i32 9, i32 6
  %14 = load i32* %13, align 4, !tbaa !70
  %15 = icmp sgt i32 %14, 8
  br i1 %15, label %50, label %16

; <label>:16                                      ; preds = %12
  %17 = getelementptr inbounds %struct.anon.0* %3, i64 0, i32 14
  %18 = load i32* %17, align 4, !tbaa !12
  %19 = and i32 %18, 32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %37

; <label>:21                                      ; preds = %16
  %22 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %23 = icmp eq %union.thing* %22, null
  br i1 %23, label %29, label %24

; <label>:24                                      ; preds = %21
  %25 = getelementptr inbounds %union.thing* %22, i64 0, i32 0, i32 9, i32 5, i64 4
  %26 = bitcast i8* %25 to i32*
  %27 = load i32* %26, align 4, !tbaa !50
  %28 = icmp eq i32 %27, 13
  br i1 %28, label %37, label %29

; <label>:29                                      ; preds = %24, %21
  %30 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %31 = icmp eq %union.thing* %30, null
  br i1 %31, label %42, label %32

; <label>:32                                      ; preds = %29
  %33 = getelementptr inbounds %union.thing* %30, i64 0, i32 0, i32 9, i32 5, i64 4
  %34 = bitcast i8* %33 to i32*
  %35 = load i32* %34, align 4, !tbaa !50
  %36 = icmp eq i32 %35, 13
  br i1 %36, label %37, label %42

; <label>:37                                      ; preds = %32, %24, %16
  %38 = load i8* @to_death, align 1, !tbaa !5, !range !7
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %50

; <label>:40                                      ; preds = %37
  %41 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([28 x i8]* @.str23677, i64 0, i64 0)) #8
  br label %50

; <label>:42                                      ; preds = %32, %29
  %43 = add nsw i32 %14, 1
  store i32 %43, i32* %13, align 4, !tbaa !70
  %44 = load i8* @terse, align 1, !tbaa !5, !range !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %48

; <label>:46                                      ; preds = %42
  %47 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str24678, i64 0, i64 0)) #8
  br label %50

; <label>:48                                      ; preds = %42
  %49 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str25679, i64 0, i64 0)) #8
  br label %50

; <label>:50                                      ; preds = %48, %46, %40, %37, %12, %7, %2, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @new_level() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, -257
  store i16 %2, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %3 = load i32* @level, align 4, !tbaa !38
  %4 = load i32* @max_level, align 4, !tbaa !38
  %5 = icmp sgt i32 %3, %4
  br i1 %5, label %6, label %.preheader8

; <label>:6                                       ; preds = %0
  store i32 %3, i32* @max_level, align 4, !tbaa !38
  br label %.preheader8

.preheader8:                                      ; preds = %6, %0
  br i1 true, label %.lr.ph10, label %._crit_edge11

.lr.ph10:                                         ; preds = %.lr.ph10, %.preheader8
  %pp.09 = phi %struct.PLACE* [ %10, %.lr.ph10 ], [ getelementptr inbounds ([2560 x %struct.PLACE]* @places, i64 0, i64 0), %.preheader8 ]
  %7 = getelementptr inbounds %struct.PLACE* %pp.09, i64 0, i32 0
  store i8 32, i8* %7, align 1, !tbaa !33
  %8 = getelementptr inbounds %struct.PLACE* %pp.09, i64 0, i32 1
  store i8 16, i8* %8, align 1, !tbaa !36
  %9 = getelementptr inbounds %struct.PLACE* %pp.09, i64 0, i32 2
  store %union.thing* null, %union.thing** %9, align 8, !tbaa !43
  %10 = getelementptr inbounds %struct.PLACE* %pp.09, i64 1
  %11 = icmp ult %struct.PLACE* %10, getelementptr inbounds ([2560 x %struct.PLACE]* @places, i64 1, i64 0)
  br i1 %11, label %.lr.ph10, label %._crit_edge11

._crit_edge11:                                    ; preds = %.lr.ph10, %.preheader8
  %12 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %13 = tail call i32 @wclear(%struct._win_st* %12) #8
  %tp.03 = load %union.thing** @mlist, align 8
  %14 = icmp eq %union.thing* %tp.03, null
  br i1 %14, label %._crit_edge7, label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6, %._crit_edge11
  %tp.04 = phi %union.thing* [ %tp.0, %.lr.ph6 ], [ %tp.03, %._crit_edge11 ]
  %15 = getelementptr inbounds %union.thing* %tp.04, i64 0, i32 0, i32 11
  tail call void @_free_list(%union.thing** %15) #8
  %16 = getelementptr inbounds %union.thing* %tp.04, i64 0, i32 0, i32 0
  %tp.0 = load %union.thing** %16, align 8
  %17 = icmp eq %union.thing* %tp.0, null
  br i1 %17, label %._crit_edge7, label %.lr.ph6

._crit_edge7:                                     ; preds = %.lr.ph6, %._crit_edge11
  tail call void @_free_list(%union.thing** @mlist) #8
  tail call void @_free_list(%union.thing** @lvl_obj) #8
  tail call void (...)* bitcast (void ()* @do_rooms to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @do_passages to void (...)*)() #8
  %18 = load i32* @no_food, align 4, !tbaa !38
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @no_food, align 4, !tbaa !38
  tail call void @put_things()
  %20 = tail call i32 @rnd(i32 10) #8
  %21 = load i32* @level, align 4, !tbaa !38
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %.loopexit

; <label>:23                                      ; preds = %._crit_edge7
  %24 = sdiv i32 %21, 4
  %25 = tail call i32 @rnd(i32 %24) #8
  %26 = add nsw i32 %25, 1
  %27 = icmp sgt i32 %26, 10
  %. = select i1 %27, i32 10, i32 %26
  store i32 %., i32* @ntraps, align 4, !tbaa !38
  %28 = icmp eq i32 %., 0
  br i1 %28, label %.loopexit, label %.preheader

.preheader:                                       ; preds = %39, %23
  %.in = phi i32 [ %40, %39 ], [ %., %23 ]
  br label %29

; <label>:29                                      ; preds = %29, %.preheader
  %30 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* @stairs, i32 0, i1 zeroext false) #8
  %31 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  %32 = shl i32 %31, 5
  %33 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %34 = add nsw i32 %32, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %35, i32 0
  %37 = load i8* %36, align 8, !tbaa !33
  %38 = icmp eq i8 %37, 46
  br i1 %38, label %39, label %29

; <label>:39                                      ; preds = %29
  %40 = add nsw i32 %.in, -1
  %41 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %35, i32 1
  %42 = load i8* %41, align 1, !tbaa !28
  %43 = and i8 %42, -17
  store i8 %43, i8* %41, align 1, !tbaa !28
  %44 = tail call i32 @rnd(i32 8) #8
  %45 = load i8* %41, align 1, !tbaa !28
  %46 = zext i8 %45 to i32
  %47 = or i32 %46, %44
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %41, align 1, !tbaa !28
  %49 = icmp eq i32 %40, 0
  br i1 %49, label %.loopexit, label %.preheader

.loopexit:                                        ; preds = %39, %23, %._crit_edge7
  %50 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* @stairs, i32 0, i1 zeroext false) #8
  %51 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  %52 = shl i32 %51, 5
  %53 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %54 = add nsw i32 %52, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %55, i32 0
  store i8 37, i8* %56, align 8, !tbaa !33
  store i8 0, i8* @seenstairs, align 1, !tbaa !5
  %tp.11 = load %union.thing** @mlist, align 8
  %57 = icmp eq %union.thing* %tp.11, null
  br i1 %57, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.loopexit
  %tp.12 = phi %union.thing* [ %tp.1, %.lr.ph ], [ %tp.11, %.loopexit ]
  %58 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 2
  %59 = tail call %struct.room* @roomin(%struct.coord* %58) #8
  %60 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 10
  store %struct.room* %59, %struct.room** %60, align 8, !tbaa !24
  %61 = getelementptr inbounds %union.thing* %tp.12, i64 0, i32 0, i32 0
  %tp.1 = load %union.thing** %61, align 8
  %62 = icmp eq %union.thing* %tp.1, null
  br i1 %62, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %.loopexit
  %63 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), i32 0, i1 zeroext true) #8
  tail call void @enter_room(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  %64 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %65 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %66 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %67 = tail call i32 @wmove(%struct._win_st* %64, i32 %65, i32 %66) #8
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %72, label %69

; <label>:69                                      ; preds = %._crit_edge
  %70 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %71 = tail call i32 @waddch(%struct._win_st* %70, i32 64) #8
  br label %72

; <label>:72                                      ; preds = %69, %._crit_edge
  %73 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %74 = and i16 %73, 16384
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %78, label %76

; <label>:76                                      ; preds = %72
  %77 = tail call zeroext i1 @turn_see(i1 zeroext false) #8
  %.pre = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  br label %78

; <label>:78                                      ; preds = %76, %72
  %79 = phi i16 [ %73, %72 ], [ %.pre, %76 ]
  %80 = and i16 %79, 2048
  %81 = icmp eq i16 %80, 0
  br i1 %81, label %83, label %82

; <label>:82                                      ; preds = %78
  tail call void (...)* bitcast (void ()* @visuals to void (...)*)() #8
  br label %83

; <label>:83                                      ; preds = %82, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @rnd_room() #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %2 = tail call i32 @rnd(i32 9) #8
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %3, i32 4
  %5 = load i16* %4, align 4, !tbaa !39
  %6 = and i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %8, label %1

; <label>:8                                       ; preds = %1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define void @put_things() #0 {
  %1 = load i8* @amulet, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %7, label %3

; <label>:3                                       ; preds = %0
  %4 = load i32* @level, align 4, !tbaa !38
  %5 = load i32* @max_level, align 4, !tbaa !38
  %6 = icmp slt i32 %4, %5
  br i1 %6, label %60, label %7

; <label>:7                                       ; preds = %3, %0
  %8 = tail call i32 @rnd(i32 20) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %.preheader

; <label>:10                                      ; preds = %7
  tail call void @treas_room()
  br label %.preheader

.preheader:                                       ; preds = %28, %10, %7
  %i.02 = phi i32 [ %29, %28 ], [ 0, %10 ], [ 0, %7 ]
  %11 = tail call i32 @rnd(i32 100) #8
  %12 = icmp slt i32 %11, 36
  br i1 %12, label %13, label %28

; <label>:13                                      ; preds = %.preheader
  %14 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_thing to %union.thing* (...)*)() #8
  tail call void @_attach(%union.thing** @lvl_obj, %union.thing* %14) #8
  %15 = getelementptr inbounds %union.thing* %14, i64 0, i32 0, i32 2, i32 1
  %16 = bitcast i32* %15 to %struct.coord*
  %17 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* %16, i32 0, i1 zeroext false) #8
  %18 = getelementptr inbounds %union.thing* %14, i64 0, i32 0, i32 2, i32 0
  %19 = load i32* %18, align 4, !tbaa !8
  %20 = trunc i32 %19 to i8
  %21 = load i32* %15, align 4, !tbaa !40
  %22 = shl i32 %21, 5
  %23 = getelementptr inbounds i32* %15, i64 1
  %24 = load i32* %23, align 4, !tbaa !41
  %25 = add nsw i32 %22, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %26, i32 0
  store i8 %20, i8* %27, align 8, !tbaa !33
  br label %28

; <label>:28                                      ; preds = %13, %.preheader
  %29 = add nsw i32 %i.02, 1
  %exitcond = icmp eq i32 %29, 9
  br i1 %exitcond, label %30, label %.preheader

; <label>:30                                      ; preds = %28
  %31 = load i32* @level, align 4, !tbaa !38
  %32 = icmp sgt i32 %31, 25
  %33 = load i8* @amulet, align 1
  %34 = icmp eq i8 %33, 0
  %or.cond = and i1 %32, %34
  br i1 %or.cond, label %35, label %60

; <label>:35                                      ; preds = %30
  %36 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  tail call void @_attach(%union.thing** @lvl_obj, %union.thing* %36) #8
  %37 = bitcast %union.thing* %36 to %struct.anon.0*
  %38 = getelementptr inbounds %union.thing* %36, i64 0, i32 0, i32 9, i32 5, i64 8
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 4, !tbaa !68
  %40 = getelementptr inbounds %union.thing* %36, i64 0, i32 0, i32 9, i32 5, i64 12
  %41 = bitcast i8* %40 to i32*
  store i32 0, i32* %41, align 4, !tbaa !69
  %42 = getelementptr inbounds %struct.anon.0* %37, i64 0, i32 7, i64 0
  %43 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %42, i1 false)
  %44 = tail call i8* @__strncpy_chk(i8* %42, i8* getelementptr inbounds ([4 x i8]* @.str688, i64 0, i64 0), i64 8, i64 %43) #8
  %45 = getelementptr inbounds %struct.anon.0* %37, i64 0, i32 8, i64 0
  %46 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %45, i1 false)
  %47 = tail call i8* @__strncpy_chk(i8* %45, i8* getelementptr inbounds ([4 x i8]* @.str688, i64 0, i64 0), i64 8, i64 %46) #8
  %48 = getelementptr inbounds %union.thing* %36, i64 0, i32 0, i32 9, i32 6
  store i32 11, i32* %48, align 4, !tbaa !70
  %49 = getelementptr inbounds %union.thing* %36, i64 0, i32 0, i32 2, i32 0
  store i32 44, i32* %49, align 4, !tbaa !8
  %50 = getelementptr inbounds %union.thing* %36, i64 0, i32 0, i32 2, i32 1
  %51 = bitcast i32* %50 to %struct.coord*
  %52 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* %51, i32 0, i1 zeroext false) #8
  %53 = load i32* %50, align 4, !tbaa !40
  %54 = shl i32 %53, 5
  %55 = getelementptr inbounds i32* %50, i64 1
  %56 = load i32* %55, align 4, !tbaa !41
  %57 = add nsw i32 %54, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %58, i32 0
  store i8 44, i8* %59, align 8, !tbaa !33
  br label %60

; <label>:60                                      ; preds = %35, %30, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @treas_room() #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %2 = tail call i32 @rnd(i32 9) #8
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %3, i32 4
  %5 = load i16* %4, align 4, !tbaa !39
  %6 = and i16 %5, 2
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %rnd_room.exit, label %1

rnd_room.exit:                                    ; preds = %1
  %8 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %3
  %9 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %3, i32 1, i32 1
  %10 = load i32* %9, align 4, !tbaa !32
  %11 = add nsw i32 %10, -2
  %12 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %3, i32 1, i32 0
  %13 = load i32* %12, align 4, !tbaa !30
  %14 = add nsw i32 %13, -2
  %15 = mul nsw i32 %14, %11
  %16 = add nsw i32 %15, -2
  %17 = icmp sgt i32 %16, 8
  %. = select i1 %17, i32 8, i32 %16
  %18 = tail call i32 @rnd(i32 %.) #8
  %19 = add nsw i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %._crit_edge4, label %.lr.ph3

.lr.ph3:                                          ; preds = %.lr.ph3, %rnd_room.exit
  %nm.02 = phi i32 [ %21, %.lr.ph3 ], [ %19, %rnd_room.exit ]
  %21 = add nsw i32 %nm.02, -1
  %22 = tail call zeroext i1 @find_floor(%struct.room* %8, %struct.coord* @treas_room.mp, i32 20, i1 zeroext false) #8
  %23 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_thing to %union.thing* (...)*)() #8
  %24 = getelementptr inbounds %union.thing* %23, i64 0, i32 0, i32 2, i32 1
  %25 = bitcast i32* %24 to i64*
  %26 = load i64* bitcast (%struct.coord* @treas_room.mp to i64*), align 8
  store i64 %26, i64* %25, align 4
  tail call void @_attach(%union.thing** @lvl_obj, %union.thing* %23) #8
  %27 = getelementptr inbounds %union.thing* %23, i64 0, i32 0, i32 2, i32 0
  %28 = load i32* %27, align 4, !tbaa !8
  %29 = trunc i32 %28 to i8
  %30 = load i64* bitcast (%struct.coord* @treas_room.mp to i64*), align 8
  %31 = trunc i64 %30 to i32
  %32 = shl i32 %31, 5
  %33 = lshr i64 %30, 32
  %34 = trunc i64 %33 to i32
  %35 = add nsw i32 %32, %34
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %36, i32 0
  store i8 %29, i8* %37, align 8, !tbaa !33
  %38 = icmp eq i32 %21, 0
  br i1 %38, label %._crit_edge4, label %.lr.ph3

._crit_edge4:                                     ; preds = %.lr.ph3, %rnd_room.exit
  %39 = tail call i32 @rnd(i32 %.) #8
  %40 = add nsw i32 %39, 2
  %41 = add nsw i32 %18, 4
  %42 = icmp slt i32 %40, %41
  %.1 = select i1 %42, i32 %41, i32 %40
  %43 = load i32* %9, align 4, !tbaa !32
  %44 = add nsw i32 %43, -2
  %45 = load i32* %12, align 4, !tbaa !30
  %46 = add nsw i32 %45, -2
  %47 = mul nsw i32 %46, %44
  %48 = icmp sgt i32 %.1, %47
  %nm.2 = select i1 %48, i32 %47, i32 %.1
  %49 = load i32* @level, align 4, !tbaa !38
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* @level, align 4, !tbaa !38
  %51 = icmp eq i32 %nm.2, 0
  br i1 %51, label %61, label %.lr.ph

.lr.ph:                                           ; preds = %.backedge, %._crit_edge4
  %.in = phi i32 [ %52, %.backedge ], [ %nm.2, %._crit_edge4 ]
  %52 = add nsw i32 %.in, -1
  %53 = tail call zeroext i1 @find_floor(%struct.room* %8, %struct.coord* @treas_room.mp, i32 10, i1 zeroext true) #8
  br i1 %53, label %54, label %.backedge

; <label>:54                                      ; preds = %.lr.ph
  %55 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %56 = tail call signext i8 @randmonster(i1 zeroext false) #8
  tail call void @new_monster(%union.thing* %55, i8 signext %56, %struct.coord* @treas_room.mp) #8
  %57 = getelementptr inbounds %union.thing* %55, i64 0, i32 0, i32 8
  %58 = load i16* %57, align 2, !tbaa !18
  %59 = or i16 %58, 2048
  store i16 %59, i16* %57, align 2, !tbaa !18
  tail call void @give_pack(%union.thing* %55) #8
  br label %.backedge

.backedge:                                        ; preds = %54, %.lr.ph
  %60 = icmp eq i32 %52, 0
  br i1 %60, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.backedge
  %.pre = load i32* @level, align 4, !tbaa !38
  br label %61

; <label>:61                                      ; preds = %._crit_edge, %._crit_edge4
  %62 = phi i32 [ %.pre, %._crit_edge ], [ %50, %._crit_edge4 ]
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* @level, align 4, !tbaa !38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @put_bool(i8* nocapture readonly %b) #0 {
  %1 = load %struct._win_st** @hw, align 8, !tbaa !1
  %2 = load i8* %b, align 1, !tbaa !5, !range !7
  %3 = icmp ne i8 %2, 0
  %4 = select i1 %3, i8* getelementptr inbounds ([5 x i8]* @.str22713, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str23714, i64 0, i64 0)
  %5 = tail call i32 @waddnstr(%struct._win_st* %1, i8* %4, i32 -1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @get_bool(i8* nocapture %vp, %struct._win_st* %win) #0 {
  %1 = icmp eq %struct._win_st* %win, null
  br i1 %1, label %9, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 0
  %4 = load i16* %3, align 2, !tbaa !85
  %5 = sext i16 %4 to i32
  %6 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 1
  %7 = load i16* %6, align 2, !tbaa !86
  %8 = sext i16 %7 to i32
  br label %9

; <label>:9                                       ; preds = %2, %0
  %10 = phi i32 [ %5, %2 ], [ -1, %0 ]
  %11 = phi i32 [ %8, %2 ], [ -1, %0 ]
  %12 = load i8* %vp, align 1, !tbaa !5, !range !7
  %13 = icmp ne i8 %12, 0
  %14 = select i1 %13, i8* getelementptr inbounds ([5 x i8]* @.str22713, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str23714, i64 0, i64 0)
  %15 = tail call i32 @waddnstr(%struct._win_st* %win, i8* %14, i32 -1) #8
  %16 = tail call i32 @wmove(%struct._win_st* %win, i32 %10, i32 %11) #8
  %17 = add nsw i32 %11, 10
  br label %.lr.ph

.lr.ph:                                           ; preds = %23, %9
  %18 = tail call i32 @wrefresh(%struct._win_st* %win) #8
  %19 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %20 = sext i8 %19 to i32
  switch i32 %20, label %23 [
    i32 116, label %21
    i32 84, label %21
    i32 102, label %22
    i32 70, label %22
    i32 10, label %.loopexit2
    i32 13, label %.loopexit2
    i32 27, label %.loopexit
    i32 45, label %.loopexit3
  ]

; <label>:21                                      ; preds = %.lr.ph, %.lr.ph
  store i8 1, i8* %vp, align 1, !tbaa !5
  br label %.loopexit2

; <label>:22                                      ; preds = %.lr.ph, %.lr.ph
  store i8 0, i8* %vp, align 1, !tbaa !5
  br label %.loopexit2

; <label>:23                                      ; preds = %.lr.ph
  %24 = tail call i32 @wmove(%struct._win_st* %win, i32 %10, i32 %17) #8
  %25 = tail call i32 @waddnstr(%struct._win_st* %win, i8* getelementptr inbounds ([9 x i8]* @.str24715, i64 0, i64 0), i32 -1) #8
  %26 = tail call i32 @wmove(%struct._win_st* %win, i32 %10, i32 %11) #8
  br label %.lr.ph

.loopexit2:                                       ; preds = %22, %21, %.lr.ph, %.lr.ph
  %27 = tail call i32 @wmove(%struct._win_st* %win, i32 %10, i32 %11) #8
  %28 = load i8* %vp, align 1, !tbaa !5, !range !7
  %29 = icmp ne i8 %28, 0
  %30 = select i1 %29, i8* getelementptr inbounds ([5 x i8]* @.str22713, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str23714, i64 0, i64 0)
  %31 = tail call i32 @waddnstr(%struct._win_st* %win, i8* %30, i32 -1) #8
  %32 = tail call i32 @waddch(%struct._win_st* %win, i32 10) #8
  br label %.loopexit

.loopexit3:                                       ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit3, %.loopexit2, %.lr.ph
  %.0 = phi i32 [ 0, %.loopexit2 ], [ 2, %.loopexit3 ], [ 1, %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @get_sf(i8* nocapture %vp, %struct._win_st* %win) #0 {
  %1 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  %2 = tail call i32 @get_bool(i8* %vp, %struct._win_st* %win)
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %12, label %4

; <label>:4                                       ; preds = %0
  %5 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  %6 = icmp eq i8 %1, %5
  br i1 %6, label %12, label %7

; <label>:7                                       ; preds = %4
  %8 = icmp eq i8 %5, 0
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %7
  store i8 1, i8* @see_floor, align 1, !tbaa !5
  %10 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  tail call void @erase_lamp(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.room* %10) #8
  store i8 0, i8* @see_floor, align 1, !tbaa !5
  br label %12

; <label>:11                                      ; preds = %7
  tail call void @look(i1 zeroext false) #8
  br label %12

; <label>:12                                      ; preds = %11, %9, %4, %0
  %.0 = phi i32 [ 1, %0 ], [ 0, %4 ], [ 0, %9 ], [ 0, %11 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @put_inv_t(i8* nocapture readonly %ip) #0 {
  %1 = load %struct._win_st** @hw, align 8, !tbaa !1
  %2 = bitcast i8* %ip to i32*
  %3 = load i32* %2, align 4, !tbaa !38
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [0 x i8*]* bitcast ([3 x i8*]* @inv_t_name to [0 x i8*]*), i64 0, i64 %4
  %6 = load i8** %5, align 8, !tbaa !1
  %7 = tail call i32 @waddnstr(%struct._win_st* %1, i8* %6, i32 -1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @get_inv_t(i8* nocapture %vp, %struct._win_st* %win) #0 {
  %1 = bitcast i8* %vp to i32*
  %2 = icmp eq %struct._win_st* %win, null
  br i1 %2, label %10, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 0
  %5 = load i16* %4, align 2, !tbaa !85
  %6 = sext i16 %5 to i32
  %7 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 1
  %8 = load i16* %7, align 2, !tbaa !86
  %9 = sext i16 %8 to i32
  br label %10

; <label>:10                                      ; preds = %3, %0
  %11 = phi i32 [ %6, %3 ], [ -1, %0 ]
  %12 = phi i32 [ %9, %3 ], [ -1, %0 ]
  %13 = load i32* %1, align 4, !tbaa !38
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds [0 x i8*]* bitcast ([3 x i8*]* @inv_t_name to [0 x i8*]*), i64 0, i64 %14
  %16 = load i8** %15, align 8, !tbaa !1
  %17 = tail call i32 @waddnstr(%struct._win_st* %win, i8* %16, i32 -1) #8
  %18 = add nsw i32 %12, 15
  br label %.lr.ph

.lr.ph:                                           ; preds = %26, %10
  %19 = tail call i32 @wmove(%struct._win_st* %win, i32 %11, i32 %12) #8
  %20 = tail call i32 @wrefresh(%struct._win_st* %win) #8
  %21 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %22 = sext i8 %21 to i32
  switch i32 %22, label %26 [
    i32 111, label %23
    i32 79, label %23
    i32 115, label %24
    i32 83, label %24
    i32 99, label %25
    i32 67, label %25
    i32 10, label %.loopexit1
    i32 13, label %.loopexit1
    i32 27, label %.loopexit
    i32 45, label %.loopexit2
  ]

; <label>:23                                      ; preds = %.lr.ph, %.lr.ph
  store i32 0, i32* %1, align 4, !tbaa !38
  br label %.loopexit1

; <label>:24                                      ; preds = %.lr.ph, %.lr.ph
  store i32 1, i32* %1, align 4, !tbaa !38
  br label %.loopexit1

; <label>:25                                      ; preds = %.lr.ph, %.lr.ph
  store i32 2, i32* %1, align 4, !tbaa !38
  br label %.loopexit1

; <label>:26                                      ; preds = %.lr.ph
  %27 = tail call i32 @wmove(%struct._win_st* %win, i32 %11, i32 %18) #8
  %28 = tail call i32 @waddnstr(%struct._win_st* %win, i8* getelementptr inbounds ([13 x i8]* @.str26717, i64 0, i64 0), i32 -1) #8
  br label %.lr.ph

.loopexit1:                                       ; preds = %25, %24, %23, %.lr.ph, %.lr.ph
  %29 = load i32* %1, align 4, !tbaa !38
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [0 x i8*]* bitcast ([3 x i8*]* @inv_t_name to [0 x i8*]*), i64 0, i64 %30
  %32 = load i8** %31, align 8, !tbaa !1
  %33 = tail call i32 (%struct._win_st*, i32, i32, i8*, ...)* @mvwprintw(%struct._win_st* %win, i32 %11, i32 %12, i8* getelementptr inbounds ([4 x i8]* @.str25716, i64 0, i64 0), i8* %32) #8
  br label %.loopexit

.loopexit2:                                       ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit2, %.loopexit1, %.lr.ph
  %.0 = phi i32 [ 0, %.loopexit1 ], [ 2, %.loopexit2 ], [ 1, %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @put_str(i8* %str) #0 {
  %1 = load %struct._win_st** @hw, align 8, !tbaa !1
  %2 = tail call i32 @waddnstr(%struct._win_st* %1, i8* %str, i32 -1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @get_str(i8* %vopt, %struct._win_st* %win) #0 {
  %1 = icmp eq %struct._win_st* %win, null
  br i1 %1, label %9, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 0
  %4 = load i16* %3, align 2, !tbaa !85
  %5 = sext i16 %4 to i32
  %6 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 1
  %7 = load i16* %6, align 2, !tbaa !86
  %8 = sext i16 %7 to i32
  br label %9

; <label>:9                                       ; preds = %2, %0
  %10 = phi i32 [ %5, %2 ], [ -1, %0 ]
  %11 = phi i32 [ %8, %2 ], [ -1, %0 ]
  %12 = tail call i32 @wrefresh(%struct._win_st* %win) #8
  br label %13

; <label>:13                                      ; preds = %.loopexit, %9
  %sp.0 = phi i8* [ getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0), %9 ], [ %sp.1, %.loopexit ]
  %14 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %15 = sext i8 %14 to i32
  switch i8 %14, label %16 [
    i8 10, label %.critedge
    i8 13, label %.critedge
    i8 27, label %.critedge
    i8 -1, label %.loopexit
  ]

; <label>:16                                      ; preds = %13
  %17 = tail call signext i8 @erasechar() #8
  %18 = icmp eq i8 %14, %17
  br i1 %18, label %19, label %32

; <label>:19                                      ; preds = %16
  %20 = icmp ugt i8* %sp.0, getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0)
  br i1 %20, label %21, label %.loopexit

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds i8* %sp.0, i64 -1
  %23 = load i8* %22, align 1, !tbaa !28
  %24 = sext i8 %23 to i32
  %25 = tail call i8* @unctrl(i32 %24) #8
  %26 = tail call i64 @strlen(i8* %25) #8
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %21
  %i.05 = phi i32 [ %30, %.lr.ph ], [ %27, %21 ]
  %29 = tail call i32 @waddch(%struct._win_st* %win, i32 8) #8
  %30 = add nsw i32 %i.05, -1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %.loopexit, label %.lr.ph

; <label>:32                                      ; preds = %16
  %33 = tail call signext i8 @killchar() #8
  %34 = icmp eq i8 %14, %33
  br i1 %34, label %35, label %37

; <label>:35                                      ; preds = %32
  %36 = tail call i32 @wmove(%struct._win_st* %win, i32 %10, i32 %11) #8
  br label %.loopexit

; <label>:37                                      ; preds = %32
  %38 = icmp eq i8* %sp.0, getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0)
  br i1 %38, label %39, label %50

; <label>:39                                      ; preds = %37
  %40 = icmp ne i8 %14, 45
  %41 = load %struct._win_st** @stdscr, align 8
  %42 = icmp eq %struct._win_st* %41, %win
  %or.cond = or i1 %40, %42
  br i1 %or.cond, label %43, label %.critedge.thread

.critedge.thread:                                 ; preds = %39
  store i8 0, i8* getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0), align 16, !tbaa !28
  br label %92

; <label>:43                                      ; preds = %39
  %44 = icmp eq i8 %14, 126
  br i1 %44, label %45, label %50

; <label>:45                                      ; preds = %43
  %46 = tail call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i64 1024) #8
  %47 = tail call i32 @waddnstr(%struct._win_st* %win, i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i32 -1) #8
  %48 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0)) #8
  %49 = getelementptr inbounds [1024 x i8]* @get_str.buf, i64 0, i64 %48
  br label %.loopexit

; <label>:50                                      ; preds = %43, %37
  %51 = icmp ult i8* %sp.0, getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 50)
  br i1 %51, label %52, label %61

; <label>:52                                      ; preds = %50
  %isascii.i.i4 = icmp sgt i8 %14, -1
  br i1 %isascii.i.i4, label %53, label %58

; <label>:53                                      ; preds = %52
  %54 = sext i8 %14 to i64
  %55 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %54
  %56 = load i32* %55, align 4, !tbaa !38
  %57 = and i32 %56, 262144
  br label %isprint.exit

; <label>:58                                      ; preds = %52
  %59 = tail call i32 @__maskrune(i32 %15, i64 262144) #8
  br label %isprint.exit

isprint.exit:                                     ; preds = %58, %53
  %.sink.i.in.i = phi i32 [ %57, %53 ], [ %59, %58 ]
  %.sink.i.i = icmp ne i32 %.sink.i.in.i, 0
  %60 = icmp eq i8 %14, 32
  %or.cond3 = or i1 %.sink.i.i, %60
  br i1 %or.cond3, label %63, label %61

; <label>:61                                      ; preds = %isprint.exit, %50
  %62 = tail call i32 @putchar(i32 7) #8
  br label %.loopexit

; <label>:63                                      ; preds = %isprint.exit
  %64 = getelementptr inbounds i8* %sp.0, i64 1
  store i8 %14, i8* %sp.0, align 1, !tbaa !28
  %65 = tail call i8* @unctrl(i32 %15) #8
  %66 = tail call i32 @waddnstr(%struct._win_st* %win, i8* %65, i32 -1) #8
  br label %.loopexit

.loopexit:                                        ; preds = %63, %61, %45, %35, %.lr.ph, %21, %19, %13
  %sp.1 = phi i8* [ %sp.0, %19 ], [ getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0), %35 ], [ %49, %45 ], [ %sp.0, %61 ], [ %64, %63 ], [ %sp.0, %13 ], [ %22, %21 ], [ %22, %.lr.ph ]
  %67 = tail call i32 @wclrtoeol(%struct._win_st* %win) #8
  %68 = tail call i32 @wrefresh(%struct._win_st* %win) #8
  br label %13

.critedge:                                        ; preds = %13, %13, %13
  store i8 0, i8* %sp.0, align 1, !tbaa !28
  %69 = icmp ugt i8* %sp.0, getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0)
  br i1 %69, label %70, label %92

; <label>:70                                      ; preds = %.critedge
  %71 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0)) #8
  %72 = trunc i64 %71 to i32
  %73 = icmp sgt i32 %72, 50
  %.len.i = select i1 %73, i32 50, i32 %72
  %74 = icmp eq i32 %.len.i, 0
  br i1 %74, label %strucpy.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %select.unfold.i, %70
  %.in.i = phi i32 [ %75, %select.unfold.i ], [ %.len.i, %70 ]
  %.015.i = phi i8* [ %90, %select.unfold.i ], [ getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0), %70 ]
  %.024.i = phi i8* [ %.1.i, %select.unfold.i ], [ %vopt, %70 ]
  %75 = add nsw i32 %.in.i, -1
  %76 = load i8* %.015.i, align 1, !tbaa !28
  %isascii.i.i3.i = icmp sgt i8 %76, -1
  br i1 %isascii.i.i3.i, label %77, label %82

; <label>:77                                      ; preds = %.lr.ph.i
  %78 = sext i8 %76 to i64
  %79 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %78
  %80 = load i32* %79, align 4, !tbaa !38
  %81 = and i32 %80, 262144
  br label %isprint.exit.i

; <label>:82                                      ; preds = %.lr.ph.i
  %83 = sext i8 %76 to i32
  %84 = tail call i32 @__maskrune(i32 %83, i64 262144) #8
  %.pre = load i8* %.015.i, align 1, !tbaa !28
  br label %isprint.exit.i

isprint.exit.i:                                   ; preds = %82, %77
  %85 = phi i8 [ %76, %77 ], [ %.pre, %82 ]
  %.sink.i.in.i.i = phi i32 [ %81, %77 ], [ %84, %82 ]
  %.sink.i.i.i = icmp eq i32 %.sink.i.in.i.i, 0
  br i1 %.sink.i.i.i, label %86, label %isprint.exit._crit_edge.i

; <label>:86                                      ; preds = %isprint.exit.i
  %87 = icmp eq i8 %85, 32
  br i1 %87, label %isprint.exit._crit_edge.i, label %select.unfold.i

isprint.exit._crit_edge.i:                        ; preds = %86, %isprint.exit.i
  %88 = phi i8 [ 32, %86 ], [ %85, %isprint.exit.i ]
  %89 = getelementptr inbounds i8* %.024.i, i64 1
  store i8 %88, i8* %.024.i, align 1, !tbaa !28
  br label %select.unfold.i

select.unfold.i:                                  ; preds = %isprint.exit._crit_edge.i, %86
  %.1.i = phi i8* [ %89, %isprint.exit._crit_edge.i ], [ %.024.i, %86 ]
  %90 = getelementptr inbounds i8* %.015.i, i64 1
  %91 = icmp eq i32 %75, 0
  br i1 %91, label %strucpy.exit, label %.lr.ph.i

strucpy.exit:                                     ; preds = %select.unfold.i, %70
  %.02.lcssa.i = phi i8* [ %vopt, %70 ], [ %.1.i, %select.unfold.i ]
  store i8 0, i8* %.02.lcssa.i, align 1, !tbaa !28
  br label %92

; <label>:92                                      ; preds = %strucpy.exit, %.critedge, %.critedge.thread
  %93 = phi i8 [ 45, %.critedge.thread ], [ %14, %strucpy.exit ], [ %14, %.critedge ]
  %sp.010 = phi i8* [ getelementptr inbounds ([1024 x i8]* @get_str.buf, i64 0, i64 0), %.critedge.thread ], [ %sp.0, %strucpy.exit ], [ %sp.0, %.critedge ]
  %94 = tail call i32 (%struct._win_st*, i32, i32, i8*, ...)* @mvwprintw(%struct._win_st* %win, i32 %10, i32 %11, i8* getelementptr inbounds ([4 x i8]* @.str25716, i64 0, i64 0), i8* %vopt) #8
  %95 = tail call i32 @wrefresh(%struct._win_st* %win) #8
  %96 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %97 = icmp eq %struct._win_st* %96, %win
  br i1 %97, label %98, label %104

; <label>:98                                      ; preds = %92
  %99 = ptrtoint i8* %sp.010 to i64
  %100 = sub i64 %99, ptrtoint ([1024 x i8]* @get_str.buf to i64)
  %101 = trunc i64 %100 to i32
  %102 = load i32* @mpos, align 4, !tbaa !38
  %103 = add nsw i32 %102, %101
  store i32 %103, i32* @mpos, align 4, !tbaa !38
  br label %104

; <label>:104                                     ; preds = %98, %92
  switch i8 %93, label %106 [
    i8 45, label %107
    i8 27, label %105
  ]

; <label>:105                                     ; preds = %104
  br label %107

; <label>:106                                     ; preds = %104
  br label %107

; <label>:107                                     ; preds = %106, %105, %104
  %.0 = phi i32 [ 1, %105 ], [ 0, %106 ], [ 2, %104 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @option() #0 {
  %1 = load %struct._win_st** @hw, align 8, !tbaa !1
  %2 = tail call i32 @wclear(%struct._win_st* %1) #8
  %3 = load %struct._win_st** @hw, align 8, !tbaa !1
  br label %4

; <label>:4                                       ; preds = %4, %0
  %5 = phi %struct._win_st* [ %3, %0 ], [ %19, %4 ]
  %op.02 = phi %struct.optstruct* [ getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 0), %0 ], [ %17, %4 ]
  %6 = getelementptr inbounds %struct.optstruct* %op.02, i64 0, i32 1
  %7 = load i8** %6, align 8, !tbaa !110
  %8 = getelementptr inbounds %struct.optstruct* %op.02, i64 0, i32 0
  %9 = load i8** %8, align 8, !tbaa !112
  %10 = tail call i32 (%struct._win_st*, i8*, ...)* @wprintw(%struct._win_st* %5, i8* getelementptr inbounds ([12 x i8]* @.str21712, i64 0, i64 0), i8* %7, i8* %9) #8
  %11 = getelementptr inbounds %struct.optstruct* %op.02, i64 0, i32 3
  %12 = load void (i8*)** %11, align 8, !tbaa !113
  %13 = getelementptr inbounds %struct.optstruct* %op.02, i64 0, i32 2
  %14 = load i8** %13, align 8, !tbaa !114
  tail call void %12(i8* %14) #8
  %15 = load %struct._win_st** @hw, align 8, !tbaa !1
  %16 = tail call i32 @waddch(%struct._win_st* %15, i32 10) #8
  %17 = getelementptr inbounds %struct.optstruct* %op.02, i64 1
  %18 = icmp ugt %struct.optstruct* %17, getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 9)
  %19 = load %struct._win_st** @hw, align 8, !tbaa !1
  br i1 %18, label %20, label %4

; <label>:20                                      ; preds = %4
  %21 = tail call i32 @wmove(%struct._win_st* %19, i32 0, i32 0) #8
  br label %22

; <label>:22                                      ; preds = %51, %20
  %op.11 = phi %struct.optstruct* [ getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 0), %20 ], [ %52, %51 ]
  %23 = load %struct._win_st** @hw, align 8, !tbaa !1
  %24 = getelementptr inbounds %struct.optstruct* %op.11, i64 0, i32 1
  %25 = load i8** %24, align 8, !tbaa !110
  %26 = getelementptr inbounds %struct.optstruct* %op.11, i64 0, i32 0
  %27 = load i8** %26, align 8, !tbaa !112
  %28 = tail call i32 (%struct._win_st*, i8*, ...)* @wprintw(%struct._win_st* %23, i8* getelementptr inbounds ([12 x i8]* @.str21712, i64 0, i64 0), i8* %25, i8* %27) #8
  %29 = getelementptr inbounds %struct.optstruct* %op.11, i64 0, i32 4
  %30 = load i32 (i8*, %struct._win_st*)** %29, align 8, !tbaa !115
  %31 = getelementptr inbounds %struct.optstruct* %op.11, i64 0, i32 2
  %32 = load i8** %31, align 8, !tbaa !114
  %33 = load %struct._win_st** @hw, align 8, !tbaa !1
  %34 = tail call i32 %30(i8* %32, %struct._win_st* %33) #8
  switch i32 %34, label %35 [
    i32 0, label %51
    i32 1, label %54
  ]

; <label>:35                                      ; preds = %22
  %36 = icmp ugt %struct.optstruct* %op.11, getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 0)
  br i1 %36, label %37, label %46

; <label>:37                                      ; preds = %35
  %38 = load %struct._win_st** @hw, align 8, !tbaa !1
  %39 = ptrtoint %struct.optstruct* %op.11 to i64
  %40 = sub i64 %39, ptrtoint ([10 x %struct.optstruct]* @optlist to i64)
  %41 = sdiv exact i64 %40, 40
  %42 = trunc i64 %41 to i32
  %43 = add nsw i32 %42, -1
  %44 = tail call i32 @wmove(%struct._win_st* %38, i32 %43, i32 0) #8
  %45 = getelementptr inbounds %struct.optstruct* %op.11, i64 -2
  br label %51

; <label>:46                                      ; preds = %35
  %47 = tail call i32 @putchar(i32 7) #8
  %48 = load %struct._win_st** @hw, align 8, !tbaa !1
  %49 = tail call i32 @wmove(%struct._win_st* %48, i32 0, i32 0) #8
  %50 = getelementptr inbounds %struct.optstruct* %op.11, i64 -1
  br label %51

; <label>:51                                      ; preds = %46, %37, %22
  %op.2 = phi %struct.optstruct* [ %45, %37 ], [ %50, %46 ], [ %op.11, %22 ]
  %52 = getelementptr inbounds %struct.optstruct* %op.2, i64 1
  %53 = icmp ugt %struct.optstruct* %52, getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 9)
  br i1 %53, label %54, label %22

; <label>:54                                      ; preds = %51, %22
  %55 = load %struct._win_st** @hw, align 8, !tbaa !1
  %56 = load i32* @LINES, align 4, !tbaa !38
  %57 = add nsw i32 %56, -1
  %58 = tail call i32 @wmove(%struct._win_st* %55, i32 %57, i32 0) #8
  %59 = load %struct._win_st** @hw, align 8, !tbaa !1
  %60 = tail call i32 @waddnstr(%struct._win_st* %59, i8* getelementptr inbounds ([28 x i8]* @.str20711, i64 0, i64 0), i32 -1) #8
  %61 = load %struct._win_st** @hw, align 8, !tbaa !1
  %62 = tail call i32 @wrefresh(%struct._win_st* %61) #8
  tail call void @wait_for(i32 32) #8
  %63 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %64 = tail call i32 @clearok(%struct._win_st* %63, i1 zeroext true) #8
  %65 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %66 = icmp eq %struct._win_st* %65, null
  br i1 %66, label %72, label %67

; <label>:67                                      ; preds = %54
  %68 = getelementptr inbounds %struct._win_st* %65, i64 0, i32 2
  %69 = load i16* %68, align 2, !tbaa !56
  %70 = sext i16 %69 to i32
  %71 = add nsw i32 %70, 1
  br label %72

; <label>:72                                      ; preds = %67, %54
  %73 = phi i32 [ %71, %67 ], [ -1, %54 ]
  %74 = tail call i32 @wtouchln(%struct._win_st* %65, i32 0, i32 %73, i32 1) #8
  store i8 0, i8* @after, align 1, !tbaa !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @pr_optname(%struct.optstruct* nocapture readonly %op) #0 {
  %1 = load %struct._win_st** @hw, align 8, !tbaa !1
  %2 = getelementptr inbounds %struct.optstruct* %op, i64 0, i32 1
  %3 = load i8** %2, align 8, !tbaa !110
  %4 = getelementptr inbounds %struct.optstruct* %op, i64 0, i32 0
  %5 = load i8** %4, align 8, !tbaa !112
  %6 = tail call i32 (%struct._win_st*, i8*, ...)* @wprintw(%struct._win_st* %1, i8* getelementptr inbounds ([12 x i8]* @.str21712, i64 0, i64 0), i8* %3, i8* %5) #8
  ret void
}

declare i32 @wprintw(%struct._win_st*, i8*, ...) #2

; Function Attrs: nounwind ssp uwtable
define void @strucpy(i8* nocapture %s1, i8* nocapture readonly %s2, i32 %len) #0 {
  %1 = icmp sgt i32 %len, 50
  %.len = select i1 %1, i32 50, i32 %len
  %2 = icmp eq i32 %.len, 0
  br i1 %2, label %select.unfold._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %select.unfold, %0
  %.in = phi i32 [ %3, %select.unfold ], [ %.len, %0 ]
  %.015 = phi i8* [ %18, %select.unfold ], [ %s2, %0 ]
  %.024 = phi i8* [ %.1, %select.unfold ], [ %s1, %0 ]
  %3 = add nsw i32 %.in, -1
  %4 = load i8* %.015, align 1, !tbaa !28
  %isascii.i.i3 = icmp sgt i8 %4, -1
  br i1 %isascii.i.i3, label %5, label %10

; <label>:5                                       ; preds = %.lr.ph
  %6 = sext i8 %4 to i64
  %7 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %6
  %8 = load i32* %7, align 4, !tbaa !38
  %9 = and i32 %8, 262144
  br label %isprint.exit

; <label>:10                                      ; preds = %.lr.ph
  %11 = sext i8 %4 to i32
  %12 = tail call i32 @__maskrune(i32 %11, i64 262144) #8
  br label %isprint.exit

isprint.exit:                                     ; preds = %10, %5
  %.sink.i.in.i = phi i32 [ %9, %5 ], [ %12, %10 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  %13 = load i8* %.015, align 1, !tbaa !28
  br i1 %.sink.i.i, label %14, label %isprint.exit._crit_edge

; <label>:14                                      ; preds = %isprint.exit
  %15 = icmp eq i8 %13, 32
  br i1 %15, label %isprint.exit._crit_edge, label %select.unfold

isprint.exit._crit_edge:                          ; preds = %14, %isprint.exit
  %16 = phi i8 [ 32, %14 ], [ %13, %isprint.exit ]
  %17 = getelementptr inbounds i8* %.024, i64 1
  store i8 %16, i8* %.024, align 1, !tbaa !28
  br label %select.unfold

select.unfold:                                    ; preds = %isprint.exit._crit_edge, %14
  %.1 = phi i8* [ %17, %isprint.exit._crit_edge ], [ %.024, %14 ]
  %18 = getelementptr inbounds i8* %.015, i64 1
  %19 = icmp eq i32 %3, 0
  br i1 %19, label %select.unfold._crit_edge, label %.lr.ph

select.unfold._crit_edge:                         ; preds = %select.unfold, %0
  %.02.lcssa = phi i8* [ %s1, %0 ], [ %.1, %select.unfold ]
  store i8 0, i8* %.02.lcssa, align 1, !tbaa !28
  ret void
}

declare i32 @mvwprintw(%struct._win_st*, i32, i32, i8*, ...) #2

; Function Attrs: nounwind ssp uwtable
define void @parse_opts(i8* %str) #0 {
  %1 = load i8* %str, align 1, !tbaa !28
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %.critedge2._crit_edge, label %.preheader

.critedge2.loopexit:                              ; preds = %isalpha.exit9
  %.pre49 = load i8* %sp.228, align 1, !tbaa !28
  %3 = icmp eq i8 %.pre49, 0
  br i1 %3, label %.critedge2._crit_edge, label %.preheader

.preheader:                                       ; preds = %.critedge2.loopexit, %0
  %4 = phi i8 [ %.pre49, %.critedge2.loopexit ], [ %1, %0 ]
  %.030 = phi i8* [ %sp.228, %.critedge2.loopexit ], [ %str, %0 ]
  br label %5

; <label>:5                                       ; preds = %isalpha.exit._crit_edge, %.preheader
  %6 = phi i8 [ %.pre, %isalpha.exit._crit_edge ], [ %4, %.preheader ]
  %sp.0 = phi i8* [ %15, %isalpha.exit._crit_edge ], [ %.030, %.preheader ]
  %isascii.i.i10 = icmp sgt i8 %6, -1
  br i1 %isascii.i.i10, label %7, label %12

; <label>:7                                       ; preds = %5
  %8 = sext i8 %6 to i64
  %9 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %8
  %10 = load i32* %9, align 4, !tbaa !38
  %11 = and i32 %10, 256
  br label %isalpha.exit

; <label>:12                                      ; preds = %5
  %13 = sext i8 %6 to i32
  %14 = tail call i32 @__maskrune(i32 %13, i64 256) #8
  br label %isalpha.exit

isalpha.exit:                                     ; preds = %12, %7
  %.sink.i.in.i = phi i32 [ %11, %7 ], [ %14, %12 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  %15 = getelementptr inbounds i8* %sp.0, i64 1
  br i1 %.sink.i.i, label %16, label %isalpha.exit._crit_edge

isalpha.exit._crit_edge:                          ; preds = %isalpha.exit
  %.pre = load i8* %15, align 1, !tbaa !28
  br label %5

; <label>:16                                      ; preds = %isalpha.exit
  %17 = ptrtoint i8* %sp.0 to i64
  %18 = ptrtoint i8* %.030 to i64
  %19 = sub i64 %17, %18
  %sext = shl i64 %19, 32
  %20 = ashr exact i64 %sext, 32
  %21 = getelementptr inbounds i8* %.030, i64 2
  %sext1 = add i64 %sext, -8589934592
  %22 = ashr exact i64 %sext1, 32
  br label %23

; <label>:23                                      ; preds = %120, %16
  %op.018 = phi %struct.optstruct* [ getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 0), %16 ], [ %121, %120 ]
  %24 = getelementptr inbounds %struct.optstruct* %op.018, i64 0, i32 0
  %25 = load i8** %24, align 8, !tbaa !112
  %26 = tail call i32 @strncmp(i8* %.030, i8* %25, i64 %20) #8
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %struct.optstruct* %op.018, i64 0, i32 3
  %29 = load void (i8*)** %28, align 8, !tbaa !113
  %30 = icmp eq void (i8*)* %29, @put_bool
  br i1 %27, label %31, label %110

; <label>:31                                      ; preds = %23
  br i1 %30, label %32, label %.preheader19

; <label>:32                                      ; preds = %31
  %33 = getelementptr inbounds %struct.optstruct* %op.018, i64 0, i32 2
  %34 = load i8** %33, align 8, !tbaa !114
  store i8 1, i8* %34, align 1, !tbaa !5
  br label %.preheader27

.preheader19:                                     ; preds = %.preheader19, %31
  %sp.0.pn = phi i8* [ %.1, %.preheader19 ], [ %sp.0, %31 ]
  %.1 = getelementptr inbounds i8* %sp.0.pn, i64 1
  %35 = load i8* %.1, align 1, !tbaa !28
  %36 = icmp eq i8 %35, 61
  br i1 %36, label %.preheader19, label %37

; <label>:37                                      ; preds = %.preheader19
  %38 = icmp eq i8 %35, 126
  %39 = getelementptr inbounds %struct.optstruct* %op.018, i64 0, i32 2
  %40 = load i8** %39, align 8, !tbaa !114
  br i1 %38, label %41, label %51

; <label>:41                                      ; preds = %37
  %42 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false)
  %43 = tail call i8* @__strcpy_chk(i8* %40, i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i64 %42) #8
  %44 = load i8** %39, align 8, !tbaa !114
  %45 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0)) #8
  br label %46

; <label>:46                                      ; preds = %46, %41
  %.2 = phi i8* [ %.1, %41 ], [ %47, %46 ]
  %47 = getelementptr inbounds i8* %.2, i64 1
  %48 = load i8* %47, align 1, !tbaa !28
  %49 = icmp eq i8 %48, 47
  br i1 %49, label %46, label %.loopexit21

.loopexit21:                                      ; preds = %46
  %50 = getelementptr inbounds i8* %44, i64 %45
  br label %51

; <label>:51                                      ; preds = %.loopexit21, %37
  %52 = phi i8 [ %35, %37 ], [ %48, %.loopexit21 ]
  %.3 = phi i8* [ %.1, %37 ], [ %47, %.loopexit21 ]
  %start.0 = phi i8* [ %40, %37 ], [ %50, %.loopexit21 ]
  br label %53

; <label>:53                                      ; preds = %53, %51
  %.3.pn = phi i8* [ %.3, %51 ], [ %sp.1, %53 ]
  %sp.1 = getelementptr inbounds i8* %.3.pn, i64 1
  %54 = load i8* %sp.1, align 1, !tbaa !28
  switch i8 %54, label %53 [
    i8 0, label %.critedge
    i8 44, label %.critedge
  ]

.critedge:                                        ; preds = %53, %53
  %55 = load void (i8*)** %28, align 8
  %56 = icmp eq void (i8*)* %55, @put_inv_t
  br i1 %56, label %57, label %86

; <label>:57                                      ; preds = %.critedge
  %isascii.i.i312 = icmp sgt i8 %52, -1
  br i1 %isascii.i.i312, label %58, label %63

; <label>:58                                      ; preds = %57
  %59 = sext i8 %52 to i64
  %60 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %59
  %61 = load i32* %60, align 4, !tbaa !38
  %62 = and i32 %61, 4096
  br label %islower.exit

; <label>:63                                      ; preds = %57
  %64 = sext i8 %52 to i32
  %65 = tail call i32 @__maskrune(i32 %64, i64 4096) #8
  br label %islower.exit

islower.exit:                                     ; preds = %63, %58
  %.sink.i.in.i4 = phi i32 [ %62, %58 ], [ %65, %63 ]
  %.sink.i.i5 = icmp eq i32 %.sink.i.in.i4, 0
  br i1 %.sink.i.i5, label %.preheader23, label %66

; <label>:66                                      ; preds = %islower.exit
  %67 = load i8* %.3, align 1, !tbaa !28
  %68 = sext i8 %67 to i32
  %69 = tail call i32 @__toupper(i32 %68) #8
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %.3, align 1, !tbaa !28
  br label %.preheader23

.preheader23:                                     ; preds = %66, %islower.exit
  br i1 false, label %.preheader27, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader23
  %71 = ptrtoint i8* %sp.1 to i64
  %72 = ptrtoint i8* %.3 to i64
  %73 = sub i64 %71, %72
  br label %76

; <label>:74                                      ; preds = %76
  %75 = icmp ugt i8** %80, getelementptr inbounds ([3 x i8*]* @inv_t_name, i64 0, i64 2)
  br i1 %75, label %.preheader27, label %76

; <label>:76                                      ; preds = %74, %.lr.ph
  %i.026 = phi i8** [ getelementptr inbounds ([3 x i8*]* @inv_t_name, i64 0, i64 0), %.lr.ph ], [ %80, %74 ]
  %77 = load i8** %i.026, align 8, !tbaa !1
  %78 = tail call i32 @strncmp(i8* %.3, i8* %77, i64 %73) #8
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds i8** %i.026, i64 1
  br i1 %79, label %81, label %74

; <label>:81                                      ; preds = %76
  %82 = ptrtoint i8** %i.026 to i64
  %83 = sub i64 %82, ptrtoint ([3 x i8*]* @inv_t_name to i64)
  %84 = lshr exact i64 %83, 3
  %85 = trunc i64 %84 to i32
  store i32 %85, i32* @inv_type, align 4, !tbaa !38
  br label %.preheader27

; <label>:86                                      ; preds = %.critedge
  %87 = ptrtoint i8* %sp.1 to i64
  %88 = ptrtoint i8* %.3 to i64
  %89 = sub i64 %87, %88
  %90 = trunc i64 %89 to i32
  %91 = icmp sgt i32 %90, 50
  %.len.i = select i1 %91, i32 50, i32 %90
  %92 = icmp eq i32 %.len.i, 0
  br i1 %92, label %strucpy.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %select.unfold.i..lr.ph.i_crit_edge, %86
  %93 = phi i8 [ %.pre47, %select.unfold.i..lr.ph.i_crit_edge ], [ %52, %86 ]
  %.in.i = phi i32 [ %94, %select.unfold.i..lr.ph.i_crit_edge ], [ %.len.i, %86 ]
  %.015.i = phi i8* [ %108, %select.unfold.i..lr.ph.i_crit_edge ], [ %.3, %86 ]
  %.024.i = phi i8* [ %.1.i, %select.unfold.i..lr.ph.i_crit_edge ], [ %start.0, %86 ]
  %94 = add nsw i32 %.in.i, -1
  %isascii.i.i3.i = icmp sgt i8 %93, -1
  br i1 %isascii.i.i3.i, label %95, label %100

; <label>:95                                      ; preds = %.lr.ph.i
  %96 = sext i8 %93 to i64
  %97 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %96
  %98 = load i32* %97, align 4, !tbaa !38
  %99 = and i32 %98, 262144
  br label %isprint.exit.i

; <label>:100                                     ; preds = %.lr.ph.i
  %101 = sext i8 %93 to i32
  %102 = tail call i32 @__maskrune(i32 %101, i64 262144) #8
  %.pre48 = load i8* %.015.i, align 1, !tbaa !28
  br label %isprint.exit.i

isprint.exit.i:                                   ; preds = %100, %95
  %103 = phi i8 [ %93, %95 ], [ %.pre48, %100 ]
  %.sink.i.in.i.i = phi i32 [ %99, %95 ], [ %102, %100 ]
  %.sink.i.i.i = icmp eq i32 %.sink.i.in.i.i, 0
  br i1 %.sink.i.i.i, label %104, label %isprint.exit._crit_edge.i

; <label>:104                                     ; preds = %isprint.exit.i
  %105 = icmp eq i8 %103, 32
  br i1 %105, label %isprint.exit._crit_edge.i, label %select.unfold.i

isprint.exit._crit_edge.i:                        ; preds = %104, %isprint.exit.i
  %106 = phi i8 [ 32, %104 ], [ %103, %isprint.exit.i ]
  %107 = getelementptr inbounds i8* %.024.i, i64 1
  store i8 %106, i8* %.024.i, align 1, !tbaa !28
  br label %select.unfold.i

select.unfold.i:                                  ; preds = %isprint.exit._crit_edge.i, %104
  %.1.i = phi i8* [ %107, %isprint.exit._crit_edge.i ], [ %.024.i, %104 ]
  %108 = getelementptr inbounds i8* %.015.i, i64 1
  %109 = icmp eq i32 %94, 0
  br i1 %109, label %strucpy.exit, label %select.unfold.i..lr.ph.i_crit_edge

select.unfold.i..lr.ph.i_crit_edge:               ; preds = %select.unfold.i
  %.pre47 = load i8* %108, align 1, !tbaa !28
  br label %.lr.ph.i

strucpy.exit:                                     ; preds = %select.unfold.i, %86
  %.02.lcssa.i = phi i8* [ %start.0, %86 ], [ %.1.i, %select.unfold.i ]
  store i8 0, i8* %.02.lcssa.i, align 1, !tbaa !28
  br label %.preheader27

; <label>:110                                     ; preds = %23
  br i1 %30, label %111, label %120

; <label>:111                                     ; preds = %110
  %112 = tail call i32 @strncmp(i8* %.030, i8* getelementptr inbounds ([3 x i8]* @.str27718, i64 0, i64 0), i64 2) #8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %120

; <label>:114                                     ; preds = %111
  %115 = tail call i32 @strncmp(i8* %21, i8* %25, i64 %22) #8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %120

; <label>:117                                     ; preds = %114
  %118 = getelementptr inbounds %struct.optstruct* %op.018, i64 0, i32 2
  %119 = load i8** %118, align 8, !tbaa !114
  store i8 0, i8* %119, align 1, !tbaa !5
  br label %.preheader27

; <label>:120                                     ; preds = %114, %111, %110
  %121 = getelementptr inbounds %struct.optstruct* %op.018, i64 1
  %122 = icmp ugt %struct.optstruct* %121, getelementptr inbounds ([10 x %struct.optstruct]* @optlist, i64 0, i64 9)
  br i1 %122, label %.preheader27, label %23

.preheader27:                                     ; preds = %120, %117, %strucpy.exit, %81, %74, %.preheader23, %32
  %sp.2.ph = phi i8* [ %sp.0, %117 ], [ %sp.1, %strucpy.exit ], [ %sp.1, %81 ], [ %sp.0, %32 ], [ %sp.1, %.preheader23 ], [ %sp.0, %120 ], [ %sp.1, %74 ]
  %123 = load i8* %sp.2.ph, align 1, !tbaa !28
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %.critedge2._crit_edge, label %.lr.ph29

; <label>:125                                     ; preds = %isalpha.exit9
  %126 = load i8* %137, align 1, !tbaa !28
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %.critedge2._crit_edge, label %.lr.ph29

.lr.ph29:                                         ; preds = %125, %.preheader27
  %128 = phi i8 [ %126, %125 ], [ %123, %.preheader27 ]
  %sp.228 = phi i8* [ %137, %125 ], [ %sp.2.ph, %.preheader27 ]
  %isascii.i.i611 = icmp sgt i8 %128, -1
  br i1 %isascii.i.i611, label %129, label %134

; <label>:129                                     ; preds = %.lr.ph29
  %130 = sext i8 %128 to i64
  %131 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %130
  %132 = load i32* %131, align 4, !tbaa !38
  %133 = and i32 %132, 256
  br label %isalpha.exit9

; <label>:134                                     ; preds = %.lr.ph29
  %135 = sext i8 %128 to i32
  %136 = tail call i32 @__maskrune(i32 %135, i64 256) #8
  br label %isalpha.exit9

isalpha.exit9:                                    ; preds = %134, %129
  %.sink.i.in.i7 = phi i32 [ %133, %129 ], [ %136, %134 ]
  %.sink.i.i8 = icmp eq i32 %.sink.i.in.i7, 0
  %137 = getelementptr inbounds i8* %sp.228, i64 1
  br i1 %.sink.i.i8, label %125, label %.critedge2.loopexit

.critedge2._crit_edge:                            ; preds = %125, %.preheader27, %.critedge2.loopexit, %0
  ret void
}

; Function Attrs: nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) #7

; Function Attrs: nounwind ssp uwtable
define void @add_pack(%union.thing* %obj, i1 zeroext %silent) #0 {
  %1 = icmp eq %union.thing* %obj, null
  br i1 %1, label %2, label %7

; <label>:2                                       ; preds = %0
  %3 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %4 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %5 = tail call %union.thing* @find_obj(i32 %3, i32 %4) #8
  %6 = icmp eq %union.thing* %5, null
  br i1 %6, label %201, label %7

; <label>:7                                       ; preds = %2, %0
  %.0 = phi %union.thing* [ %obj, %0 ], [ %5, %2 ]
  %from_floor.0 = phi i1 [ false, %0 ], [ true, %2 ]
  %8 = bitcast %union.thing* %.0 to %struct.anon.0*
  %9 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 2, i32 0
  %10 = load i32* %9, align 4, !tbaa !8
  %11 = icmp eq i32 %10, 63
  br i1 %11, label %12, label %54

; <label>:12                                      ; preds = %7
  %13 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 9, i32 5, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32* %14, align 4, !tbaa !50
  %16 = icmp eq i32 %15, 10
  br i1 %16, label %17, label %54

; <label>:17                                      ; preds = %12
  %18 = getelementptr inbounds %struct.anon.0* %8, i64 0, i32 14
  %19 = load i32* %18, align 4, !tbaa !12
  %20 = and i32 %19, 16
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %54, label %22

; <label>:22                                      ; preds = %17
  tail call void @_detach(%union.thing** @lvl_obj, %union.thing* %.0) #8
  %23 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %24 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %25 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %26 = tail call i32 @wmove(%struct._win_st* %23, i32 %24, i32 %25) #8
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %38, label %28

; <label>:28                                      ; preds = %22
  %29 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %30 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %31 = getelementptr inbounds %struct.room* %30, i64 0, i32 4
  %32 = load i16* %31, align 2, !tbaa !39
  %33 = and i16 %32, 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %floor_ch.exit

; <label>:35                                      ; preds = %28
  %36 = tail call zeroext i1 (...)* bitcast (i1 ()* @show_floor to i1 (...)*)() #8
  %phitmp = select i1 %36, i32 46, i32 32
  br label %floor_ch.exit

floor_ch.exit:                                    ; preds = %35, %28
  %.0.i = phi i32 [ %phitmp, %35 ], [ 35, %28 ]
  %37 = tail call i32 @waddch(%struct._win_st* %29, i32 %.0.i) #8
  br label %38

; <label>:38                                      ; preds = %floor_ch.exit, %22
  %39 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %40 = getelementptr inbounds %struct.room* %39, i64 0, i32 4
  %41 = load i16* %40, align 2, !tbaa !39
  %42 = and i16 %41, 2
  %43 = icmp ne i16 %42, 0
  %44 = select i1 %43, i8 35, i8 46
  %45 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %46 = trunc i64 %45 to i32
  %47 = shl i32 %46, 5
  %48 = lshr i64 %45, 32
  %49 = trunc i64 %48 to i32
  %50 = add nsw i32 %47, %49
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %51, i32 0
  store i8 %44, i8* %52, align 8, !tbaa !33
  tail call void @discard(%union.thing* %.0) #8
  %53 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([43 x i8]* @.str727, i64 0, i64 0)) #8
  br label %201

; <label>:54                                      ; preds = %17, %12, %7
  %55 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %56 = icmp eq %union.thing* %55, null
  br i1 %56, label %57, label %.lr.ph21

; <label>:57                                      ; preds = %54
  store %union.thing* %.0, %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  br label %58

; <label>:58                                      ; preds = %58, %57
  %bp.0.i = phi i8* [ getelementptr inbounds ([26 x i8]* @pack_used, i64 0, i64 0), %57 ], [ %61, %58 ]
  %59 = load i8* %bp.0.i, align 1, !tbaa !5, !range !7
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds i8* %bp.0.i, i64 1
  br i1 %60, label %pack_char.exit, label %58

pack_char.exit:                                   ; preds = %58
  store i8 1, i8* %bp.0.i, align 1, !tbaa !5
  %62 = ptrtoint i8* %bp.0.i to i64
  %63 = sub i64 %62, ptrtoint ([26 x i8]* @pack_used to i64)
  %64 = trunc i64 %63 to i8
  %65 = add i8 %64, 97
  %66 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 9
  %67 = bitcast %struct.stats* %66 to i8*
  store i8 %65, i8* %67, align 1, !tbaa !13
  %68 = load i32* @inpack, align 4, !tbaa !38
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* @inpack, align 4, !tbaa !38
  br label %167

.lr.ph21:                                         ; preds = %75, %54
  %lp.020 = phi %union.thing* [ %op.019, %75 ], [ null, %54 ]
  %op.019 = phi %union.thing* [ %77, %75 ], [ %55, %54 ]
  %70 = getelementptr inbounds %union.thing* %op.019, i64 0, i32 0, i32 2, i32 0
  %71 = load i32* %70, align 4, !tbaa !8
  %72 = icmp eq i32 %71, %10
  br i1 %72, label %.preheader8, label %75

.preheader8:                                      ; preds = %.lr.ph21
  %73 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 9, i32 5, i64 4
  %74 = bitcast i8* %73 to i32*
  br label %79

; <label>:75                                      ; preds = %.lr.ph21
  %76 = getelementptr inbounds %union.thing* %op.019, i64 0, i32 0, i32 0
  %77 = load %union.thing** %76, align 8, !tbaa !14
  %78 = icmp eq %union.thing* %77, null
  br i1 %78, label %.loopexit.thread, label %.lr.ph21

; <label>:79                                      ; preds = %._crit_edge31, %.preheader8
  %80 = phi i32 [ %.pre32, %._crit_edge31 ], [ %10, %.preheader8 ]
  %op.1 = phi %union.thing* [ %90, %._crit_edge31 ], [ %op.019, %.preheader8 ]
  %lp.1 = phi %union.thing* [ %op.1, %._crit_edge31 ], [ %lp.020, %.preheader8 ]
  %81 = icmp eq i32 %80, %10
  br i1 %81, label %82, label %.critedge

; <label>:82                                      ; preds = %79
  %83 = getelementptr inbounds %union.thing* %op.1, i64 0, i32 0, i32 9, i32 5, i64 4
  %84 = bitcast i8* %83 to i32*
  %85 = load i32* %84, align 4, !tbaa !50
  %86 = load i32* %74, align 4, !tbaa !50
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %.critedge.thread, label %88

; <label>:88                                      ; preds = %82
  %89 = getelementptr inbounds %union.thing* %op.1, i64 0, i32 0, i32 0
  %90 = load %union.thing** %89, align 8, !tbaa !14
  %91 = icmp eq %union.thing* %90, null
  br i1 %91, label %.critedge.thread, label %._crit_edge31

._crit_edge31:                                    ; preds = %88
  %.phi.trans.insert = getelementptr inbounds %union.thing* %90, i64 0, i32 0, i32 2, i32 0
  %.pre32 = load i32* %.phi.trans.insert, align 4, !tbaa !8
  br label %79

.critedge:                                        ; preds = %79
  %92 = icmp eq i32 %80, %10
  br i1 %92, label %.critedge.thread, label %.loopexit

.critedge.thread:                                 ; preds = %.critedge, %88, %82
  %lp.236 = phi %union.thing* [ %lp.1, %.critedge ], [ %lp.1, %82 ], [ %op.1, %88 ]
  %93 = getelementptr inbounds %union.thing* %op.1, i64 0, i32 0, i32 9, i32 5, i64 4
  %94 = bitcast i8* %93 to i32*
  %95 = load i32* %94, align 4, !tbaa !50
  %96 = load i32* %74, align 4, !tbaa !50
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %.loopexit

; <label>:98                                      ; preds = %.critedge.thread
  switch i32 %10, label %106 [
    i32 33, label %99
    i32 63, label %99
    i32 58, label %99
  ]

; <label>:99                                      ; preds = %98, %98, %98
  %100 = tail call zeroext i1 @pack_room(i1 zeroext %from_floor.0, %union.thing* %.0)
  br i1 %100, label %101, label %201

; <label>:101                                     ; preds = %99
  %102 = getelementptr inbounds %union.thing* %op.1, i64 0, i32 0, i32 9, i32 5
  %103 = bitcast [13 x i8]* %102 to i32*
  %104 = load i32* %103, align 4, !tbaa !78
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %103, align 4, !tbaa !78
  br label %.thread

.thread:                                          ; preds = %136, %101
  %op.2 = phi %union.thing* [ %op.1, %101 ], [ %op.3, %136 ]
  tail call void @discard(%union.thing* %.0) #8
  br label %167

; <label>:106                                     ; preds = %98
  %107 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 10
  %108 = bitcast %struct.room** %107 to i32*
  %109 = load i32* %108, align 4, !tbaa !116
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %.loopexit, label %.preheader7

.preheader7:                                      ; preds = %._crit_edge33, %106
  %111 = phi i32 [ %.pre35, %._crit_edge33 ], [ %80, %106 ]
  %op.3 = phi %union.thing* [ %125, %._crit_edge33 ], [ %op.1, %106 ]
  %lp.3 = phi %union.thing* [ %op.3, %._crit_edge33 ], [ %op.1, %106 ]
  %112 = icmp eq i32 %111, %10
  br i1 %112, label %113, label %.loopexit

; <label>:113                                     ; preds = %.preheader7
  %114 = getelementptr inbounds %union.thing* %op.3, i64 0, i32 0, i32 9, i32 5, i64 4
  %115 = bitcast i8* %114 to i32*
  %116 = load i32* %115, align 4, !tbaa !50
  %117 = icmp eq i32 %116, %95
  br i1 %117, label %118, label %.critedge1.thread

; <label>:118                                     ; preds = %113
  %119 = getelementptr inbounds %union.thing* %op.3, i64 0, i32 0, i32 10
  %120 = bitcast %struct.room** %119 to i32*
  %121 = load i32* %120, align 4, !tbaa !116
  %122 = icmp eq i32 %121, %109
  br i1 %122, label %.critedge1, label %123

; <label>:123                                     ; preds = %118
  %124 = getelementptr inbounds %union.thing* %op.3, i64 0, i32 0, i32 0
  %125 = load %union.thing** %124, align 8, !tbaa !14
  %126 = icmp eq %union.thing* %125, null
  br i1 %126, label %.critedge1, label %._crit_edge33

._crit_edge33:                                    ; preds = %123
  %.phi.trans.insert34 = getelementptr inbounds %union.thing* %125, i64 0, i32 0, i32 2, i32 0
  %.pre35 = load i32* %.phi.trans.insert34, align 4, !tbaa !8
  br label %.preheader7

.critedge1:                                       ; preds = %123, %118
  %lp.4 = phi %union.thing* [ %op.3, %123 ], [ %lp.3, %118 ]
  br i1 %112, label %.critedge1.thread, label %.loopexit

.critedge1.thread:                                ; preds = %.critedge1, %113
  %lp.437 = phi %union.thing* [ %lp.4, %.critedge1 ], [ %lp.3, %113 ]
  %127 = getelementptr inbounds %union.thing* %op.3, i64 0, i32 0, i32 9, i32 5, i64 4
  %128 = bitcast i8* %127 to i32*
  %129 = load i32* %128, align 4, !tbaa !50
  %130 = icmp eq i32 %129, %95
  br i1 %130, label %131, label %.loopexit

; <label>:131                                     ; preds = %.critedge1.thread
  %132 = getelementptr inbounds %union.thing* %op.3, i64 0, i32 0, i32 10
  %133 = bitcast %struct.room** %132 to i32*
  %134 = load i32* %133, align 4, !tbaa !116
  %135 = icmp eq i32 %134, %109
  br i1 %135, label %136, label %.loopexit

; <label>:136                                     ; preds = %131
  %137 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 9, i32 5
  %138 = bitcast [13 x i8]* %137 to i32*
  %139 = load i32* %138, align 4, !tbaa !78
  %140 = getelementptr inbounds %union.thing* %op.3, i64 0, i32 0, i32 9, i32 5
  %141 = bitcast [13 x i8]* %140 to i32*
  %142 = load i32* %141, align 4, !tbaa !78
  %143 = add nsw i32 %142, %139
  store i32 %143, i32* %141, align 4, !tbaa !78
  %144 = load i32* @inpack, align 4, !tbaa !38
  %145 = add nsw i32 %144, -1
  store i32 %145, i32* @inpack, align 4, !tbaa !38
  %146 = tail call zeroext i1 @pack_room(i1 zeroext %from_floor.0, %union.thing* %.0)
  br i1 %146, label %.thread, label %201

.loopexit:                                        ; preds = %131, %.critedge1.thread, %.critedge1, %.preheader7, %106, %.critedge.thread, %.critedge
  %lp.5 = phi %union.thing* [ %lp.437, %131 ], [ %lp.437, %.critedge1.thread ], [ %lp.4, %.critedge1 ], [ %op.1, %106 ], [ %lp.236, %.critedge.thread ], [ %lp.1, %.critedge ], [ %lp.3, %.preheader7 ]
  %147 = icmp eq %union.thing* %lp.5, null
  br i1 %147, label %167, label %.loopexit.thread

.loopexit.thread:                                 ; preds = %.loopexit, %75
  %lp.539 = phi %union.thing* [ %lp.5, %.loopexit ], [ %op.019, %75 ]
  %148 = tail call zeroext i1 @pack_room(i1 zeroext %from_floor.0, %union.thing* %.0)
  br i1 %148, label %.preheader, label %201

.preheader:                                       ; preds = %.preheader, %.loopexit.thread
  %bp.0.i3 = phi i8* [ %151, %.preheader ], [ getelementptr inbounds ([26 x i8]* @pack_used, i64 0, i64 0), %.loopexit.thread ]
  %149 = load i8* %bp.0.i3, align 1, !tbaa !5, !range !7
  %150 = icmp eq i8 %149, 0
  %151 = getelementptr inbounds i8* %bp.0.i3, i64 1
  br i1 %150, label %pack_char.exit4, label %.preheader

pack_char.exit4:                                  ; preds = %.preheader
  store i8 1, i8* %bp.0.i3, align 1, !tbaa !5
  %152 = ptrtoint i8* %bp.0.i3 to i64
  %153 = sub i64 %152, ptrtoint ([26 x i8]* @pack_used to i64)
  %154 = trunc i64 %153 to i8
  %155 = add i8 %154, 97
  %156 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 9
  %157 = bitcast %struct.stats* %156 to i8*
  store i8 %155, i8* %157, align 1, !tbaa !13
  %158 = getelementptr inbounds %union.thing* %lp.539, i64 0, i32 0, i32 0
  %159 = load %union.thing** %158, align 8, !tbaa !14
  %160 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 0
  store %union.thing* %159, %union.thing** %160, align 8, !tbaa !14
  %161 = getelementptr inbounds %union.thing* %.0, i64 0, i32 0, i32 1
  store %union.thing* %lp.539, %union.thing** %161, align 8, !tbaa !87
  %162 = load %union.thing** %158, align 8, !tbaa !14
  %163 = icmp eq %union.thing* %162, null
  br i1 %163, label %166, label %164

; <label>:164                                     ; preds = %pack_char.exit4
  %165 = getelementptr inbounds %union.thing* %162, i64 0, i32 0, i32 1
  store %union.thing* %.0, %union.thing** %165, align 8, !tbaa !87
  br label %166

; <label>:166                                     ; preds = %164, %pack_char.exit4
  store %union.thing* %.0, %union.thing** %158, align 8, !tbaa !14
  br label %167

; <label>:167                                     ; preds = %166, %.loopexit, %.thread, %pack_char.exit
  %.2 = phi %union.thing* [ %.0, %pack_char.exit ], [ %.0, %166 ], [ %.0, %.loopexit ], [ %op.2, %.thread ]
  %168 = bitcast %union.thing* %.2 to %struct.anon.0*
  %169 = getelementptr inbounds %struct.anon.0* %168, i64 0, i32 14
  %170 = load i32* %169, align 4, !tbaa !12
  %171 = or i32 %170, 16
  store i32 %171, i32* %169, align 4, !tbaa !12
  %op.45 = load %union.thing** @mlist, align 8
  %172 = icmp eq %union.thing* %op.45, null
  br i1 %172, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %167
  %173 = getelementptr inbounds %union.thing* %.2, i64 0, i32 0, i32 2, i32 1
  %174 = bitcast i32* %173 to %struct.coord*
  br label %175

; <label>:175                                     ; preds = %180, %.lr.ph
  %op.46 = phi %union.thing* [ %op.45, %.lr.ph ], [ %op.4, %180 ]
  %176 = getelementptr inbounds %union.thing* %op.46, i64 0, i32 0, i32 7
  %177 = load %struct.coord** %176, align 8, !tbaa !27
  %178 = icmp eq %struct.coord* %177, %174
  br i1 %178, label %179, label %180

; <label>:179                                     ; preds = %175
  store %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord** %176, align 8, !tbaa !27
  br label %180

; <label>:180                                     ; preds = %179, %175
  %181 = getelementptr inbounds %union.thing* %op.46, i64 0, i32 0, i32 0
  %op.4 = load %union.thing** %181, align 8
  %182 = icmp eq %union.thing* %op.4, null
  br i1 %182, label %._crit_edge, label %175

._crit_edge:                                      ; preds = %180, %167
  %183 = getelementptr inbounds %union.thing* %.2, i64 0, i32 0, i32 2, i32 0
  %184 = load i32* %183, align 4, !tbaa !8
  %185 = icmp eq i32 %184, 44
  br i1 %185, label %186, label %187

; <label>:186                                     ; preds = %._crit_edge
  store i8 1, i8* @amulet, align 1, !tbaa !5
  br label %187

; <label>:187                                     ; preds = %186, %._crit_edge
  br i1 %silent, label %201, label %188

; <label>:188                                     ; preds = %187
  %189 = load i8* @terse, align 1, !tbaa !5, !range !7
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %192

; <label>:191                                     ; preds = %188
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([14 x i8]* @.str1728, i64 0, i64 0)) #8
  %.pre = load i8* @terse, align 1, !tbaa !5
  br label %192

; <label>:192                                     ; preds = %191, %188
  %193 = phi i8 [ %189, %188 ], [ %.pre, %191 ]
  %194 = icmp eq i8 %193, 0
  %195 = tail call i8* @inv_name(%union.thing* %.2, i1 zeroext %194) #8
  %196 = getelementptr inbounds %union.thing* %.2, i64 0, i32 0, i32 9
  %197 = bitcast %struct.stats* %196 to i8*
  %198 = load i8* %197, align 1, !tbaa !13
  %199 = sext i8 %198 to i32
  %200 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([8 x i8]* @.str2729, i64 0, i64 0), i8* %195, i32 %199) #8
  br label %201

; <label>:201                                     ; preds = %192, %187, %.loopexit.thread, %136, %99, %38, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @pack_room(i1 zeroext %from_floor, %union.thing* %obj) #0 {
  %1 = load i32* @inpack, align 4, !tbaa !38
  %2 = add nsw i32 %1, 1
  store i32 %2, i32* @inpack, align 4, !tbaa !38
  %3 = icmp sgt i32 %1, 22
  br i1 %3, label %4, label %21

; <label>:4                                       ; preds = %0
  %5 = load i8* @terse, align 1, !tbaa !5, !range !7
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([9 x i8]* @.str3730, i64 0, i64 0)) #8
  br label %8

; <label>:8                                       ; preds = %7, %4
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([8 x i8]* @.str4731, i64 0, i64 0)) #8
  %9 = load i8* @terse, align 1, !tbaa !5, !range !7
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %8
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([14 x i8]* @.str5732, i64 0, i64 0)) #8
  br label %12

; <label>:12                                      ; preds = %11, %8
  %13 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br i1 %from_floor, label %14, label %20

; <label>:14                                      ; preds = %12
  %15 = load i8* @terse, align 1, !tbaa !5, !range !7
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %move_msg.exit

; <label>:17                                      ; preds = %14
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([5 x i8]* @.str12739, i64 0, i64 0)) #8
  br label %move_msg.exit

move_msg.exit:                                    ; preds = %17, %14
  %18 = tail call i8* @inv_name(%union.thing* %obj, i1 zeroext true) #8
  %19 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str13740, i64 0, i64 0), i8* %18) #8
  br label %20

; <label>:20                                      ; preds = %move_msg.exit, %12
  store i32 23, i32* @inpack, align 4, !tbaa !38
  br label %53

; <label>:21                                      ; preds = %0
  br i1 %from_floor, label %22, label %53

; <label>:22                                      ; preds = %21
  tail call void @_detach(%union.thing** @lvl_obj, %union.thing* %obj) #8
  %23 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %24 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %25 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %26 = tail call i32 @wmove(%struct._win_st* %23, i32 %24, i32 %25) #8
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %38, label %28

; <label>:28                                      ; preds = %22
  %29 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %30 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %31 = getelementptr inbounds %struct.room* %30, i64 0, i32 4
  %32 = load i16* %31, align 2, !tbaa !39
  %33 = and i16 %32, 2
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %floor_ch.exit

; <label>:35                                      ; preds = %28
  %36 = tail call zeroext i1 (...)* bitcast (i1 ()* @show_floor to i1 (...)*)() #8
  %phitmp = select i1 %36, i32 46, i32 32
  br label %floor_ch.exit

floor_ch.exit:                                    ; preds = %35, %28
  %.0.i = phi i32 [ %phitmp, %35 ], [ 35, %28 ]
  %37 = tail call i32 @waddch(%struct._win_st* %29, i32 %.0.i) #8
  br label %38

; <label>:38                                      ; preds = %floor_ch.exit, %22
  %39 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %40 = getelementptr inbounds %struct.room* %39, i64 0, i32 4
  %41 = load i16* %40, align 2, !tbaa !39
  %42 = and i16 %41, 2
  %43 = icmp ne i16 %42, 0
  %44 = select i1 %43, i8 35, i8 46
  %45 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %46 = trunc i64 %45 to i32
  %47 = shl i32 %46, 5
  %48 = lshr i64 %45, 32
  %49 = trunc i64 %48 to i32
  %50 = add nsw i32 %47, %49
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %51, i32 0
  store i8 %44, i8* %52, align 8, !tbaa !33
  br label %53

; <label>:53                                      ; preds = %38, %21, %20
  %.0 = phi i1 [ false, %20 ], [ true, %38 ], [ true, %21 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @move_msg(%union.thing* %obj) #0 {
  %1 = load i8* @terse, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([5 x i8]* @.str12739, i64 0, i64 0)) #8
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = tail call i8* @inv_name(%union.thing* %obj, i1 zeroext true) #8
  %6 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str13740, i64 0, i64 0), i8* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %union.thing* @leave_pack(%union.thing* %obj, i1 zeroext %newobj, i1 zeroext %all) #0 {
  %1 = load i32* @inpack, align 4, !tbaa !38
  %2 = add nsw i32 %1, -1
  store i32 %2, i32* @inpack, align 4, !tbaa !38
  %3 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5
  %4 = bitcast [13 x i8]* %3 to i32*
  %5 = load i32* %4, align 4, !tbaa !78
  %.not = icmp slt i32 %5, 2
  %brmerge = or i1 %.not, %all
  br i1 %brmerge, label %23, label %6

; <label>:6                                       ; preds = %0
  store %union.thing* %obj, %union.thing** @last_pick, align 8, !tbaa !1
  %7 = add nsw i32 %5, -1
  store i32 %7, i32* %4, align 4, !tbaa !78
  %8 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 10
  %9 = bitcast %struct.room** %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !116
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

; <label>:12                                      ; preds = %6
  %13 = load i32* @inpack, align 4, !tbaa !38
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @inpack, align 4, !tbaa !38
  br label %15

; <label>:15                                      ; preds = %12, %6
  br i1 %newobj, label %16, label %30

; <label>:16                                      ; preds = %15
  %17 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %18 = bitcast %union.thing* %17 to i8*
  %19 = bitcast %union.thing* %obj to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 112, i32 8, i1 false), !tbaa.struct !117
  %20 = getelementptr inbounds %union.thing* %17, i64 0, i32 0, i32 9, i32 5
  %21 = bitcast [13 x i8]* %20 to i32*
  %22 = bitcast %union.thing* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 16, i32 8, i1 false)
  store i32 1, i32* %21, align 4, !tbaa !78
  br label %30

; <label>:23                                      ; preds = %0
  store %union.thing* null, %union.thing** @last_pick, align 8, !tbaa !1
  %24 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9
  %25 = bitcast %struct.stats* %24 to i8*
  %26 = load i8* %25, align 1, !tbaa !13
  %27 = sext i8 %26 to i64
  %28 = add i64 %27, -97
  %29 = getelementptr inbounds [0 x i8]* bitcast ([26 x i8]* @pack_used to [0 x i8]*), i64 0, i64 %28
  store i8 0, i8* %29, align 1, !tbaa !5
  tail call void @_detach(%union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), %union.thing* %obj) #8
  br label %30

; <label>:30                                      ; preds = %23, %16, %15
  %nobj.0 = phi %union.thing* [ %obj, %23 ], [ %17, %16 ], [ %obj, %15 ]
  ret %union.thing* %nobj.0
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @pack_char() #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %bp.0 = phi i8* [ getelementptr inbounds ([26 x i8]* @pack_used, i64 0, i64 0), %0 ], [ %4, %1 ]
  %2 = load i8* %bp.0, align 1, !tbaa !5, !range !7
  %3 = icmp eq i8 %2, 0
  %4 = getelementptr inbounds i8* %bp.0, i64 1
  br i1 %3, label %5, label %1

; <label>:5                                       ; preds = %1
  store i8 1, i8* %bp.0, align 1, !tbaa !5
  %6 = ptrtoint i8* %bp.0 to i64
  %7 = sub i64 %6, ptrtoint ([26 x i8]* @pack_used to i64)
  %8 = trunc i64 %7 to i8
  %9 = add i8 %8, 97
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @inventory(%union.thing* %list, i32 %type) #0 {
  store i32 0, i32* @n_objs, align 4, !tbaa !38
  %1 = icmp eq %union.thing* %list, null
  br i1 %1, label %.thread, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %2 = icmp eq i32 %type, 0
  br label %3

; <label>:3                                       ; preds = %23, %.lr.ph
  %.013 = phi %union.thing* [ %list, %.lr.ph ], [ %25, %23 ]
  br i1 %2, label %10, label %4

; <label>:4                                       ; preds = %3
  %5 = getelementptr inbounds %union.thing* %.013, i64 0, i32 0, i32 2, i32 0
  %6 = load i32* %5, align 4, !tbaa !8
  %7 = icmp eq i32 %6, %type
  br i1 %7, label %10, label %8

; <label>:8                                       ; preds = %4
  switch i32 %type, label %23 [
    i32 -1, label %switch.early.test
    i32 -2, label %9
  ]

switch.early.test:                                ; preds = %8
  switch i32 %6, label %10 [
    i32 58, label %23
    i32 44, label %23
  ]

; <label>:9                                       ; preds = %8
  switch i32 %6, label %23 [
    i32 61, label %10
    i32 47, label %10
  ]

; <label>:10                                      ; preds = %9, %9, %switch.early.test, %4, %3
  %11 = load i32* @n_objs, align 4, !tbaa !38
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* @n_objs, align 4, !tbaa !38
  %13 = getelementptr inbounds %union.thing* %.013, i64 0, i32 0, i32 9
  %14 = bitcast %struct.stats* %13 to i8*
  %15 = load i8* %14, align 1, !tbaa !13
  %16 = sext i8 %15 to i32
  %17 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([1024 x i8]* @inventory.inv_temp, i64 0, i64 0), i32 0, i64 1024, i8* getelementptr inbounds ([8 x i8]* @.str6733, i64 0, i64 0), i32 %16) #8
  store i8 1, i8* @msg_esc, align 1, !tbaa !5
  %18 = tail call i8* @inv_name(%union.thing* %.013, i1 zeroext false) #8
  %19 = tail call signext i8 @add_line(i8* getelementptr inbounds ([1024 x i8]* @inventory.inv_temp, i64 0, i64 0), i8* %18) #8
  %20 = icmp eq i8 %19, 27
  store i8 0, i8* @msg_esc, align 1, !tbaa !5
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %10
  %22 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str7734, i64 0, i64 0)) #8
  br label %38

; <label>:23                                      ; preds = %10, %9, %switch.early.test, %switch.early.test, %8
  %24 = getelementptr inbounds %union.thing* %.013, i64 0, i32 0, i32 0
  %25 = load %union.thing** %24, align 8, !tbaa !14
  %26 = icmp eq %union.thing* %25, null
  br i1 %26, label %27, label %3

; <label>:27                                      ; preds = %23
  %.pre = load i32* @n_objs, align 4, !tbaa !38
  %phitmp = icmp eq i32 %.pre, 0
  br i1 %phitmp, label %.thread, label %37

.thread:                                          ; preds = %27, %0
  %28 = load i8* @terse, align 1, !tbaa !5, !range !7
  %29 = icmp eq i8 %28, 0
  %30 = icmp eq i32 %type, 0
  br i1 %29, label %34, label %31

; <label>:31                                      ; preds = %.thread
  %32 = select i1 %30, i8* getelementptr inbounds ([13 x i8]* @.str8735, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8]* @.str9736, i64 0, i64 0)
  %33 = tail call i32 (i8*, ...)* @msg(i8* %32) #8
  br label %38

; <label>:34                                      ; preds = %.thread
  %35 = select i1 %30, i8* getelementptr inbounds ([21 x i8]* @.str10737, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8]* @.str11738, i64 0, i64 0)
  %36 = tail call i32 (i8*, ...)* @msg(i8* %35) #8
  br label %38

; <label>:37                                      ; preds = %27
  tail call void (...)* bitcast (void ()* @end_line to void (...)*)() #8
  br label %38

; <label>:38                                      ; preds = %37, %34, %31, %21
  %.0 = phi i1 [ true, %21 ], [ true, %37 ], [ false, %34 ], [ false, %31 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @pick_up(i8 signext %ch) #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = and i16 %1, 8
  %3 = icmp eq i16 %2, 0
  br i1 %3, label %4, label %25

; <label>:4                                       ; preds = %0
  %5 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %6 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %7 = tail call %union.thing* @find_obj(i32 %5, i32 %6) #8
  %8 = load i8* @move_on, align 1, !tbaa !5, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10

; <label>:10                                      ; preds = %4
  %11 = load i8* @terse, align 1, !tbaa !5, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %move_msg.exit

; <label>:13                                      ; preds = %10
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([5 x i8]* @.str12739, i64 0, i64 0)) #8
  br label %move_msg.exit

move_msg.exit:                                    ; preds = %13, %10
  %14 = tail call i8* @inv_name(%union.thing* %7, i1 zeroext true) #8
  %15 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str13740, i64 0, i64 0), i8* %14) #8
  br label %25

; <label>:16                                      ; preds = %4
  %cond = icmp eq i8 %ch, 42
  br i1 %cond, label %17, label %24

; <label>:17                                      ; preds = %16
  %18 = icmp eq %union.thing* %7, null
  br i1 %18, label %25, label %19

; <label>:19                                      ; preds = %17
  %20 = getelementptr inbounds %union.thing* %7, i64 0, i32 0, i32 9, i32 6
  %21 = load i32* %20, align 4, !tbaa !70
  tail call void @money(i32 %21)
  tail call void @_detach(%union.thing** @lvl_obj, %union.thing* %7) #8
  tail call void @discard(%union.thing* %7) #8
  %22 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %23 = getelementptr inbounds %struct.room* %22, i64 0, i32 3
  store i32 0, i32* %23, align 4, !tbaa !25
  br label %25

; <label>:24                                      ; preds = %16
  tail call void @add_pack(%union.thing* null, i1 zeroext false)
  br label %25

; <label>:25                                      ; preds = %24, %19, %17, %move_msg.exit, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @money(i32 %value) #0 {
  %1 = load i32* @purse, align 4, !tbaa !38
  %2 = add nsw i32 %1, %value
  store i32 %2, i32* @purse, align 4, !tbaa !38
  %3 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %4 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %5 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %6 = tail call i32 @wmove(%struct._win_st* %3, i32 %4, i32 %5) #8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %18, label %8

; <label>:8                                       ; preds = %0
  %9 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %10 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %11 = getelementptr inbounds %struct.room* %10, i64 0, i32 4
  %12 = load i16* %11, align 2, !tbaa !39
  %13 = and i16 %12, 2
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %floor_ch.exit

; <label>:15                                      ; preds = %8
  %16 = tail call zeroext i1 (...)* bitcast (i1 ()* @show_floor to i1 (...)*)() #8
  %phitmp = select i1 %16, i32 46, i32 32
  br label %floor_ch.exit

floor_ch.exit:                                    ; preds = %15, %8
  %.0.i = phi i32 [ %phitmp, %15 ], [ 35, %8 ]
  %17 = tail call i32 @waddch(%struct._win_st* %9, i32 %.0.i) #8
  br label %18

; <label>:18                                      ; preds = %floor_ch.exit, %0
  %19 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %20 = getelementptr inbounds %struct.room* %19, i64 0, i32 4
  %21 = load i16* %20, align 2, !tbaa !39
  %22 = and i16 %21, 2
  %23 = icmp ne i16 %22, 0
  %24 = select i1 %23, i8 35, i8 46
  %25 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %26 = trunc i64 %25 to i32
  %27 = shl i32 %26, 5
  %28 = lshr i64 %25, 32
  %29 = trunc i64 %28 to i32
  %30 = add nsw i32 %27, %29
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %31, i32 0
  store i8 %24, i8* %32, align 8, !tbaa !33
  %33 = icmp sgt i32 %value, 0
  br i1 %33, label %34, label %40

; <label>:34                                      ; preds = %18
  %35 = load i8* @terse, align 1, !tbaa !5, !range !7
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %38

; <label>:37                                      ; preds = %34
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([11 x i8]* @.str25752, i64 0, i64 0)) #8
  br label %38

; <label>:38                                      ; preds = %37, %34
  %39 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([15 x i8]* @.str26753, i64 0, i64 0), i32 %value) #8
  br label %40

; <label>:40                                      ; preds = %38, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @picky_inven() #0 {
  %1 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([29 x i8]* @.str14741, i64 0, i64 0)) #8
  br label %35

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 0
  %7 = load %union.thing** %6, align 8, !tbaa !14
  %8 = icmp eq %union.thing* %7, null
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %5
  %10 = tail call i8* @inv_name(%union.thing* %1, i1 zeroext false) #8
  %11 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([6 x i8]* @.str15742, i64 0, i64 0), i8* %10) #8
  br label %35

; <label>:12                                      ; preds = %5
  %13 = load i8* @terse, align 1, !tbaa !5, !range !7
  %14 = icmp ne i8 %13, 0
  %15 = select i1 %14, i8* getelementptr inbounds ([7 x i8]* @.str16743, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8]* @.str17744, i64 0, i64 0)
  %16 = tail call i32 (i8*, ...)* @msg(i8* %15) #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %17 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %18 = sext i8 %17 to i32
  %19 = icmp eq i8 %17, 27
  br i1 %19, label %21, label %.preheader

.preheader:                                       ; preds = %12
  %obj.02 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8
  %20 = icmp eq %union.thing* %obj.02, null
  br i1 %20, label %._crit_edge, label %.lr.ph

; <label>:21                                      ; preds = %12
  %22 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str7734, i64 0, i64 0)) #8
  br label %35

; <label>:23                                      ; preds = %.lr.ph
  %24 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %24, align 8
  %25 = icmp eq %union.thing* %obj.0, null
  br i1 %25, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %23, %.preheader
  %obj.03 = phi %union.thing* [ %obj.0, %23 ], [ %obj.02, %.preheader ]
  %26 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9
  %27 = bitcast %struct.stats* %26 to i8*
  %28 = load i8* %27, align 1, !tbaa !13
  %29 = icmp eq i8 %17, %28
  br i1 %29, label %30, label %23

; <label>:30                                      ; preds = %.lr.ph
  %31 = tail call i8* @inv_name(%union.thing* %obj.03, i1 zeroext false) #8
  %32 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([7 x i8]* @.str18745, i64 0, i64 0), i32 %18, i8* %31) #8
  br label %35

._crit_edge:                                      ; preds = %23, %.preheader
  %33 = tail call i8* @unctrl(i32 %18) #8
  %34 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([17 x i8]* @.str19746, i64 0, i64 0), i8* %33) #8
  br label %35

; <label>:35                                      ; preds = %._crit_edge, %30, %21, %9, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %union.thing* @get_item(i8* %purpose, i32 %type) #0 {
  %1 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([29 x i8]* @.str14741, i64 0, i64 0)) #8
  br label %.loopexit6

; <label>:5                                       ; preds = %0
  %6 = load i8* @again, align 1, !tbaa !5, !range !7
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %.preheader5, label %8

; <label>:8                                       ; preds = %5
  %9 = load %union.thing** @last_pick, align 8, !tbaa !1
  %10 = icmp eq %union.thing* %9, null
  br i1 %10, label %11, label %.loopexit6

; <label>:11                                      ; preds = %8
  %12 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([12 x i8]* @.str20747, i64 0, i64 0)) #8
  br label %.loopexit6

.preheader5:                                      ; preds = %.loopexit, %32, %5
  %13 = load i8* @terse, align 1, !tbaa !5, !range !7
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %.preheader5
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([29 x i8]* @.str21748, i64 0, i64 0)) #8
  br label %16

; <label>:16                                      ; preds = %15, %.preheader5
  tail call void (i8*, ...)* @addmsg(i8* %purpose) #8
  %17 = load i8* @terse, align 1, !tbaa !5, !range !7
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

; <label>:19                                      ; preds = %16
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([6 x i8]* @.str22749, i64 0, i64 0)) #8
  br label %20

; <label>:20                                      ; preds = %19, %16
  %21 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([17 x i8]* @.str23750, i64 0, i64 0)) #8
  %22 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %23 = sext i8 %22 to i32
  %24 = icmp eq i8 %22, 27
  br i1 %24, label %25, label %30

; <label>:25                                      ; preds = %20
  %26 = load i8* @l_last_comm, align 1, !tbaa !28
  store i8 %26, i8* @last_comm, align 1, !tbaa !28
  %27 = load i8* @l_last_dir, align 1, !tbaa !28
  store i8 %27, i8* @last_dir, align 1, !tbaa !28
  %28 = load %union.thing** @l_last_pick, align 8, !tbaa !1
  store %union.thing* %28, %union.thing** @last_pick, align 8, !tbaa !1
  store i8 0, i8* @after, align 1, !tbaa !5
  %29 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str7734, i64 0, i64 0)) #8
  br label %.loopexit6

; <label>:30                                      ; preds = %20
  store i32 1, i32* @n_objs, align 4, !tbaa !38
  %31 = icmp eq i8 %22, 42
  br i1 %31, label %32, label %.preheader

.preheader:                                       ; preds = %30
  %obj.02 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8
  %cond3 = icmp eq %union.thing* %obj.02, null
  br i1 %cond3, label %.loopexit, label %.lr.ph

; <label>:32                                      ; preds = %30
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %33 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %34 = tail call zeroext i1 @inventory(%union.thing* %33, i32 %type)
  br i1 %34, label %.preheader5, label %35

; <label>:35                                      ; preds = %32
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %.loopexit6

; <label>:36                                      ; preds = %.lr.ph
  %37 = getelementptr inbounds %union.thing* %obj.04, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %37, align 8
  %cond = icmp eq %union.thing* %obj.0, null
  br i1 %cond, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %36, %.preheader
  %obj.04 = phi %union.thing* [ %obj.0, %36 ], [ %obj.02, %.preheader ]
  %38 = getelementptr inbounds %union.thing* %obj.04, i64 0, i32 0, i32 9
  %39 = bitcast %struct.stats* %38 to i8*
  %40 = load i8* %39, align 1, !tbaa !13
  %41 = icmp eq i8 %40, %22
  br i1 %41, label %.loopexit6, label %36

.loopexit:                                        ; preds = %36, %.preheader
  %42 = tail call i8* @unctrl(i32 %23) #8
  %43 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str24751, i64 0, i64 0), i8* %42) #8
  br label %.preheader5

.loopexit6:                                       ; preds = %.lr.ph, %35, %25, %11, %8, %3
  %.0 = phi %union.thing* [ null, %25 ], [ null, %35 ], [ %9, %8 ], [ null, %11 ], [ null, %3 ], [ %obj.04, %.lr.ph ]
  ret %union.thing* %.0
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @floor_ch() #0 {
  %1 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %2 = getelementptr inbounds %struct.room* %1, i64 0, i32 4
  %3 = load i16* %2, align 2, !tbaa !39
  %4 = and i16 %3, 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = tail call zeroext i1 (...)* bitcast (i1 ()* @show_floor to i1 (...)*)() #8
  %8 = select i1 %7, i8 46, i8 32
  br label %9

; <label>:9                                       ; preds = %6, %0
  %.0 = phi i8 [ %8, %6 ], [ 35, %0 ]
  ret i8 %.0
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @floor_at() #0 {
  %1 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %2 = trunc i64 %1 to i32
  %3 = shl i32 %2, 5
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 0
  %9 = load i8* %8, align 8, !tbaa !33
  %10 = icmp eq i8 %9, 46
  br i1 %10, label %11, label %floor_ch.exit

; <label>:11                                      ; preds = %0
  %12 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %13 = getelementptr inbounds %struct.room* %12, i64 0, i32 4
  %14 = load i16* %13, align 2, !tbaa !39
  %15 = and i16 %14, 2
  %16 = icmp eq i16 %15, 0
  br i1 %16, label %17, label %floor_ch.exit

; <label>:17                                      ; preds = %11
  %18 = tail call zeroext i1 (...)* bitcast (i1 ()* @show_floor to i1 (...)*)() #8
  %19 = select i1 %18, i8 46, i8 32
  br label %floor_ch.exit

floor_ch.exit:                                    ; preds = %17, %11, %0
  %ch.0 = phi i8 [ %9, %0 ], [ %19, %17 ], [ 35, %11 ]
  ret i8 %ch.0
}

; Function Attrs: nounwind ssp uwtable
define void @reset_last() #0 {
  %1 = load i8* @l_last_comm, align 1, !tbaa !28
  store i8 %1, i8* @last_comm, align 1, !tbaa !28
  %2 = load i8* @l_last_dir, align 1, !tbaa !28
  store i8 %2, i8* @last_dir, align 1, !tbaa !28
  %3 = load %union.thing** @l_last_pick, align 8, !tbaa !1
  store %union.thing* %3, %union.thing** @last_pick, align 8, !tbaa !1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_passages() #0 {
.preheader12:
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 0, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 1, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 2, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 3, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 4, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 5, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 6, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 7, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 8, i32 1, i64 0), i8 0, i64 10, i32 1, i1 false)
  %0 = tail call i32 @rnd(i32 9) #8
  %1 = sext i32 %0 to i64
  %2 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %1
  %3 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %1, i32 2
  store i8 1, i8* %3, align 1, !tbaa !119
  br label %4

; <label>:4                                       ; preds = %42, %.preheader12
  %r1.1 = phi %struct.rdes* [ %2, %.preheader12 ], [ %r1.2, %42 ]
  %r2.0 = phi %struct.rdes* [ null, %.preheader12 ], [ %r2.2, %42 ]
  %roomcount.0 = phi i32 [ 1, %.preheader12 ], [ %roomcount.1, %42 ]
  br label %5

; <label>:5                                       ; preds = %18, %4
  %indvars.iv15 = phi i64 [ 0, %4 ], [ %indvars.iv.next16, %18 ]
  %j.111 = phi i32 [ 0, %4 ], [ %j.2, %18 ]
  %r2.19 = phi %struct.rdes* [ %r2.0, %4 ], [ %r2.2, %18 ]
  %6 = getelementptr inbounds %struct.rdes* %r1.1, i64 0, i32 0, i64 %indvars.iv15
  %7 = load i8* %6, align 1, !tbaa !5, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %18, label %9

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %indvars.iv15, i32 2
  %11 = load i8* %10, align 1, !tbaa !119, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

; <label>:13                                      ; preds = %9
  %14 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %indvars.iv15
  %15 = add nsw i32 %j.111, 1
  %16 = tail call i32 @rnd(i32 %15) #8
  %17 = icmp eq i32 %16, 0
  %.r2.1 = select i1 %17, %struct.rdes* %14, %struct.rdes* %r2.19
  br label %18

; <label>:18                                      ; preds = %13, %9, %5
  %r2.2 = phi %struct.rdes* [ %r2.19, %9 ], [ %r2.19, %5 ], [ %.r2.1, %13 ]
  %j.2 = phi i32 [ %j.111, %9 ], [ %j.111, %5 ], [ %15, %13 ]
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %exitcond17 = icmp eq i64 %indvars.iv.next16, 9
  br i1 %exitcond17, label %19, label %5

; <label>:19                                      ; preds = %18
  %20 = icmp eq i32 %j.2, 0
  br i1 %20, label %.preheader, label %26

.preheader:                                       ; preds = %.preheader, %19
  %21 = tail call i32 @rnd(i32 9) #8
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %22, i32 2
  %24 = load i8* %23, align 1, !tbaa !119, !range !7
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %.preheader, label %.loopexit

; <label>:26                                      ; preds = %19
  %27 = getelementptr inbounds %struct.rdes* %r2.2, i64 0, i32 2
  store i8 1, i8* %27, align 1, !tbaa !119
  %28 = ptrtoint %struct.rdes* %r1.1 to i64
  %29 = sub i64 %28, ptrtoint ([9 x %struct.rdes]* @do_passages.rdes to i64)
  %30 = sdiv exact i64 %29, 19
  %31 = trunc i64 %30 to i32
  %32 = ptrtoint %struct.rdes* %r2.2 to i64
  %33 = sub i64 %32, ptrtoint ([9 x %struct.rdes]* @do_passages.rdes to i64)
  %34 = sdiv exact i64 %33, 19
  %35 = trunc i64 %34 to i32
  tail call void @conn(i32 %31, i32 %35)
  %sext = shl i64 %34, 32
  %36 = ashr exact i64 %sext, 32
  %37 = getelementptr inbounds %struct.rdes* %r1.1, i64 0, i32 1, i64 %36
  store i8 1, i8* %37, align 1, !tbaa !5
  %sext1 = shl i64 %30, 32
  %38 = ashr exact i64 %sext1, 32
  %39 = getelementptr inbounds %struct.rdes* %r2.2, i64 0, i32 1, i64 %38
  store i8 1, i8* %39, align 1, !tbaa !5
  %40 = add nsw i32 %roomcount.0, 1
  br label %42

.loopexit:                                        ; preds = %.preheader
  %41 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %22
  br label %42

; <label>:42                                      ; preds = %.loopexit, %26
  %r1.2 = phi %struct.rdes* [ %r1.1, %26 ], [ %41, %.loopexit ]
  %roomcount.1 = phi i32 [ %40, %26 ], [ %roomcount.0, %.loopexit ]
  %43 = icmp slt i32 %roomcount.1, 9
  br i1 %43, label %4, label %44

; <label>:44                                      ; preds = %42
  %45 = tail call i32 @rnd(i32 5) #8
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %77, %44
  %roomcount.28 = phi i32 [ %78, %77 ], [ %45, %44 ]
  %r2.37 = phi %struct.rdes* [ %r2.5, %77 ], [ %r2.2, %44 ]
  %47 = tail call i32 @rnd(i32 9) #8
  %48 = sext i32 %47 to i64
  br label %49

; <label>:49                                      ; preds = %63, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %63 ]
  %j.36 = phi i32 [ 0, %.lr.ph ], [ %j.4, %63 ]
  %r2.44 = phi %struct.rdes* [ %r2.37, %.lr.ph ], [ %r2.5, %63 ]
  %50 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %48, i32 0, i64 %indvars.iv
  %51 = load i8* %50, align 1, !tbaa !5, !range !7
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %63, label %53

; <label>:53                                      ; preds = %49
  %54 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %48, i32 1, i64 %indvars.iv
  %55 = load i8* %54, align 1, !tbaa !5, !range !7
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %63

; <label>:57                                      ; preds = %53
  %58 = add nsw i32 %j.36, 1
  %59 = tail call i32 @rnd(i32 %58) #8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

; <label>:61                                      ; preds = %57
  %62 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %indvars.iv
  br label %63

; <label>:63                                      ; preds = %61, %57, %53, %49
  %r2.5 = phi %struct.rdes* [ %r2.44, %53 ], [ %62, %61 ], [ %r2.44, %57 ], [ %r2.44, %49 ]
  %j.4 = phi i32 [ %j.36, %53 ], [ %58, %61 ], [ %58, %57 ], [ %j.36, %49 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 9
  br i1 %exitcond, label %64, label %49

; <label>:64                                      ; preds = %63
  %65 = icmp eq i32 %j.4, 0
  br i1 %65, label %77, label %66

; <label>:66                                      ; preds = %64
  %.idx = mul nuw i64 %48, 19
  %67 = sdiv exact i64 %.idx, 19
  %68 = trunc i64 %67 to i32
  %69 = ptrtoint %struct.rdes* %r2.5 to i64
  %70 = sub i64 %69, ptrtoint ([9 x %struct.rdes]* @do_passages.rdes to i64)
  %71 = sdiv exact i64 %70, 19
  %72 = trunc i64 %71 to i32
  tail call void @conn(i32 %68, i32 %72)
  %sext2 = shl i64 %71, 32
  %73 = ashr exact i64 %sext2, 32
  %74 = getelementptr inbounds [9 x %struct.rdes]* @do_passages.rdes, i64 0, i64 %48, i32 1, i64 %73
  store i8 1, i8* %74, align 1, !tbaa !5
  %sext3 = shl i64 %67, 32
  %75 = ashr exact i64 %sext3, 32
  %76 = getelementptr inbounds %struct.rdes* %r2.5, i64 0, i32 1, i64 %75
  store i8 1, i8* %76, align 1, !tbaa !5
  br label %77

; <label>:77                                      ; preds = %66, %64
  %78 = add nsw i32 %roomcount.28, -1
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %77, %44
  store i32 0, i32* @pnum, align 4, !tbaa !38
  store i1 false, i1* @newpnum, align 1
  br i1 true, label %.lr.ph8.i, label %.preheader2.i

.preheader2.i:                                    ; preds = %.lr.ph8.i, %._crit_edge
  br i1 true, label %.preheader.i, label %passnum.exit

.lr.ph8.i:                                        ; preds = %.lr.ph8.i, %._crit_edge
  %rp.06.i = phi %struct.room* [ %81, %.lr.ph8.i ], [ getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 0), %._crit_edge ]
  %80 = getelementptr inbounds %struct.room* %rp.06.i, i64 0, i32 5
  store i32 0, i32* %80, align 4, !tbaa !35
  %81 = getelementptr inbounds %struct.room* %rp.06.i, i64 1
  %82 = icmp ult %struct.room* %81, getelementptr inbounds ([13 x %struct.room]* @passages, i64 1, i64 0)
  br i1 %82, label %.lr.ph8.i, label %.preheader2.i

.preheader.i:                                     ; preds = %._crit_edge.i, %.preheader2.i
  %rp.13.i = phi %struct.room* [ %93, %._crit_edge.i ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader2.i ]
  %83 = getelementptr inbounds %struct.room* %rp.13.i, i64 0, i32 5
  %84 = load i32* %83, align 4, !tbaa !35
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.preheader.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %.lr.ph.i ], [ 0, %.preheader.i ]
  store i1 true, i1* @newpnum, align 1
  %86 = getelementptr inbounds %struct.room* %rp.13.i, i64 0, i32 6, i64 %indvars.iv.i, i32 1
  %87 = load i32* %86, align 4, !tbaa !20
  %88 = getelementptr inbounds %struct.room* %rp.13.i, i64 0, i32 6, i64 %indvars.iv.i, i32 0
  %89 = load i32* %88, align 4, !tbaa !21
  tail call void @numpass(i32 %87, i32 %89) #8
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %90 = load i32* %83, align 4, !tbaa !35
  %91 = trunc i64 %indvars.iv.next.i to i32
  %92 = icmp slt i32 %91, %90
  br i1 %92, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i, %.preheader.i
  %93 = getelementptr inbounds %struct.room* %rp.13.i, i64 1
  %94 = icmp ult %struct.room* %93, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %94, label %.preheader.i, label %passnum.exit

passnum.exit:                                     ; preds = %._crit_edge.i, %.preheader2.i
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @conn(i32 %r1, i32 %r2) #0 {
  %1 = icmp slt i32 %r1, %r2
  br i1 %1, label %2, label %7

; <label>:2                                       ; preds = %0
  %3 = add nsw i32 %r1, 1
  %4 = icmp eq i32 %3, %r2
  %5 = sext i32 %r1 to i64
  %6 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %5
  br i1 %4, label %88, label %12

; <label>:7                                       ; preds = %0
  %8 = add nsw i32 %r2, 1
  %9 = icmp eq i32 %8, %r1
  %10 = sext i32 %r2 to i64
  %11 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %10
  br i1 %9, label %88, label %12

; <label>:12                                      ; preds = %7, %2
  %13 = phi %struct.room* [ %6, %2 ], [ %11, %7 ]
  %14 = phi i64 [ %5, %2 ], [ %10, %7 ]
  %rm.016 = phi i32 [ %r1, %2 ], [ %r2, %7 ]
  %15 = add nsw i32 %rm.016, 3
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %16
  store i1 false, i1* @conn.del.0, align 1
  store i1 true, i1* @conn.del.1, align 1
  %18 = getelementptr inbounds %struct.room* %13, i64 0, i32 0, i32 0
  %19 = load i32* %18, align 4, !tbaa !29
  store i32 %19, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %20 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %14, i32 0, i32 1
  %21 = load i32* %20, align 4, !tbaa !31
  store i32 %21, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %22 = getelementptr inbounds %struct.room* %17, i64 0, i32 0, i32 0
  %23 = load i32* %22, align 4, !tbaa !29
  store i32 %23, i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %24 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %16, i32 0, i32 1
  %25 = load i32* %24, align 4, !tbaa !31
  store i32 %25, i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  %26 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %14, i32 4
  %27 = load i16* %26, align 4, !tbaa !39
  %28 = and i16 %27, 2
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %.preheader29, label %.critedge

.preheader29:                                     ; preds = %12
  %30 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %14, i32 1, i32 0
  %31 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %14, i32 1, i32 1
  br label %32

; <label>:32                                      ; preds = %._crit_edge38, %.preheader29
  %33 = phi i32 [ %.pre39, %._crit_edge38 ], [ %19, %.preheader29 ]
  %34 = load i32* %30, align 4, !tbaa !30
  %35 = add nsw i32 %34, -2
  %36 = tail call i32 @rnd(i32 %35) #8
  %37 = add i32 %33, 1
  %38 = add i32 %37, %36
  store i32 %38, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %39 = load i32* %20, align 4, !tbaa !31
  %40 = load i32* %31, align 4, !tbaa !32
  %41 = add i32 %39, -1
  %42 = add i32 %41, %40
  store i32 %42, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %43 = load i16* %26, align 4, !tbaa !39
  %44 = and i16 %43, 4
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %.critedge, label %46

; <label>:46                                      ; preds = %32
  %47 = shl i32 %38, 5
  %48 = add nsw i32 %47, %42
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %49, i32 1
  %51 = load i8* %50, align 1, !tbaa !36
  %52 = icmp sgt i8 %51, -1
  br i1 %52, label %._crit_edge38, label %.critedge

._crit_edge38:                                    ; preds = %46
  %.pre39 = load i32* %18, align 4, !tbaa !29
  br label %32

.critedge:                                        ; preds = %46, %32, %12
  %53 = phi i32 [ %19, %12 ], [ %38, %46 ], [ %38, %32 ]
  %54 = phi i32 [ %21, %12 ], [ %42, %46 ], [ %42, %32 ]
  %55 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %16, i32 4
  %56 = load i16* %55, align 4, !tbaa !39
  %57 = and i16 %56, 2
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %.preheader28, label %.critedge..critedge1_crit_edge

.critedge..critedge1_crit_edge:                   ; preds = %.critedge
  %.pre37 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  br label %.critedge1

.preheader28:                                     ; preds = %.critedge
  %59 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %16, i32 1, i32 0
  br label %60

; <label>:60                                      ; preds = %70, %.preheader28
  %61 = load i32* %22, align 4, !tbaa !29
  %62 = load i32* %59, align 4, !tbaa !30
  %63 = add nsw i32 %62, -2
  %64 = tail call i32 @rnd(i32 %63) #8
  %65 = add i32 %61, 1
  %66 = add i32 %65, %64
  store i32 %66, i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %67 = load i16* %55, align 4, !tbaa !39
  %68 = and i16 %67, 4
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %.critedge1.loopexit, label %70

; <label>:70                                      ; preds = %60
  %71 = shl i32 %66, 5
  %72 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  %73 = add nsw i32 %72, %71
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %74, i32 1
  %76 = load i8* %75, align 1, !tbaa !36
  %77 = icmp sgt i8 %76, -1
  br i1 %77, label %60, label %.critedge1.loopexit

.critedge1.loopexit:                              ; preds = %70, %60
  %.pre35 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %.pre36 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit, %.critedge..critedge1_crit_edge
  %78 = phi i32 [ %66, %.critedge1.loopexit ], [ %.pre37, %.critedge..critedge1_crit_edge ]
  %79 = phi i32 [ %.pre36, %.critedge1.loopexit ], [ %53, %.critedge..critedge1_crit_edge ]
  %80 = phi i32 [ %.pre35, %.critedge1.loopexit ], [ %54, %.critedge..critedge1_crit_edge ]
  %81 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  %82 = sub nsw i32 %80, %81
  %ispos7 = icmp sgt i32 %82, -1
  %neg8 = sub i32 0, %82
  %83 = select i1 %ispos7, i32 %82, i32 %neg8
  store i32 0, i32* @conn.turn_delta.1, align 4, !tbaa !20
  %84 = icmp slt i32 %79, %78
  %85 = select i1 %84, i32 1, i32 -1
  store i32 %85, i32* @conn.turn_delta.0, align 4, !tbaa !21
  %86 = sub nsw i32 %79, %78
  %ispos9 = icmp sgt i32 %86, -1
  %neg10 = sub i32 0, %86
  %87 = select i1 %ispos9, i32 %86, i32 %neg10
  br label %164

; <label>:88                                      ; preds = %7, %2
  %89 = phi %struct.room* [ %6, %2 ], [ %11, %7 ]
  %90 = phi i64 [ %5, %2 ], [ %10, %7 ]
  %rm.017 = phi i32 [ %r1, %2 ], [ %r2, %7 ]
  %91 = add nsw i32 %rm.017, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %92
  store i1 true, i1* @conn.del.0, align 1
  store i1 false, i1* @conn.del.1, align 1
  %94 = getelementptr inbounds %struct.room* %89, i64 0, i32 0, i32 0
  %95 = load i32* %94, align 4, !tbaa !29
  store i32 %95, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %96 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %90, i32 0, i32 1
  %97 = load i32* %96, align 4, !tbaa !31
  store i32 %97, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %98 = getelementptr inbounds %struct.room* %93, i64 0, i32 0, i32 0
  %99 = load i32* %98, align 4, !tbaa !29
  store i32 %99, i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %100 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %92, i32 0, i32 1
  %101 = load i32* %100, align 4, !tbaa !31
  store i32 %101, i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  %102 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %90, i32 4
  %103 = load i16* %102, align 4, !tbaa !39
  %104 = and i16 %103, 2
  %105 = icmp eq i16 %104, 0
  br i1 %105, label %.preheader27, label %.critedge2

.preheader27:                                     ; preds = %88
  %106 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %90, i32 1, i32 0
  %107 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %90, i32 1, i32 1
  br label %108

; <label>:108                                     ; preds = %._crit_edge, %.preheader27
  %109 = phi i32 [ %.pre34, %._crit_edge ], [ %97, %.preheader27 ]
  %110 = phi i32 [ %.pre33, %._crit_edge ], [ %95, %.preheader27 ]
  %111 = load i32* %106, align 4, !tbaa !30
  %112 = add i32 %110, -1
  %113 = add i32 %112, %111
  store i32 %113, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %114 = load i32* %107, align 4, !tbaa !32
  %115 = add nsw i32 %114, -2
  %116 = tail call i32 @rnd(i32 %115) #8
  %117 = add i32 %109, 1
  %118 = add i32 %117, %116
  store i32 %118, i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %119 = load i16* %102, align 4, !tbaa !39
  %120 = and i16 %119, 4
  %121 = icmp eq i16 %120, 0
  br i1 %121, label %.critedge2, label %122

; <label>:122                                     ; preds = %108
  %123 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %124 = shl i32 %123, 5
  %125 = add nsw i32 %124, %118
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %126, i32 1
  %128 = load i8* %127, align 1, !tbaa !36
  %129 = icmp sgt i8 %128, -1
  br i1 %129, label %._crit_edge, label %.critedge2

._crit_edge:                                      ; preds = %122
  %.pre33 = load i32* %94, align 4, !tbaa !29
  %.pre34 = load i32* %96, align 4, !tbaa !31
  br label %108

.critedge2:                                       ; preds = %122, %108, %88
  %130 = phi i32 [ %97, %88 ], [ %118, %122 ], [ %118, %108 ]
  %131 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %92, i32 4
  %132 = load i16* %131, align 4, !tbaa !39
  %133 = and i16 %132, 2
  %134 = icmp eq i16 %133, 0
  br i1 %134, label %.preheader26, label %.critedge2..critedge3_crit_edge

.critedge2..critedge3_crit_edge:                  ; preds = %.critedge2
  %.pre32 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  br label %.critedge3

.preheader26:                                     ; preds = %.critedge2
  %135 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %92, i32 1, i32 1
  br label %136

; <label>:136                                     ; preds = %146, %.preheader26
  %137 = load i32* %100, align 4, !tbaa !31
  %138 = load i32* %135, align 4, !tbaa !32
  %139 = add nsw i32 %138, -2
  %140 = tail call i32 @rnd(i32 %139) #8
  %141 = add i32 %137, 1
  %142 = add i32 %141, %140
  store i32 %142, i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  %143 = load i16* %131, align 4, !tbaa !39
  %144 = and i16 %143, 4
  %145 = icmp eq i16 %144, 0
  br i1 %145, label %.critedge3.loopexit, label %146

; <label>:146                                     ; preds = %136
  %147 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %148 = shl i32 %147, 5
  %149 = add nsw i32 %148, %142
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %150, i32 1
  %152 = load i8* %151, align 1, !tbaa !36
  %153 = icmp sgt i8 %152, -1
  br i1 %153, label %136, label %.critedge3.loopexit

.critedge3.loopexit:                              ; preds = %146, %136
  %.pre = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  br label %.critedge3

.critedge3:                                       ; preds = %.critedge3.loopexit, %.critedge2..critedge3_crit_edge
  %154 = phi i32 [ %142, %.critedge3.loopexit ], [ %.pre32, %.critedge2..critedge3_crit_edge ]
  %155 = phi i32 [ %.pre, %.critedge3.loopexit ], [ %130, %.critedge2..critedge3_crit_edge ]
  %156 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %157 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %158 = sub nsw i32 %156, %157
  %ispos = icmp sgt i32 %158, -1
  %neg = sub i32 0, %158
  %159 = select i1 %ispos, i32 %158, i32 %neg
  %160 = icmp slt i32 %155, %154
  %161 = select i1 %160, i32 1, i32 -1
  store i32 %161, i32* @conn.turn_delta.1, align 4, !tbaa !20
  store i32 0, i32* @conn.turn_delta.0, align 4, !tbaa !21
  %162 = sub nsw i32 %155, %154
  %ispos5 = icmp sgt i32 %162, -1
  %neg6 = sub i32 0, %162
  %163 = select i1 %ispos5, i32 %162, i32 %neg6
  br label %164

; <label>:164                                     ; preds = %.critedge3, %.critedge1
  %165 = phi %struct.room* [ %13, %.critedge1 ], [ %89, %.critedge3 ]
  %166 = phi i64 [ %14, %.critedge1 ], [ %90, %.critedge3 ]
  %distance.0.in = phi i32 [ %83, %.critedge1 ], [ %159, %.critedge3 ]
  %rpt.0 = phi %struct.room* [ %17, %.critedge1 ], [ %93, %.critedge3 ]
  %turn_distance.0 = phi i32 [ %87, %.critedge1 ], [ %163, %.critedge3 ]
  %167 = add nsw i32 %distance.0.in, -2
  %168 = tail call i32 @rnd(i32 %167) #8
  %169 = add nsw i32 %168, 1
  %170 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %166, i32 4
  %171 = load i16* %170, align 4, !tbaa !39
  %172 = and i16 %171, 2
  %173 = icmp eq i16 %172, 0
  br i1 %173, label %174, label %175

; <label>:174                                     ; preds = %164
  tail call void @door(%struct.room* %165, %struct.coord* @conn.spos)
  br label %putpass.exit

; <label>:175                                     ; preds = %164
  %176 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %177 = shl i32 %176, 5
  %178 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %179 = add nsw i32 %177, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %180, i32 1
  %182 = load i8* %181, align 1, !tbaa !36
  %183 = or i8 %182, -128
  store i8 %183, i8* %181, align 1, !tbaa !36
  %184 = tail call i32 @rnd(i32 10) #8
  %185 = add nsw i32 %184, 1
  %186 = load i32* @level, align 4, !tbaa !38
  %187 = icmp slt i32 %185, %186
  br i1 %187, label %188, label %194

; <label>:188                                     ; preds = %175
  %189 = tail call i32 @rnd(i32 40) #8
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %194

; <label>:191                                     ; preds = %188
  %192 = load i8* %181, align 1, !tbaa !36
  %193 = and i8 %192, -17
  store i8 %193, i8* %181, align 1, !tbaa !36
  br label %putpass.exit

; <label>:194                                     ; preds = %188, %175
  %195 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %180, i32 0
  store i8 35, i8* %195, align 8, !tbaa !33
  br label %putpass.exit

putpass.exit:                                     ; preds = %194, %191, %174
  %196 = getelementptr inbounds %struct.room* %rpt.0, i64 0, i32 4
  %197 = load i16* %196, align 4, !tbaa !39
  %198 = and i16 %197, 2
  %199 = icmp eq i16 %198, 0
  br i1 %199, label %200, label %201

; <label>:200                                     ; preds = %putpass.exit
  tail call void @door(%struct.room* %rpt.0, %struct.coord* @conn.epos)
  br label %putpass.exit13

; <label>:201                                     ; preds = %putpass.exit
  %202 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %203 = shl i32 %202, 5
  %204 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4, !tbaa !20
  %205 = add nsw i32 %203, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %206, i32 1
  %208 = load i8* %207, align 1, !tbaa !36
  %209 = or i8 %208, -128
  store i8 %209, i8* %207, align 1, !tbaa !36
  %210 = tail call i32 @rnd(i32 10) #8
  %211 = add nsw i32 %210, 1
  %212 = load i32* @level, align 4, !tbaa !38
  %213 = icmp slt i32 %211, %212
  br i1 %213, label %214, label %220

; <label>:214                                     ; preds = %201
  %215 = tail call i32 @rnd(i32 40) #8
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %220

; <label>:217                                     ; preds = %214
  %218 = load i8* %207, align 1, !tbaa !36
  %219 = and i8 %218, -17
  store i8 %219, i8* %207, align 1, !tbaa !36
  br label %putpass.exit13

; <label>:220                                     ; preds = %214, %201
  %221 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %206, i32 0
  store i8 35, i8* %221, align 8, !tbaa !33
  br label %putpass.exit13

putpass.exit13:                                   ; preds = %220, %217, %200
  %222 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 0), align 4, !tbaa !21
  %223 = load i32* getelementptr inbounds (%struct.coord* @conn.spos, i64 0, i32 1), align 4, !tbaa !20
  %distance.119 = add nsw i32 %distance.0.in, -1
  %224 = icmp sgt i32 %distance.119, 0
  %.b20 = load i1* @conn.del.0, align 1
  %225 = zext i1 %.b20 to i32
  %226 = add nsw i32 %222, %225
  store i32 %226, i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 0), align 4, !tbaa !21
  %.b421 = load i1* @conn.del.1, align 1
  %227 = zext i1 %.b421 to i32
  %228 = add nsw i32 %223, %227
  store i32 %228, i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 1), align 4, !tbaa !20
  br i1 %224, label %.lr.ph24, label %putpass.exit15._crit_edge

.lr.ph24:                                         ; preds = %putpass.exit15.backedge, %putpass.exit13
  %229 = phi i32 [ %287, %putpass.exit15.backedge ], [ %228, %putpass.exit13 ]
  %230 = phi i32 [ %284, %putpass.exit15.backedge ], [ %226, %putpass.exit13 ]
  %distance.123 = phi i32 [ %distance.1, %putpass.exit15.backedge ], [ %distance.119, %putpass.exit13 ]
  %turn_distance.122 = phi i32 [ %turn_distance.3, %putpass.exit15.backedge ], [ %turn_distance.0, %putpass.exit13 ]
  %231 = icmp eq i32 %distance.123, %169
  br i1 %231, label %.preheader, label %.loopexit

.preheader:                                       ; preds = %.lr.ph24
  %232 = add nsw i32 %turn_distance.122, -1
  %233 = icmp eq i32 %turn_distance.122, 0
  br i1 %233, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %putpass.exit14, %.preheader
  %234 = phi i32 [ %260, %putpass.exit14 ], [ %229, %.preheader ]
  %235 = phi i32 [ %257, %putpass.exit14 ], [ %230, %.preheader ]
  %236 = phi i32 [ %261, %putpass.exit14 ], [ %232, %.preheader ]
  %237 = shl i32 %235, 5
  %238 = add nsw i32 %237, %234
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %239, i32 1
  %241 = load i8* %240, align 1, !tbaa !36
  %242 = or i8 %241, -128
  store i8 %242, i8* %240, align 1, !tbaa !36
  %243 = tail call i32 @rnd(i32 10) #8
  %244 = add nsw i32 %243, 1
  %245 = load i32* @level, align 4, !tbaa !38
  %246 = icmp slt i32 %244, %245
  br i1 %246, label %247, label %253

; <label>:247                                     ; preds = %.lr.ph
  %248 = tail call i32 @rnd(i32 40) #8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %253

; <label>:250                                     ; preds = %247
  %251 = load i8* %240, align 1, !tbaa !36
  %252 = and i8 %251, -17
  store i8 %252, i8* %240, align 1, !tbaa !36
  br label %putpass.exit14

; <label>:253                                     ; preds = %247, %.lr.ph
  %254 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %239, i32 0
  store i8 35, i8* %254, align 8, !tbaa !33
  br label %putpass.exit14

putpass.exit14:                                   ; preds = %253, %250
  %255 = load i32* @conn.turn_delta.0, align 4, !tbaa !21
  %256 = load i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 0), align 4, !tbaa !21
  %257 = add nsw i32 %256, %255
  store i32 %257, i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 0), align 4, !tbaa !21
  %258 = load i32* @conn.turn_delta.1, align 4, !tbaa !20
  %259 = load i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 1), align 4, !tbaa !20
  %260 = add nsw i32 %259, %258
  store i32 %260, i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 1), align 4, !tbaa !20
  %261 = add nsw i32 %236, -1
  %262 = icmp eq i32 %236, 0
  br i1 %262, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %putpass.exit14, %.preheader, %.lr.ph24
  %263 = phi i32 [ %229, %.lr.ph24 ], [ %229, %.preheader ], [ %260, %putpass.exit14 ]
  %264 = phi i32 [ %230, %.lr.ph24 ], [ %230, %.preheader ], [ %257, %putpass.exit14 ]
  %turn_distance.3 = phi i32 [ %turn_distance.122, %.lr.ph24 ], [ %232, %.preheader ], [ -1, %putpass.exit14 ]
  %265 = shl i32 %264, 5
  %266 = add nsw i32 %265, %263
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %267, i32 1
  %269 = load i8* %268, align 1, !tbaa !36
  %270 = or i8 %269, -128
  store i8 %270, i8* %268, align 1, !tbaa !36
  %271 = tail call i32 @rnd(i32 10) #8
  %272 = add nsw i32 %271, 1
  %273 = load i32* @level, align 4, !tbaa !38
  %274 = icmp slt i32 %272, %273
  br i1 %274, label %275, label %288

; <label>:275                                     ; preds = %.loopexit
  %276 = tail call i32 @rnd(i32 40) #8
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %288

; <label>:278                                     ; preds = %275
  %279 = load i8* %268, align 1, !tbaa !36
  %280 = and i8 %279, -17
  store i8 %280, i8* %268, align 1, !tbaa !36
  br label %putpass.exit15.backedge

putpass.exit15.backedge:                          ; preds = %288, %278
  %distance.1 = add nsw i32 %distance.123, -1
  %281 = icmp sgt i32 %distance.1, 0
  %.b = load i1* @conn.del.0, align 1
  %282 = zext i1 %.b to i32
  %283 = load i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 0), align 4, !tbaa !21
  %284 = add nsw i32 %283, %282
  store i32 %284, i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 0), align 4, !tbaa !21
  %.b4 = load i1* @conn.del.1, align 1
  %285 = zext i1 %.b4 to i32
  %286 = load i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 1), align 4, !tbaa !20
  %287 = add nsw i32 %286, %285
  store i32 %287, i32* getelementptr inbounds (%struct.coord* @conn.curr, i64 0, i32 1), align 4, !tbaa !20
  br i1 %281, label %.lr.ph24, label %putpass.exit15._crit_edge

; <label>:288                                     ; preds = %275, %.loopexit
  %289 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %267, i32 0
  store i8 35, i8* %289, align 8, !tbaa !33
  br label %putpass.exit15.backedge

putpass.exit15._crit_edge:                        ; preds = %putpass.exit15.backedge, %putpass.exit13
  %290 = phi i32 [ %226, %putpass.exit13 ], [ %284, %putpass.exit15.backedge ]
  %.lcssa18 = phi i32 [ %228, %putpass.exit13 ], [ %287, %putpass.exit15.backedge ]
  %291 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 0), align 4, !tbaa !21
  %292 = icmp eq i32 %290, %291
  %293 = load i32* getelementptr inbounds (%struct.coord* @conn.epos, i64 0, i32 1), align 4
  %294 = icmp eq i32 %.lcssa18, %293
  %or.cond = and i1 %292, %294
  br i1 %or.cond, label %297, label %295

; <label>:295                                     ; preds = %putpass.exit15._crit_edge
  %296 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([44 x i8]* @.str770, i64 0, i64 0)) #8
  br label %297

; <label>:297                                     ; preds = %295, %putpass.exit15._crit_edge
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @door(%struct.room* nocapture %rm, %struct.coord* nocapture readonly %cp) #0 {
  %1 = getelementptr inbounds %struct.room* %rm, i64 0, i32 5
  %2 = load i32* %1, align 4, !tbaa !35
  %3 = add nsw i32 %2, 1
  store i32 %3, i32* %1, align 4, !tbaa !35
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %struct.room* %rm, i64 0, i32 6, i64 %4
  %6 = bitcast %struct.coord* %cp to i64*
  %7 = bitcast %struct.coord* %5 to i64*
  %8 = load i64* %6, align 4
  store i64 %8, i64* %7, align 4
  %9 = getelementptr inbounds %struct.room* %rm, i64 0, i32 4
  %10 = load i16* %9, align 2, !tbaa !39
  %11 = and i16 %10, 4
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %50

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %15 = load i32* %14, align 4, !tbaa !21
  %16 = shl i32 %15, 5
  %17 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %18 = load i32* %17, align 4, !tbaa !20
  %19 = add nsw i32 %16, %18
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %20
  %22 = tail call i32 @rnd(i32 10) #8
  %23 = add nsw i32 %22, 1
  %24 = load i32* @level, align 4, !tbaa !38
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %48

; <label>:26                                      ; preds = %13
  %27 = tail call i32 @rnd(i32 5) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %48

; <label>:29                                      ; preds = %26
  %30 = load i32* %17, align 4, !tbaa !20
  %31 = getelementptr inbounds %struct.room* %rm, i64 0, i32 0, i32 1
  %32 = load i32* %31, align 4, !tbaa !31
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %40, label %34

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct.room* %rm, i64 0, i32 1, i32 1
  %36 = load i32* %35, align 4, !tbaa !32
  %37 = add i32 %32, -1
  %38 = add i32 %37, %36
  %39 = icmp eq i32 %30, %38
  br i1 %39, label %40, label %42

; <label>:40                                      ; preds = %34, %29
  %41 = getelementptr inbounds %struct.PLACE* %21, i64 0, i32 0
  store i8 45, i8* %41, align 8, !tbaa !33
  br label %44

; <label>:42                                      ; preds = %34
  %43 = getelementptr inbounds %struct.PLACE* %21, i64 0, i32 0
  store i8 124, i8* %43, align 8, !tbaa !33
  br label %44

; <label>:44                                      ; preds = %42, %40
  %45 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %20, i32 1
  %46 = load i8* %45, align 1, !tbaa !36
  %47 = and i8 %46, -17
  store i8 %47, i8* %45, align 1, !tbaa !36
  br label %50

; <label>:48                                      ; preds = %26, %13
  %49 = getelementptr inbounds %struct.PLACE* %21, i64 0, i32 0
  store i8 43, i8* %49, align 8, !tbaa !33
  br label %50

; <label>:50                                      ; preds = %48, %44, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @putpass(%struct.coord* nocapture readonly %cp) #0 {
  %1 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !21
  %3 = shl i32 %2, 5
  %4 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %5 = load i32* %4, align 4, !tbaa !20
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 1
  %9 = load i8* %8, align 1, !tbaa !36
  %10 = or i8 %9, -128
  store i8 %10, i8* %8, align 1, !tbaa !36
  %11 = tail call i32 @rnd(i32 10) #8
  %12 = add nsw i32 %11, 1
  %13 = load i32* @level, align 4, !tbaa !38
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %15, label %21

; <label>:15                                      ; preds = %0
  %16 = tail call i32 @rnd(i32 40) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

; <label>:18                                      ; preds = %15
  %19 = load i8* %8, align 1, !tbaa !36
  %20 = and i8 %19, -17
  store i8 %20, i8* %8, align 1, !tbaa !36
  br label %23

; <label>:21                                      ; preds = %15, %0
  %22 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 0
  store i8 35, i8* %22, align 8, !tbaa !33
  br label %23

; <label>:23                                      ; preds = %21, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @passnum() #0 {
  store i32 0, i32* @pnum, align 4, !tbaa !38
  store i1 false, i1* @newpnum, align 1
  br i1 true, label %.lr.ph8, label %.preheader2

.preheader2:                                      ; preds = %.lr.ph8, %0
  br i1 true, label %.preheader, label %._crit_edge5

.lr.ph8:                                          ; preds = %.lr.ph8, %0
  %rp.06 = phi %struct.room* [ %2, %.lr.ph8 ], [ getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 0), %0 ]
  %1 = getelementptr inbounds %struct.room* %rp.06, i64 0, i32 5
  store i32 0, i32* %1, align 4, !tbaa !35
  %2 = getelementptr inbounds %struct.room* %rp.06, i64 1
  %3 = icmp ult %struct.room* %2, getelementptr inbounds ([13 x %struct.room]* @passages, i64 1, i64 0)
  br i1 %3, label %.lr.ph8, label %.preheader2

.preheader:                                       ; preds = %._crit_edge, %.preheader2
  %rp.13 = phi %struct.room* [ %14, %._crit_edge ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.preheader2 ]
  %4 = getelementptr inbounds %struct.room* %rp.13, i64 0, i32 5
  %5 = load i32* %4, align 4, !tbaa !35
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  store i1 true, i1* @newpnum, align 1
  %7 = getelementptr inbounds %struct.room* %rp.13, i64 0, i32 6, i64 %indvars.iv, i32 1
  %8 = load i32* %7, align 4, !tbaa !20
  %9 = getelementptr inbounds %struct.room* %rp.13, i64 0, i32 6, i64 %indvars.iv, i32 0
  %10 = load i32* %9, align 4, !tbaa !21
  tail call void @numpass(i32 %8, i32 %10)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %11 = load i32* %4, align 4, !tbaa !35
  %12 = trunc i64 %indvars.iv.next to i32
  %13 = icmp slt i32 %12, %11
  br i1 %13, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %14 = getelementptr inbounds %struct.room* %rp.13, i64 1
  %15 = icmp ult %struct.room* %14, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %15, label %.preheader, label %._crit_edge5

._crit_edge5:                                     ; preds = %._crit_edge, %.preheader2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @numpass(i32 %y, i32 %x) #0 {
  %1 = icmp ugt i32 %x, 79
  %2 = icmp sgt i32 %y, 23
  %or.cond36 = or i1 %1, %2
  %3 = icmp slt i32 %y, 1
  %or.cond57 = or i1 %or.cond36, %3
  br i1 %or.cond57, label %split, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %4 = add nsw i32 %y, 1
  %5 = add nsw i32 %y, -1
  %6 = sext i32 %x to i64
  br label %7

; <label>:7                                       ; preds = %tailrecurse, %.lr.ph
  %indvars.iv = phi i64 [ %6, %.lr.ph ], [ %indvars.iv.next, %tailrecurse ]
  %8 = trunc i64 %indvars.iv to i32
  %9 = shl i32 %8, 5
  %10 = add nsw i32 %9, %y
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %11, i32 1
  %13 = load i8* %12, align 1, !tbaa !28
  %14 = and i8 %13, 15
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %split

; <label>:16                                      ; preds = %7
  %.b = load i1* @newpnum, align 1
  br i1 %.b, label %17, label %20

; <label>:17                                      ; preds = %16
  %18 = load i32* @pnum, align 4, !tbaa !38
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* @pnum, align 4, !tbaa !38
  store i1 false, i1* @newpnum, align 1
  br label %20

; <label>:20                                      ; preds = %17, %16
  %21 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %11, i32 0
  %22 = load i8* %21, align 8, !tbaa !33
  %23 = icmp eq i8 %22, 43
  br i1 %23, label %28, label %24

; <label>:24                                      ; preds = %20
  %25 = and i8 %13, 16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %thread-pre-split

; <label>:27                                      ; preds = %24
  switch i8 %22, label %thread-pre-split [
    i8 124, label %28
    i8 45, label %28
  ]

; <label>:28                                      ; preds = %27, %27, %20
  %29 = load i32* @pnum, align 4, !tbaa !38
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %30, i32 5
  %32 = load i32* %31, align 4, !tbaa !35
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %30, i32 6, i64 %33, i32 1
  store i32 %y, i32* %34, align 4, !tbaa !20
  %35 = load i32* %31, align 4, !tbaa !35
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %31, align 4, !tbaa !35
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %30, i32 6, i64 %37, i32 0
  store i32 %8, i32* %38, align 4, !tbaa !21
  br label %tailrecurse

thread-pre-split:                                 ; preds = %27, %24
  %39 = icmp slt i8 %13, 0
  br i1 %39, label %.tailrecurse_crit_edge, label %split

.tailrecurse_crit_edge:                           ; preds = %thread-pre-split
  %.pre = load i32* @pnum, align 4, !tbaa !38
  br label %tailrecurse

tailrecurse:                                      ; preds = %.tailrecurse_crit_edge, %28
  %40 = phi i32 [ %.pre, %.tailrecurse_crit_edge ], [ %29, %28 ]
  %41 = zext i8 %13 to i32
  %42 = or i32 %41, %40
  %43 = trunc i32 %42 to i8
  store i8 %43, i8* %12, align 1, !tbaa !28
  tail call void @numpass(i32 %4, i32 %8)
  tail call void @numpass(i32 %5, i32 %8)
  %44 = add nsw i64 %indvars.iv, 1
  %45 = trunc i64 %44 to i32
  tail call void @numpass(i32 %y, i32 %45)
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %46 = trunc i64 %indvars.iv.next to i32
  %47 = icmp ugt i32 %46, 79
  br i1 %47, label %split, label %7

split:                                            ; preds = %tailrecurse, %thread-pre-split, %7, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @quaff() #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([6 x i8]* @.str773, i64 0, i64 0), i32 33) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %279, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 33
  br i1 %6, label %14, label %7

; <label>:7                                       ; preds = %3
  %8 = load i8* @terse, align 1, !tbaa !5, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([39 x i8]* @.str1774, i64 0, i64 0)) #8
  br label %279

; <label>:12                                      ; preds = %7
  %13 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str2775, i64 0, i64 0)) #8
  br label %279

; <label>:14                                      ; preds = %3
  %15 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %16 = icmp eq %union.thing* %1, %15
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  store %union.thing* null, %union.thing** @cur_weapon, align 8, !tbaa !1
  br label %18

; <label>:18                                      ; preds = %17, %14
  %19 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %20 = lshr i16 %19, 11
  %21 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5
  %22 = bitcast [13 x i8]* %21 to i32*
  %23 = load i32* %22, align 4, !tbaa !78
  %24 = icmp eq i32 %23, 1
  %25 = tail call %union.thing* @leave_pack(%union.thing* %1, i1 zeroext false, i1 zeroext false) #8
  %26 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %27 = bitcast i8* %26 to i32*
  %28 = load i32* %27, align 4, !tbaa !50
  switch i32 %28, label %274 [
    i32 0, label %29
    i32 2, label %32
    i32 5, label %54
    i32 3, label %65
    i32 6, label %67
    i32 7, label %75
    i32 1, label %167
    i32 4, label %181
    i32 8, label %189
    i32 9, label %197
    i32 10, label %215
    i32 11, label %219
    i32 12, label %272
    i32 13, label %273
  ]

; <label>:29                                      ; preds = %18
  %30 = and i16 %20, 1
  %31 = icmp eq i16 %30, 0
  tail call void @do_pot(i32 0, i1 zeroext %31)
  br label %274

; <label>:32                                      ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 2, i32 4), align 8, !tbaa !102
  %33 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %34 = icmp eq %union.thing* %33, null
  br i1 %34, label %40, label %35

; <label>:35                                      ; preds = %32
  %36 = getelementptr inbounds %union.thing* %33, i64 0, i32 0, i32 9, i32 5, i64 4
  %37 = bitcast i8* %36 to i32*
  %38 = load i32* %37, align 4, !tbaa !50
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %48, label %40

; <label>:40                                      ; preds = %35, %32
  %41 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %42 = icmp eq %union.thing* %41, null
  br i1 %42, label %50, label %43

; <label>:43                                      ; preds = %40
  %44 = getelementptr inbounds %union.thing* %41, i64 0, i32 0, i32 9, i32 5, i64 4
  %45 = bitcast i8* %44 to i32*
  %46 = load i32* %45, align 4, !tbaa !50
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %50

; <label>:48                                      ; preds = %43, %35
  %49 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([26 x i8]* @.str3776, i64 0, i64 0)) #8
  br label %274

; <label>:50                                      ; preds = %43, %40
  %51 = tail call i32 @rnd(i32 3) #8
  %52 = xor i32 %51, -1
  tail call void @chg_str(i32 %52) #8
  %53 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([23 x i8]* @.str4777, i64 0, i64 0)) #8
  tail call void (...)* bitcast (void ()* @come_down to void (...)*)() #8
  br label %274

; <label>:54                                      ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 5, i32 4), align 8, !tbaa !102
  %55 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %56 = tail call i32 @roll(i32 %55, i32 4) #8
  %57 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %58 = add nsw i32 %57, %56
  store i32 %58, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %59 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %60 = icmp sgt i32 %58, %59
  br i1 %60, label %61, label %63

; <label>:61                                      ; preds = %54
  %62 = add nsw i32 %59, 1
  store i32 %62, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  store i32 %62, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %63

; <label>:63                                      ; preds = %61, %54
  tail call void (...)* bitcast (void ()* @sight to void (...)*)() #8
  %64 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str5778, i64 0, i64 0)) #8
  br label %274

; <label>:65                                      ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 3, i32 4), align 8, !tbaa !102
  tail call void @chg_str(i32 1) #8
  %66 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([47 x i8]* @.str6779, i64 0, i64 0)) #8
  br label %274

; <label>:67                                      ; preds = %18
  %68 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %69 = or i16 %68, 16384
  store i16 %69, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %70 = tail call i32 @spread(i32 2) #8
  tail call void @fuse(void (...)* bitcast (i1 (i1)* @turn_see to void (...)*), i32 1, i32 20, i32 %70) #8
  %71 = tail call zeroext i1 @turn_see(i1 zeroext false)
  br i1 %71, label %274, label %72

; <label>:72                                      ; preds = %67
  %73 = tail call i8* @choose_str(i8* getelementptr inbounds ([7 x i8]* @.str8781, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str9782, i64 0, i64 0)) #8
  %74 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([51 x i8]* @.str7780, i64 0, i64 0), i8* %73) #8
  br label %274

; <label>:75                                      ; preds = %18
  %76 = load %union.thing** @lvl_obj, align 8, !tbaa !1
  %77 = icmp eq %union.thing* %76, null
  br i1 %77, label %.thread, label %78

; <label>:78                                      ; preds = %75
  %79 = load %struct._win_st** @hw, align 8, !tbaa !1
  %80 = tail call i32 @wclear(%struct._win_st* %79) #8
  %tp.014 = load %union.thing** @lvl_obj, align 8
  %81 = icmp eq %union.thing* %tp.014, null
  br i1 %81, label %.preheader, label %.lr.ph19

.preheader:                                       ; preds = %is_magic.exit.thread3, %78
  %show.0.lcssa = phi i8 [ 0, %78 ], [ %show.1, %is_magic.exit.thread3 ]
  %mp.08 = load %union.thing** @mlist, align 8
  %82 = icmp eq %union.thing* %mp.08, null
  br i1 %82, label %._crit_edge12, label %.lr.ph11

.lr.ph19:                                         ; preds = %is_magic.exit.thread3, %78
  %tp.016 = phi %union.thing* [ %tp.0, %is_magic.exit.thread3 ], [ %tp.014, %78 ]
  %show.015 = phi i8 [ %show.1, %is_magic.exit.thread3 ], [ 0, %78 ]
  %83 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 2, i32 0
  %84 = load i32* %83, align 4, !tbaa !8
  switch i32 %84, label %is_magic.exit.thread3 [
    i32 93, label %85
    i32 41, label %101
    i32 33, label %is_magic.exit.thread
    i32 63, label %is_magic.exit.thread
    i32 47, label %is_magic.exit.thread
    i32 61, label %is_magic.exit.thread
    i32 44, label %is_magic.exit.thread
  ]

; <label>:85                                      ; preds = %.lr.ph19
  %86 = bitcast %union.thing* %tp.016 to %struct.anon.0*
  %87 = getelementptr inbounds %struct.anon.0* %86, i64 0, i32 14
  %88 = load i32* %87, align 4, !tbaa !12
  %89 = and i32 %88, 32
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %is_magic.exit.thread

; <label>:91                                      ; preds = %85
  %92 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 9, i32 6
  %93 = load i32* %92, align 4, !tbaa !70
  %94 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 9, i32 5, i64 4
  %95 = bitcast i8* %94 to i32*
  %96 = load i32* %95, align 4, !tbaa !50
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %97
  %99 = load i32* %98, align 4, !tbaa !38
  %100 = icmp eq i32 %93, %99
  br i1 %100, label %is_magic.exit.thread3, label %is_magic.exit.thread

; <label>:101                                     ; preds = %.lr.ph19
  %102 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 9, i32 5, i64 8
  %103 = bitcast i8* %102 to i32*
  %104 = load i32* %103, align 4, !tbaa !68
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %is_magic.exit, label %is_magic.exit.thread

is_magic.exit:                                    ; preds = %101
  %106 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 9, i32 5, i64 12
  %107 = bitcast i8* %106 to i32*
  %108 = load i32* %107, align 4, !tbaa !69
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %is_magic.exit.thread3, label %is_magic.exit.thread

is_magic.exit.thread:                             ; preds = %is_magic.exit, %101, %91, %85, %.lr.ph19, %.lr.ph19, %.lr.ph19, %.lr.ph19, %.lr.ph19
  %110 = load %struct._win_st** @hw, align 8, !tbaa !1
  %111 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 2, i32 1
  %112 = getelementptr inbounds i32* %111, i64 1
  %113 = load i32* %112, align 4, !tbaa !41
  %114 = load i32* %111, align 4, !tbaa !40
  %115 = tail call i32 @wmove(%struct._win_st* %110, i32 %113, i32 %114) #8
  %116 = load %struct._win_st** @hw, align 8, !tbaa !1
  %117 = tail call i32 @waddch(%struct._win_st* %116, i32 36) #8
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 7, i32 4), align 8, !tbaa !102
  br label %is_magic.exit.thread3

is_magic.exit.thread3:                            ; preds = %is_magic.exit.thread, %is_magic.exit, %91, %.lr.ph19
  %show.1 = phi i8 [ 1, %is_magic.exit.thread ], [ %show.015, %is_magic.exit ], [ %show.015, %91 ], [ %show.015, %.lr.ph19 ]
  %118 = getelementptr inbounds %union.thing* %tp.016, i64 0, i32 0, i32 0
  %tp.0 = load %union.thing** %118, align 8
  %119 = icmp eq %union.thing* %tp.0, null
  br i1 %119, label %.preheader, label %.lr.ph19

.lr.ph11:                                         ; preds = %._crit_edge, %.preheader
  %mp.010 = phi %union.thing* [ %mp.0, %._crit_edge ], [ %mp.08, %.preheader ]
  %show.29 = phi i8 [ %show.3.lcssa, %._crit_edge ], [ %show.0.lcssa, %.preheader ]
  %120 = getelementptr inbounds %union.thing* %mp.010, i64 0, i32 0, i32 11
  %tp.15 = load %union.thing** %120, align 8
  %121 = icmp eq %union.thing* %tp.15, null
  br i1 %121, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph11
  %122 = getelementptr inbounds %union.thing* %mp.010, i64 0, i32 0, i32 2, i32 1
  %123 = getelementptr inbounds %union.thing* %mp.010, i64 0, i32 0, i32 2, i32 0
  br label %124

; <label>:124                                     ; preds = %is_magic.exit2.thread4, %.lr.ph
  %tp.17 = phi %union.thing* [ %tp.15, %.lr.ph ], [ %tp.1, %is_magic.exit2.thread4 ]
  %show.36 = phi i8 [ %show.29, %.lr.ph ], [ %show.4, %is_magic.exit2.thread4 ]
  %125 = getelementptr inbounds %union.thing* %tp.17, i64 0, i32 0, i32 2, i32 0
  %126 = load i32* %125, align 4, !tbaa !8
  switch i32 %126, label %is_magic.exit2.thread4 [
    i32 93, label %127
    i32 41, label %143
    i32 33, label %is_magic.exit2.thread
    i32 63, label %is_magic.exit2.thread
    i32 47, label %is_magic.exit2.thread
    i32 61, label %is_magic.exit2.thread
    i32 44, label %is_magic.exit2.thread
  ]

; <label>:127                                     ; preds = %124
  %128 = bitcast %union.thing* %tp.17 to %struct.anon.0*
  %129 = getelementptr inbounds %struct.anon.0* %128, i64 0, i32 14
  %130 = load i32* %129, align 4, !tbaa !12
  %131 = and i32 %130, 32
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %is_magic.exit2.thread

; <label>:133                                     ; preds = %127
  %134 = getelementptr inbounds %union.thing* %tp.17, i64 0, i32 0, i32 9, i32 6
  %135 = load i32* %134, align 4, !tbaa !70
  %136 = getelementptr inbounds %union.thing* %tp.17, i64 0, i32 0, i32 9, i32 5, i64 4
  %137 = bitcast i8* %136 to i32*
  %138 = load i32* %137, align 4, !tbaa !50
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %139
  %141 = load i32* %140, align 4, !tbaa !38
  %142 = icmp eq i32 %135, %141
  br i1 %142, label %is_magic.exit2.thread4, label %is_magic.exit2.thread

; <label>:143                                     ; preds = %124
  %144 = getelementptr inbounds %union.thing* %tp.17, i64 0, i32 0, i32 9, i32 5, i64 8
  %145 = bitcast i8* %144 to i32*
  %146 = load i32* %145, align 4, !tbaa !68
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %is_magic.exit2, label %is_magic.exit2.thread

is_magic.exit2:                                   ; preds = %143
  %148 = getelementptr inbounds %union.thing* %tp.17, i64 0, i32 0, i32 9, i32 5, i64 12
  %149 = bitcast i8* %148 to i32*
  %150 = load i32* %149, align 4, !tbaa !69
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %is_magic.exit2.thread4, label %is_magic.exit2.thread

is_magic.exit2.thread:                            ; preds = %is_magic.exit2, %143, %133, %127, %124, %124, %124, %124, %124
  %152 = load %struct._win_st** @hw, align 8, !tbaa !1
  %153 = load i32* %122, align 4, !tbaa !23
  %154 = load i32* %123, align 4, !tbaa !22
  %155 = tail call i32 @wmove(%struct._win_st* %152, i32 %153, i32 %154) #8
  %156 = load %struct._win_st** @hw, align 8, !tbaa !1
  %157 = tail call i32 @waddch(%struct._win_st* %156, i32 36) #8
  br label %is_magic.exit2.thread4

is_magic.exit2.thread4:                           ; preds = %is_magic.exit2.thread, %is_magic.exit2, %133, %124
  %show.4 = phi i8 [ 1, %is_magic.exit2.thread ], [ %show.36, %is_magic.exit2 ], [ %show.36, %133 ], [ %show.36, %124 ]
  %158 = getelementptr inbounds %union.thing* %tp.17, i64 0, i32 0, i32 0
  %tp.1 = load %union.thing** %158, align 8
  %159 = icmp eq %union.thing* %tp.1, null
  br i1 %159, label %._crit_edge, label %124

._crit_edge:                                      ; preds = %is_magic.exit2.thread4, %.lr.ph11
  %show.3.lcssa = phi i8 [ %show.29, %.lr.ph11 ], [ %show.4, %is_magic.exit2.thread4 ]
  %160 = getelementptr inbounds %union.thing* %mp.010, i64 0, i32 0, i32 0
  %mp.0 = load %union.thing** %160, align 8
  %161 = icmp eq %union.thing* %mp.0, null
  br i1 %161, label %._crit_edge12, label %.lr.ph11

._crit_edge12:                                    ; preds = %._crit_edge, %.preheader
  %show.2.lcssa = phi i8 [ %show.0.lcssa, %.preheader ], [ %show.3.lcssa, %._crit_edge ]
  %162 = and i8 %show.2.lcssa, 1
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %.thread, label %164

; <label>:164                                     ; preds = %._crit_edge12
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 7, i32 4), align 8, !tbaa !102
  tail call void @show_win(i8* getelementptr inbounds ([55 x i8]* @.str10783, i64 0, i64 0)) #8
  br label %274

.thread:                                          ; preds = %._crit_edge12, %75
  %165 = tail call i8* @choose_str(i8* getelementptr inbounds ([7 x i8]* @.str8781, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str9782, i64 0, i64 0)) #8
  %166 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([51 x i8]* @.str7780, i64 0, i64 0), i8* %165) #8
  br label %274

; <label>:167                                     ; preds = %18
  %168 = and i16 %20, 1
  %169 = icmp eq i16 %168, 0
  br i1 %169, label %170, label %180

; <label>:170                                     ; preds = %167
  %171 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %172 = and i16 %171, 16384
  %173 = icmp eq i16 %172, 0
  br i1 %173, label %176, label %174

; <label>:174                                     ; preds = %170
  %175 = tail call zeroext i1 @turn_see(i1 zeroext false)
  br label %176

; <label>:176                                     ; preds = %174, %170
  %177 = tail call i32 @spread(i32 1) #8
  tail call void @start_daemon(void (...)* bitcast (void ()* @visuals to void (...)*), i32 0, i32 %177) #8
  %178 = tail call zeroext i1 @seen_stairs()
  %179 = zext i1 %178 to i8
  store i8 %179, i8* @seenstairs, align 1, !tbaa !5
  br label %180

; <label>:180                                     ; preds = %176, %167
  tail call void @do_pot(i32 1, i1 zeroext true)
  br label %274

; <label>:181                                     ; preds = %18
  %182 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  %183 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %182, i8* getelementptr inbounds ([33 x i8]* @.str11784, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0)) #8
  %184 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %185 = and i16 %184, 2
  %186 = icmp eq i16 %185, 0
  tail call void @do_pot(i32 4, i1 zeroext false)
  br i1 %186, label %187, label %188

; <label>:187                                     ; preds = %181
  tail call void @invis_on()
  br label %188

; <label>:188                                     ; preds = %187, %181
  tail call void (...)* bitcast (void ()* @sight to void (...)*)() #8
  br label %274

; <label>:189                                     ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 8, i32 4), align 8, !tbaa !102
  %190 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([37 x i8]* @.str12785, i64 0, i64 0)) #8
  %191 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %192 = add nsw i32 %191, -1
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [0 x i32]* bitcast ([21 x i32]* @e_levels to [0 x i32]*), i64 0, i64 %193
  %195 = load i32* %194, align 4, !tbaa !38
  %196 = add i32 %195, 1
  store i32 %196, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  tail call void (...)* bitcast (void ()* @check_level to void (...)*)() #8
  br label %274

; <label>:197                                     ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 9, i32 4), align 8, !tbaa !102
  %198 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %199 = tail call i32 @roll(i32 %198, i32 8) #8
  %200 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %201 = add nsw i32 %200, %199
  store i32 %201, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %202 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  %203 = icmp sgt i32 %201, %202
  br i1 %203, label %204, label %213

; <label>:204                                     ; preds = %197
  %205 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %206 = add i32 %202, 1
  %207 = add i32 %206, %205
  %208 = icmp sgt i32 %201, %207
  br i1 %208, label %209, label %210

; <label>:209                                     ; preds = %204
  store i32 %206, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  br label %210

; <label>:210                                     ; preds = %209, %204
  %211 = phi i32 [ %206, %209 ], [ %202, %204 ]
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 6), align 4, !tbaa !65
  store i32 %212, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  br label %213

; <label>:213                                     ; preds = %210, %197
  tail call void (...)* bitcast (void ()* @sight to void (...)*)() #8
  tail call void (...)* bitcast (void ()* @come_down to void (...)*)() #8
  %214 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str13786, i64 0, i64 0)) #8
  br label %274

; <label>:215                                     ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 10, i32 4), align 8, !tbaa !102
  store i8 0, i8* @after, align 1, !tbaa !5
  %216 = tail call zeroext i1 @add_haste(i1 zeroext true) #8
  br i1 %216, label %217, label %274

; <label>:217                                     ; preds = %215
  %218 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([37 x i8]* @.str14787, i64 0, i64 0)) #8
  br label %274

; <label>:219                                     ; preds = %18
  %220 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %221 = icmp eq %union.thing* %220, null
  br i1 %221, label %231, label %222

; <label>:222                                     ; preds = %219
  %223 = getelementptr inbounds %union.thing* %220, i64 0, i32 0, i32 9, i32 5, i64 4
  %224 = bitcast i8* %223 to i32*
  %225 = load i32* %224, align 4, !tbaa !50
  %226 = icmp eq i32 %225, 1
  br i1 %226, label %227, label %231

; <label>:227                                     ; preds = %222
  %228 = getelementptr inbounds %union.thing* %220, i64 0, i32 0, i32 9, i32 6
  %229 = load i32* %228, align 4, !tbaa !70
  %230 = sub nsw i32 0, %229
  tail call void @add_str(i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), i32 %230) #8
  br label %231

; <label>:231                                     ; preds = %227, %222, %219
  %232 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %233 = icmp eq %union.thing* %232, null
  br i1 %233, label %243, label %234

; <label>:234                                     ; preds = %231
  %235 = getelementptr inbounds %union.thing* %232, i64 0, i32 0, i32 9, i32 5, i64 4
  %236 = bitcast i8* %235 to i32*
  %237 = load i32* %236, align 4, !tbaa !50
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %243

; <label>:239                                     ; preds = %234
  %240 = getelementptr inbounds %union.thing* %232, i64 0, i32 0, i32 9, i32 6
  %241 = load i32* %240, align 4, !tbaa !70
  %242 = sub nsw i32 0, %241
  tail call void @add_str(i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), i32 %242) #8
  br label %243

; <label>:243                                     ; preds = %239, %234, %231
  %244 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !84
  %245 = load i32* getelementptr inbounds (%struct.stats* @max_stats, i64 0, i32 0), align 4, !tbaa !74
  %246 = icmp ult i32 %244, %245
  br i1 %246, label %247, label %248

; <label>:247                                     ; preds = %243
  store i32 %245, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), align 4, !tbaa !84
  br label %248

; <label>:248                                     ; preds = %247, %243
  %249 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %250 = icmp eq %union.thing* %249, null
  br i1 %250, label %259, label %251

; <label>:251                                     ; preds = %248
  %252 = getelementptr inbounds %union.thing* %249, i64 0, i32 0, i32 9, i32 5, i64 4
  %253 = bitcast i8* %252 to i32*
  %254 = load i32* %253, align 4, !tbaa !50
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %259

; <label>:256                                     ; preds = %251
  %257 = getelementptr inbounds %union.thing* %249, i64 0, i32 0, i32 9, i32 6
  %258 = load i32* %257, align 4, !tbaa !70
  tail call void @add_str(i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), i32 %258) #8
  br label %259

; <label>:259                                     ; preds = %256, %251, %248
  %260 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %261 = icmp eq %union.thing* %260, null
  br i1 %261, label %270, label %262

; <label>:262                                     ; preds = %259
  %263 = getelementptr inbounds %union.thing* %260, i64 0, i32 0, i32 9, i32 5, i64 4
  %264 = bitcast i8* %263 to i32*
  %265 = load i32* %264, align 4, !tbaa !50
  %266 = icmp eq i32 %265, 1
  br i1 %266, label %267, label %270

; <label>:267                                     ; preds = %262
  %268 = getelementptr inbounds %union.thing* %260, i64 0, i32 0, i32 9, i32 6
  %269 = load i32* %268, align 4, !tbaa !70
  tail call void @add_str(i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 0), i32 %269) #8
  br label %270

; <label>:270                                     ; preds = %267, %262, %259
  %271 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([56 x i8]* @.str15788, i64 0, i64 0)) #8
  br label %274

; <label>:272                                     ; preds = %18
  tail call void @do_pot(i32 12, i1 zeroext true)
  br label %274

; <label>:273                                     ; preds = %18
  tail call void @do_pot(i32 13, i1 zeroext true)
  br label %274

; <label>:274                                     ; preds = %273, %272, %270, %217, %215, %213, %189, %188, %180, %.thread, %164, %72, %67, %65, %63, %50, %48, %29, %18
  tail call void (...)* bitcast (void ()* @status to void (...)*)() #8
  %275 = load i32* %27, align 4, !tbaa !50
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %276
  tail call void @call_it(%struct.obj_info* %277) #8
  br i1 %24, label %278, label %279

; <label>:278                                     ; preds = %274
  tail call void @discard(%union.thing* %1) #8
  br label %279

; <label>:279                                     ; preds = %278, %274, %12, %10, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_pot(i32 %type, i1 zeroext %knowit) #0 {
  %1 = sext i32 %type to i64
  %2 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %1, i32 4
  %3 = load i8* %2, align 8, !tbaa !102, !range !7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = zext i1 %knowit to i8
  store i8 %6, i8* %2, align 8, !tbaa !102
  br label %7

; <label>:7                                       ; preds = %5, %0
  %8 = getelementptr inbounds [14 x %struct.PACT]* @p_actions, i64 0, i64 %1, i32 2
  %9 = load i32* %8, align 8, !tbaa !121
  %10 = tail call i32 @spread(i32 %9) #8
  %11 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %12 = sext i16 %11 to i32
  %13 = getelementptr inbounds [14 x %struct.PACT]* @p_actions, i64 0, i64 %1, i32 0
  %14 = load i32* %13, align 8, !tbaa !123
  %15 = and i32 %12, %14
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %23

; <label>:17                                      ; preds = %7
  %18 = or i32 %12, %14
  %19 = trunc i32 %18 to i16
  store i16 %19, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %20 = getelementptr inbounds [14 x %struct.PACT]* @p_actions, i64 0, i64 %1, i32 1
  %21 = load void (...)** %20, align 8, !tbaa !124
  %22 = tail call i32 @spread(i32 2) #8
  tail call void @fuse(void (...)* %21, i32 0, i32 %10, i32 %22) #8
  tail call void @look(i1 zeroext false) #8
  br label %26

; <label>:23                                      ; preds = %7
  %24 = getelementptr inbounds [14 x %struct.PACT]* @p_actions, i64 0, i64 %1, i32 1
  %25 = load void (...)** %24, align 8, !tbaa !124
  tail call void @lengthen(void (...)* %25, i32 %10) #8
  br label %26

; <label>:26                                      ; preds = %23, %17
  %27 = getelementptr inbounds [14 x %struct.PACT]* @p_actions, i64 0, i64 %1, i32 3
  %28 = load i8** %27, align 8, !tbaa !125
  %29 = getelementptr inbounds [14 x %struct.PACT]* @p_actions, i64 0, i64 %1, i32 4
  %30 = load i8** %29, align 8, !tbaa !126
  %31 = tail call i8* @choose_str(i8* %28, i8* %30) #8
  %32 = tail call i32 (i8*, ...)* @msg(i8* %31) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @turn_see(i1 zeroext %turn_off) #0 {
  %mp.01 = load %union.thing** @mlist, align 8
  %1 = icmp eq %union.thing* %mp.01, null
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %35, %0
  %mp.03 = phi %union.thing* [ %mp.0, %35 ], [ %mp.01, %0 ]
  %add_new.02 = phi i8 [ %add_new.1, %35 ], [ 0, %0 ]
  %2 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %3 = getelementptr inbounds %union.thing* %mp.03, i64 0, i32 0, i32 2, i32 1
  %4 = load i32* %3, align 4, !tbaa !23
  %5 = getelementptr inbounds %union.thing* %mp.03, i64 0, i32 0, i32 2, i32 0
  %6 = load i32* %5, align 4, !tbaa !22
  %7 = tail call i32 @wmove(%struct._win_st* %2, i32 %4, i32 %6) #8
  %8 = tail call zeroext i1 @see_monst(%union.thing* %mp.03) #8
  br i1 %turn_off, label %9, label %16

; <label>:9                                       ; preds = %.lr.ph
  br i1 %8, label %35, label %10

; <label>:10                                      ; preds = %9
  %11 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %12 = getelementptr inbounds %union.thing* %mp.03, i64 0, i32 0, i32 6
  %13 = load i8* %12, align 1, !tbaa !42
  %14 = sext i8 %13 to i32
  %15 = tail call i32 @waddch(%struct._win_st* %11, i32 %14) #8
  br label %35

; <label>:16                                      ; preds = %.lr.ph
  %.pre = load %struct._win_st** @stdscr, align 8, !tbaa !1
  br i1 %8, label %._crit_edge4, label %17

; <label>:17                                      ; preds = %16
  %18 = getelementptr inbounds %struct._win_st* %.pre, i64 0, i32 7
  store i32 65536, i32* %18, align 4, !tbaa !45
  br label %._crit_edge4

._crit_edge4:                                     ; preds = %17, %16
  %19 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %20 = and i16 %19, 2048
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %27

; <label>:22                                      ; preds = %._crit_edge4
  %23 = getelementptr inbounds %union.thing* %mp.03, i64 0, i32 0, i32 4
  %24 = load i8* %23, align 1, !tbaa !37
  %25 = sext i8 %24 to i32
  %26 = tail call i32 @waddch(%struct._win_st* %.pre, i32 %25) #8
  br label %31

; <label>:27                                      ; preds = %._crit_edge4
  %28 = tail call i32 @rnd(i32 26) #8
  %29 = add nsw i32 %28, 65
  %30 = tail call i32 @waddch(%struct._win_st* %.pre, i32 %29) #8
  br label %31

; <label>:31                                      ; preds = %27, %22
  br i1 %8, label %35, label %32

; <label>:32                                      ; preds = %31
  %33 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %34 = getelementptr inbounds %struct._win_st* %33, i64 0, i32 7
  store i32 0, i32* %34, align 4, !tbaa !45
  br label %35

; <label>:35                                      ; preds = %32, %31, %10, %9
  %add_new.1 = phi i8 [ %add_new.02, %9 ], [ %add_new.02, %10 ], [ %add_new.02, %31 ], [ 1, %32 ]
  %36 = getelementptr inbounds %union.thing* %mp.03, i64 0, i32 0, i32 0
  %mp.0 = load %union.thing** %36, align 8
  %37 = icmp eq %union.thing* %mp.0, null
  br i1 %37, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %35, %0
  %add_new.0.lcssa = phi i8 [ 0, %0 ], [ %add_new.1, %35 ]
  %38 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %39 = and i16 %38, -16385
  %40 = or i16 %38, 16384
  %storemerge = select i1 %turn_off, i16 %39, i16 %40
  store i16 %storemerge, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %41 = and i8 %add_new.0.lcssa, 1
  %42 = icmp ne i8 %41, 0
  ret i1 %42
}

; Function Attrs: nounwind readonly ssp uwtable
define zeroext i1 @is_magic(%union.thing* nocapture readonly %obj) #1 {
  %1 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 2, i32 0
  %2 = load i32* %1, align 4, !tbaa !8
  switch i32 %2, label %29 [
    i32 93, label %3
    i32 41, label %19
    i32 33, label %30
    i32 63, label %30
    i32 47, label %30
    i32 61, label %30
    i32 44, label %30
  ]

; <label>:3                                       ; preds = %0
  %4 = bitcast %union.thing* %obj to %struct.anon.0*
  %5 = getelementptr inbounds %struct.anon.0* %4, i64 0, i32 14
  %6 = load i32* %5, align 4, !tbaa !12
  %7 = and i32 %6, 32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %30

; <label>:9                                       ; preds = %3
  %10 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 6
  %11 = load i32* %10, align 4, !tbaa !70
  %12 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 4
  %13 = bitcast i8* %12 to i32*
  %14 = load i32* %13, align 4, !tbaa !50
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %15
  %17 = load i32* %16, align 4, !tbaa !38
  %18 = icmp ne i32 %11, %17
  br label %30

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 8
  %21 = bitcast i8* %20 to i32*
  %22 = load i32* %21, align 4, !tbaa !68
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %30

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 12
  %26 = bitcast i8* %25 to i32*
  %27 = load i32* %26, align 4, !tbaa !69
  %28 = icmp ne i32 %27, 0
  br label %30

; <label>:29                                      ; preds = %0
  br label %30

; <label>:30                                      ; preds = %29, %24, %19, %9, %3, %0, %0, %0, %0, %0
  %.0 = phi i1 [ false, %29 ], [ true, %3 ], [ %18, %9 ], [ true, %19 ], [ %28, %24 ], [ true, %0 ], [ true, %0 ], [ true, %0 ], [ true, %0 ], [ true, %0 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @invis_on() #0 {
  %1 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %2 = or i16 %1, 2
  store i16 %2, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %mp.01 = load %union.thing** @mlist, align 8
  %3 = icmp eq %union.thing* %mp.01, null
  br i1 %3, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %28, %0
  %mp.02 = phi %union.thing* [ %mp.0, %28 ], [ %mp.01, %0 ]
  %4 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 8
  %5 = load i16* %4, align 2, !tbaa !18
  %6 = and i16 %5, 1024
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %28, label %8

; <label>:8                                       ; preds = %.lr.ph
  %9 = tail call zeroext i1 @see_monst(%union.thing* %mp.02) #8
  br i1 %9, label %10, label %28

; <label>:10                                      ; preds = %8
  %11 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %12 = and i16 %11, 2048
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %28

; <label>:14                                      ; preds = %10
  %15 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %16 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 2, i32 1
  %17 = load i32* %16, align 4, !tbaa !23
  %18 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 2, i32 0
  %19 = load i32* %18, align 4, !tbaa !22
  %20 = tail call i32 @wmove(%struct._win_st* %15, i32 %17, i32 %19) #8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %28, label %22

; <label>:22                                      ; preds = %14
  %23 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %24 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 5
  %25 = load i8* %24, align 1, !tbaa !44
  %26 = sext i8 %25 to i32
  %27 = tail call i32 @waddch(%struct._win_st* %23, i32 %26) #8
  br label %28

; <label>:28                                      ; preds = %22, %14, %10, %8, %.lr.ph
  %29 = getelementptr inbounds %union.thing* %mp.02, i64 0, i32 0, i32 0
  %mp.0 = load %union.thing** %29, align 8
  %30 = icmp eq %union.thing* %mp.0, null
  br i1 %30, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %28, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @seen_stairs() #0 {
  %1 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %2 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %3 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  %4 = tail call i32 @wmove(%struct._win_st* %1, i32 %2, i32 %3) #8
  %5 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %6 = tail call i32 @winch(%struct._win_st* %5) #8
  %7 = icmp eq i32 %6, 37
  br i1 %7, label %42, label %8

; <label>:8                                       ; preds = %0
  %9 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %10 = trunc i64 %9 to i32
  %11 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %13, label %._crit_edge

._crit_edge:                                      ; preds = %8
  %.pre = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  br label %18

; <label>:13                                      ; preds = %8
  %14 = lshr i64 %9, 32
  %15 = trunc i64 %14 to i32
  %16 = load i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %42, label %18

; <label>:18                                      ; preds = %13, %._crit_edge
  %19 = phi i32 [ %.pre, %._crit_edge ], [ %16, %13 ]
  %20 = shl i32 %11, 5
  %21 = add nsw i32 %20, %19
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %22, i32 2
  %24 = load %union.thing** %23, align 8, !tbaa !43
  %25 = icmp eq %union.thing* %24, null
  br i1 %25, label %41, label %26

; <label>:26                                      ; preds = %18
  %27 = tail call zeroext i1 @see_monst(%union.thing* %24) #8
  br i1 %27, label %28, label %33

; <label>:28                                      ; preds = %26
  %29 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 8
  %30 = load i16* %29, align 2, !tbaa !18
  %31 = and i16 %30, 8192
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %33, label %42

; <label>:33                                      ; preds = %28, %26
  %34 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %35 = and i16 %34, 16384
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %41, label %37

; <label>:37                                      ; preds = %33
  %38 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 6
  %39 = load i8* %38, align 1, !tbaa !42
  %40 = icmp eq i8 %39, 37
  br i1 %40, label %42, label %41

; <label>:41                                      ; preds = %37, %33, %18
  br label %42

; <label>:42                                      ; preds = %41, %37, %28, %13, %0
  %.0 = phi i1 [ false, %41 ], [ true, %0 ], [ true, %13 ], [ true, %28 ], [ true, %37 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @raise_level() #0 {
  %1 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 2), align 4, !tbaa !63
  %2 = add nsw i32 %1, -1
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [0 x i32]* bitcast ([21 x i32]* @e_levels to [0 x i32]*), i64 0, i64 %3
  %5 = load i32* %4, align 4, !tbaa !38
  %6 = add i32 %5, 1
  store i32 %6, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 1), align 4, !tbaa !76
  tail call void (...)* bitcast (void ()* @check_level to void (...)*)() #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @ring_on() #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([7 x i8]* @.str802, i64 0, i64 0), i32 61) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %54, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 61
  br i1 %6, label %14, label %7

; <label>:7                                       ; preds = %3
  %8 = load i8* @terse, align 1, !tbaa !5, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([51 x i8]* @.str1803, i64 0, i64 0)) #8
  br label %54

; <label>:12                                      ; preds = %7
  %13 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([11 x i8]* @.str2804, i64 0, i64 0)) #8
  br label %54

; <label>:14                                      ; preds = %3
  %15 = tail call zeroext i1 @is_current(%union.thing* %1) #8
  br i1 %15, label %54, label %16

; <label>:16                                      ; preds = %14
  %17 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %18 = icmp eq %union.thing* %17, null
  %19 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %20 = icmp eq %union.thing* %19, null
  br i1 %18, label %21, label %.thread

; <label>:21                                      ; preds = %16
  br i1 %20, label %22, label %32

; <label>:22                                      ; preds = %21
  %23 = tail call i32 @gethand()
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %54, label %32

.thread:                                          ; preds = %16
  br i1 %20, label %32, label %25

; <label>:25                                      ; preds = %.thread
  %26 = load i8* @terse, align 1, !tbaa !5, !range !7
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %30

; <label>:28                                      ; preds = %25
  %29 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([37 x i8]* @.str3805, i64 0, i64 0)) #8
  br label %54

; <label>:30                                      ; preds = %25
  %31 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([12 x i8]* @.str4806, i64 0, i64 0)) #8
  br label %54

; <label>:32                                      ; preds = %.thread, %22, %21
  %ring.0 = phi i32 [ %23, %22 ], [ 1, %.thread ], [ 0, %21 ]
  %33 = sext i32 %ring.0 to i64
  %34 = getelementptr inbounds [0 x %union.thing*]* bitcast ([2 x %union.thing*]* @cur_ring to [0 x %union.thing*]*), i64 0, i64 %33
  store %union.thing* %1, %union.thing** %34, align 8, !tbaa !1
  %35 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %36 = bitcast i8* %35 to i32*
  %37 = load i32* %36, align 4, !tbaa !50
  switch i32 %37, label %43 [
    i32 1, label %38
    i32 4, label %41
    i32 6, label %42
  ]

; <label>:38                                      ; preds = %32
  %39 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 6
  %40 = load i32* %39, align 4, !tbaa !70
  tail call void @chg_str(i32 %40) #8
  br label %43

; <label>:41                                      ; preds = %32
  tail call void (...)* bitcast (void ()* @invis_on to void (...)*)() #8
  br label %43

; <label>:42                                      ; preds = %32
  tail call void (...)* bitcast (void ()* @aggravate to void (...)*)() #8
  br label %43

; <label>:43                                      ; preds = %42, %41, %38, %32
  %44 = load i8* @terse, align 1, !tbaa !5, !range !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %47

; <label>:46                                      ; preds = %43
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([21 x i8]* @.str5807, i64 0, i64 0)) #8
  br label %47

; <label>:47                                      ; preds = %46, %43
  %48 = tail call i8* @inv_name(%union.thing* %1, i1 zeroext true) #8
  %49 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9
  %50 = bitcast %struct.stats* %49 to i8*
  %51 = load i8* %50, align 1, !tbaa !13
  %52 = sext i8 %51 to i32
  %53 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([8 x i8]* @.str6808, i64 0, i64 0), i8* %48, i32 %52) #8
  br label %54

; <label>:54                                      ; preds = %47, %30, %28, %22, %14, %12, %10, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @ring_off() #0 {
  %1 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %2 = icmp eq %union.thing* %1, null
  %3 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %4 = icmp eq %union.thing* %3, null
  br i1 %2, label %5, label %.thread

; <label>:5                                       ; preds = %0
  br i1 %4, label %6, label %.thread4

; <label>:6                                       ; preds = %5
  %7 = load i8* @terse, align 1, !tbaa !5, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %6
  %10 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([9 x i8]* @.str7809, i64 0, i64 0)) #8
  br label %30

; <label>:11                                      ; preds = %6
  %12 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([29 x i8]* @.str8810, i64 0, i64 0)) #8
  br label %30

.thread:                                          ; preds = %0
  br i1 %4, label %.thread4, label %13

; <label>:13                                      ; preds = %.thread
  %14 = tail call i32 @gethand()
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %30, label %16

.thread4:                                         ; preds = %.thread, %5
  %.ph = phi %union.thing* [ %1, %.thread ], [ %3, %5 ]
  store i32 0, i32* @mpos, align 4, !tbaa !38
  br label %20

; <label>:16                                      ; preds = %13
  %.phi.trans.insert = sext i32 %14 to i64
  %.phi.trans.insert1 = getelementptr inbounds [0 x %union.thing*]* bitcast ([2 x %union.thing*]* @cur_ring to [0 x %union.thing*]*), i64 0, i64 %.phi.trans.insert
  %.pre = load %union.thing** %.phi.trans.insert1, align 8, !tbaa !1
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %17 = icmp eq %union.thing* %.pre, null
  br i1 %17, label %18, label %20

; <label>:18                                      ; preds = %16
  %19 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([24 x i8]* @.str9811, i64 0, i64 0)) #8
  br label %30

; <label>:20                                      ; preds = %16, %.thread4
  %21 = phi %union.thing* [ %.ph, %.thread4 ], [ %.pre, %16 ]
  %22 = tail call zeroext i1 @dropcheck(%union.thing* %21) #8
  br i1 %22, label %23, label %30

; <label>:23                                      ; preds = %20
  %24 = tail call i8* @inv_name(%union.thing* %21, i1 zeroext true) #8
  %25 = getelementptr inbounds %union.thing* %21, i64 0, i32 0, i32 9
  %26 = bitcast %struct.stats* %25 to i8*
  %27 = load i8* %26, align 1, !tbaa !13
  %28 = sext i8 %27 to i32
  %29 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str10812, i64 0, i64 0), i8* %24, i32 %28) #8
  br label %30

; <label>:30                                      ; preds = %23, %20, %18, %13, %11, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @gethand() #0 {
  br label %.backedge

.backedge:                                        ; preds = %20, %18, %0
  %1 = load i8* @terse, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %.backedge
  %4 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str11813, i64 0, i64 0)) #8
  br label %7

; <label>:5                                       ; preds = %.backedge
  %6 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([26 x i8]* @.str12814, i64 0, i64 0)) #8
  br label %7

; <label>:7                                       ; preds = %5, %3
  %8 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %9 = icmp eq i8 %8, 27
  br i1 %9, label %22, label %10

; <label>:10                                      ; preds = %7
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %11 = and i8 %8, -33
  %12 = icmp eq i8 %11, 76
  br i1 %12, label %22, label %13

; <label>:13                                      ; preds = %10
  %14 = icmp eq i8 %11, 82
  br i1 %14, label %22, label %15

; <label>:15                                      ; preds = %13
  %16 = load i8* @terse, align 1, !tbaa !5, !range !7
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %15
  %19 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([7 x i8]* @.str13815, i64 0, i64 0)) #8
  br label %.backedge

; <label>:20                                      ; preds = %15
  %21 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([19 x i8]* @.str14816, i64 0, i64 0)) #8
  br label %.backedge

; <label>:22                                      ; preds = %13, %10, %7
  %.0 = phi i32 [ -1, %7 ], [ 0, %10 ], [ 1, %13 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @ring_eat(i32 %hand) #0 {
  %1 = sext i32 %hand to i64
  %2 = getelementptr inbounds [0 x %union.thing*]* bitcast ([2 x %union.thing*]* @cur_ring to [0 x %union.thing*]*), i64 0, i64 %1
  %3 = load %union.thing** %2, align 8, !tbaa !1
  %4 = icmp eq %union.thing* %3, null
  br i1 %4, label %24, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %union.thing* %3, i64 0, i32 0, i32 9, i32 5, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = load i32* %7, align 4, !tbaa !50
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [14 x i32]* @ring_eat.uses, i64 0, i64 %9
  %11 = load i32* %10, align 4, !tbaa !38
  %12 = lshr i64 1432, %9
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %20, label %15

; <label>:15                                      ; preds = %5
  %16 = sub nsw i32 0, %11
  %17 = tail call i32 @rnd(i32 %16) #8
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i32
  %.pre = load i32* %7, align 4, !tbaa !50
  br label %20

; <label>:20                                      ; preds = %15, %5
  %21 = phi i32 [ %.pre, %15 ], [ %8, %5 ]
  %eat.0 = phi i32 [ %19, %15 ], [ %11, %5 ]
  %22 = icmp eq i32 %21, 10
  %23 = sub nsw i32 0, %eat.0
  %.eat.0 = select i1 %22, i32 %23, i32 %eat.0
  br label %24

; <label>:24                                      ; preds = %20, %0
  %.0 = phi i32 [ %.eat.0, %20 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @ring_num(%union.thing* nocapture readonly %obj) #0 {
  %1 = bitcast %union.thing* %obj to %struct.anon.0*
  %2 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 14
  %3 = load i32* %2, align 4, !tbaa !12
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = load i32* %8, align 4, !tbaa !50
  switch i32 %9, label %15 [
    i32 0, label %10
    i32 1, label %10
    i32 8, label %10
    i32 7, label %10
  ]

; <label>:10                                      ; preds = %6, %6, %6, %6
  %11 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 6
  %12 = load i32* %11, align 4, !tbaa !70
  %13 = tail call i8* @num(i32 %12, i32 0, i8 signext 61) #8
  %14 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([10 x i8]* @ring_num.buf, i64 0, i64 0), i32 0, i64 10, i8* getelementptr inbounds ([6 x i8]* @.str16818, i64 0, i64 0), i8* %13) #8
  br label %15

; <label>:15                                      ; preds = %10, %6, %0
  %.0 = phi i8* [ getelementptr inbounds ([10 x i8]* @ring_num.buf, i64 0, i64 0), %10 ], [ getelementptr inbounds ([1 x i8]* @.str15817, i64 0, i64 0), %0 ], [ getelementptr inbounds ([1 x i8]* @.str15817, i64 0, i64 0), %6 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @score(i32 %amount, i32 %flags, i8 signext %monst) #0 {
  tail call void (...)* bitcast (void ()* @start_score to void (...)*)() #8
  %1 = icmp sgt i32 %flags, -1
  br i1 %1, label %2, label %25

; <label>:2                                       ; preds = %0
  %3 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %4 = load i32* @LINES, align 4, !tbaa !38
  %5 = add nsw i32 %4, -1
  %6 = tail call i32 @wmove(%struct._win_st* %3, i32 %5, i32 0) #8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %11, label %8

; <label>:8                                       ; preds = %2
  %9 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %10 = tail call i32 @waddnstr(%struct._win_st* %9, i8* getelementptr inbounds ([27 x i8]* @.str4829, i64 0, i64 0), i32 -1) #8
  br label %11

; <label>:11                                      ; preds = %8, %2
  %12 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %13 = tail call i32 @wrefresh(%struct._win_st* %12) #8
  %14 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %15 = tail call i32 @wgetnstr(%struct._win_st* %14, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 80) #8
  %16 = tail call i32 @endwin() #8
  %putchar3 = tail call i32 @putchar(i32 10) #8
  tail call void @resetltchars() #8
  %17 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %18 = tail call i32 @delwin(%struct._win_st* %17) #8
  %19 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %20 = tail call i32 @delwin(%struct._win_st* %19) #8
  %21 = load %struct._win_st** @hw, align 8, !tbaa !1
  %22 = icmp eq %struct._win_st* %21, null
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %11
  %24 = tail call i32 @delwin(%struct._win_st* %21) #8
  br label %25

; <label>:25                                      ; preds = %23, %11, %0
  %26 = load i32* @numscores, align 4, !tbaa !38
  %27 = zext i32 %26 to i64
  %28 = mul i64 %27, 1048
  %29 = tail call i8* @malloc(i64 %28) #8
  %30 = bitcast i8* %29 to %struct.sc_ent*
  %31 = getelementptr inbounds %struct.sc_ent* %30, i64 %27
  %32 = icmp ult %struct.sc_ent* %30, %31
  br i1 %32, label %.lr.ph22, label %._crit_edge23

.lr.ph22:                                         ; preds = %38, %25
  %scp.020 = phi %struct.sc_ent* [ %59, %38 ], [ %30, %25 ]
  %33 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 0, i32 1
  store i32 0, i32* %33, align 4, !tbaa !127
  br label %34

; <label>:34                                      ; preds = %34, %.lr.ph22
  %indvars.iv = phi i64 [ 0, %.lr.ph22 ], [ %indvars.iv.next, %34 ]
  %35 = tail call i32 @rnd(i32 255) #8
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 0, i32 4, i64 %indvars.iv
  store i8 %36, i8* %37, align 1, !tbaa !28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond, label %38, label %34

; <label>:38                                      ; preds = %34
  %39 = load i32* @seed, align 4, !tbaa !38
  %40 = mul nsw i32 %39, 11109
  %41 = add nsw i32 %40, 13849
  store i32 %41, i32* @seed, align 4, !tbaa !38
  %42 = lshr i32 %41, 16
  %43 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 0, i32 2
  store i32 %42, i32* %43, align 4, !tbaa !129
  %44 = load i32* @seed, align 4, !tbaa !38
  %45 = mul nsw i32 %44, 11109
  %46 = add nsw i32 %45, 13849
  store i32 %46, i32* @seed, align 4, !tbaa !38
  %47 = lshr i32 %46, 16
  %48 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 0, i32 5
  store i32 %47, i32* %48, align 4, !tbaa !130
  %49 = load i32* @seed, align 4, !tbaa !38
  %50 = mul nsw i32 %49, 11109
  %51 = add nsw i32 %50, 13849
  %52 = lshr i32 %51, 16
  %53 = trunc i32 %52 to i16
  %54 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 0, i32 3
  store i16 %53, i16* %54, align 2, !tbaa !131
  %55 = mul nsw i32 %51, 11109
  %56 = add nsw i32 %55, 13849
  store i32 %56, i32* @seed, align 4, !tbaa !38
  %57 = lshr i32 %56, 16
  %58 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 0, i32 0
  store i32 %57, i32* %58, align 4, !tbaa !132
  %59 = getelementptr inbounds %struct.sc_ent* %scp.020, i64 1
  %60 = icmp ult %struct.sc_ent* %59, %31
  br i1 %60, label %.lr.ph22, label %._crit_edge23

._crit_edge23:                                    ; preds = %38, %25
  %61 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #8
  tail call void @rd_score(%struct.sc_ent* %30) #8
  %62 = load i32* @noscore, align 4, !tbaa !38
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %.critedge

; <label>:64                                      ; preds = %._crit_edge23
  %65 = tail call i32 (...)* bitcast (i32 ()* @md_getuid to i32 (...)*)() #8
  br i1 %32, label %.lr.ph18, label %.critedge

.lr.ph18:                                         ; preds = %64
  %66 = load i8* @allscore, align 1, !tbaa !5, !range !7
  %.not = icmp eq i8 %66, 0
  %67 = icmp ne i32 %flags, 2
  %or.cond = and i1 %.not, %67
  br label %68

; <label>:68                                      ; preds = %81, %.lr.ph18
  %scp.116 = phi %struct.sc_ent* [ %30, %.lr.ph18 ], [ %82, %81 ]
  %69 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 1
  %70 = load i32* %69, align 4, !tbaa !127
  %71 = icmp slt i32 %70, %amount
  br i1 %71, label %84, label %72

; <label>:72                                      ; preds = %68
  br i1 %or.cond, label %73, label %81

; <label>:73                                      ; preds = %72
  %74 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 0
  %75 = load i32* %74, align 4, !tbaa !132
  %76 = icmp eq i32 %75, %65
  br i1 %76, label %77, label %81

; <label>:77                                      ; preds = %73
  %78 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 2
  %79 = load i32* %78, align 4, !tbaa !129
  %80 = icmp eq i32 %79, 2
  %scp.1. = select i1 %80, %struct.sc_ent* %scp.116, %struct.sc_ent* %31
  br label %81

; <label>:81                                      ; preds = %77, %73, %72
  %scp.2 = phi %struct.sc_ent* [ %scp.116, %73 ], [ %scp.116, %72 ], [ %scp.1., %77 ]
  %82 = getelementptr inbounds %struct.sc_ent* %scp.2, i64 1
  %83 = icmp ult %struct.sc_ent* %82, %31
  br i1 %83, label %68, label %.critedge

; <label>:84                                      ; preds = %68
  br i1 %or.cond, label %.preheader10, label %97

.preheader10:                                     ; preds = %84
  %85 = icmp ult %struct.sc_ent* %scp.116, %31
  br i1 %85, label %.lr.ph14, label %.thread

.lr.ph14:                                         ; preds = %93, %.preheader10
  %sc2.013 = phi %struct.sc_ent* [ %94, %93 ], [ %scp.116, %.preheader10 ]
  %86 = getelementptr inbounds %struct.sc_ent* %sc2.013, i64 0, i32 0
  %87 = load i32* %86, align 4, !tbaa !132
  %88 = icmp eq i32 %87, %65
  br i1 %88, label %89, label %93

; <label>:89                                      ; preds = %.lr.ph14
  %90 = getelementptr inbounds %struct.sc_ent* %sc2.013, i64 0, i32 2
  %91 = load i32* %90, align 4, !tbaa !129
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %93, label %.preheader

; <label>:93                                      ; preds = %89, %.lr.ph14
  %94 = getelementptr inbounds %struct.sc_ent* %sc2.013, i64 1
  %95 = icmp ult %struct.sc_ent* %94, %31
  br i1 %95, label %.lr.ph14, label %.thread

.thread:                                          ; preds = %93, %.preheader10
  %.sum2 = add i64 %27, -1
  %96 = getelementptr inbounds %struct.sc_ent* %30, i64 %.sum2
  br label %.preheader

; <label>:97                                      ; preds = %84
  %.sum = add i64 %27, -1
  %98 = getelementptr inbounds %struct.sc_ent* %30, i64 %.sum
  br label %.preheader

.preheader:                                       ; preds = %97, %.thread, %89
  %sc2.1.ph = phi %struct.sc_ent* [ %98, %97 ], [ %96, %.thread ], [ %sc2.013, %89 ]
  %99 = icmp ugt %struct.sc_ent* %sc2.1.ph, %scp.116
  br i1 %99, label %.lr.ph8, label %._crit_edge9

.lr.ph8:                                          ; preds = %.lr.ph8, %.preheader
  %sc2.17 = phi %struct.sc_ent* [ %100, %.lr.ph8 ], [ %sc2.1.ph, %.preheader ]
  %100 = getelementptr inbounds %struct.sc_ent* %sc2.17, i64 -1
  %101 = bitcast %struct.sc_ent* %sc2.17 to i8*
  %102 = bitcast %struct.sc_ent* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 1048, i32 4, i1 false), !tbaa.struct !133
  %103 = icmp ugt %struct.sc_ent* %100, %scp.116
  br i1 %103, label %.lr.ph8, label %._crit_edge9

._crit_edge9:                                     ; preds = %.lr.ph8, %.preheader
  store i32 %amount, i32* %69, align 4, !tbaa !127
  %104 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 4, i64 0
  %105 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %104, i1 false)
  %106 = tail call i8* @__strncpy_chk(i8* %104, i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0), i64 1024, i64 %105) #8
  %107 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 2
  store i32 %flags, i32* %107, align 4, !tbaa !129
  %108 = icmp eq i32 %flags, 2
  br i1 %108, label %109, label %112

; <label>:109                                     ; preds = %._crit_edge9
  %110 = load i32* @max_level, align 4, !tbaa !38
  %111 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 5
  store i32 %110, i32* %111, align 4, !tbaa !130
  br label %115

; <label>:112                                     ; preds = %._crit_edge9
  %113 = load i32* @level, align 4, !tbaa !38
  %114 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 5
  store i32 %113, i32* %114, align 4, !tbaa !130
  br label %115

; <label>:115                                     ; preds = %112, %109
  %116 = sext i8 %monst to i16
  %117 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 3
  store i16 %116, i16* %117, align 2, !tbaa !131
  %118 = getelementptr inbounds %struct.sc_ent* %scp.116, i64 0, i32 0
  store i32 %65, i32* %118, align 4, !tbaa !132
  br label %.critedge

.critedge:                                        ; preds = %115, %81, %64, %._crit_edge23
  %sc2.2 = phi %struct.sc_ent* [ null, %._crit_edge23 ], [ %scp.116, %115 ], [ null, %64 ], [ null, %81 ]
  %119 = icmp eq i32 %flags, -1
  br i1 %119, label %122, label %120

; <label>:120                                     ; preds = %.critedge
  %121 = tail call i32 @putchar(i32 10) #8
  br label %122

; <label>:122                                     ; preds = %120, %.critedge
  %123 = load i8** @Numname, align 8, !tbaa !1
  %124 = load i8* @allscore, align 1, !tbaa !5, !range !7
  %125 = icmp ne i8 %124, 0
  %126 = select i1 %125, i8* getelementptr inbounds ([7 x i8]* @.str7831, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str8832, i64 0, i64 0)
  %127 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str6830, i64 0, i64 0), i8* %123, i8* %126) #8
  %puts = tail call i32 @puts(i8* getelementptr inbounds ([14 x i8]* @str873, i64 0, i64 0))
  br i1 %32, label %.lr.ph, label %split

.lr.ph:                                           ; preds = %122
  %128 = ptrtoint i8* %29 to i64
  br label %129

; <label>:129                                     ; preds = %161, %.lr.ph
  %scp.36 = phi %struct.sc_ent* [ %30, %.lr.ph ], [ %163, %161 ]
  %130 = getelementptr inbounds %struct.sc_ent* %scp.36, i64 0, i32 1
  %131 = load i32* %130, align 4, !tbaa !127
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %split, label %133

; <label>:133                                     ; preds = %129
  %134 = icmp eq %struct.sc_ent* %sc2.2, %scp.36
  br i1 %134, label %135, label %136

; <label>:135                                     ; preds = %133
  tail call void (...)* bitcast (void ()* @md_raw_standout to void (...)*)() #8
  %.pre = load i32* %130, align 4, !tbaa !127
  br label %136

; <label>:136                                     ; preds = %135, %133
  %137 = phi i32 [ %.pre, %135 ], [ %131, %133 ]
  %138 = ptrtoint %struct.sc_ent* %scp.36 to i64
  %139 = sub i64 %138, %128
  %140 = sdiv exact i64 %139, 1048
  %141 = add nsw i64 %140, 1
  %142 = trunc i64 %141 to i32
  %143 = getelementptr inbounds %struct.sc_ent* %scp.36, i64 0, i32 4, i64 0
  %144 = getelementptr inbounds %struct.sc_ent* %scp.36, i64 0, i32 2
  %145 = load i32* %144, align 4, !tbaa !129
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds [4 x i8*]* @score.reason, i64 0, i64 %146
  %148 = load i8** %147, align 8, !tbaa !1
  %149 = getelementptr inbounds %struct.sc_ent* %scp.36, i64 0, i32 5
  %150 = load i32* %149, align 4, !tbaa !130
  %151 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str10833, i64 0, i64 0), i32 %142, i32 %137, i8* %143, i8* %148, i32 %150) #8
  %152 = load i32* %144, align 4, !tbaa !129
  switch i32 %152, label %159 [
    i32 0, label %153
    i32 3, label %153
  ]

; <label>:153                                     ; preds = %136, %136
  %154 = getelementptr inbounds %struct.sc_ent* %scp.36, i64 0, i32 3
  %155 = load i16* %154, align 2, !tbaa !131
  %156 = trunc i16 %155 to i8
  %157 = tail call i8* @killname(i8 signext %156, i1 zeroext true)
  %158 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str11834, i64 0, i64 0), i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  br label %159

; <label>:159                                     ; preds = %153, %136
  %putchar = tail call i32 @putchar(i32 46) #8
  br i1 %134, label %160, label %161

; <label>:160                                     ; preds = %159
  tail call void (...)* bitcast (void ()* @md_raw_standend to void (...)*)() #8
  br label %161

; <label>:161                                     ; preds = %160, %159
  %162 = tail call i32 @putchar(i32 10) #8
  %163 = getelementptr inbounds %struct.sc_ent* %scp.36, i64 1
  %164 = icmp ult %struct.sc_ent* %163, %31
  br i1 %164, label %129, label %split

split:                                            ; preds = %161, %129, %122
  %165 = icmp eq %struct.sc_ent* %sc2.2, null
  br i1 %165, label %171, label %166

; <label>:166                                     ; preds = %split
  %167 = tail call zeroext i1 (...)* bitcast (i1 ()* @lock_sc to i1 (...)*)() #8
  br i1 %167, label %168, label %171

; <label>:168                                     ; preds = %166
  %169 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*)) #8
  tail call void @wr_score(%struct.sc_ent* %30) #8
  tail call void (...)* bitcast (void ()* @unlock_sc to void (...)*)() #8
  %170 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* %169) #8
  br label %171

; <label>:171                                     ; preds = %168, %166, %split
  ret void
}

declare i32 @wgetnstr(%struct._win_st*, i8*, i32) #2

declare i32 @delwin(%struct._win_st*) #2

; Function Attrs: nounwind ssp uwtable
define i8* @killname(i8 signext %monst, i1 zeroext %doart) #0 {
  %1 = sext i8 %monst to i32
  %isascii.i.i6 = icmp sgt i8 %monst, -1
  br i1 %isascii.i.i6, label %2, label %7

; <label>:2                                       ; preds = %0
  %3 = sext i8 %monst to i64
  %4 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %3
  %5 = load i32* %4, align 4, !tbaa !38
  %6 = and i32 %5, 32768
  br label %isupper.exit

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @__maskrune(i32 %1, i64 32768) #8
  br label %isupper.exit

isupper.exit:                                     ; preds = %7, %2
  %.sink.i.in.i = phi i32 [ %6, %2 ], [ %8, %7 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %.lr.ph, label %9

; <label>:9                                       ; preds = %isupper.exit
  %10 = add nsw i32 %1, -65
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %11, i32 0
  br label %24

; <label>:13                                      ; preds = %.lr.ph
  %14 = getelementptr inbounds %struct.h_list* %19, i64 0, i32 0
  %15 = load i8* %14, align 1, !tbaa !54
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %.thread, label %.lr.ph

.lr.ph:                                           ; preds = %13, %isupper.exit
  %17 = phi i8 [ %15, %13 ], [ 97, %isupper.exit ]
  %hp.08 = phi %struct.h_list* [ %19, %13 ], [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @killname.nlist to %struct.h_list*), %isupper.exit ]
  %18 = icmp eq i8 %17, %monst
  %19 = getelementptr inbounds %struct.h_list* %hp.08, i64 1
  br i1 %18, label %20, label %13

; <label>:20                                      ; preds = %.lr.ph
  %21 = getelementptr inbounds %struct.h_list* %hp.08, i64 0, i32 1
  %22 = getelementptr inbounds %struct.h_list* %hp.08, i64 0, i32 2
  %23 = load i8* %22, align 1, !tbaa !55, !range !7
  %phitmp = icmp eq i8 %23, 0
  br label %24

; <label>:24                                      ; preds = %20, %9
  %sp.0.in = phi i8** [ %12, %9 ], [ %21, %20 ]
  %article.0 = phi i1 [ false, %9 ], [ %phitmp, %20 ]
  %sp.0 = load i8** %sp.0.in, align 8
  %doart.not = xor i1 %doart, true
  %brmerge = or i1 %article.0, %doart.not
  br i1 %brmerge, label %.thread, label %25

; <label>:25                                      ; preds = %24
  %26 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  %27 = tail call i8* @vowelstr(i8* %sp.0) #8
  %28 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %26, i8* getelementptr inbounds ([5 x i8]* @.str14836, i64 0, i64 0), i8* %27) #8
  br label %29

.thread:                                          ; preds = %24, %13
  %sp.05 = phi i8* [ %sp.0, %24 ], [ getelementptr inbounds ([24 x i8]* @.str39861, i64 0, i64 0), %13 ]
  store i8 0, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %.pre = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br label %29

; <label>:29                                      ; preds = %.thread, %25
  %.pre-phi = phi i64 [ %.pre, %.thread ], [ %26, %25 ]
  %sp.04 = phi i8* [ %sp.05, %.thread ], [ %sp.0, %25 ]
  %30 = tail call i8* @__strcat_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* %sp.04, i64 %.pre-phi) #8
  ret i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define void @death(i8 signext %monst) #0 {
  %1 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*)) #8
  %2 = load i32* @purse, align 4, !tbaa !38
  %3 = sdiv i32 %2, 10
  %4 = sub nsw i32 %2, %3
  store i32 %4, i32* @purse, align 4, !tbaa !38
  %5 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @leave) #8
  %6 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %7 = tail call i32 @wclear(%struct._win_st* %6) #8
  %8 = sext i8 %monst to i32
  %isascii.i.i6.i = icmp sgt i8 %monst, -1
  br i1 %isascii.i.i6.i, label %9, label %14

; <label>:9                                       ; preds = %0
  %10 = sext i8 %monst to i64
  %11 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %10
  %12 = load i32* %11, align 4, !tbaa !38
  %13 = and i32 %12, 32768
  br label %isupper.exit.i

; <label>:14                                      ; preds = %0
  %15 = tail call i32 @__maskrune(i32 %8, i64 32768) #8
  br label %isupper.exit.i

isupper.exit.i:                                   ; preds = %14, %9
  %.sink.i.in.i.i = phi i32 [ %13, %9 ], [ %15, %14 ]
  %.sink.i.i.i = icmp eq i32 %.sink.i.in.i.i, 0
  br i1 %.sink.i.i.i, label %.lr.ph.i, label %16

; <label>:16                                      ; preds = %isupper.exit.i
  %17 = add nsw i32 %8, -65
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %18, i32 0
  br label %29

; <label>:20                                      ; preds = %.lr.ph.i
  %21 = getelementptr inbounds %struct.h_list* %26, i64 0, i32 0
  %22 = load i8* %21, align 1, !tbaa !54
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %killname.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %20, %isupper.exit.i
  %24 = phi i8 [ %22, %20 ], [ 97, %isupper.exit.i ]
  %hp.08.i = phi %struct.h_list* [ %26, %20 ], [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @killname.nlist to %struct.h_list*), %isupper.exit.i ]
  %25 = icmp eq i8 %24, %monst
  %26 = getelementptr inbounds %struct.h_list* %hp.08.i, i64 1
  br i1 %25, label %27, label %20

; <label>:27                                      ; preds = %.lr.ph.i
  %28 = getelementptr inbounds %struct.h_list* %hp.08.i, i64 0, i32 1
  br label %29

; <label>:29                                      ; preds = %27, %16
  %sp.0.in.i = phi i8** [ %19, %16 ], [ %28, %27 ]
  %sp.0.i = load i8** %sp.0.in.i, align 8
  br label %killname.exit

killname.exit:                                    ; preds = %29, %20
  %sp.05.i = phi i8* [ %sp.0.i, %29 ], [ getelementptr inbounds ([24 x i8]* @.str39861, i64 0, i64 0), %20 ]
  store i8 0, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %.pre.i = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false) #8
  %30 = tail call i8* @__strcat_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* %sp.05.i, i64 %.pre.i) #8
  %31 = load i8* @tombstone, align 1, !tbaa !5, !range !7
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %65

; <label>:33                                      ; preds = %killname.exit
  %34 = load i32* @LINES, align 4, !tbaa !38
  %35 = add nsw i32 %34, -2
  %36 = tail call i32 (i32, i32, i8*, ...)* @mvprintw(i32 %35, i32 0, i8* getelementptr inbounds ([11 x i8]* @.str13835, i64 0, i64 0)) #8
  br i1 %isascii.i.i6.i, label %37, label %42

; <label>:37                                      ; preds = %33
  %38 = sext i8 %monst to i64
  %39 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %38
  %40 = load i32* %39, align 4, !tbaa !38
  %41 = and i32 %40, 32768
  br label %isupper.exit.i4

; <label>:42                                      ; preds = %33
  %43 = tail call i32 @__maskrune(i32 %8, i64 32768) #8
  br label %isupper.exit.i4

isupper.exit.i4:                                  ; preds = %42, %37
  %.sink.i.in.i.i2 = phi i32 [ %41, %37 ], [ %43, %42 ]
  %.sink.i.i.i3 = icmp eq i32 %.sink.i.in.i.i2, 0
  br i1 %.sink.i.i.i3, label %.lr.ph.i6, label %44

; <label>:44                                      ; preds = %isupper.exit.i4
  %45 = add nsw i32 %8, -65
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %46, i32 0
  br label %57

; <label>:48                                      ; preds = %.lr.ph.i6
  %49 = getelementptr inbounds %struct.h_list* %54, i64 0, i32 0
  %50 = load i8* %49, align 1, !tbaa !54
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %killname.exit13, label %.lr.ph.i6

.lr.ph.i6:                                        ; preds = %48, %isupper.exit.i4
  %52 = phi i8 [ %50, %48 ], [ 97, %isupper.exit.i4 ]
  %hp.08.i5 = phi %struct.h_list* [ %54, %48 ], [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @killname.nlist to %struct.h_list*), %isupper.exit.i4 ]
  %53 = icmp eq i8 %52, %monst
  %54 = getelementptr inbounds %struct.h_list* %hp.08.i5, i64 1
  br i1 %53, label %55, label %48

; <label>:55                                      ; preds = %.lr.ph.i6
  %56 = getelementptr inbounds %struct.h_list* %hp.08.i5, i64 0, i32 1
  br label %57

; <label>:57                                      ; preds = %55, %44
  %sp.0.in.i8 = phi i8** [ %47, %44 ], [ %56, %55 ]
  %sp.0.i10 = load i8** %sp.0.in.i8, align 8
  br label %killname.exit13

killname.exit13:                                  ; preds = %57, %48
  %sp.05.i11 = phi i8* [ %sp.0.i10, %57 ], [ getelementptr inbounds ([24 x i8]* @.str39861, i64 0, i64 0), %48 ]
  store i8 0, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %58 = tail call i8* @__strcat_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* %sp.05.i11, i64 %.pre.i) #8
  switch i8 %monst, label %59 [
    i8 115, label %62
    i8 104, label %62
  ]

; <label>:59                                      ; preds = %killname.exit13
  %60 = tail call i8* @vowelstr(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %61 = tail call i32 (i8*, ...)* @printw(i8* getelementptr inbounds ([5 x i8]* @.str14836, i64 0, i64 0), i8* %60) #8
  br label %62

; <label>:62                                      ; preds = %59, %killname.exit13, %killname.exit13
  %63 = load i32* @purse, align 4, !tbaa !38
  %64 = tail call i32 (i8*, ...)* @printw(i8* getelementptr inbounds ([16 x i8]* @.str15837, i64 0, i64 0), i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 %63) #8
  br label %157

; <label>:65                                      ; preds = %killname.exit
  %66 = tail call i64 @time(i64* @death.date) #8
  %67 = tail call %struct.tm* @localtime(i64* @death.date) #8
  %68 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %69 = tail call i32 @wmove(%struct._win_st* %68, i32 8, i32 0) #8
  %70 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %71 = tail call i32 @waddnstr(%struct._win_st* %70, i8* getelementptr inbounds ([35 x i8]* @.str40862, i64 0, i64 0), i32 -1) #8
  %72 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %73 = tail call i32 @waddnstr(%struct._win_st* %72, i8* getelementptr inbounds ([36 x i8]* @.str41863, i64 0, i64 0), i32 -1) #8
  %74 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %75 = tail call i32 @waddnstr(%struct._win_st* %74, i8* getelementptr inbounds ([37 x i8]* @.str42864, i64 0, i64 0), i32 -1) #8
  %76 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %77 = tail call i32 @waddnstr(%struct._win_st* %76, i8* getelementptr inbounds ([38 x i8]* @.str43865, i64 0, i64 0), i32 -1) #8
  %78 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %79 = tail call i32 @waddnstr(%struct._win_st* %78, i8* getelementptr inbounds ([39 x i8]* @.str44866, i64 0, i64 0), i32 -1) #8
  %80 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %81 = tail call i32 @waddnstr(%struct._win_st* %80, i8* getelementptr inbounds ([40 x i8]* @.str45867, i64 0, i64 0), i32 -1) #8
  %82 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %83 = tail call i32 @waddnstr(%struct._win_st* %82, i8* getelementptr inbounds ([40 x i8]* @.str46868, i64 0, i64 0), i32 -1) #8
  %84 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %85 = tail call i32 @waddnstr(%struct._win_st* %84, i8* getelementptr inbounds ([40 x i8]* @.str46868, i64 0, i64 0), i32 -1) #8
  %86 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %87 = tail call i32 @waddnstr(%struct._win_st* %86, i8* getelementptr inbounds ([40 x i8]* @.str47869, i64 0, i64 0), i32 -1) #8
  %88 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %89 = tail call i32 @waddnstr(%struct._win_st* %88, i8* getelementptr inbounds ([40 x i8]* @.str46868, i64 0, i64 0), i32 -1) #8
  %90 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %91 = tail call i32 @waddnstr(%struct._win_st* %90, i8* getelementptr inbounds ([40 x i8]* @.str48870, i64 0, i64 0), i32 -1) #8
  %92 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %93 = tail call i32 @waddnstr(%struct._win_st* %92, i8* getelementptr inbounds ([42 x i8]* @.str49871, i64 0, i64 0), i32 -1) #8
  %94 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %95 = tail call i32 @waddnstr(%struct._win_st* %94, i8* getelementptr inbounds ([49 x i8]* @.str50872, i64 0, i64 0), i32 -1) #8
  %96 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %97 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %98 = trunc i64 %97 to i32
  %99 = add nsw i32 %98, 1
  %100 = sdiv i32 %99, 2
  %101 = sub nsw i32 28, %100
  %102 = tail call i32 @wmove(%struct._win_st* %96, i32 17, i32 %101) #8
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %107, label %104

; <label>:104                                     ; preds = %65
  %105 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %106 = tail call i32 @waddnstr(%struct._win_st* %105, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 -1) #8
  br label %107

; <label>:107                                     ; preds = %104, %65
  switch i8 %monst, label %115 [
    i8 115, label %108
    i8 104, label %108
  ]

; <label>:108                                     ; preds = %107, %107
  %109 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %110 = tail call i32 @wmove(%struct._win_st* %109, i32 16, i32 32) #8
  %111 = icmp eq i32 %110, -1
  br i1 %111, label %123, label %112

; <label>:112                                     ; preds = %108
  %113 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %114 = tail call i32 @waddch(%struct._win_st* %113, i32 32) #8
  br label %123

; <label>:115                                     ; preds = %107
  %116 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %117 = tail call i32 @wmove(%struct._win_st* %116, i32 16, i32 33) #8
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %123, label %119

; <label>:119                                     ; preds = %115
  %120 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %121 = tail call i8* @vowelstr(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %122 = tail call i32 @waddnstr(%struct._win_st* %120, i8* %121, i32 -1) #8
  br label %123

; <label>:123                                     ; preds = %119, %115, %112, %108
  %124 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %125 = tail call i64 @strlen(i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0)) #8
  %126 = trunc i64 %125 to i32
  %127 = add nsw i32 %126, 1
  %128 = sdiv i32 %127, 2
  %129 = sub nsw i32 28, %128
  %130 = tail call i32 @wmove(%struct._win_st* %124, i32 14, i32 %129) #8
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %135, label %132

; <label>:132                                     ; preds = %123
  %133 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %134 = tail call i32 @waddnstr(%struct._win_st* %133, i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0), i32 -1) #8
  br label %135

; <label>:135                                     ; preds = %132, %123
  %136 = load i32* @purse, align 4, !tbaa !38
  %137 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %.pre.i, i8* getelementptr inbounds ([6 x i8]* @.str16838, i64 0, i64 0), i32 %136) #8
  %138 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %139 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %140 = trunc i64 %139 to i32
  %141 = add nsw i32 %140, 1
  %142 = sdiv i32 %141, 2
  %143 = sub nsw i32 28, %142
  %144 = tail call i32 @wmove(%struct._win_st* %138, i32 15, i32 %143) #8
  %145 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %146 = tail call i32 @waddnstr(%struct._win_st* %145, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 -1) #8
  %147 = getelementptr inbounds %struct.tm* %67, i64 0, i32 5
  %148 = load i32* %147, align 4, !tbaa !134
  %149 = add nsw i32 %148, 1900
  %150 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %.pre.i, i8* getelementptr inbounds ([4 x i8]* @.str17839, i64 0, i64 0), i32 %149) #8
  %151 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %152 = tail call i32 @wmove(%struct._win_st* %151, i32 18, i32 26) #8
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %157, label %154

; <label>:154                                     ; preds = %135
  %155 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %156 = tail call i32 @waddnstr(%struct._win_st* %155, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 -1) #8
  br label %157

; <label>:157                                     ; preds = %154, %135, %62
  %158 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %159 = load i32* @LINES, align 4, !tbaa !38
  %160 = add nsw i32 %159, -1
  %161 = tail call i32 @wmove(%struct._win_st* %158, i32 %160, i32 0) #8
  %162 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %163 = tail call i32 @wrefresh(%struct._win_st* %162) #8
  %164 = load i32* @purse, align 4, !tbaa !38
  %165 = load i8* @amulet, align 1, !tbaa !5, !range !7
  %166 = icmp ne i8 %165, 0
  %167 = select i1 %166, i32 3, i32 0
  tail call void @score(i32 %164, i32 %167, i8 signext %monst)
  %168 = tail call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str4829, i64 0, i64 0)) #8
  %169 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %170 = tail call i32 @fflush(%struct.__sFILE* %169) #8
  %171 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !1
  %172 = tail call i8* @fgets(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 10, %struct.__sFILE* %171) #8
  tail call void (i32, ...)* bitcast (void (i32)* @my_exit to void (i32, ...)*)(i32 0) #8
  ret void
}

declare %struct.tm* @localtime(i64*) #2

; Function Attrs: nounwind readonly ssp uwtable
define i32 @center(i8* nocapture readonly %str) #1 {
  %1 = tail call i64 @strlen(i8* %str) #8
  %2 = trunc i64 %1 to i32
  %3 = add nsw i32 %2, 1
  %4 = sdiv i32 %3, 2
  %5 = sub nsw i32 28, %4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define void @total_winner() #0 {
  %1 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %2 = tail call i32 @wclear(%struct._win_st* %1) #8
  %3 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %4 = getelementptr inbounds %struct._win_st* %3, i64 0, i32 7
  store i32 65536, i32* %4, align 4, !tbaa !45
  %5 = tail call i32 @waddnstr(%struct._win_st* %3, i8* getelementptr inbounds ([65 x i8]* @.str18840, i64 0, i64 0), i32 -1) #8
  %6 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %7 = tail call i32 @waddnstr(%struct._win_st* %6, i8* getelementptr inbounds ([65 x i8]* @.str19841, i64 0, i64 0), i32 -1) #8
  %8 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %9 = tail call i32 @waddnstr(%struct._win_st* %8, i8* getelementptr inbounds ([65 x i8]* @.str20842, i64 0, i64 0), i32 -1) #8
  %10 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %11 = tail call i32 @waddnstr(%struct._win_st* %10, i8* getelementptr inbounds ([65 x i8]* @.str21843, i64 0, i64 0), i32 -1) #8
  %12 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %13 = tail call i32 @waddnstr(%struct._win_st* %12, i8* getelementptr inbounds ([65 x i8]* @.str22844, i64 0, i64 0), i32 -1) #8
  %14 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %15 = tail call i32 @waddnstr(%struct._win_st* %14, i8* getelementptr inbounds ([65 x i8]* @.str23845, i64 0, i64 0), i32 -1) #8
  %16 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %17 = tail call i32 @waddnstr(%struct._win_st* %16, i8* getelementptr inbounds ([65 x i8]* @.str24846, i64 0, i64 0), i32 -1) #8
  %18 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %19 = tail call i32 @waddnstr(%struct._win_st* %18, i8* getelementptr inbounds ([65 x i8]* @.str25847, i64 0, i64 0), i32 -1) #8
  %20 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %21 = tail call i32 @waddnstr(%struct._win_st* %20, i8* getelementptr inbounds ([65 x i8]* @.str18840, i64 0, i64 0), i32 -1) #8
  %22 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %23 = tail call i32 @waddnstr(%struct._win_st* %22, i8* getelementptr inbounds ([65 x i8]* @.str26848, i64 0, i64 0), i32 -1) #8
  %24 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %25 = getelementptr inbounds %struct._win_st* %24, i64 0, i32 7
  store i32 0, i32* %25, align 4, !tbaa !45
  %26 = tail call i32 @waddnstr(%struct._win_st* %24, i8* getelementptr inbounds ([64 x i8]* @.str27849, i64 0, i64 0), i32 -1) #8
  %27 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %28 = tail call i32 @waddnstr(%struct._win_st* %27, i8* getelementptr inbounds ([69 x i8]* @.str28850, i64 0, i64 0), i32 -1) #8
  %29 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %30 = tail call i32 @waddnstr(%struct._win_st* %29, i8* getelementptr inbounds ([57 x i8]* @.str29851, i64 0, i64 0), i32 -1) #8
  %31 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %32 = load i32* @LINES, align 4, !tbaa !38
  %33 = add nsw i32 %32, -1
  %34 = tail call i32 @wmove(%struct._win_st* %31, i32 %33, i32 0) #8
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %39, label %36

; <label>:36                                      ; preds = %0
  %37 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %38 = tail call i32 @waddnstr(%struct._win_st* %37, i8* getelementptr inbounds ([28 x i8]* @.str30852, i64 0, i64 0), i32 -1) #8
  br label %39

; <label>:39                                      ; preds = %36, %0
  %40 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %41 = tail call i32 @wrefresh(%struct._win_st* %40) #8
  tail call void @wait_for(i32 32) #8
  %42 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %43 = tail call i32 @wclear(%struct._win_st* %42) #8
  %44 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %45 = tail call i32 @wmove(%struct._win_st* %44, i32 0, i32 0) #8
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %50, label %47

; <label>:47                                      ; preds = %39
  %48 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %49 = tail call i32 @waddnstr(%struct._win_st* %48, i8* getelementptr inbounds ([16 x i8]* @.str31853, i64 0, i64 0), i32 -1) #8
  br label %50

; <label>:50                                      ; preds = %47, %39
  %51 = load i32* @purse, align 4, !tbaa !38
  %obj.01 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8
  %52 = icmp eq %union.thing* %obj.01, null
  br i1 %52, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %183, %50
  %obj.03 = phi %union.thing* [ %obj.0, %183 ], [ %obj.01, %50 ]
  %worth.02 = phi i32 [ %.worth.6, %183 ], [ 0, %50 ]
  %53 = bitcast %union.thing* %obj.03 to %struct.anon.0*
  %54 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 2, i32 0
  %55 = load i32* %54, align 4, !tbaa !8
  switch i32 %55, label %183 [
    i32 58, label %56
    i32 41, label %61
    i32 93, label %84
    i32 63, label %104
    i32 33, label %121
    i32 61, label %138
    i32 47, label %162
    i32 44, label %182
  ]

; <label>:56                                      ; preds = %.lr.ph
  %57 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5
  %58 = bitcast [13 x i8]* %57 to i32*
  %59 = load i32* %58, align 4, !tbaa !78
  %60 = shl nsw i32 %59, 1
  br label %183

; <label>:61                                      ; preds = %.lr.ph
  %62 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 4
  %63 = bitcast i8* %62 to i32*
  %64 = load i32* %63, align 4, !tbaa !50
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %65, i32 2
  %67 = load i32* %66, align 4, !tbaa !82
  %68 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 8
  %69 = bitcast i8* %68 to i32*
  %70 = load i32* %69, align 4, !tbaa !68
  %71 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 12
  %72 = bitcast i8* %71 to i32*
  %73 = load i32* %72, align 4, !tbaa !69
  %74 = add nsw i32 %73, %70
  %75 = mul nsw i32 %74, 3
  %76 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5
  %77 = bitcast [13 x i8]* %76 to i32*
  %78 = load i32* %77, align 4, !tbaa !78
  %79 = add nsw i32 %75, %78
  %80 = mul nsw i32 %79, %67
  %81 = getelementptr inbounds %struct.anon.0* %53, i64 0, i32 14
  %82 = load i32* %81, align 4, !tbaa !12
  %83 = or i32 %82, 2
  store i32 %83, i32* %81, align 4, !tbaa !12
  br label %183

; <label>:84                                      ; preds = %.lr.ph
  %85 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 4
  %86 = bitcast i8* %85 to i32*
  %87 = load i32* %86, align 4, !tbaa !50
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 %88, i32 2
  %90 = load i32* %89, align 4, !tbaa !82
  %91 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 6
  %92 = load i32* %91, align 4, !tbaa !70
  %93 = sub nsw i32 9, %92
  %94 = mul nsw i32 %93, 100
  %95 = add nsw i32 %94, %90
  %96 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %88
  %97 = load i32* %96, align 4, !tbaa !38
  %98 = sub nsw i32 %97, %92
  %99 = mul nsw i32 %98, 10
  %100 = add nsw i32 %95, %99
  %101 = getelementptr inbounds %struct.anon.0* %53, i64 0, i32 14
  %102 = load i32* %101, align 4, !tbaa !12
  %103 = or i32 %102, 2
  store i32 %103, i32* %101, align 4, !tbaa !12
  br label %183

; <label>:104                                     ; preds = %.lr.ph
  %105 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 4
  %106 = bitcast i8* %105 to i32*
  %107 = load i32* %106, align 4, !tbaa !50
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %108, i32 2
  %110 = load i32* %109, align 4, !tbaa !82
  %111 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5
  %112 = bitcast [13 x i8]* %111 to i32*
  %113 = load i32* %112, align 4, !tbaa !78
  %114 = mul nsw i32 %113, %110
  %115 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %108, i32 4
  %116 = load i8* %115, align 8, !tbaa !102, !range !7
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %120

; <label>:118                                     ; preds = %104
  %119 = sdiv i32 %114, 2
  br label %120

; <label>:120                                     ; preds = %118, %104
  %worth.1 = phi i32 [ %114, %104 ], [ %119, %118 ]
  store i8 1, i8* %115, align 8, !tbaa !102
  br label %183

; <label>:121                                     ; preds = %.lr.ph
  %122 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 4
  %123 = bitcast i8* %122 to i32*
  %124 = load i32* %123, align 4, !tbaa !50
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %125, i32 2
  %127 = load i32* %126, align 4, !tbaa !82
  %128 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5
  %129 = bitcast [13 x i8]* %128 to i32*
  %130 = load i32* %129, align 4, !tbaa !78
  %131 = mul nsw i32 %130, %127
  %132 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %125, i32 4
  %133 = load i8* %132, align 8, !tbaa !102, !range !7
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %137

; <label>:135                                     ; preds = %121
  %136 = sdiv i32 %131, 2
  br label %137

; <label>:137                                     ; preds = %135, %121
  %worth.2 = phi i32 [ %131, %121 ], [ %136, %135 ]
  store i8 1, i8* %132, align 8, !tbaa !102
  br label %183

; <label>:138                                     ; preds = %.lr.ph
  %139 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 4
  %140 = bitcast i8* %139 to i32*
  %141 = load i32* %140, align 4, !tbaa !50
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %142, i32 2
  %144 = load i32* %143, align 4, !tbaa !82
  switch i32 %141, label %152 [
    i32 1, label %145
    i32 8, label %145
    i32 0, label %145
    i32 7, label %145
  ]

; <label>:145                                     ; preds = %138, %138, %138, %138
  %146 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 6
  %147 = load i32* %146, align 4, !tbaa !70
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %152

; <label>:149                                     ; preds = %145
  %150 = mul nsw i32 %147, 100
  %151 = add nsw i32 %150, %144
  br label %152

; <label>:152                                     ; preds = %149, %145, %138
  %worth.3 = phi i32 [ %151, %149 ], [ %144, %138 ], [ 10, %145 ]
  %153 = getelementptr inbounds %struct.anon.0* %53, i64 0, i32 14
  %154 = load i32* %153, align 4, !tbaa !12
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %159

; <label>:157                                     ; preds = %152
  %158 = sdiv i32 %worth.3, 2
  br label %159

; <label>:159                                     ; preds = %157, %152
  %worth.4 = phi i32 [ %worth.3, %152 ], [ %158, %157 ]
  %160 = or i32 %154, 2
  store i32 %160, i32* %153, align 4, !tbaa !12
  %161 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %142, i32 4
  store i8 1, i8* %161, align 8, !tbaa !102
  br label %183

; <label>:162                                     ; preds = %.lr.ph
  %163 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 5, i64 4
  %164 = bitcast i8* %163 to i32*
  %165 = load i32* %164, align 4, !tbaa !50
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %166, i32 2
  %168 = load i32* %167, align 4, !tbaa !82
  %169 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9, i32 6
  %170 = load i32* %169, align 4, !tbaa !70
  %171 = mul nsw i32 %170, 20
  %172 = add nsw i32 %171, %168
  %173 = getelementptr inbounds %struct.anon.0* %53, i64 0, i32 14
  %174 = load i32* %173, align 4, !tbaa !12
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %179

; <label>:177                                     ; preds = %162
  %178 = sdiv i32 %172, 2
  br label %179

; <label>:179                                     ; preds = %177, %162
  %worth.5 = phi i32 [ %172, %162 ], [ %178, %177 ]
  %180 = or i32 %174, 2
  store i32 %180, i32* %173, align 4, !tbaa !12
  %181 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %166, i32 4
  store i8 1, i8* %181, align 8, !tbaa !102
  br label %183

; <label>:182                                     ; preds = %.lr.ph
  br label %183

; <label>:183                                     ; preds = %182, %179, %159, %137, %120, %84, %61, %56, %.lr.ph
  %worth.6 = phi i32 [ %worth.02, %.lr.ph ], [ 1000, %182 ], [ %worth.5, %179 ], [ %worth.4, %159 ], [ %worth.2, %137 ], [ %worth.1, %120 ], [ %100, %84 ], [ %80, %61 ], [ %60, %56 ]
  %184 = icmp slt i32 %worth.6, 0
  %.worth.6 = select i1 %184, i32 0, i32 %worth.6
  %185 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 9
  %186 = bitcast %struct.stats* %185 to i8*
  %187 = load i8* %186, align 1, !tbaa !13
  %188 = sext i8 %187 to i32
  %189 = tail call i8* @inv_name(%union.thing* %obj.03, i1 zeroext false) #8
  %190 = tail call i32 (i8*, ...)* @printw(i8* getelementptr inbounds ([13 x i8]* @.str32854, i64 0, i64 0), i32 %188, i32 %.worth.6, i8* %189) #8
  %191 = load i32* @purse, align 4, !tbaa !38
  %192 = add nsw i32 %191, %.worth.6
  store i32 %192, i32* @purse, align 4, !tbaa !38
  %193 = getelementptr inbounds %union.thing* %obj.03, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %193, align 8
  %194 = icmp eq %union.thing* %obj.0, null
  br i1 %194, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %183, %50
  %195 = tail call i32 (i8*, ...)* @printw(i8* getelementptr inbounds ([30 x i8]* @.str33855, i64 0, i64 0), i32 %51) #8
  %196 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %197 = tail call i32 @wrefresh(%struct._win_st* %196) #8
  %198 = load i32* @purse, align 4, !tbaa !38
  tail call void @score(i32 %198, i32 2, i8 signext 32)
  tail call void (i32, ...)* bitcast (void (i32)* @my_exit to void (i32, ...)*)(i32 0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @death_monst() #0 {
  %1 = tail call i32 @rnd(i32 32) #8
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [32 x i8]* @death_monst.poss, i64 0, i64 %2
  %4 = load i8* %3, align 1, !tbaa !28
  ret i8 %4
}

; Function Attrs: nounwind ssp uwtable
define void @do_rooms() #0 {
  %mp = alloca %struct.coord, align 4
  br i1 true, label %.lr.ph10, label %._crit_edge

.lr.ph10:                                         ; preds = %.lr.ph10, %0
  %rp.09 = phi %struct.room* [ %4, %.lr.ph10 ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %0 ]
  %1 = getelementptr inbounds %struct.room* %rp.09, i64 0, i32 3
  store i32 0, i32* %1, align 4, !tbaa !25
  %2 = getelementptr inbounds %struct.room* %rp.09, i64 0, i32 5
  store i32 0, i32* %2, align 4, !tbaa !35
  %3 = getelementptr inbounds %struct.room* %rp.09, i64 0, i32 4
  store i16 0, i16* %3, align 2, !tbaa !39
  %4 = getelementptr inbounds %struct.room* %rp.09, i64 1
  %5 = icmp ult %struct.room* %4, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 1, i64 0)
  br i1 %5, label %.lr.ph10, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph10, %0
  %6 = call i32 @rnd(i32 4) #8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %.lr.ph, label %.preheader3

.lr.ph:                                           ; preds = %.lr.ph, %._crit_edge
  %i.08 = phi i32 [ %13, %.lr.ph ], [ 0, %._crit_edge ]
  %8 = call i32 (...)* bitcast (i32 ()* @rnd_room to i32 (...)*)() #8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %9, i32 4
  %11 = load i16* %10, align 4, !tbaa !39
  %12 = or i16 %11, 2
  store i16 %12, i16* %10, align 4, !tbaa !39
  %13 = add nsw i32 %i.08, 1
  %exitcond11 = icmp eq i32 %13, %6
  br i1 %exitcond11, label %.preheader3, label %.lr.ph

.preheader3:                                      ; preds = %.loopexit, %.lr.ph, %._crit_edge
  %i.17 = phi i32 [ %130, %.loopexit ], [ 0, %.lr.ph ], [ 0, %._crit_edge ]
  %rp.14 = phi %struct.room* [ %129, %.loopexit ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %.lr.ph ], [ getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0), %._crit_edge ]
  %14 = srem i32 %i.17, 3
  %15 = mul nsw i32 %14, 26
  %16 = or i32 %15, 1
  store i32 %16, i32* @do_rooms.top.0, align 4, !tbaa !21
  %17 = sdiv i32 %i.17, 3
  %18 = shl nsw i32 %17, 3
  store i32 %18, i32* @do_rooms.top.1, align 4, !tbaa !20
  %19 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 4
  %20 = load i16* %19, align 2, !tbaa !39
  %21 = and i16 %20, 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %37, label %.preheader

.preheader:                                       ; preds = %.preheader3
  %23 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 1, i32 1
  br label %27

; <label>:27                                      ; preds = %._crit_edge12, %.preheader
  %28 = phi i32 [ %.pre, %._crit_edge12 ], [ %16, %.preheader ]
  %29 = call i32 @rnd(i32 24) #8
  %30 = add i32 %28, 1
  %31 = add i32 %30, %29
  store i32 %31, i32* %23, align 4, !tbaa !29
  %32 = load i32* @do_rooms.top.1, align 4, !tbaa !20
  %33 = call i32 @rnd(i32 6) #8
  %34 = add i32 %32, 1
  %35 = add i32 %34, %33
  store i32 %35, i32* %24, align 4, !tbaa !31
  store i32 -80, i32* %25, align 4, !tbaa !30
  store i32 -24, i32* %26, align 4, !tbaa !32
  %.off = add i32 %32, %33
  %36 = icmp ugt i32 %.off, 21
  br i1 %36, label %._crit_edge12, label %.loopexit

._crit_edge12:                                    ; preds = %27
  %.pre = load i32* @do_rooms.top.0, align 4, !tbaa !21
  br label %27

; <label>:37                                      ; preds = %.preheader3
  %38 = call i32 @rnd(i32 10) #8
  %39 = load i32* @level, align 4, !tbaa !38
  %40 = add nsw i32 %39, -1
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %42, label %48

; <label>:42                                      ; preds = %37
  %43 = load i16* %19, align 2, !tbaa !39
  %44 = or i16 %43, 1
  store i16 %44, i16* %19, align 2, !tbaa !39
  %45 = call i32 @rnd(i32 15) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

; <label>:47                                      ; preds = %42
  store i16 4, i16* %19, align 2, !tbaa !39
  br label %48

; <label>:48                                      ; preds = %47, %42, %37
  %49 = load i16* %19, align 2, !tbaa !39
  %50 = and i16 %49, 4
  %51 = icmp eq i16 %50, 0
  %52 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 1, i32 0
  br i1 %51, label %.preheader1, label %56

.preheader1:                                      ; preds = %48
  %53 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 1, i32 1
  %54 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 0, i32 1
  br label %65

; <label>:56                                      ; preds = %48
  store i32 25, i32* %52, align 4, !tbaa !30
  %57 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 1, i32 1
  store i32 7, i32* %57, align 4, !tbaa !32
  %58 = load i32* @do_rooms.top.0, align 4, !tbaa !21
  %59 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 0, i32 0
  %60 = icmp eq i32 %58, 1
  %. = select i1 %60, i32 0, i32 %58
  store i32 %., i32* %59, align 4, !tbaa !29
  %61 = load i32* @do_rooms.top.1, align 4, !tbaa !20
  %62 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 0, i32 1
  store i32 %61, i32* %62, align 4, !tbaa !31
  %63 = icmp eq i32 %61, 0
  br i1 %63, label %64, label %.loopexit2

; <label>:64                                      ; preds = %56
  store i32 1, i32* %62, align 4, !tbaa !31
  store i32 6, i32* %57, align 4, !tbaa !32
  br label %.loopexit2

; <label>:65                                      ; preds = %65, %.preheader1
  %66 = call i32 @rnd(i32 22) #8
  %67 = add nsw i32 %66, 4
  store i32 %67, i32* %52, align 4, !tbaa !30
  %68 = call i32 @rnd(i32 4) #8
  %69 = add nsw i32 %68, 4
  store i32 %69, i32* %53, align 4, !tbaa !32
  %70 = load i32* @do_rooms.top.0, align 4, !tbaa !21
  %71 = load i32* %52, align 4, !tbaa !30
  %72 = sub nsw i32 26, %71
  %73 = call i32 @rnd(i32 %72) #8
  %74 = add nsw i32 %73, %70
  store i32 %74, i32* %54, align 4, !tbaa !29
  %75 = load i32* @do_rooms.top.1, align 4, !tbaa !20
  %76 = load i32* %53, align 4, !tbaa !32
  %77 = sub nsw i32 8, %76
  %78 = call i32 @rnd(i32 %77) #8
  %79 = add nsw i32 %78, %75
  store i32 %79, i32* %55, align 4, !tbaa !31
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %65, label %.loopexit2

.loopexit2:                                       ; preds = %65, %64, %56
  call void @draw_room(%struct.room* %rp.14)
  %81 = call i32 @rnd(i32 2) #8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %118

; <label>:83                                      ; preds = %.loopexit2
  %84 = load i8* @amulet, align 1, !tbaa !5, !range !7
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %90, label %86

; <label>:86                                      ; preds = %83
  %87 = load i32* @level, align 4, !tbaa !38
  %88 = load i32* @max_level, align 4, !tbaa !38
  %89 = icmp slt i32 %87, %88
  br i1 %89, label %118, label %90

; <label>:90                                      ; preds = %86, %83
  %91 = call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %92 = load i32* @level, align 4, !tbaa !38
  %93 = mul nsw i32 %92, 10
  %94 = add nsw i32 %93, 50
  %95 = call i32 @rnd(i32 %94) #8
  %96 = add nsw i32 %95, 2
  %97 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 3
  store i32 %96, i32* %97, align 4, !tbaa !25
  %98 = bitcast %union.thing* %91 to %struct.anon.0*
  %99 = getelementptr inbounds %union.thing* %91, i64 0, i32 0, i32 9, i32 6
  store i32 %96, i32* %99, align 4, !tbaa !70
  %100 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 2
  %101 = call zeroext i1 @find_floor(%struct.room* %rp.14, %struct.coord* %100, i32 0, i1 zeroext false)
  %102 = getelementptr inbounds %union.thing* %91, i64 0, i32 0, i32 2, i32 1
  %103 = bitcast %struct.coord* %100 to i64*
  %104 = bitcast i32* %102 to i64*
  %105 = load i64* %103, align 4
  store i64 %105, i64* %104, align 4
  %106 = getelementptr inbounds %struct.coord* %100, i64 0, i32 0
  %107 = load i32* %106, align 4, !tbaa !136
  %108 = shl i32 %107, 5
  %109 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 2, i32 1
  %110 = load i32* %109, align 4, !tbaa !137
  %111 = add nsw i32 %108, %110
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %112, i32 0
  store i8 42, i8* %113, align 8, !tbaa !33
  %114 = getelementptr inbounds %struct.anon.0* %98, i64 0, i32 14
  store i32 8, i32* %114, align 4, !tbaa !12
  %115 = getelementptr inbounds %union.thing* %91, i64 0, i32 0, i32 10
  %116 = bitcast %struct.room** %115 to i32*
  store i32 1, i32* %116, align 4, !tbaa !116
  %117 = getelementptr inbounds %union.thing* %91, i64 0, i32 0, i32 2, i32 0
  store i32 42, i32* %117, align 4, !tbaa !8
  call void @_attach(%union.thing** @lvl_obj, %union.thing* %91) #8
  br label %118

; <label>:118                                     ; preds = %90, %86, %.loopexit2
  %119 = call i32 @rnd(i32 100) #8
  %120 = getelementptr inbounds %struct.room* %rp.14, i64 0, i32 3
  %121 = load i32* %120, align 4, !tbaa !25
  %122 = icmp sgt i32 %121, 0
  %123 = select i1 %122, i32 80, i32 25
  %124 = icmp slt i32 %119, %123
  br i1 %124, label %125, label %.loopexit

; <label>:125                                     ; preds = %118
  %126 = call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %127 = call zeroext i1 @find_floor(%struct.room* %rp.14, %struct.coord* %mp, i32 0, i1 zeroext true)
  %128 = call signext i8 @randmonster(i1 zeroext false) #8
  call void @new_monster(%union.thing* %126, i8 signext %128, %struct.coord* %mp) #8
  call void @give_pack(%union.thing* %126) #8
  br label %.loopexit

.loopexit:                                        ; preds = %125, %118, %27
  %129 = getelementptr inbounds %struct.room* %rp.14, i64 1
  %130 = add nsw i32 %i.17, 1
  %exitcond = icmp eq i32 %130, 9
  br i1 %exitcond, label %131, label %.preheader3

; <label>:131                                     ; preds = %.loopexit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @draw_room(%struct.room* nocapture readonly %rp) #0 {
  %1 = getelementptr inbounds %struct.room* %rp, i64 0, i32 4
  %2 = load i16* %1, align 2, !tbaa !39
  %3 = and i16 %2, 4
  %4 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %0
  tail call void @do_maze(%struct.room* %rp)
  br label %.loopexit14

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !31
  %10 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 1
  %11 = load i32* %10, align 4, !tbaa !32
  %12 = add i32 %9, -1
  %13 = add i32 %12, %11
  %14 = icmp slt i32 %9, %13
  br i1 %14, label %.lr.ph.i, label %vert.exit.thread

vert.exit.thread:                                 ; preds = %6
  %15 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 0
  br label %vert.exit.vert.exit11_crit_edge

.lr.ph.i:                                         ; preds = %6
  %16 = load i32* %7, align 4, !tbaa !29
  %17 = shl i32 %16, 5
  %18 = sext i32 %9 to i64
  %19 = sext i32 %17 to i64
  br label %20

; <label>:20                                      ; preds = %20, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %18, %.lr.ph.i ], [ %indvars.iv.next.i, %20 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %21 = add nsw i64 %indvars.iv.next.i, %19
  %22 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %21, i32 0
  store i8 124, i8* %22, align 8, !tbaa !33
  %23 = trunc i64 %indvars.iv.next.i to i32
  %24 = icmp slt i32 %23, %13
  br i1 %24, label %20, label %vert.exit

vert.exit:                                        ; preds = %20
  %25 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 0
  br i1 %14, label %.lr.ph.i8, label %vert.exit.vert.exit11_crit_edge

vert.exit.vert.exit11_crit_edge:                  ; preds = %vert.exit, %vert.exit.thread
  %26 = phi i32* [ %15, %vert.exit.thread ], [ %25, %vert.exit ]
  %.pre = load i32* %7, align 4, !tbaa !29
  br label %vert.exit11

.lr.ph.i8:                                        ; preds = %vert.exit
  %27 = load i32* %25, align 4, !tbaa !30
  %28 = load i32* %7, align 4, !tbaa !29
  %29 = add nsw i32 %28, %27
  %30 = shl i32 %29, 5
  %31 = add i32 %30, -32
  %32 = sext i32 %9 to i64
  %33 = sext i32 %31 to i64
  br label %34

; <label>:34                                      ; preds = %34, %.lr.ph.i8
  %indvars.iv.i9 = phi i64 [ %32, %.lr.ph.i8 ], [ %indvars.iv.next.i10, %34 ]
  %indvars.iv.next.i10 = add nsw i64 %indvars.iv.i9, 1
  %35 = add nsw i64 %indvars.iv.next.i10, %33
  %36 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %35, i32 0
  store i8 124, i8* %36, align 8, !tbaa !33
  %37 = trunc i64 %indvars.iv.next.i10 to i32
  %38 = icmp slt i32 %37, %13
  br i1 %38, label %34, label %vert.exit11

vert.exit11:                                      ; preds = %34, %vert.exit.vert.exit11_crit_edge
  %39 = phi i32* [ %26, %vert.exit.vert.exit11_crit_edge ], [ %25, %34 ]
  %40 = phi i32 [ %.pre, %vert.exit.vert.exit11_crit_edge ], [ %28, %34 ]
  %41 = load i32* %39, align 4, !tbaa !30
  %42 = add i32 %40, -1
  %43 = add i32 %42, %41
  %44 = icmp sgt i32 %40, %43
  br i1 %44, label %horiz.exit, label %.lr.ph.i4

.lr.ph.i4:                                        ; preds = %vert.exit11
  %45 = sext i32 %40 to i64
  br label %46

; <label>:46                                      ; preds = %46, %.lr.ph.i4
  %indvars.iv.i5 = phi i64 [ %indvars.iv.next.i6, %46 ], [ %45, %.lr.ph.i4 ]
  %47 = trunc i64 %indvars.iv.i5 to i32
  %48 = shl i32 %47, 5
  %49 = add nsw i32 %48, %9
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %50, i32 0
  store i8 45, i8* %51, align 8, !tbaa !33
  %indvars.iv.next.i6 = add nsw i64 %indvars.iv.i5, 1
  %52 = icmp slt i32 %47, %43
  br i1 %52, label %46, label %horiz.exit7

horiz.exit7:                                      ; preds = %46
  br i1 %44, label %horiz.exit, label %.lr.ph.i1

.lr.ph.i1:                                        ; preds = %horiz.exit7
  %53 = sext i32 %40 to i64
  br label %54

; <label>:54                                      ; preds = %54, %.lr.ph.i1
  %indvars.iv.i2 = phi i64 [ %indvars.iv.next.i3, %54 ], [ %53, %.lr.ph.i1 ]
  %55 = trunc i64 %indvars.iv.i2 to i32
  %56 = shl i32 %55, 5
  %57 = add i32 %13, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %58, i32 0
  store i8 45, i8* %59, align 8, !tbaa !33
  %indvars.iv.next.i3 = add nsw i64 %indvars.iv.i2, 1
  %60 = icmp slt i32 %55, %43
  br i1 %60, label %54, label %horiz.exit

horiz.exit:                                       ; preds = %54, %horiz.exit7, %vert.exit11
  %y.015 = add nsw i32 %9, 1
  %61 = icmp slt i32 %y.015, %13
  br i1 %61, label %.lr.ph17, label %.loopexit14

.lr.ph17:                                         ; preds = %horiz.exit
  %x.012 = add i32 %40, 1
  %62 = icmp slt i32 %x.012, %43
  %63 = sext i32 %x.012 to i64
  br label %65

.loopexit:                                        ; preds = %.lr.ph, %65
  %y.0 = add nsw i32 %y.016, 1
  %64 = icmp slt i32 %y.0, %13
  br i1 %64, label %65, label %.loopexit14

; <label>:65                                      ; preds = %.loopexit, %.lr.ph17
  %y.016 = phi i32 [ %y.015, %.lr.ph17 ], [ %y.0, %.loopexit ]
  br i1 %62, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.lr.ph, %65
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ %63, %65 ]
  %x.013 = phi i32 [ %x.0, %.lr.ph ], [ %x.012, %65 ]
  %66 = trunc i64 %indvars.iv to i32
  %67 = shl i32 %66, 5
  %68 = add nsw i32 %67, %y.016
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %69, i32 0
  store i8 46, i8* %70, align 8, !tbaa !33
  %x.0 = add nsw i32 %x.013, 1
  %71 = icmp slt i32 %x.0, %43
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %71, label %.lr.ph, label %.loopexit

.loopexit14:                                      ; preds = %.loopexit, %horiz.exit, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @find_floor(%struct.room* readonly %rp, %struct.coord* nocapture %cp, i32 %limit, i1 zeroext %monst) #0 {
  %1 = icmp eq %struct.room* %rp, null
  br i1 %1, label %.preheader, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.room* %rp, i64 0, i32 4
  %4 = load i16* %3, align 2, !tbaa !39
  %5 = and i16 %4, 4
  %6 = icmp ne i16 %5, 0
  %7 = select i1 %6, i8 35, i8 46
  br label %.preheader

.preheader:                                       ; preds = %2, %0
  %.01.ph = phi %struct.room* [ null, %0 ], [ %rp, %2 ]
  %compchar.1.ph = phi i8 [ 0, %0 ], [ %7, %2 ]
  %8 = icmp eq i32 %limit, 0
  %9 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %10 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  br label %.backedge

.backedge:                                        ; preds = %56, %50, %46, %.preheader
  %.01 = phi %struct.room* [ %.01.ph, %.preheader ], [ %.1, %56 ], [ %.1, %46 ], [ %.1, %50 ]
  %cnt.0 = phi i32 [ %limit, %.preheader ], [ %cnt.1, %56 ], [ %cnt.1, %46 ], [ %cnt.1, %50 ]
  %compchar.1 = phi i8 [ %compchar.1.ph, %.preheader ], [ %compchar.2, %56 ], [ %compchar.2, %46 ], [ %compchar.2, %50 ]
  br i1 %8, label %14, label %11

; <label>:11                                      ; preds = %.backedge
  %12 = add nsw i32 %cnt.0, -1
  %13 = icmp eq i32 %cnt.0, 0
  br i1 %13, label %60, label %14

; <label>:14                                      ; preds = %11, %.backedge
  %cnt.1 = phi i32 [ %12, %11 ], [ %cnt.0, %.backedge ]
  br i1 %1, label %15, label %24

; <label>:15                                      ; preds = %14
  %16 = tail call i32 (...)* bitcast (i32 ()* @rnd_room to i32 (...)*)() #8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %17
  %19 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %17, i32 4
  %20 = load i16* %19, align 4, !tbaa !39
  %21 = and i16 %20, 4
  %22 = icmp ne i16 %21, 0
  %23 = select i1 %22, i8 35, i8 46
  br label %24

; <label>:24                                      ; preds = %15, %14
  %.1 = phi %struct.room* [ %18, %15 ], [ %.01, %14 ]
  %compchar.2 = phi i8 [ %23, %15 ], [ %compchar.1, %14 ]
  %25 = getelementptr inbounds %struct.room* %.1, i64 0, i32 0, i32 0
  %26 = load i32* %25, align 4, !tbaa !29
  %27 = getelementptr inbounds %struct.room* %.1, i64 0, i32 1, i32 0
  %28 = load i32* %27, align 4, !tbaa !30
  %29 = add nsw i32 %28, -2
  %30 = tail call i32 @rnd(i32 %29) #8
  %31 = add i32 %26, 1
  %32 = add i32 %31, %30
  store i32 %32, i32* %9, align 4, !tbaa !21
  %33 = getelementptr inbounds %struct.room* %.1, i64 0, i32 0, i32 1
  %34 = load i32* %33, align 4, !tbaa !31
  %35 = getelementptr inbounds %struct.room* %.1, i64 0, i32 1, i32 1
  %36 = load i32* %35, align 4, !tbaa !32
  %37 = add nsw i32 %36, -2
  %38 = tail call i32 @rnd(i32 %37) #8
  %39 = add i32 %34, 1
  %40 = add i32 %39, %38
  store i32 %40, i32* %10, align 4, !tbaa !20
  %41 = load i32* %9, align 4, !tbaa !21
  %42 = shl i32 %41, 5
  %43 = add nsw i32 %42, %40
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %44
  br i1 %monst, label %46, label %56

; <label>:46                                      ; preds = %24
  %47 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %44, i32 2
  %48 = load %union.thing** %47, align 8, !tbaa !43
  %49 = icmp eq %union.thing* %48, null
  br i1 %49, label %50, label %.backedge

; <label>:50                                      ; preds = %46
  %51 = getelementptr inbounds %struct.PLACE* %45, i64 0, i32 0
  %52 = load i8* %51, align 8, !tbaa !33
  %53 = sext i8 %52 to i32
  %54 = tail call i32 @step_ok(i32 %53) #8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %.backedge, label %60

; <label>:56                                      ; preds = %24
  %57 = getelementptr inbounds %struct.PLACE* %45, i64 0, i32 0
  %58 = load i8* %57, align 8, !tbaa !33
  %59 = icmp eq i8 %58, %compchar.2
  br i1 %59, label %60, label %.backedge

; <label>:60                                      ; preds = %56, %50, %11
  %.0 = phi i1 [ false, %11 ], [ true, %50 ], [ true, %56 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @do_maze(%struct.room* nocapture readonly %rp) #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %sp.01 = phi %struct.spot* [ getelementptr inbounds ([9 x [27 x %struct.spot]]* @maze, i64 0, i64 0, i64 0), %0 ], [ %4, %1 ]
  %2 = getelementptr inbounds %struct.spot* %sp.01, i64 0, i32 2
  store i32 0, i32* %2, align 4, !tbaa !138
  %3 = getelementptr inbounds %struct.spot* %sp.01, i64 0, i32 0
  store i32 0, i32* %3, align 4, !tbaa !140
  %4 = getelementptr inbounds %struct.spot* %sp.01, i64 1
  %5 = icmp ugt %struct.spot* %4, getelementptr inbounds ([9 x [27 x %struct.spot]]* @maze, i64 0, i64 8, i64 26)
  br i1 %5, label %6, label %1

; <label>:6                                       ; preds = %1
  %7 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 1
  %8 = load i32* %7, align 4, !tbaa !32
  store i32 %8, i32* @Maxy, align 4, !tbaa !38
  %9 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 0
  %10 = load i32* %9, align 4, !tbaa !30
  store i32 %10, i32* @Maxx, align 4, !tbaa !38
  %11 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 1
  %12 = load i32* %11, align 4, !tbaa !31
  store i32 %12, i32* @Starty, align 4, !tbaa !38
  %13 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 0
  %14 = load i32* %13, align 4, !tbaa !29
  store i32 %14, i32* @Startx, align 4, !tbaa !38
  %15 = load i32* %7, align 4, !tbaa !32
  %16 = tail call i32 @rnd(i32 %15) #8
  %17 = sdiv i32 %16, 2
  %18 = shl nsw i32 %17, 1
  %19 = load i32* %9, align 4, !tbaa !30
  %20 = tail call i32 @rnd(i32 %19) #8
  %21 = sdiv i32 %20, 2
  %22 = shl nsw i32 %21, 1
  %23 = load i32* @Starty, align 4, !tbaa !38
  %24 = add nsw i32 %23, %18
  store i32 %24, i32* getelementptr inbounds (%struct.coord* @do_maze.pos, i64 0, i32 1), align 4, !tbaa !20
  %25 = load i32* @Startx, align 4, !tbaa !38
  %26 = add nsw i32 %25, %22
  store i32 %26, i32* getelementptr inbounds (%struct.coord* @do_maze.pos, i64 0, i32 0), align 4, !tbaa !21
  tail call void @putpass(%struct.coord* @do_maze.pos) #8
  tail call void @dig(i32 %18, i32 %22)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @vert(%struct.room* nocapture readonly %rp, i32 %startx) #0 {
  %1 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !31
  %3 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 1
  %4 = load i32* %3, align 4, !tbaa !32
  %5 = add i32 %4, -1
  %6 = add i32 %5, %2
  %7 = icmp slt i32 %2, %6
  br i1 %7, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0
  %8 = shl i32 %startx, 5
  %9 = sext i32 %2 to i64
  %10 = sext i32 %8 to i64
  br label %11

; <label>:11                                      ; preds = %11, %.lr.ph
  %indvars.iv = phi i64 [ %9, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %12 = add nsw i64 %indvars.iv.next, %10
  %13 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %12, i32 0
  store i8 124, i8* %13, align 8, !tbaa !33
  %14 = trunc i64 %indvars.iv.next to i32
  %15 = icmp slt i32 %14, %6
  br i1 %15, label %11, label %._crit_edge

._crit_edge:                                      ; preds = %11, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @horiz(%struct.room* nocapture readonly %rp, i32 %starty) #0 {
  %1 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !29
  %3 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 0
  %4 = load i32* %3, align 4, !tbaa !30
  %5 = add i32 %2, -1
  %6 = add i32 %5, %4
  %7 = icmp sgt i32 %2, %6
  br i1 %7, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %8 = sext i32 %2 to i64
  br label %9

; <label>:9                                       ; preds = %9, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %9 ], [ %8, %.lr.ph ]
  %10 = trunc i64 %indvars.iv to i32
  %11 = shl i32 %10, 5
  %12 = add nsw i32 %11, %starty
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %13, i32 0
  store i8 45, i8* %14, align 8, !tbaa !33
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %15 = icmp slt i32 %10, %6
  br i1 %15, label %9, label %._crit_edge

._crit_edge:                                      ; preds = %9, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @dig(i32 %y, i32 %x) #0 {
  %1 = sext i32 %x to i64
  %2 = sext i32 %y to i64
  %3 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 1, i64 0
  %4 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 0
  %5 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 1, i64 0, i32 1
  br label %.outer

.outer:                                           ; preds = %35, %0
  %cnt.0.ph = phi i32 [ %cnt.1, %35 ], [ 0, %0 ]
  %cp.0.ph = phi %struct.coord* [ %36, %35 ], [ getelementptr inbounds ([4 x %struct.coord]* @dig.del, i64 0, i64 0), %0 ]
  %nexty.1.ph = phi i32 [ %nexty.2, %35 ], [ 0, %0 ]
  %nextx.1.ph = phi i32 [ %nextx.2, %35 ], [ 0, %0 ]
  %6 = icmp ugt %struct.coord* %cp.0.ph, getelementptr inbounds ([4 x %struct.coord]* @dig.del, i64 0, i64 3)
  br i1 %6, label %37, label %._crit_edge

._crit_edge:                                      ; preds = %101, %.outer
  %cp.0.lcssa = phi %struct.coord* [ %cp.0.ph, %.outer ], [ getelementptr inbounds ([4 x %struct.coord]* @dig.del, i64 0, i64 0), %101 ]
  %cnt.0.lcssa = phi i32 [ %cnt.0.ph, %.outer ], [ 0, %101 ]
  %7 = getelementptr inbounds %struct.coord* %cp.0.lcssa, i64 0, i32 1
  %8 = load i32* %7, align 4, !tbaa !20
  %9 = add nsw i32 %8, %y
  %10 = getelementptr inbounds %struct.coord* %cp.0.lcssa, i64 0, i32 0
  %11 = load i32* %10, align 4, !tbaa !21
  %12 = add nsw i32 %11, %x
  %13 = icmp slt i32 %9, 0
  br i1 %13, label %35, label %14

; <label>:14                                      ; preds = %._crit_edge
  %15 = load i32* @Maxy, align 4, !tbaa !38
  %16 = icmp sgt i32 %9, %15
  %17 = icmp slt i32 %12, 0
  %or.cond = or i1 %16, %17
  %18 = load i32* @Maxx, align 4
  %19 = icmp sgt i32 %12, %18
  %or.cond3 = or i1 %or.cond, %19
  br i1 %or.cond3, label %35, label %20

; <label>:20                                      ; preds = %14
  %21 = load i32* @Startx, align 4, !tbaa !38
  %22 = add nsw i32 %21, %12
  %23 = shl i32 %22, 5
  %24 = load i32* @Starty, align 4, !tbaa !38
  %25 = add nsw i32 %24, %9
  %26 = add nsw i32 %25, %23
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %27, i32 1
  %29 = load i8* %28, align 1, !tbaa !36
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %35, label %31

; <label>:31                                      ; preds = %20
  %32 = add nsw i32 %cnt.0.lcssa, 1
  %33 = tail call i32 @rnd(i32 %32) #8
  %34 = icmp eq i32 %33, 0
  %.nexty.1 = select i1 %34, i32 %9, i32 %nexty.1.ph
  %.nextx.1 = select i1 %34, i32 %12, i32 %nextx.1.ph
  br label %35

; <label>:35                                      ; preds = %31, %20, %14, %._crit_edge
  %cnt.1 = phi i32 [ %cnt.0.lcssa, %._crit_edge ], [ %cnt.0.lcssa, %14 ], [ %cnt.0.lcssa, %20 ], [ %32, %31 ]
  %nexty.2 = phi i32 [ %nexty.1.ph, %._crit_edge ], [ %nexty.1.ph, %14 ], [ %nexty.1.ph, %20 ], [ %.nexty.1, %31 ]
  %nextx.2 = phi i32 [ %nextx.1.ph, %._crit_edge ], [ %nextx.1.ph, %14 ], [ %nextx.1.ph, %20 ], [ %.nextx.1, %31 ]
  %36 = getelementptr inbounds %struct.coord* %cp.0.lcssa, i64 1
  br label %.outer

; <label>:37                                      ; preds = %.outer
  %38 = sext i32 %nextx.1.ph to i64
  %39 = sext i32 %nexty.1.ph to i64
  %40 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %39, i64 %38, i32 1, i64 0
  %41 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %39, i64 %38, i32 0
  %42 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %39, i64 %38, i32 1, i64 0, i32 1
  %43 = icmp eq i32 %nexty.1.ph, %y
  %44 = sub nsw i32 %nextx.1.ph, %x
  %45 = icmp slt i32 %44, 0
  %46 = sub nsw i32 %nexty.1.ph, %y
  %47 = icmp slt i32 %46, 0
  %48 = icmp eq i32 %cnt.0.ph, 0
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %37
  ret void

; <label>:50                                      ; preds = %37
  %51 = load i32* %4, align 8, !tbaa !140
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %.lr.ph.i.preheader, label %._crit_edge.i

.lr.ph.i.preheader:                               ; preds = %50
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 1, i64 %53
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %62, %.lr.ph.i.preheader
  %55 = phi i32* [ %65, %62 ], [ %5, %.lr.ph.i.preheader ]
  %cp.03.i = phi %struct.coord* [ %63, %62 ], [ %3, %.lr.ph.i.preheader ]
  %56 = load i32* %55, align 4, !tbaa !20
  %57 = icmp eq i32 %56, %nexty.1.ph
  br i1 %57, label %58, label %62

; <label>:58                                      ; preds = %.lr.ph.i
  %59 = getelementptr inbounds %struct.coord* %cp.03.i, i64 0, i32 0
  %60 = load i32* %59, align 4, !tbaa !21
  %61 = icmp eq i32 %60, %nextx.1.ph
  br i1 %61, label %accnt_maze.exit, label %62

; <label>:62                                      ; preds = %58, %.lr.ph.i
  %63 = getelementptr inbounds %struct.coord* %cp.03.i, i64 1
  %64 = icmp ult %struct.coord* %63, %54
  %65 = getelementptr inbounds %struct.coord* %cp.03.i, i64 1, i32 1
  br i1 %64, label %.lr.ph.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %62, %50
  %.lcssa.i = phi i32* [ %5, %50 ], [ %65, %62 ]
  %cp.0.lcssa.i = phi %struct.coord* [ %3, %50 ], [ %63, %62 ]
  store i32 %nexty.1.ph, i32* %.lcssa.i, align 4, !tbaa !20
  %66 = getelementptr inbounds %struct.coord* %cp.0.lcssa.i, i64 0, i32 0
  store i32 %nextx.1.ph, i32* %66, align 4, !tbaa !21
  br label %accnt_maze.exit

accnt_maze.exit:                                  ; preds = %._crit_edge.i, %58
  %67 = load i32* %41, align 8, !tbaa !140
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %.lr.ph.i5.preheader, label %._crit_edge.i8

.lr.ph.i5.preheader:                              ; preds = %accnt_maze.exit
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %39, i64 %38, i32 1, i64 %69
  br label %.lr.ph.i5

.lr.ph.i5:                                        ; preds = %78, %.lr.ph.i5.preheader
  %71 = phi i32* [ %81, %78 ], [ %42, %.lr.ph.i5.preheader ]
  %cp.03.i4 = phi %struct.coord* [ %79, %78 ], [ %40, %.lr.ph.i5.preheader ]
  %72 = load i32* %71, align 4, !tbaa !20
  %73 = icmp eq i32 %72, %y
  br i1 %73, label %74, label %78

; <label>:74                                      ; preds = %.lr.ph.i5
  %75 = getelementptr inbounds %struct.coord* %cp.03.i4, i64 0, i32 0
  %76 = load i32* %75, align 4, !tbaa !21
  %77 = icmp eq i32 %76, %x
  br i1 %77, label %accnt_maze.exit9, label %78

; <label>:78                                      ; preds = %74, %.lr.ph.i5
  %79 = getelementptr inbounds %struct.coord* %cp.03.i4, i64 1
  %80 = icmp ult %struct.coord* %79, %70
  %81 = getelementptr inbounds %struct.coord* %cp.03.i4, i64 1, i32 1
  br i1 %80, label %.lr.ph.i5, label %._crit_edge.i8

._crit_edge.i8:                                   ; preds = %78, %accnt_maze.exit
  %.lcssa.i6 = phi i32* [ %42, %accnt_maze.exit ], [ %81, %78 ]
  %cp.0.lcssa.i7 = phi %struct.coord* [ %40, %accnt_maze.exit ], [ %79, %78 ]
  store i32 %y, i32* %.lcssa.i6, align 4, !tbaa !20
  %82 = getelementptr inbounds %struct.coord* %cp.0.lcssa.i7, i64 0, i32 0
  store i32 %x, i32* %82, align 4, !tbaa !21
  br label %accnt_maze.exit9

accnt_maze.exit9:                                 ; preds = %._crit_edge.i8, %74
  br i1 %43, label %83, label %92

; <label>:83                                      ; preds = %accnt_maze.exit9
  %84 = load i32* @Starty, align 4, !tbaa !38
  %85 = add nsw i32 %84, %y
  store i32 %85, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 1), align 4, !tbaa !20
  %86 = load i32* @Startx, align 4, !tbaa !38
  %87 = add nsw i32 %86, %nextx.1.ph
  br i1 %45, label %88, label %90

; <label>:88                                      ; preds = %83
  %89 = add nsw i32 %87, 1
  store i32 %89, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 0), align 4, !tbaa !21
  br label %101

; <label>:90                                      ; preds = %83
  %91 = add nsw i32 %87, -1
  store i32 %91, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 0), align 4, !tbaa !21
  br label %101

; <label>:92                                      ; preds = %accnt_maze.exit9
  %93 = load i32* @Startx, align 4, !tbaa !38
  %94 = add nsw i32 %93, %x
  store i32 %94, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 0), align 4, !tbaa !21
  %95 = load i32* @Starty, align 4, !tbaa !38
  %96 = add nsw i32 %95, %nexty.1.ph
  br i1 %47, label %97, label %99

; <label>:97                                      ; preds = %92
  %98 = add nsw i32 %96, 1
  store i32 %98, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 1), align 4, !tbaa !20
  br label %101

; <label>:99                                      ; preds = %92
  %100 = add nsw i32 %96, -1
  store i32 %100, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 1), align 4, !tbaa !20
  br label %101

; <label>:101                                     ; preds = %99, %97, %90, %88
  tail call void @putpass(%struct.coord* @dig.pos) #8
  %102 = load i32* @Starty, align 4, !tbaa !38
  %103 = add nsw i32 %102, %nexty.1.ph
  store i32 %103, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 1), align 4, !tbaa !20
  %104 = load i32* @Startx, align 4, !tbaa !38
  %105 = add nsw i32 %104, %nextx.1.ph
  store i32 %105, i32* getelementptr inbounds (%struct.coord* @dig.pos, i64 0, i32 0), align 4, !tbaa !21
  tail call void @putpass(%struct.coord* @dig.pos) #8
  tail call void @dig(i32 %nexty.1.ph, i32 %nextx.1.ph)
  br label %._crit_edge
}

; Function Attrs: nounwind ssp uwtable
define void @accnt_maze(i32 %y, i32 %x, i32 %ny, i32 %nx) #0 {
  %1 = sext i32 %x to i64
  %2 = sext i32 %y to i64
  %3 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 1, i64 0
  %4 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 0
  %5 = load i32* %4, align 8, !tbaa !140
  %6 = icmp sgt i32 %5, 0
  %7 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 1, i64 0, i32 1
  br i1 %6, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %15, %0
  %8 = phi i32* [ %20, %15 ], [ %7, %0 ]
  %cp.03 = phi %struct.coord* [ %16, %15 ], [ %3, %0 ]
  %9 = load i32* %8, align 4, !tbaa !20
  %10 = icmp eq i32 %9, %ny
  br i1 %10, label %11, label %15

; <label>:11                                      ; preds = %.lr.ph
  %12 = getelementptr inbounds %struct.coord* %cp.03, i64 0, i32 0
  %13 = load i32* %12, align 4, !tbaa !21
  %14 = icmp eq i32 %13, %nx
  br i1 %14, label %.loopexit, label %15

; <label>:15                                      ; preds = %11, %.lr.ph
  %16 = getelementptr inbounds %struct.coord* %cp.03, i64 1
  %17 = sext i32 %5 to i64
  %18 = getelementptr inbounds [9 x [27 x %struct.spot]]* @maze, i64 0, i64 %2, i64 %1, i32 1, i64 %17
  %19 = icmp ult %struct.coord* %16, %18
  %20 = getelementptr inbounds %struct.coord* %cp.03, i64 1, i32 1
  br i1 %19, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %15, %0
  %.lcssa = phi i32* [ %7, %0 ], [ %20, %15 ]
  %cp.0.lcssa = phi %struct.coord* [ %3, %0 ], [ %16, %15 ]
  store i32 %ny, i32* %.lcssa, align 4, !tbaa !20
  %21 = getelementptr inbounds %struct.coord* %cp.0.lcssa, i64 0, i32 0
  store i32 %nx, i32* %21, align 4, !tbaa !21
  br label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @rnd_pos(%struct.room* nocapture readonly %rp, %struct.coord* nocapture %cp) #0 {
  %1 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !29
  %3 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 0
  %4 = load i32* %3, align 4, !tbaa !30
  %5 = add nsw i32 %4, -2
  %6 = tail call i32 @rnd(i32 %5) #8
  %7 = add i32 %2, 1
  %8 = add i32 %7, %6
  %9 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  store i32 %8, i32* %9, align 4, !tbaa !21
  %10 = getelementptr inbounds %struct.room* %rp, i64 0, i32 0, i32 1
  %11 = load i32* %10, align 4, !tbaa !31
  %12 = getelementptr inbounds %struct.room* %rp, i64 0, i32 1, i32 1
  %13 = load i32* %12, align 4, !tbaa !32
  %14 = add nsw i32 %13, -2
  %15 = tail call i32 @rnd(i32 %14) #8
  %16 = add i32 %11, 1
  %17 = add i32 %16, %15
  %18 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  store i32 %17, i32* %18, align 4, !tbaa !20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @enter_room(%struct.coord* %cp) #0 {
  %1 = tail call %struct.room* @roomin(%struct.coord* %cp) #8
  store %struct.room* %1, %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  tail call void @door_open(%struct.room* %1) #8
  %2 = getelementptr inbounds %struct.room* %1, i64 0, i32 4
  %3 = load i16* %2, align 2, !tbaa !39
  %4 = and i16 %3, 1
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %.loopexit

; <label>:6                                       ; preds = %0
  %7 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %8 = and i16 %7, 4
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %.loopexit

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct.room* %1, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %struct.room* %1, i64 0, i32 1, i32 1
  %13 = load i32* %12, align 4, !tbaa !32
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %.lr.ph4, label %.loopexit

.lr.ph4:                                          ; preds = %10
  %15 = load i32* %11, align 4, !tbaa !31
  %16 = getelementptr inbounds %struct.room* %1, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.room* %1, i64 0, i32 1, i32 0
  br label %18

; <label>:18                                      ; preds = %._crit_edge, %.lr.ph4
  %y.02 = phi i32 [ %15, %.lr.ph4 ], [ %80, %._crit_edge ]
  %19 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %20 = load i32* %16, align 4, !tbaa !29
  %21 = tail call i32 @wmove(%struct._win_st* %19, i32 %y.02, i32 %20) #8
  %22 = load i32* %17, align 4, !tbaa !30
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %18
  %24 = load i32* %16, align 4, !tbaa !29
  %25 = sext i32 %24 to i64
  br label %26

; <label>:26                                      ; preds = %74, %.lr.ph
  %indvars.iv = phi i64 [ %25, %.lr.ph ], [ %indvars.iv.next, %74 ]
  %27 = trunc i64 %indvars.iv to i32
  %28 = shl i32 %27, 5
  %29 = add nsw i32 %28, %y.02
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %30, i32 2
  %32 = load %union.thing** %31, align 8, !tbaa !43
  %33 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %30, i32 0
  %34 = load i8* %33, align 8, !tbaa !33
  %35 = icmp eq %union.thing* %32, null
  br i1 %35, label %36, label %49

; <label>:36                                      ; preds = %26
  %37 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %38 = tail call i32 @winch(%struct._win_st* %37) #8
  %sext = shl i32 %38, 24
  %39 = ashr exact i32 %sext, 24
  %40 = sext i8 %34 to i32
  %41 = icmp eq i32 %39, %40
  %42 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  br i1 %41, label %45, label %43

; <label>:43                                      ; preds = %36
  %44 = tail call i32 @waddch(%struct._win_st* %42, i32 %40) #8
  br label %74

; <label>:45                                      ; preds = %36
  %46 = add nsw i64 %indvars.iv, 1
  %47 = trunc i64 %46 to i32
  %48 = tail call i32 @wmove(%struct._win_st* %42, i32 %y.02, i32 %47) #8
  br label %74

; <label>:49                                      ; preds = %26
  %50 = getelementptr inbounds %union.thing* %32, i64 0, i32 0, i32 6
  store i8 %34, i8* %50, align 1, !tbaa !42
  %51 = tail call zeroext i1 @see_monst(%union.thing* %32) #8
  br i1 %51, label %68, label %52

; <label>:52                                      ; preds = %49
  %53 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %54 = and i16 %53, 16384
  %55 = icmp eq i16 %54, 0
  %56 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  br i1 %55, label %65, label %57

; <label>:57                                      ; preds = %52
  %58 = getelementptr inbounds %struct._win_st* %56, i64 0, i32 7
  store i32 65536, i32* %58, align 4, !tbaa !45
  %59 = getelementptr inbounds %union.thing* %32, i64 0, i32 0, i32 5
  %60 = load i8* %59, align 1, !tbaa !44
  %61 = sext i8 %60 to i32
  %62 = tail call i32 @waddch(%struct._win_st* %56, i32 %61) #8
  %63 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %64 = getelementptr inbounds %struct._win_st* %63, i64 0, i32 7
  store i32 0, i32* %64, align 4, !tbaa !45
  br label %74

; <label>:65                                      ; preds = %52
  %66 = sext i8 %34 to i32
  %67 = tail call i32 @waddch(%struct._win_st* %56, i32 %66) #8
  br label %74

; <label>:68                                      ; preds = %49
  %69 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %70 = getelementptr inbounds %union.thing* %32, i64 0, i32 0, i32 5
  %71 = load i8* %70, align 1, !tbaa !44
  %72 = sext i8 %71 to i32
  %73 = tail call i32 @waddch(%struct._win_st* %69, i32 %72) #8
  br label %74

; <label>:74                                      ; preds = %68, %65, %57, %45, %43
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %75 = load i32* %17, align 4, !tbaa !30
  %76 = load i32* %16, align 4, !tbaa !29
  %77 = add nsw i32 %76, %75
  %78 = trunc i64 %indvars.iv.next to i32
  %79 = icmp slt i32 %78, %77
  br i1 %79, label %26, label %._crit_edge

._crit_edge:                                      ; preds = %74, %18
  %80 = add nsw i32 %y.02, 1
  %81 = load i32* %12, align 4, !tbaa !32
  %82 = load i32* %11, align 4, !tbaa !31
  %83 = add nsw i32 %82, %81
  %84 = icmp slt i32 %80, %83
  br i1 %84, label %18, label %.loopexit

.loopexit:                                        ; preds = %._crit_edge, %10, %6, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @leave_room(%struct.coord* nocapture readonly %cp) #0 {
  %1 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %2 = getelementptr inbounds %struct.room* %1, i64 0, i32 4
  %3 = load i16* %2, align 2, !tbaa !39
  %4 = sext i16 %3 to i32
  %5 = and i32 %4, 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %94

; <label>:7                                       ; preds = %0
  %8 = and i32 %4, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %17

; <label>:10                                      ; preds = %7
  %11 = and i32 %4, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

; <label>:13                                      ; preds = %10
  %14 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %15 = and i16 %14, 4
  %16 = icmp eq i16 %15, 0
  %. = select i1 %16, i32 32, i32 46
  br label %17

; <label>:17                                      ; preds = %13, %10, %7
  %floor.0 = phi i32 [ 35, %7 ], [ 46, %10 ], [ %., %13 ]
  %18 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 0
  %19 = load i32* %18, align 4, !tbaa !21
  %20 = shl i32 %19, 5
  %21 = getelementptr inbounds %struct.coord* %cp, i64 0, i32 1
  %22 = load i32* %21, align 4, !tbaa !20
  %23 = add nsw i32 %20, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %24, i32 1
  %26 = load i8* %25, align 1, !tbaa !36
  %27 = zext i8 %26 to i64
  %28 = and i64 %27, 15
  %29 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %28
  store %struct.room* %29, %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %30 = getelementptr inbounds %struct.room* %1, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %struct.room* %1, i64 0, i32 1, i32 1
  %32 = load i32* %31, align 4, !tbaa !32
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %.lr.ph4, label %._crit_edge5

.lr.ph4:                                          ; preds = %17
  %34 = load i32* %30, align 4, !tbaa !31
  %35 = getelementptr inbounds %struct.room* %1, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %struct.room* %1, i64 0, i32 1, i32 0
  %37 = icmp eq i32 %floor.0, 32
  %.pre = load i32* %36, align 4, !tbaa !30
  br label %38

; <label>:38                                      ; preds = %87, %.lr.ph4
  %39 = phi i32 [ %34, %.lr.ph4 ], [ %88, %87 ]
  %40 = phi i32 [ %32, %.lr.ph4 ], [ %89, %87 ]
  %41 = phi i32 [ %.pre, %.lr.ph4 ], [ %90, %87 ]
  %y.02 = phi i32 [ %34, %.lr.ph4 ], [ %91, %87 ]
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %.lr.ph, label %87

.lr.ph:                                           ; preds = %38
  %43 = load i32* %35, align 4, !tbaa !29
  %44 = sext i32 %43 to i64
  br label %45

; <label>:45                                      ; preds = %81, %.lr.ph
  %indvars.iv = phi i64 [ %44, %.lr.ph ], [ %indvars.iv.next, %81 ]
  %46 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %47 = trunc i64 %indvars.iv to i32
  %48 = tail call i32 @wmove(%struct._win_st* %46, i32 %y.02, i32 %47) #8
  %49 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %50 = tail call i32 @winch(%struct._win_st* %49) #8
  %sext = shl i32 %50, 24
  %51 = ashr exact i32 %sext, 24
  %cond = icmp eq i32 %51, 46
  br i1 %cond, label %52, label %56

; <label>:52                                      ; preds = %45
  br i1 %37, label %53, label %81

; <label>:53                                      ; preds = %52
  %54 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %55 = tail call i32 @waddch(%struct._win_st* %54, i32 32) #8
  br label %81

; <label>:56                                      ; preds = %45
  %57 = and i32 %51, 127
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %58
  %60 = load i32* %59, align 4, !tbaa !38
  %.lobit = and i32 %60, 32768
  %61 = icmp eq i32 %.lobit, 0
  br i1 %61, label %81, label %62

; <label>:62                                      ; preds = %56
  %63 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %64 = and i16 %63, 16384
  %65 = icmp eq i16 %64, 0
  br i1 %65, label %72, label %66

; <label>:66                                      ; preds = %62
  %67 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %68 = getelementptr inbounds %struct._win_st* %67, i64 0, i32 7
  store i32 65536, i32* %68, align 4, !tbaa !45
  %69 = tail call i32 @waddch(%struct._win_st* %67, i32 %51) #8
  %70 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %71 = getelementptr inbounds %struct._win_st* %70, i64 0, i32 7
  store i32 0, i32* %71, align 4, !tbaa !45
  br label %81

; <label>:72                                      ; preds = %62
  %73 = shl i32 %47, 5
  %74 = add nsw i32 %73, %y.02
  %75 = sext i32 %74 to i64
  %76 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %77 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %75, i32 0
  %78 = load i8* %77, align 8, !tbaa !33
  %79 = icmp eq i8 %78, 43
  %.floor.0 = select i1 %79, i32 43, i32 %floor.0
  %80 = tail call i32 @waddch(%struct._win_st* %76, i32 %.floor.0) #8
  br label %81

; <label>:81                                      ; preds = %72, %66, %56, %53, %52
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %82 = load i32* %36, align 4, !tbaa !30
  %83 = load i32* %35, align 4, !tbaa !29
  %84 = add nsw i32 %83, %82
  %85 = trunc i64 %indvars.iv.next to i32
  %86 = icmp slt i32 %85, %84
  br i1 %86, label %45, label %._crit_edge

._crit_edge:                                      ; preds = %81
  %.pre6 = load i32* %31, align 4, !tbaa !32
  %.pre7 = load i32* %30, align 4, !tbaa !31
  br label %87

; <label>:87                                      ; preds = %._crit_edge, %38
  %88 = phi i32 [ %.pre7, %._crit_edge ], [ %39, %38 ]
  %89 = phi i32 [ %.pre6, %._crit_edge ], [ %40, %38 ]
  %90 = phi i32 [ %82, %._crit_edge ], [ %41, %38 ]
  %91 = add nsw i32 %y.02, 1
  %92 = add nsw i32 %88, %89
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %38, label %._crit_edge5

._crit_edge5:                                     ; preds = %87, %17
  tail call void @door_open(%struct.room* %1) #8
  br label %94

; <label>:94                                      ; preds = %._crit_edge5, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @save_game() #0 {
  %buf = alloca [1024 x i8], align 16
  %1 = getelementptr inbounds [1024 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1024, i8* %1) #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %2 = call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i1 false)
  br label %.loopexit14

.loopexit14:                                      ; preds = %.lr.ph, %0
  %3 = load i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), align 1, !tbaa !28
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %20, label %.preheader

.preheader:                                       ; preds = %9, %.loopexit14
  %5 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([17 x i8]* @.str890, i64 0, i64 0), i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0)) #8
  %6 = call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  switch i8 %6, label %9 [
    i8 27, label %7
    i8 121, label %11
    i8 110, label %11
    i8 89, label %11
    i8 78, label %11
  ]

; <label>:7                                       ; preds = %.preheader
  %8 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str1891, i64 0, i64 0)) #8
  br label %52

; <label>:9                                       ; preds = %.preheader
  %10 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str2892, i64 0, i64 0)) #8
  br label %.preheader

; <label>:11                                      ; preds = %.preheader, %.preheader, %.preheader, %.preheader
  %12 = and i8 %6, -33
  %13 = icmp eq i8 %12, 89
  br i1 %13, label %14, label %20

; <label>:14                                      ; preds = %11
  %15 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %16 = call i32 @waddnstr(%struct._win_st* %15, i8* getelementptr inbounds ([5 x i8]* @.str3893, i64 0, i64 0), i32 -1) #8
  %17 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %18 = call i32 @wrefresh(%struct._win_st* %17) #8
  %19 = call i8* @__strcpy_chk(i8* %1, i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i64 1024) #8
  br label %27

; <label>:20                                      ; preds = %47, %11, %.loopexit14
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %21 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([12 x i8]* @.str4894, i64 0, i64 0)) #8
  store i8 0, i8* %1, align 16, !tbaa !28
  %22 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %23 = call i32 @get_str(i8* %1, %struct._win_st* %22) #8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %.loopexit, label %26

.loopexit:                                        ; preds = %35, %.preheader13, %20
  %25 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str1891, i64 0, i64 0)) #8
  br label %52

; <label>:26                                      ; preds = %20
  store i32 0, i32* @mpos, align 4, !tbaa !38
  br label %27

; <label>:27                                      ; preds = %26, %14
  %28 = call i32 @"\01_stat$INODE64"(i8* %1, %struct.stat* @sbuf) #8
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %.preheader13, label %43

.preheader13:                                     ; preds = %27
  %30 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([43 x i8]* @.str5895, i64 0, i64 0)) #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %31 = call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %32 = icmp eq i8 %31, 27
  br i1 %32, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %35, %.preheader13
  %33 = phi i8 [ %38, %35 ], [ %31, %.preheader13 ]
  %34 = and i8 %33, -33
  switch i8 %34, label %35 [
    i8 89, label %40
    i8 78, label %.loopexit14
  ]

; <label>:35                                      ; preds = %.lr.ph
  %36 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([21 x i8]* @.str6896, i64 0, i64 0)) #8
  %37 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([43 x i8]* @.str5895, i64 0, i64 0)) #8
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %38 = call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %39 = icmp eq i8 %38, 27
  br i1 %39, label %.loopexit, label %.lr.ph

; <label>:40                                      ; preds = %.lr.ph
  %41 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str7897, i64 0, i64 0), i8* %1) #8
  %42 = call i32 @md_unlink(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0)) #8
  br label %43

; <label>:43                                      ; preds = %40, %27
  %44 = call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* %1, i64 %2) #8
  %45 = call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str8898, i64 0, i64 0)) #8
  %46 = icmp eq %struct.__sFILE* %45, null
  br i1 %46, label %47, label %.critedge

; <label>:47                                      ; preds = %43
  %48 = call i32* @__error() #8
  %49 = load i32* %48, align 4, !tbaa !38
  %50 = call i8* @"\01_strerror"(i32 %49) #8
  %51 = call i32 (i8*, ...)* @msg(i8* %50) #8
  br label %20

.critedge:                                        ; preds = %43
  call void @save_file(%struct.__sFILE* %45)
  unreachable

; <label>:52                                      ; preds = %.loopexit, %7
  call void @llvm.lifetime.end(i64 1024, i8* %1) #8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @save_file(%struct.__sFILE* %savef) #9 {
  %buf = alloca [80 x i8], align 16
  %1 = getelementptr inbounds [80 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 80, i8* %1) #8
  %2 = load i32* @COLS, align 4, !tbaa !38
  %3 = add nsw i32 %2, -1
  %4 = load i32* @LINES, align 4, !tbaa !38
  %5 = add nsw i32 %4, -1
  %6 = call i32 @mvcur(i32 0, i32 %3, i32 %5, i32 0) #8
  %7 = call i32 @putchar(i32 10) #8
  %8 = call i32 @endwin() #8
  call void @resetltchars() #8
  %9 = call i32 @md_chmod(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i32 256) #8
  %10 = call i64 @strlen(i8* getelementptr inbounds ([28 x i8]* @version, i64 0, i64 0)) #8
  %11 = add i64 %10, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %encwrite.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %22, %0
  %.06.i = phi i8* [ %23, %22 ], [ getelementptr inbounds ([28 x i8]* @version, i64 0, i64 0), %0 ]
  %.015.i = phi i64 [ %36, %22 ], [ %11, %0 ]
  %fb.04.i = phi i32 [ %phitmp.i, %22 ], [ 0, %0 ]
  %e2.03.i = phi i8* [ %e2.1.i, %22 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %0 ]
  %e1.02.i = phi i8* [ %..i, %22 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %0 ]
  %13 = load i8* %.06.i, align 1, !tbaa !28
  %14 = load i8* %e1.02.i, align 1, !tbaa !28
  %15 = xor i8 %14, %13
  %16 = load i8* %e2.03.i, align 1, !tbaa !28
  %17 = xor i8 %15, %16
  %18 = sext i8 %17 to i32
  %19 = xor i32 %18, %fb.04.i
  %20 = call i32 @putc(i32 %19, %struct.__sFILE* %savef) #8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %encwrite.exit, label %22

; <label>:22                                      ; preds = %.lr.ph.i
  %23 = getelementptr inbounds i8* %.06.i, i64 1
  %24 = getelementptr inbounds i8* %e1.02.i, i64 1
  %25 = load i8* %e1.02.i, align 1, !tbaa !28
  %26 = sext i8 %25 to i32
  %27 = getelementptr inbounds i8* %e2.03.i, i64 1
  %28 = load i8* %e2.03.i, align 1, !tbaa !28
  %29 = sext i8 %28 to i32
  %30 = mul nsw i32 %29, %26
  %31 = add nsw i32 %30, %fb.04.i
  %32 = load i8* %24, align 1, !tbaa !28
  %33 = icmp eq i8 %32, 0
  %..i = select i1 %33, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %24
  %34 = load i8* %27, align 1, !tbaa !28
  %35 = icmp eq i8 %34, 0
  %e2.1.i = select i1 %35, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %27
  %36 = add i64 %.015.i, -1
  %sext.i = shl i32 %31, 24
  %phitmp.i = ashr exact i32 %sext.i, 24
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %encwrite.exit, label %.lr.ph.i

encwrite.exit:                                    ; preds = %22, %.lr.ph.i, %0
  %38 = load i32* @LINES, align 4, !tbaa !38
  %39 = load i32* @COLS, align 4, !tbaa !38
  %40 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %1, i32 0, i64 80, i8* getelementptr inbounds ([9 x i8]* @.str9899, i64 0, i64 0), i32 %38, i32 %39) #8
  br label %.lr.ph.i6

.lr.ph.i6:                                        ; preds = %50, %encwrite.exit
  %.06.i1 = phi i8* [ %51, %50 ], [ %1, %encwrite.exit ]
  %.015.i2 = phi i64 [ %64, %50 ], [ 80, %encwrite.exit ]
  %fb.04.i3 = phi i32 [ %phitmp.i10, %50 ], [ 0, %encwrite.exit ]
  %e2.03.i4 = phi i8* [ %e2.1.i8, %50 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %encwrite.exit ]
  %e1.02.i5 = phi i8* [ %..i7, %50 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %encwrite.exit ]
  %41 = load i8* %.06.i1, align 1, !tbaa !28
  %42 = load i8* %e1.02.i5, align 1, !tbaa !28
  %43 = xor i8 %42, %41
  %44 = load i8* %e2.03.i4, align 1, !tbaa !28
  %45 = xor i8 %43, %44
  %46 = sext i8 %45 to i32
  %47 = xor i32 %46, %fb.04.i3
  %48 = call i32 @putc(i32 %47, %struct.__sFILE* %savef) #8
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %encwrite.exit12, label %50

; <label>:50                                      ; preds = %.lr.ph.i6
  %51 = getelementptr inbounds i8* %.06.i1, i64 1
  %52 = getelementptr inbounds i8* %e1.02.i5, i64 1
  %53 = load i8* %e1.02.i5, align 1, !tbaa !28
  %54 = sext i8 %53 to i32
  %55 = getelementptr inbounds i8* %e2.03.i4, i64 1
  %56 = load i8* %e2.03.i4, align 1, !tbaa !28
  %57 = sext i8 %56 to i32
  %58 = mul nsw i32 %57, %54
  %59 = add nsw i32 %58, %fb.04.i3
  %60 = load i8* %52, align 1, !tbaa !28
  %61 = icmp eq i8 %60, 0
  %..i7 = select i1 %61, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %52
  %62 = load i8* %55, align 1, !tbaa !28
  %63 = icmp eq i8 %62, 0
  %e2.1.i8 = select i1 %63, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %55
  %64 = add i64 %.015.i2, -1
  %sext.i9 = shl i32 %59, 24
  %phitmp.i10 = ashr exact i32 %sext.i9, 24
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %encwrite.exit12, label %.lr.ph.i6

encwrite.exit12:                                  ; preds = %50, %.lr.ph.i6
  %66 = call i32 @rs_save_file(%struct.__sFILE* %savef) #8
  %67 = call i32 @fflush(%struct.__sFILE* %savef) #8
  %68 = call i32 @fclose(%struct.__sFILE* %savef) #8
  call void @exit(i32 0) #10
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @auto_save(i32 %sig) #9 {
  tail call void (...)* bitcast (void ()* @md_ignoreallsignals to void (...)*)() #8
  %1 = load i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), align 1, !tbaa !28
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %13, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str8898, i64 0, i64 0)) #8
  %5 = icmp eq %struct.__sFILE* %4, null
  br i1 %5, label %6, label %12

; <label>:6                                       ; preds = %3
  %7 = tail call i32 @md_unlink_open_file(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), %struct.__sFILE* null) #8
  %8 = icmp sgt i32 %7, -1
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %6
  %10 = tail call %struct.__sFILE* @"\01_fopen"(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str8898, i64 0, i64 0)) #8
  %11 = icmp eq %struct.__sFILE* %10, null
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %9, %3
  %savef.0 = phi %struct.__sFILE* [ %4, %3 ], [ %10, %9 ]
  tail call void @save_file(%struct.__sFILE* %savef.0)
  unreachable

; <label>:13                                      ; preds = %9, %6, %0
  tail call void @exit(i32 0) #10
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define i64 @encwrite(i8* nocapture readonly %start, i64 %size, %struct.__sFILE* nocapture %outf) #0 {
  %1 = icmp eq i64 %size, 0
  br i1 %1, label %split7, label %.lr.ph

.lr.ph:                                           ; preds = %11, %0
  %.06 = phi i8* [ %12, %11 ], [ %start, %0 ]
  %.015 = phi i64 [ %25, %11 ], [ %size, %0 ]
  %fb.04 = phi i32 [ %phitmp, %11 ], [ 0, %0 ]
  %e2.03 = phi i8* [ %e2.1, %11 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %0 ]
  %e1.02 = phi i8* [ %., %11 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %0 ]
  %2 = load i8* %.06, align 1, !tbaa !28
  %3 = load i8* %e1.02, align 1, !tbaa !28
  %4 = xor i8 %3, %2
  %5 = load i8* %e2.03, align 1, !tbaa !28
  %6 = xor i8 %4, %5
  %7 = sext i8 %6 to i32
  %8 = xor i32 %7, %fb.04
  %9 = tail call i32 @putc(i32 %8, %struct.__sFILE* %outf) #8
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %split7, label %11

; <label>:11                                      ; preds = %.lr.ph
  %12 = getelementptr inbounds i8* %.06, i64 1
  %13 = getelementptr inbounds i8* %e1.02, i64 1
  %14 = load i8* %e1.02, align 1, !tbaa !28
  %15 = sext i8 %14 to i32
  %16 = getelementptr inbounds i8* %e2.03, i64 1
  %17 = load i8* %e2.03, align 1, !tbaa !28
  %18 = sext i8 %17 to i32
  %19 = mul nsw i32 %18, %15
  %20 = add nsw i32 %19, %fb.04
  %21 = load i8* %13, align 1, !tbaa !28
  %22 = icmp eq i8 %21, 0
  %. = select i1 %22, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %13
  %23 = load i8* %16, align 1, !tbaa !28
  %24 = icmp eq i8 %23, 0
  %e2.1 = select i1 %24, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %16
  %25 = add i64 %.015, -1
  %sext = shl i32 %20, 24
  %phitmp = ashr exact i32 %sext, 24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %split7, label %.lr.ph

split7:                                           ; preds = %11, %.lr.ph, %0
  %.01.lcssa = phi i64 [ 0, %0 ], [ 0, %11 ], [ %.015, %.lr.ph ]
  %27 = sub i64 %size, %.01.lcssa
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @restore(i8* %file, i8** %envp) #0 {
  %buf = alloca [1024 x i8], align 16
  %sbuf2 = alloca %struct.stat, align 8
  %lines = alloca i32, align 4
  %cols = alloca i32, align 4
  %1 = getelementptr inbounds [1024 x i8]* %buf, i64 0, i64 0
  call void @llvm.lifetime.start(i64 1024, i8* %1) #8
  %2 = bitcast %struct.stat* %sbuf2 to i8*
  call void @llvm.lifetime.start(i64 144, i8* %2) #8
  %3 = call i32 @strcmp(i8* %file, i8* getelementptr inbounds ([3 x i8]* @.str10900, i64 0, i64 0)) #8
  %4 = icmp eq i32 %3, 0
  %.file = select i1 %4, i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* %file
  call void (...)* bitcast (void ()* @md_tstphold to void (...)*)() #8
  %5 = call %struct.__sFILE* @"\01_fopen"(i8* %.file, i8* getelementptr inbounds ([2 x i8]* @.str11901, i64 0, i64 0)) #8
  %6 = icmp eq %struct.__sFILE* %5, null
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  call void @perror(i8* %.file) #11
  br label %120

; <label>:8                                       ; preds = %0
  %9 = call i32 @"\01_stat$INODE64"(i8* %.file, %struct.stat* %sbuf2) #8
  %10 = call zeroext i1 @is_symlink(i8* %.file) #8
  %11 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !1
  %12 = call i32 @fflush(%struct.__sFILE* %11) #8
  %13 = call i64 @strlen(i8* getelementptr inbounds ([28 x i8]* @version, i64 0, i64 0)) #8
  %14 = add i64 %13, 1
  %15 = and i64 %14, 4294967295
  %16 = call i64 @fread(i8* %1, i64 1, i64 %15, %struct.__sFILE* %5) #8
  switch i64 %16, label %.preheader.i [
    i64 -1, label %encread.exit
    i64 0, label %encread.exit
  ]

.preheader.i:                                     ; preds = %8
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %encread.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.preheader.i
  %.029.i = phi i8* [ %25, %.lr.ph.i ], [ %1, %.preheader.i ]
  %fb.08.i = phi i32 [ %36, %.lr.ph.i ], [ 0, %.preheader.i ]
  %e2.07.i = phi i8* [ %.4.i, %.lr.ph.i ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %.preheader.i ]
  %e1.06.i = phi i8* [ %..i, %.lr.ph.i ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %.preheader.i ]
  %.035.i = phi i64 [ %18, %.lr.ph.i ], [ %15, %.preheader.i ]
  %18 = add i64 %.035.i, -1
  %19 = load i8* %e1.06.i, align 1, !tbaa !28
  %20 = load i8* %e2.07.i, align 1, !tbaa !28
  %21 = xor i8 %20, %19
  %22 = zext i8 %21 to i32
  %sext.i = shl i32 %fb.08.i, 24
  %23 = ashr exact i32 %sext.i, 24
  %24 = xor i32 %22, %23
  %25 = getelementptr inbounds i8* %.029.i, i64 1
  %26 = load i8* %.029.i, align 1, !tbaa !28
  %27 = zext i8 %26 to i32
  %28 = xor i32 %24, %27
  %29 = trunc i32 %28 to i8
  store i8 %29, i8* %.029.i, align 1, !tbaa !28
  %30 = getelementptr inbounds i8* %e1.06.i, i64 1
  %31 = load i8* %e1.06.i, align 1, !tbaa !28
  %32 = getelementptr inbounds i8* %e2.07.i, i64 1
  %33 = load i8* %e2.07.i, align 1, !tbaa !28
  %34 = mul i8 %33, %31
  %35 = sext i8 %34 to i32
  %36 = add nsw i32 %35, %23
  %37 = load i8* %30, align 1, !tbaa !28
  %38 = icmp eq i8 %37, 0
  %..i = select i1 %38, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %30
  %39 = load i8* %32, align 1, !tbaa !28
  %40 = icmp eq i8 %39, 0
  %.4.i = select i1 %40, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %32
  %41 = icmp eq i64 %18, 0
  br i1 %41, label %encread.exit, label %.lr.ph.i

encread.exit:                                     ; preds = %.lr.ph.i, %.preheader.i, %8, %8
  %42 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([28 x i8]* @version, i64 0, i64 0)) #8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

; <label>:44                                      ; preds = %encread.exit
  %puts5 = call i32 @puts(i8* getelementptr inbounds ([34 x i8]* @str23, i64 0, i64 0))
  br label %120

; <label>:45                                      ; preds = %encread.exit
  %46 = call i64 @fread(i8* %1, i64 1, i64 80, %struct.__sFILE* %5) #8
  switch i64 %46, label %.lr.ph.i15 [
    i64 -1, label %encread.exit16
    i64 0, label %encread.exit16
  ]

.lr.ph.i15:                                       ; preds = %.lr.ph.i15, %45
  %.029.i7 = phi i8* [ %54, %.lr.ph.i15 ], [ %1, %45 ]
  %fb.08.i8 = phi i32 [ %65, %.lr.ph.i15 ], [ 0, %45 ]
  %e2.07.i9 = phi i8* [ %.4.i14, %.lr.ph.i15 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %45 ]
  %e1.06.i10 = phi i8* [ %..i13, %.lr.ph.i15 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %45 ]
  %.035.i11 = phi i64 [ %47, %.lr.ph.i15 ], [ 80, %45 ]
  %47 = add i64 %.035.i11, -1
  %48 = load i8* %e1.06.i10, align 1, !tbaa !28
  %49 = load i8* %e2.07.i9, align 1, !tbaa !28
  %50 = xor i8 %49, %48
  %51 = zext i8 %50 to i32
  %sext.i12 = shl i32 %fb.08.i8, 24
  %52 = ashr exact i32 %sext.i12, 24
  %53 = xor i32 %51, %52
  %54 = getelementptr inbounds i8* %.029.i7, i64 1
  %55 = load i8* %.029.i7, align 1, !tbaa !28
  %56 = zext i8 %55 to i32
  %57 = xor i32 %53, %56
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %.029.i7, align 1, !tbaa !28
  %59 = getelementptr inbounds i8* %e1.06.i10, i64 1
  %60 = load i8* %e1.06.i10, align 1, !tbaa !28
  %61 = getelementptr inbounds i8* %e2.07.i9, i64 1
  %62 = load i8* %e2.07.i9, align 1, !tbaa !28
  %63 = mul i8 %62, %60
  %64 = sext i8 %63 to i32
  %65 = add nsw i32 %64, %52
  %66 = load i8* %59, align 1, !tbaa !28
  %67 = icmp eq i8 %66, 0
  %..i13 = select i1 %67, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %59
  %68 = load i8* %61, align 1, !tbaa !28
  %69 = icmp eq i8 %68, 0
  %.4.i14 = select i1 %69, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %61
  %70 = icmp eq i64 %47, 0
  br i1 %70, label %encread.exit16, label %.lr.ph.i15

encread.exit16:                                   ; preds = %.lr.ph.i15, %45, %45
  %71 = call i32 (i8*, i8*, ...)* @sscanf(i8* %1, i8* getelementptr inbounds ([9 x i8]* @.str9899, i64 0, i64 0), i32* %lines, i32* %cols) #8
  %72 = call %struct._win_st* @initscr() #8
  %73 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %74 = call i32 @keypad(%struct._win_st* %73, i1 zeroext true) #8
  %75 = load i32* %lines, align 4, !tbaa !38
  %76 = load i32* @LINES, align 4, !tbaa !38
  %77 = icmp sgt i32 %75, %76
  br i1 %77, label %78, label %84

; <label>:78                                      ; preds = %encread.exit16
  %79 = call i32 @endwin() #8
  %80 = load i32* %lines, align 4, !tbaa !38
  %81 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str13902, i64 0, i64 0), i32 %80) #8
  %82 = load i32* @LINES, align 4, !tbaa !38
  %83 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([58 x i8]* @.str14903, i64 0, i64 0), i32 %82) #8
  br label %120

; <label>:84                                      ; preds = %encread.exit16
  %85 = load i32* %cols, align 4, !tbaa !38
  %86 = load i32* @COLS, align 4, !tbaa !38
  %87 = icmp sgt i32 %85, %86
  br i1 %87, label %88, label %94

; <label>:88                                      ; preds = %84
  %89 = call i32 @endwin() #8
  %90 = load i32* %cols, align 4, !tbaa !38
  %91 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str15904, i64 0, i64 0), i32 %90) #8
  %92 = load i32* @COLS, align 4, !tbaa !38
  %93 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str16905, i64 0, i64 0), i32 %92) #8
  br label %120

; <label>:94                                      ; preds = %84
  %95 = call %struct._win_st* @newwin(i32 %76, i32 %86, i32 0, i32 0) #8
  store %struct._win_st* %95, %struct._win_st** @hw, align 8, !tbaa !1
  call void (...)* bitcast (void ()* @setup to void (...)*)() #8
  %96 = call i32 @rs_restore_file(%struct.__sFILE* %5) #8
  %97 = call i32 @md_unlink_open_file(i8* %.file, %struct.__sFILE* %5) #8
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %99, label %100

; <label>:99                                      ; preds = %94
  %puts4 = call i32 @puts(i8* getelementptr inbounds ([19 x i8]* @str22, i64 0, i64 0))
  br label %120

; <label>:100                                     ; preds = %94
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %101 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %102 = call i32 @clearok(%struct._win_st* %101, i1 zeroext true) #8
  %103 = getelementptr inbounds %struct.stat* %sbuf2, i64 0, i32 2
  %104 = load i16* %103, align 2, !tbaa !141
  %105 = icmp ne i16 %104, 1
  %or.cond = or i1 %105, %10
  br i1 %or.cond, label %106, label %108

; <label>:106                                     ; preds = %100
  %107 = call i32 @endwin() #8
  %puts3 = call i32 @puts(i8* getelementptr inbounds ([35 x i8]* @str21, i64 0, i64 0))
  br label %120

; <label>:108                                     ; preds = %100
  %109 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %110 = icmp slt i32 %109, 1
  br i1 %110, label %111, label %113

; <label>:111                                     ; preds = %108
  %112 = call i32 @endwin() #8
  %puts = call i32 @puts(i8* getelementptr inbounds ([18 x i8]* @str907, i64 0, i64 0))
  br label %120

; <label>:113                                     ; preds = %108
  call void (...)* bitcast (void ()* @md_tstpresume to void (...)*)() #8
  store i8** %envp, i8*** @environ, align 8, !tbaa !1
  %114 = call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i1 false)
  %115 = call i8* @__strcpy_chk(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i8* %.file, i64 %114) #8
  %116 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %117 = call i32 @clearok(%struct._win_st* %116, i1 zeroext true) #8
  %118 = call i32 (...)* bitcast (i32 ()* @md_getpid to i32 (...)*)() #8
  call void @srand(i32 %118) #8
  %119 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str7897, i64 0, i64 0), i8* %.file) #8
  call void (...)* bitcast (void ()* @playit to void (...)*)() #8
  br label %120

; <label>:120                                     ; preds = %113, %111, %106, %99, %88, %78, %44, %7
  call void @llvm.lifetime.end(i64 144, i8* %2) #8
  call void @llvm.lifetime.end(i64 1024, i8* %1) #8
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define i64 @encread(i8* nocapture %start, i64 %size, %struct.__sFILE* nocapture %inf) #0 {
  %1 = tail call i64 @fread(i8* %start, i64 1, i64 %size, %struct.__sFILE* %inf) #8
  switch i64 %1, label %.preheader [
    i64 -1, label %.loopexit
    i64 0, label %.loopexit
  ]

.preheader:                                       ; preds = %0
  %2 = icmp eq i64 %size, 0
  br i1 %2, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %.029 = phi i8* [ %10, %.lr.ph ], [ %start, %.preheader ]
  %fb.08 = phi i32 [ %21, %.lr.ph ], [ 0, %.preheader ]
  %e2.07 = phi i8* [ %.4, %.lr.ph ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %.preheader ]
  %e1.06 = phi i8* [ %., %.lr.ph ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %.preheader ]
  %.035 = phi i64 [ %3, %.lr.ph ], [ %size, %.preheader ]
  %3 = add i64 %.035, -1
  %4 = load i8* %e1.06, align 1, !tbaa !28
  %5 = load i8* %e2.07, align 1, !tbaa !28
  %6 = xor i8 %5, %4
  %7 = zext i8 %6 to i32
  %sext = shl i32 %fb.08, 24
  %8 = ashr exact i32 %sext, 24
  %9 = xor i32 %7, %8
  %10 = getelementptr inbounds i8* %.029, i64 1
  %11 = load i8* %.029, align 1, !tbaa !28
  %12 = zext i8 %11 to i32
  %13 = xor i32 %9, %12
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* %.029, align 1, !tbaa !28
  %15 = getelementptr inbounds i8* %e1.06, i64 1
  %16 = load i8* %e1.06, align 1, !tbaa !28
  %17 = getelementptr inbounds i8* %e2.07, i64 1
  %18 = load i8* %e2.07, align 1, !tbaa !28
  %19 = mul i8 %18, %16
  %20 = sext i8 %19 to i32
  %21 = add nsw i32 %20, %8
  %22 = load i8* %15, align 1, !tbaa !28
  %23 = icmp eq i8 %22, 0
  %. = select i1 %23, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %15
  %24 = load i8* %17, align 1, !tbaa !28
  %25 = icmp eq i8 %24, 0
  %.4 = select i1 %25, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %17
  %26 = icmp eq i64 %3, 0
  br i1 %26, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %.lr.ph, %.preheader, %0, %0
  ret i64 %1
}

; Function Attrs: nounwind
declare i32 @sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) #5

declare void @srand(i32) #2

; Function Attrs: nounwind
declare i32 @putc(i32, %struct.__sFILE* nocapture) #5

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define void @rd_score(%struct.sc_ent* %top_ten) #0 {
  %1 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %2 = icmp eq %struct.__sFILE* %1, null
  br i1 %2, label %71, label %3

; <label>:3                                       ; preds = %0
  tail call void @rewind(%struct.__sFILE* %1) #8
  %4 = load i32* @numscores, align 4, !tbaa !38
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %encread.exit11, %3
  %i.012 = phi i32 [ %67, %encread.exit11 ], [ 0, %3 ]
  %6 = zext i32 %i.012 to i64
  %7 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 4, i64 0
  %8 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %9 = tail call i64 @fread(i8* %7, i64 1, i64 1024, %struct.__sFILE* %8) #8
  switch i64 %9, label %.lr.ph.i [
    i64 -1, label %encread.exit
    i64 0, label %encread.exit
  ]

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph
  %.029.i = phi i8* [ %17, %.lr.ph.i ], [ %7, %.lr.ph ]
  %fb.08.i = phi i32 [ %28, %.lr.ph.i ], [ 0, %.lr.ph ]
  %e2.07.i = phi i8* [ %.4.i, %.lr.ph.i ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %.lr.ph ]
  %e1.06.i = phi i8* [ %..i, %.lr.ph.i ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %.lr.ph ]
  %.035.i = phi i64 [ %10, %.lr.ph.i ], [ 1024, %.lr.ph ]
  %10 = add i64 %.035.i, -1
  %11 = load i8* %e1.06.i, align 1, !tbaa !28
  %12 = load i8* %e2.07.i, align 1, !tbaa !28
  %13 = xor i8 %12, %11
  %14 = zext i8 %13 to i32
  %sext.i = shl i32 %fb.08.i, 24
  %15 = ashr exact i32 %sext.i, 24
  %16 = xor i32 %14, %15
  %17 = getelementptr inbounds i8* %.029.i, i64 1
  %18 = load i8* %.029.i, align 1, !tbaa !28
  %19 = zext i8 %18 to i32
  %20 = xor i32 %16, %19
  %21 = trunc i32 %20 to i8
  store i8 %21, i8* %.029.i, align 1, !tbaa !28
  %22 = getelementptr inbounds i8* %e1.06.i, i64 1
  %23 = load i8* %e1.06.i, align 1, !tbaa !28
  %24 = getelementptr inbounds i8* %e2.07.i, i64 1
  %25 = load i8* %e2.07.i, align 1, !tbaa !28
  %26 = mul i8 %25, %23
  %27 = sext i8 %26 to i32
  %28 = add nsw i32 %27, %15
  %29 = load i8* %22, align 1, !tbaa !28
  %30 = icmp eq i8 %29, 0
  %..i = select i1 %30, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %22
  %31 = load i8* %24, align 1, !tbaa !28
  %32 = icmp eq i8 %31, 0
  %.4.i = select i1 %32, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %24
  %33 = icmp eq i64 %10, 0
  br i1 %33, label %encread.exit, label %.lr.ph.i

encread.exit:                                     ; preds = %.lr.ph.i, %.lr.ph, %.lr.ph
  %34 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %35 = tail call i64 @fread(i8* getelementptr inbounds ([100 x i8]* @scoreline, i64 0, i64 0), i64 1, i64 100, %struct.__sFILE* %34) #8
  switch i64 %35, label %.lr.ph.i10 [
    i64 -1, label %encread.exit11
    i64 0, label %encread.exit11
  ]

.lr.ph.i10:                                       ; preds = %.lr.ph.i10, %encread.exit
  %.029.i2 = phi i8* [ %43, %.lr.ph.i10 ], [ getelementptr inbounds ([100 x i8]* @scoreline, i64 0, i64 0), %encread.exit ]
  %fb.08.i3 = phi i32 [ %54, %.lr.ph.i10 ], [ 0, %encread.exit ]
  %e2.07.i4 = phi i8* [ %.4.i9, %.lr.ph.i10 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %encread.exit ]
  %e1.06.i5 = phi i8* [ %..i8, %.lr.ph.i10 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %encread.exit ]
  %.035.i6 = phi i64 [ %36, %.lr.ph.i10 ], [ 100, %encread.exit ]
  %36 = add i64 %.035.i6, -1
  %37 = load i8* %e1.06.i5, align 1, !tbaa !28
  %38 = load i8* %e2.07.i4, align 1, !tbaa !28
  %39 = xor i8 %38, %37
  %40 = zext i8 %39 to i32
  %sext.i7 = shl i32 %fb.08.i3, 24
  %41 = ashr exact i32 %sext.i7, 24
  %42 = xor i32 %40, %41
  %43 = getelementptr inbounds i8* %.029.i2, i64 1
  %44 = load i8* %.029.i2, align 1, !tbaa !28
  %45 = zext i8 %44 to i32
  %46 = xor i32 %42, %45
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %.029.i2, align 1, !tbaa !28
  %48 = getelementptr inbounds i8* %e1.06.i5, i64 1
  %49 = load i8* %e1.06.i5, align 1, !tbaa !28
  %50 = getelementptr inbounds i8* %e2.07.i4, i64 1
  %51 = load i8* %e2.07.i4, align 1, !tbaa !28
  %52 = mul i8 %51, %49
  %53 = sext i8 %52 to i32
  %54 = add nsw i32 %53, %41
  %55 = load i8* %48, align 1, !tbaa !28
  %56 = icmp eq i8 %55, 0
  %..i8 = select i1 %56, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %48
  %57 = load i8* %50, align 1, !tbaa !28
  %58 = icmp eq i8 %57, 0
  %.4.i9 = select i1 %58, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %50
  %59 = icmp eq i64 %36, 0
  br i1 %59, label %encread.exit11, label %.lr.ph.i10

encread.exit11:                                   ; preds = %.lr.ph.i10, %encread.exit, %encread.exit
  %60 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 0
  %61 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 1
  %62 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 2
  %63 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 3
  %64 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 5
  %65 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 6
  %66 = tail call i32 (i8*, i8*, ...)* @sscanf(i8* getelementptr inbounds ([100 x i8]* @scoreline, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8]* @.str20906, i64 0, i64 0), i32* %60, i32* %61, i32* %62, i16* %63, i32* %64, i32* %65) #8
  %67 = add i32 %i.012, 1
  %68 = load i32* @numscores, align 4, !tbaa !38
  %69 = icmp ult i32 %67, %68
  br i1 %69, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %encread.exit11, %3
  %70 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  tail call void @rewind(%struct.__sFILE* %70) #8
  br label %71

; <label>:71                                      ; preds = %._crit_edge, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @wr_score(%struct.sc_ent* nocapture readonly %top_ten) #0 {
  %1 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  %2 = icmp eq %struct.__sFILE* %1, null
  br i1 %2, label %78, label %3

; <label>:3                                       ; preds = %0
  tail call void @rewind(%struct.__sFILE* %1) #8
  %4 = load i32* @numscores, align 4, !tbaa !38
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %encwrite.exit12, %3
  %i.013 = phi i32 [ %74, %encwrite.exit12 ], [ 0, %3 ]
  tail call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([100 x i8]* @scoreline, i64 0, i64 0), i8 0, i64 100, i32 16, i1 false)
  %6 = zext i32 %i.013 to i64
  %7 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 4, i64 0
  %8 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %18, %.lr.ph
  %.06.i = phi i8* [ %19, %18 ], [ %7, %.lr.ph ]
  %.015.i = phi i64 [ %32, %18 ], [ 1024, %.lr.ph ]
  %fb.04.i = phi i32 [ %phitmp.i, %18 ], [ 0, %.lr.ph ]
  %e2.03.i = phi i8* [ %e2.1.i, %18 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %.lr.ph ]
  %e1.02.i = phi i8* [ %..i, %18 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %.lr.ph ]
  %9 = load i8* %.06.i, align 1, !tbaa !28
  %10 = load i8* %e1.02.i, align 1, !tbaa !28
  %11 = xor i8 %10, %9
  %12 = load i8* %e2.03.i, align 1, !tbaa !28
  %13 = xor i8 %11, %12
  %14 = sext i8 %13 to i32
  %15 = xor i32 %14, %fb.04.i
  %16 = tail call i32 @putc(i32 %15, %struct.__sFILE* %8) #8
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %encwrite.exit, label %18

; <label>:18                                      ; preds = %.lr.ph.i
  %19 = getelementptr inbounds i8* %.06.i, i64 1
  %20 = getelementptr inbounds i8* %e1.02.i, i64 1
  %21 = load i8* %e1.02.i, align 1, !tbaa !28
  %22 = sext i8 %21 to i32
  %23 = getelementptr inbounds i8* %e2.03.i, i64 1
  %24 = load i8* %e2.03.i, align 1, !tbaa !28
  %25 = sext i8 %24 to i32
  %26 = mul nsw i32 %25, %22
  %27 = add nsw i32 %26, %fb.04.i
  %28 = load i8* %20, align 1, !tbaa !28
  %29 = icmp eq i8 %28, 0
  %..i = select i1 %29, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %20
  %30 = load i8* %23, align 1, !tbaa !28
  %31 = icmp eq i8 %30, 0
  %e2.1.i = select i1 %31, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %23
  %32 = add i64 %.015.i, -1
  %sext.i = shl i32 %27, 24
  %phitmp.i = ashr exact i32 %sext.i, 24
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %encwrite.exit, label %.lr.ph.i

encwrite.exit:                                    ; preds = %18, %.lr.ph.i
  %34 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 0
  %35 = load i32* %34, align 4, !tbaa !132
  %36 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 1
  %37 = load i32* %36, align 4, !tbaa !127
  %38 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 2
  %39 = load i32* %38, align 4, !tbaa !129
  %40 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 3
  %41 = load i16* %40, align 2, !tbaa !131
  %42 = zext i16 %41 to i32
  %43 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 5
  %44 = load i32* %43, align 4, !tbaa !130
  %45 = getelementptr inbounds %struct.sc_ent* %top_ten, i64 %6, i32 6
  %46 = load i32* %45, align 4, !tbaa !142
  %47 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([100 x i8]* @scoreline, i64 0, i64 0), i32 0, i64 100, i8* getelementptr inbounds ([22 x i8]* @.str20906, i64 0, i64 0), i32 %35, i32 %37, i32 %39, i32 %42, i32 %44, i32 %46) #8
  %48 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  br label %.lr.ph.i6

.lr.ph.i6:                                        ; preds = %58, %encwrite.exit
  %.06.i1 = phi i8* [ %59, %58 ], [ getelementptr inbounds ([100 x i8]* @scoreline, i64 0, i64 0), %encwrite.exit ]
  %.015.i2 = phi i64 [ %72, %58 ], [ 100, %encwrite.exit ]
  %fb.04.i3 = phi i32 [ %phitmp.i10, %58 ], [ 0, %encwrite.exit ]
  %e2.03.i4 = phi i8* [ %e2.1.i8, %58 ], [ getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), %encwrite.exit ]
  %e1.02.i5 = phi i8* [ %..i7, %58 ], [ getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), %encwrite.exit ]
  %49 = load i8* %.06.i1, align 1, !tbaa !28
  %50 = load i8* %e1.02.i5, align 1, !tbaa !28
  %51 = xor i8 %50, %49
  %52 = load i8* %e2.03.i4, align 1, !tbaa !28
  %53 = xor i8 %51, %52
  %54 = sext i8 %53 to i32
  %55 = xor i32 %54, %fb.04.i3
  %56 = tail call i32 @putc(i32 %55, %struct.__sFILE* %48) #8
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %encwrite.exit12, label %58

; <label>:58                                      ; preds = %.lr.ph.i6
  %59 = getelementptr inbounds i8* %.06.i1, i64 1
  %60 = getelementptr inbounds i8* %e1.02.i5, i64 1
  %61 = load i8* %e1.02.i5, align 1, !tbaa !28
  %62 = sext i8 %61 to i32
  %63 = getelementptr inbounds i8* %e2.03.i4, i64 1
  %64 = load i8* %e2.03.i4, align 1, !tbaa !28
  %65 = sext i8 %64 to i32
  %66 = mul nsw i32 %65, %62
  %67 = add nsw i32 %66, %fb.04.i3
  %68 = load i8* %60, align 1, !tbaa !28
  %69 = icmp eq i8 %68, 0
  %..i7 = select i1 %69, i8* getelementptr inbounds ([40 x i8]* @encstr, i64 0, i64 0), i8* %60
  %70 = load i8* %63, align 1, !tbaa !28
  %71 = icmp eq i8 %70, 0
  %e2.1.i8 = select i1 %71, i8* getelementptr inbounds ([38 x i8]* @statlist, i64 0, i64 0), i8* %63
  %72 = add i64 %.015.i2, -1
  %sext.i9 = shl i32 %67, 24
  %phitmp.i10 = ashr exact i32 %sext.i9, 24
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %encwrite.exit12, label %.lr.ph.i6

encwrite.exit12:                                  ; preds = %58, %.lr.ph.i6
  %74 = add i32 %i.013, 1
  %75 = load i32* @numscores, align 4, !tbaa !38
  %76 = icmp ult i32 %74, %75
  br i1 %76, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %encwrite.exit12, %3
  %77 = load %struct.__sFILE** @scoreboard, align 8, !tbaa !1
  tail call void @rewind(%struct.__sFILE* %77) #8
  br label %78

; <label>:78                                      ; preds = %._crit_edge, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @read_scroll() #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([5 x i8]* @.str918, i64 0, i64 0), i32 63) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %347, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 63
  br i1 %6, label %14, label %7

; <label>:7                                       ; preds = %3
  %8 = load i8* @terse, align 1, !tbaa !5, !range !7
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([31 x i8]* @.str1919, i64 0, i64 0)) #8
  br label %347

; <label>:12                                      ; preds = %7
  %13 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([16 x i8]* @.str2920, i64 0, i64 0)) #8
  br label %347

; <label>:14                                      ; preds = %3
  %15 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %16 = icmp eq %union.thing* %1, %15
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  store %union.thing* null, %union.thing** @cur_weapon, align 8, !tbaa !1
  br label %18

; <label>:18                                      ; preds = %17, %14
  %19 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5
  %20 = bitcast [13 x i8]* %19 to i32*
  %21 = load i32* %20, align 4, !tbaa !78
  %22 = icmp eq i32 %21, 1
  %23 = tail call %union.thing* @leave_pack(%union.thing* %1, i1 zeroext false, i1 zeroext false) #8
  %24 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %25 = bitcast i8* %24 to i32*
  %26 = load i32* %25, align 4, !tbaa !50
  switch i32 %26, label %.loopexit31 [
    i32 0, label %27
    i32 4, label %32
    i32 2, label %.lr.ph14
    i32 3, label %91
    i32 14, label %.lr.ph27
    i32 5, label %160
    i32 6, label %160
    i32 7, label %160
    i32 8, label %160
    i32 9, label %160
    i32 1, label %171
    i32 11, label %233
    i32 12, label %255
    i32 13, label %260
    i32 10, label %296
    i32 15, label %298
    i32 16, label %329
    i32 17, label %331
  ]

; <label>:27                                      ; preds = %18
  %28 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %29 = or i16 %28, 1
  store i16 %29, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %30 = tail call i8* @pick_color(i8* getelementptr inbounds ([4 x i8]* @.str4922, i64 0, i64 0)) #8
  %31 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([28 x i8]* @.str3921, i64 0, i64 0), i8* %30) #8
  br label %.loopexit31

; <label>:32                                      ; preds = %18
  %33 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %34 = icmp eq %union.thing* %33, null
  br i1 %34, label %.loopexit31, label %35

; <label>:35                                      ; preds = %32
  %36 = getelementptr inbounds %union.thing* %33, i64 0, i32 0, i32 9, i32 6
  %37 = load i32* %36, align 4, !tbaa !70
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* %36, align 4, !tbaa !70
  %39 = bitcast %union.thing* %33 to %struct.anon.0*
  %40 = getelementptr inbounds %struct.anon.0* %39, i64 0, i32 14
  %41 = load i32* %40, align 4, !tbaa !12
  %42 = and i32 %41, -2
  store i32 %42, i32* %40, align 4, !tbaa !12
  %43 = tail call i8* @pick_color(i8* getelementptr inbounds ([7 x i8]* @.str6924, i64 0, i64 0)) #8
  %44 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([33 x i8]* @.str5923, i64 0, i64 0), i8* %43) #8
  br label %.loopexit31

.lr.ph14:                                         ; preds = %18
  %45 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = add nsw i32 %48, 2
  %50 = add nsw i32 %46, 2
  %51 = shl nuw i64 %47, 32
  %sext = add i64 %51, -8589934592
  %52 = ashr exact i64 %sext, 32
  %53 = shl i64 %45, 32
  %sext58 = add i64 %53, -8589934592
  %54 = ashr exact i64 %sext58, 32
  br label %55

; <label>:55                                      ; preds = %.loopexit, %.lr.ph14
  %indvars.iv40 = phi i64 [ %indvars.iv.next41, %.loopexit ], [ %54, %.lr.ph14 ]
  %ch.013 = phi i8 [ %ch.3, %.loopexit ], [ 0, %.lr.ph14 ]
  %56 = trunc i64 %indvars.iv40 to i32
  %57 = icmp ult i32 %56, 80
  br i1 %57, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %55
  %58 = shl i32 %56, 5
  %59 = sext i32 %58 to i64
  br label %60

; <label>:60                                      ; preds = %77, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %77 ], [ %52, %.lr.ph ]
  %ch.110 = phi i8 [ %ch.2, %77 ], [ %ch.013, %.lr.ph ]
  %61 = trunc i64 %indvars.iv to i32
  %62 = icmp ult i32 %61, 24
  br i1 %62, label %63, label %77

; <label>:63                                      ; preds = %60
  %64 = add nsw i64 %indvars.iv, %59
  %65 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %64, i32 2
  %66 = load %union.thing** %65, align 8, !tbaa !43
  %67 = icmp eq %union.thing* %66, null
  br i1 %67, label %77, label %68

; <label>:68                                      ; preds = %63
  %69 = getelementptr inbounds %union.thing* %66, i64 0, i32 0, i32 8
  %70 = load i16* %69, align 2, !tbaa !18
  %71 = and i16 %70, 8192
  %72 = icmp eq i16 %71, 0
  br i1 %72, label %77, label %73

; <label>:73                                      ; preds = %68
  %74 = and i16 %70, -8449
  %75 = or i16 %74, 256
  store i16 %75, i16* %69, align 2, !tbaa !18
  %76 = add i8 %ch.110, 1
  br label %77

; <label>:77                                      ; preds = %73, %68, %63, %60
  %ch.2 = phi i8 [ %76, %73 ], [ %ch.110, %68 ], [ %ch.110, %63 ], [ %ch.110, %60 ]
  %78 = icmp slt i32 %61, %49
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %78, label %60, label %.loopexit

.loopexit:                                        ; preds = %77, %55
  %ch.3 = phi i8 [ %ch.013, %55 ], [ %ch.2, %77 ]
  %79 = icmp slt i32 %56, %50
  %indvars.iv.next41 = add nsw i64 %indvars.iv40, 1
  br i1 %79, label %55, label %._crit_edge

._crit_edge:                                      ; preds = %.loopexit
  %80 = icmp eq i8 %ch.3, 0
  br i1 %80, label %89, label %81

; <label>:81                                      ; preds = %._crit_edge
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([12 x i8]* @.str7925, i64 0, i64 0)) #8
  %82 = icmp sgt i8 %ch.3, 1
  br i1 %82, label %83, label %84

; <label>:83                                      ; preds = %81
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str8926, i64 0, i64 0)) #8
  br label %84

; <label>:84                                      ; preds = %83, %81
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([8 x i8]* @.str9927, i64 0, i64 0)) #8
  %85 = icmp eq i8 %ch.3, 1
  br i1 %85, label %86, label %87

; <label>:86                                      ; preds = %84
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([2 x i8]* @.str10928, i64 0, i64 0)) #8
  br label %87

; <label>:87                                      ; preds = %86, %84
  %88 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 2, i32 4), align 8, !tbaa !102
  br label %.loopexit31

; <label>:89                                      ; preds = %._crit_edge
  %90 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([33 x i8]* @.str11929, i64 0, i64 0)) #8
  br label %.loopexit31

; <label>:91                                      ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 3, i32 4), align 8, !tbaa !102
  %92 = tail call i32 @spread(i32 5) #8
  %93 = tail call i32 @rnd(i32 %92) #8
  %94 = add nsw i32 %93, 4
  %95 = load i32* @no_command, align 4, !tbaa !38
  %96 = add nsw i32 %94, %95
  store i32 %96, i32* @no_command, align 4, !tbaa !38
  %97 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %98 = and i16 %97, -8193
  store i16 %98, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %99 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([16 x i8]* @.str12930, i64 0, i64 0)) #8
  br label %.loopexit31

.lr.ph27:                                         ; preds = %18
  %100 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %101 = add nsw i32 %100, -1
  %102 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %103 = trunc i64 %102 to i32
  %104 = lshr i64 %102, 32
  %105 = trunc i64 %104 to i32
  br label %.lr.ph20

.lr.ph20:                                         ; preds = %._crit_edge21, %.lr.ph27
  %106 = phi i32 [ %105, %.lr.ph27 ], [ %150, %._crit_edge21 ]
  %107 = phi i32 [ %103, %.lr.ph27 ], [ %146, %._crit_edge21 ]
  %y.124 = phi i32 [ %101, %.lr.ph27 ], [ %151, %._crit_edge21 ]
  %i.023 = phi i32 [ 0, %.lr.ph27 ], [ %i.2, %._crit_edge21 ]
  %108 = add nsw i32 %107, -1
  %109 = sext i32 %108 to i64
  br label %110

; <label>:110                                     ; preds = %144, %.lr.ph20
  %111 = phi i32 [ %150, %144 ], [ %106, %.lr.ph20 ]
  %indvars.iv42 = phi i64 [ %indvars.iv.next43, %144 ], [ %109, %.lr.ph20 ]
  %112 = phi i32 [ %146, %144 ], [ %107, %.lr.ph20 ]
  %i.118 = phi i32 [ %i.2, %144 ], [ %i.023, %.lr.ph20 ]
  %113 = icmp eq i32 %y.124, %111
  %114 = trunc i64 %indvars.iv42 to i32
  %115 = icmp eq i32 %114, %112
  %or.cond = and i1 %113, %115
  br i1 %or.cond, label %144, label %116

; <label>:116                                     ; preds = %110
  %117 = shl i32 %114, 5
  %118 = add nsw i32 %117, %y.124
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %119, i32 2
  %121 = load %union.thing** %120, align 8, !tbaa !43
  %122 = icmp eq %union.thing* %121, null
  br i1 %122, label %125, label %123

; <label>:123                                     ; preds = %116
  %124 = getelementptr inbounds %union.thing* %121, i64 0, i32 0, i32 5
  br label %127

; <label>:125                                     ; preds = %116
  %126 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %119, i32 0
  br label %127

; <label>:127                                     ; preds = %125, %123
  %.sink.in = phi i8* [ %124, %123 ], [ %126, %125 ]
  %.sink = load i8* %.sink.in, align 1
  %128 = sext i8 %.sink to i32
  %129 = tail call i32 @step_ok(i32 %128) #8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %144, label %131

; <label>:131                                     ; preds = %127
  %132 = icmp eq i8 %.sink, 63
  br i1 %132, label %133, label %139

; <label>:133                                     ; preds = %131
  %134 = tail call %union.thing* @find_obj(i32 %y.124, i32 %114) #8
  %135 = getelementptr inbounds %union.thing* %134, i64 0, i32 0, i32 9, i32 5, i64 4
  %136 = bitcast i8* %135 to i32*
  %137 = load i32* %136, align 4, !tbaa !50
  %138 = icmp eq i32 %137, 10
  br i1 %138, label %144, label %139

; <label>:139                                     ; preds = %133, %131
  %140 = add nsw i32 %i.118, 1
  %141 = tail call i32 @rnd(i32 %140) #8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

; <label>:143                                     ; preds = %139
  store i32 %y.124, i32* getelementptr inbounds (%struct.coord* @read_scroll.mp, i64 0, i32 1), align 4, !tbaa !20
  store i32 %114, i32* getelementptr inbounds (%struct.coord* @read_scroll.mp, i64 0, i32 0), align 4, !tbaa !21
  br label %144

; <label>:144                                     ; preds = %143, %139, %133, %127, %110
  %i.2 = phi i32 [ %i.118, %133 ], [ %140, %143 ], [ %140, %139 ], [ %i.118, %127 ], [ %i.118, %110 ]
  %145 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %146 = trunc i64 %145 to i32
  %147 = add nsw i32 %146, 1
  %148 = icmp slt i32 %114, %147
  %indvars.iv.next43 = add nsw i64 %indvars.iv42, 1
  %149 = lshr i64 %145, 32
  %150 = trunc i64 %149 to i32
  br i1 %148, label %110, label %._crit_edge21

._crit_edge21:                                    ; preds = %144
  %151 = add nsw i32 %y.124, 1
  %152 = add nsw i32 %150, 1
  %153 = icmp slt i32 %y.124, %152
  br i1 %153, label %.lr.ph20, label %._crit_edge28

._crit_edge28:                                    ; preds = %._crit_edge21
  %154 = icmp eq i32 %i.2, 0
  br i1 %154, label %155, label %157

; <label>:155                                     ; preds = %._crit_edge28
  %156 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([48 x i8]* @.str13931, i64 0, i64 0)) #8
  br label %.loopexit31

; <label>:157                                     ; preds = %._crit_edge28
  %158 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %159 = tail call signext i8 @randmonster(i1 zeroext false) #8
  tail call void @new_monster(%union.thing* %158, i8 signext %159, %struct.coord* @read_scroll.mp) #8
  br label %.loopexit31

; <label>:160                                     ; preds = %18, %18, %18, %18, %18
  %161 = sext i32 %26 to i64
  %162 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %161, i32 4
  store i8 1, i8* %162, align 8, !tbaa !102
  %163 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %161, i32 0
  %164 = load i8** %163, align 8, !tbaa !66
  %165 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([28 x i8]* @.str14932, i64 0, i64 0), i8* %164) #8
  %166 = load i32* %25, align 4, !tbaa !50
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [10 x i8]* @read_scroll.id_type, i64 0, i64 %167
  %169 = load i8* %168, align 1, !tbaa !28
  %170 = sext i8 %169 to i32
  tail call void @whatis(i1 zeroext true, i32 %170) #8
  br label %.loopexit31

; <label>:171                                     ; preds = %18
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 1, i32 4), align 8, !tbaa !102
  %172 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([36 x i8]* @.str15933, i64 0, i64 0)) #8
  br label %.preheader

.preheader:                                       ; preds = %232, %171
  %indvars.iv46 = phi i64 [ 1, %171 ], [ %indvars.iv.next47, %232 ]
  br label %173

; <label>:173                                     ; preds = %.thread9, %.preheader
  %indvars.iv44 = phi i64 [ 0, %.preheader ], [ %indvars.iv.next45, %.thread9 ]
  %174 = shl i64 %indvars.iv44, 5
  %175 = add nsw i64 %174, %indvars.iv46
  %176 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 0
  %177 = load i8* %176, align 8, !tbaa !33
  %178 = sext i8 %177 to i32
  switch i32 %178, label %._crit_edge53 [
    i32 43, label %212
    i32 37, label %212
    i32 45, label %179
    i32 124, label %179
    i32 32, label %186
    i32 35, label %._crit_edge55
    i32 46, label %201
  ]

._crit_edge55:                                    ; preds = %173
  %.phi.trans.insert56 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 1
  %.pre57 = load i8* %.phi.trans.insert56, align 1, !tbaa !36
  br label %193

._crit_edge53:                                    ; preds = %173
  %.phi.trans.insert = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 1
  %.pre54 = load i8* %.phi.trans.insert, align 1, !tbaa !36
  br label %208

; <label>:179                                     ; preds = %173, %173
  %180 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 1
  %181 = load i8* %180, align 1, !tbaa !36
  %182 = and i8 %181, 16
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %184, label %212

; <label>:184                                     ; preds = %179
  store i8 43, i8* %176, align 8, !tbaa !33
  %185 = or i8 %181, 16
  store i8 %185, i8* %180, align 1, !tbaa !36
  br label %.thread

; <label>:186                                     ; preds = %173
  %187 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 1
  %188 = load i8* %187, align 1, !tbaa !36
  %189 = and i8 %188, 16
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %208

; <label>:191                                     ; preds = %186
  %192 = or i8 %188, 16
  store i8 %192, i8* %187, align 1, !tbaa !36
  store i8 35, i8* %176, align 8, !tbaa !33
  br label %193

; <label>:193                                     ; preds = %208, %191, %._crit_edge55
  %194 = phi i8 [ %.pre57, %._crit_edge55 ], [ %209, %208 ], [ %192, %191 ]
  %195 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 1
  %196 = and i8 %194, 16
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %198, label %199

; <label>:198                                     ; preds = %193
  store i8 35, i8* %176, align 8, !tbaa !33
  br label %199

; <label>:199                                     ; preds = %198, %193
  %200 = or i8 %194, 80
  store i8 %200, i8* %195, align 1, !tbaa !36
  br label %.thread

; <label>:201                                     ; preds = %173
  %202 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 1
  %203 = load i8* %202, align 1, !tbaa !36
  %204 = and i8 %203, 16
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %206, label %.thread9

; <label>:206                                     ; preds = %201
  store i8 94, i8* %176, align 8, !tbaa !33
  %207 = or i8 %203, 80
  store i8 %207, i8* %202, align 1, !tbaa !36
  br label %.thread

; <label>:208                                     ; preds = %186, %._crit_edge53
  %209 = phi i8 [ %.pre54, %._crit_edge53 ], [ %188, %186 ]
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %193, label %.thread9

.thread:                                          ; preds = %206, %199, %184
  %ch.4.ph = phi i8 [ 35, %199 ], [ 94, %206 ], [ 43, %184 ]
  %211 = zext i8 %ch.4.ph to i32
  br label %214

; <label>:212                                     ; preds = %179, %173, %173
  %213 = icmp eq i8 %177, 32
  br i1 %213, label %.thread9, label %214

; <label>:214                                     ; preds = %212, %.thread
  %215 = phi i32 [ %211, %.thread ], [ %178, %212 ]
  %ch.47 = phi i8 [ %ch.4.ph, %.thread ], [ %177, %212 ]
  %216 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %175, i32 2
  %217 = load %union.thing** %216, align 8, !tbaa !43
  %cond = icmp eq %union.thing* %217, null
  br i1 %cond, label %223, label %218

; <label>:218                                     ; preds = %214
  %219 = getelementptr inbounds %union.thing* %217, i64 0, i32 0, i32 6
  store i8 %ch.47, i8* %219, align 1, !tbaa !42
  %220 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %221 = and i16 %220, 16384
  %222 = icmp eq i16 %221, 0
  br i1 %222, label %223, label %.thread9

; <label>:223                                     ; preds = %218, %214
  %224 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %225 = trunc i64 %indvars.iv44 to i32
  %226 = trunc i64 %indvars.iv46 to i32
  %227 = tail call i32 @wmove(%struct._win_st* %224, i32 %226, i32 %225) #8
  %228 = icmp eq i32 %227, -1
  br i1 %228, label %.thread9, label %229

; <label>:229                                     ; preds = %223
  %230 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %231 = tail call i32 @waddch(%struct._win_st* %230, i32 %215) #8
  br label %.thread9

.thread9:                                         ; preds = %229, %223, %218, %212, %208, %201
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %exitcond = icmp eq i64 %indvars.iv.next45, 80
  br i1 %exitcond, label %232, label %173

; <label>:232                                     ; preds = %.thread9
  %indvars.iv.next47 = add nuw nsw i64 %indvars.iv46, 1
  %exitcond48 = icmp eq i64 %indvars.iv.next47, 23
  br i1 %exitcond48, label %.loopexit31, label %.preheader

; <label>:233                                     ; preds = %18
  %234 = load %struct._win_st** @hw, align 8, !tbaa !1
  %235 = tail call i32 @wclear(%struct._win_st* %234) #8
  %obj.033 = load %union.thing** @lvl_obj, align 8
  %236 = icmp eq %union.thing* %obj.033, null
  br i1 %236, label %._crit_edge38.thread, label %.lr.ph37

.lr.ph37:                                         ; preds = %249, %233
  %obj.035 = phi %union.thing* [ %obj.0, %249 ], [ %obj.033, %233 ]
  %ch.534 = phi i8 [ %ch.6, %249 ], [ 0, %233 ]
  %237 = getelementptr inbounds %union.thing* %obj.035, i64 0, i32 0, i32 2, i32 0
  %238 = load i32* %237, align 4, !tbaa !8
  %239 = icmp eq i32 %238, 58
  br i1 %239, label %240, label %249

; <label>:240                                     ; preds = %.lr.ph37
  %241 = load %struct._win_st** @hw, align 8, !tbaa !1
  %242 = getelementptr inbounds %union.thing* %obj.035, i64 0, i32 0, i32 2, i32 1
  %243 = getelementptr inbounds i32* %242, i64 1
  %244 = load i32* %243, align 4, !tbaa !41
  %245 = load i32* %242, align 4, !tbaa !40
  %246 = tail call i32 @wmove(%struct._win_st* %241, i32 %244, i32 %245) #8
  %247 = load %struct._win_st** @hw, align 8, !tbaa !1
  %248 = tail call i32 @waddch(%struct._win_st* %247, i32 58) #8
  br label %249

; <label>:249                                     ; preds = %240, %.lr.ph37
  %ch.6 = phi i8 [ 1, %240 ], [ %ch.534, %.lr.ph37 ]
  %250 = getelementptr inbounds %union.thing* %obj.035, i64 0, i32 0, i32 0
  %obj.0 = load %union.thing** %250, align 8
  %251 = icmp eq %union.thing* %obj.0, null
  br i1 %251, label %._crit_edge38, label %.lr.ph37

._crit_edge38:                                    ; preds = %249
  %252 = icmp eq i8 %ch.6, 0
  br i1 %252, label %._crit_edge38.thread, label %253

; <label>:253                                     ; preds = %._crit_edge38
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 11, i32 4), align 8, !tbaa !102
  tail call void @show_win(i8* getelementptr inbounds ([46 x i8]* @.str16934, i64 0, i64 0)) #8
  br label %.loopexit31

._crit_edge38.thread:                             ; preds = %._crit_edge38, %233
  %254 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([18 x i8]* @.str17935, i64 0, i64 0)) #8
  br label %.loopexit31

; <label>:255                                     ; preds = %18
  %256 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  tail call void (...)* bitcast (void ()* @teleport to void (...)*)() #8
  %257 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %258 = icmp eq %struct.room* %256, %257
  br i1 %258, label %.loopexit31, label %259

; <label>:259                                     ; preds = %255
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 12, i32 4), align 8, !tbaa !102
  br label %.loopexit31

; <label>:260                                     ; preds = %18
  %261 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %262 = icmp eq %union.thing* %261, null
  br i1 %262, label %267, label %263

; <label>:263                                     ; preds = %260
  %264 = getelementptr inbounds %union.thing* %261, i64 0, i32 0, i32 2, i32 0
  %265 = load i32* %264, align 4, !tbaa !8
  %266 = icmp eq i32 %265, 41
  br i1 %266, label %269, label %267

; <label>:267                                     ; preds = %263, %260
  %268 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([33 x i8]* @.str11929, i64 0, i64 0)) #8
  br label %.loopexit31

; <label>:269                                     ; preds = %263
  %270 = bitcast %union.thing* %261 to %struct.anon.0*
  %271 = getelementptr inbounds %struct.anon.0* %270, i64 0, i32 14
  %272 = load i32* %271, align 4, !tbaa !12
  %273 = and i32 %272, -2
  store i32 %273, i32* %271, align 4, !tbaa !12
  %274 = tail call i32 @rnd(i32 2) #8
  %275 = icmp eq i32 %274, 0
  %276 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  br i1 %275, label %277, label %282

; <label>:277                                     ; preds = %269
  %278 = getelementptr inbounds %union.thing* %276, i64 0, i32 0, i32 9, i32 5, i64 8
  %279 = bitcast i8* %278 to i32*
  %280 = load i32* %279, align 4, !tbaa !68
  %281 = add nsw i32 %280, 1
  store i32 %281, i32* %279, align 4, !tbaa !68
  br label %287

; <label>:282                                     ; preds = %269
  %283 = getelementptr inbounds %union.thing* %276, i64 0, i32 0, i32 9, i32 5, i64 12
  %284 = bitcast i8* %283 to i32*
  %285 = load i32* %284, align 4, !tbaa !69
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %284, align 4, !tbaa !69
  br label %287

; <label>:287                                     ; preds = %282, %277
  %288 = getelementptr inbounds %union.thing* %276, i64 0, i32 0, i32 9, i32 5, i64 4
  %289 = bitcast i8* %288 to i32*
  %290 = load i32* %289, align 4, !tbaa !50
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %291, i32 0
  %293 = load i8** %292, align 8, !tbaa !66
  %294 = tail call i8* @pick_color(i8* getelementptr inbounds ([5 x i8]* @.str19937, i64 0, i64 0)) #8
  %295 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([30 x i8]* @.str18936, i64 0, i64 0), i8* %293, i8* %294) #8
  br label %.loopexit31

; <label>:296                                     ; preds = %18
  %297 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([43 x i8]* @.str20938, i64 0, i64 0)) #8
  br label %.loopexit31

; <label>:298                                     ; preds = %18
  %299 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %300 = icmp eq %union.thing* %299, null
  br i1 %300, label %uncurse.exit, label %301

; <label>:301                                     ; preds = %298
  %302 = bitcast %union.thing* %299 to %struct.anon.0*
  %303 = getelementptr inbounds %struct.anon.0* %302, i64 0, i32 14
  %304 = load i32* %303, align 4, !tbaa !12
  %305 = and i32 %304, -2
  store i32 %305, i32* %303, align 4, !tbaa !12
  br label %uncurse.exit

uncurse.exit:                                     ; preds = %301, %298
  %306 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %307 = icmp eq %union.thing* %306, null
  br i1 %307, label %uncurse.exit6, label %308

; <label>:308                                     ; preds = %uncurse.exit
  %309 = bitcast %union.thing* %306 to %struct.anon.0*
  %310 = getelementptr inbounds %struct.anon.0* %309, i64 0, i32 14
  %311 = load i32* %310, align 4, !tbaa !12
  %312 = and i32 %311, -2
  store i32 %312, i32* %310, align 4, !tbaa !12
  br label %uncurse.exit6

uncurse.exit6:                                    ; preds = %308, %uncurse.exit
  %313 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %314 = icmp eq %union.thing* %313, null
  br i1 %314, label %uncurse.exit5, label %315

; <label>:315                                     ; preds = %uncurse.exit6
  %316 = bitcast %union.thing* %313 to %struct.anon.0*
  %317 = getelementptr inbounds %struct.anon.0* %316, i64 0, i32 14
  %318 = load i32* %317, align 4, !tbaa !12
  %319 = and i32 %318, -2
  store i32 %319, i32* %317, align 4, !tbaa !12
  br label %uncurse.exit5

uncurse.exit5:                                    ; preds = %315, %uncurse.exit6
  %320 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %321 = icmp eq %union.thing* %320, null
  br i1 %321, label %uncurse.exit4, label %322

; <label>:322                                     ; preds = %uncurse.exit5
  %323 = bitcast %union.thing* %320 to %struct.anon.0*
  %324 = getelementptr inbounds %struct.anon.0* %323, i64 0, i32 14
  %325 = load i32* %324, align 4, !tbaa !12
  %326 = and i32 %325, -2
  store i32 %326, i32* %324, align 4, !tbaa !12
  br label %uncurse.exit4

uncurse.exit4:                                    ; preds = %322, %uncurse.exit5
  %327 = tail call i8* @choose_str(i8* getelementptr inbounds ([44 x i8]* @.str21939, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8]* @.str22940, i64 0, i64 0)) #8
  %328 = tail call i32 (i8*, ...)* @msg(i8* %327) #8
  br label %.loopexit31

; <label>:329                                     ; preds = %18
  tail call void (...)* bitcast (void ()* @aggravate to void (...)*)() #8
  %330 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([38 x i8]* @.str23941, i64 0, i64 0)) #8
  br label %.loopexit31

; <label>:331                                     ; preds = %18
  %332 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %333 = icmp eq %union.thing* %332, null
  br i1 %333, label %341, label %334

; <label>:334                                     ; preds = %331
  %335 = bitcast %union.thing* %332 to %struct.anon.0*
  %336 = getelementptr inbounds %struct.anon.0* %335, i64 0, i32 14
  %337 = load i32* %336, align 4, !tbaa !12
  %338 = or i32 %337, 32
  store i32 %338, i32* %336, align 4, !tbaa !12
  %339 = tail call i8* @pick_color(i8* getelementptr inbounds ([5 x i8]* @.str25943, i64 0, i64 0)) #8
  %340 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([48 x i8]* @.str24942, i64 0, i64 0), i8* %339) #8
  br label %.loopexit31

; <label>:341                                     ; preds = %331
  %342 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([33 x i8]* @.str11929, i64 0, i64 0)) #8
  br label %.loopexit31

.loopexit31:                                      ; preds = %341, %334, %329, %uncurse.exit4, %296, %287, %267, %259, %255, %._crit_edge38.thread, %253, %232, %160, %157, %155, %91, %89, %87, %35, %32, %27, %18
  tail call void @look(i1 zeroext true) #8
  tail call void (...)* bitcast (void ()* @status to void (...)*)() #8
  %343 = load i32* %25, align 4, !tbaa !50
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %344
  tail call void @call_it(%struct.obj_info* %345) #8
  br i1 %22, label %346, label %347

; <label>:346                                     ; preds = %.loopexit31
  tail call void @discard(%union.thing* %1) #8
  br label %347

; <label>:347                                     ; preds = %346, %.loopexit31, %12, %10, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @uncurse(%union.thing* %obj) #0 {
  %1 = icmp eq %union.thing* %obj, null
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast %union.thing* %obj to %struct.anon.0*
  %4 = getelementptr inbounds %struct.anon.0* %3, i64 0, i32 14
  %5 = load i32* %4, align 4, !tbaa !12
  %6 = and i32 %5, -2
  store i32 %6, i32* %4, align 4, !tbaa !12
  br label %7

; <label>:7                                       ; preds = %2, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write(%struct.__sFILE* %savef, i8* %ptr, i64 %size) #0 {
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %5, label %1

; <label>:1                                       ; preds = %0
  %2 = tail call i64 @encwrite(i8* %ptr, i64 %size, %struct.__sFILE* %savef) #8
  %3 = icmp eq i64 %2, %size
  br i1 %3, label %._crit_edge, label %4

._crit_edge:                                      ; preds = %1
  %.b.pre = load i1* @write_error, align 1
  br label %5

; <label>:4                                       ; preds = %1
  store i1 true, i1* @write_error, align 1
  br label %5

; <label>:5                                       ; preds = %4, %._crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %._crit_edge ], [ true, %4 ]
  %6 = zext i1 %.b1.sink to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read(%struct.__sFILE* %inf, i8* %ptr, i64 %size) #0 {
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %6, label %1

; <label>:1                                       ; preds = %0
  %2 = tail call i64 @encread(i8* %ptr, i64 %size, %struct.__sFILE* %inf) #8
  %3 = icmp eq i64 %2, %size
  br i1 %3, label %._crit_edge, label %4

._crit_edge:                                      ; preds = %1
  %.b.pre = load i1* @read_error, align 1
  br label %5

; <label>:4                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %5

; <label>:5                                       ; preds = %4, %._crit_edge
  %.b = phi i1 [ %.b.pre, %._crit_edge ], [ true, %4 ]
  %.b4 = load i1* @format_error, align 1
  %..b = or i1 %.b4, %.b
  br label %6

; <label>:6                                       ; preds = %5, %0
  %..b2.sink = phi i1 [ %..b, %5 ], [ true, %0 ]
  %7 = zext i1 %..b2.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_int(%struct.__sFILE* %savef, i32 %c) #0 {
  %1 = alloca i32, align 4
  store i32 %c, i32* %1, align 4, !tbaa !38
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %.rs_write.exit_crit_edge, label %6

.rs_write.exit_crit_edge:                         ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %6, %.rs_write.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %6 ]
  %7 = zext i1 %.b1.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_int(%struct.__sFILE* %inf, i32* nocapture %i) #0 {
  %input = alloca i32, align 4
  store i32 0, i32* %input, align 4, !tbaa !38
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %8, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input to i8*
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge, label %5

.rs_read.exit_crit_edge:                          ; preds = %1
  %.b.pre = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %5, %.rs_read.exit_crit_edge
  %.b = phi i1 [ %.b.pre, %.rs_read.exit_crit_edge ], [ true, %5 ]
  %6 = load i32* %input, align 4, !tbaa !38
  store i32 %6, i32* %i, align 4, !tbaa !38
  %.b4 = load i1* @format_error, align 1
  %7 = or i1 %.b4, %.b
  br label %8

; <label>:8                                       ; preds = %rs_read.exit, %0
  %.sink = phi i1 [ %7, %rs_read.exit ], [ true, %0 ]
  %9 = zext i1 %.sink to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_char(%struct.__sFILE* %savef, i8 signext %c) #0 {
  %1 = alloca i8, align 1
  store i8 %c, i8* %1, align 1, !tbaa !28
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = call i64 @encwrite(i8* %1, i64 1, %struct.__sFILE* %savef) #8
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %.rs_write.exit_crit_edge, label %5

.rs_write.exit_crit_edge:                         ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:5                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %5, %.rs_write.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %5 ]
  %6 = zext i1 %.b1.sink to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_char(%struct.__sFILE* %inf, i8* %c) #0 {
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %5, label %1

; <label>:1                                       ; preds = %0
  %2 = tail call i64 @encread(i8* %c, i64 1, %struct.__sFILE* %inf) #8
  %3 = icmp eq i64 %2, 1
  br i1 %3, label %.rs_read.exit_crit_edge, label %4

.rs_read.exit_crit_edge:                          ; preds = %1
  %.b.pre = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:4                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %4, %.rs_read.exit_crit_edge
  %.b = phi i1 [ %.b.pre, %.rs_read.exit_crit_edge ], [ true, %4 ]
  %.b4 = load i1* @format_error, align 1
  %..b = or i1 %.b4, %.b
  br label %5

; <label>:5                                       ; preds = %rs_read.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read.exit ], [ true, %0 ]
  %6 = zext i1 %..b2.sink to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_chars(%struct.__sFILE* %savef, i8* %c, i32 %count) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 %count, i32* %1, align 4, !tbaa !38
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %rs_write_int.exit, label %rs_write_int.exit.thread

rs_write_int.exit.thread:                         ; preds = %2
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %3) #8
  br label %rs_write.exit

rs_write_int.exit:                                ; preds = %2
  %.b1.i2.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %3) #8
  %6 = sext i32 %count to i64
  br i1 %.b1.i2.pre, label %rs_write.exit, label %7

; <label>:7                                       ; preds = %rs_write_int.exit
  %8 = call i64 @encwrite(i8* %c, i64 %6, %struct.__sFILE* %savef) #8
  %9 = icmp eq i64 %8, %6
  br i1 %9, label %.rs_write.exit_crit_edge, label %10

.rs_write.exit_crit_edge:                         ; preds = %7
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:10                                      ; preds = %7
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %10, %.rs_write.exit_crit_edge, %rs_write_int.exit, %rs_write_int.exit.thread, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %rs_write_int.exit ], [ true, %10 ], [ true, %rs_write_int.exit.thread ]
  %11 = zext i1 %.b1.sink to i32
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_chars(%struct.__sFILE* %inf, i8* %i, i32 %count) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %14, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, %count
  br i1 %7, label %8, label %.thread

.thread:                                          ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  %.b2.i513 = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:8                                       ; preds = %rs_read_int.exit
  %.b3.i6.pre = load i1* @format_error, align 1
  %9 = sext i32 %count to i64
  %.b2.i5 = load i1* @read_error, align 1
  %or.cond.i7 = or i1 %.b2.i5, %.b3.i6.pre
  br i1 %or.cond.i7, label %rs_read.exit, label %10

; <label>:10                                      ; preds = %8
  %11 = call i64 @encread(i8* %i, i64 %9, %struct.__sFILE* %inf) #8
  %12 = icmp eq i64 %11, %9
  br i1 %12, label %.rs_read.exit_crit_edge, label %13

.rs_read.exit_crit_edge:                          ; preds = %10
  %.b.pre = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:13                                      ; preds = %10
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %13, %.rs_read.exit_crit_edge, %8, %.thread
  %.b = phi i1 [ %.b.pre, %.rs_read.exit_crit_edge ], [ true, %13 ], [ %.b2.i5, %8 ], [ %.b2.i513, %.thread ]
  %.b4 = load i1* @format_error, align 1
  %..b = or i1 %.b4, %.b
  br label %14

; <label>:14                                      ; preds = %rs_read.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read.exit ], [ true, %0 ]
  %15 = zext i1 %..b2.sink to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_ints(%struct.__sFILE* %savef, i32* nocapture readonly %c, i32 %count) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %.critedge, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 %count, i32* %2, align 4, !tbaa !38
  %5 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %rs_write_int.exit.preheader, label %7

; <label>:7                                       ; preds = %3
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %7, %3
  %8 = icmp sgt i32 %count, 0
  br i1 %8, label %.lr.ph, label %rs_write_int.exit.preheader..critedge.loopexit_crit_edge

rs_write_int.exit.preheader..critedge.loopexit_crit_edge: ; preds = %rs_write_int.exit.preheader
  %.b.pre.pre = load i1* @write_error, align 1
  br label %.critedge

.lr.ph:                                           ; preds = %rs_write_int.exit.preheader
  %9 = bitcast i32* %1 to i8*
  %.b1.i2.pre = load i1* @write_error, align 1
  br label %12

rs_write_int.exit:                                ; preds = %.rs_write.exit_crit_edge.i4
  %10 = trunc i64 %indvars.iv.next to i32
  %11 = icmp slt i32 %10, %count
  br i1 %11, label %12, label %.critedge

; <label>:12                                      ; preds = %rs_write_int.exit, %.lr.ph
  %.b1.i2 = phi i1 [ %.b1.i2.pre, %.lr.ph ], [ false, %rs_write_int.exit ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_write_int.exit ]
  %13 = getelementptr inbounds i32* %c, i64 %indvars.iv
  %14 = load i32* %13, align 4, !tbaa !38
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 %14, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i2, label %.critedge, label %15

; <label>:15                                      ; preds = %12
  %16 = call i64 @encwrite(i8* %9, i64 4, %struct.__sFILE* %savef) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %.rs_write.exit_crit_edge.i4, label %.critedge7

.rs_write.exit_crit_edge.i4:                      ; preds = %15
  %.b.pre.i3 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %9) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %.b.pre.i3, label %.critedge, label %rs_write_int.exit

.critedge7:                                       ; preds = %15
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %9) #8
  br label %.critedge

.critedge:                                        ; preds = %.critedge7, %.rs_write.exit_crit_edge.i4, %12, %rs_write_int.exit, %rs_write_int.exit.preheader..critedge.loopexit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ true, %.critedge7 ], [ %.b.pre.pre, %rs_write_int.exit.preheader..critedge.loopexit_crit_edge ], [ false, %rs_write_int.exit ], [ true, %.rs_write.exit_crit_edge.i4 ], [ true, %12 ]
  %18 = zext i1 %.b1.sink to i32
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_ints(%struct.__sFILE* %inf, i32* nocapture %i, i32 %count) #0 {
  %input.i5 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %21, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, %count
  br i1 %7, label %rs_read_int.exit.thread.preheader, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %rs_read_int.exit.thread.preheader

rs_read_int.exit.thread.preheader:                ; preds = %8, %rs_read_int.exit
  %9 = icmp sgt i32 %count, 0
  br i1 %9, label %.lr.ph, label %rs_read_int.exit.thread.preheader..critedge_crit_edge

rs_read_int.exit.thread.preheader..critedge_crit_edge: ; preds = %rs_read_int.exit.thread.preheader
  %.b4.pre = load i1* @format_error, align 1
  %.b.pre = load i1* @read_error, align 1
  br label %.critedge

.lr.ph:                                           ; preds = %rs_read_int.exit.thread.preheader
  %10 = bitcast i32* %input.i5 to i8*
  %.b2.i6.pre = load i1* @read_error, align 1
  %.b3.i7.pre = load i1* @format_error, align 1
  br label %13

rs_read_int.exit.thread:                          ; preds = %rs_read.exit.i13
  %11 = trunc i64 %indvars.iv.next to i32
  %12 = icmp slt i32 %11, %count
  br i1 %12, label %13, label %.critedge

; <label>:13                                      ; preds = %rs_read_int.exit.thread, %.lr.ph
  %.b3.i7 = phi i1 [ %.b3.i7.pre, %.lr.ph ], [ false, %rs_read_int.exit.thread ]
  %.b2.i6 = phi i1 [ %.b2.i6.pre, %.lr.ph ], [ false, %rs_read_int.exit.thread ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_read_int.exit.thread ]
  %14 = getelementptr inbounds i32* %i, i64 %indvars.iv
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i5, align 4, !tbaa !38
  %or.cond.i8 = or i1 %.b2.i6, %.b3.i7
  br i1 %or.cond.i8, label %.critedge, label %15

; <label>:15                                      ; preds = %13
  %16 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %.rs_read.exit_crit_edge.i10, label %18

.rs_read.exit_crit_edge.i10:                      ; preds = %15
  %.b.pre.i9 = load i1* @read_error, align 1
  br label %rs_read.exit.i13

; <label>:18                                      ; preds = %15
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i13

rs_read.exit.i13:                                 ; preds = %18, %.rs_read.exit_crit_edge.i10
  %.b.i11 = phi i1 [ %.b.pre.i9, %.rs_read.exit_crit_edge.i10 ], [ true, %18 ]
  %19 = load i32* %input.i5, align 4, !tbaa !38
  store i32 %19, i32* %14, align 4, !tbaa !38
  %.b4.i12 = load i1* @format_error, align 1
  %20 = or i1 %.b4.i12, %.b.i11
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %20, label %.critedge, label %rs_read_int.exit.thread

.critedge:                                        ; preds = %rs_read.exit.i13, %13, %rs_read_int.exit.thread, %rs_read_int.exit.thread.preheader..critedge_crit_edge
  %.b = phi i1 [ %.b.pre, %rs_read_int.exit.thread.preheader..critedge_crit_edge ], [ false, %rs_read_int.exit.thread ], [ %.b2.i6, %13 ], [ %.b.i11, %rs_read.exit.i13 ]
  %.b4 = phi i1 [ %.b4.pre, %rs_read_int.exit.thread.preheader..critedge_crit_edge ], [ false, %rs_read_int.exit.thread ], [ %.b3.i7, %13 ], [ %.b4.i12, %rs_read.exit.i13 ]
  %..b = or i1 %.b4, %.b
  br label %21

; <label>:21                                      ; preds = %.critedge, %0
  %..b2.sink = phi i1 [ %..b, %.critedge ], [ true, %0 ]
  %22 = zext i1 %..b2.sink to i32
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_boolean(%struct.__sFILE* %savef, i32 %c) #0 {
  %buf = alloca i8, align 1
  %not. = icmp ne i32 %c, 0
  %1 = zext i1 %not. to i8
  store i8 %1, i8* %buf, align 1, !tbaa !28
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = call i64 @encwrite(i8* %buf, i64 1, %struct.__sFILE* %savef) #8
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %.rs_write.exit_crit_edge, label %5

.rs_write.exit_crit_edge:                         ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:5                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %5, %.rs_write.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %5 ]
  %6 = zext i1 %.b1.sink to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_boolean(%struct.__sFILE* %inf, i8* nocapture %i) #0 {
  %buf = alloca i8, align 1
  store i8 0, i8* %buf, align 1, !tbaa !28
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %8, label %1

; <label>:1                                       ; preds = %0
  %2 = call i64 @encread(i8* %buf, i64 1, %struct.__sFILE* %inf) #8
  %3 = icmp eq i64 %2, 1
  br i1 %3, label %rs_read.exit, label %4

; <label>:4                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %4, %1
  %5 = load i8* %buf, align 1, !tbaa !28
  %6 = icmp ne i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %i, align 1, !tbaa !5
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %8

; <label>:8                                       ; preds = %rs_read.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read.exit ], [ true, %0 ]
  %9 = zext i1 %..b2.sink to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_booleans(%struct.__sFILE* %savef, i8* nocapture readonly %c, i32 %count) #0 {
  %buf.i = alloca i8, align 1
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %.critedge, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 %count, i32* %1, align 4, !tbaa !38
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %rs_write_int.exit.preheader, label %6

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %6, %2
  %7 = icmp sgt i32 %count, 0
  %.b1.i2.pre = load i1* @write_error, align 1
  br i1 %7, label %.lr.ph, label %.critedge

rs_write_int.exit:                                ; preds = %.rs_write.exit_crit_edge.i4
  %8 = trunc i64 %indvars.iv.next to i32
  %9 = icmp slt i32 %8, %count
  br i1 %9, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %.b1.i2 = phi i1 [ false, %rs_write_int.exit ], [ %.b1.i2.pre, %rs_write_int.exit.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %rs_write_int.exit ], [ 0, %rs_write_int.exit.preheader ]
  %10 = getelementptr inbounds i8* %c, i64 %indvars.iv
  %11 = load i8* %10, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %11, i8* %buf.i, align 1, !tbaa !28
  br i1 %.b1.i2, label %.critedge, label %12

; <label>:12                                      ; preds = %.lr.ph
  %13 = call i64 @encwrite(i8* %buf.i, i64 1, %struct.__sFILE* %savef) #8
  %14 = icmp eq i64 %13, 1
  br i1 %14, label %.rs_write.exit_crit_edge.i4, label %.critedge6

.rs_write.exit_crit_edge.i4:                      ; preds = %12
  %.b.pre.i3 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %.b.pre.i3, label %.critedge, label %rs_write_int.exit

.critedge6:                                       ; preds = %12
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  br label %.critedge

.critedge:                                        ; preds = %.critedge6, %.rs_write.exit_crit_edge.i4, %.lr.ph, %rs_write_int.exit, %rs_write_int.exit.preheader, %0
  %.b1.sink = phi i1 [ true, %0 ], [ true, %.critedge6 ], [ %.b1.i2.pre, %rs_write_int.exit.preheader ], [ false, %rs_write_int.exit ], [ true, %.rs_write.exit_crit_edge.i4 ], [ true, %.lr.ph ]
  %15 = zext i1 %.b1.sink to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_booleans(%struct.__sFILE* %inf, i8* nocapture %i, i32 %count) #0 {
  %buf.i = alloca i8, align 1
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %22, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, %count
  br i1 %7, label %.preheader, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %8, %rs_read_int.exit
  %9 = icmp sgt i32 %count, 0
  br i1 %9, label %.lr.ph, label %.preheader..critedge_crit_edge

.preheader..critedge_crit_edge:                   ; preds = %.preheader
  %.b4.pre = load i1* @format_error, align 1
  %.b.pre = load i1* @read_error, align 1
  br label %.critedge

.lr.ph:                                           ; preds = %.preheader
  %.b2.i5.pre = load i1* @read_error, align 1
  %.b3.i6.pre = load i1* @format_error, align 1
  br label %13

; <label>:10                                      ; preds = %rs_read.exit.i10
  %11 = trunc i64 %indvars.iv.next to i32
  %12 = icmp slt i32 %11, %count
  br i1 %12, label %13, label %.critedge

; <label>:13                                      ; preds = %10, %.lr.ph
  %.b3.i6 = phi i1 [ %.b3.i6.pre, %.lr.ph ], [ false, %10 ]
  %.b2.i5 = phi i1 [ %.b2.i5.pre, %.lr.ph ], [ false, %10 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %10 ]
  %14 = getelementptr inbounds i8* %i, i64 %indvars.iv
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 0, i8* %buf.i, align 1, !tbaa !28
  %or.cond.i7 = or i1 %.b2.i5, %.b3.i6
  br i1 %or.cond.i7, label %.critedge, label %15

; <label>:15                                      ; preds = %13
  %16 = call i64 @encread(i8* %buf.i, i64 1, %struct.__sFILE* %inf) #8
  %17 = icmp eq i64 %16, 1
  br i1 %17, label %rs_read.exit.i10, label %18

; <label>:18                                      ; preds = %15
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i10

rs_read.exit.i10:                                 ; preds = %18, %15
  %19 = load i8* %buf.i, align 1, !tbaa !28
  %20 = icmp ne i8 %19, 0
  %21 = zext i1 %20 to i8
  store i8 %21, i8* %14, align 1, !tbaa !5
  %.b4.i8 = load i1* @format_error, align 1
  %.b.i9 = load i1* @read_error, align 1
  %..b.i = or i1 %.b4.i8, %.b.i9
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %..b.i, label %.critedge, label %10

.critedge:                                        ; preds = %rs_read.exit.i10, %13, %10, %.preheader..critedge_crit_edge
  %.b = phi i1 [ %.b.pre, %.preheader..critedge_crit_edge ], [ false, %10 ], [ %.b2.i5, %13 ], [ %.b.i9, %rs_read.exit.i10 ]
  %.b4 = phi i1 [ %.b4.pre, %.preheader..critedge_crit_edge ], [ false, %10 ], [ %.b3.i6, %13 ], [ %.b4.i8, %rs_read.exit.i10 ]
  %..b = or i1 %.b4, %.b
  br label %22

; <label>:22                                      ; preds = %.critedge, %0
  %..b2.sink = phi i1 [ %..b, %.critedge ], [ true, %0 ]
  %23 = zext i1 %..b2.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_short(%struct.__sFILE* %savef, i16 signext %c) #0 {
  %1 = alloca i16, align 2
  store i16 %c, i16* %1, align 2, !tbaa !118
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i16* %1 to i8*
  %4 = call i64 @encwrite(i8* %3, i64 2, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 2
  br i1 %5, label %.rs_write.exit_crit_edge, label %6

.rs_write.exit_crit_edge:                         ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %6, %.rs_write.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %6 ]
  %7 = zext i1 %.b1.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_short(%struct.__sFILE* %inf, i16* nocapture %i) #0 {
  %input = alloca i16, align 2
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %8, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i16* %input to i8*
  %3 = call i64 @encread(i8* %2, i64 2, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 2
  br i1 %4, label %.rs_read.exit_crit_edge, label %5

.rs_read.exit_crit_edge:                          ; preds = %1
  %.b.pre = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %5, %.rs_read.exit_crit_edge
  %.b = phi i1 [ %.b.pre, %.rs_read.exit_crit_edge ], [ true, %5 ]
  %6 = load i16* %input, align 2, !tbaa !118
  store i16 %6, i16* %i, align 2, !tbaa !118
  %.b4 = load i1* @format_error, align 1
  %7 = or i1 %.b4, %.b
  br label %8

; <label>:8                                       ; preds = %rs_read.exit, %0
  %.sink = phi i1 [ %7, %rs_read.exit ], [ true, %0 ]
  %9 = zext i1 %.sink to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_shorts(%struct.__sFILE* %savef, i16* nocapture readonly %c, i32 %count) #0 {
  %1 = alloca i16, align 2
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %.critedge, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 %count, i32* %2, align 4, !tbaa !38
  %5 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %rs_write_int.exit.preheader, label %7

; <label>:7                                       ; preds = %3
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %7, %3
  %8 = icmp sgt i32 %count, 0
  br i1 %8, label %.lr.ph, label %rs_write_int.exit.preheader..critedge.loopexit_crit_edge

rs_write_int.exit.preheader..critedge.loopexit_crit_edge: ; preds = %rs_write_int.exit.preheader
  %.b.pre.pre = load i1* @write_error, align 1
  br label %.critedge

.lr.ph:                                           ; preds = %rs_write_int.exit.preheader
  %9 = bitcast i16* %1 to i8*
  %.b1.i2.pre = load i1* @write_error, align 1
  br label %12

rs_write_int.exit:                                ; preds = %.rs_write.exit_crit_edge.i4
  %10 = trunc i64 %indvars.iv.next to i32
  %11 = icmp slt i32 %10, %count
  br i1 %11, label %12, label %.critedge

; <label>:12                                      ; preds = %rs_write_int.exit, %.lr.ph
  %.b1.i2 = phi i1 [ %.b1.i2.pre, %.lr.ph ], [ false, %rs_write_int.exit ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_write_int.exit ]
  %13 = getelementptr inbounds i16* %c, i64 %indvars.iv
  %14 = load i16* %13, align 2, !tbaa !118
  call void @llvm.lifetime.start(i64 2, i8* %9) #8
  store i16 %14, i16* %1, align 2, !tbaa !118
  br i1 %.b1.i2, label %.critedge, label %15

; <label>:15                                      ; preds = %12
  %16 = call i64 @encwrite(i8* %9, i64 2, %struct.__sFILE* %savef) #8
  %17 = icmp eq i64 %16, 2
  br i1 %17, label %.rs_write.exit_crit_edge.i4, label %.critedge6

.rs_write.exit_crit_edge.i4:                      ; preds = %15
  %.b.pre.i3 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 2, i8* %9) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %.b.pre.i3, label %.critedge, label %rs_write_int.exit

.critedge6:                                       ; preds = %15
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 2, i8* %9) #8
  br label %.critedge

.critedge:                                        ; preds = %.critedge6, %.rs_write.exit_crit_edge.i4, %12, %rs_write_int.exit, %rs_write_int.exit.preheader..critedge.loopexit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ true, %.critedge6 ], [ %.b.pre.pre, %rs_write_int.exit.preheader..critedge.loopexit_crit_edge ], [ false, %rs_write_int.exit ], [ true, %.rs_write.exit_crit_edge.i4 ], [ true, %12 ]
  %18 = zext i1 %.b1.sink to i32
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_shorts(%struct.__sFILE* %inf, i16* nocapture %i, i32 %count) #0 {
  %input.i5 = alloca i16, align 2
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %22, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, %count
  br i1 %7, label %.preheader, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %8, %rs_read_int.exit
  %9 = icmp sgt i32 %6, 0
  br i1 %9, label %.lr.ph, label %.preheader..critedge_crit_edge

.preheader..critedge_crit_edge:                   ; preds = %.preheader
  %.b4.pre = load i1* @format_error, align 1
  %.b.pre = load i1* @read_error, align 1
  br label %.critedge

.lr.ph:                                           ; preds = %.preheader
  %10 = bitcast i16* %input.i5 to i8*
  %.b2.i6.pre = load i1* @read_error, align 1
  %.b3.i7.pre = load i1* @format_error, align 1
  br label %14

; <label>:11                                      ; preds = %rs_read.exit.i13
  %12 = trunc i64 %indvars.iv.next to i32
  %13 = icmp slt i32 %12, %6
  br i1 %13, label %14, label %.critedge

; <label>:14                                      ; preds = %11, %.lr.ph
  %.b3.i7 = phi i1 [ %.b3.i7.pre, %.lr.ph ], [ false, %11 ]
  %.b2.i6 = phi i1 [ %.b2.i6.pre, %.lr.ph ], [ false, %11 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %11 ]
  %15 = getelementptr inbounds i16* %i, i64 %indvars.iv
  call void @llvm.lifetime.start(i64 2, i8* %10) #8
  %or.cond.i8 = or i1 %.b2.i6, %.b3.i7
  br i1 %or.cond.i8, label %.critedge, label %16

; <label>:16                                      ; preds = %14
  %17 = call i64 @encread(i8* %10, i64 2, %struct.__sFILE* %inf) #8
  %18 = icmp eq i64 %17, 2
  br i1 %18, label %.rs_read.exit_crit_edge.i10, label %19

.rs_read.exit_crit_edge.i10:                      ; preds = %16
  %.b.pre.i9 = load i1* @read_error, align 1
  br label %rs_read.exit.i13

; <label>:19                                      ; preds = %16
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i13

rs_read.exit.i13:                                 ; preds = %19, %.rs_read.exit_crit_edge.i10
  %.b.i11 = phi i1 [ %.b.pre.i9, %.rs_read.exit_crit_edge.i10 ], [ true, %19 ]
  %20 = load i16* %input.i5, align 2, !tbaa !118
  store i16 %20, i16* %15, align 2, !tbaa !118
  %.b4.i12 = load i1* @format_error, align 1
  %21 = or i1 %.b4.i12, %.b.i11
  call void @llvm.lifetime.end(i64 2, i8* %10) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %21, label %.critedge, label %11

.critedge:                                        ; preds = %rs_read.exit.i13, %14, %11, %.preheader..critedge_crit_edge
  %.b = phi i1 [ %.b.pre, %.preheader..critedge_crit_edge ], [ false, %11 ], [ %.b2.i6, %14 ], [ %.b.i11, %rs_read.exit.i13 ]
  %.b4 = phi i1 [ %.b4.pre, %.preheader..critedge_crit_edge ], [ false, %11 ], [ %.b3.i7, %14 ], [ %.b4.i12, %rs_read.exit.i13 ]
  %..b = or i1 %.b4, %.b
  br label %22

; <label>:22                                      ; preds = %.critedge, %0
  %..b2.sink = phi i1 [ %..b, %.critedge ], [ true, %0 ]
  %23 = zext i1 %..b2.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_ushort(%struct.__sFILE* %savef, i16 zeroext %c) #0 {
  %1 = alloca i16, align 2
  store i16 %c, i16* %1, align 2, !tbaa !118
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i16* %1 to i8*
  %4 = call i64 @encwrite(i8* %3, i64 2, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 2
  br i1 %5, label %.rs_write.exit_crit_edge, label %6

.rs_write.exit_crit_edge:                         ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %6, %.rs_write.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %6 ]
  %7 = zext i1 %.b1.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_ushort(%struct.__sFILE* %inf, i16* nocapture %i) #0 {
  %input = alloca i16, align 2
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %8, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i16* %input to i8*
  %3 = call i64 @encread(i8* %2, i64 2, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 2
  br i1 %4, label %.rs_read.exit_crit_edge, label %5

.rs_read.exit_crit_edge:                          ; preds = %1
  %.b.pre = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %5, %.rs_read.exit_crit_edge
  %.b = phi i1 [ %.b.pre, %.rs_read.exit_crit_edge ], [ true, %5 ]
  %6 = load i16* %input, align 2, !tbaa !118
  store i16 %6, i16* %i, align 2, !tbaa !118
  %.b4 = load i1* @format_error, align 1
  %7 = or i1 %.b4, %.b
  br label %8

; <label>:8                                       ; preds = %rs_read.exit, %0
  %.sink = phi i1 [ %7, %rs_read.exit ], [ true, %0 ]
  %9 = zext i1 %.sink to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_uint(%struct.__sFILE* %savef, i32 %c) #0 {
  %1 = alloca i32, align 4
  store i32 %c, i32* %1, align 4, !tbaa !38
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %.rs_write.exit_crit_edge, label %6

.rs_write.exit_crit_edge:                         ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write.exit

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write.exit

rs_write.exit:                                    ; preds = %6, %.rs_write.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write.exit_crit_edge ], [ true, %6 ]
  %7 = zext i1 %.b1.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_uint(%struct.__sFILE* %inf, i32* nocapture %i) #0 {
  %input = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %8, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input to i8*
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge, label %5

.rs_read.exit_crit_edge:                          ; preds = %1
  %.b.pre = load i1* @read_error, align 1
  br label %rs_read.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit

rs_read.exit:                                     ; preds = %5, %.rs_read.exit_crit_edge
  %.b = phi i1 [ %.b.pre, %.rs_read.exit_crit_edge ], [ true, %5 ]
  %6 = load i32* %input, align 4, !tbaa !38
  store i32 %6, i32* %i, align 4, !tbaa !38
  %.b4 = load i1* @format_error, align 1
  %7 = or i1 %.b4, %.b
  br label %8

; <label>:8                                       ; preds = %rs_read.exit, %0
  %.sink = phi i1 [ %7, %rs_read.exit ], [ true, %0 ]
  %9 = zext i1 %.sink to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_marker(%struct.__sFILE* %savef, i32 %id) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write_int.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 %id, i32* %1, align 4, !tbaa !38
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %.rs_write_int.exit_crit_edge, label %6

.rs_write_int.exit_crit_edge:                     ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %6, %.rs_write_int.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write_int.exit_crit_edge ], [ true, %6 ]
  %7 = zext i1 %.b1.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_marker(%struct.__sFILE* %inf, i32 %id) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %10, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i, label %5

.rs_read.exit_crit_edge.i:                        ; preds = %1
  %.b.pre.i = load i1* @read_error, align 1
  br label %rs_read_int.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %.rs_read.exit_crit_edge.i
  %.b.i = phi i1 [ %.b.pre.i, %.rs_read.exit_crit_edge.i ], [ true, %5 ]
  %6 = load i32* %input.i, align 4, !tbaa !38
  %.b4.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i, %.b.i
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, %id
  %or.cond6 = or i1 %7, %8
  br i1 %or.cond6, label %rs_read_int.exit.thread, label %9

; <label>:9                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %rs_read_int.exit.thread

rs_read_int.exit.thread:                          ; preds = %9, %rs_read_int.exit
  %.b = phi i1 [ %.b.i, %rs_read_int.exit ], [ false, %9 ]
  %.b4 = phi i1 [ %.b4.i, %rs_read_int.exit ], [ true, %9 ]
  %..b = or i1 %.b4, %.b
  br label %10

; <label>:10                                      ; preds = %rs_read_int.exit.thread, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_int.exit.thread ], [ true, %0 ]
  %11 = zext i1 %..b2.sink to i32
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_string(%struct.__sFILE* %savef, i8* %s) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write_chars.exit, label %3

; <label>:3                                       ; preds = %0
  %4 = icmp eq i8* %s, null
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %3
  %6 = call i64 @strlen(i8* %s) #8
  %7 = trunc i64 %6 to i32
  %8 = add nsw i32 %7, 1
  br label %9

; <label>:9                                       ; preds = %5, %3
  %10 = phi i32 [ %8, %5 ], [ 0, %3 ]
  %11 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #8
  store i32 %10, i32* %2, align 4, !tbaa !38
  %12 = call i64 @encwrite(i8* %11, i64 4, %struct.__sFILE* %savef) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_write_int.exit, label %rs_write_int.exit.thread

rs_write_int.exit.thread:                         ; preds = %9
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %11) #8
  br label %rs_write_chars.exit

rs_write_int.exit:                                ; preds = %9
  %.b1.i2.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %11) #8
  br i1 %.b1.i2.pre, label %rs_write_chars.exit, label %14

; <label>:14                                      ; preds = %rs_write_int.exit
  %15 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #8
  store i32 %10, i32* %1, align 4, !tbaa !38
  %16 = call i64 @encwrite(i8* %15, i64 4, %struct.__sFILE* %savef) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %rs_write_int.exit.i, label %rs_write_int.exit.thread.i

rs_write_int.exit.thread.i:                       ; preds = %14
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %15) #8
  br label %rs_write_chars.exit

rs_write_int.exit.i:                              ; preds = %14
  %.b1.i2.pre.i = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %15) #8
  %18 = sext i32 %10 to i64
  br i1 %.b1.i2.pre.i, label %rs_write_chars.exit, label %19

; <label>:19                                      ; preds = %rs_write_int.exit.i
  %20 = call i64 @encwrite(i8* %s, i64 %18, %struct.__sFILE* %savef) #8
  %21 = icmp eq i64 %20, %18
  br i1 %21, label %.rs_write_chars.exit_crit_edge, label %22

.rs_write_chars.exit_crit_edge:                   ; preds = %19
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_chars.exit

; <label>:22                                      ; preds = %19
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit

rs_write_chars.exit:                              ; preds = %22, %.rs_write_chars.exit_crit_edge, %rs_write_int.exit.i, %rs_write_int.exit.thread.i, %rs_write_int.exit, %rs_write_int.exit.thread, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write_chars.exit_crit_edge ], [ true, %rs_write_int.exit ], [ true, %rs_write_int.exit.thread.i ], [ true, %rs_write_int.exit.i ], [ true, %22 ], [ true, %rs_write_int.exit.thread ]
  %23 = zext i1 %.b1.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_string(%struct.__sFILE* %inf, i8* %s, i32 %max) #0 {
  %input.i.i = alloca i32, align 4
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %22, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp sgt i32 %6, %max
  br i1 %7, label %.thread, label %8

.thread:                                          ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit

; <label>:8                                       ; preds = %rs_read_int.exit
  %.b3.i6.pre = load i1* @format_error, align 1
  %.b2.i5 = load i1* @read_error, align 1
  %or.cond.i7 = or i1 %.b2.i5, %.b3.i6.pre
  br i1 %or.cond.i7, label %rs_read_chars.exit, label %9

; <label>:9                                       ; preds = %8
  %10 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %11 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %12 = icmp eq i64 %11, 4
  br i1 %12, label %rs_read_int.exit.i, label %13

; <label>:13                                      ; preds = %9
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %13, %9
  %14 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %15 = icmp eq i32 %14, %6
  br i1 %15, label %16, label %.thread.i

.thread.i:                                        ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit

; <label>:16                                      ; preds = %rs_read_int.exit.i
  %.b3.i6.pre.i = load i1* @format_error, align 1
  %17 = sext i32 %6 to i64
  %.b2.i5.i = load i1* @read_error, align 1
  %or.cond.i7.i = or i1 %.b2.i5.i, %.b3.i6.pre.i
  br i1 %or.cond.i7.i, label %rs_read_chars.exit, label %18

; <label>:18                                      ; preds = %16
  %19 = call i64 @encread(i8* %s, i64 %17, %struct.__sFILE* %inf) #8
  %20 = icmp eq i64 %19, %17
  br i1 %20, label %rs_read_chars.exit, label %21

; <label>:21                                      ; preds = %18
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_chars.exit:                               ; preds = %21, %18, %16, %.thread.i, %8, %.thread
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %22

; <label>:22                                      ; preds = %rs_read_chars.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_chars.exit ], [ true, %0 ]
  %23 = zext i1 %..b2.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** nocapture %s) #0 {
  %input.i.i = alloca i32, align 4
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %27, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %rs_read_int.exit.thread, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  %9 = sext i32 %6 to i64
  %10 = call i8* @malloc(i64 %9) #8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %rs_read_int.exit.thread

; <label>:12                                      ; preds = %8
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.thread

rs_read_int.exit.thread:                          ; preds = %12, %8, %rs_read_int.exit
  %13 = phi i32 [ %6, %12 ], [ %6, %8 ], [ 0, %rs_read_int.exit ]
  %buf.0 = phi i8* [ null, %12 ], [ %10, %8 ], [ null, %rs_read_int.exit ]
  %.b2.i5 = load i1* @read_error, align 1
  %.b3.i6 = load i1* @format_error, align 1
  %or.cond.i7 = or i1 %.b2.i5, %.b3.i6
  br i1 %or.cond.i7, label %rs_read_chars.exit, label %14

; <label>:14                                      ; preds = %rs_read_int.exit.thread
  %15 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %16 = call i64 @encread(i8* %15, i64 4, %struct.__sFILE* %inf) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %rs_read_int.exit.i, label %18

; <label>:18                                      ; preds = %14
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %18, %14
  %19 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %15) #8
  %20 = icmp eq i32 %19, %13
  br i1 %20, label %21, label %.thread.i

.thread.i:                                        ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit

; <label>:21                                      ; preds = %rs_read_int.exit.i
  %.b3.i6.pre.i = load i1* @format_error, align 1
  %22 = sext i32 %13 to i64
  %.b2.i5.i = load i1* @read_error, align 1
  %or.cond.i7.i = or i1 %.b2.i5.i, %.b3.i6.pre.i
  br i1 %or.cond.i7.i, label %rs_read_chars.exit, label %23

; <label>:23                                      ; preds = %21
  %24 = call i64 @encread(i8* %buf.0, i64 %22, %struct.__sFILE* %inf) #8
  %25 = icmp eq i64 %24, %22
  br i1 %25, label %rs_read_chars.exit, label %26

; <label>:26                                      ; preds = %23
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_chars.exit:                               ; preds = %26, %23, %21, %.thread.i, %rs_read_int.exit.thread
  store i8* %buf.0, i8** %s, align 8, !tbaa !1
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %27

; <label>:27                                      ; preds = %rs_read_chars.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_chars.exit ], [ true, %0 ]
  %28 = zext i1 %..b2.sink to i32
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_strings(%struct.__sFILE* %savef, i8** nocapture readonly %s, i32 %count) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %14, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 %count, i32* %1, align 4, !tbaa !38
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %rs_write_int.exit.preheader, label %6

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %6, %2
  %7 = icmp sgt i32 %count, 0
  br i1 %7, label %.lr.ph, label %split

.lr.ph:                                           ; preds = %.lr.ph, %rs_write_int.exit.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %rs_write_int.exit.preheader ]
  %8 = getelementptr inbounds i8** %s, i64 %indvars.iv
  %9 = load i8** %8, align 8, !tbaa !1
  %10 = call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %9)
  %11 = icmp eq i32 %10, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %12 = trunc i64 %indvars.iv.next to i32
  %13 = icmp slt i32 %12, %count
  %or.cond = and i1 %11, %13
  br i1 %or.cond, label %.lr.ph, label %split

split:                                            ; preds = %.lr.ph, %rs_write_int.exit.preheader
  %.b = load i1* @write_error, align 1
  br label %14

; <label>:14                                      ; preds = %split, %0
  %.b1.sink = phi i1 [ %.b, %split ], [ true, %0 ]
  %15 = zext i1 %.b1.sink to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_strings(%struct.__sFILE* %inf, i8** nocapture readonly %s, i32 %count, i32 %max) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %16, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, %count
  br i1 %7, label %.preheader, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %8, %rs_read_int.exit
  %9 = icmp sgt i32 %count, 0
  br i1 %9, label %.lr.ph, label %split

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %10 = getelementptr inbounds i8** %s, i64 %indvars.iv
  %11 = load i8** %10, align 8, !tbaa !1
  %12 = call i32 @rs_read_string(%struct.__sFILE* %inf, i8* %11, i32 %max)
  %13 = icmp eq i32 %12, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = trunc i64 %indvars.iv.next to i32
  %15 = icmp slt i32 %14, %count
  %or.cond7 = and i1 %13, %15
  br i1 %or.cond7, label %.lr.ph, label %split

split:                                            ; preds = %.lr.ph, %.preheader
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %16

; <label>:16                                      ; preds = %split, %0
  %..b2.sink = phi i1 [ %..b, %split ], [ true, %0 ]
  %17 = zext i1 %..b2.sink to i32
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_new_strings(%struct.__sFILE* %inf, i8** nocapture %s, i32 %count) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %15, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, %count
  br i1 %7, label %.preheader, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %8, %rs_read_int.exit
  %9 = icmp sgt i32 %count, 0
  br i1 %9, label %.lr.ph, label %split

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %10 = getelementptr inbounds i8** %s, i64 %indvars.iv
  %11 = call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** %10)
  %12 = icmp eq i32 %11, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %13 = trunc i64 %indvars.iv.next to i32
  %14 = icmp slt i32 %13, %count
  %or.cond7 = and i1 %12, %14
  br i1 %or.cond7, label %.lr.ph, label %split

split:                                            ; preds = %.lr.ph, %.preheader
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %15

; <label>:15                                      ; preds = %split, %0
  %..b2.sink = phi i1 [ %..b, %split ], [ true, %0 ]
  %16 = zext i1 %..b2.sink to i32
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_string_index(%struct.__sFILE* %savef, i8** nocapture readonly %master, i32 %max, i8* readnone %str) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b = load i1* @write_error, align 1
  br i1 %.b, label %22, label %.preheader

.preheader:                                       ; preds = %0
  %3 = icmp sgt i32 %max, 0
  br i1 %3, label %.lr.ph, label %.loopexit

; <label>:4                                       ; preds = %.lr.ph
  %5 = trunc i64 %indvars.iv.next to i32
  %6 = icmp slt i32 %5, %max
  br i1 %6, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %4, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %4 ], [ 0, %.preheader ]
  %7 = getelementptr inbounds i8** %master, i64 %indvars.iv
  %8 = load i8** %7, align 8, !tbaa !1
  %9 = icmp eq i8* %8, %str
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %9, label %10, label %4

; <label>:10                                      ; preds = %.lr.ph
  %11 = trunc i64 %indvars.iv to i32
  %12 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #8
  store i32 %11, i32* %2, align 4, !tbaa !38
  %13 = call i64 @encwrite(i8* %12, i64 4, %struct.__sFILE* %savef) #8
  %14 = icmp eq i64 %13, 4
  br i1 %14, label %.rs_write.exit_crit_edge.i, label %15

.rs_write.exit_crit_edge.i:                       ; preds = %10
  %.b.pre.i = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:15                                      ; preds = %10
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %15, %.rs_write.exit_crit_edge.i
  %.b1.sink.i = phi i1 [ %.b.pre.i, %.rs_write.exit_crit_edge.i ], [ true, %15 ]
  %16 = zext i1 %.b1.sink.i to i32
  call void @llvm.lifetime.end(i64 4, i8* %12) #8
  br label %22

.loopexit:                                        ; preds = %4, %.preheader
  %17 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 -1, i32* %1, align 4, !tbaa !38
  %18 = call i64 @encwrite(i8* %17, i64 4, %struct.__sFILE* %savef) #8
  %19 = icmp eq i64 %18, 4
  br i1 %19, label %.rs_write.exit_crit_edge.i3, label %20

.rs_write.exit_crit_edge.i3:                      ; preds = %.loopexit
  %.b.pre.i2 = load i1* @write_error, align 1
  br label %rs_write_int.exit5

; <label>:20                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit5

rs_write_int.exit5:                               ; preds = %20, %.rs_write.exit_crit_edge.i3
  %.b1.sink.i4 = phi i1 [ %.b.pre.i2, %.rs_write.exit_crit_edge.i3 ], [ true, %20 ]
  %21 = zext i1 %.b1.sink.i4 to i32
  call void @llvm.lifetime.end(i64 4, i8* %17) #8
  br label %22

; <label>:22                                      ; preds = %rs_write_int.exit5, %rs_write_int.exit, %0
  %.0 = phi i32 [ %16, %rs_write_int.exit ], [ %21, %rs_write_int.exit5 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_string_index(%struct.__sFILE* %inf, i8** nocapture readonly %master, i32 %maxindex, i8** nocapture %str) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %16, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp sgt i32 %6, %maxindex
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %15

; <label>:9                                       ; preds = %rs_read_int.exit
  %10 = icmp sgt i32 %6, -1
  br i1 %10, label %11, label %.thread

; <label>:11                                      ; preds = %9
  %12 = sext i32 %6 to i64
  %13 = getelementptr inbounds i8** %master, i64 %12
  %14 = load i8** %13, align 8, !tbaa !1
  store i8* %14, i8** %str, align 8, !tbaa !1
  br label %15

.thread:                                          ; preds = %9
  store i8* null, i8** %str, align 8, !tbaa !1
  br label %15

; <label>:15                                      ; preds = %.thread, %11, %8
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %16

; <label>:16                                      ; preds = %15, %0
  %..b2.sink = phi i1 [ %..b, %15 ], [ true, %0 ]
  %17 = zext i1 %..b2.sink to i32
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_str_t(%struct.__sFILE* %savef, i32 %st) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write_uint.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 %st, i32* %1, align 4, !tbaa !38
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %.rs_write_uint.exit_crit_edge, label %6

.rs_write_uint.exit_crit_edge:                    ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_uint.exit

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write_uint.exit

rs_write_uint.exit:                               ; preds = %6, %.rs_write_uint.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write_uint.exit_crit_edge ], [ true, %6 ]
  %7 = zext i1 %.b1.sink to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_str_t(%struct.__sFILE* %inf, i32* nocapture %st) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %7, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit.i_crit_edge, label %5

.rs_read.exit.i_crit_edge:                        ; preds = %1
  %.b.pre.pre = load i1* @read_error, align 1
  br label %rs_read_uint.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_uint.exit

rs_read_uint.exit:                                ; preds = %5, %.rs_read.exit.i_crit_edge
  %.b.pre = phi i1 [ %.b.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %5 ]
  %6 = load i32* %input.i, align 4, !tbaa !38
  store i32 %6, i32* %st, align 4, !tbaa !38
  %.b4.pre = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %..b = or i1 %.b4.pre, %.b.pre
  br label %7

; <label>:7                                       ; preds = %rs_read_uint.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_uint.exit ], [ true, %0 ]
  %8 = zext i1 %..b2.sink to i32
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_coord(%struct.__sFILE* %savef, i64 %c.coerce) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %17, label %3

; <label>:3                                       ; preds = %0
  %4 = lshr i64 %c.coerce, 32
  %5 = trunc i64 %4 to i32
  %6 = trunc i64 %c.coerce to i32
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #8
  store i32 %6, i32* %2, align 4, !tbaa !38
  %8 = call i64 @encwrite(i8* %7, i64 4, %struct.__sFILE* %savef) #8
  %9 = icmp eq i64 %8, 4
  br i1 %9, label %rs_write_int.exit, label %rs_write_int.exit.thread

rs_write_int.exit.thread:                         ; preds = %3
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %7) #8
  %10 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 %5, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit6

rs_write_int.exit:                                ; preds = %3
  %.b1.i2.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %7) #8
  %11 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #8
  store i32 %5, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i2.pre, label %rs_write_int.exit6, label %12

; <label>:12                                      ; preds = %rs_write_int.exit
  %13 = call i64 @encwrite(i8* %11, i64 4, %struct.__sFILE* %savef) #8
  %14 = icmp eq i64 %13, 4
  br i1 %14, label %.rs_write_int.exit6_crit_edge, label %15

.rs_write_int.exit6_crit_edge:                    ; preds = %12
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit6

; <label>:15                                      ; preds = %12
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit6

rs_write_int.exit6:                               ; preds = %15, %.rs_write_int.exit6_crit_edge, %rs_write_int.exit, %rs_write_int.exit.thread
  %16 = phi i8* [ %11, %.rs_write_int.exit6_crit_edge ], [ %11, %rs_write_int.exit ], [ %11, %15 ], [ %10, %rs_write_int.exit.thread ]
  %.b = phi i1 [ %.b.pre, %.rs_write_int.exit6_crit_edge ], [ true, %rs_write_int.exit ], [ true, %15 ], [ true, %rs_write_int.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %16) #8
  br label %17

; <label>:17                                      ; preds = %rs_write_int.exit6, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit6 ], [ true, %0 ]
  %18 = zext i1 %.b1.sink to i32
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_coord(%struct.__sFILE* %inf, %struct.coord* nocapture %c) #0 {
  %input.i7 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %.b3 = load i1* @read_error, align 1
  %.b4 = load i1* @format_error, align 1
  %or.cond = or i1 %.b3, %.b4
  br i1 %or.cond, label %17, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit.i_crit_edge, label %5

.rs_read.exit.i_crit_edge:                        ; preds = %1
  %.b2.i8.pre.pre = load i1* @read_error, align 1
  br label %rs_read_int.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %.rs_read.exit.i_crit_edge
  %.b2.i8.pre = phi i1 [ %.b2.i8.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %5 ]
  %6 = load i32* %input.i, align 4, !tbaa !38
  %.b3.i9.pre = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = bitcast i32* %input.i7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #8
  store i32 0, i32* %input.i7, align 4, !tbaa !38
  %or.cond.i10 = or i1 %.b2.i8.pre, %.b3.i9.pre
  br i1 %or.cond.i10, label %rs_read_int.exit17, label %8

; <label>:8                                       ; preds = %rs_read_int.exit
  %9 = call i64 @encread(i8* %7, i64 4, %struct.__sFILE* %inf) #8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %.rs_read.exit.i15_crit_edge, label %11

.rs_read.exit.i15_crit_edge:                      ; preds = %8
  %.b2.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i15

; <label>:11                                      ; preds = %8
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15

rs_read.exit.i15:                                 ; preds = %11, %.rs_read.exit.i15_crit_edge
  %.b2.pre = phi i1 [ %.b2.pre.pre, %.rs_read.exit.i15_crit_edge ], [ true, %11 ]
  %12 = load i32* %input.i7, align 4, !tbaa !38
  %.b6.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit17

rs_read_int.exit17:                               ; preds = %rs_read.exit.i15, %rs_read_int.exit
  %.b = phi i1 [ %.b2.pre, %rs_read.exit.i15 ], [ %.b2.i8.pre, %rs_read_int.exit ]
  %.b5 = phi i1 [ %.b6.pre, %rs_read.exit.i15 ], [ %.b3.i9.pre, %rs_read_int.exit ]
  %13 = phi i32 [ %12, %rs_read.exit.i15 ], [ undef, %rs_read_int.exit ]
  call void @llvm.lifetime.end(i64 4, i8* %7) #8
  %..b2 = or i1 %.b5, %.b
  br i1 %..b2, label %17, label %14

; <label>:14                                      ; preds = %rs_read_int.exit17
  %15 = getelementptr inbounds %struct.coord* %c, i64 0, i32 0
  store i32 %6, i32* %15, align 4, !tbaa !21
  %16 = getelementptr inbounds %struct.coord* %c, i64 0, i32 1
  store i32 %13, i32* %16, align 4, !tbaa !20
  br label %17

; <label>:17                                      ; preds = %14, %rs_read_int.exit17, %0
  %..b3.sink = phi i32 [ 1, %0 ], [ 1, %rs_read_int.exit17 ], [ 0, %14 ]
  ret i32 %..b3.sink
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_window(%struct.__sFILE* %savef, %struct._win_st* %win) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %.b2 = load i1* @write_error, align 1
  br i1 %.b2, label %.critedge, label %5

; <label>:5                                       ; preds = %0
  %6 = icmp eq %struct._win_st* %win, null
  br i1 %6, label %16, label %7

; <label>:7                                       ; preds = %5
  %8 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 3
  %9 = load i16* %8, align 2, !tbaa !143
  %10 = sext i16 %9 to i32
  %11 = add nsw i32 %10, 1
  %12 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 2
  %13 = load i16* %12, align 2, !tbaa !56
  %14 = sext i16 %13 to i32
  %15 = add nsw i32 %14, 1
  br label %16

; <label>:16                                      ; preds = %7, %5
  %17 = phi i32 [ %11, %7 ], [ -1, %5 ]
  %18 = phi i32 [ %15, %7 ], [ -1, %5 ]
  %19 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %19) #8
  store i32 -1412628467, i32* %4, align 4, !tbaa !38
  %20 = call i64 @encwrite(i8* %19, i64 4, %struct.__sFILE* %savef) #8
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %rs_write_marker.exit, label %rs_write_marker.exit.thread

rs_write_marker.exit.thread:                      ; preds = %16
  store i1 true, i1* @write_error, align 1
  %22 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #8
  store i32 %18, i32* %3, align 4, !tbaa !38
  br label %rs_write_int.exit.thread

rs_write_marker.exit:                             ; preds = %16
  %.b1.i3.pre = load i1* @write_error, align 1
  %23 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #8
  store i32 %18, i32* %3, align 4, !tbaa !38
  br i1 %.b1.i3.pre, label %rs_write_int.exit.thread, label %24

; <label>:24                                      ; preds = %rs_write_marker.exit
  %25 = call i64 @encwrite(i8* %23, i64 4, %struct.__sFILE* %savef) #8
  %26 = icmp eq i64 %25, 4
  br i1 %26, label %rs_write_int.exit, label %27

; <label>:27                                      ; preds = %24
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.thread

rs_write_int.exit.thread:                         ; preds = %27, %rs_write_marker.exit, %rs_write_marker.exit.thread
  %.ph = phi i8* [ %23, %rs_write_marker.exit ], [ %23, %27 ], [ %22, %rs_write_marker.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph) #8
  %28 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %28) #8
  store i32 %17, i32* %2, align 4, !tbaa !38
  br label %rs_write_int.exit10.preheader

rs_write_int.exit:                                ; preds = %24
  %.b1.i6.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %23) #8
  %29 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %29) #8
  store i32 %17, i32* %2, align 4, !tbaa !38
  br i1 %.b1.i6.pre, label %rs_write_int.exit10.preheader, label %30

; <label>:30                                      ; preds = %rs_write_int.exit
  %31 = call i64 @encwrite(i8* %29, i64 4, %struct.__sFILE* %savef) #8
  %32 = icmp eq i64 %31, 4
  br i1 %32, label %rs_write_int.exit10.preheader, label %33

; <label>:33                                      ; preds = %30
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit10.preheader

rs_write_int.exit10.preheader:                    ; preds = %33, %30, %rs_write_int.exit, %rs_write_int.exit.thread
  %34 = icmp sgt i32 %18, 0
  br i1 %34, label %.preheader.lr.ph, label %rs_write_int.exit10._crit_edge

.preheader.lr.ph:                                 ; preds = %rs_write_int.exit10.preheader
  %35 = icmp sgt i32 %17, 0
  %36 = bitcast i32* %1 to i8*
  br label %.preheader

.preheader:                                       ; preds = %rs_write_int.exit10, %.preheader.lr.ph
  %row.019 = phi i32 [ 0, %.preheader.lr.ph ], [ %49, %rs_write_int.exit10 ]
  br i1 %35, label %.lr.ph, label %rs_write_int.exit10

; <label>:37                                      ; preds = %.rs_write.exit_crit_edge.i13
  %38 = icmp slt i32 %48, %17
  br i1 %38, label %.lr.ph, label %rs_write_int.exit10

.lr.ph:                                           ; preds = %37, %.preheader
  %col.018 = phi i32 [ %48, %37 ], [ 0, %.preheader ]
  %39 = call i32 @wmove(%struct._win_st* %win, i32 %row.019, i32 %col.018) #8
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %43, label %41

; <label>:41                                      ; preds = %.lr.ph
  %42 = call i32 @winch(%struct._win_st* %win) #8
  br label %43

; <label>:43                                      ; preds = %41, %.lr.ph
  %44 = phi i32 [ %42, %41 ], [ -1, %.lr.ph ]
  call void @llvm.lifetime.start(i64 4, i8* %36) #8
  store i32 %44, i32* %1, align 4, !tbaa !38
  %.b1.i11 = load i1* @write_error, align 1
  br i1 %.b1.i11, label %.critedge, label %45

; <label>:45                                      ; preds = %43
  %46 = call i64 @encwrite(i8* %36, i64 4, %struct.__sFILE* %savef) #8
  %47 = icmp eq i64 %46, 4
  br i1 %47, label %.rs_write.exit_crit_edge.i13, label %.critedge16

.rs_write.exit_crit_edge.i13:                     ; preds = %45
  %.b.pre.i12 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %36) #8
  %48 = add nsw i32 %col.018, 1
  br i1 %.b.pre.i12, label %.critedge, label %37

.critedge16:                                      ; preds = %45
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %36) #8
  br label %.critedge

rs_write_int.exit10:                              ; preds = %37, %.preheader
  %49 = add nsw i32 %row.019, 1
  %50 = icmp slt i32 %49, %18
  br i1 %50, label %.preheader, label %rs_write_int.exit10._crit_edge

rs_write_int.exit10._crit_edge:                   ; preds = %rs_write_int.exit10, %rs_write_int.exit10.preheader
  %.b = load i1* @write_error, align 1
  %51 = zext i1 %.b to i32
  br label %.critedge

.critedge:                                        ; preds = %rs_write_int.exit10._crit_edge, %.critedge16, %.rs_write.exit_crit_edge.i13, %43, %0
  %.0 = phi i32 [ %51, %rs_write_int.exit10._crit_edge ], [ 1, %0 ], [ 1, %.critedge16 ], [ 1, %43 ], [ 1, %.rs_write.exit_crit_edge.i13 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_window(%struct.__sFILE* %inf, %struct._win_st* %win) #0 {
  %input.i24 = alloca i32, align 4
  %input.i13 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b3 = load i1* @read_error, align 1
  %.b4 = load i1* @format_error, align 1
  %or.cond = or i1 %.b3, %.b4
  br i1 %or.cond, label %62, label %1

; <label>:1                                       ; preds = %0
  %2 = icmp eq %struct._win_st* %win, null
  br i1 %2, label %12, label %3

; <label>:3                                       ; preds = %1
  %4 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 3
  %5 = load i16* %4, align 2, !tbaa !143
  %6 = sext i16 %5 to i32
  %7 = add nsw i32 %6, 1
  %8 = getelementptr inbounds %struct._win_st* %win, i64 0, i32 2
  %9 = load i16* %8, align 2, !tbaa !56
  %10 = sext i16 %9 to i32
  %11 = add nsw i32 %10, 1
  br label %12

; <label>:12                                      ; preds = %3, %1
  %13 = phi i32 [ %7, %3 ], [ -1, %1 ]
  %14 = phi i32 [ %11, %3 ], [ -1, %1 ]
  %15 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %16 = call i64 @encread(i8* %15, i64 4, %struct.__sFILE* %inf) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %.rs_read.exit_crit_edge.i.i, label %18

.rs_read.exit_crit_edge.i.i:                      ; preds = %12
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:18                                      ; preds = %12
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %18, %.rs_read.exit_crit_edge.i.i
  %.b.i.i = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %18 ]
  %19 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %20 = or i1 %.b4.i.i, %.b.i.i
  call void @llvm.lifetime.end(i64 4, i8* %15) #8
  %21 = icmp eq i32 %19, -1412628467
  %or.cond6.i = or i1 %20, %21
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_int.exit23.thread

rs_read_int.exit23.thread:                        ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %22 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #8
  call void @llvm.lifetime.end(i64 4, i8* %22) #8
  %23 = bitcast i32* %input.i13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #8
  call void @llvm.lifetime.end(i64 4, i8* %23) #8
  br label %._crit_edge38

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %24 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i10 = or i1 %.b.i.i, %.b4.i.i
  br i1 %or.cond.i10, label %rs_read_int.exit, label %25

; <label>:25                                      ; preds = %rs_read_marker.exit
  %26 = call i64 @encread(i8* %24, i64 4, %struct.__sFILE* %inf) #8
  %27 = icmp eq i64 %26, 4
  br i1 %27, label %.rs_read.exit.i_crit_edge, label %28

.rs_read.exit.i_crit_edge:                        ; preds = %25
  %.b2.i14.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i

; <label>:28                                      ; preds = %25
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %28, %.rs_read.exit.i_crit_edge
  %.b2.i14.pre = phi i1 [ %.b2.i14.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %28 ]
  %29 = load i32* %input.i, align 4, !tbaa !38
  %.b3.i15.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %rs_read_marker.exit
  %.b3.i15 = phi i1 [ %.b3.i15.pre, %rs_read.exit.i ], [ %.b4.i.i, %rs_read_marker.exit ]
  %.b2.i14 = phi i1 [ %.b2.i14.pre, %rs_read.exit.i ], [ %.b.i.i, %rs_read_marker.exit ]
  %30 = phi i32 [ %29, %rs_read.exit.i ], [ undef, %rs_read_marker.exit ]
  call void @llvm.lifetime.end(i64 4, i8* %24) #8
  %31 = bitcast i32* %input.i13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #8
  store i32 0, i32* %input.i13, align 4, !tbaa !38
  %or.cond.i16 = or i1 %.b2.i14, %.b3.i15
  br i1 %or.cond.i16, label %rs_read_int.exit23, label %32

; <label>:32                                      ; preds = %rs_read_int.exit
  %33 = call i64 @encread(i8* %31, i64 4, %struct.__sFILE* %inf) #8
  %34 = icmp eq i64 %33, 4
  br i1 %34, label %rs_read.exit.i21, label %35

; <label>:35                                      ; preds = %32
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i21

rs_read.exit.i21:                                 ; preds = %35, %32
  %36 = load i32* %input.i13, align 4, !tbaa !38
  br label %rs_read_int.exit23

rs_read_int.exit23:                               ; preds = %rs_read.exit.i21, %rs_read_int.exit
  %37 = phi i32 [ %36, %rs_read.exit.i21 ], [ undef, %rs_read_int.exit ]
  call void @llvm.lifetime.end(i64 4, i8* %31) #8
  %38 = icmp sgt i32 %30, 0
  br i1 %38, label %.preheader.lr.ph, label %._crit_edge38

.preheader.lr.ph:                                 ; preds = %rs_read_int.exit23
  %39 = icmp sgt i32 %37, 0
  %40 = bitcast i32* %input.i24 to i8*
  br label %.preheader

.preheader:                                       ; preds = %._crit_edge, %.preheader.lr.ph
  %row.037 = phi i32 [ 0, %.preheader.lr.ph ], [ %59, %._crit_edge ]
  br i1 %39, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %41 = icmp slt i32 %row.037, %14
  br label %42

; <label>:42                                      ; preds = %56, %.lr.ph
  %col.036 = phi i32 [ 0, %.lr.ph ], [ %57, %56 ]
  call void @llvm.lifetime.start(i64 4, i8* %40) #8
  store i32 0, i32* %input.i24, align 4, !tbaa !38
  %.b2.i25 = load i1* @read_error, align 1
  %.b3.i26 = load i1* @format_error, align 1
  %or.cond.i27 = or i1 %.b2.i25, %.b3.i26
  br i1 %or.cond.i27, label %rs_read_int.exit34.thread, label %43

; <label>:43                                      ; preds = %42
  %44 = call i64 @encread(i8* %40, i64 4, %struct.__sFILE* %inf) #8
  %45 = icmp eq i64 %44, 4
  br i1 %45, label %rs_read_int.exit34, label %rs_read_int.exit34.thread52

rs_read_int.exit34.thread52:                      ; preds = %43
  store i1 true, i1* @read_error, align 1
  %.b4.i3153 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %40) #8
  br label %rs_read_int.exit34.thread

rs_read_int.exit34:                               ; preds = %43
  %.b.pre.i28 = load i1* @read_error, align 1
  %46 = load i32* %input.i24, align 4, !tbaa !38
  %.b4.i31 = load i1* @format_error, align 1
  %47 = or i1 %.b4.i31, %.b.pre.i28
  call void @llvm.lifetime.end(i64 4, i8* %40) #8
  br i1 %47, label %rs_read_int.exit34.thread, label %49

rs_read_int.exit34.thread:                        ; preds = %rs_read_int.exit34, %rs_read_int.exit34.thread52, %42
  %.b651 = phi i1 [ %.b4.i3153, %rs_read_int.exit34.thread52 ], [ %.b3.i26, %42 ], [ %.b4.i31, %rs_read_int.exit34 ]
  %.b250 = phi i1 [ true, %rs_read_int.exit34.thread52 ], [ %.b2.i25, %42 ], [ %.b.pre.i28, %rs_read_int.exit34 ]
  %..b2 = or i1 %.b651, %.b250
  %48 = zext i1 %..b2 to i32
  br label %62

; <label>:49                                      ; preds = %rs_read_int.exit34
  %50 = icmp slt i32 %col.036, %13
  %or.cond7 = and i1 %41, %50
  br i1 %or.cond7, label %51, label %56

; <label>:51                                      ; preds = %49
  %52 = call i32 @wmove(%struct._win_st* %win, i32 %row.037, i32 %col.036) #8
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %56, label %54

; <label>:54                                      ; preds = %51
  %55 = call i32 @waddch(%struct._win_st* %win, i32 %46) #8
  br label %56

; <label>:56                                      ; preds = %54, %51, %49
  %57 = add nsw i32 %col.036, 1
  %58 = icmp slt i32 %57, %37
  br i1 %58, label %42, label %._crit_edge

._crit_edge:                                      ; preds = %56, %.preheader
  %59 = add nsw i32 %row.037, 1
  %60 = icmp slt i32 %59, %30
  br i1 %60, label %.preheader, label %._crit_edge38

._crit_edge38:                                    ; preds = %._crit_edge, %rs_read_int.exit23, %rs_read_int.exit23.thread
  %.b5 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b5, %.b
  %61 = zext i1 %..b to i32
  br label %62

; <label>:62                                      ; preds = %._crit_edge38, %rs_read_int.exit34.thread, %0
  %.0 = phi i32 [ %48, %rs_read_int.exit34.thread ], [ %61, %._crit_edge38 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @get_list_item(%union.thing* readonly %l, i32 %i) #1 {
  %1 = icmp eq %union.thing* %l, null
  br i1 %1, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %5, %0
  %count.04 = phi i32 [ %6, %5 ], [ 0, %0 ]
  %.013 = phi %union.thing* [ %8, %5 ], [ %l, %0 ]
  %2 = icmp eq i32 %count.04, %i
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %.lr.ph
  %4 = bitcast %union.thing* %.013 to i8*
  br label %.loopexit

; <label>:5                                       ; preds = %.lr.ph
  %6 = add nsw i32 %count.04, 1
  %7 = getelementptr inbounds %union.thing* %.013, i64 0, i32 0, i32 0
  %8 = load %union.thing** %7, align 8, !tbaa !14
  %9 = icmp eq %union.thing* %8, null
  br i1 %9, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %5, %3, %0
  %.0 = phi i8* [ %4, %3 ], [ null, %0 ], [ null, %5 ]
  ret i8* %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @find_list_ptr(%union.thing* readonly %l, i8* readnone %ptr) #1 {
  %1 = bitcast i8* %ptr to %union.thing*
  %2 = icmp eq %union.thing* %l, null
  br i1 %2, label %split4, label %.lr.ph

.lr.ph:                                           ; preds = %4, %0
  %count.03 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %.012 = phi %union.thing* [ %7, %4 ], [ %l, %0 ]
  %3 = icmp eq %union.thing* %.012, %1
  br i1 %3, label %split4, label %4

; <label>:4                                       ; preds = %.lr.ph
  %5 = add nsw i32 %count.03, 1
  %6 = getelementptr inbounds %union.thing* %.012, i64 0, i32 0, i32 0
  %7 = load %union.thing** %6, align 8, !tbaa !14
  %8 = icmp eq %union.thing* %7, null
  br i1 %8, label %split4, label %.lr.ph

split4:                                           ; preds = %4, %.lr.ph, %0
  %.0 = phi i32 [ -1, %0 ], [ -1, %4 ], [ %count.03, %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @list_size(%union.thing* readonly %l) #1 {
  %1 = icmp eq %union.thing* %l, null
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %count.02 = phi i32 [ %2, %.lr.ph ], [ 0, %0 ]
  %.01 = phi %union.thing* [ %4, %.lr.ph ], [ %l, %0 ]
  %2 = add nsw i32 %count.02, 1
  %3 = getelementptr inbounds %union.thing* %.01, i64 0, i32 0, i32 0
  %4 = load %union.thing** %3, align 8, !tbaa !14
  %5 = icmp eq %union.thing* %4, null
  br i1 %5, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %count.0.lcssa = phi i32 [ 0, %0 ], [ %2, %.lr.ph ]
  ret i32 %count.0.lcssa
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_stats(%struct.__sFILE* %savef, %struct.stats* %s) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %72, label %9

; <label>:9                                       ; preds = %0
  %10 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 -1412628479, i32* %8, align 4, !tbaa !38
  %11 = call i64 @encwrite(i8* %10, i64 4, %struct.__sFILE* %savef) #8
  %12 = icmp eq i64 %11, 4
  br i1 %12, label %rs_write_marker.exit, label %rs_write_marker.exit.thread

rs_write_marker.exit.thread:                      ; preds = %9
  store i1 true, i1* @write_error, align 1
  br label %rs_write_str_t.exit.thread

rs_write_marker.exit:                             ; preds = %9
  %.b.pre.i = load i1* @write_error, align 1
  br i1 %.b.pre.i, label %rs_write_str_t.exit.thread, label %13

; <label>:13                                      ; preds = %rs_write_marker.exit
  %14 = getelementptr inbounds %struct.stats* %s, i64 0, i32 0
  %15 = load i32* %14, align 4, !tbaa !74
  %16 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %16) #8
  store i32 %15, i32* %7, align 4, !tbaa !38
  %17 = call i64 @encwrite(i8* %16, i64 4, %struct.__sFILE* %savef) #8
  %18 = icmp eq i64 %17, 4
  br i1 %18, label %rs_write_str_t.exit, label %19

; <label>:19                                      ; preds = %13
  store i1 true, i1* @write_error, align 1
  br label %rs_write_str_t.exit.thread

rs_write_str_t.exit.thread:                       ; preds = %19, %rs_write_marker.exit, %rs_write_marker.exit.thread
  %20 = getelementptr inbounds %struct.stats* %s, i64 0, i32 1
  %21 = load i32* %20, align 4, !tbaa !144
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #8
  store i32 %21, i32* %6, align 4, !tbaa !38
  br label %rs_write_int.exit

rs_write_str_t.exit:                              ; preds = %13
  %.b1.i5.pre = load i1* @write_error, align 1
  %23 = getelementptr inbounds %struct.stats* %s, i64 0, i32 1
  %24 = load i32* %23, align 4, !tbaa !144
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %25) #8
  store i32 %24, i32* %6, align 4, !tbaa !38
  br i1 %.b1.i5.pre, label %rs_write_int.exit, label %26

; <label>:26                                      ; preds = %rs_write_str_t.exit
  %27 = call i64 @encwrite(i8* %25, i64 4, %struct.__sFILE* %savef) #8
  %28 = icmp eq i64 %27, 4
  br i1 %28, label %.rs_write_int.exit_crit_edge, label %29

.rs_write_int.exit_crit_edge:                     ; preds = %26
  %.b1.i8.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:29                                      ; preds = %26
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %29, %.rs_write_int.exit_crit_edge, %rs_write_str_t.exit, %rs_write_str_t.exit.thread
  %30 = phi i8* [ %25, %.rs_write_int.exit_crit_edge ], [ %25, %rs_write_str_t.exit ], [ %25, %29 ], [ %22, %rs_write_str_t.exit.thread ]
  %.b1.i8 = phi i1 [ %.b1.i8.pre, %.rs_write_int.exit_crit_edge ], [ true, %rs_write_str_t.exit ], [ true, %29 ], [ true, %rs_write_str_t.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %30) #8
  %31 = getelementptr inbounds %struct.stats* %s, i64 0, i32 2
  %32 = load i32* %31, align 4, !tbaa !73
  %33 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #8
  store i32 %32, i32* %5, align 4, !tbaa !38
  br i1 %.b1.i8, label %rs_write_int.exit12, label %34

; <label>:34                                      ; preds = %rs_write_int.exit
  %35 = call i64 @encwrite(i8* %33, i64 4, %struct.__sFILE* %savef) #8
  %36 = icmp eq i64 %35, 4
  br i1 %36, label %.rs_write_int.exit12_crit_edge, label %37

.rs_write_int.exit12_crit_edge:                   ; preds = %34
  %.b1.i13.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit12

; <label>:37                                      ; preds = %34
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit12

rs_write_int.exit12:                              ; preds = %37, %.rs_write_int.exit12_crit_edge, %rs_write_int.exit
  %.b1.i13 = phi i1 [ %.b1.i13.pre, %.rs_write_int.exit12_crit_edge ], [ true, %rs_write_int.exit ], [ true, %37 ]
  call void @llvm.lifetime.end(i64 4, i8* %33) #8
  %38 = getelementptr inbounds %struct.stats* %s, i64 0, i32 3
  %39 = load i32* %38, align 4, !tbaa !72
  %40 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %40) #8
  store i32 %39, i32* %4, align 4, !tbaa !38
  br i1 %.b1.i13, label %rs_write_int.exit17, label %41

; <label>:41                                      ; preds = %rs_write_int.exit12
  %42 = call i64 @encwrite(i8* %40, i64 4, %struct.__sFILE* %savef) #8
  %43 = icmp eq i64 %42, 4
  br i1 %43, label %.rs_write_int.exit17_crit_edge, label %44

.rs_write_int.exit17_crit_edge:                   ; preds = %41
  %.b1.i18.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit17

; <label>:44                                      ; preds = %41
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit17

rs_write_int.exit17:                              ; preds = %44, %.rs_write_int.exit17_crit_edge, %rs_write_int.exit12
  %.b1.i18 = phi i1 [ %.b1.i18.pre, %.rs_write_int.exit17_crit_edge ], [ true, %rs_write_int.exit12 ], [ true, %44 ]
  call void @llvm.lifetime.end(i64 4, i8* %40) #8
  %45 = getelementptr inbounds %struct.stats* %s, i64 0, i32 4
  %46 = load i32* %45, align 4, !tbaa !75
  %47 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %47) #8
  store i32 %46, i32* %3, align 4, !tbaa !38
  br i1 %.b1.i18, label %rs_write_chars.exit.thread, label %48

; <label>:48                                      ; preds = %rs_write_int.exit17
  %49 = call i64 @encwrite(i8* %47, i64 4, %struct.__sFILE* %savef) #8
  %50 = icmp eq i64 %49, 4
  br i1 %50, label %rs_write_int.exit22, label %51

; <label>:51                                      ; preds = %48
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit.thread

rs_write_int.exit22:                              ; preds = %48
  %.b1.i23.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %47) #8
  %52 = getelementptr inbounds %struct.stats* %s, i64 0, i32 5, i64 0
  br i1 %.b1.i23.pre, label %rs_write_chars.exit.thread, label %53

; <label>:53                                      ; preds = %rs_write_int.exit22
  %54 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %54) #8
  store i32 13, i32* %2, align 4, !tbaa !38
  %55 = call i64 @encwrite(i8* %54, i64 4, %struct.__sFILE* %savef) #8
  %56 = icmp eq i64 %55, 4
  br i1 %56, label %rs_write_int.exit.i, label %rs_write_int.exit.thread.i

rs_write_int.exit.thread.i:                       ; preds = %53
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %54) #8
  br label %rs_write_chars.exit.thread

rs_write_int.exit.i:                              ; preds = %53
  %.b1.i2.pre.i = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %54) #8
  br i1 %.b1.i2.pre.i, label %rs_write_chars.exit.thread, label %57

; <label>:57                                      ; preds = %rs_write_int.exit.i
  %58 = call i64 @encwrite(i8* %52, i64 13, %struct.__sFILE* %savef) #8
  %59 = icmp eq i64 %58, 13
  br i1 %59, label %rs_write_chars.exit, label %60

; <label>:60                                      ; preds = %57
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit.thread

rs_write_chars.exit.thread:                       ; preds = %60, %rs_write_int.exit.i, %rs_write_int.exit.thread.i, %rs_write_int.exit22, %51, %rs_write_int.exit17
  %61 = getelementptr inbounds %struct.stats* %s, i64 0, i32 6
  %62 = load i32* %61, align 4, !tbaa !145
  %63 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %63) #8
  store i32 %62, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit31

rs_write_chars.exit:                              ; preds = %57
  %.b1.i27.pre = load i1* @write_error, align 1
  %64 = getelementptr inbounds %struct.stats* %s, i64 0, i32 6
  %65 = load i32* %64, align 4, !tbaa !145
  %66 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %66) #8
  store i32 %65, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i27.pre, label %rs_write_int.exit31, label %67

; <label>:67                                      ; preds = %rs_write_chars.exit
  %68 = call i64 @encwrite(i8* %66, i64 4, %struct.__sFILE* %savef) #8
  %69 = icmp eq i64 %68, 4
  br i1 %69, label %.rs_write_int.exit31_crit_edge, label %70

.rs_write_int.exit31_crit_edge:                   ; preds = %67
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit31

; <label>:70                                      ; preds = %67
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit31

rs_write_int.exit31:                              ; preds = %70, %.rs_write_int.exit31_crit_edge, %rs_write_chars.exit, %rs_write_chars.exit.thread
  %71 = phi i8* [ %66, %.rs_write_int.exit31_crit_edge ], [ %66, %rs_write_chars.exit ], [ %66, %70 ], [ %63, %rs_write_chars.exit.thread ]
  %.b = phi i1 [ %.b.pre, %.rs_write_int.exit31_crit_edge ], [ true, %rs_write_chars.exit ], [ true, %70 ], [ true, %rs_write_chars.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %71) #8
  br label %72

; <label>:72                                      ; preds = %rs_write_int.exit31, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit31 ], [ true, %0 ]
  %73 = zext i1 %.b1.sink to i32
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_stats(%struct.__sFILE* %inf, %struct.stats* %s) #0 {
  %input.i62 = alloca i32, align 4
  %input.i.i50 = alloca i32, align 4
  %input.i39 = alloca i32, align 4
  %input.i28 = alloca i32, align 4
  %input.i17 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %input.i.i5 = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %66, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i6 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i6
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628479
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_str_t.exit.thread

rs_read_str_t.exit.thread:                        ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = getelementptr inbounds %struct.stats* %s, i64 0, i32 0
  %or.cond.i8 = or i1 %.b2.i6, %.b4.i.i
  br i1 %or.cond.i8, label %rs_read_str_t.exit, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = bitcast i32* %input.i.i5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #8
  %13 = call i64 @encread(i8* %12, i64 4, %struct.__sFILE* %inf) #8
  %14 = icmp eq i64 %13, 4
  br i1 %14, label %.rs_read_uint.exit.i_crit_edge, label %15

.rs_read_uint.exit.i_crit_edge:                   ; preds = %11
  %.b2.i11.pre.pre = load i1* @read_error, align 1
  br label %rs_read_uint.exit.i

; <label>:15                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read_uint.exit.i

rs_read_uint.exit.i:                              ; preds = %15, %.rs_read_uint.exit.i_crit_edge
  %.b2.i11.pre = phi i1 [ %.b2.i11.pre.pre, %.rs_read_uint.exit.i_crit_edge ], [ true, %15 ]
  %16 = load i32* %input.i.i5, align 4, !tbaa !38
  store i32 %16, i32* %10, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %12) #8
  %.b3.i12.pre = load i1* @format_error, align 1
  br label %rs_read_str_t.exit

rs_read_str_t.exit:                               ; preds = %rs_read_uint.exit.i, %rs_read_marker.exit
  %.b3.i12 = phi i1 [ %.b4.i.i, %rs_read_marker.exit ], [ %.b3.i12.pre, %rs_read_uint.exit.i ]
  %.b2.i11 = phi i1 [ %.b2.i6, %rs_read_marker.exit ], [ %.b2.i11.pre, %rs_read_uint.exit.i ]
  %17 = getelementptr inbounds %struct.stats* %s, i64 0, i32 1
  %18 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i13 = or i1 %.b2.i11, %.b3.i12
  br i1 %or.cond.i13, label %rs_read_int.exit, label %19

; <label>:19                                      ; preds = %rs_read_str_t.exit
  %20 = call i64 @encread(i8* %18, i64 4, %struct.__sFILE* %inf) #8
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %.rs_read.exit.i_crit_edge, label %22

.rs_read.exit.i_crit_edge:                        ; preds = %19
  %.b2.i18.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i

; <label>:22                                      ; preds = %19
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %22, %.rs_read.exit.i_crit_edge
  %.b2.i18.pre = phi i1 [ %.b2.i18.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %22 ]
  %23 = load i32* %input.i, align 4, !tbaa !38
  store i32 %23, i32* %17, align 4, !tbaa !38
  %.b3.i19.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %rs_read_str_t.exit, %rs_read_str_t.exit.thread
  %24 = phi i8* [ %18, %rs_read_str_t.exit ], [ %18, %rs_read.exit.i ], [ %9, %rs_read_str_t.exit.thread ]
  %.b3.i19 = phi i1 [ %.b3.i12, %rs_read_str_t.exit ], [ %.b3.i19.pre, %rs_read.exit.i ], [ true, %rs_read_str_t.exit.thread ]
  %.b2.i18 = phi i1 [ %.b2.i11, %rs_read_str_t.exit ], [ %.b2.i18.pre, %rs_read.exit.i ], [ %.b2.i6, %rs_read_str_t.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %24) #8
  %25 = getelementptr inbounds %struct.stats* %s, i64 0, i32 2
  %26 = bitcast i32* %input.i17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #8
  store i32 0, i32* %input.i17, align 4, !tbaa !38
  %or.cond.i20 = or i1 %.b2.i18, %.b3.i19
  br i1 %or.cond.i20, label %rs_read_int.exit27, label %27

; <label>:27                                      ; preds = %rs_read_int.exit
  %28 = call i64 @encread(i8* %26, i64 4, %struct.__sFILE* %inf) #8
  %29 = icmp eq i64 %28, 4
  br i1 %29, label %.rs_read.exit.i25_crit_edge, label %30

.rs_read.exit.i25_crit_edge:                      ; preds = %27
  %.b2.i29.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i25

; <label>:30                                      ; preds = %27
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i25

rs_read.exit.i25:                                 ; preds = %30, %.rs_read.exit.i25_crit_edge
  %.b2.i29.pre = phi i1 [ %.b2.i29.pre.pre, %.rs_read.exit.i25_crit_edge ], [ true, %30 ]
  %31 = load i32* %input.i17, align 4, !tbaa !38
  store i32 %31, i32* %25, align 4, !tbaa !38
  %.b3.i30.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit27

rs_read_int.exit27:                               ; preds = %rs_read.exit.i25, %rs_read_int.exit
  %.b3.i30 = phi i1 [ %.b3.i19, %rs_read_int.exit ], [ %.b3.i30.pre, %rs_read.exit.i25 ]
  %.b2.i29 = phi i1 [ %.b2.i18, %rs_read_int.exit ], [ %.b2.i29.pre, %rs_read.exit.i25 ]
  call void @llvm.lifetime.end(i64 4, i8* %26) #8
  %32 = getelementptr inbounds %struct.stats* %s, i64 0, i32 3
  %33 = bitcast i32* %input.i28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #8
  store i32 0, i32* %input.i28, align 4, !tbaa !38
  %or.cond.i31 = or i1 %.b2.i29, %.b3.i30
  br i1 %or.cond.i31, label %rs_read_int.exit38, label %34

; <label>:34                                      ; preds = %rs_read_int.exit27
  %35 = call i64 @encread(i8* %33, i64 4, %struct.__sFILE* %inf) #8
  %36 = icmp eq i64 %35, 4
  br i1 %36, label %.rs_read.exit.i36_crit_edge, label %37

.rs_read.exit.i36_crit_edge:                      ; preds = %34
  %.b2.i40.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i36

; <label>:37                                      ; preds = %34
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i36

rs_read.exit.i36:                                 ; preds = %37, %.rs_read.exit.i36_crit_edge
  %.b2.i40.pre = phi i1 [ %.b2.i40.pre.pre, %.rs_read.exit.i36_crit_edge ], [ true, %37 ]
  %38 = load i32* %input.i28, align 4, !tbaa !38
  store i32 %38, i32* %32, align 4, !tbaa !38
  %.b3.i41.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit38

rs_read_int.exit38:                               ; preds = %rs_read.exit.i36, %rs_read_int.exit27
  %.b3.i41 = phi i1 [ %.b3.i30, %rs_read_int.exit27 ], [ %.b3.i41.pre, %rs_read.exit.i36 ]
  %.b2.i40 = phi i1 [ %.b2.i29, %rs_read_int.exit27 ], [ %.b2.i40.pre, %rs_read.exit.i36 ]
  call void @llvm.lifetime.end(i64 4, i8* %33) #8
  %39 = getelementptr inbounds %struct.stats* %s, i64 0, i32 4
  %40 = bitcast i32* %input.i39 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %40) #8
  store i32 0, i32* %input.i39, align 4, !tbaa !38
  %or.cond.i42 = or i1 %.b2.i40, %.b3.i41
  br i1 %or.cond.i42, label %rs_read_int.exit49, label %41

; <label>:41                                      ; preds = %rs_read_int.exit38
  %42 = call i64 @encread(i8* %40, i64 4, %struct.__sFILE* %inf) #8
  %43 = icmp eq i64 %42, 4
  br i1 %43, label %.rs_read.exit.i47_crit_edge, label %44

.rs_read.exit.i47_crit_edge:                      ; preds = %41
  %.b2.i51.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i47

; <label>:44                                      ; preds = %41
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i47

rs_read.exit.i47:                                 ; preds = %44, %.rs_read.exit.i47_crit_edge
  %.b2.i51.pre = phi i1 [ %.b2.i51.pre.pre, %.rs_read.exit.i47_crit_edge ], [ true, %44 ]
  %45 = load i32* %input.i39, align 4, !tbaa !38
  store i32 %45, i32* %39, align 4, !tbaa !38
  %.b3.i52.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit49

rs_read_int.exit49:                               ; preds = %rs_read.exit.i47, %rs_read_int.exit38
  %.b3.i52 = phi i1 [ %.b3.i41, %rs_read_int.exit38 ], [ %.b3.i52.pre, %rs_read.exit.i47 ]
  %.b2.i51 = phi i1 [ %.b2.i40, %rs_read_int.exit38 ], [ %.b2.i51.pre, %rs_read.exit.i47 ]
  call void @llvm.lifetime.end(i64 4, i8* %40) #8
  %46 = getelementptr inbounds %struct.stats* %s, i64 0, i32 5, i64 0
  %or.cond.i53 = or i1 %.b2.i51, %.b3.i52
  br i1 %or.cond.i53, label %rs_read_chars.exit, label %47

; <label>:47                                      ; preds = %rs_read_int.exit49
  %48 = bitcast i32* %input.i.i50 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %48) #8
  store i32 0, i32* %input.i.i50, align 4, !tbaa !38
  %49 = call i64 @encread(i8* %48, i64 4, %struct.__sFILE* %inf) #8
  %50 = icmp eq i64 %49, 4
  br i1 %50, label %rs_read_int.exit.i54, label %51

; <label>:51                                      ; preds = %47
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i54

rs_read_int.exit.i54:                             ; preds = %51, %47
  %52 = load i32* %input.i.i50, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %48) #8
  %53 = icmp eq i32 %52, 13
  br i1 %53, label %54, label %.thread.i

.thread.i:                                        ; preds = %rs_read_int.exit.i54
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit

; <label>:54                                      ; preds = %rs_read_int.exit.i54
  %.b3.i6.pre.i = load i1* @format_error, align 1
  %.b2.i5.i = load i1* @read_error, align 1
  %or.cond.i7.i = or i1 %.b2.i5.i, %.b3.i6.pre.i
  br i1 %or.cond.i7.i, label %rs_read_chars.exit, label %55

; <label>:55                                      ; preds = %54
  %56 = call i64 @encread(i8* %46, i64 13, %struct.__sFILE* %inf) #8
  %57 = icmp eq i64 %56, 13
  br i1 %57, label %rs_read_chars.exit, label %58

; <label>:58                                      ; preds = %55
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_chars.exit:                               ; preds = %58, %55, %54, %.thread.i, %rs_read_int.exit49
  %59 = getelementptr inbounds %struct.stats* %s, i64 0, i32 6
  %60 = bitcast i32* %input.i62 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %60) #8
  store i32 0, i32* %input.i62, align 4, !tbaa !38
  %.b2.i63 = load i1* @read_error, align 1
  %.b3.i64 = load i1* @format_error, align 1
  %or.cond.i65 = or i1 %.b2.i63, %.b3.i64
  br i1 %or.cond.i65, label %rs_read_int.exit72, label %61

; <label>:61                                      ; preds = %rs_read_chars.exit
  %62 = call i64 @encread(i8* %60, i64 4, %struct.__sFILE* %inf) #8
  %63 = icmp eq i64 %62, 4
  br i1 %63, label %.rs_read.exit.i70_crit_edge, label %64

.rs_read.exit.i70_crit_edge:                      ; preds = %61
  %.b.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i70

; <label>:64                                      ; preds = %61
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i70

rs_read.exit.i70:                                 ; preds = %64, %.rs_read.exit.i70_crit_edge
  %.b.pre = phi i1 [ %.b.pre.pre, %.rs_read.exit.i70_crit_edge ], [ true, %64 ]
  %65 = load i32* %input.i62, align 4, !tbaa !38
  store i32 %65, i32* %59, align 4, !tbaa !38
  %.b4.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit72

rs_read_int.exit72:                               ; preds = %rs_read.exit.i70, %rs_read_chars.exit
  %.b = phi i1 [ %.b2.i63, %rs_read_chars.exit ], [ %.b.pre, %rs_read.exit.i70 ]
  %.b4 = phi i1 [ %.b3.i64, %rs_read_chars.exit ], [ %.b4.pre, %rs_read.exit.i70 ]
  call void @llvm.lifetime.end(i64 4, i8* %60) #8
  %..b = or i1 %.b4, %.b
  br label %66

; <label>:66                                      ; preds = %rs_read_int.exit72, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_int.exit72 ], [ true, %0 ]
  %67 = zext i1 %..b2.sink to i32
  ret i32 %67
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_stone_index(%struct.__sFILE* %savef, %struct.STONE* nocapture readonly %master, i32 %max, i8* readnone %str) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b2 = load i1* @write_error, align 1
  br i1 %.b2, label %22, label %.preheader

.preheader:                                       ; preds = %0
  %3 = icmp sgt i32 %max, 0
  br i1 %3, label %.lr.ph, label %.loopexit

; <label>:4                                       ; preds = %.lr.ph
  %5 = trunc i64 %indvars.iv.next to i32
  %6 = icmp slt i32 %5, %max
  br i1 %6, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %4, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %4 ], [ 0, %.preheader ]
  %7 = getelementptr inbounds %struct.STONE* %master, i64 %indvars.iv, i32 0
  %8 = load i8** %7, align 8, !tbaa !79
  %9 = icmp eq i8* %8, %str
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %9, label %10, label %4

; <label>:10                                      ; preds = %.lr.ph
  %11 = trunc i64 %indvars.iv to i32
  %12 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #8
  store i32 %11, i32* %2, align 4, !tbaa !38
  %13 = call i64 @encwrite(i8* %12, i64 4, %struct.__sFILE* %savef) #8
  %14 = icmp eq i64 %13, 4
  br i1 %14, label %.rs_write_int.exit_crit_edge, label %15

.rs_write_int.exit_crit_edge:                     ; preds = %10
  %.b1.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:15                                      ; preds = %10
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %15, %.rs_write_int.exit_crit_edge
  %.b1 = phi i1 [ %.b1.pre, %.rs_write_int.exit_crit_edge ], [ true, %15 ]
  call void @llvm.lifetime.end(i64 4, i8* %12) #8
  %16 = zext i1 %.b1 to i32
  br label %22

.loopexit:                                        ; preds = %4, %.preheader
  %17 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 -1, i32* %1, align 4, !tbaa !38
  %18 = call i64 @encwrite(i8* %17, i64 4, %struct.__sFILE* %savef) #8
  %19 = icmp eq i64 %18, 4
  br i1 %19, label %.rs_write_int.exit7_crit_edge, label %20

.rs_write_int.exit7_crit_edge:                    ; preds = %.loopexit
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit7

; <label>:20                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit7

rs_write_int.exit7:                               ; preds = %20, %.rs_write_int.exit7_crit_edge
  %.b = phi i1 [ %.b.pre, %.rs_write_int.exit7_crit_edge ], [ true, %20 ]
  call void @llvm.lifetime.end(i64 4, i8* %17) #8
  %21 = zext i1 %.b to i32
  br label %22

; <label>:22                                      ; preds = %rs_write_int.exit7, %rs_write_int.exit, %0
  %.0 = phi i32 [ %16, %rs_write_int.exit ], [ %21, %rs_write_int.exit7 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_stone_index(%struct.__sFILE* %inf, %struct.STONE* nocapture readonly %master, i32 %maxindex, i8** nocapture %str) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %17, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp sgt i32 %6, %maxindex
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %16

; <label>:9                                       ; preds = %rs_read_int.exit
  %10 = icmp sgt i32 %6, -1
  br i1 %10, label %11, label %15

; <label>:11                                      ; preds = %9
  %12 = sext i32 %6 to i64
  %13 = getelementptr inbounds %struct.STONE* %master, i64 %12, i32 0
  %14 = load i8** %13, align 8, !tbaa !79
  store i8* %14, i8** %str, align 8, !tbaa !1
  br label %16

; <label>:15                                      ; preds = %9
  store i8* null, i8** %str, align 8, !tbaa !1
  br label %16

; <label>:16                                      ; preds = %15, %11, %8
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %17

; <label>:17                                      ; preds = %16, %0
  %..b2.sink = phi i1 [ %..b, %16 ], [ true, %0 ]
  %18 = zext i1 %..b2.sink to i32
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_scrolls(%struct.__sFILE* %savef) #0 {
  %.b = load i1* @write_error, align 1
  br i1 %.b, label %37, label %.preheader

.preheader:                                       ; preds = %0
  %1 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 0), align 8, !tbaa !1
  %2 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %1)
  %3 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 1), align 8, !tbaa !1
  %4 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %3)
  %5 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 2), align 8, !tbaa !1
  %6 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %5)
  %7 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 3), align 8, !tbaa !1
  %8 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %7)
  %9 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 4), align 8, !tbaa !1
  %10 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %9)
  %11 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 5), align 8, !tbaa !1
  %12 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %11)
  %13 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 6), align 8, !tbaa !1
  %14 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %13)
  %15 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 7), align 8, !tbaa !1
  %16 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %15)
  %17 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 8), align 8, !tbaa !1
  %18 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %17)
  %19 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 9), align 8, !tbaa !1
  %20 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %19)
  %21 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 10), align 8, !tbaa !1
  %22 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %21)
  %23 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 11), align 8, !tbaa !1
  %24 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %23)
  %25 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 12), align 8, !tbaa !1
  %26 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %25)
  %27 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 13), align 8, !tbaa !1
  %28 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %27)
  %29 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 14), align 8, !tbaa !1
  %30 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %29)
  %31 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 15), align 8, !tbaa !1
  %32 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %31)
  %33 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 16), align 8, !tbaa !1
  %34 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %33)
  %35 = load i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 17), align 8, !tbaa !1
  %36 = tail call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %35)
  %.b2 = load i1* @format_error, align 1
  %.b1 = load i1* @read_error, align 1
  %..b1 = or i1 %.b2, %.b1
  br label %37

; <label>:37                                      ; preds = %.preheader, %0
  %.b.sink = phi i1 [ %..b1, %.preheader ], [ true, %0 ]
  %38 = zext i1 %.b.sink to i32
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_scrolls(%struct.__sFILE* %inf) #0 {
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %19, label %.preheader

.preheader:                                       ; preds = %0
  %1 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 0))
  %2 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 1))
  %3 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 2))
  %4 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 3))
  %5 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 4))
  %6 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 5))
  %7 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 6))
  %8 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 7))
  %9 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 8))
  %10 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 9))
  %11 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 10))
  %12 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 11))
  %13 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 12))
  %14 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 13))
  %15 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 14))
  %16 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 15))
  %17 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 16))
  %18 = tail call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** getelementptr inbounds ([18 x i8*]* @s_names, i64 0, i64 17))
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %19

; <label>:19                                      ; preds = %.preheader, %0
  %..b2.sink = phi i1 [ %..b, %.preheader ], [ true, %0 ]
  %20 = zext i1 %..b2.sink to i32
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_potions(%struct.__sFILE* %savef) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %.loopexit7, label %.preheader

.preheader:                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  %4 = bitcast i32* %2 to i8*
  br label %rs_write_string_index.exit._crit_edge

rs_write_string_index.exit._crit_edge:            ; preds = %rs_write_string_index.exit, %.preheader
  %.b.i = phi i1 [ false, %.preheader ], [ %.b, %rs_write_string_index.exit ]
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %rs_write_string_index.exit ]
  %5 = load i32* @cNCOLORS, align 4, !tbaa !38
  %6 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @p_colors to [0 x i8*]*), i64 0, i64 %indvars.iv
  %7 = load i8** %6, align 8, !tbaa !1
  br i1 %.b.i, label %rs_write_string_index.exit, label %.preheader.i

.preheader.i:                                     ; preds = %rs_write_string_index.exit._crit_edge
  %8 = icmp sgt i32 %5, 0
  br i1 %8, label %.lr.ph.i, label %.loopexit

; <label>:9                                       ; preds = %.lr.ph.i
  %10 = trunc i64 %indvars.iv.next.i to i32
  %11 = icmp slt i32 %10, %5
  br i1 %11, label %.lr.ph.i, label %.loopexit

.lr.ph.i:                                         ; preds = %9, %.preheader.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %9 ], [ 0, %.preheader.i ]
  %12 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %indvars.iv.i
  %13 = load i8** %12, align 8, !tbaa !1
  %14 = icmp eq i8* %13, %7
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %14, label %15, label %9

; <label>:15                                      ; preds = %.lr.ph.i
  %16 = trunc i64 %indvars.iv.i to i32
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 %16, i32* %2, align 4, !tbaa !38
  %17 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %18 = icmp eq i64 %17, 4
  br i1 %18, label %rs_write_string_index.exit, label %19

; <label>:19                                      ; preds = %15
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

.loopexit:                                        ; preds = %9, %.preheader.i
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 -1, i32* %1, align 4, !tbaa !38
  %20 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %rs_write_string_index.exit, label %22

; <label>:22                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

rs_write_string_index.exit:                       ; preds = %22, %.loopexit, %19, %15, %rs_write_string_index.exit._crit_edge
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  %.b = load i1* @write_error, align 1
  br i1 %exitcond, label %.loopexit7, label %rs_write_string_index.exit._crit_edge

.loopexit7:                                       ; preds = %rs_write_string_index.exit, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b, %rs_write_string_index.exit ]
  %23 = zext i1 %.b1.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_potions(%struct.__sFILE* %inf) #0 {
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %19, label %.preheader

.preheader:                                       ; preds = %0
  %1 = bitcast i32* %input.i.i to i8*
  br label %2

; <label>:2                                       ; preds = %rs_read_string_index.exit._crit_edge, %.preheader
  %.b3.i = phi i1 [ false, %.preheader ], [ %.b3.i.pre, %rs_read_string_index.exit._crit_edge ]
  %.b2.i = phi i1 [ false, %.preheader ], [ %.b2.i.pre, %rs_read_string_index.exit._crit_edge ]
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %rs_read_string_index.exit._crit_edge ]
  %3 = load i32* @cNCOLORS, align 4, !tbaa !38
  %4 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @p_colors to [0 x i8*]*), i64 0, i64 %indvars.iv
  %or.cond.i = or i1 %.b2.i, %.b3.i
  br i1 %or.cond.i, label %rs_read_string_index.exit, label %5

; <label>:5                                       ; preds = %2
  call void @llvm.lifetime.start(i64 4, i8* %1) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %6 = call i64 @encread(i8* %1, i64 4, %struct.__sFILE* %inf) #8
  %7 = icmp eq i64 %6, 4
  br i1 %7, label %rs_read_int.exit.i, label %8

; <label>:8                                       ; preds = %5
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %8, %5
  %9 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %1) #8
  %10 = icmp sgt i32 %9, %3
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_string_index.exit

; <label>:12                                      ; preds = %rs_read_int.exit.i
  %13 = icmp sgt i32 %9, -1
  br i1 %13, label %14, label %.thread.i

; <label>:14                                      ; preds = %12
  %15 = sext i32 %9 to i64
  %16 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %15
  %17 = load i8** %16, align 8, !tbaa !1
  store i8* %17, i8** %4, align 8, !tbaa !1
  br label %rs_read_string_index.exit

.thread.i:                                        ; preds = %12
  store i8* null, i8** %4, align 8, !tbaa !1
  br label %rs_read_string_index.exit

rs_read_string_index.exit:                        ; preds = %.thread.i, %14, %11, %2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %18, label %rs_read_string_index.exit._crit_edge

rs_read_string_index.exit._crit_edge:             ; preds = %rs_read_string_index.exit
  %.b2.i.pre = load i1* @read_error, align 1
  %.b3.i.pre = load i1* @format_error, align 1
  br label %2

; <label>:18                                      ; preds = %rs_read_string_index.exit
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %19

; <label>:19                                      ; preds = %18, %0
  %..b2.sink = phi i1 [ %..b, %18 ], [ true, %0 ]
  %20 = zext i1 %..b2.sink to i32
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_rings(%struct.__sFILE* %savef) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %.loopexit7, label %.preheader

.preheader:                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  %4 = bitcast i32* %2 to i8*
  br label %rs_write_stone_index.exit._crit_edge

rs_write_stone_index.exit._crit_edge:             ; preds = %rs_write_stone_index.exit, %.preheader
  %.b2.i = phi i1 [ false, %.preheader ], [ %.b, %rs_write_stone_index.exit ]
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %rs_write_stone_index.exit ]
  %5 = load i32* @cNSTONES, align 4, !tbaa !38
  %6 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @r_stones to [0 x i8*]*), i64 0, i64 %indvars.iv
  %7 = load i8** %6, align 8, !tbaa !1
  br i1 %.b2.i, label %rs_write_stone_index.exit, label %.preheader.i

.preheader.i:                                     ; preds = %rs_write_stone_index.exit._crit_edge
  %8 = icmp sgt i32 %5, 0
  br i1 %8, label %.lr.ph.i, label %.loopexit

; <label>:9                                       ; preds = %.lr.ph.i
  %10 = trunc i64 %indvars.iv.next.i to i32
  %11 = icmp slt i32 %10, %5
  br i1 %11, label %.lr.ph.i, label %.loopexit

.lr.ph.i:                                         ; preds = %9, %.preheader.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %9 ], [ 0, %.preheader.i ]
  %12 = getelementptr inbounds [0 x %struct.STONE]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @stones to [0 x %struct.STONE]*), i64 0, i64 %indvars.iv.i, i32 0
  %13 = load i8** %12, align 8, !tbaa !79
  %14 = icmp eq i8* %13, %7
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %14, label %15, label %9

; <label>:15                                      ; preds = %.lr.ph.i
  %16 = trunc i64 %indvars.iv.i to i32
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 %16, i32* %2, align 4, !tbaa !38
  %17 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %18 = icmp eq i64 %17, 4
  br i1 %18, label %rs_write_stone_index.exit, label %19

; <label>:19                                      ; preds = %15
  store i1 true, i1* @write_error, align 1
  br label %rs_write_stone_index.exit

.loopexit:                                        ; preds = %9, %.preheader.i
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 -1, i32* %1, align 4, !tbaa !38
  %20 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %rs_write_stone_index.exit, label %22

; <label>:22                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_stone_index.exit

rs_write_stone_index.exit:                        ; preds = %22, %.loopexit, %19, %15, %rs_write_stone_index.exit._crit_edge
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  %.b = load i1* @write_error, align 1
  br i1 %exitcond, label %.loopexit7, label %rs_write_stone_index.exit._crit_edge

.loopexit7:                                       ; preds = %rs_write_stone_index.exit, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b, %rs_write_stone_index.exit ]
  %23 = zext i1 %.b1.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_rings(%struct.__sFILE* %inf) #0 {
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %20, label %.preheader

.preheader:                                       ; preds = %0
  %1 = bitcast i32* %input.i.i to i8*
  br label %2

; <label>:2                                       ; preds = %rs_read_stone_index.exit._crit_edge, %.preheader
  %.b3.i = phi i1 [ false, %.preheader ], [ %.b3.i.pre, %rs_read_stone_index.exit._crit_edge ]
  %.b2.i = phi i1 [ false, %.preheader ], [ %.b2.i.pre, %rs_read_stone_index.exit._crit_edge ]
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %rs_read_stone_index.exit._crit_edge ]
  %3 = load i32* @cNSTONES, align 4, !tbaa !38
  %4 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @r_stones to [0 x i8*]*), i64 0, i64 %indvars.iv
  %or.cond.i = or i1 %.b2.i, %.b3.i
  br i1 %or.cond.i, label %rs_read_stone_index.exit, label %5

; <label>:5                                       ; preds = %2
  call void @llvm.lifetime.start(i64 4, i8* %1) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %6 = call i64 @encread(i8* %1, i64 4, %struct.__sFILE* %inf) #8
  %7 = icmp eq i64 %6, 4
  br i1 %7, label %rs_read_int.exit.i, label %8

; <label>:8                                       ; preds = %5
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %8, %5
  %9 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %1) #8
  %10 = icmp sgt i32 %9, %3
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_stone_index.exit

; <label>:12                                      ; preds = %rs_read_int.exit.i
  %13 = icmp sgt i32 %9, -1
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %12
  %15 = sext i32 %9 to i64
  %16 = getelementptr inbounds [0 x %struct.STONE]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @stones to [0 x %struct.STONE]*), i64 0, i64 %15, i32 0
  %17 = load i8** %16, align 8, !tbaa !79
  store i8* %17, i8** %4, align 8, !tbaa !1
  br label %rs_read_stone_index.exit

; <label>:18                                      ; preds = %12
  store i8* null, i8** %4, align 8, !tbaa !1
  br label %rs_read_stone_index.exit

rs_read_stone_index.exit:                         ; preds = %18, %14, %11, %2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %19, label %rs_read_stone_index.exit._crit_edge

rs_read_stone_index.exit._crit_edge:              ; preds = %rs_read_stone_index.exit
  %.b2.i.pre = load i1* @read_error, align 1
  %.b3.i.pre = load i1* @format_error, align 1
  br label %2

; <label>:19                                      ; preds = %rs_read_stone_index.exit
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %20

; <label>:20                                      ; preds = %19, %0
  %..b2.sink = phi i1 [ %..b, %19 ], [ true, %0 ]
  %21 = zext i1 %..b2.sink to i32
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_sticks(%struct.__sFILE* %savef) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %65, label %.preheader

.preheader:                                       ; preds = %0
  %7 = bitcast i32* %6 to i8*
  %8 = bitcast i32* %4 to i8*
  %9 = bitcast i32* %5 to i8*
  %10 = bitcast i32* %3 to i8*
  %11 = bitcast i32* %1 to i8*
  %12 = bitcast i32* %2 to i8*
  br label %13

; <label>:13                                      ; preds = %rs_write_string_index.exit, %.preheader
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %rs_write_string_index.exit ]
  %14 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %indvars.iv
  %15 = load i8** %14, align 8, !tbaa !1
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8]* @.str946, i64 0, i64 0)) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %41

; <label>:18                                      ; preds = %13
  call void @llvm.lifetime.start(i64 4, i8* %7) #8
  store i32 0, i32* %6, align 4, !tbaa !38
  %.b1.i = load i1* @write_error, align 1
  br i1 %.b1.i, label %rs_write_string_index.exit, label %19

; <label>:19                                      ; preds = %18
  %20 = call i64 @encwrite(i8* %7, i64 4, %struct.__sFILE* %savef) #8
  %21 = icmp eq i64 %20, 4
  br i1 %21, label %rs_write_int.exit, label %22

; <label>:22                                      ; preds = %19
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

rs_write_int.exit:                                ; preds = %19
  %.b.i.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %7) #8
  %23 = load i32* @cNWOOD, align 4, !tbaa !38
  %24 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %indvars.iv
  %25 = load i8** %24, align 8, !tbaa !1
  br i1 %.b.i.pre, label %rs_write_string_index.exit, label %.preheader.i

.preheader.i:                                     ; preds = %rs_write_int.exit
  %26 = icmp sgt i32 %23, 0
  br i1 %26, label %.lr.ph.i, label %.loopexit23

; <label>:27                                      ; preds = %.lr.ph.i
  %28 = trunc i64 %indvars.iv.next.i to i32
  %29 = icmp slt i32 %28, %23
  br i1 %29, label %.lr.ph.i, label %.loopexit23

.lr.ph.i:                                         ; preds = %27, %.preheader.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %27 ], [ 0, %.preheader.i ]
  %30 = getelementptr inbounds [0 x i8*]* bitcast ([33 x i8*]* @wood to [0 x i8*]*), i64 0, i64 %indvars.iv.i
  %31 = load i8** %30, align 8, !tbaa !1
  %32 = icmp eq i8* %31, %25
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %32, label %33, label %27

; <label>:33                                      ; preds = %.lr.ph.i
  %34 = trunc i64 %indvars.iv.i to i32
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 %34, i32* %5, align 4, !tbaa !38
  %35 = call i64 @encwrite(i8* %9, i64 4, %struct.__sFILE* %savef) #8
  %36 = icmp eq i64 %35, 4
  br i1 %36, label %rs_write_string_index.exit, label %37

; <label>:37                                      ; preds = %33
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

.loopexit23:                                      ; preds = %27, %.preheader.i
  call void @llvm.lifetime.start(i64 4, i8* %8) #8
  store i32 -1, i32* %4, align 4, !tbaa !38
  %38 = call i64 @encwrite(i8* %8, i64 4, %struct.__sFILE* %savef) #8
  %39 = icmp eq i64 %38, 4
  br i1 %39, label %rs_write_string_index.exit, label %40

; <label>:40                                      ; preds = %.loopexit23
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

; <label>:41                                      ; preds = %13
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 1, i32* %3, align 4, !tbaa !38
  %.b1.i2 = load i1* @write_error, align 1
  br i1 %.b1.i2, label %rs_write_string_index.exit, label %42

; <label>:42                                      ; preds = %41
  %43 = call i64 @encwrite(i8* %10, i64 4, %struct.__sFILE* %savef) #8
  %44 = icmp eq i64 %43, 4
  br i1 %44, label %rs_write_int.exit6, label %45

; <label>:45                                      ; preds = %42
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

rs_write_int.exit6:                               ; preds = %42
  %.b.i7.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %46 = load i32* @cNMETAL, align 4, !tbaa !38
  %47 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %indvars.iv
  %48 = load i8** %47, align 8, !tbaa !1
  br i1 %.b.i7.pre, label %rs_write_string_index.exit, label %.preheader.i8

.preheader.i8:                                    ; preds = %rs_write_int.exit6
  %49 = icmp sgt i32 %46, 0
  br i1 %49, label %.lr.ph.i11, label %.loopexit

; <label>:50                                      ; preds = %.lr.ph.i11
  %51 = trunc i64 %indvars.iv.next.i10 to i32
  %52 = icmp slt i32 %51, %46
  br i1 %52, label %.lr.ph.i11, label %.loopexit

.lr.ph.i11:                                       ; preds = %50, %.preheader.i8
  %indvars.iv.i9 = phi i64 [ %indvars.iv.next.i10, %50 ], [ 0, %.preheader.i8 ]
  %53 = getelementptr inbounds [0 x i8*]* bitcast ([22 x i8*]* @metal to [0 x i8*]*), i64 0, i64 %indvars.iv.i9
  %54 = load i8** %53, align 8, !tbaa !1
  %55 = icmp eq i8* %54, %48
  %indvars.iv.next.i10 = add nuw nsw i64 %indvars.iv.i9, 1
  br i1 %55, label %56, label %50

; <label>:56                                      ; preds = %.lr.ph.i11
  %57 = trunc i64 %indvars.iv.i9 to i32
  call void @llvm.lifetime.start(i64 4, i8* %12) #8
  store i32 %57, i32* %2, align 4, !tbaa !38
  %58 = call i64 @encwrite(i8* %12, i64 4, %struct.__sFILE* %savef) #8
  %59 = icmp eq i64 %58, 4
  br i1 %59, label %rs_write_string_index.exit, label %60

; <label>:60                                      ; preds = %56
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

.loopexit:                                        ; preds = %50, %.preheader.i8
  call void @llvm.lifetime.start(i64 4, i8* %11) #8
  store i32 -1, i32* %1, align 4, !tbaa !38
  %61 = call i64 @encwrite(i8* %11, i64 4, %struct.__sFILE* %savef) #8
  %62 = icmp eq i64 %61, 4
  br i1 %62, label %rs_write_string_index.exit, label %63

; <label>:63                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_string_index.exit

rs_write_string_index.exit:                       ; preds = %63, %.loopexit, %60, %56, %rs_write_int.exit6, %45, %41, %40, %.loopexit23, %37, %33, %rs_write_int.exit, %22, %18
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %64, label %13

; <label>:64                                      ; preds = %rs_write_string_index.exit
  %.b = load i1* @write_error, align 1
  br label %65

; <label>:65                                      ; preds = %64, %0
  %.b1.sink = phi i1 [ %.b, %64 ], [ true, %0 ]
  %66 = zext i1 %.b1.sink to i32
  ret i32 %66
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_sticks(%struct.__sFILE* %inf) #0 {
  %input.i.i10 = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %49, label %.preheader

.preheader:                                       ; preds = %0
  %1 = bitcast i32* %input.i to i8*
  %2 = bitcast i32* %input.i.i to i8*
  %3 = bitcast i32* %input.i.i10 to i8*
  br label %4

; <label>:4                                       ; preds = %._crit_edge, %.preheader
  %.b3.i = phi i1 [ false, %.preheader ], [ %.b3.i.pre, %._crit_edge ]
  %.b2.i = phi i1 [ false, %.preheader ], [ %.b2.i.pre, %._crit_edge ]
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %._crit_edge ]
  %5 = phi i32 [ 0, %.preheader ], [ %11, %._crit_edge ]
  call void @llvm.lifetime.start(i64 4, i8* %1) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i = or i1 %.b2.i, %.b3.i
  br i1 %or.cond.i, label %rs_read_int.exit, label %6

; <label>:6                                       ; preds = %4
  %7 = call i64 @encread(i8* %1, i64 4, %struct.__sFILE* %inf) #8
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %rs_read.exit.i, label %9

; <label>:9                                       ; preds = %6
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %9, %6
  %10 = load i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %4
  %11 = phi i32 [ %10, %rs_read.exit.i ], [ %5, %4 ]
  call void @llvm.lifetime.end(i64 4, i8* %1) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %30

; <label>:13                                      ; preds = %rs_read_int.exit
  %14 = load i32* @cNWOOD, align 4, !tbaa !38
  %15 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %indvars.iv
  %.b2.i5 = load i1* @read_error, align 1
  %.b3.i6 = load i1* @format_error, align 1
  %or.cond.i7 = or i1 %.b2.i5, %.b3.i6
  br i1 %or.cond.i7, label %rs_read_string_index.exit, label %16

; <label>:16                                      ; preds = %13
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %17 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %18 = icmp eq i64 %17, 4
  br i1 %18, label %rs_read_int.exit.i, label %19

; <label>:19                                      ; preds = %16
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %19, %16
  %20 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %21 = icmp sgt i32 %20, %14
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_string_index.exit

; <label>:23                                      ; preds = %rs_read_int.exit.i
  %24 = icmp sgt i32 %20, -1
  br i1 %24, label %25, label %.thread.i

; <label>:25                                      ; preds = %23
  %26 = sext i32 %20 to i64
  %27 = getelementptr inbounds [0 x i8*]* bitcast ([33 x i8*]* @wood to [0 x i8*]*), i64 0, i64 %26
  %28 = load i8** %27, align 8, !tbaa !1
  store i8* %28, i8** %15, align 8, !tbaa !1
  br label %rs_read_string_index.exit

.thread.i:                                        ; preds = %23
  store i8* null, i8** %15, align 8, !tbaa !1
  br label %rs_read_string_index.exit

rs_read_string_index.exit:                        ; preds = %.thread.i, %25, %22, %13
  %29 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* getelementptr inbounds ([6 x i8]* @.str946, i64 0, i64 0), i8** %29, align 8, !tbaa !1
  br label %47

; <label>:30                                      ; preds = %rs_read_int.exit
  %31 = load i32* @cNMETAL, align 4, !tbaa !38
  %32 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %indvars.iv
  %.b2.i11 = load i1* @read_error, align 1
  %.b3.i12 = load i1* @format_error, align 1
  %or.cond.i13 = or i1 %.b2.i11, %.b3.i12
  br i1 %or.cond.i13, label %rs_read_string_index.exit20, label %33

; <label>:33                                      ; preds = %30
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 0, i32* %input.i.i10, align 4, !tbaa !38
  %34 = call i64 @encread(i8* %3, i64 4, %struct.__sFILE* %inf) #8
  %35 = icmp eq i64 %34, 4
  br i1 %35, label %rs_read_int.exit.i14, label %36

; <label>:36                                      ; preds = %33
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i14

rs_read_int.exit.i14:                             ; preds = %36, %33
  %37 = load i32* %input.i.i10, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %3) #8
  %38 = icmp sgt i32 %37, %31
  br i1 %38, label %39, label %40

; <label>:39                                      ; preds = %rs_read_int.exit.i14
  store i1 true, i1* @format_error, align 1
  br label %rs_read_string_index.exit20

; <label>:40                                      ; preds = %rs_read_int.exit.i14
  %41 = icmp sgt i32 %37, -1
  br i1 %41, label %42, label %.thread.i15

; <label>:42                                      ; preds = %40
  %43 = sext i32 %37 to i64
  %44 = getelementptr inbounds [0 x i8*]* bitcast ([22 x i8*]* @metal to [0 x i8*]*), i64 0, i64 %43
  %45 = load i8** %44, align 8, !tbaa !1
  store i8* %45, i8** %32, align 8, !tbaa !1
  br label %rs_read_string_index.exit20

.thread.i15:                                      ; preds = %40
  store i8* null, i8** %32, align 8, !tbaa !1
  br label %rs_read_string_index.exit20

rs_read_string_index.exit20:                      ; preds = %.thread.i15, %42, %39, %30
  %46 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %indvars.iv
  store i8* getelementptr inbounds ([5 x i8]* @.str1947, i64 0, i64 0), i8** %46, align 8, !tbaa !1
  br label %47

; <label>:47                                      ; preds = %rs_read_string_index.exit20, %rs_read_string_index.exit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 14
  br i1 %exitcond, label %48, label %._crit_edge

._crit_edge:                                      ; preds = %47
  %.b2.i.pre = load i1* @read_error, align 1
  %.b3.i.pre = load i1* @format_error, align 1
  br label %4

; <label>:48                                      ; preds = %47
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %49

; <label>:49                                      ; preds = %48, %0
  %..b2.sink = phi i1 [ %..b, %48 ], [ true, %0 ]
  %50 = zext i1 %..b2.sink to i32
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_daemons(%struct.__sFILE* %savef, %struct.delayed_action* nocapture readonly %d_list, i32 %count) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %80, label %7

; <label>:7                                       ; preds = %0
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #8
  store i32 -1412628466, i32* %6, align 4, !tbaa !38
  %9 = call i64 @encwrite(i8* %8, i64 4, %struct.__sFILE* %savef) #8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %rs_write_marker.exit, label %rs_write_marker.exit.thread

rs_write_marker.exit.thread:                      ; preds = %7
  store i1 true, i1* @write_error, align 1
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #8
  store i32 %count, i32* %5, align 4, !tbaa !38
  br label %rs_write_int.exit.preheader

rs_write_marker.exit:                             ; preds = %7
  %.b1.i2.pre = load i1* @write_error, align 1
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #8
  store i32 %count, i32* %5, align 4, !tbaa !38
  br i1 %.b1.i2.pre, label %rs_write_int.exit.preheader, label %13

; <label>:13                                      ; preds = %rs_write_marker.exit
  %14 = call i64 @encwrite(i8* %12, i64 4, %struct.__sFILE* %savef) #8
  %15 = icmp eq i64 %14, 4
  br i1 %15, label %rs_write_int.exit.preheader, label %16

; <label>:16                                      ; preds = %13
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %16, %13, %rs_write_marker.exit, %rs_write_marker.exit.thread
  %17 = icmp sgt i32 %count, 0
  br i1 %17, label %.lr.ph, label %rs_write_int.exit._crit_edge

.lr.ph:                                           ; preds = %rs_write_int.exit.preheader
  %18 = bitcast i32* %4 to i8*
  %19 = bitcast i32* %3 to i8*
  %20 = bitcast i32* %2 to i8*
  %21 = bitcast i32* %1 to i8*
  br label %22

; <label>:22                                      ; preds = %rs_write_int.exit24, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_write_int.exit24 ]
  %23 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  %24 = load void (...)** %23, align 8, !tbaa !60
  %25 = icmp eq void (...)* %24, bitcast (void ()* @rollwand to void (...)*)
  br i1 %25, label %43, label %26

; <label>:26                                      ; preds = %22
  %27 = icmp eq void (...)* %24, bitcast (void ()* @doctor to void (...)*)
  br i1 %27, label %43, label %28

; <label>:28                                      ; preds = %26
  %29 = icmp eq void (...)* %24, bitcast (void ()* @stomach to void (...)*)
  br i1 %29, label %43, label %30

; <label>:30                                      ; preds = %28
  %31 = icmp eq void (...)* %24, bitcast (void ()* @runners to void (...)*)
  br i1 %31, label %43, label %32

; <label>:32                                      ; preds = %30
  %33 = icmp eq void (...)* %24, bitcast (void ()* @swander to void (...)*)
  br i1 %33, label %43, label %34

; <label>:34                                      ; preds = %32
  %35 = icmp eq void (...)* %24, bitcast (void ()* @nohaste to void (...)*)
  br i1 %35, label %43, label %36

; <label>:36                                      ; preds = %34
  %37 = icmp eq void (...)* %24, bitcast (void ()* @unconfuse to void (...)*)
  br i1 %37, label %43, label %38

; <label>:38                                      ; preds = %36
  %39 = icmp eq void (...)* %24, bitcast (void ()* @unsee to void (...)*)
  br i1 %39, label %43, label %40

; <label>:40                                      ; preds = %38
  %41 = icmp eq void (...)* %24, bitcast (void ()* @sight to void (...)*)
  br i1 %41, label %43, label %42

; <label>:42                                      ; preds = %40
  %not. = icmp ne void (...)* %24, null
  %. = sext i1 %not. to i32
  br label %43

; <label>:43                                      ; preds = %42, %40, %38, %36, %34, %32, %30, %28, %26, %22
  %func.0 = phi i32 [ 1, %22 ], [ 2, %26 ], [ 3, %28 ], [ 4, %30 ], [ 5, %32 ], [ 6, %34 ], [ 7, %36 ], [ 8, %38 ], [ 9, %40 ], [ %., %42 ]
  %44 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 0
  %45 = load i32* %44, align 4, !tbaa !58
  call void @llvm.lifetime.start(i64 4, i8* %18) #8
  store i32 %45, i32* %4, align 4, !tbaa !38
  %.b1.i5 = load i1* @write_error, align 1
  br i1 %.b1.i5, label %rs_write_int.exit9.thread, label %46

; <label>:46                                      ; preds = %43
  %47 = call i64 @encwrite(i8* %18, i64 4, %struct.__sFILE* %savef) #8
  %48 = icmp eq i64 %47, 4
  br i1 %48, label %rs_write_int.exit9, label %49

; <label>:49                                      ; preds = %46
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit9.thread

rs_write_int.exit9.thread:                        ; preds = %49, %43
  call void @llvm.lifetime.end(i64 4, i8* %18) #8
  call void @llvm.lifetime.start(i64 4, i8* %19) #8
  store i32 %func.0, i32* %3, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %19) #8
  %50 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 2
  %51 = load i32* %50, align 4, !tbaa !61
  call void @llvm.lifetime.start(i64 4, i8* %20) #8
  store i32 %51, i32* %2, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %52 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  %53 = load i32* %52, align 4, !tbaa !62
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 %53, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit24

rs_write_int.exit9:                               ; preds = %46
  %.b1.i10.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %18) #8
  call void @llvm.lifetime.start(i64 4, i8* %19) #8
  store i32 %func.0, i32* %3, align 4, !tbaa !38
  br i1 %.b1.i10.pre, label %rs_write_int.exit19.critedge, label %54

; <label>:54                                      ; preds = %rs_write_int.exit9
  %55 = call i64 @encwrite(i8* %19, i64 4, %struct.__sFILE* %savef) #8
  %56 = icmp eq i64 %55, 4
  br i1 %56, label %.rs_write_int.exit14_crit_edge, label %rs_write_int.exit19.critedge30

.rs_write_int.exit14_crit_edge:                   ; preds = %54
  %.b1.i15.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %19) #8
  %57 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 2
  %58 = load i32* %57, align 4, !tbaa !61
  call void @llvm.lifetime.start(i64 4, i8* %20) #8
  store i32 %58, i32* %2, align 4, !tbaa !38
  br i1 %.b1.i15.pre, label %rs_write_int.exit24.critedge, label %63

rs_write_int.exit19.critedge30:                   ; preds = %54
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %19) #8
  %59 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 2
  %60 = load i32* %59, align 4, !tbaa !61
  call void @llvm.lifetime.start(i64 4, i8* %20) #8
  store i32 %60, i32* %2, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %61 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  %62 = load i32* %61, align 4, !tbaa !62
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 %62, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit24

; <label>:63                                      ; preds = %.rs_write_int.exit14_crit_edge
  %64 = call i64 @encwrite(i8* %20, i64 4, %struct.__sFILE* %savef) #8
  %65 = icmp eq i64 %64, 4
  br i1 %65, label %.rs_write_int.exit19_crit_edge, label %rs_write_int.exit24.critedge32

.rs_write_int.exit19_crit_edge:                   ; preds = %63
  %.b1.i20.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %66 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  %67 = load i32* %66, align 4, !tbaa !62
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 %67, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i20.pre, label %rs_write_int.exit24, label %74

rs_write_int.exit24.critedge32:                   ; preds = %63
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %68 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  %69 = load i32* %68, align 4, !tbaa !62
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 %69, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit24

rs_write_int.exit19.critedge:                     ; preds = %rs_write_int.exit9
  call void @llvm.lifetime.end(i64 4, i8* %19) #8
  %70 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 2
  %71 = load i32* %70, align 4, !tbaa !61
  call void @llvm.lifetime.start(i64 4, i8* %20) #8
  store i32 %71, i32* %2, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %72 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  %73 = load i32* %72, align 4, !tbaa !62
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 %73, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit24

; <label>:74                                      ; preds = %.rs_write_int.exit19_crit_edge
  %75 = call i64 @encwrite(i8* %21, i64 4, %struct.__sFILE* %savef) #8
  %76 = icmp eq i64 %75, 4
  br i1 %76, label %rs_write_int.exit24, label %77

; <label>:77                                      ; preds = %74
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit24

rs_write_int.exit24.critedge:                     ; preds = %.rs_write_int.exit14_crit_edge
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %78 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  %79 = load i32* %78, align 4, !tbaa !62
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 %79, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit24

rs_write_int.exit24:                              ; preds = %rs_write_int.exit24.critedge, %77, %74, %rs_write_int.exit19.critedge, %rs_write_int.exit24.critedge32, %.rs_write_int.exit19_crit_edge, %rs_write_int.exit19.critedge30, %rs_write_int.exit9.thread
  call void @llvm.lifetime.end(i64 4, i8* %21) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %rs_write_int.exit._crit_edge, label %22

rs_write_int.exit._crit_edge:                     ; preds = %rs_write_int.exit24, %rs_write_int.exit.preheader
  %.b = load i1* @write_error, align 1
  br label %80

; <label>:80                                      ; preds = %rs_write_int.exit._crit_edge, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit._crit_edge ], [ true, %0 ]
  %81 = zext i1 %.b1.sink to i32
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_daemons(%struct.__sFILE* %inf, %struct.delayed_action* nocapture %d_list, i32 %count) #0 {
  %input.i43 = alloca i32, align 4
  %input.i32 = alloca i32, align 4
  %input.i21 = alloca i32, align 4
  %input.i10 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %83, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i5 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i5
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628466
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_marker.exit.thread

rs_read_marker.exit.thread:                       ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i7 = or i1 %.b2.i5, %.b4.i.i
  br i1 %or.cond.i7, label %rs_read_int.exit, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_read.exit.i, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %14, %11
  %15 = load i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %rs_read_marker.exit, %rs_read_marker.exit.thread
  %16 = phi i8* [ %10, %rs_read.exit.i ], [ %10, %rs_read_marker.exit ], [ %9, %rs_read_marker.exit.thread ]
  %17 = phi i32 [ %15, %rs_read.exit.i ], [ 0, %rs_read_marker.exit ], [ 0, %rs_read_marker.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %16) #8
  %18 = icmp sgt i32 %17, %count
  br i1 %18, label %19, label %.preheader

; <label>:19                                      ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %19, %rs_read_int.exit
  %20 = icmp sgt i32 %count, 0
  br i1 %20, label %.lr.ph, label %74

.lr.ph:                                           ; preds = %.preheader
  %21 = bitcast i32* %input.i10 to i8*
  %22 = bitcast i32* %input.i21 to i8*
  %23 = bitcast i32* %input.i32 to i8*
  %24 = bitcast i32* %input.i43 to i8*
  %25 = add i32 %count, -1
  %26 = zext i32 %25 to i64
  br label %27

; <label>:27                                      ; preds = %72, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %72 ]
  %28 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 0
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 0, i32* %input.i10, align 4, !tbaa !38
  %.b2.i11 = load i1* @read_error, align 1
  %.b3.i12 = load i1* @format_error, align 1
  %or.cond.i13 = or i1 %.b2.i11, %.b3.i12
  br i1 %or.cond.i13, label %rs_read_int.exit20, label %29

; <label>:29                                      ; preds = %27
  %30 = call i64 @encread(i8* %21, i64 4, %struct.__sFILE* %inf) #8
  %31 = icmp eq i64 %30, 4
  br i1 %31, label %.rs_read.exit.i18_crit_edge, label %32

.rs_read.exit.i18_crit_edge:                      ; preds = %29
  %.b2.i22.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i18

; <label>:32                                      ; preds = %29
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i18

rs_read.exit.i18:                                 ; preds = %32, %.rs_read.exit.i18_crit_edge
  %.b2.i22.pre = phi i1 [ %.b2.i22.pre.pre, %.rs_read.exit.i18_crit_edge ], [ true, %32 ]
  %33 = load i32* %input.i10, align 4, !tbaa !38
  store i32 %33, i32* %28, align 4, !tbaa !38
  %.b3.i23.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit20

rs_read_int.exit20:                               ; preds = %rs_read.exit.i18, %27
  %.b3.i23 = phi i1 [ %.b3.i12, %27 ], [ %.b3.i23.pre, %rs_read.exit.i18 ]
  %.b2.i22 = phi i1 [ %.b2.i11, %27 ], [ %.b2.i22.pre, %rs_read.exit.i18 ]
  call void @llvm.lifetime.end(i64 4, i8* %21) #8
  call void @llvm.lifetime.start(i64 4, i8* %22) #8
  store i32 0, i32* %input.i21, align 4, !tbaa !38
  %or.cond.i24 = or i1 %.b2.i22, %.b3.i23
  br i1 %or.cond.i24, label %rs_read_int.exit31, label %34

; <label>:34                                      ; preds = %rs_read_int.exit20
  %35 = call i64 @encread(i8* %22, i64 4, %struct.__sFILE* %inf) #8
  %36 = icmp eq i64 %35, 4
  br i1 %36, label %.rs_read.exit.i29_crit_edge, label %37

.rs_read.exit.i29_crit_edge:                      ; preds = %34
  %.b2.i33.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i29

; <label>:37                                      ; preds = %34
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i29

rs_read.exit.i29:                                 ; preds = %37, %.rs_read.exit.i29_crit_edge
  %.b2.i33.pre = phi i1 [ %.b2.i33.pre.pre, %.rs_read.exit.i29_crit_edge ], [ true, %37 ]
  %38 = load i32* %input.i21, align 4, !tbaa !38
  %.b3.i34.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit31

rs_read_int.exit31:                               ; preds = %rs_read.exit.i29, %rs_read_int.exit20
  %.b3.i34 = phi i1 [ %.b3.i34.pre, %rs_read.exit.i29 ], [ %.b3.i23, %rs_read_int.exit20 ]
  %.b2.i33 = phi i1 [ %.b2.i33.pre, %rs_read.exit.i29 ], [ %.b2.i22, %rs_read_int.exit20 ]
  %39 = phi i32 [ %38, %rs_read.exit.i29 ], [ 0, %rs_read_int.exit20 ]
  call void @llvm.lifetime.end(i64 4, i8* %22) #8
  %40 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 2
  call void @llvm.lifetime.start(i64 4, i8* %23) #8
  store i32 0, i32* %input.i32, align 4, !tbaa !38
  %or.cond.i35 = or i1 %.b2.i33, %.b3.i34
  br i1 %or.cond.i35, label %rs_read_int.exit42, label %41

; <label>:41                                      ; preds = %rs_read_int.exit31
  %42 = call i64 @encread(i8* %23, i64 4, %struct.__sFILE* %inf) #8
  %43 = icmp eq i64 %42, 4
  br i1 %43, label %.rs_read.exit.i40_crit_edge, label %44

.rs_read.exit.i40_crit_edge:                      ; preds = %41
  %.b2.i44.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i40

; <label>:44                                      ; preds = %41
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i40

rs_read.exit.i40:                                 ; preds = %44, %.rs_read.exit.i40_crit_edge
  %.b2.i44.pre = phi i1 [ %.b2.i44.pre.pre, %.rs_read.exit.i40_crit_edge ], [ true, %44 ]
  %45 = load i32* %input.i32, align 4, !tbaa !38
  store i32 %45, i32* %40, align 4, !tbaa !38
  %.b3.i45.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit42

rs_read_int.exit42:                               ; preds = %rs_read.exit.i40, %rs_read_int.exit31
  %.b3.i45 = phi i1 [ %.b3.i34, %rs_read_int.exit31 ], [ %.b3.i45.pre, %rs_read.exit.i40 ]
  %.b2.i44 = phi i1 [ %.b2.i33, %rs_read_int.exit31 ], [ %.b2.i44.pre, %rs_read.exit.i40 ]
  call void @llvm.lifetime.end(i64 4, i8* %23) #8
  %46 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 3
  call void @llvm.lifetime.start(i64 4, i8* %24) #8
  store i32 0, i32* %input.i43, align 4, !tbaa !38
  %or.cond.i46 = or i1 %.b2.i44, %.b3.i45
  br i1 %or.cond.i46, label %rs_read_int.exit53, label %47

; <label>:47                                      ; preds = %rs_read_int.exit42
  %48 = call i64 @encread(i8* %24, i64 4, %struct.__sFILE* %inf) #8
  %49 = icmp eq i64 %48, 4
  br i1 %49, label %rs_read.exit.i51, label %50

; <label>:50                                      ; preds = %47
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i51

rs_read.exit.i51:                                 ; preds = %50, %47
  %51 = load i32* %input.i43, align 4, !tbaa !38
  store i32 %51, i32* %46, align 4, !tbaa !38
  br label %rs_read_int.exit53

rs_read_int.exit53:                               ; preds = %rs_read.exit.i51, %rs_read_int.exit42
  call void @llvm.lifetime.end(i64 4, i8* %24) #8
  switch i32 %39, label %70 [
    i32 1, label %52
    i32 2, label %54
    i32 3, label %56
    i32 4, label %58
    i32 5, label %60
    i32 6, label %62
    i32 7, label %64
    i32 8, label %66
    i32 9, label %68
  ]

; <label>:52                                      ; preds = %rs_read_int.exit53
  %53 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @rollwand to void (...)*), void (...)** %53, align 8, !tbaa !60
  br label %72

; <label>:54                                      ; preds = %rs_read_int.exit53
  %55 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @doctor to void (...)*), void (...)** %55, align 8, !tbaa !60
  br label %72

; <label>:56                                      ; preds = %rs_read_int.exit53
  %57 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @stomach to void (...)*), void (...)** %57, align 8, !tbaa !60
  br label %72

; <label>:58                                      ; preds = %rs_read_int.exit53
  %59 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @runners to void (...)*), void (...)** %59, align 8, !tbaa !60
  br label %72

; <label>:60                                      ; preds = %rs_read_int.exit53
  %61 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @swander to void (...)*), void (...)** %61, align 8, !tbaa !60
  br label %72

; <label>:62                                      ; preds = %rs_read_int.exit53
  %63 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @nohaste to void (...)*), void (...)** %63, align 8, !tbaa !60
  br label %72

; <label>:64                                      ; preds = %rs_read_int.exit53
  %65 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @unconfuse to void (...)*), void (...)** %65, align 8, !tbaa !60
  br label %72

; <label>:66                                      ; preds = %rs_read_int.exit53
  %67 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @unsee to void (...)*), void (...)** %67, align 8, !tbaa !60
  br label %72

; <label>:68                                      ; preds = %rs_read_int.exit53
  %69 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* bitcast (void ()* @sight to void (...)*), void (...)** %69, align 8, !tbaa !60
  br label %72

; <label>:70                                      ; preds = %rs_read_int.exit53
  %71 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %indvars.iv, i32 1
  store void (...)* null, void (...)** %71, align 8, !tbaa !60
  br label %72

; <label>:72                                      ; preds = %70, %68, %66, %64, %62, %60, %58, %56, %54, %52
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %._crit_edge, label %27

._crit_edge:                                      ; preds = %72
  %73 = add i64 %26, 1
  br label %74

; <label>:74                                      ; preds = %._crit_edge, %.preheader
  %.lcssa = phi i64 [ %73, %._crit_edge ], [ 0, %.preheader ]
  %75 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %.lcssa, i32 1
  %76 = load void (...)** %75, align 8, !tbaa !60
  %77 = icmp eq void (...)* %76, null
  br i1 %77, label %78, label %82

; <label>:78                                      ; preds = %74
  %79 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %.lcssa, i32 0
  store i32 0, i32* %79, align 4, !tbaa !58
  %80 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %.lcssa, i32 2
  store i32 0, i32* %80, align 4, !tbaa !61
  %81 = getelementptr inbounds %struct.delayed_action* %d_list, i64 %.lcssa, i32 3
  store i32 0, i32* %81, align 4, !tbaa !62
  br label %82

; <label>:82                                      ; preds = %78, %74
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %83

; <label>:83                                      ; preds = %82, %0
  %..b2.sink = phi i1 [ %..b, %82 ], [ true, %0 ]
  %84 = zext i1 %..b2.sink to i32
  ret i32 %84
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* nocapture readonly %i, i32 %count) #0 {
  %buf.i = alloca i8, align 1
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %43, label %5

; <label>:5                                       ; preds = %0
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #8
  store i32 -1412628476, i32* %4, align 4, !tbaa !38
  %7 = call i64 @encwrite(i8* %6, i64 4, %struct.__sFILE* %savef) #8
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %rs_write_marker.exit, label %rs_write_marker.exit.thread

rs_write_marker.exit.thread:                      ; preds = %5
  store i1 true, i1* @write_error, align 1
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 %count, i32* %3, align 4, !tbaa !38
  br label %rs_write_int.exit.preheader

rs_write_marker.exit:                             ; preds = %5
  %.b1.i2.pre = load i1* @write_error, align 1
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 %count, i32* %3, align 4, !tbaa !38
  br i1 %.b1.i2.pre, label %rs_write_int.exit.preheader, label %11

; <label>:11                                      ; preds = %rs_write_marker.exit
  %12 = call i64 @encwrite(i8* %10, i64 4, %struct.__sFILE* %savef) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_write_int.exit.preheader, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %14, %11, %rs_write_marker.exit, %rs_write_marker.exit.thread
  %15 = icmp sgt i32 %count, 0
  br i1 %15, label %.lr.ph, label %rs_write_int.exit._crit_edge

.lr.ph:                                           ; preds = %rs_write_int.exit.preheader
  %16 = bitcast i32* %2 to i8*
  %17 = bitcast i32* %1 to i8*
  br label %18

; <label>:18                                      ; preds = %rs_write_boolean.exit, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_write_boolean.exit ]
  %19 = getelementptr inbounds %struct.obj_info* %i, i64 %indvars.iv, i32 1
  %20 = load i32* %19, align 4, !tbaa !83
  call void @llvm.lifetime.start(i64 4, i8* %16) #8
  store i32 %20, i32* %2, align 4, !tbaa !38
  %.b1.i5 = load i1* @write_error, align 1
  br i1 %.b1.i5, label %rs_write_int.exit14.critedge, label %21

; <label>:21                                      ; preds = %18
  %22 = call i64 @encwrite(i8* %16, i64 4, %struct.__sFILE* %savef) #8
  %23 = icmp eq i64 %22, 4
  br i1 %23, label %.rs_write_int.exit9_crit_edge, label %rs_write_int.exit14.critedge22

.rs_write_int.exit9_crit_edge:                    ; preds = %21
  %.b1.i10.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %16) #8
  %24 = getelementptr inbounds %struct.obj_info* %i, i64 %indvars.iv, i32 2
  %25 = load i32* %24, align 4, !tbaa !82
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 %25, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i10.pre, label %rs_write_int.exit14, label %28

rs_write_int.exit14.critedge22:                   ; preds = %21
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %16) #8
  %26 = getelementptr inbounds %struct.obj_info* %i, i64 %indvars.iv, i32 2
  %27 = load i32* %26, align 4, !tbaa !82
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 %27, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit14

; <label>:28                                      ; preds = %.rs_write_int.exit9_crit_edge
  %29 = call i64 @encwrite(i8* %17, i64 4, %struct.__sFILE* %savef) #8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %rs_write_int.exit14, label %31

; <label>:31                                      ; preds = %28
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit14

rs_write_int.exit14.critedge:                     ; preds = %18
  call void @llvm.lifetime.end(i64 4, i8* %16) #8
  %32 = getelementptr inbounds %struct.obj_info* %i, i64 %indvars.iv, i32 2
  %33 = load i32* %32, align 4, !tbaa !82
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 %33, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit14

rs_write_int.exit14:                              ; preds = %rs_write_int.exit14.critedge, %31, %28, %rs_write_int.exit14.critedge22, %.rs_write_int.exit9_crit_edge
  call void @llvm.lifetime.end(i64 4, i8* %17) #8
  %34 = getelementptr inbounds %struct.obj_info* %i, i64 %indvars.iv, i32 3
  %35 = load i8** %34, align 8, !tbaa !103
  %36 = call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %35)
  %37 = getelementptr inbounds %struct.obj_info* %i, i64 %indvars.iv, i32 4
  %38 = load i8* %37, align 1, !tbaa !102, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %38, i8* %buf.i, align 1, !tbaa !28
  %.b1.i15 = load i1* @write_error, align 1
  br i1 %.b1.i15, label %rs_write_boolean.exit, label %39

; <label>:39                                      ; preds = %rs_write_int.exit14
  %40 = call i64 @encwrite(i8* %buf.i, i64 1, %struct.__sFILE* %savef) #8
  %41 = icmp eq i64 %40, 1
  br i1 %41, label %rs_write_boolean.exit, label %42

; <label>:42                                      ; preds = %39
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit

rs_write_boolean.exit:                            ; preds = %42, %39, %rs_write_int.exit14
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %rs_write_int.exit._crit_edge, label %18

rs_write_int.exit._crit_edge:                     ; preds = %rs_write_boolean.exit, %rs_write_int.exit.preheader
  %.b = load i1* @write_error, align 1
  br label %43

; <label>:43                                      ; preds = %rs_write_int.exit._crit_edge, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit._crit_edge ], [ true, %0 ]
  %44 = zext i1 %.b1.sink to i32
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* nocapture %mi, i32 %count) #0 {
  %buf.i = alloca i8, align 1
  %input.i21 = alloca i32, align 4
  %input.i10 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %44, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i5 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i5
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628476
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_marker.exit.thread

rs_read_marker.exit.thread:                       ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit.thread._crit_edge

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i7 = or i1 %.b2.i5, %.b4.i.i
  br i1 %or.cond.i7, label %rs_read_int.exit.thread._crit_edge, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_read_int.exit, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %14, %11
  %15 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %16 = icmp sgt i32 %15, %count
  br i1 %16, label %17, label %rs_read_int.exit.thread.preheader

; <label>:17                                      ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %rs_read_int.exit.thread.preheader

rs_read_int.exit.thread.preheader:                ; preds = %17, %rs_read_int.exit
  %18 = icmp sgt i32 %15, 0
  br i1 %18, label %.lr.ph, label %rs_read_int.exit.thread._crit_edge

.lr.ph:                                           ; preds = %rs_read_int.exit.thread.preheader
  %19 = bitcast i32* %input.i10 to i8*
  %20 = bitcast i32* %input.i21 to i8*
  br label %21

; <label>:21                                      ; preds = %rs_read_boolean.exit, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_read_boolean.exit ]
  %22 = getelementptr inbounds %struct.obj_info* %mi, i64 %indvars.iv, i32 1
  call void @llvm.lifetime.start(i64 4, i8* %19) #8
  store i32 0, i32* %input.i10, align 4, !tbaa !38
  %.b2.i11 = load i1* @read_error, align 1
  %.b3.i12 = load i1* @format_error, align 1
  %or.cond.i13 = or i1 %.b2.i11, %.b3.i12
  br i1 %or.cond.i13, label %rs_read_int.exit20, label %23

; <label>:23                                      ; preds = %21
  %24 = call i64 @encread(i8* %19, i64 4, %struct.__sFILE* %inf) #8
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %.rs_read.exit.i18_crit_edge, label %26

.rs_read.exit.i18_crit_edge:                      ; preds = %23
  %.b2.i22.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i18

; <label>:26                                      ; preds = %23
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i18

rs_read.exit.i18:                                 ; preds = %26, %.rs_read.exit.i18_crit_edge
  %.b2.i22.pre = phi i1 [ %.b2.i22.pre.pre, %.rs_read.exit.i18_crit_edge ], [ true, %26 ]
  %27 = load i32* %input.i10, align 4, !tbaa !38
  store i32 %27, i32* %22, align 4, !tbaa !38
  %.b3.i23.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit20

rs_read_int.exit20:                               ; preds = %rs_read.exit.i18, %21
  %.b3.i23 = phi i1 [ %.b3.i12, %21 ], [ %.b3.i23.pre, %rs_read.exit.i18 ]
  %.b2.i22 = phi i1 [ %.b2.i11, %21 ], [ %.b2.i22.pre, %rs_read.exit.i18 ]
  call void @llvm.lifetime.end(i64 4, i8* %19) #8
  %28 = getelementptr inbounds %struct.obj_info* %mi, i64 %indvars.iv, i32 2
  call void @llvm.lifetime.start(i64 4, i8* %20) #8
  store i32 0, i32* %input.i21, align 4, !tbaa !38
  %or.cond.i24 = or i1 %.b2.i22, %.b3.i23
  br i1 %or.cond.i24, label %rs_read_int.exit31, label %29

; <label>:29                                      ; preds = %rs_read_int.exit20
  %30 = call i64 @encread(i8* %20, i64 4, %struct.__sFILE* %inf) #8
  %31 = icmp eq i64 %30, 4
  br i1 %31, label %rs_read.exit.i29, label %32

; <label>:32                                      ; preds = %29
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i29

rs_read.exit.i29:                                 ; preds = %32, %29
  %33 = load i32* %input.i21, align 4, !tbaa !38
  store i32 %33, i32* %28, align 4, !tbaa !38
  br label %rs_read_int.exit31

rs_read_int.exit31:                               ; preds = %rs_read.exit.i29, %rs_read_int.exit20
  call void @llvm.lifetime.end(i64 4, i8* %20) #8
  %34 = getelementptr inbounds %struct.obj_info* %mi, i64 %indvars.iv, i32 3
  %35 = call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** %34)
  %36 = getelementptr inbounds %struct.obj_info* %mi, i64 %indvars.iv, i32 4
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 0, i8* %buf.i, align 1, !tbaa !28
  %.b2.i32 = load i1* @read_error, align 1
  %.b3.i33 = load i1* @format_error, align 1
  %or.cond.i34 = or i1 %.b2.i32, %.b3.i33
  br i1 %or.cond.i34, label %rs_read_boolean.exit, label %37

; <label>:37                                      ; preds = %rs_read_int.exit31
  %38 = call i64 @encread(i8* %buf.i, i64 1, %struct.__sFILE* %inf) #8
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %rs_read.exit.i38, label %40

; <label>:40                                      ; preds = %37
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i38

rs_read.exit.i38:                                 ; preds = %40, %37
  %41 = load i8* %buf.i, align 1, !tbaa !28
  %42 = icmp ne i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %36, align 1, !tbaa !5
  br label %rs_read_boolean.exit

rs_read_boolean.exit:                             ; preds = %rs_read.exit.i38, %rs_read_int.exit31
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %15
  br i1 %exitcond, label %rs_read_int.exit.thread._crit_edge, label %21

rs_read_int.exit.thread._crit_edge:               ; preds = %rs_read_boolean.exit, %rs_read_int.exit.thread.preheader, %rs_read_marker.exit, %rs_read_marker.exit.thread
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %44

; <label>:44                                      ; preds = %rs_read_int.exit.thread._crit_edge, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_int.exit.thread._crit_edge ], [ true, %0 ]
  %45 = zext i1 %..b2.sink to i32
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* nocapture readonly %r) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i16, align 2
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write_coord.exit153, label %34

; <label>:34                                      ; preds = %0
  %35 = bitcast %struct.room* %r to i64*
  %36 = load i64* %35, align 1
  %37 = lshr i64 %36, 32
  %38 = trunc i64 %37 to i32
  %39 = trunc i64 %36 to i32
  %40 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %40) #8
  store i32 %39, i32* %33, align 4, !tbaa !38
  %41 = call i64 @encwrite(i8* %40, i64 4, %struct.__sFILE* %savef) #8
  %42 = icmp eq i64 %41, 4
  br i1 %42, label %rs_write_int.exit.i, label %rs_write_int.exit.thread.i

rs_write_int.exit.thread.i:                       ; preds = %34
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %40) #8
  %43 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #8
  store i32 %38, i32* %32, align 4, !tbaa !38
  br label %rs_write_coord.exit.thread

rs_write_int.exit.i:                              ; preds = %34
  %.b1.i2.pre.i = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %40) #8
  %44 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %44) #8
  store i32 %38, i32* %32, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i, label %rs_write_coord.exit.thread, label %45

; <label>:45                                      ; preds = %rs_write_int.exit.i
  %46 = call i64 @encwrite(i8* %44, i64 4, %struct.__sFILE* %savef) #8
  %47 = icmp eq i64 %46, 4
  br i1 %47, label %rs_write_coord.exit, label %48

; <label>:48                                      ; preds = %45
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit.thread

rs_write_coord.exit.thread:                       ; preds = %48, %rs_write_int.exit.i, %rs_write_int.exit.thread.i
  %.ph = phi i8* [ %44, %rs_write_int.exit.i ], [ %44, %48 ], [ %43, %rs_write_int.exit.thread.i ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph) #8
  br label %rs_write_coord.exit21.thread

rs_write_coord.exit:                              ; preds = %45
  %.b1.i2.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %44) #8
  %49 = getelementptr inbounds %struct.room* %r, i64 0, i32 1
  %50 = bitcast %struct.coord* %49 to i64*
  %51 = load i64* %50, align 1
  br i1 %.b1.i2.pre, label %rs_write_coord.exit21.thread, label %52

; <label>:52                                      ; preds = %rs_write_coord.exit
  %53 = lshr i64 %51, 32
  %54 = trunc i64 %53 to i32
  %55 = trunc i64 %51 to i32
  %56 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %56) #8
  store i32 %55, i32* %31, align 4, !tbaa !38
  %57 = call i64 @encwrite(i8* %56, i64 4, %struct.__sFILE* %savef) #8
  %58 = icmp eq i64 %57, 4
  br i1 %58, label %rs_write_int.exit.i5, label %rs_write_int.exit.thread.i3

rs_write_int.exit.thread.i3:                      ; preds = %52
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %56) #8
  %59 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %59) #8
  store i32 %54, i32* %30, align 4, !tbaa !38
  br label %rs_write_coord.exit11.thread

rs_write_int.exit.i5:                             ; preds = %52
  %.b1.i2.pre.i4 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %56) #8
  %60 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %60) #8
  store i32 %54, i32* %30, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i4, label %rs_write_coord.exit11.thread, label %61

; <label>:61                                      ; preds = %rs_write_int.exit.i5
  %62 = call i64 @encwrite(i8* %60, i64 4, %struct.__sFILE* %savef) #8
  %63 = icmp eq i64 %62, 4
  br i1 %63, label %rs_write_coord.exit11, label %64

; <label>:64                                      ; preds = %61
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit11.thread

rs_write_coord.exit11.thread:                     ; preds = %64, %rs_write_int.exit.i5, %rs_write_int.exit.thread.i3
  %.ph174 = phi i8* [ %60, %rs_write_int.exit.i5 ], [ %60, %64 ], [ %59, %rs_write_int.exit.thread.i3 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph174) #8
  br label %rs_write_coord.exit21.thread

rs_write_coord.exit11:                            ; preds = %61
  %.b1.i12.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %60) #8
  %65 = getelementptr inbounds %struct.room* %r, i64 0, i32 2
  %66 = bitcast %struct.coord* %65 to i64*
  %67 = load i64* %66, align 1
  br i1 %.b1.i12.pr.pre, label %rs_write_coord.exit21.thread, label %68

; <label>:68                                      ; preds = %rs_write_coord.exit11
  %69 = lshr i64 %67, 32
  %70 = trunc i64 %69 to i32
  %71 = trunc i64 %67 to i32
  %72 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %72) #8
  store i32 %71, i32* %29, align 4, !tbaa !38
  %73 = call i64 @encwrite(i8* %72, i64 4, %struct.__sFILE* %savef) #8
  %74 = icmp eq i64 %73, 4
  br i1 %74, label %rs_write_int.exit.i15, label %rs_write_int.exit.thread.i13

rs_write_int.exit.thread.i13:                     ; preds = %68
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %72) #8
  %75 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %75) #8
  store i32 %70, i32* %28, align 4, !tbaa !38
  br label %rs_write_coord.exit21

rs_write_int.exit.i15:                            ; preds = %68
  %.b1.i2.pre.i14 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %72) #8
  %76 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %76) #8
  store i32 %70, i32* %28, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i14, label %rs_write_coord.exit21, label %77

; <label>:77                                      ; preds = %rs_write_int.exit.i15
  %78 = call i64 @encwrite(i8* %76, i64 4, %struct.__sFILE* %savef) #8
  %79 = icmp eq i64 %78, 4
  br i1 %79, label %.rs_write_int.exit6.i19_crit_edge, label %80

.rs_write_int.exit6.i19_crit_edge:                ; preds = %77
  %.b1.i22.pre.pre = load i1* @write_error, align 1
  br label %rs_write_coord.exit21

; <label>:80                                      ; preds = %77
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit21

rs_write_coord.exit21.thread:                     ; preds = %rs_write_coord.exit11, %rs_write_coord.exit11.thread, %rs_write_coord.exit, %rs_write_coord.exit.thread
  %81 = getelementptr inbounds %struct.room* %r, i64 0, i32 3
  %82 = load i32* %81, align 4, !tbaa !25
  %83 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %83) #8
  store i32 %82, i32* %27, align 4, !tbaa !38
  br label %rs_write_int.exit

rs_write_coord.exit21:                            ; preds = %80, %.rs_write_int.exit6.i19_crit_edge, %rs_write_int.exit.i15, %rs_write_int.exit.thread.i13
  %.b1.i22.pre = phi i1 [ true, %rs_write_int.exit.i15 ], [ true, %80 ], [ true, %rs_write_int.exit.thread.i13 ], [ %.b1.i22.pre.pre, %.rs_write_int.exit6.i19_crit_edge ]
  %84 = phi i8* [ %76, %rs_write_int.exit.i15 ], [ %76, %80 ], [ %75, %rs_write_int.exit.thread.i13 ], [ %76, %.rs_write_int.exit6.i19_crit_edge ]
  call void @llvm.lifetime.end(i64 4, i8* %84) #8
  %85 = getelementptr inbounds %struct.room* %r, i64 0, i32 3
  %86 = load i32* %85, align 4, !tbaa !25
  %87 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %87) #8
  store i32 %86, i32* %27, align 4, !tbaa !38
  br i1 %.b1.i22.pre, label %rs_write_int.exit, label %88

; <label>:88                                      ; preds = %rs_write_coord.exit21
  %89 = call i64 @encwrite(i8* %87, i64 4, %struct.__sFILE* %savef) #8
  %90 = icmp eq i64 %89, 4
  br i1 %90, label %.rs_write_int.exit_crit_edge, label %91

.rs_write_int.exit_crit_edge:                     ; preds = %88
  %.b1.i25.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:91                                      ; preds = %88
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %91, %.rs_write_int.exit_crit_edge, %rs_write_coord.exit21, %rs_write_coord.exit21.thread
  %92 = phi i8* [ %87, %.rs_write_int.exit_crit_edge ], [ %87, %rs_write_coord.exit21 ], [ %87, %91 ], [ %83, %rs_write_coord.exit21.thread ]
  %.b1.i25 = phi i1 [ %.b1.i25.pre, %.rs_write_int.exit_crit_edge ], [ true, %rs_write_coord.exit21 ], [ true, %91 ], [ true, %rs_write_coord.exit21.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %92) #8
  %93 = getelementptr inbounds %struct.room* %r, i64 0, i32 4
  %94 = load i16* %93, align 2, !tbaa !39
  %95 = bitcast i16* %26 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %95) #8
  store i16 %94, i16* %26, align 2, !tbaa !118
  br i1 %.b1.i25, label %rs_write_short.exit, label %96

; <label>:96                                      ; preds = %rs_write_int.exit
  %97 = call i64 @encwrite(i8* %95, i64 2, %struct.__sFILE* %savef) #8
  %98 = icmp eq i64 %97, 2
  br i1 %98, label %.rs_write_short.exit_crit_edge, label %99

.rs_write_short.exit_crit_edge:                   ; preds = %96
  %.b1.i29.pre = load i1* @write_error, align 1
  br label %rs_write_short.exit

; <label>:99                                      ; preds = %96
  store i1 true, i1* @write_error, align 1
  br label %rs_write_short.exit

rs_write_short.exit:                              ; preds = %99, %.rs_write_short.exit_crit_edge, %rs_write_int.exit
  %.b1.i29 = phi i1 [ %.b1.i29.pre, %.rs_write_short.exit_crit_edge ], [ true, %rs_write_int.exit ], [ true, %99 ]
  call void @llvm.lifetime.end(i64 2, i8* %95) #8
  %100 = getelementptr inbounds %struct.room* %r, i64 0, i32 5
  %101 = load i32* %100, align 4, !tbaa !35
  %102 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %102) #8
  store i32 %101, i32* %25, align 4, !tbaa !38
  br i1 %.b1.i29, label %rs_write_coord.exit153, label %103

; <label>:103                                     ; preds = %rs_write_short.exit
  %104 = call i64 @encwrite(i8* %102, i64 4, %struct.__sFILE* %savef) #8
  %105 = icmp eq i64 %104, 4
  br i1 %105, label %rs_write_int.exit33, label %106

; <label>:106                                     ; preds = %103
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit153

rs_write_int.exit33:                              ; preds = %103
  %.b1.i34.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %102) #8
  %107 = getelementptr inbounds %struct.room* %r, i64 0, i32 6
  %108 = bitcast [12 x %struct.coord]* %107 to i64*
  %109 = load i64* %108, align 1
  br i1 %.b1.i34.pre, label %rs_write_coord.exit153, label %110

; <label>:110                                     ; preds = %rs_write_int.exit33
  %111 = lshr i64 %109, 32
  %112 = trunc i64 %111 to i32
  %113 = trunc i64 %109 to i32
  %114 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %114) #8
  store i32 %113, i32* %24, align 4, !tbaa !38
  %115 = call i64 @encwrite(i8* %114, i64 4, %struct.__sFILE* %savef) #8
  %116 = icmp eq i64 %115, 4
  br i1 %116, label %rs_write_int.exit.i37, label %rs_write_int.exit.thread.i35

rs_write_int.exit.thread.i35:                     ; preds = %110
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %114) #8
  %117 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %117) #8
  store i32 %112, i32* %23, align 4, !tbaa !38
  br label %rs_write_coord.exit43.thread

rs_write_int.exit.i37:                            ; preds = %110
  %.b1.i2.pre.i36 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %114) #8
  %118 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %118) #8
  store i32 %112, i32* %23, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i36, label %rs_write_coord.exit43.thread, label %119

; <label>:119                                     ; preds = %rs_write_int.exit.i37
  %120 = call i64 @encwrite(i8* %118, i64 4, %struct.__sFILE* %savef) #8
  %121 = icmp eq i64 %120, 4
  br i1 %121, label %rs_write_coord.exit43, label %122

; <label>:122                                     ; preds = %119
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit43.thread

rs_write_coord.exit43.thread:                     ; preds = %122, %rs_write_int.exit.i37, %rs_write_int.exit.thread.i35
  %.ph175 = phi i8* [ %118, %rs_write_int.exit.i37 ], [ %118, %122 ], [ %117, %rs_write_int.exit.thread.i35 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph175) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit43:                            ; preds = %119
  %.b1.i44.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %118) #8
  %123 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 1
  %124 = bitcast %struct.coord* %123 to i64*
  %125 = load i64* %124, align 1
  br i1 %.b1.i44.pr.pre, label %rs_write_coord.exit153, label %126

; <label>:126                                     ; preds = %rs_write_coord.exit43
  %127 = lshr i64 %125, 32
  %128 = trunc i64 %127 to i32
  %129 = trunc i64 %125 to i32
  %130 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %130) #8
  store i32 %129, i32* %22, align 4, !tbaa !38
  %131 = call i64 @encwrite(i8* %130, i64 4, %struct.__sFILE* %savef) #8
  %132 = icmp eq i64 %131, 4
  br i1 %132, label %rs_write_int.exit.i47, label %rs_write_int.exit.thread.i45

rs_write_int.exit.thread.i45:                     ; preds = %126
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %130) #8
  %133 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %133) #8
  store i32 %128, i32* %21, align 4, !tbaa !38
  br label %rs_write_coord.exit53.thread

rs_write_int.exit.i47:                            ; preds = %126
  %.b1.i2.pre.i46 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %130) #8
  %134 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #8
  store i32 %128, i32* %21, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i46, label %rs_write_coord.exit53.thread, label %135

; <label>:135                                     ; preds = %rs_write_int.exit.i47
  %136 = call i64 @encwrite(i8* %134, i64 4, %struct.__sFILE* %savef) #8
  %137 = icmp eq i64 %136, 4
  br i1 %137, label %rs_write_coord.exit53, label %138

; <label>:138                                     ; preds = %135
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit53.thread

rs_write_coord.exit53.thread:                     ; preds = %138, %rs_write_int.exit.i47, %rs_write_int.exit.thread.i45
  %.ph176 = phi i8* [ %134, %rs_write_int.exit.i47 ], [ %134, %138 ], [ %133, %rs_write_int.exit.thread.i45 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph176) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit53:                            ; preds = %135
  %.b1.i54.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %134) #8
  %139 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 2
  %140 = bitcast %struct.coord* %139 to i64*
  %141 = load i64* %140, align 1
  br i1 %.b1.i54.pr.pr.pre, label %rs_write_coord.exit153, label %142

; <label>:142                                     ; preds = %rs_write_coord.exit53
  %143 = lshr i64 %141, 32
  %144 = trunc i64 %143 to i32
  %145 = trunc i64 %141 to i32
  %146 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %146) #8
  store i32 %145, i32* %20, align 4, !tbaa !38
  %147 = call i64 @encwrite(i8* %146, i64 4, %struct.__sFILE* %savef) #8
  %148 = icmp eq i64 %147, 4
  br i1 %148, label %rs_write_int.exit.i57, label %rs_write_int.exit.thread.i55

rs_write_int.exit.thread.i55:                     ; preds = %142
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %146) #8
  %149 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %149) #8
  store i32 %144, i32* %19, align 4, !tbaa !38
  br label %rs_write_coord.exit63.thread

rs_write_int.exit.i57:                            ; preds = %142
  %.b1.i2.pre.i56 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %146) #8
  %150 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %150) #8
  store i32 %144, i32* %19, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i56, label %rs_write_coord.exit63.thread, label %151

; <label>:151                                     ; preds = %rs_write_int.exit.i57
  %152 = call i64 @encwrite(i8* %150, i64 4, %struct.__sFILE* %savef) #8
  %153 = icmp eq i64 %152, 4
  br i1 %153, label %rs_write_coord.exit63, label %154

; <label>:154                                     ; preds = %151
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit63.thread

rs_write_coord.exit63.thread:                     ; preds = %154, %rs_write_int.exit.i57, %rs_write_int.exit.thread.i55
  %.ph177 = phi i8* [ %150, %rs_write_int.exit.i57 ], [ %150, %154 ], [ %149, %rs_write_int.exit.thread.i55 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph177) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit63:                            ; preds = %151
  %.b1.i64.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %150) #8
  %155 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 3
  %156 = bitcast %struct.coord* %155 to i64*
  %157 = load i64* %156, align 1
  br i1 %.b1.i64.pr.pr.pre, label %rs_write_coord.exit153, label %158

; <label>:158                                     ; preds = %rs_write_coord.exit63
  %159 = lshr i64 %157, 32
  %160 = trunc i64 %159 to i32
  %161 = trunc i64 %157 to i32
  %162 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %162) #8
  store i32 %161, i32* %18, align 4, !tbaa !38
  %163 = call i64 @encwrite(i8* %162, i64 4, %struct.__sFILE* %savef) #8
  %164 = icmp eq i64 %163, 4
  br i1 %164, label %rs_write_int.exit.i67, label %rs_write_int.exit.thread.i65

rs_write_int.exit.thread.i65:                     ; preds = %158
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %162) #8
  %165 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %165) #8
  store i32 %160, i32* %17, align 4, !tbaa !38
  br label %rs_write_coord.exit73.thread

rs_write_int.exit.i67:                            ; preds = %158
  %.b1.i2.pre.i66 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %162) #8
  %166 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %166) #8
  store i32 %160, i32* %17, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i66, label %rs_write_coord.exit73.thread, label %167

; <label>:167                                     ; preds = %rs_write_int.exit.i67
  %168 = call i64 @encwrite(i8* %166, i64 4, %struct.__sFILE* %savef) #8
  %169 = icmp eq i64 %168, 4
  br i1 %169, label %rs_write_coord.exit73, label %170

; <label>:170                                     ; preds = %167
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit73.thread

rs_write_coord.exit73.thread:                     ; preds = %170, %rs_write_int.exit.i67, %rs_write_int.exit.thread.i65
  %.ph178 = phi i8* [ %166, %rs_write_int.exit.i67 ], [ %166, %170 ], [ %165, %rs_write_int.exit.thread.i65 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph178) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit73:                            ; preds = %167
  %.b1.i74.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %166) #8
  %171 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 4
  %172 = bitcast %struct.coord* %171 to i64*
  %173 = load i64* %172, align 1
  br i1 %.b1.i74.pr.pr.pr.pre, label %rs_write_coord.exit153, label %174

; <label>:174                                     ; preds = %rs_write_coord.exit73
  %175 = lshr i64 %173, 32
  %176 = trunc i64 %175 to i32
  %177 = trunc i64 %173 to i32
  %178 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %178) #8
  store i32 %177, i32* %16, align 4, !tbaa !38
  %179 = call i64 @encwrite(i8* %178, i64 4, %struct.__sFILE* %savef) #8
  %180 = icmp eq i64 %179, 4
  br i1 %180, label %rs_write_int.exit.i77, label %rs_write_int.exit.thread.i75

rs_write_int.exit.thread.i75:                     ; preds = %174
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %178) #8
  %181 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %181) #8
  store i32 %176, i32* %15, align 4, !tbaa !38
  br label %rs_write_coord.exit83.thread

rs_write_int.exit.i77:                            ; preds = %174
  %.b1.i2.pre.i76 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %178) #8
  %182 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %182) #8
  store i32 %176, i32* %15, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i76, label %rs_write_coord.exit83.thread, label %183

; <label>:183                                     ; preds = %rs_write_int.exit.i77
  %184 = call i64 @encwrite(i8* %182, i64 4, %struct.__sFILE* %savef) #8
  %185 = icmp eq i64 %184, 4
  br i1 %185, label %rs_write_coord.exit83, label %186

; <label>:186                                     ; preds = %183
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit83.thread

rs_write_coord.exit83.thread:                     ; preds = %186, %rs_write_int.exit.i77, %rs_write_int.exit.thread.i75
  %.ph179 = phi i8* [ %182, %rs_write_int.exit.i77 ], [ %182, %186 ], [ %181, %rs_write_int.exit.thread.i75 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph179) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit83:                            ; preds = %183
  %.b1.i84.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %182) #8
  %187 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 5
  %188 = bitcast %struct.coord* %187 to i64*
  %189 = load i64* %188, align 1
  br i1 %.b1.i84.pr.pr.pr.pre, label %rs_write_coord.exit153, label %190

; <label>:190                                     ; preds = %rs_write_coord.exit83
  %191 = lshr i64 %189, 32
  %192 = trunc i64 %191 to i32
  %193 = trunc i64 %189 to i32
  %194 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %194) #8
  store i32 %193, i32* %14, align 4, !tbaa !38
  %195 = call i64 @encwrite(i8* %194, i64 4, %struct.__sFILE* %savef) #8
  %196 = icmp eq i64 %195, 4
  br i1 %196, label %rs_write_int.exit.i87, label %rs_write_int.exit.thread.i85

rs_write_int.exit.thread.i85:                     ; preds = %190
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %194) #8
  %197 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %197) #8
  store i32 %192, i32* %13, align 4, !tbaa !38
  br label %rs_write_coord.exit93.thread

rs_write_int.exit.i87:                            ; preds = %190
  %.b1.i2.pre.i86 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %194) #8
  %198 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %198) #8
  store i32 %192, i32* %13, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i86, label %rs_write_coord.exit93.thread, label %199

; <label>:199                                     ; preds = %rs_write_int.exit.i87
  %200 = call i64 @encwrite(i8* %198, i64 4, %struct.__sFILE* %savef) #8
  %201 = icmp eq i64 %200, 4
  br i1 %201, label %rs_write_coord.exit93, label %202

; <label>:202                                     ; preds = %199
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit93.thread

rs_write_coord.exit93.thread:                     ; preds = %202, %rs_write_int.exit.i87, %rs_write_int.exit.thread.i85
  %.ph180 = phi i8* [ %198, %rs_write_int.exit.i87 ], [ %198, %202 ], [ %197, %rs_write_int.exit.thread.i85 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph180) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit93:                            ; preds = %199
  %.b1.i94.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %198) #8
  %203 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 6
  %204 = bitcast %struct.coord* %203 to i64*
  %205 = load i64* %204, align 1
  br i1 %.b1.i94.pr.pr.pr.pre, label %rs_write_coord.exit153, label %206

; <label>:206                                     ; preds = %rs_write_coord.exit93
  %207 = lshr i64 %205, 32
  %208 = trunc i64 %207 to i32
  %209 = trunc i64 %205 to i32
  %210 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %210) #8
  store i32 %209, i32* %12, align 4, !tbaa !38
  %211 = call i64 @encwrite(i8* %210, i64 4, %struct.__sFILE* %savef) #8
  %212 = icmp eq i64 %211, 4
  br i1 %212, label %rs_write_int.exit.i97, label %rs_write_int.exit.thread.i95

rs_write_int.exit.thread.i95:                     ; preds = %206
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %210) #8
  %213 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %213) #8
  store i32 %208, i32* %11, align 4, !tbaa !38
  br label %rs_write_coord.exit103.thread

rs_write_int.exit.i97:                            ; preds = %206
  %.b1.i2.pre.i96 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %210) #8
  %214 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %214) #8
  store i32 %208, i32* %11, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i96, label %rs_write_coord.exit103.thread, label %215

; <label>:215                                     ; preds = %rs_write_int.exit.i97
  %216 = call i64 @encwrite(i8* %214, i64 4, %struct.__sFILE* %savef) #8
  %217 = icmp eq i64 %216, 4
  br i1 %217, label %rs_write_coord.exit103, label %218

; <label>:218                                     ; preds = %215
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit103.thread

rs_write_coord.exit103.thread:                    ; preds = %218, %rs_write_int.exit.i97, %rs_write_int.exit.thread.i95
  %.ph181 = phi i8* [ %214, %rs_write_int.exit.i97 ], [ %214, %218 ], [ %213, %rs_write_int.exit.thread.i95 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph181) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit103:                           ; preds = %215
  %.b1.i104.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %214) #8
  %219 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 7
  %220 = bitcast %struct.coord* %219 to i64*
  %221 = load i64* %220, align 1
  br i1 %.b1.i104.pr.pr.pr.pre, label %rs_write_coord.exit153, label %222

; <label>:222                                     ; preds = %rs_write_coord.exit103
  %223 = lshr i64 %221, 32
  %224 = trunc i64 %223 to i32
  %225 = trunc i64 %221 to i32
  %226 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %226) #8
  store i32 %225, i32* %10, align 4, !tbaa !38
  %227 = call i64 @encwrite(i8* %226, i64 4, %struct.__sFILE* %savef) #8
  %228 = icmp eq i64 %227, 4
  br i1 %228, label %rs_write_int.exit.i107, label %rs_write_int.exit.thread.i105

rs_write_int.exit.thread.i105:                    ; preds = %222
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %226) #8
  %229 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %229) #8
  store i32 %224, i32* %9, align 4, !tbaa !38
  br label %rs_write_coord.exit113.thread

rs_write_int.exit.i107:                           ; preds = %222
  %.b1.i2.pre.i106 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %226) #8
  %230 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %230) #8
  store i32 %224, i32* %9, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i106, label %rs_write_coord.exit113.thread, label %231

; <label>:231                                     ; preds = %rs_write_int.exit.i107
  %232 = call i64 @encwrite(i8* %230, i64 4, %struct.__sFILE* %savef) #8
  %233 = icmp eq i64 %232, 4
  br i1 %233, label %rs_write_coord.exit113, label %234

; <label>:234                                     ; preds = %231
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit113.thread

rs_write_coord.exit113.thread:                    ; preds = %234, %rs_write_int.exit.i107, %rs_write_int.exit.thread.i105
  %.ph182 = phi i8* [ %230, %rs_write_int.exit.i107 ], [ %230, %234 ], [ %229, %rs_write_int.exit.thread.i105 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph182) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit113:                           ; preds = %231
  %.b1.i114.pr.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %230) #8
  %235 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 8
  %236 = bitcast %struct.coord* %235 to i64*
  %237 = load i64* %236, align 1
  br i1 %.b1.i114.pr.pr.pr.pr.pre, label %rs_write_coord.exit153, label %238

; <label>:238                                     ; preds = %rs_write_coord.exit113
  %239 = lshr i64 %237, 32
  %240 = trunc i64 %239 to i32
  %241 = trunc i64 %237 to i32
  %242 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %242) #8
  store i32 %241, i32* %8, align 4, !tbaa !38
  %243 = call i64 @encwrite(i8* %242, i64 4, %struct.__sFILE* %savef) #8
  %244 = icmp eq i64 %243, 4
  br i1 %244, label %rs_write_int.exit.i117, label %rs_write_int.exit.thread.i115

rs_write_int.exit.thread.i115:                    ; preds = %238
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %242) #8
  %245 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %245) #8
  store i32 %240, i32* %7, align 4, !tbaa !38
  br label %rs_write_coord.exit123.thread

rs_write_int.exit.i117:                           ; preds = %238
  %.b1.i2.pre.i116 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %242) #8
  %246 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %246) #8
  store i32 %240, i32* %7, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i116, label %rs_write_coord.exit123.thread, label %247

; <label>:247                                     ; preds = %rs_write_int.exit.i117
  %248 = call i64 @encwrite(i8* %246, i64 4, %struct.__sFILE* %savef) #8
  %249 = icmp eq i64 %248, 4
  br i1 %249, label %rs_write_coord.exit123, label %250

; <label>:250                                     ; preds = %247
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit123.thread

rs_write_coord.exit123.thread:                    ; preds = %250, %rs_write_int.exit.i117, %rs_write_int.exit.thread.i115
  %.ph183 = phi i8* [ %246, %rs_write_int.exit.i117 ], [ %246, %250 ], [ %245, %rs_write_int.exit.thread.i115 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph183) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit123:                           ; preds = %247
  %.b1.i124.pr.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %246) #8
  %251 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 9
  %252 = bitcast %struct.coord* %251 to i64*
  %253 = load i64* %252, align 1
  br i1 %.b1.i124.pr.pr.pr.pr.pre, label %rs_write_coord.exit153, label %254

; <label>:254                                     ; preds = %rs_write_coord.exit123
  %255 = lshr i64 %253, 32
  %256 = trunc i64 %255 to i32
  %257 = trunc i64 %253 to i32
  %258 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %258) #8
  store i32 %257, i32* %6, align 4, !tbaa !38
  %259 = call i64 @encwrite(i8* %258, i64 4, %struct.__sFILE* %savef) #8
  %260 = icmp eq i64 %259, 4
  br i1 %260, label %rs_write_int.exit.i127, label %rs_write_int.exit.thread.i125

rs_write_int.exit.thread.i125:                    ; preds = %254
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %258) #8
  %261 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %261) #8
  store i32 %256, i32* %5, align 4, !tbaa !38
  br label %rs_write_coord.exit133.thread

rs_write_int.exit.i127:                           ; preds = %254
  %.b1.i2.pre.i126 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %258) #8
  %262 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %262) #8
  store i32 %256, i32* %5, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i126, label %rs_write_coord.exit133.thread, label %263

; <label>:263                                     ; preds = %rs_write_int.exit.i127
  %264 = call i64 @encwrite(i8* %262, i64 4, %struct.__sFILE* %savef) #8
  %265 = icmp eq i64 %264, 4
  br i1 %265, label %rs_write_coord.exit133, label %266

; <label>:266                                     ; preds = %263
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit133.thread

rs_write_coord.exit133.thread:                    ; preds = %266, %rs_write_int.exit.i127, %rs_write_int.exit.thread.i125
  %.ph184 = phi i8* [ %262, %rs_write_int.exit.i127 ], [ %262, %266 ], [ %261, %rs_write_int.exit.thread.i125 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph184) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit133:                           ; preds = %263
  %.b1.i134.pr.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %262) #8
  %267 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 10
  %268 = bitcast %struct.coord* %267 to i64*
  %269 = load i64* %268, align 1
  br i1 %.b1.i134.pr.pr.pr.pr.pre, label %rs_write_coord.exit153, label %270

; <label>:270                                     ; preds = %rs_write_coord.exit133
  %271 = lshr i64 %269, 32
  %272 = trunc i64 %271 to i32
  %273 = trunc i64 %269 to i32
  %274 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %274) #8
  store i32 %273, i32* %4, align 4, !tbaa !38
  %275 = call i64 @encwrite(i8* %274, i64 4, %struct.__sFILE* %savef) #8
  %276 = icmp eq i64 %275, 4
  br i1 %276, label %rs_write_int.exit.i137, label %rs_write_int.exit.thread.i135

rs_write_int.exit.thread.i135:                    ; preds = %270
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %274) #8
  %277 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %277) #8
  store i32 %272, i32* %3, align 4, !tbaa !38
  br label %rs_write_coord.exit143.thread

rs_write_int.exit.i137:                           ; preds = %270
  %.b1.i2.pre.i136 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %274) #8
  %278 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %278) #8
  store i32 %272, i32* %3, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i136, label %rs_write_coord.exit143.thread, label %279

; <label>:279                                     ; preds = %rs_write_int.exit.i137
  %280 = call i64 @encwrite(i8* %278, i64 4, %struct.__sFILE* %savef) #8
  %281 = icmp eq i64 %280, 4
  br i1 %281, label %rs_write_coord.exit143, label %282

; <label>:282                                     ; preds = %279
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit143.thread

rs_write_coord.exit143.thread:                    ; preds = %282, %rs_write_int.exit.i137, %rs_write_int.exit.thread.i135
  %.ph185 = phi i8* [ %278, %rs_write_int.exit.i137 ], [ %278, %282 ], [ %277, %rs_write_int.exit.thread.i135 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph185) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit143:                           ; preds = %279
  %.b1.i144.pr.pr.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %278) #8
  %283 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 11
  %284 = bitcast %struct.coord* %283 to i64*
  %285 = load i64* %284, align 1
  br i1 %.b1.i144.pr.pr.pr.pr.pre, label %rs_write_coord.exit153, label %286

; <label>:286                                     ; preds = %rs_write_coord.exit143
  %287 = lshr i64 %285, 32
  %288 = trunc i64 %287 to i32
  %289 = trunc i64 %285 to i32
  %290 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %290) #8
  store i32 %289, i32* %2, align 4, !tbaa !38
  %291 = call i64 @encwrite(i8* %290, i64 4, %struct.__sFILE* %savef) #8
  %292 = icmp eq i64 %291, 4
  br i1 %292, label %rs_write_int.exit.i147, label %rs_write_int.exit.thread.i145

rs_write_int.exit.thread.i145:                    ; preds = %286
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %290) #8
  %293 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %293) #8
  store i32 %288, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit6.i151

rs_write_int.exit.i147:                           ; preds = %286
  %.b1.i2.pre.i146 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %290) #8
  %294 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %294) #8
  store i32 %288, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i146, label %rs_write_int.exit6.i151, label %295

; <label>:295                                     ; preds = %rs_write_int.exit.i147
  %296 = call i64 @encwrite(i8* %294, i64 4, %struct.__sFILE* %savef) #8
  %297 = icmp eq i64 %296, 4
  br i1 %297, label %.rs_write_int.exit6.i151_crit_edge, label %298

.rs_write_int.exit6.i151_crit_edge:               ; preds = %295
  %.b.pre.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit6.i151

; <label>:298                                     ; preds = %295
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit6.i151

rs_write_int.exit6.i151:                          ; preds = %298, %.rs_write_int.exit6.i151_crit_edge, %rs_write_int.exit.i147, %rs_write_int.exit.thread.i145
  %.b.pre = phi i1 [ true, %rs_write_int.exit.i147 ], [ true, %298 ], [ true, %rs_write_int.exit.thread.i145 ], [ %.b.pre.pre, %.rs_write_int.exit6.i151_crit_edge ]
  %299 = phi i8* [ %294, %rs_write_int.exit.i147 ], [ %294, %298 ], [ %293, %rs_write_int.exit.thread.i145 ], [ %294, %.rs_write_int.exit6.i151_crit_edge ]
  call void @llvm.lifetime.end(i64 4, i8* %299) #8
  br label %rs_write_coord.exit153

rs_write_coord.exit153:                           ; preds = %rs_write_int.exit6.i151, %rs_write_coord.exit143, %rs_write_coord.exit143.thread, %rs_write_coord.exit133, %rs_write_coord.exit133.thread, %rs_write_coord.exit123, %rs_write_coord.exit123.thread, %rs_write_coord.exit113, %rs_write_coord.exit113.thread, %rs_write_coord.exit103, %rs_write_coord.exit103.thread, %rs_write_coord.exit93, %rs_write_coord.exit93.thread, %rs_write_coord.exit83, %rs_write_coord.exit83.thread, %rs_write_coord.exit73, %rs_write_coord.exit73.thread, %rs_write_coord.exit63, %rs_write_coord.exit63.thread, %rs_write_coord.exit53, %rs_write_coord.exit53.thread, %rs_write_coord.exit43, %rs_write_coord.exit43.thread, %rs_write_int.exit33, %106, %rs_write_short.exit, %0
  %.b1.sink = phi i1 [ true, %0 ], [ true, %rs_write_coord.exit63 ], [ true, %rs_write_coord.exit53 ], [ true, %rs_write_coord.exit43 ], [ true, %rs_write_int.exit33 ], [ true, %rs_write_coord.exit103 ], [ true, %rs_write_coord.exit93 ], [ true, %rs_write_coord.exit83 ], [ true, %rs_write_coord.exit73 ], [ true, %rs_write_coord.exit123 ], [ true, %rs_write_coord.exit113 ], [ true, %rs_write_coord.exit133 ], [ true, %rs_write_coord.exit143 ], [ %.b.pre, %rs_write_int.exit6.i151 ], [ true, %rs_write_coord.exit43.thread ], [ true, %rs_write_coord.exit53.thread ], [ true, %rs_write_coord.exit63.thread ], [ true, %rs_write_coord.exit73.thread ], [ true, %rs_write_coord.exit83.thread ], [ true, %rs_write_coord.exit93.thread ], [ true, %rs_write_coord.exit103.thread ], [ true, %rs_write_coord.exit113.thread ], [ true, %rs_write_coord.exit123.thread ], [ true, %rs_write_coord.exit133.thread ], [ true, %rs_write_coord.exit143.thread ], [ true, %rs_write_short.exit ], [ true, %106 ]
  %300 = zext i1 %.b1.sink to i32
  ret i32 %300
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_room(%struct.__sFILE* %inf, %struct.room* nocapture %r) #0 {
  %input.i7.i316 = alloca i32, align 4
  %input.i.i317 = alloca i32, align 4
  %input.i7.i294 = alloca i32, align 4
  %input.i.i295 = alloca i32, align 4
  %input.i7.i272 = alloca i32, align 4
  %input.i.i273 = alloca i32, align 4
  %input.i7.i250 = alloca i32, align 4
  %input.i.i251 = alloca i32, align 4
  %input.i7.i228 = alloca i32, align 4
  %input.i.i229 = alloca i32, align 4
  %input.i7.i206 = alloca i32, align 4
  %input.i.i207 = alloca i32, align 4
  %input.i7.i184 = alloca i32, align 4
  %input.i.i185 = alloca i32, align 4
  %input.i7.i162 = alloca i32, align 4
  %input.i.i163 = alloca i32, align 4
  %input.i7.i140 = alloca i32, align 4
  %input.i.i141 = alloca i32, align 4
  %input.i7.i118 = alloca i32, align 4
  %input.i.i119 = alloca i32, align 4
  %input.i7.i96 = alloca i32, align 4
  %input.i.i97 = alloca i32, align 4
  %input.i7.i74 = alloca i32, align 4
  %input.i.i75 = alloca i32, align 4
  %input.i63 = alloca i32, align 4
  %input.i53 = alloca i16, align 2
  %input.i = alloca i32, align 4
  %input.i7.i27 = alloca i32, align 4
  %input.i.i28 = alloca i32, align 4
  %input.i7.i5 = alloca i32, align 4
  %input.i.i6 = alloca i32, align 4
  %input.i7.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %261, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit.i_crit_edge.i, label %5

.rs_read.exit.i_crit_edge.i:                      ; preds = %1
  %.b2.i8.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit.i_crit_edge.i
  %.b2.i8.pre.i = phi i1 [ %.b2.i8.pre.pre.i, %.rs_read.exit.i_crit_edge.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b3.i9.pre.i = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = bitcast i32* %input.i7.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #8
  store i32 0, i32* %input.i7.i, align 4, !tbaa !38
  %or.cond.i10.i = or i1 %.b2.i8.pre.i, %.b3.i9.pre.i
  br i1 %or.cond.i10.i, label %rs_read_int.exit17.i, label %8

; <label>:8                                       ; preds = %rs_read_int.exit.i
  %9 = call i64 @encread(i8* %7, i64 4, %struct.__sFILE* %inf) #8
  %10 = icmp eq i64 %9, 4
  br i1 %10, label %.rs_read.exit.i15_crit_edge.i, label %11

.rs_read.exit.i15_crit_edge.i:                    ; preds = %8
  %.b2.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i

; <label>:11                                      ; preds = %8
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i

rs_read.exit.i15.i:                               ; preds = %11, %.rs_read.exit.i15_crit_edge.i
  %.b2.pre.i = phi i1 [ %.b2.pre.pre.i, %.rs_read.exit.i15_crit_edge.i ], [ true, %11 ]
  %12 = load i32* %input.i7.i, align 4, !tbaa !38
  %.b6.pre.i = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i

rs_read_int.exit17.i:                             ; preds = %rs_read.exit.i15.i, %rs_read_int.exit.i
  %.b3.i7 = phi i1 [ %.b2.pre.i, %rs_read.exit.i15.i ], [ %.b2.i8.pre.i, %rs_read_int.exit.i ]
  %.b4.i8 = phi i1 [ %.b6.pre.i, %rs_read.exit.i15.i ], [ %.b3.i9.pre.i, %rs_read_int.exit.i ]
  %13 = phi i32 [ %12, %rs_read.exit.i15.i ], [ undef, %rs_read_int.exit.i ]
  call void @llvm.lifetime.end(i64 4, i8* %7) #8
  %..b2.i = or i1 %.b4.i8, %.b3.i7
  br i1 %..b2.i, label %rs_read_coord.exit26, label %14

; <label>:14                                      ; preds = %rs_read_int.exit17.i
  %15 = getelementptr inbounds %struct.room* %r, i64 0, i32 0, i32 0
  store i32 %6, i32* %15, align 4, !tbaa !21
  %16 = getelementptr inbounds %struct.room* %r, i64 0, i32 0, i32 1
  store i32 %13, i32* %16, align 4, !tbaa !20
  %17 = bitcast i32* %input.i.i6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 0, i32* %input.i.i6, align 4, !tbaa !38
  %18 = call i64 @encread(i8* %17, i64 4, %struct.__sFILE* %inf) #8
  %19 = icmp eq i64 %18, 4
  br i1 %19, label %.rs_read.exit.i_crit_edge.i11, label %20

.rs_read.exit.i_crit_edge.i11:                    ; preds = %14
  %.b2.i8.pre.pre.i10 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i15

; <label>:20                                      ; preds = %14
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i15

rs_read_int.exit.i15:                             ; preds = %20, %.rs_read.exit.i_crit_edge.i11
  %.b2.i8.pre.i12 = phi i1 [ %.b2.i8.pre.pre.i10, %.rs_read.exit.i_crit_edge.i11 ], [ true, %20 ]
  %21 = load i32* %input.i.i6, align 4, !tbaa !38
  %.b3.i9.pre.i13 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %17) #8
  %22 = bitcast i32* %input.i7.i5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #8
  store i32 0, i32* %input.i7.i5, align 4, !tbaa !38
  %or.cond.i10.i14 = or i1 %.b2.i8.pre.i12, %.b3.i9.pre.i13
  br i1 %or.cond.i10.i14, label %rs_read_int.exit17.i24, label %23

; <label>:23                                      ; preds = %rs_read_int.exit.i15
  %24 = call i64 @encread(i8* %22, i64 4, %struct.__sFILE* %inf) #8
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %.rs_read.exit.i15_crit_edge.i17, label %26

.rs_read.exit.i15_crit_edge.i17:                  ; preds = %23
  %.b2.pre.pre.i16 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i20

; <label>:26                                      ; preds = %23
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i20

rs_read.exit.i15.i20:                             ; preds = %26, %.rs_read.exit.i15_crit_edge.i17
  %.b2.pre.i18 = phi i1 [ %.b2.pre.pre.i16, %.rs_read.exit.i15_crit_edge.i17 ], [ true, %26 ]
  %27 = load i32* %input.i7.i5, align 4, !tbaa !38
  %.b6.pre.i19 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i24

rs_read_int.exit17.i24:                           ; preds = %rs_read.exit.i15.i20, %rs_read_int.exit.i15
  %.b.i21 = phi i1 [ %.b2.pre.i18, %rs_read.exit.i15.i20 ], [ %.b2.i8.pre.i12, %rs_read_int.exit.i15 ]
  %.b5.i22 = phi i1 [ %.b6.pre.i19, %rs_read.exit.i15.i20 ], [ %.b3.i9.pre.i13, %rs_read_int.exit.i15 ]
  %28 = phi i32 [ %27, %rs_read.exit.i15.i20 ], [ undef, %rs_read_int.exit.i15 ]
  call void @llvm.lifetime.end(i64 4, i8* %22) #8
  %..b2.i23 = or i1 %.b5.i22, %.b.i21
  br i1 %..b2.i23, label %rs_read_coord.exit26, label %29

; <label>:29                                      ; preds = %rs_read_int.exit17.i24
  %30 = getelementptr inbounds %struct.room* %r, i64 0, i32 1, i32 0
  store i32 %21, i32* %30, align 4, !tbaa !21
  %31 = getelementptr inbounds %struct.room* %r, i64 0, i32 1, i32 1
  store i32 %28, i32* %31, align 4, !tbaa !20
  br label %rs_read_coord.exit26

rs_read_coord.exit26:                             ; preds = %29, %rs_read_int.exit17.i24, %rs_read_int.exit17.i
  %.b4.i30 = phi i1 [ %.b5.i22, %rs_read_int.exit17.i24 ], [ false, %29 ], [ %.b4.i8, %rs_read_int.exit17.i ]
  %.b3.i29 = phi i1 [ %.b.i21, %rs_read_int.exit17.i24 ], [ false, %29 ], [ %.b3.i7, %rs_read_int.exit17.i ]
  %or.cond.i31 = or i1 %.b3.i29, %.b4.i30
  br i1 %or.cond.i31, label %rs_read_coord.exit48, label %32

; <label>:32                                      ; preds = %rs_read_coord.exit26
  %33 = bitcast i32* %input.i.i28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #8
  store i32 0, i32* %input.i.i28, align 4, !tbaa !38
  %34 = call i64 @encread(i8* %33, i64 4, %struct.__sFILE* %inf) #8
  %35 = icmp eq i64 %34, 4
  br i1 %35, label %.rs_read.exit.i_crit_edge.i33, label %36

.rs_read.exit.i_crit_edge.i33:                    ; preds = %32
  %.b2.i8.pre.pre.i32 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i37

; <label>:36                                      ; preds = %32
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i37

rs_read_int.exit.i37:                             ; preds = %36, %.rs_read.exit.i_crit_edge.i33
  %.b2.i8.pre.i34 = phi i1 [ %.b2.i8.pre.pre.i32, %.rs_read.exit.i_crit_edge.i33 ], [ true, %36 ]
  %37 = load i32* %input.i.i28, align 4, !tbaa !38
  %.b3.i9.pre.i35 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %33) #8
  %38 = bitcast i32* %input.i7.i27 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %38) #8
  store i32 0, i32* %input.i7.i27, align 4, !tbaa !38
  %or.cond.i10.i36 = or i1 %.b2.i8.pre.i34, %.b3.i9.pre.i35
  br i1 %or.cond.i10.i36, label %rs_read_int.exit17.i46, label %39

; <label>:39                                      ; preds = %rs_read_int.exit.i37
  %40 = call i64 @encread(i8* %38, i64 4, %struct.__sFILE* %inf) #8
  %41 = icmp eq i64 %40, 4
  br i1 %41, label %.rs_read.exit.i15_crit_edge.i39, label %42

.rs_read.exit.i15_crit_edge.i39:                  ; preds = %39
  %.b2.pre.pre.i38 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i42

; <label>:42                                      ; preds = %39
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i42

rs_read.exit.i15.i42:                             ; preds = %42, %.rs_read.exit.i15_crit_edge.i39
  %.b2.pre.i40 = phi i1 [ %.b2.pre.pre.i38, %.rs_read.exit.i15_crit_edge.i39 ], [ true, %42 ]
  %43 = load i32* %input.i7.i27, align 4, !tbaa !38
  %.b6.pre.i41 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i46

rs_read_int.exit17.i46:                           ; preds = %rs_read.exit.i15.i42, %rs_read_int.exit.i37
  %.b.i43 = phi i1 [ %.b2.pre.i40, %rs_read.exit.i15.i42 ], [ %.b2.i8.pre.i34, %rs_read_int.exit.i37 ]
  %.b5.i44 = phi i1 [ %.b6.pre.i41, %rs_read.exit.i15.i42 ], [ %.b3.i9.pre.i35, %rs_read_int.exit.i37 ]
  %44 = phi i32 [ %43, %rs_read.exit.i15.i42 ], [ undef, %rs_read_int.exit.i37 ]
  call void @llvm.lifetime.end(i64 4, i8* %38) #8
  %..b2.i45 = or i1 %.b5.i44, %.b.i43
  br i1 %..b2.i45, label %rs_read_coord.exit48, label %45

; <label>:45                                      ; preds = %rs_read_int.exit17.i46
  %46 = getelementptr inbounds %struct.room* %r, i64 0, i32 2, i32 0
  store i32 %37, i32* %46, align 4, !tbaa !21
  %47 = getelementptr inbounds %struct.room* %r, i64 0, i32 2, i32 1
  store i32 %44, i32* %47, align 4, !tbaa !20
  br label %rs_read_coord.exit48

rs_read_coord.exit48:                             ; preds = %45, %rs_read_int.exit17.i46, %rs_read_coord.exit26
  %.b3.i49 = phi i1 [ %.b4.i30, %rs_read_coord.exit26 ], [ %.b5.i44, %rs_read_int.exit17.i46 ], [ false, %45 ]
  %.b2.i = phi i1 [ %.b3.i29, %rs_read_coord.exit26 ], [ %.b.i43, %rs_read_int.exit17.i46 ], [ false, %45 ]
  %48 = getelementptr inbounds %struct.room* %r, i64 0, i32 3
  %49 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i50 = or i1 %.b2.i, %.b3.i49
  br i1 %or.cond.i50, label %rs_read_int.exit, label %50

; <label>:50                                      ; preds = %rs_read_coord.exit48
  %51 = call i64 @encread(i8* %49, i64 4, %struct.__sFILE* %inf) #8
  %52 = icmp eq i64 %51, 4
  br i1 %52, label %.rs_read.exit.i_crit_edge, label %53

.rs_read.exit.i_crit_edge:                        ; preds = %50
  %.b2.i54.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i

; <label>:53                                      ; preds = %50
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %53, %.rs_read.exit.i_crit_edge
  %.b2.i54.pre = phi i1 [ %.b2.i54.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %53 ]
  %54 = load i32* %input.i, align 4, !tbaa !38
  store i32 %54, i32* %48, align 4, !tbaa !38
  %.b3.i55.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %rs_read_coord.exit48
  %.b3.i55 = phi i1 [ %.b3.i49, %rs_read_coord.exit48 ], [ %.b3.i55.pre, %rs_read.exit.i ]
  %.b2.i54 = phi i1 [ %.b2.i, %rs_read_coord.exit48 ], [ %.b2.i54.pre, %rs_read.exit.i ]
  call void @llvm.lifetime.end(i64 4, i8* %49) #8
  %55 = getelementptr inbounds %struct.room* %r, i64 0, i32 4
  %56 = bitcast i16* %input.i53 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %56) #8
  %or.cond.i56 = or i1 %.b2.i54, %.b3.i55
  br i1 %or.cond.i56, label %rs_read_short.exit, label %57

; <label>:57                                      ; preds = %rs_read_int.exit
  %58 = call i64 @encread(i8* %56, i64 2, %struct.__sFILE* %inf) #8
  %59 = icmp eq i64 %58, 2
  br i1 %59, label %.rs_read.exit.i61_crit_edge, label %60

.rs_read.exit.i61_crit_edge:                      ; preds = %57
  %.b2.i64.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i61

; <label>:60                                      ; preds = %57
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i61

rs_read.exit.i61:                                 ; preds = %60, %.rs_read.exit.i61_crit_edge
  %.b2.i64.pre = phi i1 [ %.b2.i64.pre.pre, %.rs_read.exit.i61_crit_edge ], [ true, %60 ]
  %61 = load i16* %input.i53, align 2, !tbaa !118
  store i16 %61, i16* %55, align 2, !tbaa !118
  %.b3.i65.pre = load i1* @format_error, align 1
  br label %rs_read_short.exit

rs_read_short.exit:                               ; preds = %rs_read.exit.i61, %rs_read_int.exit
  %.b3.i65 = phi i1 [ %.b3.i55, %rs_read_int.exit ], [ %.b3.i65.pre, %rs_read.exit.i61 ]
  %.b2.i64 = phi i1 [ %.b2.i54, %rs_read_int.exit ], [ %.b2.i64.pre, %rs_read.exit.i61 ]
  call void @llvm.lifetime.end(i64 2, i8* %56) #8
  %62 = getelementptr inbounds %struct.room* %r, i64 0, i32 5
  %63 = bitcast i32* %input.i63 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %63) #8
  store i32 0, i32* %input.i63, align 4, !tbaa !38
  %or.cond.i66 = or i1 %.b2.i64, %.b3.i65
  br i1 %or.cond.i66, label %rs_read_int.exit73, label %64

; <label>:64                                      ; preds = %rs_read_short.exit
  %65 = call i64 @encread(i8* %63, i64 4, %struct.__sFILE* %inf) #8
  %66 = icmp eq i64 %65, 4
  br i1 %66, label %.rs_read.exit.i71_crit_edge, label %67

.rs_read.exit.i71_crit_edge:                      ; preds = %64
  %.b3.i76.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i71

; <label>:67                                      ; preds = %64
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i71

rs_read.exit.i71:                                 ; preds = %67, %.rs_read.exit.i71_crit_edge
  %.b3.i76.pre = phi i1 [ %.b3.i76.pre.pre, %.rs_read.exit.i71_crit_edge ], [ true, %67 ]
  %68 = load i32* %input.i63, align 4, !tbaa !38
  store i32 %68, i32* %62, align 4, !tbaa !38
  %.b4.i77.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit73

rs_read_int.exit73:                               ; preds = %rs_read.exit.i71, %rs_read_short.exit
  %.b4.i77 = phi i1 [ %.b3.i65, %rs_read_short.exit ], [ %.b4.i77.pre, %rs_read.exit.i71 ]
  %.b3.i76 = phi i1 [ %.b2.i64, %rs_read_short.exit ], [ %.b3.i76.pre, %rs_read.exit.i71 ]
  call void @llvm.lifetime.end(i64 4, i8* %63) #8
  %or.cond.i78 = or i1 %.b3.i76, %.b4.i77
  br i1 %or.cond.i78, label %rs_read_coord.exit95, label %69

; <label>:69                                      ; preds = %rs_read_int.exit73
  %70 = bitcast i32* %input.i.i75 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %70) #8
  store i32 0, i32* %input.i.i75, align 4, !tbaa !38
  %71 = call i64 @encread(i8* %70, i64 4, %struct.__sFILE* %inf) #8
  %72 = icmp eq i64 %71, 4
  br i1 %72, label %.rs_read.exit.i_crit_edge.i80, label %73

.rs_read.exit.i_crit_edge.i80:                    ; preds = %69
  %.b2.i8.pre.pre.i79 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i84

; <label>:73                                      ; preds = %69
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i84

rs_read_int.exit.i84:                             ; preds = %73, %.rs_read.exit.i_crit_edge.i80
  %.b2.i8.pre.i81 = phi i1 [ %.b2.i8.pre.pre.i79, %.rs_read.exit.i_crit_edge.i80 ], [ true, %73 ]
  %74 = load i32* %input.i.i75, align 4, !tbaa !38
  %.b3.i9.pre.i82 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %70) #8
  %75 = bitcast i32* %input.i7.i74 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %75) #8
  store i32 0, i32* %input.i7.i74, align 4, !tbaa !38
  %or.cond.i10.i83 = or i1 %.b2.i8.pre.i81, %.b3.i9.pre.i82
  br i1 %or.cond.i10.i83, label %rs_read_int.exit17.i93, label %76

; <label>:76                                      ; preds = %rs_read_int.exit.i84
  %77 = call i64 @encread(i8* %75, i64 4, %struct.__sFILE* %inf) #8
  %78 = icmp eq i64 %77, 4
  br i1 %78, label %.rs_read.exit.i15_crit_edge.i86, label %79

.rs_read.exit.i15_crit_edge.i86:                  ; preds = %76
  %.b2.pre.pre.i85 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i89

; <label>:79                                      ; preds = %76
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i89

rs_read.exit.i15.i89:                             ; preds = %79, %.rs_read.exit.i15_crit_edge.i86
  %.b2.pre.i87 = phi i1 [ %.b2.pre.pre.i85, %.rs_read.exit.i15_crit_edge.i86 ], [ true, %79 ]
  %80 = load i32* %input.i7.i74, align 4, !tbaa !38
  %.b6.pre.i88 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i93

rs_read_int.exit17.i93:                           ; preds = %rs_read.exit.i15.i89, %rs_read_int.exit.i84
  %.b.i90 = phi i1 [ %.b2.pre.i87, %rs_read.exit.i15.i89 ], [ %.b2.i8.pre.i81, %rs_read_int.exit.i84 ]
  %.b5.i91 = phi i1 [ %.b6.pre.i88, %rs_read.exit.i15.i89 ], [ %.b3.i9.pre.i82, %rs_read_int.exit.i84 ]
  %81 = phi i32 [ %80, %rs_read.exit.i15.i89 ], [ undef, %rs_read_int.exit.i84 ]
  call void @llvm.lifetime.end(i64 4, i8* %75) #8
  %..b2.i92 = or i1 %.b5.i91, %.b.i90
  br i1 %..b2.i92, label %rs_read_coord.exit95, label %82

; <label>:82                                      ; preds = %rs_read_int.exit17.i93
  %83 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 0, i32 0
  store i32 %74, i32* %83, align 4, !tbaa !21
  %84 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 0, i32 1
  store i32 %81, i32* %84, align 4, !tbaa !20
  br label %rs_read_coord.exit95

rs_read_coord.exit95:                             ; preds = %82, %rs_read_int.exit17.i93, %rs_read_int.exit73
  %.b4.i99 = phi i1 [ %.b4.i77, %rs_read_int.exit73 ], [ %.b5.i91, %rs_read_int.exit17.i93 ], [ false, %82 ]
  %.b3.i98 = phi i1 [ %.b3.i76, %rs_read_int.exit73 ], [ %.b.i90, %rs_read_int.exit17.i93 ], [ false, %82 ]
  %or.cond.i100 = or i1 %.b3.i98, %.b4.i99
  br i1 %or.cond.i100, label %rs_read_coord.exit117, label %85

; <label>:85                                      ; preds = %rs_read_coord.exit95
  %86 = bitcast i32* %input.i.i97 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %86) #8
  store i32 0, i32* %input.i.i97, align 4, !tbaa !38
  %87 = call i64 @encread(i8* %86, i64 4, %struct.__sFILE* %inf) #8
  %88 = icmp eq i64 %87, 4
  br i1 %88, label %.rs_read.exit.i_crit_edge.i102, label %89

.rs_read.exit.i_crit_edge.i102:                   ; preds = %85
  %.b2.i8.pre.pre.i101 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i106

; <label>:89                                      ; preds = %85
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i106

rs_read_int.exit.i106:                            ; preds = %89, %.rs_read.exit.i_crit_edge.i102
  %.b2.i8.pre.i103 = phi i1 [ %.b2.i8.pre.pre.i101, %.rs_read.exit.i_crit_edge.i102 ], [ true, %89 ]
  %90 = load i32* %input.i.i97, align 4, !tbaa !38
  %.b3.i9.pre.i104 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %86) #8
  %91 = bitcast i32* %input.i7.i96 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #8
  store i32 0, i32* %input.i7.i96, align 4, !tbaa !38
  %or.cond.i10.i105 = or i1 %.b2.i8.pre.i103, %.b3.i9.pre.i104
  br i1 %or.cond.i10.i105, label %rs_read_int.exit17.i115, label %92

; <label>:92                                      ; preds = %rs_read_int.exit.i106
  %93 = call i64 @encread(i8* %91, i64 4, %struct.__sFILE* %inf) #8
  %94 = icmp eq i64 %93, 4
  br i1 %94, label %.rs_read.exit.i15_crit_edge.i108, label %95

.rs_read.exit.i15_crit_edge.i108:                 ; preds = %92
  %.b2.pre.pre.i107 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i111

; <label>:95                                      ; preds = %92
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i111

rs_read.exit.i15.i111:                            ; preds = %95, %.rs_read.exit.i15_crit_edge.i108
  %.b2.pre.i109 = phi i1 [ %.b2.pre.pre.i107, %.rs_read.exit.i15_crit_edge.i108 ], [ true, %95 ]
  %96 = load i32* %input.i7.i96, align 4, !tbaa !38
  %.b6.pre.i110 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i115

rs_read_int.exit17.i115:                          ; preds = %rs_read.exit.i15.i111, %rs_read_int.exit.i106
  %.b.i112 = phi i1 [ %.b2.pre.i109, %rs_read.exit.i15.i111 ], [ %.b2.i8.pre.i103, %rs_read_int.exit.i106 ]
  %.b5.i113 = phi i1 [ %.b6.pre.i110, %rs_read.exit.i15.i111 ], [ %.b3.i9.pre.i104, %rs_read_int.exit.i106 ]
  %97 = phi i32 [ %96, %rs_read.exit.i15.i111 ], [ undef, %rs_read_int.exit.i106 ]
  call void @llvm.lifetime.end(i64 4, i8* %91) #8
  %..b2.i114 = or i1 %.b5.i113, %.b.i112
  br i1 %..b2.i114, label %rs_read_coord.exit117, label %98

; <label>:98                                      ; preds = %rs_read_int.exit17.i115
  %99 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 1, i32 0
  store i32 %90, i32* %99, align 4, !tbaa !21
  %100 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 1, i32 1
  store i32 %97, i32* %100, align 4, !tbaa !20
  br label %rs_read_coord.exit117

rs_read_coord.exit117:                            ; preds = %98, %rs_read_int.exit17.i115, %rs_read_coord.exit95
  %.b4.i121 = phi i1 [ %.b4.i99, %rs_read_coord.exit95 ], [ %.b5.i113, %rs_read_int.exit17.i115 ], [ false, %98 ]
  %.b3.i120 = phi i1 [ %.b3.i98, %rs_read_coord.exit95 ], [ %.b.i112, %rs_read_int.exit17.i115 ], [ false, %98 ]
  %or.cond.i122 = or i1 %.b3.i120, %.b4.i121
  br i1 %or.cond.i122, label %rs_read_coord.exit139, label %101

; <label>:101                                     ; preds = %rs_read_coord.exit117
  %102 = bitcast i32* %input.i.i119 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %102) #8
  store i32 0, i32* %input.i.i119, align 4, !tbaa !38
  %103 = call i64 @encread(i8* %102, i64 4, %struct.__sFILE* %inf) #8
  %104 = icmp eq i64 %103, 4
  br i1 %104, label %.rs_read.exit.i_crit_edge.i124, label %105

.rs_read.exit.i_crit_edge.i124:                   ; preds = %101
  %.b2.i8.pre.pre.i123 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i128

; <label>:105                                     ; preds = %101
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i128

rs_read_int.exit.i128:                            ; preds = %105, %.rs_read.exit.i_crit_edge.i124
  %.b2.i8.pre.i125 = phi i1 [ %.b2.i8.pre.pre.i123, %.rs_read.exit.i_crit_edge.i124 ], [ true, %105 ]
  %106 = load i32* %input.i.i119, align 4, !tbaa !38
  %.b3.i9.pre.i126 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %102) #8
  %107 = bitcast i32* %input.i7.i118 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %107) #8
  store i32 0, i32* %input.i7.i118, align 4, !tbaa !38
  %or.cond.i10.i127 = or i1 %.b2.i8.pre.i125, %.b3.i9.pre.i126
  br i1 %or.cond.i10.i127, label %rs_read_int.exit17.i137, label %108

; <label>:108                                     ; preds = %rs_read_int.exit.i128
  %109 = call i64 @encread(i8* %107, i64 4, %struct.__sFILE* %inf) #8
  %110 = icmp eq i64 %109, 4
  br i1 %110, label %.rs_read.exit.i15_crit_edge.i130, label %111

.rs_read.exit.i15_crit_edge.i130:                 ; preds = %108
  %.b2.pre.pre.i129 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i133

; <label>:111                                     ; preds = %108
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i133

rs_read.exit.i15.i133:                            ; preds = %111, %.rs_read.exit.i15_crit_edge.i130
  %.b2.pre.i131 = phi i1 [ %.b2.pre.pre.i129, %.rs_read.exit.i15_crit_edge.i130 ], [ true, %111 ]
  %112 = load i32* %input.i7.i118, align 4, !tbaa !38
  %.b6.pre.i132 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i137

rs_read_int.exit17.i137:                          ; preds = %rs_read.exit.i15.i133, %rs_read_int.exit.i128
  %.b.i134 = phi i1 [ %.b2.pre.i131, %rs_read.exit.i15.i133 ], [ %.b2.i8.pre.i125, %rs_read_int.exit.i128 ]
  %.b5.i135 = phi i1 [ %.b6.pre.i132, %rs_read.exit.i15.i133 ], [ %.b3.i9.pre.i126, %rs_read_int.exit.i128 ]
  %113 = phi i32 [ %112, %rs_read.exit.i15.i133 ], [ undef, %rs_read_int.exit.i128 ]
  call void @llvm.lifetime.end(i64 4, i8* %107) #8
  %..b2.i136 = or i1 %.b5.i135, %.b.i134
  br i1 %..b2.i136, label %rs_read_coord.exit139, label %114

; <label>:114                                     ; preds = %rs_read_int.exit17.i137
  %115 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 2, i32 0
  store i32 %106, i32* %115, align 4, !tbaa !21
  %116 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 2, i32 1
  store i32 %113, i32* %116, align 4, !tbaa !20
  br label %rs_read_coord.exit139

rs_read_coord.exit139:                            ; preds = %114, %rs_read_int.exit17.i137, %rs_read_coord.exit117
  %.b4.i143 = phi i1 [ %.b4.i121, %rs_read_coord.exit117 ], [ %.b5.i135, %rs_read_int.exit17.i137 ], [ false, %114 ]
  %.b3.i142 = phi i1 [ %.b3.i120, %rs_read_coord.exit117 ], [ %.b.i134, %rs_read_int.exit17.i137 ], [ false, %114 ]
  %or.cond.i144 = or i1 %.b3.i142, %.b4.i143
  br i1 %or.cond.i144, label %rs_read_coord.exit161, label %117

; <label>:117                                     ; preds = %rs_read_coord.exit139
  %118 = bitcast i32* %input.i.i141 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %118) #8
  store i32 0, i32* %input.i.i141, align 4, !tbaa !38
  %119 = call i64 @encread(i8* %118, i64 4, %struct.__sFILE* %inf) #8
  %120 = icmp eq i64 %119, 4
  br i1 %120, label %.rs_read.exit.i_crit_edge.i146, label %121

.rs_read.exit.i_crit_edge.i146:                   ; preds = %117
  %.b2.i8.pre.pre.i145 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i150

; <label>:121                                     ; preds = %117
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i150

rs_read_int.exit.i150:                            ; preds = %121, %.rs_read.exit.i_crit_edge.i146
  %.b2.i8.pre.i147 = phi i1 [ %.b2.i8.pre.pre.i145, %.rs_read.exit.i_crit_edge.i146 ], [ true, %121 ]
  %122 = load i32* %input.i.i141, align 4, !tbaa !38
  %.b3.i9.pre.i148 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %118) #8
  %123 = bitcast i32* %input.i7.i140 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %123) #8
  store i32 0, i32* %input.i7.i140, align 4, !tbaa !38
  %or.cond.i10.i149 = or i1 %.b2.i8.pre.i147, %.b3.i9.pre.i148
  br i1 %or.cond.i10.i149, label %rs_read_int.exit17.i159, label %124

; <label>:124                                     ; preds = %rs_read_int.exit.i150
  %125 = call i64 @encread(i8* %123, i64 4, %struct.__sFILE* %inf) #8
  %126 = icmp eq i64 %125, 4
  br i1 %126, label %.rs_read.exit.i15_crit_edge.i152, label %127

.rs_read.exit.i15_crit_edge.i152:                 ; preds = %124
  %.b2.pre.pre.i151 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i155

; <label>:127                                     ; preds = %124
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i155

rs_read.exit.i15.i155:                            ; preds = %127, %.rs_read.exit.i15_crit_edge.i152
  %.b2.pre.i153 = phi i1 [ %.b2.pre.pre.i151, %.rs_read.exit.i15_crit_edge.i152 ], [ true, %127 ]
  %128 = load i32* %input.i7.i140, align 4, !tbaa !38
  %.b6.pre.i154 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i159

rs_read_int.exit17.i159:                          ; preds = %rs_read.exit.i15.i155, %rs_read_int.exit.i150
  %.b.i156 = phi i1 [ %.b2.pre.i153, %rs_read.exit.i15.i155 ], [ %.b2.i8.pre.i147, %rs_read_int.exit.i150 ]
  %.b5.i157 = phi i1 [ %.b6.pre.i154, %rs_read.exit.i15.i155 ], [ %.b3.i9.pre.i148, %rs_read_int.exit.i150 ]
  %129 = phi i32 [ %128, %rs_read.exit.i15.i155 ], [ undef, %rs_read_int.exit.i150 ]
  call void @llvm.lifetime.end(i64 4, i8* %123) #8
  %..b2.i158 = or i1 %.b5.i157, %.b.i156
  br i1 %..b2.i158, label %rs_read_coord.exit161, label %130

; <label>:130                                     ; preds = %rs_read_int.exit17.i159
  %131 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 3, i32 0
  store i32 %122, i32* %131, align 4, !tbaa !21
  %132 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 3, i32 1
  store i32 %129, i32* %132, align 4, !tbaa !20
  br label %rs_read_coord.exit161

rs_read_coord.exit161:                            ; preds = %130, %rs_read_int.exit17.i159, %rs_read_coord.exit139
  %.b4.i165 = phi i1 [ %.b4.i143, %rs_read_coord.exit139 ], [ %.b5.i157, %rs_read_int.exit17.i159 ], [ false, %130 ]
  %.b3.i164 = phi i1 [ %.b3.i142, %rs_read_coord.exit139 ], [ %.b.i156, %rs_read_int.exit17.i159 ], [ false, %130 ]
  %or.cond.i166 = or i1 %.b3.i164, %.b4.i165
  br i1 %or.cond.i166, label %rs_read_coord.exit183, label %133

; <label>:133                                     ; preds = %rs_read_coord.exit161
  %134 = bitcast i32* %input.i.i163 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #8
  store i32 0, i32* %input.i.i163, align 4, !tbaa !38
  %135 = call i64 @encread(i8* %134, i64 4, %struct.__sFILE* %inf) #8
  %136 = icmp eq i64 %135, 4
  br i1 %136, label %.rs_read.exit.i_crit_edge.i168, label %137

.rs_read.exit.i_crit_edge.i168:                   ; preds = %133
  %.b2.i8.pre.pre.i167 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i172

; <label>:137                                     ; preds = %133
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i172

rs_read_int.exit.i172:                            ; preds = %137, %.rs_read.exit.i_crit_edge.i168
  %.b2.i8.pre.i169 = phi i1 [ %.b2.i8.pre.pre.i167, %.rs_read.exit.i_crit_edge.i168 ], [ true, %137 ]
  %138 = load i32* %input.i.i163, align 4, !tbaa !38
  %.b3.i9.pre.i170 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %134) #8
  %139 = bitcast i32* %input.i7.i162 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %139) #8
  store i32 0, i32* %input.i7.i162, align 4, !tbaa !38
  %or.cond.i10.i171 = or i1 %.b2.i8.pre.i169, %.b3.i9.pre.i170
  br i1 %or.cond.i10.i171, label %rs_read_int.exit17.i181, label %140

; <label>:140                                     ; preds = %rs_read_int.exit.i172
  %141 = call i64 @encread(i8* %139, i64 4, %struct.__sFILE* %inf) #8
  %142 = icmp eq i64 %141, 4
  br i1 %142, label %.rs_read.exit.i15_crit_edge.i174, label %143

.rs_read.exit.i15_crit_edge.i174:                 ; preds = %140
  %.b2.pre.pre.i173 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i177

; <label>:143                                     ; preds = %140
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i177

rs_read.exit.i15.i177:                            ; preds = %143, %.rs_read.exit.i15_crit_edge.i174
  %.b2.pre.i175 = phi i1 [ %.b2.pre.pre.i173, %.rs_read.exit.i15_crit_edge.i174 ], [ true, %143 ]
  %144 = load i32* %input.i7.i162, align 4, !tbaa !38
  %.b6.pre.i176 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i181

rs_read_int.exit17.i181:                          ; preds = %rs_read.exit.i15.i177, %rs_read_int.exit.i172
  %.b.i178 = phi i1 [ %.b2.pre.i175, %rs_read.exit.i15.i177 ], [ %.b2.i8.pre.i169, %rs_read_int.exit.i172 ]
  %.b5.i179 = phi i1 [ %.b6.pre.i176, %rs_read.exit.i15.i177 ], [ %.b3.i9.pre.i170, %rs_read_int.exit.i172 ]
  %145 = phi i32 [ %144, %rs_read.exit.i15.i177 ], [ undef, %rs_read_int.exit.i172 ]
  call void @llvm.lifetime.end(i64 4, i8* %139) #8
  %..b2.i180 = or i1 %.b5.i179, %.b.i178
  br i1 %..b2.i180, label %rs_read_coord.exit183, label %146

; <label>:146                                     ; preds = %rs_read_int.exit17.i181
  %147 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 4, i32 0
  store i32 %138, i32* %147, align 4, !tbaa !21
  %148 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 4, i32 1
  store i32 %145, i32* %148, align 4, !tbaa !20
  br label %rs_read_coord.exit183

rs_read_coord.exit183:                            ; preds = %146, %rs_read_int.exit17.i181, %rs_read_coord.exit161
  %.b4.i187 = phi i1 [ %.b4.i165, %rs_read_coord.exit161 ], [ %.b5.i179, %rs_read_int.exit17.i181 ], [ false, %146 ]
  %.b3.i186 = phi i1 [ %.b3.i164, %rs_read_coord.exit161 ], [ %.b.i178, %rs_read_int.exit17.i181 ], [ false, %146 ]
  %or.cond.i188 = or i1 %.b3.i186, %.b4.i187
  br i1 %or.cond.i188, label %rs_read_coord.exit205, label %149

; <label>:149                                     ; preds = %rs_read_coord.exit183
  %150 = bitcast i32* %input.i.i185 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %150) #8
  store i32 0, i32* %input.i.i185, align 4, !tbaa !38
  %151 = call i64 @encread(i8* %150, i64 4, %struct.__sFILE* %inf) #8
  %152 = icmp eq i64 %151, 4
  br i1 %152, label %.rs_read.exit.i_crit_edge.i190, label %153

.rs_read.exit.i_crit_edge.i190:                   ; preds = %149
  %.b2.i8.pre.pre.i189 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i194

; <label>:153                                     ; preds = %149
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i194

rs_read_int.exit.i194:                            ; preds = %153, %.rs_read.exit.i_crit_edge.i190
  %.b2.i8.pre.i191 = phi i1 [ %.b2.i8.pre.pre.i189, %.rs_read.exit.i_crit_edge.i190 ], [ true, %153 ]
  %154 = load i32* %input.i.i185, align 4, !tbaa !38
  %.b3.i9.pre.i192 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %150) #8
  %155 = bitcast i32* %input.i7.i184 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %155) #8
  store i32 0, i32* %input.i7.i184, align 4, !tbaa !38
  %or.cond.i10.i193 = or i1 %.b2.i8.pre.i191, %.b3.i9.pre.i192
  br i1 %or.cond.i10.i193, label %rs_read_int.exit17.i203, label %156

; <label>:156                                     ; preds = %rs_read_int.exit.i194
  %157 = call i64 @encread(i8* %155, i64 4, %struct.__sFILE* %inf) #8
  %158 = icmp eq i64 %157, 4
  br i1 %158, label %.rs_read.exit.i15_crit_edge.i196, label %159

.rs_read.exit.i15_crit_edge.i196:                 ; preds = %156
  %.b2.pre.pre.i195 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i199

; <label>:159                                     ; preds = %156
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i199

rs_read.exit.i15.i199:                            ; preds = %159, %.rs_read.exit.i15_crit_edge.i196
  %.b2.pre.i197 = phi i1 [ %.b2.pre.pre.i195, %.rs_read.exit.i15_crit_edge.i196 ], [ true, %159 ]
  %160 = load i32* %input.i7.i184, align 4, !tbaa !38
  %.b6.pre.i198 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i203

rs_read_int.exit17.i203:                          ; preds = %rs_read.exit.i15.i199, %rs_read_int.exit.i194
  %.b.i200 = phi i1 [ %.b2.pre.i197, %rs_read.exit.i15.i199 ], [ %.b2.i8.pre.i191, %rs_read_int.exit.i194 ]
  %.b5.i201 = phi i1 [ %.b6.pre.i198, %rs_read.exit.i15.i199 ], [ %.b3.i9.pre.i192, %rs_read_int.exit.i194 ]
  %161 = phi i32 [ %160, %rs_read.exit.i15.i199 ], [ undef, %rs_read_int.exit.i194 ]
  call void @llvm.lifetime.end(i64 4, i8* %155) #8
  %..b2.i202 = or i1 %.b5.i201, %.b.i200
  br i1 %..b2.i202, label %rs_read_coord.exit205, label %162

; <label>:162                                     ; preds = %rs_read_int.exit17.i203
  %163 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 5, i32 0
  store i32 %154, i32* %163, align 4, !tbaa !21
  %164 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 5, i32 1
  store i32 %161, i32* %164, align 4, !tbaa !20
  br label %rs_read_coord.exit205

rs_read_coord.exit205:                            ; preds = %162, %rs_read_int.exit17.i203, %rs_read_coord.exit183
  %.b4.i209 = phi i1 [ %.b4.i187, %rs_read_coord.exit183 ], [ %.b5.i201, %rs_read_int.exit17.i203 ], [ false, %162 ]
  %.b3.i208 = phi i1 [ %.b3.i186, %rs_read_coord.exit183 ], [ %.b.i200, %rs_read_int.exit17.i203 ], [ false, %162 ]
  %or.cond.i210 = or i1 %.b3.i208, %.b4.i209
  br i1 %or.cond.i210, label %rs_read_coord.exit227, label %165

; <label>:165                                     ; preds = %rs_read_coord.exit205
  %166 = bitcast i32* %input.i.i207 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %166) #8
  store i32 0, i32* %input.i.i207, align 4, !tbaa !38
  %167 = call i64 @encread(i8* %166, i64 4, %struct.__sFILE* %inf) #8
  %168 = icmp eq i64 %167, 4
  br i1 %168, label %.rs_read.exit.i_crit_edge.i212, label %169

.rs_read.exit.i_crit_edge.i212:                   ; preds = %165
  %.b2.i8.pre.pre.i211 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i216

; <label>:169                                     ; preds = %165
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i216

rs_read_int.exit.i216:                            ; preds = %169, %.rs_read.exit.i_crit_edge.i212
  %.b2.i8.pre.i213 = phi i1 [ %.b2.i8.pre.pre.i211, %.rs_read.exit.i_crit_edge.i212 ], [ true, %169 ]
  %170 = load i32* %input.i.i207, align 4, !tbaa !38
  %.b3.i9.pre.i214 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %166) #8
  %171 = bitcast i32* %input.i7.i206 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %171) #8
  store i32 0, i32* %input.i7.i206, align 4, !tbaa !38
  %or.cond.i10.i215 = or i1 %.b2.i8.pre.i213, %.b3.i9.pre.i214
  br i1 %or.cond.i10.i215, label %rs_read_int.exit17.i225, label %172

; <label>:172                                     ; preds = %rs_read_int.exit.i216
  %173 = call i64 @encread(i8* %171, i64 4, %struct.__sFILE* %inf) #8
  %174 = icmp eq i64 %173, 4
  br i1 %174, label %.rs_read.exit.i15_crit_edge.i218, label %175

.rs_read.exit.i15_crit_edge.i218:                 ; preds = %172
  %.b2.pre.pre.i217 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i221

; <label>:175                                     ; preds = %172
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i221

rs_read.exit.i15.i221:                            ; preds = %175, %.rs_read.exit.i15_crit_edge.i218
  %.b2.pre.i219 = phi i1 [ %.b2.pre.pre.i217, %.rs_read.exit.i15_crit_edge.i218 ], [ true, %175 ]
  %176 = load i32* %input.i7.i206, align 4, !tbaa !38
  %.b6.pre.i220 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i225

rs_read_int.exit17.i225:                          ; preds = %rs_read.exit.i15.i221, %rs_read_int.exit.i216
  %.b.i222 = phi i1 [ %.b2.pre.i219, %rs_read.exit.i15.i221 ], [ %.b2.i8.pre.i213, %rs_read_int.exit.i216 ]
  %.b5.i223 = phi i1 [ %.b6.pre.i220, %rs_read.exit.i15.i221 ], [ %.b3.i9.pre.i214, %rs_read_int.exit.i216 ]
  %177 = phi i32 [ %176, %rs_read.exit.i15.i221 ], [ undef, %rs_read_int.exit.i216 ]
  call void @llvm.lifetime.end(i64 4, i8* %171) #8
  %..b2.i224 = or i1 %.b5.i223, %.b.i222
  br i1 %..b2.i224, label %rs_read_coord.exit227, label %178

; <label>:178                                     ; preds = %rs_read_int.exit17.i225
  %179 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 6, i32 0
  store i32 %170, i32* %179, align 4, !tbaa !21
  %180 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 6, i32 1
  store i32 %177, i32* %180, align 4, !tbaa !20
  br label %rs_read_coord.exit227

rs_read_coord.exit227:                            ; preds = %178, %rs_read_int.exit17.i225, %rs_read_coord.exit205
  %.b4.i231 = phi i1 [ %.b4.i209, %rs_read_coord.exit205 ], [ %.b5.i223, %rs_read_int.exit17.i225 ], [ false, %178 ]
  %.b3.i230 = phi i1 [ %.b3.i208, %rs_read_coord.exit205 ], [ %.b.i222, %rs_read_int.exit17.i225 ], [ false, %178 ]
  %or.cond.i232 = or i1 %.b3.i230, %.b4.i231
  br i1 %or.cond.i232, label %rs_read_coord.exit249, label %181

; <label>:181                                     ; preds = %rs_read_coord.exit227
  %182 = bitcast i32* %input.i.i229 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %182) #8
  store i32 0, i32* %input.i.i229, align 4, !tbaa !38
  %183 = call i64 @encread(i8* %182, i64 4, %struct.__sFILE* %inf) #8
  %184 = icmp eq i64 %183, 4
  br i1 %184, label %.rs_read.exit.i_crit_edge.i234, label %185

.rs_read.exit.i_crit_edge.i234:                   ; preds = %181
  %.b2.i8.pre.pre.i233 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i238

; <label>:185                                     ; preds = %181
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i238

rs_read_int.exit.i238:                            ; preds = %185, %.rs_read.exit.i_crit_edge.i234
  %.b2.i8.pre.i235 = phi i1 [ %.b2.i8.pre.pre.i233, %.rs_read.exit.i_crit_edge.i234 ], [ true, %185 ]
  %186 = load i32* %input.i.i229, align 4, !tbaa !38
  %.b3.i9.pre.i236 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %182) #8
  %187 = bitcast i32* %input.i7.i228 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %187) #8
  store i32 0, i32* %input.i7.i228, align 4, !tbaa !38
  %or.cond.i10.i237 = or i1 %.b2.i8.pre.i235, %.b3.i9.pre.i236
  br i1 %or.cond.i10.i237, label %rs_read_int.exit17.i247, label %188

; <label>:188                                     ; preds = %rs_read_int.exit.i238
  %189 = call i64 @encread(i8* %187, i64 4, %struct.__sFILE* %inf) #8
  %190 = icmp eq i64 %189, 4
  br i1 %190, label %.rs_read.exit.i15_crit_edge.i240, label %191

.rs_read.exit.i15_crit_edge.i240:                 ; preds = %188
  %.b2.pre.pre.i239 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i243

; <label>:191                                     ; preds = %188
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i243

rs_read.exit.i15.i243:                            ; preds = %191, %.rs_read.exit.i15_crit_edge.i240
  %.b2.pre.i241 = phi i1 [ %.b2.pre.pre.i239, %.rs_read.exit.i15_crit_edge.i240 ], [ true, %191 ]
  %192 = load i32* %input.i7.i228, align 4, !tbaa !38
  %.b6.pre.i242 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i247

rs_read_int.exit17.i247:                          ; preds = %rs_read.exit.i15.i243, %rs_read_int.exit.i238
  %.b.i244 = phi i1 [ %.b2.pre.i241, %rs_read.exit.i15.i243 ], [ %.b2.i8.pre.i235, %rs_read_int.exit.i238 ]
  %.b5.i245 = phi i1 [ %.b6.pre.i242, %rs_read.exit.i15.i243 ], [ %.b3.i9.pre.i236, %rs_read_int.exit.i238 ]
  %193 = phi i32 [ %192, %rs_read.exit.i15.i243 ], [ undef, %rs_read_int.exit.i238 ]
  call void @llvm.lifetime.end(i64 4, i8* %187) #8
  %..b2.i246 = or i1 %.b5.i245, %.b.i244
  br i1 %..b2.i246, label %rs_read_coord.exit249, label %194

; <label>:194                                     ; preds = %rs_read_int.exit17.i247
  %195 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 7, i32 0
  store i32 %186, i32* %195, align 4, !tbaa !21
  %196 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 7, i32 1
  store i32 %193, i32* %196, align 4, !tbaa !20
  br label %rs_read_coord.exit249

rs_read_coord.exit249:                            ; preds = %194, %rs_read_int.exit17.i247, %rs_read_coord.exit227
  %.b4.i253 = phi i1 [ %.b4.i231, %rs_read_coord.exit227 ], [ %.b5.i245, %rs_read_int.exit17.i247 ], [ false, %194 ]
  %.b3.i252 = phi i1 [ %.b3.i230, %rs_read_coord.exit227 ], [ %.b.i244, %rs_read_int.exit17.i247 ], [ false, %194 ]
  %or.cond.i254 = or i1 %.b3.i252, %.b4.i253
  br i1 %or.cond.i254, label %rs_read_coord.exit271, label %197

; <label>:197                                     ; preds = %rs_read_coord.exit249
  %198 = bitcast i32* %input.i.i251 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %198) #8
  store i32 0, i32* %input.i.i251, align 4, !tbaa !38
  %199 = call i64 @encread(i8* %198, i64 4, %struct.__sFILE* %inf) #8
  %200 = icmp eq i64 %199, 4
  br i1 %200, label %.rs_read.exit.i_crit_edge.i256, label %201

.rs_read.exit.i_crit_edge.i256:                   ; preds = %197
  %.b2.i8.pre.pre.i255 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i260

; <label>:201                                     ; preds = %197
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i260

rs_read_int.exit.i260:                            ; preds = %201, %.rs_read.exit.i_crit_edge.i256
  %.b2.i8.pre.i257 = phi i1 [ %.b2.i8.pre.pre.i255, %.rs_read.exit.i_crit_edge.i256 ], [ true, %201 ]
  %202 = load i32* %input.i.i251, align 4, !tbaa !38
  %.b3.i9.pre.i258 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %198) #8
  %203 = bitcast i32* %input.i7.i250 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %203) #8
  store i32 0, i32* %input.i7.i250, align 4, !tbaa !38
  %or.cond.i10.i259 = or i1 %.b2.i8.pre.i257, %.b3.i9.pre.i258
  br i1 %or.cond.i10.i259, label %rs_read_int.exit17.i269, label %204

; <label>:204                                     ; preds = %rs_read_int.exit.i260
  %205 = call i64 @encread(i8* %203, i64 4, %struct.__sFILE* %inf) #8
  %206 = icmp eq i64 %205, 4
  br i1 %206, label %.rs_read.exit.i15_crit_edge.i262, label %207

.rs_read.exit.i15_crit_edge.i262:                 ; preds = %204
  %.b2.pre.pre.i261 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i265

; <label>:207                                     ; preds = %204
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i265

rs_read.exit.i15.i265:                            ; preds = %207, %.rs_read.exit.i15_crit_edge.i262
  %.b2.pre.i263 = phi i1 [ %.b2.pre.pre.i261, %.rs_read.exit.i15_crit_edge.i262 ], [ true, %207 ]
  %208 = load i32* %input.i7.i250, align 4, !tbaa !38
  %.b6.pre.i264 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i269

rs_read_int.exit17.i269:                          ; preds = %rs_read.exit.i15.i265, %rs_read_int.exit.i260
  %.b.i266 = phi i1 [ %.b2.pre.i263, %rs_read.exit.i15.i265 ], [ %.b2.i8.pre.i257, %rs_read_int.exit.i260 ]
  %.b5.i267 = phi i1 [ %.b6.pre.i264, %rs_read.exit.i15.i265 ], [ %.b3.i9.pre.i258, %rs_read_int.exit.i260 ]
  %209 = phi i32 [ %208, %rs_read.exit.i15.i265 ], [ undef, %rs_read_int.exit.i260 ]
  call void @llvm.lifetime.end(i64 4, i8* %203) #8
  %..b2.i268 = or i1 %.b5.i267, %.b.i266
  br i1 %..b2.i268, label %rs_read_coord.exit271, label %210

; <label>:210                                     ; preds = %rs_read_int.exit17.i269
  %211 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 8, i32 0
  store i32 %202, i32* %211, align 4, !tbaa !21
  %212 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 8, i32 1
  store i32 %209, i32* %212, align 4, !tbaa !20
  br label %rs_read_coord.exit271

rs_read_coord.exit271:                            ; preds = %210, %rs_read_int.exit17.i269, %rs_read_coord.exit249
  %.b4.i275 = phi i1 [ %.b4.i253, %rs_read_coord.exit249 ], [ %.b5.i267, %rs_read_int.exit17.i269 ], [ false, %210 ]
  %.b3.i274 = phi i1 [ %.b3.i252, %rs_read_coord.exit249 ], [ %.b.i266, %rs_read_int.exit17.i269 ], [ false, %210 ]
  %or.cond.i276 = or i1 %.b3.i274, %.b4.i275
  br i1 %or.cond.i276, label %rs_read_coord.exit293, label %213

; <label>:213                                     ; preds = %rs_read_coord.exit271
  %214 = bitcast i32* %input.i.i273 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %214) #8
  store i32 0, i32* %input.i.i273, align 4, !tbaa !38
  %215 = call i64 @encread(i8* %214, i64 4, %struct.__sFILE* %inf) #8
  %216 = icmp eq i64 %215, 4
  br i1 %216, label %.rs_read.exit.i_crit_edge.i278, label %217

.rs_read.exit.i_crit_edge.i278:                   ; preds = %213
  %.b2.i8.pre.pre.i277 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i282

; <label>:217                                     ; preds = %213
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i282

rs_read_int.exit.i282:                            ; preds = %217, %.rs_read.exit.i_crit_edge.i278
  %.b2.i8.pre.i279 = phi i1 [ %.b2.i8.pre.pre.i277, %.rs_read.exit.i_crit_edge.i278 ], [ true, %217 ]
  %218 = load i32* %input.i.i273, align 4, !tbaa !38
  %.b3.i9.pre.i280 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %214) #8
  %219 = bitcast i32* %input.i7.i272 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %219) #8
  store i32 0, i32* %input.i7.i272, align 4, !tbaa !38
  %or.cond.i10.i281 = or i1 %.b2.i8.pre.i279, %.b3.i9.pre.i280
  br i1 %or.cond.i10.i281, label %rs_read_int.exit17.i291, label %220

; <label>:220                                     ; preds = %rs_read_int.exit.i282
  %221 = call i64 @encread(i8* %219, i64 4, %struct.__sFILE* %inf) #8
  %222 = icmp eq i64 %221, 4
  br i1 %222, label %.rs_read.exit.i15_crit_edge.i284, label %223

.rs_read.exit.i15_crit_edge.i284:                 ; preds = %220
  %.b2.pre.pre.i283 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i287

; <label>:223                                     ; preds = %220
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i287

rs_read.exit.i15.i287:                            ; preds = %223, %.rs_read.exit.i15_crit_edge.i284
  %.b2.pre.i285 = phi i1 [ %.b2.pre.pre.i283, %.rs_read.exit.i15_crit_edge.i284 ], [ true, %223 ]
  %224 = load i32* %input.i7.i272, align 4, !tbaa !38
  %.b6.pre.i286 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i291

rs_read_int.exit17.i291:                          ; preds = %rs_read.exit.i15.i287, %rs_read_int.exit.i282
  %.b.i288 = phi i1 [ %.b2.pre.i285, %rs_read.exit.i15.i287 ], [ %.b2.i8.pre.i279, %rs_read_int.exit.i282 ]
  %.b5.i289 = phi i1 [ %.b6.pre.i286, %rs_read.exit.i15.i287 ], [ %.b3.i9.pre.i280, %rs_read_int.exit.i282 ]
  %225 = phi i32 [ %224, %rs_read.exit.i15.i287 ], [ undef, %rs_read_int.exit.i282 ]
  call void @llvm.lifetime.end(i64 4, i8* %219) #8
  %..b2.i290 = or i1 %.b5.i289, %.b.i288
  br i1 %..b2.i290, label %rs_read_coord.exit293, label %226

; <label>:226                                     ; preds = %rs_read_int.exit17.i291
  %227 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 9, i32 0
  store i32 %218, i32* %227, align 4, !tbaa !21
  %228 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 9, i32 1
  store i32 %225, i32* %228, align 4, !tbaa !20
  br label %rs_read_coord.exit293

rs_read_coord.exit293:                            ; preds = %226, %rs_read_int.exit17.i291, %rs_read_coord.exit271
  %.b4.i297 = phi i1 [ %.b4.i275, %rs_read_coord.exit271 ], [ %.b5.i289, %rs_read_int.exit17.i291 ], [ false, %226 ]
  %.b3.i296 = phi i1 [ %.b3.i274, %rs_read_coord.exit271 ], [ %.b.i288, %rs_read_int.exit17.i291 ], [ false, %226 ]
  %or.cond.i298 = or i1 %.b3.i296, %.b4.i297
  br i1 %or.cond.i298, label %rs_read_coord.exit315, label %229

; <label>:229                                     ; preds = %rs_read_coord.exit293
  %230 = bitcast i32* %input.i.i295 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %230) #8
  store i32 0, i32* %input.i.i295, align 4, !tbaa !38
  %231 = call i64 @encread(i8* %230, i64 4, %struct.__sFILE* %inf) #8
  %232 = icmp eq i64 %231, 4
  br i1 %232, label %.rs_read.exit.i_crit_edge.i300, label %233

.rs_read.exit.i_crit_edge.i300:                   ; preds = %229
  %.b2.i8.pre.pre.i299 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i304

; <label>:233                                     ; preds = %229
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i304

rs_read_int.exit.i304:                            ; preds = %233, %.rs_read.exit.i_crit_edge.i300
  %.b2.i8.pre.i301 = phi i1 [ %.b2.i8.pre.pre.i299, %.rs_read.exit.i_crit_edge.i300 ], [ true, %233 ]
  %234 = load i32* %input.i.i295, align 4, !tbaa !38
  %.b3.i9.pre.i302 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %230) #8
  %235 = bitcast i32* %input.i7.i294 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %235) #8
  store i32 0, i32* %input.i7.i294, align 4, !tbaa !38
  %or.cond.i10.i303 = or i1 %.b2.i8.pre.i301, %.b3.i9.pre.i302
  br i1 %or.cond.i10.i303, label %rs_read_int.exit17.i313, label %236

; <label>:236                                     ; preds = %rs_read_int.exit.i304
  %237 = call i64 @encread(i8* %235, i64 4, %struct.__sFILE* %inf) #8
  %238 = icmp eq i64 %237, 4
  br i1 %238, label %.rs_read.exit.i15_crit_edge.i306, label %239

.rs_read.exit.i15_crit_edge.i306:                 ; preds = %236
  %.b2.pre.pre.i305 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i309

; <label>:239                                     ; preds = %236
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i309

rs_read.exit.i15.i309:                            ; preds = %239, %.rs_read.exit.i15_crit_edge.i306
  %.b2.pre.i307 = phi i1 [ %.b2.pre.pre.i305, %.rs_read.exit.i15_crit_edge.i306 ], [ true, %239 ]
  %240 = load i32* %input.i7.i294, align 4, !tbaa !38
  %.b6.pre.i308 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i313

rs_read_int.exit17.i313:                          ; preds = %rs_read.exit.i15.i309, %rs_read_int.exit.i304
  %.b.i310 = phi i1 [ %.b2.pre.i307, %rs_read.exit.i15.i309 ], [ %.b2.i8.pre.i301, %rs_read_int.exit.i304 ]
  %.b5.i311 = phi i1 [ %.b6.pre.i308, %rs_read.exit.i15.i309 ], [ %.b3.i9.pre.i302, %rs_read_int.exit.i304 ]
  %241 = phi i32 [ %240, %rs_read.exit.i15.i309 ], [ undef, %rs_read_int.exit.i304 ]
  call void @llvm.lifetime.end(i64 4, i8* %235) #8
  %..b2.i312 = or i1 %.b5.i311, %.b.i310
  br i1 %..b2.i312, label %rs_read_coord.exit315, label %242

; <label>:242                                     ; preds = %rs_read_int.exit17.i313
  %243 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 10, i32 0
  store i32 %234, i32* %243, align 4, !tbaa !21
  %244 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 10, i32 1
  store i32 %241, i32* %244, align 4, !tbaa !20
  br label %rs_read_coord.exit315

rs_read_coord.exit315:                            ; preds = %242, %rs_read_int.exit17.i313, %rs_read_coord.exit293
  %.b4.i319 = phi i1 [ %.b4.i297, %rs_read_coord.exit293 ], [ %.b5.i311, %rs_read_int.exit17.i313 ], [ false, %242 ]
  %.b3.i318 = phi i1 [ %.b3.i296, %rs_read_coord.exit293 ], [ %.b.i310, %rs_read_int.exit17.i313 ], [ false, %242 ]
  %or.cond.i320 = or i1 %.b3.i318, %.b4.i319
  br i1 %or.cond.i320, label %rs_read_coord.exit337, label %245

; <label>:245                                     ; preds = %rs_read_coord.exit315
  %246 = bitcast i32* %input.i.i317 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %246) #8
  store i32 0, i32* %input.i.i317, align 4, !tbaa !38
  %247 = call i64 @encread(i8* %246, i64 4, %struct.__sFILE* %inf) #8
  %248 = icmp eq i64 %247, 4
  br i1 %248, label %.rs_read.exit.i_crit_edge.i322, label %249

.rs_read.exit.i_crit_edge.i322:                   ; preds = %245
  %.b2.i8.pre.pre.i321 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i326

; <label>:249                                     ; preds = %245
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i326

rs_read_int.exit.i326:                            ; preds = %249, %.rs_read.exit.i_crit_edge.i322
  %.b2.i8.pre.i323 = phi i1 [ %.b2.i8.pre.pre.i321, %.rs_read.exit.i_crit_edge.i322 ], [ true, %249 ]
  %250 = load i32* %input.i.i317, align 4, !tbaa !38
  %.b3.i9.pre.i324 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %246) #8
  %251 = bitcast i32* %input.i7.i316 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %251) #8
  store i32 0, i32* %input.i7.i316, align 4, !tbaa !38
  %or.cond.i10.i325 = or i1 %.b2.i8.pre.i323, %.b3.i9.pre.i324
  br i1 %or.cond.i10.i325, label %rs_read_int.exit17.i335, label %252

; <label>:252                                     ; preds = %rs_read_int.exit.i326
  %253 = call i64 @encread(i8* %251, i64 4, %struct.__sFILE* %inf) #8
  %254 = icmp eq i64 %253, 4
  br i1 %254, label %.rs_read.exit.i15_crit_edge.i328, label %255

.rs_read.exit.i15_crit_edge.i328:                 ; preds = %252
  %.b2.pre.pre.i327 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i331

; <label>:255                                     ; preds = %252
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i331

rs_read.exit.i15.i331:                            ; preds = %255, %.rs_read.exit.i15_crit_edge.i328
  %.b2.pre.i329 = phi i1 [ %.b2.pre.pre.i327, %.rs_read.exit.i15_crit_edge.i328 ], [ true, %255 ]
  %256 = load i32* %input.i7.i316, align 4, !tbaa !38
  %.b6.pre.i330 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i335

rs_read_int.exit17.i335:                          ; preds = %rs_read.exit.i15.i331, %rs_read_int.exit.i326
  %.b.i332 = phi i1 [ %.b2.pre.i329, %rs_read.exit.i15.i331 ], [ %.b2.i8.pre.i323, %rs_read_int.exit.i326 ]
  %.b5.i333 = phi i1 [ %.b6.pre.i330, %rs_read.exit.i15.i331 ], [ %.b3.i9.pre.i324, %rs_read_int.exit.i326 ]
  %257 = phi i32 [ %256, %rs_read.exit.i15.i331 ], [ undef, %rs_read_int.exit.i326 ]
  call void @llvm.lifetime.end(i64 4, i8* %251) #8
  %..b2.i334 = or i1 %.b5.i333, %.b.i332
  br i1 %..b2.i334, label %rs_read_coord.exit337, label %258

; <label>:258                                     ; preds = %rs_read_int.exit17.i335
  %259 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 11, i32 0
  store i32 %250, i32* %259, align 4, !tbaa !21
  %260 = getelementptr inbounds %struct.room* %r, i64 0, i32 6, i64 11, i32 1
  store i32 %257, i32* %260, align 4, !tbaa !20
  br label %rs_read_coord.exit337

rs_read_coord.exit337:                            ; preds = %258, %rs_read_int.exit17.i335, %rs_read_coord.exit315
  %.b = phi i1 [ %.b3.i318, %rs_read_coord.exit315 ], [ %.b.i332, %rs_read_int.exit17.i335 ], [ false, %258 ]
  %.b4 = phi i1 [ %.b4.i319, %rs_read_coord.exit315 ], [ %.b5.i333, %rs_read_int.exit17.i335 ], [ false, %258 ]
  %..b = or i1 %.b4, %.b
  br label %261

; <label>:261                                     ; preds = %rs_read_coord.exit337, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_coord.exit337 ], [ true, %0 ]
  %262 = zext i1 %..b2.sink to i32
  ret i32 %262
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_rooms(%struct.__sFILE* %savef, %struct.room* nocapture readonly %r, i32 %count) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %10, label %2

; <label>:2                                       ; preds = %0
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %3) #8
  store i32 %count, i32* %1, align 4, !tbaa !38
  %4 = call i64 @encwrite(i8* %3, i64 4, %struct.__sFILE* %savef) #8
  %5 = icmp eq i64 %4, 4
  br i1 %5, label %rs_write_int.exit.preheader, label %6

; <label>:6                                       ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %6, %2
  %7 = icmp sgt i32 %count, 0
  br i1 %7, label %rs_write_int.exit, label %rs_write_int.exit._crit_edge

rs_write_int.exit:                                ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %rs_write_int.exit ], [ 0, %rs_write_int.exit.preheader ]
  %8 = getelementptr inbounds %struct.room* %r, i64 %indvars.iv
  %9 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* %8)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %rs_write_int.exit._crit_edge, label %rs_write_int.exit

rs_write_int.exit._crit_edge:                     ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %.b = load i1* @write_error, align 1
  br label %10

; <label>:10                                      ; preds = %rs_write_int.exit._crit_edge, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit._crit_edge ], [ true, %0 ]
  %11 = zext i1 %.b1.sink to i32
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_rooms(%struct.__sFILE* %inf, %struct.room* nocapture %r, i32 %count) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %12, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp sgt i32 %6, %count
  br i1 %7, label %8, label %.preheader

; <label>:8                                       ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %8, %rs_read_int.exit
  %9 = icmp sgt i32 %6, 0
  br i1 %9, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %10 = getelementptr inbounds %struct.room* %r, i64 %indvars.iv
  %11 = call i32 @rs_read_room(%struct.__sFILE* %inf, %struct.room* %10)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %6
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %12

; <label>:12                                      ; preds = %._crit_edge, %0
  %..b2.sink = phi i1 [ %..b, %._crit_edge ], [ true, %0 ]
  %13 = zext i1 %..b2.sink to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_room_reference(%struct.__sFILE* %savef, %struct.room* readnone %rp) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write_int.exit, label %2

; <label>:2                                       ; preds = %0
  %not. = icmp ne %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0)
  %i.0.room.0 = sext i1 %not. to i32
  %3 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 1)
  %i.0.room.0.1 = select i1 %3, i32 1, i32 %i.0.room.0
  %4 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 2)
  %i.0.room.0.2 = select i1 %4, i32 2, i32 %i.0.room.0.1
  %5 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 3)
  %i.0.room.0.3 = select i1 %5, i32 3, i32 %i.0.room.0.2
  %6 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 4)
  %i.0.room.0.4 = select i1 %6, i32 4, i32 %i.0.room.0.3
  %7 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 5)
  %i.0.room.0.5 = select i1 %7, i32 5, i32 %i.0.room.0.4
  %8 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 6)
  %i.0.room.0.6 = select i1 %8, i32 6, i32 %i.0.room.0.5
  %9 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 7)
  %i.0.room.0.7 = select i1 %9, i32 7, i32 %i.0.room.0.6
  %10 = icmp eq %struct.room* %rp, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 8)
  %i.0.room.0.8 = select i1 %10, i32 8, i32 %i.0.room.0.7
  %11 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #8
  store i32 %i.0.room.0.8, i32* %1, align 4, !tbaa !38
  %12 = call i64 @encwrite(i8* %11, i64 4, %struct.__sFILE* %savef) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %.rs_write_int.exit_crit_edge, label %14

.rs_write_int.exit_crit_edge:                     ; preds = %2
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:14                                      ; preds = %2
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %14, %.rs_write_int.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write_int.exit_crit_edge ], [ true, %14 ]
  %15 = zext i1 %.b1.sink to i32
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_room_reference(%struct.__sFILE* %inf, %struct.room** nocapture %rp) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %8, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit.i_crit_edge, label %5

.rs_read.exit.i_crit_edge:                        ; preds = %1
  %.b.pre.pre = load i1* @read_error, align 1
  br label %rs_read_int.exit

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %.rs_read.exit.i_crit_edge
  %.b.pre = phi i1 [ %.b.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %5 ]
  %6 = load i32* %input.i, align 4, !tbaa !38
  %phitmp = sext i32 %6 to i64
  %.b4.pre = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %phitmp
  store %struct.room* %7, %struct.room** %rp, align 8, !tbaa !1
  %..b = or i1 %.b4.pre, %.b.pre
  br label %8

; <label>:8                                       ; preds = %rs_read_int.exit, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_int.exit ], [ true, %0 ]
  %9 = zext i1 %..b2.sink to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_monsters(%struct.__sFILE* %savef, %struct.monster* %m, i32 %count) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %16, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 -1412628469, i32* %2, align 4, !tbaa !38
  %5 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %rs_write_marker.exit, label %rs_write_marker.exit.thread

rs_write_marker.exit.thread:                      ; preds = %3
  store i1 true, i1* @write_error, align 1
  %7 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %7) #8
  store i32 %count, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit.preheader

rs_write_marker.exit:                             ; preds = %3
  %.b1.i2.pre = load i1* @write_error, align 1
  %8 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %8) #8
  store i32 %count, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i2.pre, label %rs_write_int.exit.preheader, label %9

; <label>:9                                       ; preds = %rs_write_marker.exit
  %10 = call i64 @encwrite(i8* %8, i64 4, %struct.__sFILE* %savef) #8
  %11 = icmp eq i64 %10, 4
  br i1 %11, label %rs_write_int.exit.preheader, label %12

; <label>:12                                      ; preds = %9
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %12, %9, %rs_write_marker.exit, %rs_write_marker.exit.thread
  %13 = icmp sgt i32 %count, 0
  br i1 %13, label %rs_write_int.exit, label %rs_write_int.exit._crit_edge

rs_write_int.exit:                                ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %rs_write_int.exit ], [ 0, %rs_write_int.exit.preheader ]
  %14 = getelementptr inbounds %struct.monster* %m, i64 %indvars.iv, i32 3
  %15 = call i32 @rs_write_stats(%struct.__sFILE* %savef, %struct.stats* %14)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %rs_write_int.exit._crit_edge, label %rs_write_int.exit

rs_write_int.exit._crit_edge:                     ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %.b = load i1* @write_error, align 1
  br label %16

; <label>:16                                      ; preds = %rs_write_int.exit._crit_edge, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit._crit_edge ], [ true, %0 ]
  %17 = zext i1 %.b1.sink to i32
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_monsters(%struct.__sFILE* %inf, %struct.monster* %m, i32 %count) #0 {
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %23, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i5 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i5
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628469
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_marker.exit.thread

rs_read_marker.exit.thread:                       ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i7 = or i1 %.b2.i5, %.b4.i.i
  br i1 %or.cond.i7, label %rs_read_int.exit, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_read.exit.i, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %14, %11
  %15 = load i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %rs_read_marker.exit, %rs_read_marker.exit.thread
  %16 = phi i8* [ %10, %rs_read.exit.i ], [ %10, %rs_read_marker.exit ], [ %9, %rs_read_marker.exit.thread ]
  %17 = phi i32 [ %15, %rs_read.exit.i ], [ 0, %rs_read_marker.exit ], [ 0, %rs_read_marker.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %16) #8
  %18 = icmp eq i32 %17, %count
  br i1 %18, label %.preheader, label %19

; <label>:19                                      ; preds = %rs_read_int.exit
  store i1 true, i1* @format_error, align 1
  br label %.preheader

.preheader:                                       ; preds = %19, %rs_read_int.exit
  %20 = icmp sgt i32 %count, 0
  br i1 %20, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %21 = getelementptr inbounds %struct.monster* %m, i64 %indvars.iv, i32 3
  %22 = call i32 @rs_read_stats(%struct.__sFILE* %inf, %struct.stats* %21)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %23

; <label>:23                                      ; preds = %._crit_edge, %0
  %..b2.sink = phi i1 [ %..b, %._crit_edge ], [ true, %0 ]
  %24 = zext i1 %..b2.sink to i32
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_object(%struct.__sFILE* %savef, %union.thing* %o) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %151, label %16

; <label>:16                                      ; preds = %0
  %17 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %17) #8
  store i32 -1412628477, i32* %15, align 4, !tbaa !38
  %18 = call i64 @encwrite(i8* %17, i64 4, %struct.__sFILE* %savef) #8
  %19 = icmp eq i64 %18, 4
  br i1 %19, label %rs_write_marker.exit, label %rs_write_marker.exit.thread

rs_write_marker.exit.thread:                      ; preds = %16
  store i1 true, i1* @write_error, align 1
  %20 = bitcast %union.thing* %o to %struct.anon.0*
  %21 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 2, i32 0
  %22 = load i32* %21, align 4, !tbaa !8
  %23 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %23) #8
  store i32 %22, i32* %14, align 4, !tbaa !38
  br label %rs_write_int.exit.thread

rs_write_marker.exit:                             ; preds = %16
  %.b1.i2.pre = load i1* @write_error, align 1
  %24 = bitcast %union.thing* %o to %struct.anon.0*
  %25 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 2, i32 0
  %26 = load i32* %25, align 4, !tbaa !8
  %27 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #8
  store i32 %26, i32* %14, align 4, !tbaa !38
  br i1 %.b1.i2.pre, label %rs_write_int.exit.thread, label %28

; <label>:28                                      ; preds = %rs_write_marker.exit
  %29 = call i64 @encwrite(i8* %27, i64 4, %struct.__sFILE* %savef) #8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %rs_write_int.exit, label %31

; <label>:31                                      ; preds = %28
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.thread

rs_write_int.exit.thread:                         ; preds = %31, %rs_write_marker.exit, %rs_write_marker.exit.thread
  %.ph = phi i8* [ %27, %rs_write_marker.exit ], [ %27, %31 ], [ %23, %rs_write_marker.exit.thread ]
  %.ph81 = phi %struct.anon.0* [ %24, %rs_write_marker.exit ], [ %24, %31 ], [ %20, %rs_write_marker.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph) #8
  br label %rs_write_coord.exit.thread

rs_write_int.exit:                                ; preds = %28
  %.b1.i5.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %27) #8
  %32 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 2, i32 1
  %33 = bitcast i32* %32 to i64*
  %34 = load i64* %33, align 1
  br i1 %.b1.i5.pre, label %rs_write_coord.exit.thread, label %35

; <label>:35                                      ; preds = %rs_write_int.exit
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = trunc i64 %34 to i32
  %39 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %39) #8
  store i32 %38, i32* %13, align 4, !tbaa !38
  %40 = call i64 @encwrite(i8* %39, i64 4, %struct.__sFILE* %savef) #8
  %41 = icmp eq i64 %40, 4
  br i1 %41, label %rs_write_int.exit.i, label %rs_write_int.exit.thread.i

rs_write_int.exit.thread.i:                       ; preds = %35
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %39) #8
  %42 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %42) #8
  store i32 %37, i32* %12, align 4, !tbaa !38
  br label %rs_write_coord.exit

rs_write_int.exit.i:                              ; preds = %35
  %.b1.i2.pre.i = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %39) #8
  %43 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #8
  store i32 %37, i32* %12, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i, label %rs_write_coord.exit, label %44

; <label>:44                                      ; preds = %rs_write_int.exit.i
  %45 = call i64 @encwrite(i8* %43, i64 4, %struct.__sFILE* %savef) #8
  %46 = icmp eq i64 %45, 4
  br i1 %46, label %.rs_write_int.exit6.i_crit_edge, label %47

.rs_write_int.exit6.i_crit_edge:                  ; preds = %44
  %.b1.i8.pre.pre = load i1* @write_error, align 1
  br label %rs_write_coord.exit

; <label>:47                                      ; preds = %44
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit

rs_write_coord.exit.thread:                       ; preds = %rs_write_int.exit, %rs_write_int.exit.thread
  %.ph82 = phi %struct.anon.0* [ %24, %rs_write_int.exit ], [ %.ph81, %rs_write_int.exit.thread ]
  %48 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 8
  %49 = bitcast i16* %48 to i32*
  %50 = load i32* %49, align 4, !tbaa !71
  %51 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %51) #8
  store i32 %50, i32* %11, align 4, !tbaa !38
  br label %rs_write_int.exit12

rs_write_coord.exit:                              ; preds = %47, %.rs_write_int.exit6.i_crit_edge, %rs_write_int.exit.i, %rs_write_int.exit.thread.i
  %.b1.i8.pre = phi i1 [ true, %rs_write_int.exit.i ], [ true, %47 ], [ true, %rs_write_int.exit.thread.i ], [ %.b1.i8.pre.pre, %.rs_write_int.exit6.i_crit_edge ]
  %52 = phi i8* [ %43, %rs_write_int.exit.i ], [ %43, %47 ], [ %42, %rs_write_int.exit.thread.i ], [ %43, %.rs_write_int.exit6.i_crit_edge ]
  call void @llvm.lifetime.end(i64 4, i8* %52) #8
  %53 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 8
  %54 = bitcast i16* %53 to i32*
  %55 = load i32* %54, align 4, !tbaa !71
  %56 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %56) #8
  store i32 %55, i32* %11, align 4, !tbaa !38
  br i1 %.b1.i8.pre, label %rs_write_int.exit12, label %57

; <label>:57                                      ; preds = %rs_write_coord.exit
  %58 = call i64 @encwrite(i8* %56, i64 4, %struct.__sFILE* %savef) #8
  %59 = icmp eq i64 %58, 4
  br i1 %59, label %.rs_write_int.exit12_crit_edge, label %60

.rs_write_int.exit12_crit_edge:                   ; preds = %57
  %.b1.i13.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit12

; <label>:60                                      ; preds = %57
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit12

rs_write_int.exit12:                              ; preds = %60, %.rs_write_int.exit12_crit_edge, %rs_write_coord.exit, %rs_write_coord.exit.thread
  %61 = phi i8* [ %56, %.rs_write_int.exit12_crit_edge ], [ %56, %rs_write_coord.exit ], [ %56, %60 ], [ %51, %rs_write_coord.exit.thread ]
  %62 = phi %struct.anon.0* [ %24, %.rs_write_int.exit12_crit_edge ], [ %24, %rs_write_coord.exit ], [ %24, %60 ], [ %.ph82, %rs_write_coord.exit.thread ]
  %.b1.i13 = phi i1 [ %.b1.i13.pre, %.rs_write_int.exit12_crit_edge ], [ true, %rs_write_coord.exit ], [ true, %60 ], [ true, %rs_write_coord.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %61) #8
  %63 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9
  %64 = bitcast %struct.stats* %63 to i8*
  %65 = load i8* %64, align 1, !tbaa !13
  call void @llvm.lifetime.start(i64 1, i8* %10) #8
  store i8 %65, i8* %10, align 1, !tbaa !28
  br i1 %.b1.i13, label %rs_write_chars.exit31.thread, label %66

; <label>:66                                      ; preds = %rs_write_int.exit12
  %67 = call i64 @encwrite(i8* %10, i64 1, %struct.__sFILE* %savef) #8
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %rs_write_char.exit, label %69

; <label>:69                                      ; preds = %66
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit31.thread

rs_write_char.exit:                               ; preds = %66
  %.b1.i17.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %10) #8
  %70 = getelementptr inbounds %struct.anon.0* %62, i64 0, i32 7, i64 0
  br i1 %.b1.i17.pre, label %rs_write_chars.exit31.thread, label %71

; <label>:71                                      ; preds = %rs_write_char.exit
  %72 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %72) #8
  store i32 8, i32* %9, align 4, !tbaa !38
  %73 = call i64 @encwrite(i8* %72, i64 4, %struct.__sFILE* %savef) #8
  %74 = icmp eq i64 %73, 4
  br i1 %74, label %rs_write_int.exit.i20, label %rs_write_int.exit.thread.i18

rs_write_int.exit.thread.i18:                     ; preds = %71
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %72) #8
  br label %rs_write_chars.exit31.thread

rs_write_int.exit.i20:                            ; preds = %71
  %.b1.i2.pre.i19 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %72) #8
  br i1 %.b1.i2.pre.i19, label %rs_write_chars.exit31.thread, label %75

; <label>:75                                      ; preds = %rs_write_int.exit.i20
  %76 = call i64 @encwrite(i8* %70, i64 8, %struct.__sFILE* %savef) #8
  %77 = icmp eq i64 %76, 8
  br i1 %77, label %rs_write_chars.exit, label %78

; <label>:78                                      ; preds = %75
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit31.thread

rs_write_chars.exit:                              ; preds = %75
  %.b.pre.i21 = load i1* @write_error, align 1
  br i1 %.b.pre.i21, label %rs_write_chars.exit31.thread, label %79

; <label>:79                                      ; preds = %rs_write_chars.exit
  %80 = getelementptr inbounds %struct.anon.0* %62, i64 0, i32 8, i64 0
  %81 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %81) #8
  store i32 8, i32* %8, align 4, !tbaa !38
  %82 = call i64 @encwrite(i8* %81, i64 4, %struct.__sFILE* %savef) #8
  %83 = icmp eq i64 %82, 4
  br i1 %83, label %rs_write_int.exit.i27, label %rs_write_int.exit.thread.i25

rs_write_int.exit.thread.i25:                     ; preds = %79
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %81) #8
  br label %rs_write_chars.exit31.thread

rs_write_int.exit.i27:                            ; preds = %79
  %.b1.i2.pre.i26 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %81) #8
  br i1 %.b1.i2.pre.i26, label %rs_write_chars.exit31.thread, label %84

; <label>:84                                      ; preds = %rs_write_int.exit.i27
  %85 = call i64 @encwrite(i8* %80, i64 8, %struct.__sFILE* %savef) #8
  %86 = icmp eq i64 %85, 8
  br i1 %86, label %rs_write_chars.exit31, label %87

; <label>:87                                      ; preds = %84
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit31.thread

rs_write_chars.exit31.thread:                     ; preds = %87, %rs_write_int.exit.i27, %rs_write_int.exit.thread.i25, %rs_write_chars.exit, %78, %rs_write_int.exit.i20, %rs_write_int.exit.thread.i18, %rs_write_char.exit, %69, %rs_write_int.exit12
  %88 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5
  %89 = bitcast [13 x i8]* %88 to i32*
  %90 = load i32* %89, align 4, !tbaa !78
  %91 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %91) #8
  store i32 %90, i32* %7, align 4, !tbaa !38
  br label %rs_write_int.exit36

rs_write_chars.exit31:                            ; preds = %84
  %.b1.i32.pre = load i1* @write_error, align 1
  %92 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5
  %93 = bitcast [13 x i8]* %92 to i32*
  %94 = load i32* %93, align 4, !tbaa !78
  %95 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %95) #8
  store i32 %94, i32* %7, align 4, !tbaa !38
  br i1 %.b1.i32.pre, label %rs_write_int.exit36, label %96

; <label>:96                                      ; preds = %rs_write_chars.exit31
  %97 = call i64 @encwrite(i8* %95, i64 4, %struct.__sFILE* %savef) #8
  %98 = icmp eq i64 %97, 4
  br i1 %98, label %.rs_write_int.exit36_crit_edge, label %99

.rs_write_int.exit36_crit_edge:                   ; preds = %96
  %.b1.i37.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit36

; <label>:99                                      ; preds = %96
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit36

rs_write_int.exit36:                              ; preds = %99, %.rs_write_int.exit36_crit_edge, %rs_write_chars.exit31, %rs_write_chars.exit31.thread
  %100 = phi i8* [ %95, %.rs_write_int.exit36_crit_edge ], [ %95, %rs_write_chars.exit31 ], [ %95, %99 ], [ %91, %rs_write_chars.exit31.thread ]
  %.b1.i37 = phi i1 [ %.b1.i37.pre, %.rs_write_int.exit36_crit_edge ], [ true, %rs_write_chars.exit31 ], [ true, %99 ], [ true, %rs_write_chars.exit31.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %100) #8
  %101 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5, i64 4
  %102 = bitcast i8* %101 to i32*
  %103 = load i32* %102, align 4, !tbaa !50
  %104 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %104) #8
  store i32 %103, i32* %6, align 4, !tbaa !38
  br i1 %.b1.i37, label %rs_write_int.exit41, label %105

; <label>:105                                     ; preds = %rs_write_int.exit36
  %106 = call i64 @encwrite(i8* %104, i64 4, %struct.__sFILE* %savef) #8
  %107 = icmp eq i64 %106, 4
  br i1 %107, label %.rs_write_int.exit41_crit_edge, label %108

.rs_write_int.exit41_crit_edge:                   ; preds = %105
  %.b1.i42.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit41

; <label>:108                                     ; preds = %105
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

rs_write_int.exit41:                              ; preds = %108, %.rs_write_int.exit41_crit_edge, %rs_write_int.exit36
  %.b1.i42 = phi i1 [ %.b1.i42.pre, %.rs_write_int.exit41_crit_edge ], [ true, %rs_write_int.exit36 ], [ true, %108 ]
  call void @llvm.lifetime.end(i64 4, i8* %104) #8
  %109 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5, i64 8
  %110 = bitcast i8* %109 to i32*
  %111 = load i32* %110, align 4, !tbaa !68
  %112 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %112) #8
  store i32 %111, i32* %5, align 4, !tbaa !38
  br i1 %.b1.i42, label %rs_write_int.exit46, label %113

; <label>:113                                     ; preds = %rs_write_int.exit41
  %114 = call i64 @encwrite(i8* %112, i64 4, %struct.__sFILE* %savef) #8
  %115 = icmp eq i64 %114, 4
  br i1 %115, label %.rs_write_int.exit46_crit_edge, label %116

.rs_write_int.exit46_crit_edge:                   ; preds = %113
  %.b1.i47.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit46

; <label>:116                                     ; preds = %113
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit46

rs_write_int.exit46:                              ; preds = %116, %.rs_write_int.exit46_crit_edge, %rs_write_int.exit41
  %.b1.i47 = phi i1 [ %.b1.i47.pre, %.rs_write_int.exit46_crit_edge ], [ true, %rs_write_int.exit41 ], [ true, %116 ]
  call void @llvm.lifetime.end(i64 4, i8* %112) #8
  %117 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5, i64 12
  %118 = bitcast i8* %117 to i32*
  %119 = load i32* %118, align 4, !tbaa !69
  %120 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %120) #8
  store i32 %119, i32* %4, align 4, !tbaa !38
  br i1 %.b1.i47, label %rs_write_int.exit51, label %121

; <label>:121                                     ; preds = %rs_write_int.exit46
  %122 = call i64 @encwrite(i8* %120, i64 4, %struct.__sFILE* %savef) #8
  %123 = icmp eq i64 %122, 4
  br i1 %123, label %.rs_write_int.exit51_crit_edge, label %124

.rs_write_int.exit51_crit_edge:                   ; preds = %121
  %.b1.i52.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit51

; <label>:124                                     ; preds = %121
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit51

rs_write_int.exit51:                              ; preds = %124, %.rs_write_int.exit51_crit_edge, %rs_write_int.exit46
  %.b1.i52 = phi i1 [ %.b1.i52.pre, %.rs_write_int.exit51_crit_edge ], [ true, %rs_write_int.exit46 ], [ true, %124 ]
  call void @llvm.lifetime.end(i64 4, i8* %120) #8
  %125 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 6
  %126 = load i32* %125, align 4, !tbaa !70
  %127 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %127) #8
  store i32 %126, i32* %3, align 4, !tbaa !38
  br i1 %.b1.i52, label %rs_write_int.exit56, label %128

; <label>:128                                     ; preds = %rs_write_int.exit51
  %129 = call i64 @encwrite(i8* %127, i64 4, %struct.__sFILE* %savef) #8
  %130 = icmp eq i64 %129, 4
  br i1 %130, label %.rs_write_int.exit56_crit_edge, label %131

.rs_write_int.exit56_crit_edge:                   ; preds = %128
  %.b1.i57.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit56

; <label>:131                                     ; preds = %128
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit56

rs_write_int.exit56:                              ; preds = %131, %.rs_write_int.exit56_crit_edge, %rs_write_int.exit51
  %.b1.i57 = phi i1 [ %.b1.i57.pre, %.rs_write_int.exit56_crit_edge ], [ true, %rs_write_int.exit51 ], [ true, %131 ]
  call void @llvm.lifetime.end(i64 4, i8* %127) #8
  %132 = getelementptr inbounds %struct.anon.0* %62, i64 0, i32 14
  %133 = load i32* %132, align 4, !tbaa !12
  %134 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %134) #8
  store i32 %133, i32* %2, align 4, !tbaa !38
  br i1 %.b1.i57, label %rs_write_int.exit61, label %135

; <label>:135                                     ; preds = %rs_write_int.exit56
  %136 = call i64 @encwrite(i8* %134, i64 4, %struct.__sFILE* %savef) #8
  %137 = icmp eq i64 %136, 4
  br i1 %137, label %.rs_write_int.exit61_crit_edge, label %138

.rs_write_int.exit61_crit_edge:                   ; preds = %135
  %.b1.i62.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit61

; <label>:138                                     ; preds = %135
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit61

rs_write_int.exit61:                              ; preds = %138, %.rs_write_int.exit61_crit_edge, %rs_write_int.exit56
  %.b1.i62 = phi i1 [ %.b1.i62.pre, %.rs_write_int.exit61_crit_edge ], [ true, %rs_write_int.exit56 ], [ true, %138 ]
  call void @llvm.lifetime.end(i64 4, i8* %134) #8
  %139 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 10
  %140 = bitcast %struct.room** %139 to i32*
  %141 = load i32* %140, align 4, !tbaa !116
  %142 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %142) #8
  store i32 %141, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i62, label %rs_write_int.exit66, label %143

; <label>:143                                     ; preds = %rs_write_int.exit61
  %144 = call i64 @encwrite(i8* %142, i64 4, %struct.__sFILE* %savef) #8
  %145 = icmp eq i64 %144, 4
  br i1 %145, label %rs_write_int.exit66, label %146

; <label>:146                                     ; preds = %143
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit66

rs_write_int.exit66:                              ; preds = %146, %143, %rs_write_int.exit61
  call void @llvm.lifetime.end(i64 4, i8* %142) #8
  %147 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 11
  %148 = load %union.thing** %147, align 8
  %149 = bitcast %union.thing* %148 to i8*
  %150 = call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %149)
  %.b = load i1* @write_error, align 1
  br label %151

; <label>:151                                     ; preds = %rs_write_int.exit66, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit66 ], [ true, %0 ]
  %152 = zext i1 %.b1.sink to i32
  ret i32 %152
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_object(%struct.__sFILE* %inf, %union.thing* %o) #0 {
  %input.i133 = alloca i32, align 4
  %input.i122 = alloca i32, align 4
  %input.i111 = alloca i32, align 4
  %input.i100 = alloca i32, align 4
  %input.i89 = alloca i32, align 4
  %input.i78 = alloca i32, align 4
  %input.i67 = alloca i32, align 4
  %input.i.i49 = alloca i32, align 4
  %input.i.i37 = alloca i32, align 4
  %input.i16 = alloca i32, align 4
  %input.i7.i = alloca i32, align 4
  %input.i.i10 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %134, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i5 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i5
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628477
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_int.exit26.thread

rs_read_int.exit26.thread:                        ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast %union.thing* %o to %struct.anon.0*
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %11 = bitcast i32* %input.i16 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #8
  call void @llvm.lifetime.end(i64 4, i8* %11) #8
  br label %rs_read_char.exit

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %12 = bitcast %union.thing* %o to %struct.anon.0*
  %13 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 2, i32 0
  %14 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %14) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i7 = or i1 %.b2.i5, %.b4.i.i
  br i1 %or.cond.i7, label %rs_read_int.exit, label %15

; <label>:15                                      ; preds = %rs_read_marker.exit
  %16 = call i64 @encread(i8* %14, i64 4, %struct.__sFILE* %inf) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %.rs_read.exit.i_crit_edge, label %18

.rs_read.exit.i_crit_edge:                        ; preds = %15
  %.b3.i11.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i

; <label>:18                                      ; preds = %15
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i

rs_read.exit.i:                                   ; preds = %18, %.rs_read.exit.i_crit_edge
  %.b3.i11.pre = phi i1 [ %.b3.i11.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %18 ]
  %19 = load i32* %input.i, align 4, !tbaa !38
  store i32 %19, i32* %13, align 4, !tbaa !38
  %.b4.i12.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i, %rs_read_marker.exit
  %.b4.i12 = phi i1 [ %.b4.i.i, %rs_read_marker.exit ], [ %.b4.i12.pre, %rs_read.exit.i ]
  %.b3.i11 = phi i1 [ %.b2.i5, %rs_read_marker.exit ], [ %.b3.i11.pre, %rs_read.exit.i ]
  call void @llvm.lifetime.end(i64 4, i8* %14) #8
  %20 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 2, i32 1
  %or.cond.i13 = or i1 %.b3.i11, %.b4.i12
  br i1 %or.cond.i13, label %rs_read_coord.exit, label %21

; <label>:21                                      ; preds = %rs_read_int.exit
  %22 = bitcast i32* %input.i.i10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %22) #8
  store i32 0, i32* %input.i.i10, align 4, !tbaa !38
  %23 = call i64 @encread(i8* %22, i64 4, %struct.__sFILE* %inf) #8
  %24 = icmp eq i64 %23, 4
  br i1 %24, label %.rs_read.exit.i_crit_edge.i, label %25

.rs_read.exit.i_crit_edge.i:                      ; preds = %21
  %.b2.i8.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i14

; <label>:25                                      ; preds = %21
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i14

rs_read_int.exit.i14:                             ; preds = %25, %.rs_read.exit.i_crit_edge.i
  %.b2.i8.pre.i = phi i1 [ %.b2.i8.pre.pre.i, %.rs_read.exit.i_crit_edge.i ], [ true, %25 ]
  %26 = load i32* %input.i.i10, align 4, !tbaa !38
  %.b3.i9.pre.i = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %22) #8
  %27 = bitcast i32* %input.i7.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %27) #8
  store i32 0, i32* %input.i7.i, align 4, !tbaa !38
  %or.cond.i10.i = or i1 %.b2.i8.pre.i, %.b3.i9.pre.i
  br i1 %or.cond.i10.i, label %rs_read_int.exit17.i, label %28

; <label>:28                                      ; preds = %rs_read_int.exit.i14
  %29 = call i64 @encread(i8* %27, i64 4, %struct.__sFILE* %inf) #8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %.rs_read.exit.i15_crit_edge.i, label %31

.rs_read.exit.i15_crit_edge.i:                    ; preds = %28
  %.b2.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i

; <label>:31                                      ; preds = %28
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i

rs_read.exit.i15.i:                               ; preds = %31, %.rs_read.exit.i15_crit_edge.i
  %.b2.pre.i = phi i1 [ %.b2.pre.pre.i, %.rs_read.exit.i15_crit_edge.i ], [ true, %31 ]
  %32 = load i32* %input.i7.i, align 4, !tbaa !38
  %.b6.pre.i = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i

rs_read_int.exit17.i:                             ; preds = %rs_read.exit.i15.i, %rs_read_int.exit.i14
  %.b.i15 = phi i1 [ %.b2.pre.i, %rs_read.exit.i15.i ], [ %.b2.i8.pre.i, %rs_read_int.exit.i14 ]
  %.b5.i = phi i1 [ %.b6.pre.i, %rs_read.exit.i15.i ], [ %.b3.i9.pre.i, %rs_read_int.exit.i14 ]
  %33 = phi i32 [ %32, %rs_read.exit.i15.i ], [ undef, %rs_read_int.exit.i14 ]
  call void @llvm.lifetime.end(i64 4, i8* %27) #8
  %..b2.i = or i1 %.b5.i, %.b.i15
  br i1 %..b2.i, label %rs_read_coord.exit, label %34

; <label>:34                                      ; preds = %rs_read_int.exit17.i
  store i32 %26, i32* %20, align 4, !tbaa !21
  %35 = getelementptr inbounds i32* %20, i64 1
  store i32 %33, i32* %35, align 4, !tbaa !20
  br label %rs_read_coord.exit

rs_read_coord.exit:                               ; preds = %34, %rs_read_int.exit17.i, %rs_read_int.exit
  %.b3.i18 = phi i1 [ %.b4.i12, %rs_read_int.exit ], [ %.b5.i, %rs_read_int.exit17.i ], [ false, %34 ]
  %.b2.i17 = phi i1 [ %.b3.i11, %rs_read_int.exit ], [ %.b.i15, %rs_read_int.exit17.i ], [ false, %34 ]
  %36 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 8
  %37 = bitcast i16* %36 to i32*
  %38 = bitcast i32* %input.i16 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %38) #8
  store i32 0, i32* %input.i16, align 4, !tbaa !38
  %or.cond.i19 = or i1 %.b2.i17, %.b3.i18
  br i1 %or.cond.i19, label %rs_read_int.exit26, label %39

; <label>:39                                      ; preds = %rs_read_coord.exit
  %40 = call i64 @encread(i8* %38, i64 4, %struct.__sFILE* %inf) #8
  %41 = icmp eq i64 %40, 4
  br i1 %41, label %.rs_read.exit.i24_crit_edge, label %42

.rs_read.exit.i24_crit_edge:                      ; preds = %39
  %.b2.i27.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i24

; <label>:42                                      ; preds = %39
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i24

rs_read.exit.i24:                                 ; preds = %42, %.rs_read.exit.i24_crit_edge
  %.b2.i27.pre = phi i1 [ %.b2.i27.pre.pre, %.rs_read.exit.i24_crit_edge ], [ true, %42 ]
  %43 = load i32* %input.i16, align 4, !tbaa !38
  store i32 %43, i32* %37, align 4, !tbaa !38
  %.b3.i28.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit26

rs_read_int.exit26:                               ; preds = %rs_read.exit.i24, %rs_read_coord.exit
  %.b3.i28 = phi i1 [ %.b3.i18, %rs_read_coord.exit ], [ %.b3.i28.pre, %rs_read.exit.i24 ]
  %.b2.i27 = phi i1 [ %.b2.i17, %rs_read_coord.exit ], [ %.b2.i27.pre, %rs_read.exit.i24 ]
  call void @llvm.lifetime.end(i64 4, i8* %38) #8
  %or.cond.i29 = or i1 %.b2.i27, %.b3.i28
  br i1 %or.cond.i29, label %rs_read_char.exit, label %44

; <label>:44                                      ; preds = %rs_read_int.exit26
  %45 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9
  %46 = bitcast %struct.stats* %45 to i8*
  %47 = call i64 @encread(i8* %46, i64 1, %struct.__sFILE* %inf) #8
  %48 = icmp eq i64 %47, 1
  br i1 %48, label %.rs_read_char.exit_crit_edge, label %rs_read_char.exit.thread

.rs_read_char.exit_crit_edge:                     ; preds = %44
  %.b2.i38.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit

rs_read_char.exit.thread:                         ; preds = %44
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_char.exit:                                ; preds = %.rs_read_char.exit_crit_edge, %rs_read_int.exit26, %rs_read_int.exit26.thread
  %49 = phi %struct.anon.0* [ %12, %.rs_read_char.exit_crit_edge ], [ %12, %rs_read_int.exit26 ], [ %9, %rs_read_int.exit26.thread ]
  %.b2.i38 = phi i1 [ %.b2.i38.pre, %.rs_read_char.exit_crit_edge ], [ %.b2.i27, %rs_read_int.exit26 ], [ %.b2.i5, %rs_read_int.exit26.thread ]
  %50 = getelementptr inbounds %struct.anon.0* %49, i64 0, i32 7, i64 0
  %.b3.i39 = load i1* @format_error, align 1
  %or.cond.i40 = or i1 %.b2.i38, %.b3.i39
  br i1 %or.cond.i40, label %rs_read_chars.exit, label %51

; <label>:51                                      ; preds = %rs_read_char.exit
  %52 = bitcast i32* %input.i.i37 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #8
  store i32 0, i32* %input.i.i37, align 4, !tbaa !38
  %53 = call i64 @encread(i8* %52, i64 4, %struct.__sFILE* %inf) #8
  %54 = icmp eq i64 %53, 4
  br i1 %54, label %rs_read_int.exit.i41, label %55

; <label>:55                                      ; preds = %51
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i41

rs_read_int.exit.i41:                             ; preds = %55, %51
  %56 = load i32* %input.i.i37, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %52) #8
  %57 = icmp eq i32 %56, 8
  br i1 %57, label %58, label %.thread.i

.thread.i:                                        ; preds = %rs_read_int.exit.i41
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit

; <label>:58                                      ; preds = %rs_read_int.exit.i41
  %.b3.i6.pre.i = load i1* @format_error, align 1
  %.b2.i5.i = load i1* @read_error, align 1
  %or.cond.i7.i = or i1 %.b2.i5.i, %.b3.i6.pre.i
  br i1 %or.cond.i7.i, label %rs_read_chars.exit, label %59

; <label>:59                                      ; preds = %58
  %60 = call i64 @encread(i8* %50, i64 8, %struct.__sFILE* %inf) #8
  %61 = icmp eq i64 %60, 8
  br i1 %61, label %rs_read_chars.exit, label %62

; <label>:62                                      ; preds = %59
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_chars.exit:                               ; preds = %62, %59, %58, %.thread.i, %rs_read_char.exit, %rs_read_char.exit.thread
  %63 = phi %struct.anon.0* [ %12, %rs_read_char.exit.thread ], [ %49, %.thread.i ], [ %49, %58 ], [ %49, %62 ], [ %49, %59 ], [ %49, %rs_read_char.exit ]
  %64 = getelementptr inbounds %struct.anon.0* %63, i64 0, i32 8, i64 0
  %.b2.i50 = load i1* @read_error, align 1
  %.b3.i51 = load i1* @format_error, align 1
  %or.cond.i52 = or i1 %.b2.i50, %.b3.i51
  br i1 %or.cond.i52, label %rs_read_chars.exit66, label %65

; <label>:65                                      ; preds = %rs_read_chars.exit
  %66 = bitcast i32* %input.i.i49 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %66) #8
  store i32 0, i32* %input.i.i49, align 4, !tbaa !38
  %67 = call i64 @encread(i8* %66, i64 4, %struct.__sFILE* %inf) #8
  %68 = icmp eq i64 %67, 4
  br i1 %68, label %rs_read_int.exit.i53, label %69

; <label>:69                                      ; preds = %65
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i53

rs_read_int.exit.i53:                             ; preds = %69, %65
  %70 = load i32* %input.i.i49, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %66) #8
  %71 = icmp eq i32 %70, 8
  br i1 %71, label %72, label %.thread.i55

.thread.i55:                                      ; preds = %rs_read_int.exit.i53
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit66

; <label>:72                                      ; preds = %rs_read_int.exit.i53
  %.b3.i6.pre.i56 = load i1* @format_error, align 1
  %.b2.i5.i57 = load i1* @read_error, align 1
  %or.cond.i7.i58 = or i1 %.b2.i5.i57, %.b3.i6.pre.i56
  br i1 %or.cond.i7.i58, label %rs_read_chars.exit66, label %73

; <label>:73                                      ; preds = %72
  %74 = call i64 @encread(i8* %64, i64 8, %struct.__sFILE* %inf) #8
  %75 = icmp eq i64 %74, 8
  br i1 %75, label %rs_read_chars.exit66, label %76

; <label>:76                                      ; preds = %73
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit66

rs_read_chars.exit66:                             ; preds = %76, %73, %72, %.thread.i55, %rs_read_chars.exit
  %77 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5
  %78 = bitcast [13 x i8]* %77 to i32*
  %79 = bitcast i32* %input.i67 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %79) #8
  store i32 0, i32* %input.i67, align 4, !tbaa !38
  %.b2.i68 = load i1* @read_error, align 1
  %.b3.i69 = load i1* @format_error, align 1
  %or.cond.i70 = or i1 %.b2.i68, %.b3.i69
  br i1 %or.cond.i70, label %rs_read_int.exit77, label %80

; <label>:80                                      ; preds = %rs_read_chars.exit66
  %81 = call i64 @encread(i8* %79, i64 4, %struct.__sFILE* %inf) #8
  %82 = icmp eq i64 %81, 4
  br i1 %82, label %.rs_read.exit.i75_crit_edge, label %83

.rs_read.exit.i75_crit_edge:                      ; preds = %80
  %.b2.i79.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i75

; <label>:83                                      ; preds = %80
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i75

rs_read.exit.i75:                                 ; preds = %83, %.rs_read.exit.i75_crit_edge
  %.b2.i79.pre = phi i1 [ %.b2.i79.pre.pre, %.rs_read.exit.i75_crit_edge ], [ true, %83 ]
  %84 = load i32* %input.i67, align 4, !tbaa !38
  store i32 %84, i32* %78, align 4, !tbaa !38
  %.b3.i80.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit77

rs_read_int.exit77:                               ; preds = %rs_read.exit.i75, %rs_read_chars.exit66
  %.b3.i80 = phi i1 [ %.b3.i69, %rs_read_chars.exit66 ], [ %.b3.i80.pre, %rs_read.exit.i75 ]
  %.b2.i79 = phi i1 [ %.b2.i68, %rs_read_chars.exit66 ], [ %.b2.i79.pre, %rs_read.exit.i75 ]
  call void @llvm.lifetime.end(i64 4, i8* %79) #8
  %85 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5, i64 4
  %86 = bitcast i8* %85 to i32*
  %87 = bitcast i32* %input.i78 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %87) #8
  store i32 0, i32* %input.i78, align 4, !tbaa !38
  %or.cond.i81 = or i1 %.b2.i79, %.b3.i80
  br i1 %or.cond.i81, label %rs_read_int.exit88, label %88

; <label>:88                                      ; preds = %rs_read_int.exit77
  %89 = call i64 @encread(i8* %87, i64 4, %struct.__sFILE* %inf) #8
  %90 = icmp eq i64 %89, 4
  br i1 %90, label %.rs_read.exit.i86_crit_edge, label %91

.rs_read.exit.i86_crit_edge:                      ; preds = %88
  %.b2.i90.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i86

; <label>:91                                      ; preds = %88
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i86

rs_read.exit.i86:                                 ; preds = %91, %.rs_read.exit.i86_crit_edge
  %.b2.i90.pre = phi i1 [ %.b2.i90.pre.pre, %.rs_read.exit.i86_crit_edge ], [ true, %91 ]
  %92 = load i32* %input.i78, align 4, !tbaa !38
  store i32 %92, i32* %86, align 4, !tbaa !38
  %.b3.i91.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit88

rs_read_int.exit88:                               ; preds = %rs_read.exit.i86, %rs_read_int.exit77
  %.b3.i91 = phi i1 [ %.b3.i80, %rs_read_int.exit77 ], [ %.b3.i91.pre, %rs_read.exit.i86 ]
  %.b2.i90 = phi i1 [ %.b2.i79, %rs_read_int.exit77 ], [ %.b2.i90.pre, %rs_read.exit.i86 ]
  call void @llvm.lifetime.end(i64 4, i8* %87) #8
  %93 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5, i64 8
  %94 = bitcast i8* %93 to i32*
  %95 = bitcast i32* %input.i89 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %95) #8
  store i32 0, i32* %input.i89, align 4, !tbaa !38
  %or.cond.i92 = or i1 %.b2.i90, %.b3.i91
  br i1 %or.cond.i92, label %rs_read_int.exit99, label %96

; <label>:96                                      ; preds = %rs_read_int.exit88
  %97 = call i64 @encread(i8* %95, i64 4, %struct.__sFILE* %inf) #8
  %98 = icmp eq i64 %97, 4
  br i1 %98, label %.rs_read.exit.i97_crit_edge, label %99

.rs_read.exit.i97_crit_edge:                      ; preds = %96
  %.b2.i101.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i97

; <label>:99                                      ; preds = %96
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i97

rs_read.exit.i97:                                 ; preds = %99, %.rs_read.exit.i97_crit_edge
  %.b2.i101.pre = phi i1 [ %.b2.i101.pre.pre, %.rs_read.exit.i97_crit_edge ], [ true, %99 ]
  %100 = load i32* %input.i89, align 4, !tbaa !38
  store i32 %100, i32* %94, align 4, !tbaa !38
  %.b3.i102.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit99

rs_read_int.exit99:                               ; preds = %rs_read.exit.i97, %rs_read_int.exit88
  %.b3.i102 = phi i1 [ %.b3.i91, %rs_read_int.exit88 ], [ %.b3.i102.pre, %rs_read.exit.i97 ]
  %.b2.i101 = phi i1 [ %.b2.i90, %rs_read_int.exit88 ], [ %.b2.i101.pre, %rs_read.exit.i97 ]
  call void @llvm.lifetime.end(i64 4, i8* %95) #8
  %101 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 5, i64 12
  %102 = bitcast i8* %101 to i32*
  %103 = bitcast i32* %input.i100 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %103) #8
  store i32 0, i32* %input.i100, align 4, !tbaa !38
  %or.cond.i103 = or i1 %.b2.i101, %.b3.i102
  br i1 %or.cond.i103, label %rs_read_int.exit110, label %104

; <label>:104                                     ; preds = %rs_read_int.exit99
  %105 = call i64 @encread(i8* %103, i64 4, %struct.__sFILE* %inf) #8
  %106 = icmp eq i64 %105, 4
  br i1 %106, label %.rs_read.exit.i108_crit_edge, label %107

.rs_read.exit.i108_crit_edge:                     ; preds = %104
  %.b2.i112.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i108

; <label>:107                                     ; preds = %104
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i108

rs_read.exit.i108:                                ; preds = %107, %.rs_read.exit.i108_crit_edge
  %.b2.i112.pre = phi i1 [ %.b2.i112.pre.pre, %.rs_read.exit.i108_crit_edge ], [ true, %107 ]
  %108 = load i32* %input.i100, align 4, !tbaa !38
  store i32 %108, i32* %102, align 4, !tbaa !38
  %.b3.i113.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit110

rs_read_int.exit110:                              ; preds = %rs_read.exit.i108, %rs_read_int.exit99
  %.b3.i113 = phi i1 [ %.b3.i102, %rs_read_int.exit99 ], [ %.b3.i113.pre, %rs_read.exit.i108 ]
  %.b2.i112 = phi i1 [ %.b2.i101, %rs_read_int.exit99 ], [ %.b2.i112.pre, %rs_read.exit.i108 ]
  call void @llvm.lifetime.end(i64 4, i8* %103) #8
  %109 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 9, i32 6
  %110 = bitcast i32* %input.i111 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %110) #8
  store i32 0, i32* %input.i111, align 4, !tbaa !38
  %or.cond.i114 = or i1 %.b2.i112, %.b3.i113
  br i1 %or.cond.i114, label %rs_read_int.exit121, label %111

; <label>:111                                     ; preds = %rs_read_int.exit110
  %112 = call i64 @encread(i8* %110, i64 4, %struct.__sFILE* %inf) #8
  %113 = icmp eq i64 %112, 4
  br i1 %113, label %.rs_read.exit.i119_crit_edge, label %114

.rs_read.exit.i119_crit_edge:                     ; preds = %111
  %.b2.i123.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i119

; <label>:114                                     ; preds = %111
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i119

rs_read.exit.i119:                                ; preds = %114, %.rs_read.exit.i119_crit_edge
  %.b2.i123.pre = phi i1 [ %.b2.i123.pre.pre, %.rs_read.exit.i119_crit_edge ], [ true, %114 ]
  %115 = load i32* %input.i111, align 4, !tbaa !38
  store i32 %115, i32* %109, align 4, !tbaa !38
  %.b3.i124.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit121

rs_read_int.exit121:                              ; preds = %rs_read.exit.i119, %rs_read_int.exit110
  %.b3.i124 = phi i1 [ %.b3.i113, %rs_read_int.exit110 ], [ %.b3.i124.pre, %rs_read.exit.i119 ]
  %.b2.i123 = phi i1 [ %.b2.i112, %rs_read_int.exit110 ], [ %.b2.i123.pre, %rs_read.exit.i119 ]
  call void @llvm.lifetime.end(i64 4, i8* %110) #8
  %116 = getelementptr inbounds %struct.anon.0* %63, i64 0, i32 14
  %117 = bitcast i32* %input.i122 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %117) #8
  store i32 0, i32* %input.i122, align 4, !tbaa !38
  %or.cond.i125 = or i1 %.b2.i123, %.b3.i124
  br i1 %or.cond.i125, label %rs_read_int.exit132, label %118

; <label>:118                                     ; preds = %rs_read_int.exit121
  %119 = call i64 @encread(i8* %117, i64 4, %struct.__sFILE* %inf) #8
  %120 = icmp eq i64 %119, 4
  br i1 %120, label %.rs_read.exit.i130_crit_edge, label %121

.rs_read.exit.i130_crit_edge:                     ; preds = %118
  %.b2.i134.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i130

; <label>:121                                     ; preds = %118
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i130

rs_read.exit.i130:                                ; preds = %121, %.rs_read.exit.i130_crit_edge
  %.b2.i134.pre = phi i1 [ %.b2.i134.pre.pre, %.rs_read.exit.i130_crit_edge ], [ true, %121 ]
  %122 = load i32* %input.i122, align 4, !tbaa !38
  store i32 %122, i32* %116, align 4, !tbaa !38
  %.b3.i135.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit132

rs_read_int.exit132:                              ; preds = %rs_read.exit.i130, %rs_read_int.exit121
  %.b3.i135 = phi i1 [ %.b3.i124, %rs_read_int.exit121 ], [ %.b3.i135.pre, %rs_read.exit.i130 ]
  %.b2.i134 = phi i1 [ %.b2.i123, %rs_read_int.exit121 ], [ %.b2.i134.pre, %rs_read.exit.i130 ]
  call void @llvm.lifetime.end(i64 4, i8* %117) #8
  %123 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 10
  %124 = bitcast %struct.room** %123 to i32*
  %125 = bitcast i32* %input.i133 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %125) #8
  store i32 0, i32* %input.i133, align 4, !tbaa !38
  %or.cond.i136 = or i1 %.b2.i134, %.b3.i135
  br i1 %or.cond.i136, label %rs_read_int.exit143, label %126

; <label>:126                                     ; preds = %rs_read_int.exit132
  %127 = call i64 @encread(i8* %125, i64 4, %struct.__sFILE* %inf) #8
  %128 = icmp eq i64 %127, 4
  br i1 %128, label %rs_read.exit.i141, label %129

; <label>:129                                     ; preds = %126
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i141

rs_read.exit.i141:                                ; preds = %129, %126
  %130 = load i32* %input.i133, align 4, !tbaa !38
  store i32 %130, i32* %124, align 4, !tbaa !38
  br label %rs_read_int.exit143

rs_read_int.exit143:                              ; preds = %rs_read.exit.i141, %rs_read_int.exit132
  call void @llvm.lifetime.end(i64 4, i8* %125) #8
  %131 = getelementptr inbounds %union.thing* %o, i64 0, i32 0, i32 11
  %132 = bitcast %union.thing** %131 to i8**
  %133 = call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** %132)
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %134

; <label>:134                                     ; preds = %rs_read_int.exit143, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_int.exit143 ], [ true, %0 ]
  %135 = zext i1 %..b2.sink to i32
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_object_list(%struct.__sFILE* %savef, %union.thing* %l) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b2 = load i1* @write_error, align 1
  br i1 %.b2, label %22, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 -1412628473, i32* %2, align 4, !tbaa !38
  %5 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %rs_write_marker.exit, label %7

; <label>:7                                       ; preds = %3
  store i1 true, i1* @write_error, align 1
  br label %rs_write_marker.exit

rs_write_marker.exit:                             ; preds = %7, %3
  %8 = icmp eq %union.thing* %l, null
  br i1 %8, label %list_size.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %rs_write_marker.exit
  %count.02.i = phi i32 [ %9, %.lr.ph.i ], [ 0, %rs_write_marker.exit ]
  %.01.i = phi %union.thing* [ %11, %.lr.ph.i ], [ %l, %rs_write_marker.exit ]
  %9 = add nsw i32 %count.02.i, 1
  %10 = getelementptr inbounds %union.thing* %.01.i, i64 0, i32 0, i32 0
  %11 = load %union.thing** %10, align 8, !tbaa !14
  %12 = icmp eq %union.thing* %11, null
  br i1 %12, label %list_size.exit, label %.lr.ph.i

list_size.exit:                                   ; preds = %.lr.ph.i, %rs_write_marker.exit
  %count.0.lcssa.i = phi i32 [ 0, %rs_write_marker.exit ], [ %9, %.lr.ph.i ]
  %13 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #8
  store i32 %count.0.lcssa.i, i32* %1, align 4, !tbaa !38
  %.b1.i3 = load i1* @write_error, align 1
  br i1 %.b1.i3, label %rs_write_int.exit.preheader, label %14

; <label>:14                                      ; preds = %list_size.exit
  %15 = call i64 @encwrite(i8* %13, i64 4, %struct.__sFILE* %savef) #8
  %16 = icmp eq i64 %15, 4
  br i1 %16, label %rs_write_int.exit.preheader, label %17

; <label>:17                                      ; preds = %14
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader

rs_write_int.exit.preheader:                      ; preds = %17, %14, %list_size.exit
  br i1 %8, label %rs_write_int.exit._crit_edge, label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %.06 = phi %union.thing* [ %20, %rs_write_int.exit ], [ %l, %rs_write_int.exit.preheader ]
  %18 = call i32 @rs_write_object(%struct.__sFILE* %savef, %union.thing* %.06)
  %19 = getelementptr inbounds %union.thing* %.06, i64 0, i32 0, i32 0
  %20 = load %union.thing** %19, align 8, !tbaa !14
  %21 = icmp eq %union.thing* %20, null
  br i1 %21, label %rs_write_int.exit._crit_edge, label %rs_write_int.exit

rs_write_int.exit._crit_edge:                     ; preds = %rs_write_int.exit, %rs_write_int.exit.preheader
  %.b = load i1* @write_error, align 1
  br label %22

; <label>:22                                      ; preds = %rs_write_int.exit._crit_edge, %0
  %.b2.sink = phi i1 [ %.b, %rs_write_int.exit._crit_edge ], [ true, %0 ]
  %23 = zext i1 %.b2.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_object_list(%struct.__sFILE* %inf, %union.thing** nocapture %list) #0 {
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %31, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i5 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i5
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628473
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_marker.exit.thread

rs_read_marker.exit.thread:                       ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit.thread

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i7 = or i1 %.b2.i5, %.b4.i.i
  br i1 %or.cond.i7, label %rs_read_int.exit.thread, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_read_int.exit, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit.thread:                          ; preds = %rs_read_marker.exit, %rs_read_marker.exit.thread
  %.ph = phi i8* [ %10, %rs_read_marker.exit ], [ %9, %rs_read_marker.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph) #8
  br label %._crit_edge.thread

rs_read_int.exit:                                 ; preds = %14, %11
  %15 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %.lr.ph, label %._crit_edge.thread

.lr.ph:                                           ; preds = %25, %rs_read_int.exit
  %head.012 = phi %union.thing* [ %.head.0, %25 ], [ null, %rs_read_int.exit ]
  %l.011 = phi %union.thing* [ %17, %25 ], [ null, %rs_read_int.exit ]
  %i.010 = phi i32 [ %27, %25 ], [ 0, %rs_read_int.exit ]
  %17 = call %union.thing* (i64, ...)* bitcast (%union.thing* ()* @new_item to %union.thing* (i64, ...)*)(i64 112) #8
  %18 = bitcast %union.thing* %17 to i8*
  %19 = call i64 @llvm.objectsize.i64.p0i8(i8* %18, i1 false)
  %20 = call i8* @__memset_chk(i8* %18, i32 0, i64 112, i64 %19) #8
  %21 = getelementptr inbounds %union.thing* %17, i64 0, i32 0, i32 1
  store %union.thing* %l.011, %union.thing** %21, align 8, !tbaa !87
  %22 = icmp eq %union.thing* %l.011, null
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %.lr.ph
  %24 = getelementptr inbounds %union.thing* %l.011, i64 0, i32 0, i32 0
  store %union.thing* %17, %union.thing** %24, align 8, !tbaa !14
  br label %25

; <label>:25                                      ; preds = %23, %.lr.ph
  %26 = call i32 @rs_read_object(%struct.__sFILE* %inf, %union.thing* %17)
  %.head.0 = select i1 %22, %union.thing* %17, %union.thing* %head.012
  %27 = add nsw i32 %i.010, 1
  %exitcond = icmp eq i32 %27, %15
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %25
  %28 = icmp eq %union.thing* %17, null
  br i1 %28, label %._crit_edge.thread, label %29

; <label>:29                                      ; preds = %._crit_edge
  %30 = getelementptr inbounds %union.thing* %17, i64 0, i32 0, i32 0
  store %union.thing* null, %union.thing** %30, align 8, !tbaa !14
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %29, %._crit_edge, %rs_read_int.exit, %rs_read_int.exit.thread
  %head.0.lcssa16 = phi %union.thing* [ %.head.0, %._crit_edge ], [ %.head.0, %29 ], [ null, %rs_read_int.exit ], [ null, %rs_read_int.exit.thread ]
  store %union.thing* %head.0.lcssa16, %union.thing** %list, align 8, !tbaa !1
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %31

; <label>:31                                      ; preds = %._crit_edge.thread, %0
  %..b2.sink = phi i1 [ %..b, %._crit_edge.thread ], [ true, %0 ]
  %32 = zext i1 %..b2.sink to i32
  ret i32 %32
}

; Function Attrs: nounwind
declare i8* @__memset_chk(i8*, i32, i64, i64) #5

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_object_reference(%struct.__sFILE* %savef, %union.thing* readonly %list, %union.thing* readnone %item) #0 {
  %1 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %rs_write_int.exit, label %2

; <label>:2                                       ; preds = %0
  %3 = icmp eq %union.thing* %list, null
  br i1 %3, label %.loopexit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %5, %2
  %count.03.i = phi i32 [ %6, %5 ], [ 0, %2 ]
  %.012.i = phi %union.thing* [ %8, %5 ], [ %list, %2 ]
  %4 = icmp eq %union.thing* %.012.i, %item
  br i1 %4, label %.loopexit, label %5

; <label>:5                                       ; preds = %.lr.ph.i
  %6 = add nsw i32 %count.03.i, 1
  %7 = getelementptr inbounds %union.thing* %.012.i, i64 0, i32 0, i32 0
  %8 = load %union.thing** %7, align 8, !tbaa !14
  %9 = icmp eq %union.thing* %8, null
  br i1 %9, label %.loopexit, label %.lr.ph.i

.loopexit:                                        ; preds = %5, %.lr.ph.i, %2
  %.0.i = phi i32 [ -1, %2 ], [ -1, %5 ], [ %count.03.i, %.lr.ph.i ]
  %10 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 %.0.i, i32* %1, align 4, !tbaa !38
  %11 = call i64 @encwrite(i8* %10, i64 4, %struct.__sFILE* %savef) #8
  %12 = icmp eq i64 %11, 4
  br i1 %12, label %.rs_write_int.exit_crit_edge, label %13

.rs_write_int.exit_crit_edge:                     ; preds = %.loopexit
  %.b.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:13                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %13, %.rs_write_int.exit_crit_edge, %0
  %.b1.sink = phi i1 [ true, %0 ], [ %.b.pre, %.rs_write_int.exit_crit_edge ], [ true, %13 ]
  %14 = zext i1 %.b1.sink to i32
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_object_reference(%struct.__sFILE* %inf, %union.thing* %list, %union.thing** nocapture %item) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %14, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq %union.thing* %list, null
  br i1 %7, label %get_list_item.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %9, %rs_read_int.exit
  %count.04.i = phi i32 [ %10, %9 ], [ 0, %rs_read_int.exit ]
  %.013.i = phi %union.thing* [ %12, %9 ], [ %list, %rs_read_int.exit ]
  %8 = icmp eq i32 %count.04.i, %6
  br i1 %8, label %get_list_item.exit, label %9

; <label>:9                                       ; preds = %.lr.ph.i
  %10 = add nsw i32 %count.04.i, 1
  %11 = getelementptr inbounds %union.thing* %.013.i, i64 0, i32 0, i32 0
  %12 = load %union.thing** %11, align 8, !tbaa !14
  %13 = icmp eq %union.thing* %12, null
  br i1 %13, label %get_list_item.exit, label %.lr.ph.i

get_list_item.exit:                               ; preds = %9, %.lr.ph.i, %rs_read_int.exit
  %.0.i = phi %union.thing* [ null, %rs_read_int.exit ], [ %.013.i, %.lr.ph.i ], [ null, %9 ]
  store %union.thing* %.0.i, %union.thing** %item, align 8, !tbaa !1
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %14

; <label>:14                                      ; preds = %get_list_item.exit, %0
  %..b2.sink = phi i1 [ %..b, %get_list_item.exit ], [ true, %0 ]
  %15 = zext i1 %..b2.sink to i32
  ret i32 %15
}

; Function Attrs: nounwind readnone ssp uwtable
define i32 @find_room_coord(%struct.room* readnone %rmlist, %struct.coord* readnone %c, i32 %n) #3 {
  %1 = icmp sgt i32 %n, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

; <label>:2                                       ; preds = %.lr.ph
  %3 = trunc i64 %indvars.iv.next to i32
  %4 = icmp slt i32 %3, %n
  br i1 %4, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2, %0
  %indvars.iv = phi i64 [ %indvars.iv.next, %2 ], [ 0, %0 ]
  %5 = getelementptr inbounds %struct.room* %rmlist, i64 %indvars.iv, i32 2
  %6 = icmp eq %struct.coord* %5, %c
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %6, label %split2, label %2

split2:                                           ; preds = %.lr.ph
  %7 = trunc i64 %indvars.iv to i32
  br label %._crit_edge

._crit_edge:                                      ; preds = %split2, %2, %0
  %.0 = phi i32 [ -1, %0 ], [ %7, %split2 ], [ -1, %2 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @find_thing_coord(%union.thing* readonly %monlist, %struct.coord* readnone %c) #1 {
  %1 = icmp eq %union.thing* %monlist, null
  br i1 %1, label %split3, label %.lr.ph

.lr.ph:                                           ; preds = %4, %0
  %i.02 = phi i32 [ %5, %4 ], [ 0, %0 ]
  %mitem.01 = phi %union.thing* [ %7, %4 ], [ %monlist, %0 ]
  %2 = getelementptr inbounds %union.thing* %mitem.01, i64 0, i32 0, i32 2
  %3 = icmp eq %struct.coord* %2, %c
  br i1 %3, label %split3, label %4

; <label>:4                                       ; preds = %.lr.ph
  %5 = add nsw i32 %i.02, 1
  %6 = getelementptr inbounds %union.thing* %mitem.01, i64 0, i32 0, i32 0
  %7 = load %union.thing** %6, align 8, !tbaa !14
  %8 = icmp eq %union.thing* %7, null
  br i1 %8, label %split3, label %.lr.ph

split3:                                           ; preds = %4, %.lr.ph, %0
  %.0 = phi i32 [ -1, %0 ], [ -1, %4 ], [ %i.02, %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @find_object_coord(%union.thing* readonly %objlist, %struct.coord* readnone %c) #1 {
  %1 = icmp eq %union.thing* %objlist, null
  br i1 %1, label %split3, label %.lr.ph

.lr.ph:                                           ; preds = %5, %0
  %i.02 = phi i32 [ %6, %5 ], [ 0, %0 ]
  %oitem.01 = phi %union.thing* [ %8, %5 ], [ %objlist, %0 ]
  %2 = getelementptr inbounds %union.thing* %oitem.01, i64 0, i32 0, i32 2, i32 1
  %3 = bitcast i32* %2 to %struct.coord*
  %4 = icmp eq %struct.coord* %3, %c
  br i1 %4, label %split3, label %5

; <label>:5                                       ; preds = %.lr.ph
  %6 = add nsw i32 %i.02, 1
  %7 = getelementptr inbounds %union.thing* %oitem.01, i64 0, i32 0, i32 0
  %8 = load %union.thing** %7, align 8, !tbaa !14
  %9 = icmp eq %union.thing* %8, null
  br i1 %9, label %split3, label %.lr.ph

split3:                                           ; preds = %5, %.lr.ph, %0
  %.0 = phi i32 [ -1, %0 ], [ -1, %5 ], [ %i.02, %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_thing(%struct.__sFILE* %savef, %union.thing* %t) #0 {
  %1 = alloca i16, align 2
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %buf.i = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %.b2 = load i1* @write_error, align 1
  br i1 %.b2, label %267, label %23

; <label>:23                                      ; preds = %0
  %24 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #8
  store i32 -1412628478, i32* %22, align 4, !tbaa !38
  %25 = call i64 @encwrite(i8* %24, i64 4, %struct.__sFILE* %savef) #8
  %26 = icmp eq i64 %25, 4
  br i1 %26, label %rs_write_marker.exit, label %27

; <label>:27                                      ; preds = %23
  store i1 true, i1* @write_error, align 1
  br label %rs_write_marker.exit

rs_write_marker.exit:                             ; preds = %27, %23
  %28 = icmp eq %union.thing* %t, null
  br i1 %28, label %29, label %36

; <label>:29                                      ; preds = %rs_write_marker.exit
  %30 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #8
  store i32 0, i32* %21, align 4, !tbaa !38
  %.b1.i3 = load i1* @write_error, align 1
  br i1 %.b1.i3, label %rs_write_int.exit, label %31

; <label>:31                                      ; preds = %29
  %32 = call i64 @encwrite(i8* %30, i64 4, %struct.__sFILE* %savef) #8
  %33 = icmp eq i64 %32, 4
  br i1 %33, label %.rs_write_int.exit_crit_edge, label %34

.rs_write_int.exit_crit_edge:                     ; preds = %31
  %.b1.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:34                                      ; preds = %31
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %34, %.rs_write_int.exit_crit_edge, %29
  %.b1 = phi i1 [ %.b1.pre, %.rs_write_int.exit_crit_edge ], [ true, %29 ], [ true, %34 ]
  call void @llvm.lifetime.end(i64 4, i8* %30) #8
  %35 = zext i1 %.b1 to i32
  br label %267

; <label>:36                                      ; preds = %rs_write_marker.exit
  %37 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %37) #8
  store i32 1, i32* %20, align 4, !tbaa !38
  %.b1.i6 = load i1* @write_error, align 1
  br i1 %.b1.i6, label %rs_write_coord.exit.thread, label %38

; <label>:38                                      ; preds = %36
  %39 = call i64 @encwrite(i8* %37, i64 4, %struct.__sFILE* %savef) #8
  %40 = icmp eq i64 %39, 4
  br i1 %40, label %rs_write_int.exit10, label %41

; <label>:41                                      ; preds = %38
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit.thread

rs_write_int.exit10:                              ; preds = %38
  %.b1.i11.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %37) #8
  %42 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 2
  %43 = bitcast %struct.coord* %42 to i64*
  %44 = load i64* %43, align 1
  br i1 %.b1.i11.pre, label %rs_write_coord.exit.thread, label %45

; <label>:45                                      ; preds = %rs_write_int.exit10
  %46 = lshr i64 %44, 32
  %47 = trunc i64 %46 to i32
  %48 = trunc i64 %44 to i32
  %49 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %49) #8
  store i32 %48, i32* %19, align 4, !tbaa !38
  %50 = call i64 @encwrite(i8* %49, i64 4, %struct.__sFILE* %savef) #8
  %51 = icmp eq i64 %50, 4
  br i1 %51, label %rs_write_int.exit.i, label %rs_write_int.exit.thread.i

rs_write_int.exit.thread.i:                       ; preds = %45
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %49) #8
  %52 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %52) #8
  store i32 %47, i32* %18, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %52) #8
  %53 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 3
  %54 = load i8* %53, align 1, !tbaa !19, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %54, i8* %buf.i, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %55 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %56 = load i8* %55, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %56, i8* %17, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %57 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %58 = load i8* %57, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %58, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %59 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %60 = load i8* %59, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %60, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

rs_write_int.exit.i:                              ; preds = %45
  %.b1.i2.pre.i = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %49) #8
  %61 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %61) #8
  store i32 %47, i32* %18, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i, label %rs_write_boolean.exit.critedge, label %62

; <label>:62                                      ; preds = %rs_write_int.exit.i
  %63 = call i64 @encwrite(i8* %61, i64 4, %struct.__sFILE* %savef) #8
  %64 = icmp eq i64 %63, 4
  br i1 %64, label %.rs_write_int.exit6.i_crit_edge, label %rs_write_boolean.exit.critedge126

.rs_write_int.exit6.i_crit_edge:                  ; preds = %62
  %.b1.i14.pre.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %61) #8
  %65 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 3
  %66 = load i8* %65, align 1, !tbaa !19, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %66, i8* %buf.i, align 1, !tbaa !28
  br i1 %.b1.i14.pre.pre, label %rs_write_char.exit.critedge, label %83

rs_write_boolean.exit.critedge126:                ; preds = %62
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %61) #8
  %67 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 3
  %68 = load i8* %67, align 1, !tbaa !19, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %68, i8* %buf.i, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %69 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %70 = load i8* %69, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %70, i8* %17, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %71 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %72 = load i8* %71, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %72, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %73 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %74 = load i8* %73, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %74, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

rs_write_coord.exit.thread:                       ; preds = %rs_write_int.exit10, %41, %36
  %75 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 3
  %76 = load i8* %75, align 1, !tbaa !19, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %76, i8* %buf.i, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %77 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %78 = load i8* %77, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %78, i8* %17, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %79 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %80 = load i8* %79, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %80, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %81 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %82 = load i8* %81, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %82, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

; <label>:83                                      ; preds = %.rs_write_int.exit6.i_crit_edge
  %84 = call i64 @encwrite(i8* %buf.i, i64 1, %struct.__sFILE* %savef) #8
  %85 = icmp eq i64 %84, 1
  br i1 %85, label %.rs_write_boolean.exit_crit_edge, label %rs_write_char.exit.critedge128

.rs_write_boolean.exit_crit_edge:                 ; preds = %83
  %.b1.i18.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %86 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %87 = load i8* %86, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %87, i8* %17, align 1, !tbaa !28
  br i1 %.b1.i18.pre, label %rs_write_char.exit26.critedge, label %102

rs_write_char.exit.critedge128:                   ; preds = %83
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %88 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %89 = load i8* %88, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %89, i8* %17, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %90 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %91 = load i8* %90, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %91, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %92 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %93 = load i8* %92, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %93, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

rs_write_boolean.exit.critedge:                   ; preds = %rs_write_int.exit.i
  call void @llvm.lifetime.end(i64 4, i8* %61) #8
  %94 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 3
  %95 = load i8* %94, align 1, !tbaa !19, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %95, i8* %buf.i, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %96 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %97 = load i8* %96, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %97, i8* %17, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %98 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %99 = load i8* %98, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %99, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %100 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %101 = load i8* %100, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %101, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

; <label>:102                                     ; preds = %.rs_write_boolean.exit_crit_edge
  %103 = call i64 @encwrite(i8* %17, i64 1, %struct.__sFILE* %savef) #8
  %104 = icmp eq i64 %103, 1
  br i1 %104, label %.rs_write_char.exit_crit_edge, label %rs_write_char.exit26.critedge133

.rs_write_char.exit_crit_edge:                    ; preds = %102
  %.b1.i22.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %105 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %106 = load i8* %105, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %106, i8* %16, align 1, !tbaa !28
  br i1 %.b1.i22.pre, label %rs_write_char.exit31.critedge, label %117

rs_write_char.exit26.critedge133:                 ; preds = %102
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %107 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %108 = load i8* %107, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %108, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %109 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %110 = load i8* %109, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %110, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

rs_write_char.exit.critedge:                      ; preds = %.rs_write_int.exit6.i_crit_edge
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %111 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %112 = load i8* %111, align 1, !tbaa !37
  call void @llvm.lifetime.start(i64 1, i8* %17) #8
  store i8 %112, i8* %17, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %113 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %114 = load i8* %113, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %114, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %115 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %116 = load i8* %115, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %116, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

; <label>:117                                     ; preds = %.rs_write_char.exit_crit_edge
  %118 = call i64 @encwrite(i8* %16, i64 1, %struct.__sFILE* %savef) #8
  %119 = icmp eq i64 %118, 1
  br i1 %119, label %.rs_write_char.exit26_crit_edge, label %rs_write_char.exit31.critedge140

.rs_write_char.exit26_crit_edge:                  ; preds = %117
  %.b1.i27.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %120 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %121 = load i8* %120, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %121, i8* %15, align 1, !tbaa !28
  br i1 %.b1.i27.pre, label %rs_write_char.exit31, label %128

rs_write_char.exit31.critedge140:                 ; preds = %117
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %122 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %123 = load i8* %122, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %123, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

rs_write_char.exit26.critedge:                    ; preds = %.rs_write_boolean.exit_crit_edge
  call void @llvm.lifetime.end(i64 1, i8* %17) #8
  %124 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %125 = load i8* %124, align 1, !tbaa !44
  call void @llvm.lifetime.start(i64 1, i8* %16) #8
  store i8 %125, i8* %16, align 1, !tbaa !28
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %126 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %127 = load i8* %126, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %127, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

; <label>:128                                     ; preds = %.rs_write_char.exit26_crit_edge
  %129 = call i64 @encwrite(i8* %15, i64 1, %struct.__sFILE* %savef) #8
  %130 = icmp eq i64 %129, 1
  br i1 %130, label %rs_write_char.exit31, label %131

; <label>:131                                     ; preds = %128
  store i1 true, i1* @write_error, align 1
  br label %rs_write_char.exit31

rs_write_char.exit31.critedge:                    ; preds = %.rs_write_char.exit_crit_edge
  call void @llvm.lifetime.end(i64 1, i8* %16) #8
  %132 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %133 = load i8* %132, align 1, !tbaa !42
  call void @llvm.lifetime.start(i64 1, i8* %15) #8
  store i8 %133, i8* %15, align 1, !tbaa !28
  br label %rs_write_char.exit31

rs_write_char.exit31:                             ; preds = %rs_write_char.exit31.critedge, %131, %128, %rs_write_char.exit26.critedge, %rs_write_char.exit31.critedge140, %.rs_write_char.exit26_crit_edge, %rs_write_char.exit.critedge, %rs_write_char.exit26.critedge133, %rs_write_boolean.exit.critedge, %rs_write_char.exit.critedge128, %rs_write_coord.exit.thread, %rs_write_boolean.exit.critedge126, %rs_write_int.exit.thread.i
  call void @llvm.lifetime.end(i64 1, i8* %15) #8
  %134 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  %135 = load %struct.coord** %134, align 8, !tbaa !27
  %136 = icmp eq %struct.coord* %135, getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)
  br i1 %136, label %137, label %149

; <label>:137                                     ; preds = %rs_write_char.exit31
  %138 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %138) #8
  store i32 0, i32* %14, align 4, !tbaa !38
  %.b1.i32 = load i1* @write_error, align 1
  br i1 %.b1.i32, label %rs_write_int.exit36.thread, label %139

; <label>:139                                     ; preds = %137
  %140 = call i64 @encwrite(i8* %138, i64 4, %struct.__sFILE* %savef) #8
  %141 = icmp eq i64 %140, 4
  br i1 %141, label %rs_write_int.exit36, label %142

; <label>:142                                     ; preds = %139
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit36.thread

rs_write_int.exit36.thread:                       ; preds = %142, %137
  call void @llvm.lifetime.end(i64 4, i8* %138) #8
  %143 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %143) #8
  store i32 1, i32* %13, align 4, !tbaa !38
  br label %rs_write_int.exit41

rs_write_int.exit36:                              ; preds = %139
  %.b1.i37.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %138) #8
  %144 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %144) #8
  store i32 1, i32* %13, align 4, !tbaa !38
  br i1 %.b1.i37.pre, label %rs_write_int.exit41, label %145

; <label>:145                                     ; preds = %rs_write_int.exit36
  %146 = call i64 @encwrite(i8* %144, i64 4, %struct.__sFILE* %savef) #8
  %147 = icmp eq i64 %146, 4
  br i1 %147, label %rs_write_int.exit41, label %148

; <label>:148                                     ; preds = %145
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

; <label>:149                                     ; preds = %rs_write_char.exit31
  %150 = icmp eq %struct.coord* %135, null
  br i1 %150, label %227, label %151

; <label>:151                                     ; preds = %149
  %152 = load %union.thing** @mlist, align 8, !tbaa !1
  %153 = icmp eq %union.thing* %152, null
  br i1 %153, label %find_thing_coord.exit.thread, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %156, %151
  %i.02.i = phi i32 [ %157, %156 ], [ 0, %151 ]
  %mitem.01.i = phi %union.thing* [ %159, %156 ], [ %152, %151 ]
  %154 = getelementptr inbounds %union.thing* %mitem.01.i, i64 0, i32 0, i32 2
  %155 = icmp eq %struct.coord* %154, %135
  br i1 %155, label %find_thing_coord.exit, label %156

; <label>:156                                     ; preds = %.lr.ph.i
  %157 = add nsw i32 %i.02.i, 1
  %158 = getelementptr inbounds %union.thing* %mitem.01.i, i64 0, i32 0, i32 0
  %159 = load %union.thing** %158, align 8, !tbaa !14
  %160 = icmp eq %union.thing* %159, null
  br i1 %160, label %find_thing_coord.exit.thread, label %.lr.ph.i

find_thing_coord.exit:                            ; preds = %.lr.ph.i
  %161 = icmp sgt i32 %i.02.i, -1
  br i1 %161, label %162, label %find_thing_coord.exit.thread

; <label>:162                                     ; preds = %find_thing_coord.exit
  %163 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %163) #8
  store i32 1, i32* %12, align 4, !tbaa !38
  %.b1.i42 = load i1* @write_error, align 1
  br i1 %.b1.i42, label %rs_write_int.exit46.thread, label %164

; <label>:164                                     ; preds = %162
  %165 = call i64 @encwrite(i8* %163, i64 4, %struct.__sFILE* %savef) #8
  %166 = icmp eq i64 %165, 4
  br i1 %166, label %rs_write_int.exit46, label %167

; <label>:167                                     ; preds = %164
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit46.thread

rs_write_int.exit46.thread:                       ; preds = %167, %162
  call void @llvm.lifetime.end(i64 4, i8* %163) #8
  %168 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %168) #8
  store i32 %i.02.i, i32* %11, align 4, !tbaa !38
  br label %rs_write_int.exit41

rs_write_int.exit46:                              ; preds = %164
  %.b1.i47.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %163) #8
  %169 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %169) #8
  store i32 %i.02.i, i32* %11, align 4, !tbaa !38
  br i1 %.b1.i47.pre, label %rs_write_int.exit41, label %170

; <label>:170                                     ; preds = %rs_write_int.exit46
  %171 = call i64 @encwrite(i8* %169, i64 4, %struct.__sFILE* %savef) #8
  %172 = icmp eq i64 %171, 4
  br i1 %172, label %rs_write_int.exit41, label %173

; <label>:173                                     ; preds = %170
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

find_thing_coord.exit.thread:                     ; preds = %find_thing_coord.exit, %156, %151
  %174 = load %union.thing** @lvl_obj, align 8, !tbaa !1
  %175 = icmp eq %union.thing* %174, null
  br i1 %175, label %.lr.ph.i65, label %.lr.ph.i53

.lr.ph.i53:                                       ; preds = %179, %find_thing_coord.exit.thread
  %i.02.i52 = phi i32 [ %180, %179 ], [ 0, %find_thing_coord.exit.thread ]
  %oitem.01.i = phi %union.thing* [ %182, %179 ], [ %174, %find_thing_coord.exit.thread ]
  %176 = getelementptr inbounds %union.thing* %oitem.01.i, i64 0, i32 0, i32 2, i32 1
  %177 = bitcast i32* %176 to %struct.coord*
  %178 = icmp eq %struct.coord* %177, %135
  br i1 %178, label %find_object_coord.exit, label %179

; <label>:179                                     ; preds = %.lr.ph.i53
  %180 = add nsw i32 %i.02.i52, 1
  %181 = getelementptr inbounds %union.thing* %oitem.01.i, i64 0, i32 0, i32 0
  %182 = load %union.thing** %181, align 8, !tbaa !14
  %183 = icmp eq %union.thing* %182, null
  br i1 %183, label %.lr.ph.i65, label %.lr.ph.i53

find_object_coord.exit:                           ; preds = %.lr.ph.i53
  %184 = icmp sgt i32 %i.02.i52, -1
  br i1 %184, label %185, label %.lr.ph.i65

; <label>:185                                     ; preds = %find_object_coord.exit
  %186 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %186) #8
  store i32 2, i32* %10, align 4, !tbaa !38
  %.b1.i55 = load i1* @write_error, align 1
  br i1 %.b1.i55, label %rs_write_int.exit59.thread, label %187

; <label>:187                                     ; preds = %185
  %188 = call i64 @encwrite(i8* %186, i64 4, %struct.__sFILE* %savef) #8
  %189 = icmp eq i64 %188, 4
  br i1 %189, label %rs_write_int.exit59, label %190

; <label>:190                                     ; preds = %187
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit59.thread

rs_write_int.exit59.thread:                       ; preds = %190, %185
  call void @llvm.lifetime.end(i64 4, i8* %186) #8
  %191 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %191) #8
  store i32 %i.02.i52, i32* %9, align 4, !tbaa !38
  br label %rs_write_int.exit41

rs_write_int.exit59:                              ; preds = %187
  %.b1.i60.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %186) #8
  %192 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %192) #8
  store i32 %i.02.i52, i32* %9, align 4, !tbaa !38
  br i1 %.b1.i60.pre, label %rs_write_int.exit41, label %193

; <label>:193                                     ; preds = %rs_write_int.exit59
  %194 = call i64 @encwrite(i8* %192, i64 4, %struct.__sFILE* %savef) #8
  %195 = icmp eq i64 %194, 4
  br i1 %195, label %rs_write_int.exit41, label %196

; <label>:196                                     ; preds = %193
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

; <label>:197                                     ; preds = %.lr.ph.i65
  %198 = trunc i64 %indvars.iv.next.i to i32
  %199 = icmp slt i32 %198, 9
  br i1 %199, label %.lr.ph.i65, label %find_room_coord.exit.thread

.lr.ph.i65:                                       ; preds = %197, %find_object_coord.exit, %179, %find_thing_coord.exit.thread
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %197 ], [ 0, %179 ], [ 0, %find_thing_coord.exit.thread ], [ 0, %find_object_coord.exit ]
  %200 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %indvars.iv.i, i32 2
  %201 = icmp eq %struct.coord* %200, %135
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %201, label %find_room_coord.exit, label %197

find_room_coord.exit:                             ; preds = %.lr.ph.i65
  %202 = trunc i64 %indvars.iv.i to i32
  %203 = icmp sgt i32 %202, -1
  br i1 %203, label %204, label %find_room_coord.exit.thread

; <label>:204                                     ; preds = %find_room_coord.exit
  %205 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %205) #8
  store i32 3, i32* %7, align 4, !tbaa !38
  %.b1.i73 = load i1* @write_error, align 1
  br i1 %.b1.i73, label %rs_write_int.exit77.thread, label %206

; <label>:206                                     ; preds = %204
  %207 = call i64 @encwrite(i8* %205, i64 4, %struct.__sFILE* %savef) #8
  %208 = icmp eq i64 %207, 4
  br i1 %208, label %rs_write_int.exit77, label %209

; <label>:209                                     ; preds = %206
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit77.thread

rs_write_int.exit77.thread:                       ; preds = %209, %204
  call void @llvm.lifetime.end(i64 4, i8* %205) #8
  %210 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %210) #8
  store i32 %202, i32* %6, align 4, !tbaa !38
  br label %rs_write_int.exit41

rs_write_int.exit77:                              ; preds = %206
  %.b1.i78.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %205) #8
  %211 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %211) #8
  store i32 %202, i32* %6, align 4, !tbaa !38
  br i1 %.b1.i78.pre, label %rs_write_int.exit41, label %212

; <label>:212                                     ; preds = %rs_write_int.exit77
  %213 = call i64 @encwrite(i8* %211, i64 4, %struct.__sFILE* %savef) #8
  %214 = icmp eq i64 %213, 4
  br i1 %214, label %rs_write_int.exit41, label %215

; <label>:215                                     ; preds = %212
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

find_room_coord.exit.thread:                      ; preds = %find_room_coord.exit, %197
  %216 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %216) #8
  store i32 0, i32* %5, align 4, !tbaa !38
  %.b1.i83 = load i1* @write_error, align 1
  br i1 %.b1.i83, label %rs_write_int.exit87.thread, label %217

; <label>:217                                     ; preds = %find_room_coord.exit.thread
  %218 = call i64 @encwrite(i8* %216, i64 4, %struct.__sFILE* %savef) #8
  %219 = icmp eq i64 %218, 4
  br i1 %219, label %rs_write_int.exit87, label %220

; <label>:220                                     ; preds = %217
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit87.thread

rs_write_int.exit87.thread:                       ; preds = %220, %find_room_coord.exit.thread
  call void @llvm.lifetime.end(i64 4, i8* %216) #8
  %221 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %221) #8
  store i32 1, i32* %4, align 4, !tbaa !38
  br label %rs_write_int.exit41

rs_write_int.exit87:                              ; preds = %217
  %.b1.i88.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %216) #8
  %222 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %222) #8
  store i32 1, i32* %4, align 4, !tbaa !38
  br i1 %.b1.i88.pre, label %rs_write_int.exit41, label %223

; <label>:223                                     ; preds = %rs_write_int.exit87
  %224 = call i64 @encwrite(i8* %222, i64 4, %struct.__sFILE* %savef) #8
  %225 = icmp eq i64 %224, 4
  br i1 %225, label %rs_write_int.exit41, label %226

; <label>:226                                     ; preds = %223
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

; <label>:227                                     ; preds = %149
  %228 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %228) #8
  store i32 0, i32* %3, align 4, !tbaa !38
  %.b1.i93 = load i1* @write_error, align 1
  br i1 %.b1.i93, label %rs_write_int.exit97.thread, label %229

; <label>:229                                     ; preds = %227
  %230 = call i64 @encwrite(i8* %228, i64 4, %struct.__sFILE* %savef) #8
  %231 = icmp eq i64 %230, 4
  br i1 %231, label %rs_write_int.exit97, label %232

; <label>:232                                     ; preds = %229
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit97.thread

rs_write_int.exit97.thread:                       ; preds = %232, %227
  call void @llvm.lifetime.end(i64 4, i8* %228) #8
  %233 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %233) #8
  store i32 0, i32* %2, align 4, !tbaa !38
  br label %rs_write_int.exit41

rs_write_int.exit97:                              ; preds = %229
  %.b1.i98.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %228) #8
  %234 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %234) #8
  store i32 0, i32* %2, align 4, !tbaa !38
  br i1 %.b1.i98.pre, label %rs_write_int.exit41, label %235

; <label>:235                                     ; preds = %rs_write_int.exit97
  %236 = call i64 @encwrite(i8* %234, i64 4, %struct.__sFILE* %savef) #8
  %237 = icmp eq i64 %236, 4
  br i1 %237, label %rs_write_int.exit41, label %238

; <label>:238                                     ; preds = %235
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit41

rs_write_int.exit41:                              ; preds = %238, %235, %rs_write_int.exit97, %rs_write_int.exit97.thread, %226, %223, %rs_write_int.exit87, %rs_write_int.exit87.thread, %215, %212, %rs_write_int.exit77, %rs_write_int.exit77.thread, %196, %193, %rs_write_int.exit59, %rs_write_int.exit59.thread, %173, %170, %rs_write_int.exit46, %rs_write_int.exit46.thread, %148, %145, %rs_write_int.exit36, %rs_write_int.exit36.thread
  %239 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 8
  %240 = load i16* %239, align 2, !tbaa !18
  %241 = bitcast i16* %1 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %241) #8
  store i16 %240, i16* %1, align 2, !tbaa !118
  %.b1.i103 = load i1* @write_error, align 1
  br i1 %.b1.i103, label %rs_write_short.exit, label %242

; <label>:242                                     ; preds = %rs_write_int.exit41
  %243 = call i64 @encwrite(i8* %241, i64 2, %struct.__sFILE* %savef) #8
  %244 = icmp eq i64 %243, 2
  br i1 %244, label %rs_write_short.exit, label %245

; <label>:245                                     ; preds = %242
  store i1 true, i1* @write_error, align 1
  br label %rs_write_short.exit

rs_write_short.exit:                              ; preds = %245, %242, %rs_write_int.exit41
  call void @llvm.lifetime.end(i64 2, i8* %241) #8
  %246 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 9
  %247 = call i32 @rs_write_stats(%struct.__sFILE* %savef, %struct.stats* %246)
  %248 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 10
  %249 = load %struct.room** %248, align 8, !tbaa !24
  %.b1.i67 = load i1* @write_error, align 1
  br i1 %.b1.i67, label %rs_write_room_reference.exit, label %250

; <label>:250                                     ; preds = %rs_write_short.exit
  %not..i68 = icmp ne %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0)
  %i.0.room.0.i = sext i1 %not..i68 to i32
  %251 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 1)
  %i.0.room.0.1.i = select i1 %251, i32 1, i32 %i.0.room.0.i
  %252 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 2)
  %i.0.room.0.2.i = select i1 %252, i32 2, i32 %i.0.room.0.1.i
  %253 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 3)
  %i.0.room.0.3.i = select i1 %253, i32 3, i32 %i.0.room.0.2.i
  %254 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 4)
  %i.0.room.0.4.i = select i1 %254, i32 4, i32 %i.0.room.0.3.i
  %255 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 5)
  %i.0.room.0.5.i = select i1 %255, i32 5, i32 %i.0.room.0.4.i
  %256 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 6)
  %i.0.room.0.6.i = select i1 %256, i32 6, i32 %i.0.room.0.5.i
  %257 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 7)
  %i.0.room.0.7.i = select i1 %257, i32 7, i32 %i.0.room.0.6.i
  %258 = icmp eq %struct.room* %249, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 8)
  %i.0.room.0.8.i = select i1 %258, i32 8, i32 %i.0.room.0.7.i
  %259 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %259) #8
  store i32 %i.0.room.0.8.i, i32* %8, align 4, !tbaa !38
  %260 = call i64 @encwrite(i8* %259, i64 4, %struct.__sFILE* %savef) #8
  %261 = icmp eq i64 %260, 4
  br i1 %261, label %rs_write_room_reference.exit, label %262

; <label>:262                                     ; preds = %250
  store i1 true, i1* @write_error, align 1
  br label %rs_write_room_reference.exit

rs_write_room_reference.exit:                     ; preds = %262, %250, %rs_write_short.exit
  %263 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 11
  %264 = load %union.thing** %263, align 8, !tbaa !51
  %265 = call i32 @rs_write_object_list(%struct.__sFILE* %savef, %union.thing* %264)
  %.b = load i1* @write_error, align 1
  %266 = zext i1 %.b to i32
  br label %267

; <label>:267                                     ; preds = %rs_write_room_reference.exit, %rs_write_int.exit, %0
  %.0 = phi i32 [ %35, %rs_write_int.exit ], [ %266, %rs_write_room_reference.exit ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_thing(%struct.__sFILE* %inf, %union.thing* %t) #0 {
  %input.i.i90 = alloca i32, align 4
  %input.i80 = alloca i16, align 2
  %input.i69 = alloca i32, align 4
  %input.i58 = alloca i32, align 4
  %buf.i = alloca i8, align 1
  %input.i7.i = alloca i32, align 4
  %input.i.i12 = alloca i32, align 4
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b3 = load i1* @read_error, align 1
  %.b4 = load i1* @format_error, align 1
  %or.cond = or i1 %.b3, %.b4
  br i1 %or.cond, label %124, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i7 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i7
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628478
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_boolean.exit.thread

rs_read_boolean.exit.thread:                      ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  br label %rs_read_char.exit

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i9 = or i1 %.b2.i7, %.b4.i.i
  br i1 %or.cond.i9, label %rs_read_int.exit.thread, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_read_int.exit, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %14, %11
  %15 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %rs_read_int.exit.rs_read_int.exit.thread_crit_edge

rs_read_int.exit.rs_read_int.exit.thread_crit_edge: ; preds = %rs_read_int.exit
  %.b3.i13.pre = load i1* @read_error, align 1
  %.b4.i14.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit.thread

; <label>:17                                      ; preds = %rs_read_int.exit
  %.b6 = load i1* @format_error, align 1
  %.b2 = load i1* @read_error, align 1
  %..b2 = or i1 %.b6, %.b2
  %18 = zext i1 %..b2 to i32
  br label %124

rs_read_int.exit.thread:                          ; preds = %rs_read_int.exit.rs_read_int.exit.thread_crit_edge, %rs_read_marker.exit
  %.b4.i14 = phi i1 [ %.b4.i14.pre, %rs_read_int.exit.rs_read_int.exit.thread_crit_edge ], [ %.b4.i.i, %rs_read_marker.exit ]
  %.b3.i13 = phi i1 [ %.b3.i13.pre, %rs_read_int.exit.rs_read_int.exit.thread_crit_edge ], [ %.b2.i7, %rs_read_marker.exit ]
  %19 = phi i32 [ %15, %rs_read_int.exit.rs_read_int.exit.thread_crit_edge ], [ -1, %rs_read_marker.exit ]
  %or.cond.i15 = or i1 %.b3.i13, %.b4.i14
  br i1 %or.cond.i15, label %rs_read_coord.exit, label %20

; <label>:20                                      ; preds = %rs_read_int.exit.thread
  %21 = bitcast i32* %input.i.i12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %21) #8
  store i32 0, i32* %input.i.i12, align 4, !tbaa !38
  %22 = call i64 @encread(i8* %21, i64 4, %struct.__sFILE* %inf) #8
  %23 = icmp eq i64 %22, 4
  br i1 %23, label %.rs_read.exit.i_crit_edge.i, label %24

.rs_read.exit.i_crit_edge.i:                      ; preds = %20
  %.b2.i8.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i16

; <label>:24                                      ; preds = %20
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i16

rs_read_int.exit.i16:                             ; preds = %24, %.rs_read.exit.i_crit_edge.i
  %.b2.i8.pre.i = phi i1 [ %.b2.i8.pre.pre.i, %.rs_read.exit.i_crit_edge.i ], [ true, %24 ]
  %25 = load i32* %input.i.i12, align 4, !tbaa !38
  %.b3.i9.pre.i = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %21) #8
  %26 = bitcast i32* %input.i7.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %26) #8
  store i32 0, i32* %input.i7.i, align 4, !tbaa !38
  %or.cond.i10.i = or i1 %.b2.i8.pre.i, %.b3.i9.pre.i
  br i1 %or.cond.i10.i, label %rs_read_int.exit17.i, label %27

; <label>:27                                      ; preds = %rs_read_int.exit.i16
  %28 = call i64 @encread(i8* %26, i64 4, %struct.__sFILE* %inf) #8
  %29 = icmp eq i64 %28, 4
  br i1 %29, label %.rs_read.exit.i15_crit_edge.i, label %30

.rs_read.exit.i15_crit_edge.i:                    ; preds = %27
  %.b2.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i

; <label>:30                                      ; preds = %27
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i

rs_read.exit.i15.i:                               ; preds = %30, %.rs_read.exit.i15_crit_edge.i
  %.b2.pre.i = phi i1 [ %.b2.pre.pre.i, %.rs_read.exit.i15_crit_edge.i ], [ true, %30 ]
  %31 = load i32* %input.i7.i, align 4, !tbaa !38
  %.b6.pre.i = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i

rs_read_int.exit17.i:                             ; preds = %rs_read.exit.i15.i, %rs_read_int.exit.i16
  %.b.i17 = phi i1 [ %.b2.pre.i, %rs_read.exit.i15.i ], [ %.b2.i8.pre.i, %rs_read_int.exit.i16 ]
  %.b5.i = phi i1 [ %.b6.pre.i, %rs_read.exit.i15.i ], [ %.b3.i9.pre.i, %rs_read_int.exit.i16 ]
  %32 = phi i32 [ %31, %rs_read.exit.i15.i ], [ undef, %rs_read_int.exit.i16 ]
  call void @llvm.lifetime.end(i64 4, i8* %26) #8
  %..b2.i = or i1 %.b5.i, %.b.i17
  br i1 %..b2.i, label %rs_read_coord.exit, label %33

; <label>:33                                      ; preds = %rs_read_int.exit17.i
  %34 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 2, i32 0
  store i32 %25, i32* %34, align 4, !tbaa !21
  %35 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 2, i32 1
  store i32 %32, i32* %35, align 4, !tbaa !20
  br label %rs_read_coord.exit

rs_read_coord.exit:                               ; preds = %33, %rs_read_int.exit17.i, %rs_read_int.exit.thread
  %.b3.i19 = phi i1 [ %.b4.i14, %rs_read_int.exit.thread ], [ %.b5.i, %rs_read_int.exit17.i ], [ false, %33 ]
  %.b2.i18 = phi i1 [ %.b3.i13, %rs_read_int.exit.thread ], [ %.b.i17, %rs_read_int.exit17.i ], [ false, %33 ]
  %36 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 3
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 0, i8* %buf.i, align 1, !tbaa !28
  %or.cond.i20 = or i1 %.b2.i18, %.b3.i19
  br i1 %or.cond.i20, label %rs_read_boolean.exit, label %37

; <label>:37                                      ; preds = %rs_read_coord.exit
  %38 = call i64 @encread(i8* %buf.i, i64 1, %struct.__sFILE* %inf) #8
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %rs_read.exit.i24, label %40

; <label>:40                                      ; preds = %37
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i24

rs_read.exit.i24:                                 ; preds = %40, %37
  %41 = load i8* %buf.i, align 1, !tbaa !28
  %42 = icmp ne i8 %41, 0
  %43 = zext i1 %42 to i8
  store i8 %43, i8* %36, align 1, !tbaa !5
  %.b2.i26.pre = load i1* @read_error, align 1
  %.b3.i27.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit

rs_read_boolean.exit:                             ; preds = %rs_read.exit.i24, %rs_read_coord.exit
  %.b3.i27 = phi i1 [ %.b3.i19, %rs_read_coord.exit ], [ %.b3.i27.pre, %rs_read.exit.i24 ]
  %.b2.i26 = phi i1 [ %.b2.i18, %rs_read_coord.exit ], [ %.b2.i26.pre, %rs_read.exit.i24 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %or.cond.i28 = or i1 %.b2.i26, %.b3.i27
  br i1 %or.cond.i28, label %rs_read_char.exit, label %44

; <label>:44                                      ; preds = %rs_read_boolean.exit
  %45 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 4
  %46 = call i64 @encread(i8* %45, i64 1, %struct.__sFILE* %inf) #8
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %.rs_read_char.exit_crit_edge, label %rs_read_char.exit.thread

.rs_read_char.exit_crit_edge:                     ; preds = %44
  %.b2.i36.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit

rs_read_char.exit.thread:                         ; preds = %44
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit79.thread

rs_read_char.exit:                                ; preds = %.rs_read_char.exit_crit_edge, %rs_read_boolean.exit, %rs_read_boolean.exit.thread
  %48 = phi i32 [ %19, %.rs_read_char.exit_crit_edge ], [ %19, %rs_read_boolean.exit ], [ -1, %rs_read_boolean.exit.thread ]
  %.b2.i36 = phi i1 [ %.b2.i36.pre, %.rs_read_char.exit_crit_edge ], [ %.b2.i26, %rs_read_boolean.exit ], [ %.b2.i7, %rs_read_boolean.exit.thread ]
  %.b3.i37 = load i1* @format_error, align 1
  %or.cond.i38 = or i1 %.b2.i36, %.b3.i37
  br i1 %or.cond.i38, label %rs_read_char.exit46, label %49

; <label>:49                                      ; preds = %rs_read_char.exit
  %50 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 5
  %51 = call i64 @encread(i8* %50, i64 1, %struct.__sFILE* %inf) #8
  %52 = icmp eq i64 %51, 1
  br i1 %52, label %.rs_read_char.exit46_crit_edge, label %53

.rs_read_char.exit46_crit_edge:                   ; preds = %49
  %.b2.i47.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit46

; <label>:53                                      ; preds = %49
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit79.thread

rs_read_char.exit46:                              ; preds = %.rs_read_char.exit46_crit_edge, %rs_read_char.exit
  %.b2.i47 = phi i1 [ %.b2.i47.pre, %.rs_read_char.exit46_crit_edge ], [ %.b2.i36, %rs_read_char.exit ]
  %.b3.i48 = load i1* @format_error, align 1
  %or.cond.i49 = or i1 %.b2.i47, %.b3.i48
  br i1 %or.cond.i49, label %rs_read_char.exit57, label %54

; <label>:54                                      ; preds = %rs_read_char.exit46
  %55 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 6
  %56 = call i64 @encread(i8* %55, i64 1, %struct.__sFILE* %inf) #8
  %57 = icmp eq i64 %56, 1
  br i1 %57, label %.rs_read_char.exit57_crit_edge, label %58

.rs_read_char.exit57_crit_edge:                   ; preds = %54
  %.b2.i59.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit57

; <label>:58                                      ; preds = %54
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit79.thread

rs_read_int.exit79.thread:                        ; preds = %58, %53, %rs_read_char.exit.thread
  %.ph122 = phi i32 [ %48, %58 ], [ %48, %53 ], [ %19, %rs_read_char.exit.thread ]
  %59 = bitcast i32* %input.i58 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %59) #8
  call void @llvm.lifetime.end(i64 4, i8* %59) #8
  %60 = bitcast i32* %input.i69 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %60) #8
  call void @llvm.lifetime.end(i64 4, i8* %60) #8
  %61 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 12
  store i32 -1, i32* %61, align 4, !tbaa !146
  br label %77

rs_read_char.exit57:                              ; preds = %.rs_read_char.exit57_crit_edge, %rs_read_char.exit46
  %.b2.i59 = phi i1 [ %.b2.i59.pre, %.rs_read_char.exit57_crit_edge ], [ %.b2.i47, %rs_read_char.exit46 ]
  %62 = bitcast i32* %input.i58 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %62) #8
  store i32 0, i32* %input.i58, align 4, !tbaa !38
  %.b3.i60 = load i1* @format_error, align 1
  %or.cond.i61 = or i1 %.b2.i59, %.b3.i60
  br i1 %or.cond.i61, label %rs_read_int.exit68, label %63

; <label>:63                                      ; preds = %rs_read_char.exit57
  %64 = call i64 @encread(i8* %62, i64 4, %struct.__sFILE* %inf) #8
  %65 = icmp eq i64 %64, 4
  br i1 %65, label %.rs_read.exit.i66_crit_edge, label %66

.rs_read.exit.i66_crit_edge:                      ; preds = %63
  %.b2.i70.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i66

; <label>:66                                      ; preds = %63
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i66

rs_read.exit.i66:                                 ; preds = %66, %.rs_read.exit.i66_crit_edge
  %.b2.i70.pre = phi i1 [ %.b2.i70.pre.pre, %.rs_read.exit.i66_crit_edge ], [ true, %66 ]
  %67 = load i32* %input.i58, align 4, !tbaa !38
  %.b3.i71.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit68

rs_read_int.exit68:                               ; preds = %rs_read.exit.i66, %rs_read_char.exit57
  %.b3.i71 = phi i1 [ %.b3.i71.pre, %rs_read.exit.i66 ], [ %.b3.i60, %rs_read_char.exit57 ]
  %.b2.i70 = phi i1 [ %.b2.i70.pre, %rs_read.exit.i66 ], [ %.b2.i59, %rs_read_char.exit57 ]
  %68 = phi i32 [ %67, %rs_read.exit.i66 ], [ 0, %rs_read_char.exit57 ]
  call void @llvm.lifetime.end(i64 4, i8* %62) #8
  %69 = bitcast i32* %input.i69 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %69) #8
  store i32 0, i32* %input.i69, align 4, !tbaa !38
  %or.cond.i72 = or i1 %.b2.i70, %.b3.i71
  br i1 %or.cond.i72, label %rs_read_int.exit79, label %70

; <label>:70                                      ; preds = %rs_read_int.exit68
  %71 = call i64 @encread(i8* %69, i64 4, %struct.__sFILE* %inf) #8
  %72 = icmp eq i64 %71, 4
  br i1 %72, label %rs_read.exit.i77, label %73

; <label>:73                                      ; preds = %70
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i77

rs_read.exit.i77:                                 ; preds = %73, %70
  %74 = load i32* %input.i69, align 4, !tbaa !38
  br label %rs_read_int.exit79

rs_read_int.exit79:                               ; preds = %rs_read.exit.i77, %rs_read_int.exit68
  %75 = phi i32 [ %74, %rs_read.exit.i77 ], [ %48, %rs_read_int.exit68 ]
  call void @llvm.lifetime.end(i64 4, i8* %69) #8
  %76 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 12
  store i32 -1, i32* %76, align 4, !tbaa !146
  switch i32 %68, label %102 [
    i32 0, label %77
    i32 1, label %83
    i32 2, label %85
    i32 3, label %98
  ]

; <label>:77                                      ; preds = %rs_read_int.exit79, %rs_read_int.exit79.thread
  %78 = phi i32 [ %.ph122, %rs_read_int.exit79.thread ], [ %75, %rs_read_int.exit79 ]
  %79 = icmp eq i32 %78, 1
  %80 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  br i1 %79, label %81, label %82

; <label>:81                                      ; preds = %77
  store %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord** %80, align 8, !tbaa !27
  br label %get_list_item.exit.thread

; <label>:82                                      ; preds = %77
  store %struct.coord* null, %struct.coord** %80, align 8, !tbaa !27
  br label %get_list_item.exit.thread

; <label>:83                                      ; preds = %rs_read_int.exit79
  %84 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  store %struct.coord* null, %struct.coord** %84, align 8, !tbaa !27
  store i32 %75, i32* %76, align 4, !tbaa !146
  br label %get_list_item.exit.thread

; <label>:85                                      ; preds = %rs_read_int.exit79
  %86 = load %union.thing** @lvl_obj, align 8, !tbaa !1
  %87 = icmp eq %union.thing* %86, null
  br i1 %87, label %get_list_item.exit.thread, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %89, %85
  %count.04.i = phi i32 [ %90, %89 ], [ 0, %85 ]
  %.013.i = phi %union.thing* [ %92, %89 ], [ %86, %85 ]
  %88 = icmp eq i32 %count.04.i, %75
  br i1 %88, label %94, label %89

; <label>:89                                      ; preds = %.lr.ph.i
  %90 = add nsw i32 %count.04.i, 1
  %91 = getelementptr inbounds %union.thing* %.013.i, i64 0, i32 0, i32 0
  %92 = load %union.thing** %91, align 8, !tbaa !14
  %93 = icmp eq %union.thing* %92, null
  br i1 %93, label %get_list_item.exit.thread, label %.lr.ph.i

; <label>:94                                      ; preds = %.lr.ph.i
  %95 = getelementptr inbounds %union.thing* %.013.i, i64 0, i32 0, i32 2, i32 1
  %96 = bitcast i32* %95 to %struct.coord*
  %97 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  store %struct.coord* %96, %struct.coord** %97, align 8, !tbaa !27
  br label %get_list_item.exit.thread

; <label>:98                                      ; preds = %rs_read_int.exit79
  %99 = sext i32 %75 to i64
  %100 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %99, i32 2
  %101 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  store %struct.coord* %100, %struct.coord** %101, align 8, !tbaa !27
  br label %get_list_item.exit.thread

; <label>:102                                     ; preds = %rs_read_int.exit79
  %103 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  store %struct.coord* null, %struct.coord** %103, align 8, !tbaa !27
  br label %get_list_item.exit.thread

get_list_item.exit.thread:                        ; preds = %102, %98, %94, %89, %85, %83, %82, %81
  %104 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 8
  %105 = bitcast i16* %input.i80 to i8*
  call void @llvm.lifetime.start(i64 2, i8* %105) #8
  %.b2.i81 = load i1* @read_error, align 1
  %.b3.i82 = load i1* @format_error, align 1
  %or.cond.i83 = or i1 %.b2.i81, %.b3.i82
  br i1 %or.cond.i83, label %rs_read_short.exit, label %106

; <label>:106                                     ; preds = %get_list_item.exit.thread
  %107 = call i64 @encread(i8* %105, i64 2, %struct.__sFILE* %inf) #8
  %108 = icmp eq i64 %107, 2
  br i1 %108, label %rs_read.exit.i88, label %109

; <label>:109                                     ; preds = %106
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i88

rs_read.exit.i88:                                 ; preds = %109, %106
  %110 = load i16* %input.i80, align 2, !tbaa !118
  store i16 %110, i16* %104, align 2, !tbaa !118
  br label %rs_read_short.exit

rs_read_short.exit:                               ; preds = %rs_read.exit.i88, %get_list_item.exit.thread
  call void @llvm.lifetime.end(i64 2, i8* %105) #8
  %111 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 9
  %112 = call i32 @rs_read_stats(%struct.__sFILE* %inf, %struct.stats* %111)
  %113 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 10
  %.b2.i91 = load i1* @read_error, align 1
  %.b3.i92 = load i1* @format_error, align 1
  %or.cond.i93 = or i1 %.b2.i91, %.b3.i92
  br i1 %or.cond.i93, label %rs_read_room_reference.exit, label %114

; <label>:114                                     ; preds = %rs_read_short.exit
  %115 = bitcast i32* %input.i.i90 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %115) #8
  store i32 0, i32* %input.i.i90, align 4, !tbaa !38
  %116 = call i64 @encread(i8* %115, i64 4, %struct.__sFILE* %inf) #8
  %117 = icmp eq i64 %116, 4
  br i1 %117, label %rs_read_int.exit.i97, label %118

; <label>:118                                     ; preds = %114
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i97

rs_read_int.exit.i97:                             ; preds = %118, %114
  %119 = load i32* %input.i.i90, align 4, !tbaa !38
  %phitmp.i = sext i32 %119 to i64
  call void @llvm.lifetime.end(i64 4, i8* %115) #8
  %120 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %phitmp.i
  store %struct.room* %120, %struct.room** %113, align 8, !tbaa !1
  br label %rs_read_room_reference.exit

rs_read_room_reference.exit:                      ; preds = %rs_read_int.exit.i97, %rs_read_short.exit
  %121 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 11
  %122 = call i32 @rs_read_object_list(%struct.__sFILE* %inf, %union.thing** %121)
  %.b5 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b5, %.b
  %123 = zext i1 %..b to i32
  br label %124

; <label>:124                                     ; preds = %rs_read_room_reference.exit, %17, %0
  %.0 = phi i32 [ %18, %17 ], [ %123, %rs_read_room_reference.exit ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @rs_fix_thing(%union.thing* nocapture %t) #0 {
  %1 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 12
  %2 = load i32* %1, align 4, !tbaa !146
  %3 = icmp slt i32 %2, 0
  br i1 %3, label %get_list_item.exit.thread, label %4

; <label>:4                                       ; preds = %0
  %5 = load %union.thing** @mlist, align 8, !tbaa !1
  %6 = icmp eq %union.thing* %5, null
  br i1 %6, label %get_list_item.exit.thread, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %8, %4
  %count.04.i = phi i32 [ %9, %8 ], [ 0, %4 ]
  %.013.i = phi %union.thing* [ %11, %8 ], [ %5, %4 ]
  %7 = icmp eq i32 %count.04.i, %2
  br i1 %7, label %13, label %8

; <label>:8                                       ; preds = %.lr.ph.i
  %9 = add nsw i32 %count.04.i, 1
  %10 = getelementptr inbounds %union.thing* %.013.i, i64 0, i32 0, i32 0
  %11 = load %union.thing** %10, align 8, !tbaa !14
  %12 = icmp eq %union.thing* %11, null
  br i1 %12, label %get_list_item.exit.thread, label %.lr.ph.i

; <label>:13                                      ; preds = %.lr.ph.i
  %14 = getelementptr inbounds %union.thing* %.013.i, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %union.thing* %t, i64 0, i32 0, i32 7
  store %struct.coord* %14, %struct.coord** %15, align 8, !tbaa !27
  br label %get_list_item.exit.thread

get_list_item.exit.thread:                        ; preds = %13, %8, %4, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_thing_list(%struct.__sFILE* %savef, %union.thing* %l) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b3 = load i1* @write_error, align 1
  br i1 %.b3, label %26, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 -1412628471, i32* %2, align 4, !tbaa !38
  %5 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %6 = icmp eq i64 %5, 4
  br i1 %6, label %rs_write_marker.exit, label %7

; <label>:7                                       ; preds = %3
  store i1 true, i1* @write_error, align 1
  br label %rs_write_marker.exit

rs_write_marker.exit:                             ; preds = %7, %3
  %8 = icmp eq %union.thing* %l, null
  br i1 %8, label %list_size.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %rs_write_marker.exit
  %count.02.i = phi i32 [ %9, %.lr.ph.i ], [ 0, %rs_write_marker.exit ]
  %.01.i = phi %union.thing* [ %11, %.lr.ph.i ], [ %l, %rs_write_marker.exit ]
  %9 = add nsw i32 %count.02.i, 1
  %10 = getelementptr inbounds %union.thing* %.01.i, i64 0, i32 0, i32 0
  %11 = load %union.thing** %10, align 8, !tbaa !14
  %12 = icmp eq %union.thing* %11, null
  br i1 %12, label %list_size.exit, label %.lr.ph.i

list_size.exit:                                   ; preds = %.lr.ph.i, %rs_write_marker.exit
  %count.0.lcssa.i = phi i32 [ 0, %rs_write_marker.exit ], [ %9, %.lr.ph.i ]
  %13 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %13) #8
  store i32 %count.0.lcssa.i, i32* %1, align 4, !tbaa !38
  %.b1.i4 = load i1* @write_error, align 1
  br i1 %.b1.i4, label %rs_write_int.exit, label %14

; <label>:14                                      ; preds = %list_size.exit
  %15 = call i64 @encwrite(i8* %13, i64 4, %struct.__sFILE* %savef) #8
  %16 = icmp eq i64 %15, 4
  br i1 %16, label %rs_write_int.exit, label %17

; <label>:17                                      ; preds = %14
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %17, %14, %list_size.exit
  call void @llvm.lifetime.end(i64 4, i8* %13) #8
  %18 = icmp slt i32 %count.0.lcssa.i, 1
  br i1 %18, label %19, label %.preheader

.preheader:                                       ; preds = %rs_write_int.exit
  br i1 %8, label %._crit_edge, label %.lr.ph

; <label>:19                                      ; preds = %rs_write_int.exit
  %.b2 = load i1* @write_error, align 1
  %20 = zext i1 %.b2 to i32
  br label %26

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %.07 = phi %union.thing* [ %23, %.lr.ph ], [ %l, %.preheader ]
  %21 = call i32 @rs_write_thing(%struct.__sFILE* %savef, %union.thing* %.07)
  %22 = getelementptr inbounds %union.thing* %.07, i64 0, i32 0, i32 0
  %23 = load %union.thing** %22, align 8, !tbaa !14
  %24 = icmp eq %union.thing* %23, null
  br i1 %24, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %.b = load i1* @write_error, align 1
  %25 = zext i1 %.b to i32
  br label %26

; <label>:26                                      ; preds = %._crit_edge, %19, %0
  %.01 = phi i32 [ %20, %19 ], [ %25, %._crit_edge ], [ 1, %0 ]
  ret i32 %.01
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_thing_list(%struct.__sFILE* %inf, %union.thing** nocapture %list) #0 {
  %input.i = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %28, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %.rs_read.exit_crit_edge.i.i, label %5

.rs_read.exit_crit_edge.i.i:                      ; preds = %1
  %.b.pre.i.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %5, %.rs_read.exit_crit_edge.i.i
  %.b2.i5 = phi i1 [ %.b.pre.i.i, %.rs_read.exit_crit_edge.i.i ], [ true, %5 ]
  %6 = load i32* %input.i.i, align 4, !tbaa !38
  %.b4.i.i = load i1* @format_error, align 1
  %7 = or i1 %.b4.i.i, %.b2.i5
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %8 = icmp eq i32 %6, -1412628471
  %or.cond6.i = or i1 %7, %8
  br i1 %or.cond6.i, label %rs_read_marker.exit, label %rs_read_marker.exit.thread

rs_read_marker.exit.thread:                       ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  %9 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %9) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  br label %rs_read_int.exit.thread

rs_read_marker.exit:                              ; preds = %rs_read_int.exit.i
  %10 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %10) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i7 = or i1 %.b2.i5, %.b4.i.i
  br i1 %or.cond.i7, label %rs_read_int.exit.thread, label %11

; <label>:11                                      ; preds = %rs_read_marker.exit
  %12 = call i64 @encread(i8* %10, i64 4, %struct.__sFILE* %inf) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_read_int.exit, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit.thread:                          ; preds = %rs_read_marker.exit, %rs_read_marker.exit.thread
  %.ph = phi i8* [ %10, %rs_read_marker.exit ], [ %9, %rs_read_marker.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph) #8
  br label %._crit_edge.thread

rs_read_int.exit:                                 ; preds = %14, %11
  %15 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %10) #8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %.lr.ph, label %._crit_edge.thread

.lr.ph:                                           ; preds = %22, %rs_read_int.exit
  %head.012 = phi %union.thing* [ %.head.0, %22 ], [ null, %rs_read_int.exit ]
  %l.011 = phi %union.thing* [ %17, %22 ], [ null, %rs_read_int.exit ]
  %i.010 = phi i32 [ %24, %22 ], [ 0, %rs_read_int.exit ]
  %17 = call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %18 = getelementptr inbounds %union.thing* %17, i64 0, i32 0, i32 1
  store %union.thing* %l.011, %union.thing** %18, align 8, !tbaa !87
  %19 = icmp eq %union.thing* %l.011, null
  br i1 %19, label %22, label %20

; <label>:20                                      ; preds = %.lr.ph
  %21 = getelementptr inbounds %union.thing* %l.011, i64 0, i32 0, i32 0
  store %union.thing* %17, %union.thing** %21, align 8, !tbaa !14
  br label %22

; <label>:22                                      ; preds = %20, %.lr.ph
  %23 = call i32 @rs_read_thing(%struct.__sFILE* %inf, %union.thing* %17)
  %.head.0 = select i1 %19, %union.thing* %17, %union.thing* %head.012
  %24 = add nsw i32 %i.010, 1
  %exitcond = icmp eq i32 %24, %15
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %22
  %25 = icmp eq %union.thing* %17, null
  br i1 %25, label %._crit_edge.thread, label %26

; <label>:26                                      ; preds = %._crit_edge
  %27 = getelementptr inbounds %union.thing* %17, i64 0, i32 0, i32 0
  store %union.thing* null, %union.thing** %27, align 8, !tbaa !14
  br label %._crit_edge.thread

._crit_edge.thread:                               ; preds = %26, %._crit_edge, %rs_read_int.exit, %rs_read_int.exit.thread
  %head.0.lcssa16 = phi %union.thing* [ %.head.0, %._crit_edge ], [ %.head.0, %26 ], [ null, %rs_read_int.exit ], [ null, %rs_read_int.exit.thread ]
  store %union.thing* %head.0.lcssa16, %union.thing** %list, align 8, !tbaa !1
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %28

; <label>:28                                      ; preds = %._crit_edge.thread, %0
  %..b2.sink = phi i1 [ %..b, %._crit_edge.thread ], [ true, %0 ]
  %29 = zext i1 %..b2.sink to i32
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define void @rs_fix_thing_list(%union.thing* %list) #0 {
  %1 = icmp eq %union.thing* %list, null
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %rs_fix_thing.exit, %0
  %item.02 = phi %union.thing* [ %18, %rs_fix_thing.exit ], [ %list, %0 ]
  %2 = getelementptr inbounds %union.thing* %item.02, i64 0, i32 0, i32 12
  %3 = load i32* %2, align 4, !tbaa !146
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %rs_fix_thing.exit, label %5

; <label>:5                                       ; preds = %.lr.ph
  %6 = load %union.thing** @mlist, align 8, !tbaa !1
  %7 = icmp eq %union.thing* %6, null
  br i1 %7, label %rs_fix_thing.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %9, %5
  %count.04.i.i = phi i32 [ %10, %9 ], [ 0, %5 ]
  %.013.i.i = phi %union.thing* [ %12, %9 ], [ %6, %5 ]
  %8 = icmp eq i32 %count.04.i.i, %3
  br i1 %8, label %14, label %9

; <label>:9                                       ; preds = %.lr.ph.i.i
  %10 = add nsw i32 %count.04.i.i, 1
  %11 = getelementptr inbounds %union.thing* %.013.i.i, i64 0, i32 0, i32 0
  %12 = load %union.thing** %11, align 8, !tbaa !14
  %13 = icmp eq %union.thing* %12, null
  br i1 %13, label %rs_fix_thing.exit, label %.lr.ph.i.i

; <label>:14                                      ; preds = %.lr.ph.i.i
  %15 = getelementptr inbounds %union.thing* %.013.i.i, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %union.thing* %item.02, i64 0, i32 0, i32 7
  store %struct.coord* %15, %struct.coord** %16, align 8, !tbaa !27
  br label %rs_fix_thing.exit

rs_fix_thing.exit:                                ; preds = %14, %9, %5, %.lr.ph
  %17 = getelementptr inbounds %union.thing* %item.02, i64 0, i32 0, i32 0
  %18 = load %union.thing** %17, align 8, !tbaa !14
  %19 = icmp eq %union.thing* %18, null
  br i1 %19, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %rs_fix_thing.exit, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_thing_reference(%struct.__sFILE* %savef, %union.thing* readonly %list, %union.thing* readnone %item) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %22, label %3

; <label>:3                                       ; preds = %0
  %4 = icmp eq %union.thing* %item, null
  br i1 %4, label %5, label %10

; <label>:5                                       ; preds = %3
  %6 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #8
  store i32 -1, i32* %2, align 4, !tbaa !38
  %7 = call i64 @encwrite(i8* %6, i64 4, %struct.__sFILE* %savef) #8
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %rs_write_int.exit, label %9

; <label>:9                                       ; preds = %5
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

; <label>:10                                      ; preds = %3
  %11 = icmp eq %union.thing* %list, null
  br i1 %11, label %.loopexit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %13, %10
  %count.03.i = phi i32 [ %14, %13 ], [ 0, %10 ]
  %.012.i = phi %union.thing* [ %16, %13 ], [ %list, %10 ]
  %12 = icmp eq %union.thing* %.012.i, %item
  br i1 %12, label %.loopexit, label %13

; <label>:13                                      ; preds = %.lr.ph.i
  %14 = add nsw i32 %count.03.i, 1
  %15 = getelementptr inbounds %union.thing* %.012.i, i64 0, i32 0, i32 0
  %16 = load %union.thing** %15, align 8, !tbaa !14
  %17 = icmp eq %union.thing* %16, null
  br i1 %17, label %.loopexit, label %.lr.ph.i

.loopexit:                                        ; preds = %13, %.lr.ph.i, %10
  %.0.i = phi i32 [ -1, %10 ], [ -1, %13 ], [ %count.03.i, %.lr.ph.i ]
  %18 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #8
  store i32 %.0.i, i32* %1, align 4, !tbaa !38
  %19 = call i64 @encwrite(i8* %18, i64 4, %struct.__sFILE* %savef) #8
  %20 = icmp eq i64 %19, 4
  br i1 %20, label %rs_write_int.exit, label %21

; <label>:21                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit

rs_write_int.exit:                                ; preds = %21, %.loopexit, %9, %5
  %.b = load i1* @write_error, align 1
  br label %22

; <label>:22                                      ; preds = %rs_write_int.exit, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit ], [ true, %0 ]
  %23 = zext i1 %.b1.sink to i32
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_thing_reference(%struct.__sFILE* %inf, %union.thing* %list, %union.thing** nocapture %item) #0 {
  %input.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %15, label %1

; <label>:1                                       ; preds = %0
  %2 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %3 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %4 = icmp eq i64 %3, 4
  br i1 %4, label %rs_read_int.exit, label %5

; <label>:5                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %5, %1
  %6 = load i32* %input.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %7 = icmp eq i32 %6, -1
  %8 = icmp eq %union.thing* %list, null
  %or.cond5 = or i1 %7, %8
  br i1 %or.cond5, label %get_list_item.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %10, %rs_read_int.exit
  %count.04.i = phi i32 [ %11, %10 ], [ 0, %rs_read_int.exit ]
  %.013.i = phi %union.thing* [ %13, %10 ], [ %list, %rs_read_int.exit ]
  %9 = icmp eq i32 %count.04.i, %6
  br i1 %9, label %get_list_item.exit, label %10

; <label>:10                                      ; preds = %.lr.ph.i
  %11 = add nsw i32 %count.04.i, 1
  %12 = getelementptr inbounds %union.thing* %.013.i, i64 0, i32 0, i32 0
  %13 = load %union.thing** %12, align 8, !tbaa !14
  %14 = icmp eq %union.thing* %13, null
  br i1 %14, label %get_list_item.exit, label %.lr.ph.i

get_list_item.exit:                               ; preds = %10, %.lr.ph.i, %rs_read_int.exit
  %storemerge = phi %union.thing* [ null, %rs_read_int.exit ], [ null, %10 ], [ %.013.i, %.lr.ph.i ]
  store %union.thing* %storemerge, %union.thing** %item, align 8, !tbaa !1
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %15

; <label>:15                                      ; preds = %get_list_item.exit, %0
  %..b2.sink = phi i1 [ %..b, %get_list_item.exit ], [ true, %0 ]
  %16 = zext i1 %..b2.sink to i32
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_thing_references(%struct.__sFILE* %savef, %union.thing* readonly %list, %union.thing** nocapture readonly %items, i32 %count) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %._crit_edge, label %.preheader

.preheader:                                       ; preds = %0
  %3 = icmp sgt i32 %count, 0
  br i1 %3, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %4 = bitcast i32* %2 to i8*
  %5 = icmp eq %union.thing* %list, null
  %6 = bitcast i32* %1 to i8*
  br label %rs_write_thing_reference.exit._crit_edge

rs_write_thing_reference.exit._crit_edge:         ; preds = %rs_write_thing_reference.exit, %.lr.ph
  %.b1.i = phi i1 [ false, %.lr.ph ], [ %.b.pre, %rs_write_thing_reference.exit ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_write_thing_reference.exit ]
  %7 = getelementptr inbounds %union.thing** %items, i64 %indvars.iv
  %8 = load %union.thing** %7, align 8, !tbaa !1
  br i1 %.b1.i, label %rs_write_thing_reference.exit, label %9

; <label>:9                                       ; preds = %rs_write_thing_reference.exit._crit_edge
  %10 = icmp eq %union.thing* %8, null
  br i1 %10, label %11, label %15

; <label>:11                                      ; preds = %9
  call void @llvm.lifetime.start(i64 4, i8* %4) #8
  store i32 -1, i32* %2, align 4, !tbaa !38
  %12 = call i64 @encwrite(i8* %4, i64 4, %struct.__sFILE* %savef) #8
  %13 = icmp eq i64 %12, 4
  br i1 %13, label %rs_write_thing_reference.exit, label %14

; <label>:14                                      ; preds = %11
  store i1 true, i1* @write_error, align 1
  br label %rs_write_thing_reference.exit

; <label>:15                                      ; preds = %9
  br i1 %5, label %.loopexit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %17, %15
  %count.03.i.i = phi i32 [ %18, %17 ], [ 0, %15 ]
  %.012.i.i = phi %union.thing* [ %20, %17 ], [ %list, %15 ]
  %16 = icmp eq %union.thing* %.012.i.i, %8
  br i1 %16, label %.loopexit, label %17

; <label>:17                                      ; preds = %.lr.ph.i.i
  %18 = add nsw i32 %count.03.i.i, 1
  %19 = getelementptr inbounds %union.thing* %.012.i.i, i64 0, i32 0, i32 0
  %20 = load %union.thing** %19, align 8, !tbaa !14
  %21 = icmp eq %union.thing* %20, null
  br i1 %21, label %.loopexit, label %.lr.ph.i.i

.loopexit:                                        ; preds = %17, %.lr.ph.i.i, %15
  %.0.i.i = phi i32 [ -1, %15 ], [ -1, %17 ], [ %count.03.i.i, %.lr.ph.i.i ]
  call void @llvm.lifetime.start(i64 4, i8* %6) #8
  store i32 %.0.i.i, i32* %1, align 4, !tbaa !38
  %22 = call i64 @encwrite(i8* %6, i64 4, %struct.__sFILE* %savef) #8
  %23 = icmp eq i64 %22, 4
  br i1 %23, label %rs_write_thing_reference.exit, label %24

; <label>:24                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_thing_reference.exit

rs_write_thing_reference.exit:                    ; preds = %24, %.loopexit, %14, %11, %rs_write_thing_reference.exit._crit_edge
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  %.b.pre = load i1* @write_error, align 1
  br i1 %exitcond, label %._crit_edge, label %rs_write_thing_reference.exit._crit_edge

._crit_edge:                                      ; preds = %rs_write_thing_reference.exit, %.preheader, %0
  %.b1.sink = phi i1 [ true, %0 ], [ false, %.preheader ], [ %.b.pre, %rs_write_thing_reference.exit ]
  %25 = zext i1 %.b1.sink to i32
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_thing_references(%struct.__sFILE* %inf, %union.thing* %list, %union.thing** nocapture %items, i32 %count) #0 {
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %18, label %.preheader

.preheader:                                       ; preds = %0
  %1 = icmp sgt i32 %count, 0
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %2 = bitcast i32* %input.i.i to i8*
  %3 = icmp eq %union.thing* %list, null
  br label %4

; <label>:4                                       ; preds = %rs_read_thing_reference.exit._crit_edge, %.lr.ph
  %.b3.i = phi i1 [ false, %.lr.ph ], [ %.b3.i.pre, %rs_read_thing_reference.exit._crit_edge ]
  %.b2.i = phi i1 [ false, %.lr.ph ], [ %.b2.i.pre, %rs_read_thing_reference.exit._crit_edge ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_read_thing_reference.exit._crit_edge ]
  %5 = getelementptr inbounds %union.thing** %items, i64 %indvars.iv
  %or.cond.i = or i1 %.b2.i, %.b3.i
  br i1 %or.cond.i, label %rs_read_thing_reference.exit, label %6

; <label>:6                                       ; preds = %4
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %7 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %8 = icmp eq i64 %7, 4
  br i1 %8, label %rs_read_int.exit.i, label %9

; <label>:9                                       ; preds = %6
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %9, %6
  %10 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %11 = icmp eq i32 %10, -1
  %or.cond5.i = or i1 %11, %3
  br i1 %or.cond5.i, label %get_list_item.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %13, %rs_read_int.exit.i
  %count.04.i.i = phi i32 [ %14, %13 ], [ 0, %rs_read_int.exit.i ]
  %.013.i.i = phi %union.thing* [ %16, %13 ], [ %list, %rs_read_int.exit.i ]
  %12 = icmp eq i32 %count.04.i.i, %10
  br i1 %12, label %get_list_item.exit.i, label %13

; <label>:13                                      ; preds = %.lr.ph.i.i
  %14 = add nsw i32 %count.04.i.i, 1
  %15 = getelementptr inbounds %union.thing* %.013.i.i, i64 0, i32 0, i32 0
  %16 = load %union.thing** %15, align 8, !tbaa !14
  %17 = icmp eq %union.thing* %16, null
  br i1 %17, label %get_list_item.exit.i, label %.lr.ph.i.i

get_list_item.exit.i:                             ; preds = %13, %.lr.ph.i.i, %rs_read_int.exit.i
  %storemerge.i = phi %union.thing* [ null, %rs_read_int.exit.i ], [ null, %13 ], [ %.013.i.i, %.lr.ph.i.i ]
  store %union.thing* %storemerge.i, %union.thing** %5, align 8, !tbaa !1
  br label %rs_read_thing_reference.exit

rs_read_thing_reference.exit:                     ; preds = %get_list_item.exit.i, %4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %._crit_edge, label %rs_read_thing_reference.exit._crit_edge

rs_read_thing_reference.exit._crit_edge:          ; preds = %rs_read_thing_reference.exit
  %.b2.i.pre = load i1* @read_error, align 1
  %.b3.i.pre = load i1* @format_error, align 1
  br label %4

._crit_edge:                                      ; preds = %rs_read_thing_reference.exit, %.preheader
  %.b = load i1* @write_error, align 1
  br label %18

; <label>:18                                      ; preds = %._crit_edge, %0
  %.b.sink = phi i1 [ %.b, %._crit_edge ], [ true, %0 ]
  %19 = zext i1 %.b.sink to i32
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_write_places(%struct.__sFILE* %savef, %struct.PLACE* nocapture readonly %places, i32 %count) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %._crit_edge, label %.preheader

.preheader:                                       ; preds = %0
  %5 = icmp sgt i32 %count, 0
  br i1 %5, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %6 = bitcast i32* %2 to i8*
  %7 = bitcast i32* %1 to i8*
  br label %rs_write_thing_reference.exit._crit_edge

rs_write_thing_reference.exit._crit_edge:         ; preds = %rs_write_thing_reference.exit, %.lr.ph
  %.b1.i = phi i1 [ false, %.lr.ph ], [ %.b.pre, %rs_write_thing_reference.exit ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_write_thing_reference.exit ]
  %8 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 0
  %9 = load i8* %8, align 1, !tbaa !33
  call void @llvm.lifetime.start(i64 1, i8* %4) #8
  store i8 %9, i8* %4, align 1, !tbaa !28
  br i1 %.b1.i, label %rs_write_char.exit6.thread.critedge, label %10

; <label>:10                                      ; preds = %rs_write_thing_reference.exit._crit_edge
  %11 = call i64 @encwrite(i8* %4, i64 1, %struct.__sFILE* %savef) #8
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %.rs_write_char.exit_crit_edge, label %rs_write_char.exit6.thread.critedge14

.rs_write_char.exit_crit_edge:                    ; preds = %10
  %.b1.i2.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %4) #8
  %13 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 1
  %14 = load i8* %13, align 1, !tbaa !36
  call void @llvm.lifetime.start(i64 1, i8* %3) #8
  store i8 %14, i8* %3, align 1, !tbaa !28
  br i1 %.b1.i2.pre, label %rs_write_thing_reference.exit, label %17

rs_write_char.exit6.thread.critedge14:            ; preds = %10
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %4) #8
  %15 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 1
  %16 = load i8* %15, align 1, !tbaa !36
  call void @llvm.lifetime.start(i64 1, i8* %3) #8
  store i8 %16, i8* %3, align 1, !tbaa !28
  br label %rs_write_thing_reference.exit

; <label>:17                                      ; preds = %.rs_write_char.exit_crit_edge
  %18 = call i64 @encwrite(i8* %3, i64 1, %struct.__sFILE* %savef) #8
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %rs_write_char.exit6, label %20

; <label>:20                                      ; preds = %17
  store i1 true, i1* @write_error, align 1
  br label %rs_write_thing_reference.exit

rs_write_char.exit6.thread.critedge:              ; preds = %rs_write_thing_reference.exit._crit_edge
  call void @llvm.lifetime.end(i64 1, i8* %4) #8
  %21 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 1
  %22 = load i8* %21, align 1, !tbaa !36
  call void @llvm.lifetime.start(i64 1, i8* %3) #8
  store i8 %22, i8* %3, align 1, !tbaa !28
  br label %rs_write_thing_reference.exit

rs_write_char.exit6:                              ; preds = %17
  %.b1.i7.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %3) #8
  %23 = load %union.thing** @mlist, align 8, !tbaa !1
  %24 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 2
  %25 = load %union.thing** %24, align 8, !tbaa !43
  br i1 %.b1.i7.pre, label %rs_write_thing_reference.exit, label %26

; <label>:26                                      ; preds = %rs_write_char.exit6
  %27 = icmp eq %union.thing* %25, null
  br i1 %27, label %28, label %32

; <label>:28                                      ; preds = %26
  call void @llvm.lifetime.start(i64 4, i8* %6) #8
  store i32 -1, i32* %2, align 4, !tbaa !38
  %29 = call i64 @encwrite(i8* %6, i64 4, %struct.__sFILE* %savef) #8
  %30 = icmp eq i64 %29, 4
  br i1 %30, label %rs_write_thing_reference.exit, label %31

; <label>:31                                      ; preds = %28
  store i1 true, i1* @write_error, align 1
  br label %rs_write_thing_reference.exit

; <label>:32                                      ; preds = %26
  %33 = icmp eq %union.thing* %23, null
  br i1 %33, label %.loopexit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %35, %32
  %count.03.i.i = phi i32 [ %36, %35 ], [ 0, %32 ]
  %.012.i.i = phi %union.thing* [ %38, %35 ], [ %23, %32 ]
  %34 = icmp eq %union.thing* %.012.i.i, %25
  br i1 %34, label %.loopexit, label %35

; <label>:35                                      ; preds = %.lr.ph.i.i
  %36 = add nsw i32 %count.03.i.i, 1
  %37 = getelementptr inbounds %union.thing* %.012.i.i, i64 0, i32 0, i32 0
  %38 = load %union.thing** %37, align 8, !tbaa !14
  %39 = icmp eq %union.thing* %38, null
  br i1 %39, label %.loopexit, label %.lr.ph.i.i

.loopexit:                                        ; preds = %35, %.lr.ph.i.i, %32
  %.0.i.i = phi i32 [ -1, %32 ], [ -1, %35 ], [ %count.03.i.i, %.lr.ph.i.i ]
  call void @llvm.lifetime.start(i64 4, i8* %7) #8
  store i32 %.0.i.i, i32* %1, align 4, !tbaa !38
  %40 = call i64 @encwrite(i8* %7, i64 4, %struct.__sFILE* %savef) #8
  %41 = icmp eq i64 %40, 4
  br i1 %41, label %rs_write_thing_reference.exit, label %42

; <label>:42                                      ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_thing_reference.exit

rs_write_thing_reference.exit:                    ; preds = %42, %.loopexit, %31, %28, %rs_write_char.exit6, %rs_write_char.exit6.thread.critedge, %20, %rs_write_char.exit6.thread.critedge14, %.rs_write_char.exit_crit_edge
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  %.b.pre = load i1* @write_error, align 1
  br i1 %exitcond, label %._crit_edge, label %rs_write_thing_reference.exit._crit_edge

._crit_edge:                                      ; preds = %rs_write_thing_reference.exit, %.preheader, %0
  %.b1.sink = phi i1 [ true, %0 ], [ false, %.preheader ], [ %.b.pre, %rs_write_thing_reference.exit ]
  %43 = zext i1 %.b1.sink to i32
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_read_places(%struct.__sFILE* %inf, %struct.PLACE* %places, i32 %count) #0 {
  %input.i.i = alloca i32, align 4
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %29, label %.preheader

.preheader:                                       ; preds = %0
  %1 = icmp sgt i32 %count, 0
  br i1 %1, label %.lr.ph, label %28

.lr.ph:                                           ; preds = %.preheader
  %2 = bitcast i32* %input.i.i to i8*
  br label %3

; <label>:3                                       ; preds = %rs_read_thing_reference.exit._crit_edge, %.lr.ph
  %.b3.i = phi i1 [ false, %.lr.ph ], [ %.b3.i.pre, %rs_read_thing_reference.exit._crit_edge ]
  %.b2.i = phi i1 [ false, %.lr.ph ], [ %.b2.i.pre, %rs_read_thing_reference.exit._crit_edge ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %rs_read_thing_reference.exit._crit_edge ]
  %or.cond.i = or i1 %.b2.i, %.b3.i
  br i1 %or.cond.i, label %rs_read_char.exit, label %4

; <label>:4                                       ; preds = %3
  %5 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 0
  %6 = call i64 @encread(i8* %5, i64 1, %struct.__sFILE* %inf) #8
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %.rs_read_char.exit_crit_edge, label %rs_read_char.exit.thread

.rs_read_char.exit_crit_edge:                     ; preds = %4
  %.b2.i5.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit

rs_read_char.exit.thread:                         ; preds = %4
  store i1 true, i1* @read_error, align 1
  br label %rs_read_thing_reference.exit

rs_read_char.exit:                                ; preds = %.rs_read_char.exit_crit_edge, %3
  %.b2.i5 = phi i1 [ %.b2.i5.pre, %.rs_read_char.exit_crit_edge ], [ %.b2.i, %3 ]
  %.b3.i6 = load i1* @format_error, align 1
  %or.cond.i7 = or i1 %.b2.i5, %.b3.i6
  br i1 %or.cond.i7, label %rs_read_char.exit15, label %8

; <label>:8                                       ; preds = %rs_read_char.exit
  %9 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 1
  %10 = call i64 @encread(i8* %9, i64 1, %struct.__sFILE* %inf) #8
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %.rs_read_char.exit15_crit_edge, label %12

.rs_read_char.exit15_crit_edge:                   ; preds = %8
  %.b2.i16.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit15

; <label>:12                                      ; preds = %8
  store i1 true, i1* @read_error, align 1
  br label %rs_read_thing_reference.exit

rs_read_char.exit15:                              ; preds = %.rs_read_char.exit15_crit_edge, %rs_read_char.exit
  %.b2.i16 = phi i1 [ %.b2.i16.pre, %.rs_read_char.exit15_crit_edge ], [ %.b2.i5, %rs_read_char.exit ]
  %13 = load %union.thing** @mlist, align 8, !tbaa !1
  %14 = getelementptr inbounds %struct.PLACE* %places, i64 %indvars.iv, i32 2
  %.b3.i17 = load i1* @format_error, align 1
  %or.cond.i18 = or i1 %.b2.i16, %.b3.i17
  br i1 %or.cond.i18, label %rs_read_thing_reference.exit, label %15

; <label>:15                                      ; preds = %rs_read_char.exit15
  call void @llvm.lifetime.start(i64 4, i8* %2) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %16 = call i64 @encread(i8* %2, i64 4, %struct.__sFILE* %inf) #8
  %17 = icmp eq i64 %16, 4
  br i1 %17, label %rs_read_int.exit.i, label %18

; <label>:18                                      ; preds = %15
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %18, %15
  %19 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %2) #8
  %20 = icmp eq i32 %19, -1
  %21 = icmp eq %union.thing* %13, null
  %or.cond5.i = or i1 %20, %21
  br i1 %or.cond5.i, label %get_list_item.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %23, %rs_read_int.exit.i
  %count.04.i.i = phi i32 [ %24, %23 ], [ 0, %rs_read_int.exit.i ]
  %.013.i.i = phi %union.thing* [ %26, %23 ], [ %13, %rs_read_int.exit.i ]
  %22 = icmp eq i32 %count.04.i.i, %19
  br i1 %22, label %get_list_item.exit.i, label %23

; <label>:23                                      ; preds = %.lr.ph.i.i
  %24 = add nsw i32 %count.04.i.i, 1
  %25 = getelementptr inbounds %union.thing* %.013.i.i, i64 0, i32 0, i32 0
  %26 = load %union.thing** %25, align 8, !tbaa !14
  %27 = icmp eq %union.thing* %26, null
  br i1 %27, label %get_list_item.exit.i, label %.lr.ph.i.i

get_list_item.exit.i:                             ; preds = %23, %.lr.ph.i.i, %rs_read_int.exit.i
  %storemerge.i = phi %union.thing* [ null, %rs_read_int.exit.i ], [ null, %23 ], [ %.013.i.i, %.lr.ph.i.i ]
  store %union.thing* %storemerge.i, %union.thing** %14, align 8, !tbaa !1
  br label %rs_read_thing_reference.exit

rs_read_thing_reference.exit:                     ; preds = %get_list_item.exit.i, %rs_read_char.exit15, %12, %rs_read_char.exit.thread
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %count
  br i1 %exitcond, label %._crit_edge, label %rs_read_thing_reference.exit._crit_edge

rs_read_thing_reference.exit._crit_edge:          ; preds = %rs_read_thing_reference.exit
  %.b2.i.pre = load i1* @read_error, align 1
  %.b3.i.pre = load i1* @format_error, align 1
  br label %3

._crit_edge:                                      ; preds = %rs_read_thing_reference.exit
  %.b4.pre = load i1* @format_error, align 1
  %.b.pre = load i1* @read_error, align 1
  br label %28

; <label>:28                                      ; preds = %._crit_edge, %.preheader
  %.b = phi i1 [ %.b.pre, %._crit_edge ], [ false, %.preheader ]
  %.b4 = phi i1 [ %.b4.pre, %._crit_edge ], [ false, %.preheader ]
  %..b = or i1 %.b4, %.b
  br label %29

; <label>:29                                      ; preds = %28, %0
  %..b2.sink = phi i1 [ %..b, %28 ], [ true, %0 ]
  %30 = zext i1 %..b2.sink to i32
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_save_file(%struct.__sFILE* %savef) #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i8, align 1
  %48 = alloca i8, align 1
  %49 = alloca i8, align 1
  %50 = alloca i8, align 1
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i8, align 1
  %57 = alloca i8, align 1
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i8, align 1
  %buf.i.i = alloca i8, align 1
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %buf.i174 = alloca i8, align 1
  %buf.i167 = alloca i8, align 1
  %buf.i160 = alloca i8, align 1
  %buf.i153 = alloca i8, align 1
  %buf.i146 = alloca i8, align 1
  %buf.i139 = alloca i8, align 1
  %buf.i132 = alloca i8, align 1
  %buf.i125 = alloca i8, align 1
  %buf.i118 = alloca i8, align 1
  %buf.i111 = alloca i8, align 1
  %buf.i104 = alloca i8, align 1
  %buf.i97 = alloca i8, align 1
  %buf.i90 = alloca i8, align 1
  %buf.i83 = alloca i8, align 1
  %buf.i76 = alloca i8, align 1
  %buf.i69 = alloca i8, align 1
  %buf.i62 = alloca i8, align 1
  %buf.i55 = alloca i8, align 1
  %buf.i48 = alloca i8, align 1
  %buf.i41 = alloca i8, align 1
  %buf.i34 = alloca i8, align 1
  %buf.i27 = alloca i8, align 1
  %buf.i20 = alloca i8, align 1
  %buf.i13 = alloca i8, align 1
  %64 = alloca i32, align 4
  %buf.i2 = alloca i8, align 1
  %buf.i = alloca i8, align 1
  %.b1 = load i1* @write_error, align 1
  br i1 %.b1, label %787, label %65

; <label>:65                                      ; preds = %0
  %66 = load i8* @after, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 %66, i8* %buf.i, align 1, !tbaa !28
  %67 = call i64 @encwrite(i8* %buf.i, i64 1, %struct.__sFILE* %savef) #8
  %68 = icmp eq i64 %67, 1
  br i1 %68, label %rs_write_boolean.exit, label %rs_write_boolean.exit.thread

rs_write_boolean.exit.thread:                     ; preds = %65
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %69 = load i8* @again, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i2) #8
  store i8 %69, i8* %buf.i2, align 1, !tbaa !28
  br label %rs_write_boolean.exit8.thread

rs_write_boolean.exit:                            ; preds = %65
  %.b1.i4.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  %70 = load i8* @again, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i2) #8
  store i8 %70, i8* %buf.i2, align 1, !tbaa !28
  br i1 %.b1.i4.pre, label %rs_write_boolean.exit8.thread, label %71

; <label>:71                                      ; preds = %rs_write_boolean.exit
  %72 = call i64 @encwrite(i8* %buf.i2, i64 1, %struct.__sFILE* %savef) #8
  %73 = icmp eq i64 %72, 1
  br i1 %73, label %rs_write_boolean.exit8, label %74

; <label>:74                                      ; preds = %71
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit8.thread

rs_write_boolean.exit8.thread:                    ; preds = %74, %rs_write_boolean.exit, %rs_write_boolean.exit.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i2) #8
  %75 = load i32* @noscore, align 4, !tbaa !38
  %76 = bitcast i32* %64 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %76) #8
  store i32 %75, i32* %64, align 4, !tbaa !38
  br label %rs_write_int.exit.thread

rs_write_boolean.exit8:                           ; preds = %71
  %.b1.i9.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i2) #8
  %77 = load i32* @noscore, align 4, !tbaa !38
  %78 = bitcast i32* %64 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %78) #8
  store i32 %77, i32* %64, align 4, !tbaa !38
  br i1 %.b1.i9.pre, label %rs_write_int.exit.thread, label %79

; <label>:79                                      ; preds = %rs_write_boolean.exit8
  %80 = call i64 @encwrite(i8* %78, i64 4, %struct.__sFILE* %savef) #8
  %81 = icmp eq i64 %80, 4
  br i1 %81, label %rs_write_int.exit, label %82

; <label>:82                                      ; preds = %79
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.thread

rs_write_int.exit.thread:                         ; preds = %82, %rs_write_boolean.exit8, %rs_write_boolean.exit8.thread
  %.ph = phi i8* [ %78, %rs_write_boolean.exit8 ], [ %78, %82 ], [ %76, %rs_write_boolean.exit8.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph) #8
  %83 = load i8* @seenstairs, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i13) #8
  store i8 %83, i8* %buf.i13, align 1, !tbaa !28
  br label %rs_write_boolean.exit19.thread

rs_write_int.exit:                                ; preds = %79
  %.b1.i15.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %78) #8
  %84 = load i8* @seenstairs, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i13) #8
  store i8 %84, i8* %buf.i13, align 1, !tbaa !28
  br i1 %.b1.i15.pre, label %rs_write_boolean.exit19.thread, label %85

; <label>:85                                      ; preds = %rs_write_int.exit
  %86 = call i64 @encwrite(i8* %buf.i13, i64 1, %struct.__sFILE* %savef) #8
  %87 = icmp eq i64 %86, 1
  br i1 %87, label %rs_write_boolean.exit19, label %88

; <label>:88                                      ; preds = %85
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit19.thread

rs_write_boolean.exit19.thread:                   ; preds = %88, %rs_write_int.exit, %rs_write_int.exit.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i13) #8
  %89 = load i8* @amulet, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i20) #8
  store i8 %89, i8* %buf.i20, align 1, !tbaa !28
  br label %rs_write_boolean.exit26.thread

rs_write_boolean.exit19:                          ; preds = %85
  %.b1.i22.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i13) #8
  %90 = load i8* @amulet, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i20) #8
  store i8 %90, i8* %buf.i20, align 1, !tbaa !28
  br i1 %.b1.i22.pre, label %rs_write_boolean.exit26.thread, label %91

; <label>:91                                      ; preds = %rs_write_boolean.exit19
  %92 = call i64 @encwrite(i8* %buf.i20, i64 1, %struct.__sFILE* %savef) #8
  %93 = icmp eq i64 %92, 1
  br i1 %93, label %rs_write_boolean.exit26, label %94

; <label>:94                                      ; preds = %91
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit26.thread

rs_write_boolean.exit26.thread:                   ; preds = %94, %rs_write_boolean.exit19, %rs_write_boolean.exit19.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i20) #8
  %95 = load i8* @door_stop, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i27) #8
  store i8 %95, i8* %buf.i27, align 1, !tbaa !28
  br label %rs_write_boolean.exit33.thread

rs_write_boolean.exit26:                          ; preds = %91
  %.b1.i29.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i20) #8
  %96 = load i8* @door_stop, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i27) #8
  store i8 %96, i8* %buf.i27, align 1, !tbaa !28
  br i1 %.b1.i29.pre, label %rs_write_boolean.exit33.thread, label %97

; <label>:97                                      ; preds = %rs_write_boolean.exit26
  %98 = call i64 @encwrite(i8* %buf.i27, i64 1, %struct.__sFILE* %savef) #8
  %99 = icmp eq i64 %98, 1
  br i1 %99, label %rs_write_boolean.exit33, label %100

; <label>:100                                     ; preds = %97
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit33.thread

rs_write_boolean.exit33.thread:                   ; preds = %100, %rs_write_boolean.exit26, %rs_write_boolean.exit26.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i27) #8
  %101 = load i8* @fight_flush, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i34) #8
  store i8 %101, i8* %buf.i34, align 1, !tbaa !28
  br label %rs_write_boolean.exit40.thread

rs_write_boolean.exit33:                          ; preds = %97
  %.b1.i36.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i27) #8
  %102 = load i8* @fight_flush, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i34) #8
  store i8 %102, i8* %buf.i34, align 1, !tbaa !28
  br i1 %.b1.i36.pre, label %rs_write_boolean.exit40.thread, label %103

; <label>:103                                     ; preds = %rs_write_boolean.exit33
  %104 = call i64 @encwrite(i8* %buf.i34, i64 1, %struct.__sFILE* %savef) #8
  %105 = icmp eq i64 %104, 1
  br i1 %105, label %rs_write_boolean.exit40, label %106

; <label>:106                                     ; preds = %103
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit40.thread

rs_write_boolean.exit40.thread:                   ; preds = %106, %rs_write_boolean.exit33, %rs_write_boolean.exit33.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i34) #8
  %107 = load i8* @firstmove, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i41) #8
  store i8 %107, i8* %buf.i41, align 1, !tbaa !28
  br label %rs_write_boolean.exit47.thread

rs_write_boolean.exit40:                          ; preds = %103
  %.b1.i43.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i34) #8
  %108 = load i8* @firstmove, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i41) #8
  store i8 %108, i8* %buf.i41, align 1, !tbaa !28
  br i1 %.b1.i43.pre, label %rs_write_boolean.exit47.thread, label %109

; <label>:109                                     ; preds = %rs_write_boolean.exit40
  %110 = call i64 @encwrite(i8* %buf.i41, i64 1, %struct.__sFILE* %savef) #8
  %111 = icmp eq i64 %110, 1
  br i1 %111, label %rs_write_boolean.exit47, label %112

; <label>:112                                     ; preds = %109
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit47.thread

rs_write_boolean.exit47.thread:                   ; preds = %112, %rs_write_boolean.exit40, %rs_write_boolean.exit40.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i41) #8
  %113 = load i8* @got_ltc, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i48) #8
  store i8 %113, i8* %buf.i48, align 1, !tbaa !28
  br label %rs_write_boolean.exit54.thread

rs_write_boolean.exit47:                          ; preds = %109
  %.b1.i50.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i41) #8
  %114 = load i8* @got_ltc, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i48) #8
  store i8 %114, i8* %buf.i48, align 1, !tbaa !28
  br i1 %.b1.i50.pre, label %rs_write_boolean.exit54.thread, label %115

; <label>:115                                     ; preds = %rs_write_boolean.exit47
  %116 = call i64 @encwrite(i8* %buf.i48, i64 1, %struct.__sFILE* %savef) #8
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %rs_write_boolean.exit54, label %118

; <label>:118                                     ; preds = %115
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit54.thread

rs_write_boolean.exit54.thread:                   ; preds = %118, %rs_write_boolean.exit47, %rs_write_boolean.exit47.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i48) #8
  %119 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i55) #8
  store i8 %119, i8* %buf.i55, align 1, !tbaa !28
  br label %rs_write_boolean.exit61.thread

rs_write_boolean.exit54:                          ; preds = %115
  %.b1.i57.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i48) #8
  %120 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i55) #8
  store i8 %120, i8* %buf.i55, align 1, !tbaa !28
  br i1 %.b1.i57.pre, label %rs_write_boolean.exit61.thread, label %121

; <label>:121                                     ; preds = %rs_write_boolean.exit54
  %122 = call i64 @encwrite(i8* %buf.i55, i64 1, %struct.__sFILE* %savef) #8
  %123 = icmp eq i64 %122, 1
  br i1 %123, label %rs_write_boolean.exit61, label %124

; <label>:124                                     ; preds = %121
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit61.thread

rs_write_boolean.exit61.thread:                   ; preds = %124, %rs_write_boolean.exit54, %rs_write_boolean.exit54.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i55) #8
  %125 = load i8* @in_shell, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i62) #8
  store i8 %125, i8* %buf.i62, align 1, !tbaa !28
  br label %rs_write_boolean.exit68.thread

rs_write_boolean.exit61:                          ; preds = %121
  %.b1.i64.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i55) #8
  %126 = load i8* @in_shell, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i62) #8
  store i8 %126, i8* %buf.i62, align 1, !tbaa !28
  br i1 %.b1.i64.pre, label %rs_write_boolean.exit68.thread, label %127

; <label>:127                                     ; preds = %rs_write_boolean.exit61
  %128 = call i64 @encwrite(i8* %buf.i62, i64 1, %struct.__sFILE* %savef) #8
  %129 = icmp eq i64 %128, 1
  br i1 %129, label %rs_write_boolean.exit68, label %130

; <label>:130                                     ; preds = %127
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit68.thread

rs_write_boolean.exit68.thread:                   ; preds = %130, %rs_write_boolean.exit61, %rs_write_boolean.exit61.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i62) #8
  %131 = load i8* @inv_describe, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i69) #8
  store i8 %131, i8* %buf.i69, align 1, !tbaa !28
  br label %rs_write_boolean.exit75.thread

rs_write_boolean.exit68:                          ; preds = %127
  %.b1.i71.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i62) #8
  %132 = load i8* @inv_describe, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i69) #8
  store i8 %132, i8* %buf.i69, align 1, !tbaa !28
  br i1 %.b1.i71.pre, label %rs_write_boolean.exit75.thread, label %133

; <label>:133                                     ; preds = %rs_write_boolean.exit68
  %134 = call i64 @encwrite(i8* %buf.i69, i64 1, %struct.__sFILE* %savef) #8
  %135 = icmp eq i64 %134, 1
  br i1 %135, label %rs_write_boolean.exit75, label %136

; <label>:136                                     ; preds = %133
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit75.thread

rs_write_boolean.exit75.thread:                   ; preds = %136, %rs_write_boolean.exit68, %rs_write_boolean.exit68.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i69) #8
  %137 = load i8* @jump, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i76) #8
  store i8 %137, i8* %buf.i76, align 1, !tbaa !28
  br label %rs_write_boolean.exit82.thread

rs_write_boolean.exit75:                          ; preds = %133
  %.b1.i78.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i69) #8
  %138 = load i8* @jump, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i76) #8
  store i8 %138, i8* %buf.i76, align 1, !tbaa !28
  br i1 %.b1.i78.pre, label %rs_write_boolean.exit82.thread, label %139

; <label>:139                                     ; preds = %rs_write_boolean.exit75
  %140 = call i64 @encwrite(i8* %buf.i76, i64 1, %struct.__sFILE* %savef) #8
  %141 = icmp eq i64 %140, 1
  br i1 %141, label %rs_write_boolean.exit82, label %142

; <label>:142                                     ; preds = %139
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit82.thread

rs_write_boolean.exit82.thread:                   ; preds = %142, %rs_write_boolean.exit75, %rs_write_boolean.exit75.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i76) #8
  %143 = load i8* @kamikaze, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i83) #8
  store i8 %143, i8* %buf.i83, align 1, !tbaa !28
  br label %rs_write_boolean.exit89.thread

rs_write_boolean.exit82:                          ; preds = %139
  %.b1.i85.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i76) #8
  %144 = load i8* @kamikaze, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i83) #8
  store i8 %144, i8* %buf.i83, align 1, !tbaa !28
  br i1 %.b1.i85.pre, label %rs_write_boolean.exit89.thread, label %145

; <label>:145                                     ; preds = %rs_write_boolean.exit82
  %146 = call i64 @encwrite(i8* %buf.i83, i64 1, %struct.__sFILE* %savef) #8
  %147 = icmp eq i64 %146, 1
  br i1 %147, label %rs_write_boolean.exit89, label %148

; <label>:148                                     ; preds = %145
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit89.thread

rs_write_boolean.exit89.thread:                   ; preds = %148, %rs_write_boolean.exit82, %rs_write_boolean.exit82.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i83) #8
  %149 = load i8* @lower_msg, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i90) #8
  store i8 %149, i8* %buf.i90, align 1, !tbaa !28
  br label %rs_write_boolean.exit96.thread

rs_write_boolean.exit89:                          ; preds = %145
  %.b1.i92.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i83) #8
  %150 = load i8* @lower_msg, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i90) #8
  store i8 %150, i8* %buf.i90, align 1, !tbaa !28
  br i1 %.b1.i92.pre, label %rs_write_boolean.exit96.thread, label %151

; <label>:151                                     ; preds = %rs_write_boolean.exit89
  %152 = call i64 @encwrite(i8* %buf.i90, i64 1, %struct.__sFILE* %savef) #8
  %153 = icmp eq i64 %152, 1
  br i1 %153, label %rs_write_boolean.exit96, label %154

; <label>:154                                     ; preds = %151
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit96.thread

rs_write_boolean.exit96.thread:                   ; preds = %154, %rs_write_boolean.exit89, %rs_write_boolean.exit89.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i90) #8
  %155 = load i8* @move_on, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i97) #8
  store i8 %155, i8* %buf.i97, align 1, !tbaa !28
  br label %rs_write_boolean.exit103.thread

rs_write_boolean.exit96:                          ; preds = %151
  %.b1.i99.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i90) #8
  %156 = load i8* @move_on, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i97) #8
  store i8 %156, i8* %buf.i97, align 1, !tbaa !28
  br i1 %.b1.i99.pre, label %rs_write_boolean.exit103.thread, label %157

; <label>:157                                     ; preds = %rs_write_boolean.exit96
  %158 = call i64 @encwrite(i8* %buf.i97, i64 1, %struct.__sFILE* %savef) #8
  %159 = icmp eq i64 %158, 1
  br i1 %159, label %rs_write_boolean.exit103, label %160

; <label>:160                                     ; preds = %157
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit103.thread

rs_write_boolean.exit103.thread:                  ; preds = %160, %rs_write_boolean.exit96, %rs_write_boolean.exit96.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i97) #8
  %161 = load i8* @msg_esc, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i104) #8
  store i8 %161, i8* %buf.i104, align 1, !tbaa !28
  br label %rs_write_boolean.exit110.thread

rs_write_boolean.exit103:                         ; preds = %157
  %.b1.i106.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i97) #8
  %162 = load i8* @msg_esc, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i104) #8
  store i8 %162, i8* %buf.i104, align 1, !tbaa !28
  br i1 %.b1.i106.pre, label %rs_write_boolean.exit110.thread, label %163

; <label>:163                                     ; preds = %rs_write_boolean.exit103
  %164 = call i64 @encwrite(i8* %buf.i104, i64 1, %struct.__sFILE* %savef) #8
  %165 = icmp eq i64 %164, 1
  br i1 %165, label %rs_write_boolean.exit110, label %166

; <label>:166                                     ; preds = %163
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit110.thread

rs_write_boolean.exit110.thread:                  ; preds = %166, %rs_write_boolean.exit103, %rs_write_boolean.exit103.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i104) #8
  %167 = load i8* @passgo, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i111) #8
  store i8 %167, i8* %buf.i111, align 1, !tbaa !28
  br label %rs_write_boolean.exit117.thread

rs_write_boolean.exit110:                         ; preds = %163
  %.b1.i113.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i104) #8
  %168 = load i8* @passgo, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i111) #8
  store i8 %168, i8* %buf.i111, align 1, !tbaa !28
  br i1 %.b1.i113.pre, label %rs_write_boolean.exit117.thread, label %169

; <label>:169                                     ; preds = %rs_write_boolean.exit110
  %170 = call i64 @encwrite(i8* %buf.i111, i64 1, %struct.__sFILE* %savef) #8
  %171 = icmp eq i64 %170, 1
  br i1 %171, label %rs_write_boolean.exit117, label %172

; <label>:172                                     ; preds = %169
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit117.thread

rs_write_boolean.exit117.thread:                  ; preds = %172, %rs_write_boolean.exit110, %rs_write_boolean.exit110.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i111) #8
  %173 = load i8* @playing, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i118) #8
  store i8 %173, i8* %buf.i118, align 1, !tbaa !28
  br label %rs_write_boolean.exit124.thread

rs_write_boolean.exit117:                         ; preds = %169
  %.b1.i120.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i111) #8
  %174 = load i8* @playing, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i118) #8
  store i8 %174, i8* %buf.i118, align 1, !tbaa !28
  br i1 %.b1.i120.pre, label %rs_write_boolean.exit124.thread, label %175

; <label>:175                                     ; preds = %rs_write_boolean.exit117
  %176 = call i64 @encwrite(i8* %buf.i118, i64 1, %struct.__sFILE* %savef) #8
  %177 = icmp eq i64 %176, 1
  br i1 %177, label %rs_write_boolean.exit124, label %178

; <label>:178                                     ; preds = %175
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit124.thread

rs_write_boolean.exit124.thread:                  ; preds = %178, %rs_write_boolean.exit117, %rs_write_boolean.exit117.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i118) #8
  %179 = load i8* @q_comm, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i125) #8
  store i8 %179, i8* %buf.i125, align 1, !tbaa !28
  br label %rs_write_boolean.exit131.thread

rs_write_boolean.exit124:                         ; preds = %175
  %.b1.i127.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i118) #8
  %180 = load i8* @q_comm, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i125) #8
  store i8 %180, i8* %buf.i125, align 1, !tbaa !28
  br i1 %.b1.i127.pre, label %rs_write_boolean.exit131.thread, label %181

; <label>:181                                     ; preds = %rs_write_boolean.exit124
  %182 = call i64 @encwrite(i8* %buf.i125, i64 1, %struct.__sFILE* %savef) #8
  %183 = icmp eq i64 %182, 1
  br i1 %183, label %rs_write_boolean.exit131, label %184

; <label>:184                                     ; preds = %181
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit131.thread

rs_write_boolean.exit131.thread:                  ; preds = %184, %rs_write_boolean.exit124, %rs_write_boolean.exit124.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i125) #8
  %185 = load i8* @running, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i132) #8
  store i8 %185, i8* %buf.i132, align 1, !tbaa !28
  br label %rs_write_boolean.exit138.thread

rs_write_boolean.exit131:                         ; preds = %181
  %.b1.i134.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i125) #8
  %186 = load i8* @running, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i132) #8
  store i8 %186, i8* %buf.i132, align 1, !tbaa !28
  br i1 %.b1.i134.pre, label %rs_write_boolean.exit138.thread, label %187

; <label>:187                                     ; preds = %rs_write_boolean.exit131
  %188 = call i64 @encwrite(i8* %buf.i132, i64 1, %struct.__sFILE* %savef) #8
  %189 = icmp eq i64 %188, 1
  br i1 %189, label %rs_write_boolean.exit138, label %190

; <label>:190                                     ; preds = %187
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit138.thread

rs_write_boolean.exit138.thread:                  ; preds = %190, %rs_write_boolean.exit131, %rs_write_boolean.exit131.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i132) #8
  %191 = load i8* @save_msg, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i139) #8
  store i8 %191, i8* %buf.i139, align 1, !tbaa !28
  br label %rs_write_boolean.exit145.thread

rs_write_boolean.exit138:                         ; preds = %187
  %.b1.i141.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i132) #8
  %192 = load i8* @save_msg, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i139) #8
  store i8 %192, i8* %buf.i139, align 1, !tbaa !28
  br i1 %.b1.i141.pre, label %rs_write_boolean.exit145.thread, label %193

; <label>:193                                     ; preds = %rs_write_boolean.exit138
  %194 = call i64 @encwrite(i8* %buf.i139, i64 1, %struct.__sFILE* %savef) #8
  %195 = icmp eq i64 %194, 1
  br i1 %195, label %rs_write_boolean.exit145, label %196

; <label>:196                                     ; preds = %193
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit145.thread

rs_write_boolean.exit145.thread:                  ; preds = %196, %rs_write_boolean.exit138, %rs_write_boolean.exit138.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i139) #8
  %197 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i146) #8
  store i8 %197, i8* %buf.i146, align 1, !tbaa !28
  br label %rs_write_boolean.exit152.thread

rs_write_boolean.exit145:                         ; preds = %193
  %.b1.i148.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i139) #8
  %198 = load i8* @see_floor, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i146) #8
  store i8 %198, i8* %buf.i146, align 1, !tbaa !28
  br i1 %.b1.i148.pre, label %rs_write_boolean.exit152.thread, label %199

; <label>:199                                     ; preds = %rs_write_boolean.exit145
  %200 = call i64 @encwrite(i8* %buf.i146, i64 1, %struct.__sFILE* %savef) #8
  %201 = icmp eq i64 %200, 1
  br i1 %201, label %rs_write_boolean.exit152, label %202

; <label>:202                                     ; preds = %199
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit152.thread

rs_write_boolean.exit152.thread:                  ; preds = %202, %rs_write_boolean.exit145, %rs_write_boolean.exit145.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i146) #8
  %203 = load i8* @stat_msg, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i153) #8
  store i8 %203, i8* %buf.i153, align 1, !tbaa !28
  br label %rs_write_boolean.exit159.thread

rs_write_boolean.exit152:                         ; preds = %199
  %.b1.i155.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i146) #8
  %204 = load i8* @stat_msg, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i153) #8
  store i8 %204, i8* %buf.i153, align 1, !tbaa !28
  br i1 %.b1.i155.pre, label %rs_write_boolean.exit159.thread, label %205

; <label>:205                                     ; preds = %rs_write_boolean.exit152
  %206 = call i64 @encwrite(i8* %buf.i153, i64 1, %struct.__sFILE* %savef) #8
  %207 = icmp eq i64 %206, 1
  br i1 %207, label %rs_write_boolean.exit159, label %208

; <label>:208                                     ; preds = %205
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit159.thread

rs_write_boolean.exit159.thread:                  ; preds = %208, %rs_write_boolean.exit152, %rs_write_boolean.exit152.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i153) #8
  %209 = load i8* @terse, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i160) #8
  store i8 %209, i8* %buf.i160, align 1, !tbaa !28
  br label %rs_write_boolean.exit166.thread

rs_write_boolean.exit159:                         ; preds = %205
  %.b1.i162.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i153) #8
  %210 = load i8* @terse, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i160) #8
  store i8 %210, i8* %buf.i160, align 1, !tbaa !28
  br i1 %.b1.i162.pre, label %rs_write_boolean.exit166.thread, label %211

; <label>:211                                     ; preds = %rs_write_boolean.exit159
  %212 = call i64 @encwrite(i8* %buf.i160, i64 1, %struct.__sFILE* %savef) #8
  %213 = icmp eq i64 %212, 1
  br i1 %213, label %rs_write_boolean.exit166, label %214

; <label>:214                                     ; preds = %211
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit166.thread

rs_write_boolean.exit166.thread:                  ; preds = %214, %rs_write_boolean.exit159, %rs_write_boolean.exit159.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i160) #8
  %215 = load i8* @to_death, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i167) #8
  store i8 %215, i8* %buf.i167, align 1, !tbaa !28
  br label %rs_write_boolean.exit173.thread

rs_write_boolean.exit166:                         ; preds = %211
  %.b1.i169.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i160) #8
  %216 = load i8* @to_death, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i167) #8
  store i8 %216, i8* %buf.i167, align 1, !tbaa !28
  br i1 %.b1.i169.pre, label %rs_write_boolean.exit173.thread, label %217

; <label>:217                                     ; preds = %rs_write_boolean.exit166
  %218 = call i64 @encwrite(i8* %buf.i167, i64 1, %struct.__sFILE* %savef) #8
  %219 = icmp eq i64 %218, 1
  br i1 %219, label %rs_write_boolean.exit173, label %220

; <label>:220                                     ; preds = %217
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit173.thread

rs_write_boolean.exit173.thread:                  ; preds = %220, %rs_write_boolean.exit166, %rs_write_boolean.exit166.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i167) #8
  %221 = load i8* @tombstone, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i174) #8
  store i8 %221, i8* %buf.i174, align 1, !tbaa !28
  br label %rs_write_boolean.exit180.thread

rs_write_boolean.exit173:                         ; preds = %217
  %.b1.i176.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i167) #8
  %222 = load i8* @tombstone, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i174) #8
  store i8 %222, i8* %buf.i174, align 1, !tbaa !28
  br i1 %.b1.i176.pre, label %rs_write_boolean.exit180.thread, label %223

; <label>:223                                     ; preds = %rs_write_boolean.exit173
  %224 = call i64 @encwrite(i8* %buf.i174, i64 1, %struct.__sFILE* %savef) #8
  %225 = icmp eq i64 %224, 1
  br i1 %225, label %rs_write_boolean.exit180, label %226

; <label>:226                                     ; preds = %223
  store i1 true, i1* @write_error, align 1
  br label %rs_write_boolean.exit180.thread

rs_write_boolean.exit180.thread:                  ; preds = %226, %rs_write_boolean.exit173, %rs_write_boolean.exit173.thread
  call void @llvm.lifetime.end(i64 1, i8* %buf.i174) #8
  %227 = bitcast i32* %63 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %227) #8
  store i32 0, i32* %63, align 4, !tbaa !38
  br label %rs_write_int.exit185.thread

rs_write_boolean.exit180:                         ; preds = %223
  %.b1.i181.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i174) #8
  %228 = bitcast i32* %63 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %228) #8
  store i32 0, i32* %63, align 4, !tbaa !38
  br i1 %.b1.i181.pre, label %rs_write_int.exit185.thread, label %229

; <label>:229                                     ; preds = %rs_write_boolean.exit180
  %230 = call i64 @encwrite(i8* %228, i64 4, %struct.__sFILE* %savef) #8
  %231 = icmp eq i64 %230, 4
  br i1 %231, label %rs_write_int.exit185, label %232

; <label>:232                                     ; preds = %229
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit185.thread

rs_write_int.exit185.thread:                      ; preds = %232, %rs_write_boolean.exit180, %rs_write_boolean.exit180.thread
  %.ph643 = phi i8* [ %228, %rs_write_boolean.exit180 ], [ %228, %232 ], [ %227, %rs_write_boolean.exit180.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph643) #8
  br label %rs_write_booleans.exit.thread

rs_write_int.exit185:                             ; preds = %229
  %.b1.i186.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %228) #8
  br i1 %.b1.i186.pre, label %rs_write_booleans.exit.thread, label %233

; <label>:233                                     ; preds = %rs_write_int.exit185
  %234 = bitcast i32* %62 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %234) #8
  store i32 26, i32* %62, align 4, !tbaa !38
  %235 = call i64 @encwrite(i8* %234, i64 4, %struct.__sFILE* %savef) #8
  %236 = icmp eq i64 %235, 4
  br i1 %236, label %.rs_write_int.exit.preheader.i_crit_edge, label %237

.rs_write_int.exit.preheader.i_crit_edge:         ; preds = %233
  %.b1.i2.pre.i.pre = load i1* @write_error, align 1
  br label %.lr.ph.i

; <label>:237                                     ; preds = %233
  store i1 true, i1* @write_error, align 1
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.rs_write.exit_crit_edge.i4.i, %237, %.rs_write_int.exit.preheader.i_crit_edge
  %.b1.i188595 = phi i1 [ %.b.pre.i3.i, %.rs_write.exit_crit_edge.i4.i ], [ true, %237 ], [ %.b1.i2.pre.i.pre, %.rs_write_int.exit.preheader.i_crit_edge ]
  %.b1.i2.i = phi i1 [ false, %.rs_write.exit_crit_edge.i4.i ], [ true, %237 ], [ %.b1.i2.pre.i.pre, %.rs_write_int.exit.preheader.i_crit_edge ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %.rs_write.exit_crit_edge.i4.i ], [ 0, %.rs_write_int.exit.preheader.i_crit_edge ], [ 0, %237 ]
  %238 = getelementptr inbounds [0 x i8]* bitcast ([26 x i8]* @pack_used to [0 x i8]*), i64 0, i64 %indvars.iv.i
  %239 = load i8* %238, align 1, !tbaa !5, !range !7
  call void @llvm.lifetime.start(i64 1, i8* %buf.i.i) #8
  store i8 %239, i8* %buf.i.i, align 1, !tbaa !28
  br i1 %.b1.i2.i, label %rs_write_booleans.exit, label %240

; <label>:240                                     ; preds = %.lr.ph.i
  %241 = call i64 @encwrite(i8* %buf.i.i, i64 1, %struct.__sFILE* %savef) #8
  %242 = icmp eq i64 %241, 1
  br i1 %242, label %.rs_write.exit_crit_edge.i4.i, label %.critedge6.i

.rs_write.exit_crit_edge.i4.i:                    ; preds = %240
  %.b.pre.i3.i = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i.i) #8
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %.b.pre.i3.i.not = xor i1 %.b.pre.i3.i, true
  %243 = trunc i64 %indvars.iv.next.i to i32
  %244 = icmp slt i32 %243, 26
  %or.cond = and i1 %244, %.b.pre.i3.i.not
  br i1 %or.cond, label %.lr.ph.i, label %rs_write_booleans.exit

.critedge6.i:                                     ; preds = %240
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i.i) #8
  br label %rs_write_booleans.exit.thread

rs_write_booleans.exit.thread:                    ; preds = %.critedge6.i, %rs_write_int.exit185, %rs_write_int.exit185.thread
  %245 = load i8* @dir_ch, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %61) #8
  store i8 %245, i8* %61, align 1, !tbaa !28
  br label %rs_write_chars.exit205

rs_write_booleans.exit:                           ; preds = %.rs_write.exit_crit_edge.i4.i, %.lr.ph.i
  %.b1.i188 = phi i1 [ %.b1.i188595, %.lr.ph.i ], [ %.b.pre.i3.i, %.rs_write.exit_crit_edge.i4.i ]
  %246 = load i8* @dir_ch, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %61) #8
  store i8 %246, i8* %61, align 1, !tbaa !28
  br i1 %.b1.i188, label %rs_write_chars.exit205, label %247

; <label>:247                                     ; preds = %rs_write_booleans.exit
  %248 = call i64 @encwrite(i8* %61, i64 1, %struct.__sFILE* %savef) #8
  %249 = icmp eq i64 %248, 1
  br i1 %249, label %rs_write_char.exit, label %250

; <label>:250                                     ; preds = %247
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit205

rs_write_char.exit:                               ; preds = %247
  %.b1.i192.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %61) #8
  br i1 %.b1.i192.pre, label %rs_write_chars.exit205, label %251

; <label>:251                                     ; preds = %rs_write_char.exit
  %252 = bitcast i32* %60 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %252) #8
  store i32 1024, i32* %60, align 4, !tbaa !38
  %253 = call i64 @encwrite(i8* %252, i64 4, %struct.__sFILE* %savef) #8
  %254 = icmp eq i64 %253, 4
  br i1 %254, label %rs_write_int.exit.i194, label %rs_write_int.exit.thread.i

rs_write_int.exit.thread.i:                       ; preds = %251
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %252) #8
  br label %rs_write_chars.exit205

rs_write_int.exit.i194:                           ; preds = %251
  %.b1.i2.pre.i193 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %252) #8
  br i1 %.b1.i2.pre.i193, label %rs_write_chars.exit205, label %255

; <label>:255                                     ; preds = %rs_write_int.exit.i194
  %256 = call i64 @encwrite(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i64 1024, %struct.__sFILE* %savef) #8
  %257 = icmp eq i64 %256, 1024
  br i1 %257, label %rs_write_chars.exit, label %258

; <label>:258                                     ; preds = %255
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit205

rs_write_chars.exit:                              ; preds = %255
  %.b.pre.i195 = load i1* @write_error, align 1
  br i1 %.b.pre.i195, label %rs_write_chars.exit205, label %259

; <label>:259                                     ; preds = %rs_write_chars.exit
  %260 = bitcast i32* %59 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %260) #8
  store i32 1024, i32* %59, align 4, !tbaa !38
  %261 = call i64 @encwrite(i8* %260, i64 4, %struct.__sFILE* %savef) #8
  %262 = icmp eq i64 %261, 4
  br i1 %262, label %rs_write_int.exit.i201, label %rs_write_int.exit.thread.i199

rs_write_int.exit.thread.i199:                    ; preds = %259
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %260) #8
  br label %rs_write_chars.exit205

rs_write_int.exit.i201:                           ; preds = %259
  %.b1.i2.pre.i200 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %260) #8
  br i1 %.b1.i2.pre.i200, label %rs_write_chars.exit205, label %263

; <label>:263                                     ; preds = %rs_write_int.exit.i201
  %264 = call i64 @encwrite(i8* getelementptr inbounds ([1024 x i8]* @huh, i64 0, i64 0), i64 1024, %struct.__sFILE* %savef) #8
  %265 = icmp eq i64 %264, 1024
  br i1 %265, label %rs_write_chars.exit205, label %266

; <label>:266                                     ; preds = %263
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit205

rs_write_chars.exit205:                           ; preds = %266, %263, %rs_write_int.exit.i201, %rs_write_int.exit.thread.i199, %rs_write_chars.exit, %258, %rs_write_int.exit.i194, %rs_write_int.exit.thread.i, %rs_write_char.exit, %250, %rs_write_booleans.exit, %rs_write_booleans.exit.thread
  %267 = call i32 @rs_write_potions(%struct.__sFILE* %savef)
  %.b1.i206 = load i1* @write_error, align 1
  br i1 %.b1.i206, label %rs_write_chars.exit213, label %268

; <label>:268                                     ; preds = %rs_write_chars.exit205
  %269 = bitcast i32* %58 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %269) #8
  store i32 2048, i32* %58, align 4, !tbaa !38
  %270 = call i64 @encwrite(i8* %269, i64 4, %struct.__sFILE* %savef) #8
  %271 = icmp eq i64 %270, 4
  br i1 %271, label %rs_write_int.exit.i209, label %rs_write_int.exit.thread.i207

rs_write_int.exit.thread.i207:                    ; preds = %268
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %269) #8
  br label %rs_write_chars.exit213

rs_write_int.exit.i209:                           ; preds = %268
  %.b1.i2.pre.i208 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %269) #8
  br i1 %.b1.i2.pre.i208, label %rs_write_chars.exit213, label %272

; <label>:272                                     ; preds = %rs_write_int.exit.i209
  %273 = call i64 @encwrite(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i64 2048, %struct.__sFILE* %savef) #8
  %274 = icmp eq i64 %273, 2048
  br i1 %274, label %rs_write_chars.exit213, label %275

; <label>:275                                     ; preds = %272
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit213

rs_write_chars.exit213:                           ; preds = %275, %272, %rs_write_int.exit.i209, %rs_write_int.exit.thread.i207, %rs_write_chars.exit205
  %276 = call i32 @rs_write_rings(%struct.__sFILE* %savef)
  %277 = load i8** @release, align 8, !tbaa !1
  %278 = call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %277)
  %279 = load i8* @runch, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %57) #8
  store i8 %279, i8* %57, align 1, !tbaa !28
  %.b1.i214 = load i1* @write_error, align 1
  br i1 %.b1.i214, label %rs_write_char.exit218, label %280

; <label>:280                                     ; preds = %rs_write_chars.exit213
  %281 = call i64 @encwrite(i8* %57, i64 1, %struct.__sFILE* %savef) #8
  %282 = icmp eq i64 %281, 1
  br i1 %282, label %rs_write_char.exit218, label %283

; <label>:283                                     ; preds = %280
  store i1 true, i1* @write_error, align 1
  br label %rs_write_char.exit218

rs_write_char.exit218:                            ; preds = %283, %280, %rs_write_chars.exit213
  call void @llvm.lifetime.end(i64 1, i8* %57) #8
  %284 = call i32 @rs_write_scrolls(%struct.__sFILE* %savef)
  %285 = load i8* @take, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %56) #8
  store i8 %285, i8* %56, align 1, !tbaa !28
  %.b1.i219 = load i1* @write_error, align 1
  br i1 %.b1.i219, label %rs_write_chars.exit231, label %286

; <label>:286                                     ; preds = %rs_write_char.exit218
  %287 = call i64 @encwrite(i8* %56, i64 1, %struct.__sFILE* %savef) #8
  %288 = icmp eq i64 %287, 1
  br i1 %288, label %rs_write_char.exit223, label %289

; <label>:289                                     ; preds = %286
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit231

rs_write_char.exit223:                            ; preds = %286
  %.b1.i224.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %56) #8
  br i1 %.b1.i224.pre, label %rs_write_chars.exit231, label %290

; <label>:290                                     ; preds = %rs_write_char.exit223
  %291 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %291) #8
  store i32 1024, i32* %55, align 4, !tbaa !38
  %292 = call i64 @encwrite(i8* %291, i64 4, %struct.__sFILE* %savef) #8
  %293 = icmp eq i64 %292, 4
  br i1 %293, label %rs_write_int.exit.i227, label %rs_write_int.exit.thread.i225

rs_write_int.exit.thread.i225:                    ; preds = %290
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %291) #8
  br label %rs_write_chars.exit231

rs_write_int.exit.i227:                           ; preds = %290
  %.b1.i2.pre.i226 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %291) #8
  br i1 %.b1.i2.pre.i226, label %rs_write_chars.exit231, label %294

; <label>:294                                     ; preds = %rs_write_int.exit.i227
  %295 = call i64 @encwrite(i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0), i64 1024, %struct.__sFILE* %savef) #8
  %296 = icmp eq i64 %295, 1024
  br i1 %296, label %rs_write_chars.exit231, label %297

; <label>:297                                     ; preds = %294
  store i1 true, i1* @write_error, align 1
  br label %rs_write_chars.exit231

rs_write_chars.exit231:                           ; preds = %297, %294, %rs_write_int.exit.i227, %rs_write_int.exit.thread.i225, %rs_write_char.exit223, %289, %rs_write_char.exit218
  %298 = call i32 @rs_write_sticks(%struct.__sFILE* %savef)
  %299 = load i32* @orig_dsusp, align 4, !tbaa !38
  %300 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %300) #8
  store i32 %299, i32* %54, align 4, !tbaa !38
  %.b1.i232 = load i1* @write_error, align 1
  br i1 %.b1.i232, label %rs_write_strings.exit.thread, label %301

; <label>:301                                     ; preds = %rs_write_chars.exit231
  %302 = call i64 @encwrite(i8* %300, i64 4, %struct.__sFILE* %savef) #8
  %303 = icmp eq i64 %302, 4
  br i1 %303, label %rs_write_int.exit236, label %304

; <label>:304                                     ; preds = %301
  store i1 true, i1* @write_error, align 1
  br label %rs_write_strings.exit.thread

rs_write_int.exit236:                             ; preds = %301
  %.b1.i237.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %300) #8
  br i1 %.b1.i237.pre, label %rs_write_strings.exit.thread, label %305

; <label>:305                                     ; preds = %rs_write_int.exit236
  %306 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %306) #8
  store i32 1024, i32* %53, align 4, !tbaa !38
  %307 = call i64 @encwrite(i8* %306, i64 4, %struct.__sFILE* %savef) #8
  %308 = icmp eq i64 %307, 4
  br i1 %308, label %rs_write_int.exit.i240, label %rs_write_int.exit.thread.i238

rs_write_int.exit.thread.i238:                    ; preds = %305
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %306) #8
  br label %rs_write_strings.exit.thread

rs_write_int.exit.i240:                           ; preds = %305
  %.b1.i2.pre.i239 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %306) #8
  br i1 %.b1.i2.pre.i239, label %rs_write_strings.exit.thread, label %309

; <label>:309                                     ; preds = %rs_write_int.exit.i240
  %310 = call i64 @encwrite(i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0), i64 1024, %struct.__sFILE* %savef) #8
  %311 = icmp eq i64 %310, 1024
  br i1 %311, label %rs_write_chars.exit244, label %312

; <label>:312                                     ; preds = %309
  store i1 true, i1* @write_error, align 1
  br label %rs_write_strings.exit.thread

rs_write_chars.exit244:                           ; preds = %309
  %.b.pre.i241 = load i1* @write_error, align 1
  br i1 %.b.pre.i241, label %rs_write_strings.exit.thread, label %313

; <label>:313                                     ; preds = %rs_write_chars.exit244
  %314 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %314) #8
  store i32 1024, i32* %52, align 4, !tbaa !38
  %315 = call i64 @encwrite(i8* %314, i64 4, %struct.__sFILE* %savef) #8
  %316 = icmp eq i64 %315, 4
  br i1 %316, label %rs_write_int.exit.i248, label %rs_write_int.exit.thread.i246

rs_write_int.exit.thread.i246:                    ; preds = %313
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %314) #8
  br label %rs_write_strings.exit.thread

rs_write_int.exit.i248:                           ; preds = %313
  %.b1.i2.pre.i247 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %314) #8
  br i1 %.b1.i2.pre.i247, label %rs_write_strings.exit.thread, label %317

; <label>:317                                     ; preds = %rs_write_int.exit.i248
  %318 = call i64 @encwrite(i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i64 1024, %struct.__sFILE* %savef) #8
  %319 = icmp eq i64 %318, 1024
  br i1 %319, label %rs_write_chars.exit252, label %320

; <label>:320                                     ; preds = %317
  store i1 true, i1* @write_error, align 1
  br label %rs_write_strings.exit.thread

rs_write_chars.exit252:                           ; preds = %317
  %.b.pre.i249 = load i1* @write_error, align 1
  br i1 %.b.pre.i249, label %rs_write_strings.exit.thread, label %321

; <label>:321                                     ; preds = %rs_write_chars.exit252
  %322 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %322) #8
  store i32 3, i32* %51, align 4, !tbaa !38
  %323 = call i64 @encwrite(i8* %322, i64 4, %struct.__sFILE* %savef) #8
  %324 = icmp eq i64 %323, 4
  br i1 %324, label %.lr.ph.i257, label %325

; <label>:325                                     ; preds = %321
  store i1 true, i1* @write_error, align 1
  br label %.lr.ph.i257

.lr.ph.i257:                                      ; preds = %.lr.ph.i257, %325, %321
  %indvars.iv.i255 = phi i64 [ %indvars.iv.next.i256, %.lr.ph.i257 ], [ 0, %325 ], [ 0, %321 ]
  %326 = getelementptr inbounds [0 x i8*]* bitcast ([3 x i8*]* @inv_t_name to [0 x i8*]*), i64 0, i64 %indvars.iv.i255
  %327 = load i8** %326, align 8, !tbaa !1
  %328 = call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %327) #8
  %329 = icmp eq i32 %328, 0
  %indvars.iv.next.i256 = add nuw nsw i64 %indvars.iv.i255, 1
  %330 = trunc i64 %indvars.iv.next.i256 to i32
  %331 = icmp slt i32 %330, 3
  %or.cond.i = and i1 %329, %331
  br i1 %or.cond.i, label %.lr.ph.i257, label %rs_write_strings.exit

rs_write_strings.exit.thread:                     ; preds = %rs_write_chars.exit252, %320, %rs_write_int.exit.i248, %rs_write_int.exit.thread.i246, %rs_write_chars.exit244, %312, %rs_write_int.exit.i240, %rs_write_int.exit.thread.i238, %rs_write_int.exit236, %304, %rs_write_chars.exit231
  %332 = load i8* @l_last_comm, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %50) #8
  store i8 %332, i8* %50, align 1, !tbaa !28
  br label %rs_write_char.exit263.thread

rs_write_strings.exit:                            ; preds = %.lr.ph.i257
  %.b1.i259.pre = load i1* @write_error, align 1
  %333 = load i8* @l_last_comm, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %50) #8
  store i8 %333, i8* %50, align 1, !tbaa !28
  br i1 %.b1.i259.pre, label %rs_write_char.exit263.thread, label %334

; <label>:334                                     ; preds = %rs_write_strings.exit
  %335 = call i64 @encwrite(i8* %50, i64 1, %struct.__sFILE* %savef) #8
  %336 = icmp eq i64 %335, 1
  br i1 %336, label %rs_write_char.exit263, label %337

; <label>:337                                     ; preds = %334
  store i1 true, i1* @write_error, align 1
  br label %rs_write_char.exit263.thread

rs_write_char.exit263.thread:                     ; preds = %337, %rs_write_strings.exit, %rs_write_strings.exit.thread
  call void @llvm.lifetime.end(i64 1, i8* %50) #8
  %338 = load i8* @l_last_dir, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %49) #8
  store i8 %338, i8* %49, align 1, !tbaa !28
  br label %rs_write_char.exit268.thread

rs_write_char.exit263:                            ; preds = %334
  %.b1.i264.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %50) #8
  %339 = load i8* @l_last_dir, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %49) #8
  store i8 %339, i8* %49, align 1, !tbaa !28
  br i1 %.b1.i264.pre, label %rs_write_char.exit268.thread, label %340

; <label>:340                                     ; preds = %rs_write_char.exit263
  %341 = call i64 @encwrite(i8* %49, i64 1, %struct.__sFILE* %savef) #8
  %342 = icmp eq i64 %341, 1
  br i1 %342, label %rs_write_char.exit268, label %343

; <label>:343                                     ; preds = %340
  store i1 true, i1* @write_error, align 1
  br label %rs_write_char.exit268.thread

rs_write_char.exit268.thread:                     ; preds = %343, %rs_write_char.exit263, %rs_write_char.exit263.thread
  call void @llvm.lifetime.end(i64 1, i8* %49) #8
  %344 = load i8* @last_comm, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %48) #8
  store i8 %344, i8* %48, align 1, !tbaa !28
  br label %rs_write_char.exit273.thread

rs_write_char.exit268:                            ; preds = %340
  %.b1.i269.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %49) #8
  %345 = load i8* @last_comm, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %48) #8
  store i8 %345, i8* %48, align 1, !tbaa !28
  br i1 %.b1.i269.pre, label %rs_write_char.exit273.thread, label %346

; <label>:346                                     ; preds = %rs_write_char.exit268
  %347 = call i64 @encwrite(i8* %48, i64 1, %struct.__sFILE* %savef) #8
  %348 = icmp eq i64 %347, 1
  br i1 %348, label %rs_write_char.exit273, label %349

; <label>:349                                     ; preds = %346
  store i1 true, i1* @write_error, align 1
  br label %rs_write_char.exit273.thread

rs_write_char.exit273.thread:                     ; preds = %349, %rs_write_char.exit268, %rs_write_char.exit268.thread
  call void @llvm.lifetime.end(i64 1, i8* %48) #8
  %350 = load i8* @last_dir, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %47) #8
  store i8 %350, i8* %47, align 1, !tbaa !28
  br label %rs_write_strings.exit288.thread

rs_write_char.exit273:                            ; preds = %346
  %.b1.i274.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %48) #8
  %351 = load i8* @last_dir, align 1, !tbaa !28
  call void @llvm.lifetime.start(i64 1, i8* %47) #8
  store i8 %351, i8* %47, align 1, !tbaa !28
  br i1 %.b1.i274.pre, label %rs_write_strings.exit288.thread, label %352

; <label>:352                                     ; preds = %rs_write_char.exit273
  %353 = call i64 @encwrite(i8* %47, i64 1, %struct.__sFILE* %savef) #8
  %354 = icmp eq i64 %353, 1
  br i1 %354, label %rs_write_char.exit278, label %355

; <label>:355                                     ; preds = %352
  store i1 true, i1* @write_error, align 1
  br label %rs_write_strings.exit288.thread

rs_write_char.exit278:                            ; preds = %352
  %.b1.i279.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %47) #8
  br i1 %.b1.i279.pre, label %rs_write_strings.exit288.thread, label %356

; <label>:356                                     ; preds = %rs_write_char.exit278
  %357 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %357) #8
  store i32 8, i32* %46, align 4, !tbaa !38
  %358 = call i64 @encwrite(i8* %357, i64 4, %struct.__sFILE* %savef) #8
  %359 = icmp eq i64 %358, 4
  br i1 %359, label %.lr.ph.i284, label %360

; <label>:360                                     ; preds = %356
  store i1 true, i1* @write_error, align 1
  br label %.lr.ph.i284

.lr.ph.i284:                                      ; preds = %.lr.ph.i284, %360, %356
  %indvars.iv.i281 = phi i64 [ %indvars.iv.next.i282, %.lr.ph.i284 ], [ 0, %360 ], [ 0, %356 ]
  %361 = getelementptr inbounds [0 x i8*]* bitcast ([8 x i8*]* @tr_name to [0 x i8*]*), i64 0, i64 %indvars.iv.i281
  %362 = load i8** %361, align 8, !tbaa !1
  %363 = call i32 @rs_write_string(%struct.__sFILE* %savef, i8* %362) #8
  %364 = icmp eq i32 %363, 0
  %indvars.iv.next.i282 = add nuw nsw i64 %indvars.iv.i281, 1
  %365 = trunc i64 %indvars.iv.next.i282 to i32
  %366 = icmp slt i32 %365, 8
  %or.cond.i283 = and i1 %364, %366
  br i1 %or.cond.i283, label %.lr.ph.i284, label %rs_write_strings.exit288

rs_write_strings.exit288.thread:                  ; preds = %rs_write_char.exit278, %355, %rs_write_char.exit273, %rs_write_char.exit273.thread
  %367 = load i32* @n_objs, align 4, !tbaa !38
  %368 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %368) #8
  store i32 %367, i32* %45, align 4, !tbaa !38
  br label %rs_write_int.exit293.thread

rs_write_strings.exit288:                         ; preds = %.lr.ph.i284
  %.b1.i289.pre = load i1* @write_error, align 1
  %369 = load i32* @n_objs, align 4, !tbaa !38
  %370 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %370) #8
  store i32 %369, i32* %45, align 4, !tbaa !38
  br i1 %.b1.i289.pre, label %rs_write_int.exit293.thread, label %371

; <label>:371                                     ; preds = %rs_write_strings.exit288
  %372 = call i64 @encwrite(i8* %370, i64 4, %struct.__sFILE* %savef) #8
  %373 = icmp eq i64 %372, 4
  br i1 %373, label %rs_write_int.exit293, label %374

; <label>:374                                     ; preds = %371
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit293.thread

rs_write_int.exit293.thread:                      ; preds = %374, %rs_write_strings.exit288, %rs_write_strings.exit288.thread
  %.ph644 = phi i8* [ %370, %rs_write_strings.exit288 ], [ %370, %374 ], [ %368, %rs_write_strings.exit288.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph644) #8
  %375 = load i32* @ntraps, align 4, !tbaa !38
  %376 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %376) #8
  store i32 %375, i32* %44, align 4, !tbaa !38
  br label %rs_write_int.exit298.thread

rs_write_int.exit293:                             ; preds = %371
  %.b1.i294.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %370) #8
  %377 = load i32* @ntraps, align 4, !tbaa !38
  %378 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %378) #8
  store i32 %377, i32* %44, align 4, !tbaa !38
  br i1 %.b1.i294.pre, label %rs_write_int.exit298.thread, label %379

; <label>:379                                     ; preds = %rs_write_int.exit293
  %380 = call i64 @encwrite(i8* %378, i64 4, %struct.__sFILE* %savef) #8
  %381 = icmp eq i64 %380, 4
  br i1 %381, label %rs_write_int.exit298, label %382

; <label>:382                                     ; preds = %379
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit298.thread

rs_write_int.exit298.thread:                      ; preds = %382, %rs_write_int.exit293, %rs_write_int.exit293.thread
  %.ph645 = phi i8* [ %378, %rs_write_int.exit293 ], [ %378, %382 ], [ %376, %rs_write_int.exit293.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph645) #8
  %383 = load i32* @hungry_state, align 4, !tbaa !38
  %384 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %384) #8
  store i32 %383, i32* %43, align 4, !tbaa !38
  br label %rs_write_int.exit303.thread

rs_write_int.exit298:                             ; preds = %379
  %.b1.i299.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %378) #8
  %385 = load i32* @hungry_state, align 4, !tbaa !38
  %386 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %386) #8
  store i32 %385, i32* %43, align 4, !tbaa !38
  br i1 %.b1.i299.pre, label %rs_write_int.exit303.thread, label %387

; <label>:387                                     ; preds = %rs_write_int.exit298
  %388 = call i64 @encwrite(i8* %386, i64 4, %struct.__sFILE* %savef) #8
  %389 = icmp eq i64 %388, 4
  br i1 %389, label %rs_write_int.exit303, label %390

; <label>:390                                     ; preds = %387
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit303.thread

rs_write_int.exit303.thread:                      ; preds = %390, %rs_write_int.exit298, %rs_write_int.exit298.thread
  %.ph646 = phi i8* [ %386, %rs_write_int.exit298 ], [ %386, %390 ], [ %384, %rs_write_int.exit298.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph646) #8
  %391 = load i32* @inpack, align 4, !tbaa !38
  %392 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %392) #8
  store i32 %391, i32* %42, align 4, !tbaa !38
  br label %rs_write_int.exit308.thread

rs_write_int.exit303:                             ; preds = %387
  %.b1.i304.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %386) #8
  %393 = load i32* @inpack, align 4, !tbaa !38
  %394 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %394) #8
  store i32 %393, i32* %42, align 4, !tbaa !38
  br i1 %.b1.i304.pre, label %rs_write_int.exit308.thread, label %395

; <label>:395                                     ; preds = %rs_write_int.exit303
  %396 = call i64 @encwrite(i8* %394, i64 4, %struct.__sFILE* %savef) #8
  %397 = icmp eq i64 %396, 4
  br i1 %397, label %rs_write_int.exit308, label %398

; <label>:398                                     ; preds = %395
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit308.thread

rs_write_int.exit308.thread:                      ; preds = %398, %rs_write_int.exit303, %rs_write_int.exit303.thread
  %.ph647 = phi i8* [ %394, %rs_write_int.exit303 ], [ %394, %398 ], [ %392, %rs_write_int.exit303.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph647) #8
  %399 = load i32* @inv_type, align 4, !tbaa !38
  %400 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %400) #8
  store i32 %399, i32* %41, align 4, !tbaa !38
  br label %rs_write_int.exit313.thread

rs_write_int.exit308:                             ; preds = %395
  %.b1.i309.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %394) #8
  %401 = load i32* @inv_type, align 4, !tbaa !38
  %402 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %402) #8
  store i32 %401, i32* %41, align 4, !tbaa !38
  br i1 %.b1.i309.pre, label %rs_write_int.exit313.thread, label %403

; <label>:403                                     ; preds = %rs_write_int.exit308
  %404 = call i64 @encwrite(i8* %402, i64 4, %struct.__sFILE* %savef) #8
  %405 = icmp eq i64 %404, 4
  br i1 %405, label %rs_write_int.exit313, label %406

; <label>:406                                     ; preds = %403
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit313.thread

rs_write_int.exit313.thread:                      ; preds = %406, %rs_write_int.exit308, %rs_write_int.exit308.thread
  %.ph648 = phi i8* [ %402, %rs_write_int.exit308 ], [ %402, %406 ], [ %400, %rs_write_int.exit308.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph648) #8
  %407 = load i32* @level, align 4, !tbaa !38
  %408 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %408) #8
  store i32 %407, i32* %40, align 4, !tbaa !38
  br label %rs_write_int.exit318.thread

rs_write_int.exit313:                             ; preds = %403
  %.b1.i314.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %402) #8
  %409 = load i32* @level, align 4, !tbaa !38
  %410 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %410) #8
  store i32 %409, i32* %40, align 4, !tbaa !38
  br i1 %.b1.i314.pre, label %rs_write_int.exit318.thread, label %411

; <label>:411                                     ; preds = %rs_write_int.exit313
  %412 = call i64 @encwrite(i8* %410, i64 4, %struct.__sFILE* %savef) #8
  %413 = icmp eq i64 %412, 4
  br i1 %413, label %rs_write_int.exit318, label %414

; <label>:414                                     ; preds = %411
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit318.thread

rs_write_int.exit318.thread:                      ; preds = %414, %rs_write_int.exit313, %rs_write_int.exit313.thread
  %.ph649 = phi i8* [ %410, %rs_write_int.exit313 ], [ %410, %414 ], [ %408, %rs_write_int.exit313.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph649) #8
  %415 = load i32* @max_level, align 4, !tbaa !38
  %416 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %416) #8
  store i32 %415, i32* %39, align 4, !tbaa !38
  br label %rs_write_int.exit323.thread

rs_write_int.exit318:                             ; preds = %411
  %.b1.i319.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %410) #8
  %417 = load i32* @max_level, align 4, !tbaa !38
  %418 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %418) #8
  store i32 %417, i32* %39, align 4, !tbaa !38
  br i1 %.b1.i319.pre, label %rs_write_int.exit323.thread, label %419

; <label>:419                                     ; preds = %rs_write_int.exit318
  %420 = call i64 @encwrite(i8* %418, i64 4, %struct.__sFILE* %savef) #8
  %421 = icmp eq i64 %420, 4
  br i1 %421, label %rs_write_int.exit323, label %422

; <label>:422                                     ; preds = %419
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit323.thread

rs_write_int.exit323.thread:                      ; preds = %422, %rs_write_int.exit318, %rs_write_int.exit318.thread
  %.ph650 = phi i8* [ %418, %rs_write_int.exit318 ], [ %418, %422 ], [ %416, %rs_write_int.exit318.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph650) #8
  %423 = load i32* @mpos, align 4, !tbaa !38
  %424 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %424) #8
  store i32 %423, i32* %38, align 4, !tbaa !38
  br label %rs_write_int.exit328.thread

rs_write_int.exit323:                             ; preds = %419
  %.b1.i324.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %418) #8
  %425 = load i32* @mpos, align 4, !tbaa !38
  %426 = bitcast i32* %38 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %426) #8
  store i32 %425, i32* %38, align 4, !tbaa !38
  br i1 %.b1.i324.pre, label %rs_write_int.exit328.thread, label %427

; <label>:427                                     ; preds = %rs_write_int.exit323
  %428 = call i64 @encwrite(i8* %426, i64 4, %struct.__sFILE* %savef) #8
  %429 = icmp eq i64 %428, 4
  br i1 %429, label %rs_write_int.exit328, label %430

; <label>:430                                     ; preds = %427
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit328.thread

rs_write_int.exit328.thread:                      ; preds = %430, %rs_write_int.exit323, %rs_write_int.exit323.thread
  %.ph651 = phi i8* [ %426, %rs_write_int.exit323 ], [ %426, %430 ], [ %424, %rs_write_int.exit323.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph651) #8
  %431 = load i32* @no_food, align 4, !tbaa !38
  %432 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %432) #8
  store i32 %431, i32* %37, align 4, !tbaa !38
  br label %rs_write_int.exit333.thread

rs_write_int.exit328:                             ; preds = %427
  %.b1.i329.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %426) #8
  %433 = load i32* @no_food, align 4, !tbaa !38
  %434 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %434) #8
  store i32 %433, i32* %37, align 4, !tbaa !38
  br i1 %.b1.i329.pre, label %rs_write_int.exit333.thread, label %435

; <label>:435                                     ; preds = %rs_write_int.exit328
  %436 = call i64 @encwrite(i8* %434, i64 4, %struct.__sFILE* %savef) #8
  %437 = icmp eq i64 %436, 4
  br i1 %437, label %rs_write_int.exit333, label %438

; <label>:438                                     ; preds = %435
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit333.thread

rs_write_int.exit333.thread:                      ; preds = %438, %rs_write_int.exit328, %rs_write_int.exit328.thread
  %.ph652 = phi i8* [ %434, %rs_write_int.exit328 ], [ %434, %438 ], [ %432, %rs_write_int.exit328.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph652) #8
  br label %rs_write_ints.exit.thread

rs_write_int.exit333:                             ; preds = %435
  %.b1.i334.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %434) #8
  br i1 %.b1.i334.pre, label %rs_write_ints.exit.thread, label %439

; <label>:439                                     ; preds = %rs_write_int.exit333
  %440 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %440) #8
  store i32 8, i32* %36, align 4, !tbaa !38
  %441 = call i64 @encwrite(i8* %440, i64 4, %struct.__sFILE* %savef) #8
  %442 = icmp eq i64 %441, 4
  br i1 %442, label %.rs_write_int.exit.preheader.i335_crit_edge, label %443

.rs_write_int.exit.preheader.i335_crit_edge:      ; preds = %439
  %.b1.i2.pre.i336.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit.preheader.i335

; <label>:443                                     ; preds = %439
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader.i335

rs_write_int.exit.preheader.i335:                 ; preds = %443, %.rs_write_int.exit.preheader.i335_crit_edge
  %.b1.i2.pre.i336 = phi i1 [ %.b1.i2.pre.i336.pre, %.rs_write_int.exit.preheader.i335_crit_edge ], [ true, %443 ]
  %444 = bitcast i32* %35 to i8*
  br label %445

; <label>:445                                     ; preds = %.rs_write.exit_crit_edge.i4.i343, %rs_write_int.exit.preheader.i335
  %.b1.i345616 = phi i1 [ %.b1.i2.pre.i336, %rs_write_int.exit.preheader.i335 ], [ %.b.pre.i3.i341, %.rs_write.exit_crit_edge.i4.i343 ]
  %.b1.i2.i339 = phi i1 [ %.b1.i2.pre.i336, %rs_write_int.exit.preheader.i335 ], [ false, %.rs_write.exit_crit_edge.i4.i343 ]
  %indvars.iv.i340 = phi i64 [ 0, %rs_write_int.exit.preheader.i335 ], [ %indvars.iv.next.i342, %.rs_write.exit_crit_edge.i4.i343 ]
  %446 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %indvars.iv.i340
  %447 = load i32* %446, align 4, !tbaa !38
  call void @llvm.lifetime.start(i64 4, i8* %444) #8
  store i32 %447, i32* %35, align 4, !tbaa !38
  br i1 %.b1.i2.i339, label %rs_write_ints.exit, label %448

; <label>:448                                     ; preds = %445
  %449 = call i64 @encwrite(i8* %444, i64 4, %struct.__sFILE* %savef) #8
  %450 = icmp eq i64 %449, 4
  br i1 %450, label %.rs_write.exit_crit_edge.i4.i343, label %.critedge7.i

.rs_write.exit_crit_edge.i4.i343:                 ; preds = %448
  %.b.pre.i3.i341 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %444) #8
  %indvars.iv.next.i342 = add nuw nsw i64 %indvars.iv.i340, 1
  %.b.pre.i3.i341.not = xor i1 %.b.pre.i3.i341, true
  %451 = trunc i64 %indvars.iv.next.i342 to i32
  %452 = icmp slt i32 %451, 8
  %or.cond555 = and i1 %452, %.b.pre.i3.i341.not
  br i1 %or.cond555, label %445, label %rs_write_ints.exit

.critedge7.i:                                     ; preds = %448
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %444) #8
  br label %rs_write_ints.exit.thread

rs_write_ints.exit.thread:                        ; preds = %.critedge7.i, %rs_write_int.exit333, %rs_write_int.exit333.thread
  %453 = load i32* @count, align 4, !tbaa !38
  %454 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %454) #8
  store i32 %453, i32* %34, align 4, !tbaa !38
  br label %rs_write_int.exit349.thread

rs_write_ints.exit:                               ; preds = %.rs_write.exit_crit_edge.i4.i343, %445
  %.b1.i345 = phi i1 [ %.b1.i345616, %445 ], [ %.b.pre.i3.i341, %.rs_write.exit_crit_edge.i4.i343 ]
  %455 = load i32* @count, align 4, !tbaa !38
  %456 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %456) #8
  store i32 %455, i32* %34, align 4, !tbaa !38
  br i1 %.b1.i345, label %rs_write_int.exit349.thread, label %457

; <label>:457                                     ; preds = %rs_write_ints.exit
  %458 = call i64 @encwrite(i8* %456, i64 4, %struct.__sFILE* %savef) #8
  %459 = icmp eq i64 %458, 4
  br i1 %459, label %rs_write_int.exit349, label %460

; <label>:460                                     ; preds = %457
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit349.thread

rs_write_int.exit349.thread:                      ; preds = %460, %rs_write_ints.exit, %rs_write_ints.exit.thread
  %.ph653 = phi i8* [ %456, %rs_write_ints.exit ], [ %456, %460 ], [ %454, %rs_write_ints.exit.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph653) #8
  %461 = load i32* @food_left, align 4, !tbaa !38
  %462 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %462) #8
  store i32 %461, i32* %33, align 4, !tbaa !38
  br label %rs_write_int.exit354.thread

rs_write_int.exit349:                             ; preds = %457
  %.b1.i350.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %456) #8
  %463 = load i32* @food_left, align 4, !tbaa !38
  %464 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %464) #8
  store i32 %463, i32* %33, align 4, !tbaa !38
  br i1 %.b1.i350.pre, label %rs_write_int.exit354.thread, label %465

; <label>:465                                     ; preds = %rs_write_int.exit349
  %466 = call i64 @encwrite(i8* %464, i64 4, %struct.__sFILE* %savef) #8
  %467 = icmp eq i64 %466, 4
  br i1 %467, label %rs_write_int.exit354, label %468

; <label>:468                                     ; preds = %465
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit354.thread

rs_write_int.exit354.thread:                      ; preds = %468, %rs_write_int.exit349, %rs_write_int.exit349.thread
  %.ph654 = phi i8* [ %464, %rs_write_int.exit349 ], [ %464, %468 ], [ %462, %rs_write_int.exit349.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph654) #8
  %469 = load i32* @lastscore, align 4, !tbaa !38
  %470 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %470) #8
  store i32 %469, i32* %32, align 4, !tbaa !38
  br label %rs_write_int.exit359.thread

rs_write_int.exit354:                             ; preds = %465
  %.b1.i355.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %464) #8
  %471 = load i32* @lastscore, align 4, !tbaa !38
  %472 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %472) #8
  store i32 %471, i32* %32, align 4, !tbaa !38
  br i1 %.b1.i355.pre, label %rs_write_int.exit359.thread, label %473

; <label>:473                                     ; preds = %rs_write_int.exit354
  %474 = call i64 @encwrite(i8* %472, i64 4, %struct.__sFILE* %savef) #8
  %475 = icmp eq i64 %474, 4
  br i1 %475, label %rs_write_int.exit359, label %476

; <label>:476                                     ; preds = %473
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit359.thread

rs_write_int.exit359.thread:                      ; preds = %476, %rs_write_int.exit354, %rs_write_int.exit354.thread
  %.ph655 = phi i8* [ %472, %rs_write_int.exit354 ], [ %472, %476 ], [ %470, %rs_write_int.exit354.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph655) #8
  %477 = load i32* @no_command, align 4, !tbaa !38
  %478 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %478) #8
  store i32 %477, i32* %31, align 4, !tbaa !38
  br label %rs_write_int.exit364.thread

rs_write_int.exit359:                             ; preds = %473
  %.b1.i360.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %472) #8
  %479 = load i32* @no_command, align 4, !tbaa !38
  %480 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %480) #8
  store i32 %479, i32* %31, align 4, !tbaa !38
  br i1 %.b1.i360.pre, label %rs_write_int.exit364.thread, label %481

; <label>:481                                     ; preds = %rs_write_int.exit359
  %482 = call i64 @encwrite(i8* %480, i64 4, %struct.__sFILE* %savef) #8
  %483 = icmp eq i64 %482, 4
  br i1 %483, label %rs_write_int.exit364, label %484

; <label>:484                                     ; preds = %481
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit364.thread

rs_write_int.exit364.thread:                      ; preds = %484, %rs_write_int.exit359, %rs_write_int.exit359.thread
  %.ph656 = phi i8* [ %480, %rs_write_int.exit359 ], [ %480, %484 ], [ %478, %rs_write_int.exit359.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph656) #8
  %485 = load i32* @no_move, align 4, !tbaa !38
  %486 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %486) #8
  store i32 %485, i32* %30, align 4, !tbaa !38
  br label %rs_write_int.exit369.thread

rs_write_int.exit364:                             ; preds = %481
  %.b1.i365.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %480) #8
  %487 = load i32* @no_move, align 4, !tbaa !38
  %488 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %488) #8
  store i32 %487, i32* %30, align 4, !tbaa !38
  br i1 %.b1.i365.pre, label %rs_write_int.exit369.thread, label %489

; <label>:489                                     ; preds = %rs_write_int.exit364
  %490 = call i64 @encwrite(i8* %488, i64 4, %struct.__sFILE* %savef) #8
  %491 = icmp eq i64 %490, 4
  br i1 %491, label %rs_write_int.exit369, label %492

; <label>:492                                     ; preds = %489
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit369.thread

rs_write_int.exit369.thread:                      ; preds = %492, %rs_write_int.exit364, %rs_write_int.exit364.thread
  %.ph657 = phi i8* [ %488, %rs_write_int.exit364 ], [ %488, %492 ], [ %486, %rs_write_int.exit364.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph657) #8
  %493 = load i32* @purse, align 4, !tbaa !38
  %494 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %494) #8
  store i32 %493, i32* %29, align 4, !tbaa !38
  br label %rs_write_int.exit374.thread

rs_write_int.exit369:                             ; preds = %489
  %.b1.i370.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %488) #8
  %495 = load i32* @purse, align 4, !tbaa !38
  %496 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %496) #8
  store i32 %495, i32* %29, align 4, !tbaa !38
  br i1 %.b1.i370.pre, label %rs_write_int.exit374.thread, label %497

; <label>:497                                     ; preds = %rs_write_int.exit369
  %498 = call i64 @encwrite(i8* %496, i64 4, %struct.__sFILE* %savef) #8
  %499 = icmp eq i64 %498, 4
  br i1 %499, label %rs_write_int.exit374, label %500

; <label>:500                                     ; preds = %497
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit374.thread

rs_write_int.exit374.thread:                      ; preds = %500, %rs_write_int.exit369, %rs_write_int.exit369.thread
  %.ph658 = phi i8* [ %496, %rs_write_int.exit369 ], [ %496, %500 ], [ %494, %rs_write_int.exit369.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph658) #8
  %501 = load i32* @quiet, align 4, !tbaa !38
  %502 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %502) #8
  store i32 %501, i32* %28, align 4, !tbaa !38
  br label %rs_write_int.exit379.thread

rs_write_int.exit374:                             ; preds = %497
  %.b1.i375.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %496) #8
  %503 = load i32* @quiet, align 4, !tbaa !38
  %504 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %504) #8
  store i32 %503, i32* %28, align 4, !tbaa !38
  br i1 %.b1.i375.pre, label %rs_write_int.exit379.thread, label %505

; <label>:505                                     ; preds = %rs_write_int.exit374
  %506 = call i64 @encwrite(i8* %504, i64 4, %struct.__sFILE* %savef) #8
  %507 = icmp eq i64 %506, 4
  br i1 %507, label %rs_write_int.exit379, label %508

; <label>:508                                     ; preds = %505
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit379.thread

rs_write_int.exit379.thread:                      ; preds = %508, %rs_write_int.exit374, %rs_write_int.exit374.thread
  %.ph659 = phi i8* [ %504, %rs_write_int.exit374 ], [ %504, %508 ], [ %502, %rs_write_int.exit374.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph659) #8
  %509 = load i32* @vf_hit, align 4, !tbaa !38
  %510 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %510) #8
  store i32 %509, i32* %27, align 4, !tbaa !38
  br label %rs_write_int.exit384.thread

rs_write_int.exit379:                             ; preds = %505
  %.b1.i380.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %504) #8
  %511 = load i32* @vf_hit, align 4, !tbaa !38
  %512 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %512) #8
  store i32 %511, i32* %27, align 4, !tbaa !38
  br i1 %.b1.i380.pre, label %rs_write_int.exit384.thread, label %513

; <label>:513                                     ; preds = %rs_write_int.exit379
  %514 = call i64 @encwrite(i8* %512, i64 4, %struct.__sFILE* %savef) #8
  %515 = icmp eq i64 %514, 4
  br i1 %515, label %rs_write_int.exit384, label %516

; <label>:516                                     ; preds = %513
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit384.thread

rs_write_int.exit384.thread:                      ; preds = %516, %rs_write_int.exit379, %rs_write_int.exit379.thread
  %.ph660 = phi i8* [ %512, %rs_write_int.exit379 ], [ %512, %516 ], [ %510, %rs_write_int.exit379.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph660) #8
  %517 = load i32* @dnum, align 4, !tbaa !38
  %518 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %518) #8
  store i32 %517, i32* %26, align 4, !tbaa !38
  br label %rs_write_int.exit389.thread

rs_write_int.exit384:                             ; preds = %513
  %.b1.i385.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %512) #8
  %519 = load i32* @dnum, align 4, !tbaa !38
  %520 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %520) #8
  store i32 %519, i32* %26, align 4, !tbaa !38
  br i1 %.b1.i385.pre, label %rs_write_int.exit389.thread, label %521

; <label>:521                                     ; preds = %rs_write_int.exit384
  %522 = call i64 @encwrite(i8* %520, i64 4, %struct.__sFILE* %savef) #8
  %523 = icmp eq i64 %522, 4
  br i1 %523, label %rs_write_int.exit389, label %524

; <label>:524                                     ; preds = %521
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit389.thread

rs_write_int.exit389.thread:                      ; preds = %524, %rs_write_int.exit384, %rs_write_int.exit384.thread
  %.ph661 = phi i8* [ %520, %rs_write_int.exit384 ], [ %520, %524 ], [ %518, %rs_write_int.exit384.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph661) #8
  %525 = load i32* @seed, align 4, !tbaa !38
  %526 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %526) #8
  store i32 %525, i32* %25, align 4, !tbaa !38
  br label %rs_write_int.exit394.thread

rs_write_int.exit389:                             ; preds = %521
  %.b1.i390.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %520) #8
  %527 = load i32* @seed, align 4, !tbaa !38
  %528 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %528) #8
  store i32 %527, i32* %25, align 4, !tbaa !38
  br i1 %.b1.i390.pre, label %rs_write_int.exit394.thread, label %529

; <label>:529                                     ; preds = %rs_write_int.exit389
  %530 = call i64 @encwrite(i8* %528, i64 4, %struct.__sFILE* %savef) #8
  %531 = icmp eq i64 %530, 4
  br i1 %531, label %rs_write_int.exit394, label %532

; <label>:532                                     ; preds = %529
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit394.thread

rs_write_int.exit394.thread:                      ; preds = %532, %rs_write_int.exit389, %rs_write_int.exit389.thread
  %.ph662 = phi i8* [ %528, %rs_write_int.exit389 ], [ %528, %532 ], [ %526, %rs_write_int.exit389.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph662) #8
  br label %rs_write_coord.exit434

rs_write_int.exit394:                             ; preds = %529
  %.b1.i395.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %528) #8
  br i1 %.b1.i395.pre, label %rs_write_coord.exit434, label %533

; <label>:533                                     ; preds = %rs_write_int.exit394
  %534 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %534) #8
  store i32 21, i32* %24, align 4, !tbaa !38
  %535 = call i64 @encwrite(i8* %534, i64 4, %struct.__sFILE* %savef) #8
  %536 = icmp eq i64 %535, 4
  br i1 %536, label %.rs_write_int.exit.preheader.i396_crit_edge, label %537

.rs_write_int.exit.preheader.i396_crit_edge:      ; preds = %533
  %.b1.i2.pre.i397.pre = load i1* @write_error, align 1
  br label %rs_write_int.exit.preheader.i396

; <label>:537                                     ; preds = %533
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.preheader.i396

rs_write_int.exit.preheader.i396:                 ; preds = %537, %.rs_write_int.exit.preheader.i396_crit_edge
  %.b1.i2.pre.i397 = phi i1 [ %.b1.i2.pre.i397.pre, %.rs_write_int.exit.preheader.i396_crit_edge ], [ true, %537 ]
  %538 = bitcast i32* %23 to i8*
  br label %539

; <label>:539                                     ; preds = %.rs_write.exit_crit_edge.i4.i404, %rs_write_int.exit.preheader.i396
  %.b1.i408.pr634 = phi i1 [ %.b1.i2.pre.i397, %rs_write_int.exit.preheader.i396 ], [ %.b.pre.i3.i402, %.rs_write.exit_crit_edge.i4.i404 ]
  %.b1.i2.i400 = phi i1 [ %.b1.i2.pre.i397, %rs_write_int.exit.preheader.i396 ], [ false, %.rs_write.exit_crit_edge.i4.i404 ]
  %indvars.iv.i401 = phi i64 [ 0, %rs_write_int.exit.preheader.i396 ], [ %indvars.iv.next.i403, %.rs_write.exit_crit_edge.i4.i404 ]
  %540 = getelementptr inbounds [0 x i32]* bitcast ([21 x i32]* @e_levels to [0 x i32]*), i64 0, i64 %indvars.iv.i401
  %541 = load i32* %540, align 4, !tbaa !38
  call void @llvm.lifetime.start(i64 4, i8* %538) #8
  store i32 %541, i32* %23, align 4, !tbaa !38
  br i1 %.b1.i2.i400, label %rs_write_ints.exit407, label %542

; <label>:542                                     ; preds = %539
  %543 = call i64 @encwrite(i8* %538, i64 4, %struct.__sFILE* %savef) #8
  %544 = icmp eq i64 %543, 4
  br i1 %544, label %.rs_write.exit_crit_edge.i4.i404, label %rs_write_ints.exit407.thread

.rs_write.exit_crit_edge.i4.i404:                 ; preds = %542
  %.b.pre.i3.i402 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %538) #8
  %indvars.iv.next.i403 = add nuw nsw i64 %indvars.iv.i401, 1
  %.b.pre.i3.i402.not = xor i1 %.b.pre.i3.i402, true
  %545 = trunc i64 %indvars.iv.next.i403 to i32
  %546 = icmp slt i32 %545, 21
  %or.cond557 = and i1 %546, %.b.pre.i3.i402.not
  br i1 %or.cond557, label %539, label %rs_write_ints.exit407

rs_write_ints.exit407.thread:                     ; preds = %542
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %538) #8
  br label %rs_write_coord.exit434

rs_write_ints.exit407:                            ; preds = %.rs_write.exit_crit_edge.i4.i404, %539
  %.b1.i408.pr = phi i1 [ %.b1.i408.pr634, %539 ], [ %.b.pre.i3.i402, %.rs_write.exit_crit_edge.i4.i404 ]
  %547 = load i64* bitcast (%struct.coord* @delta to i64*), align 4
  br i1 %.b1.i408.pr, label %rs_write_coord.exit434, label %548

; <label>:548                                     ; preds = %rs_write_ints.exit407
  %549 = lshr i64 %547, 32
  %550 = trunc i64 %549 to i32
  %551 = trunc i64 %547 to i32
  %552 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %552) #8
  store i32 %551, i32* %22, align 4, !tbaa !38
  %553 = call i64 @encwrite(i8* %552, i64 4, %struct.__sFILE* %savef) #8
  %554 = icmp eq i64 %553, 4
  br i1 %554, label %rs_write_int.exit.i411, label %rs_write_int.exit.thread.i409

rs_write_int.exit.thread.i409:                    ; preds = %548
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %552) #8
  %555 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %555) #8
  store i32 %550, i32* %21, align 4, !tbaa !38
  br label %rs_write_coord.exit.thread

rs_write_int.exit.i411:                           ; preds = %548
  %.b1.i2.pre.i410 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %552) #8
  %556 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %556) #8
  store i32 %550, i32* %21, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i410, label %rs_write_coord.exit.thread, label %557

; <label>:557                                     ; preds = %rs_write_int.exit.i411
  %558 = call i64 @encwrite(i8* %556, i64 4, %struct.__sFILE* %savef) #8
  %559 = icmp eq i64 %558, 4
  br i1 %559, label %rs_write_coord.exit, label %560

; <label>:560                                     ; preds = %557
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit.thread

rs_write_coord.exit.thread:                       ; preds = %560, %rs_write_int.exit.i411, %rs_write_int.exit.thread.i409
  %.ph663 = phi i8* [ %556, %rs_write_int.exit.i411 ], [ %556, %560 ], [ %555, %rs_write_int.exit.thread.i409 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph663) #8
  br label %rs_write_coord.exit434

rs_write_coord.exit:                              ; preds = %557
  %.b1.i415.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %556) #8
  %561 = load i64* bitcast (%struct.coord* @oldpos to i64*), align 4
  br i1 %.b1.i415.pr.pr.pre, label %rs_write_coord.exit434, label %562

; <label>:562                                     ; preds = %rs_write_coord.exit
  %563 = lshr i64 %561, 32
  %564 = trunc i64 %563 to i32
  %565 = trunc i64 %561 to i32
  %566 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %566) #8
  store i32 %565, i32* %20, align 4, !tbaa !38
  %567 = call i64 @encwrite(i8* %566, i64 4, %struct.__sFILE* %savef) #8
  %568 = icmp eq i64 %567, 4
  br i1 %568, label %rs_write_int.exit.i418, label %rs_write_int.exit.thread.i416

rs_write_int.exit.thread.i416:                    ; preds = %562
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %566) #8
  %569 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %569) #8
  store i32 %564, i32* %19, align 4, !tbaa !38
  br label %rs_write_coord.exit424.thread

rs_write_int.exit.i418:                           ; preds = %562
  %.b1.i2.pre.i417 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %566) #8
  %570 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %570) #8
  store i32 %564, i32* %19, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i417, label %rs_write_coord.exit424.thread, label %571

; <label>:571                                     ; preds = %rs_write_int.exit.i418
  %572 = call i64 @encwrite(i8* %570, i64 4, %struct.__sFILE* %savef) #8
  %573 = icmp eq i64 %572, 4
  br i1 %573, label %rs_write_coord.exit424, label %574

; <label>:574                                     ; preds = %571
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit424.thread

rs_write_coord.exit424.thread:                    ; preds = %574, %rs_write_int.exit.i418, %rs_write_int.exit.thread.i416
  %.ph664 = phi i8* [ %570, %rs_write_int.exit.i418 ], [ %570, %574 ], [ %569, %rs_write_int.exit.thread.i416 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph664) #8
  br label %rs_write_coord.exit434

rs_write_coord.exit424:                           ; preds = %571
  %.b1.i425.pr.pr.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %570) #8
  %575 = load i64* bitcast (%struct.coord* @stairs to i64*), align 4
  br i1 %.b1.i425.pr.pr.pre, label %rs_write_coord.exit434, label %576

; <label>:576                                     ; preds = %rs_write_coord.exit424
  %577 = lshr i64 %575, 32
  %578 = trunc i64 %577 to i32
  %579 = trunc i64 %575 to i32
  %580 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %580) #8
  store i32 %579, i32* %18, align 4, !tbaa !38
  %581 = call i64 @encwrite(i8* %580, i64 4, %struct.__sFILE* %savef) #8
  %582 = icmp eq i64 %581, 4
  br i1 %582, label %rs_write_int.exit.i428, label %rs_write_int.exit.thread.i426

rs_write_int.exit.thread.i426:                    ; preds = %576
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %580) #8
  %583 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %583) #8
  store i32 %578, i32* %17, align 4, !tbaa !38
  br label %rs_write_int.exit6.i432

rs_write_int.exit.i428:                           ; preds = %576
  %.b1.i2.pre.i427 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %580) #8
  %584 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %584) #8
  store i32 %578, i32* %17, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i427, label %rs_write_int.exit6.i432, label %585

; <label>:585                                     ; preds = %rs_write_int.exit.i428
  %586 = call i64 @encwrite(i8* %584, i64 4, %struct.__sFILE* %savef) #8
  %587 = icmp eq i64 %586, 4
  br i1 %587, label %rs_write_int.exit6.i432, label %588

; <label>:588                                     ; preds = %585
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit6.i432

rs_write_int.exit6.i432:                          ; preds = %588, %585, %rs_write_int.exit.i428, %rs_write_int.exit.thread.i426
  %589 = phi i8* [ %584, %rs_write_int.exit.i428 ], [ %584, %588 ], [ %583, %rs_write_int.exit.thread.i426 ], [ %584, %585 ]
  call void @llvm.lifetime.end(i64 4, i8* %589) #8
  br label %rs_write_coord.exit434

rs_write_coord.exit434:                           ; preds = %rs_write_int.exit6.i432, %rs_write_coord.exit424, %rs_write_coord.exit424.thread, %rs_write_coord.exit, %rs_write_coord.exit.thread, %rs_write_ints.exit407, %rs_write_ints.exit407.thread, %rs_write_int.exit394, %rs_write_int.exit394.thread
  %590 = call i32 @rs_write_thing(%struct.__sFILE* %savef, %union.thing* @player)
  %591 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %592 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %.b1.i435 = load i1* @write_error, align 1
  br i1 %.b1.i435, label %rs_write_object_reference.exit488, label %593

; <label>:593                                     ; preds = %rs_write_coord.exit434
  %594 = icmp eq %union.thing* %591, null
  br i1 %594, label %.loopexit562, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %596, %593
  %count.03.i.i = phi i32 [ %597, %596 ], [ 0, %593 ]
  %.012.i.i = phi %union.thing* [ %599, %596 ], [ %591, %593 ]
  %595 = icmp eq %union.thing* %.012.i.i, %592
  br i1 %595, label %.loopexit562, label %596

; <label>:596                                     ; preds = %.lr.ph.i.i
  %597 = add nsw i32 %count.03.i.i, 1
  %598 = getelementptr inbounds %union.thing* %.012.i.i, i64 0, i32 0, i32 0
  %599 = load %union.thing** %598, align 8, !tbaa !14
  %600 = icmp eq %union.thing* %599, null
  br i1 %600, label %.loopexit562, label %.lr.ph.i.i

.loopexit562:                                     ; preds = %596, %.lr.ph.i.i, %593
  %.0.i.i = phi i32 [ -1, %593 ], [ -1, %596 ], [ %count.03.i.i, %.lr.ph.i.i ]
  %601 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %601) #8
  store i32 %.0.i.i, i32* %16, align 4, !tbaa !38
  %602 = call i64 @encwrite(i8* %601, i64 4, %struct.__sFILE* %savef) #8
  %603 = icmp eq i64 %602, 4
  br i1 %603, label %rs_write_object_reference.exit, label %604

; <label>:604                                     ; preds = %.loopexit562
  store i1 true, i1* @write_error, align 1
  br label %rs_write_object_reference.exit488

rs_write_object_reference.exit:                   ; preds = %.loopexit562
  %.b.pre.i436 = load i1* @write_error, align 1
  %605 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %606 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  br i1 %.b.pre.i436, label %rs_write_object_reference.exit488, label %607

; <label>:607                                     ; preds = %rs_write_object_reference.exit
  %608 = icmp eq %union.thing* %605, null
  br i1 %608, label %.loopexit561, label %.lr.ph.i.i442

.lr.ph.i.i442:                                    ; preds = %610, %607
  %count.03.i.i440 = phi i32 [ %611, %610 ], [ 0, %607 ]
  %.012.i.i441 = phi %union.thing* [ %613, %610 ], [ %605, %607 ]
  %609 = icmp eq %union.thing* %.012.i.i441, %606
  br i1 %609, label %.loopexit561, label %610

; <label>:610                                     ; preds = %.lr.ph.i.i442
  %611 = add nsw i32 %count.03.i.i440, 1
  %612 = getelementptr inbounds %union.thing* %.012.i.i441, i64 0, i32 0, i32 0
  %613 = load %union.thing** %612, align 8, !tbaa !14
  %614 = icmp eq %union.thing* %613, null
  br i1 %614, label %.loopexit561, label %.lr.ph.i.i442

.loopexit561:                                     ; preds = %610, %.lr.ph.i.i442, %607
  %.0.i.i443 = phi i32 [ -1, %607 ], [ -1, %610 ], [ %count.03.i.i440, %.lr.ph.i.i442 ]
  %615 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %615) #8
  store i32 %.0.i.i443, i32* %15, align 4, !tbaa !38
  %616 = call i64 @encwrite(i8* %615, i64 4, %struct.__sFILE* %savef) #8
  %617 = icmp eq i64 %616, 4
  br i1 %617, label %rs_write_object_reference.exit448, label %618

; <label>:618                                     ; preds = %.loopexit561
  store i1 true, i1* @write_error, align 1
  br label %rs_write_object_reference.exit488

rs_write_object_reference.exit448:                ; preds = %.loopexit561
  %.b.pre.i444 = load i1* @write_error, align 1
  %619 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %620 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  br i1 %.b.pre.i444, label %rs_write_object_reference.exit488, label %621

; <label>:621                                     ; preds = %rs_write_object_reference.exit448
  %622 = icmp eq %union.thing* %619, null
  br i1 %622, label %.loopexit560, label %.lr.ph.i.i452

.lr.ph.i.i452:                                    ; preds = %624, %621
  %count.03.i.i450 = phi i32 [ %625, %624 ], [ 0, %621 ]
  %.012.i.i451 = phi %union.thing* [ %627, %624 ], [ %619, %621 ]
  %623 = icmp eq %union.thing* %.012.i.i451, %620
  br i1 %623, label %.loopexit560, label %624

; <label>:624                                     ; preds = %.lr.ph.i.i452
  %625 = add nsw i32 %count.03.i.i450, 1
  %626 = getelementptr inbounds %union.thing* %.012.i.i451, i64 0, i32 0, i32 0
  %627 = load %union.thing** %626, align 8, !tbaa !14
  %628 = icmp eq %union.thing* %627, null
  br i1 %628, label %.loopexit560, label %.lr.ph.i.i452

.loopexit560:                                     ; preds = %624, %.lr.ph.i.i452, %621
  %.0.i.i453 = phi i32 [ -1, %621 ], [ -1, %624 ], [ %count.03.i.i450, %.lr.ph.i.i452 ]
  %629 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %629) #8
  store i32 %.0.i.i453, i32* %14, align 4, !tbaa !38
  %630 = call i64 @encwrite(i8* %629, i64 4, %struct.__sFILE* %savef) #8
  %631 = icmp eq i64 %630, 4
  br i1 %631, label %rs_write_object_reference.exit458, label %632

; <label>:632                                     ; preds = %.loopexit560
  store i1 true, i1* @write_error, align 1
  br label %rs_write_object_reference.exit488

rs_write_object_reference.exit458:                ; preds = %.loopexit560
  %.b.pre.i454 = load i1* @write_error, align 1
  %633 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %634 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  br i1 %.b.pre.i454, label %rs_write_object_reference.exit488, label %635

; <label>:635                                     ; preds = %rs_write_object_reference.exit458
  %636 = icmp eq %union.thing* %633, null
  br i1 %636, label %.loopexit559, label %.lr.ph.i.i462

.lr.ph.i.i462:                                    ; preds = %638, %635
  %count.03.i.i460 = phi i32 [ %639, %638 ], [ 0, %635 ]
  %.012.i.i461 = phi %union.thing* [ %641, %638 ], [ %633, %635 ]
  %637 = icmp eq %union.thing* %.012.i.i461, %634
  br i1 %637, label %.loopexit559, label %638

; <label>:638                                     ; preds = %.lr.ph.i.i462
  %639 = add nsw i32 %count.03.i.i460, 1
  %640 = getelementptr inbounds %union.thing* %.012.i.i461, i64 0, i32 0, i32 0
  %641 = load %union.thing** %640, align 8, !tbaa !14
  %642 = icmp eq %union.thing* %641, null
  br i1 %642, label %.loopexit559, label %.lr.ph.i.i462

.loopexit559:                                     ; preds = %638, %.lr.ph.i.i462, %635
  %.0.i.i463 = phi i32 [ -1, %635 ], [ -1, %638 ], [ %count.03.i.i460, %.lr.ph.i.i462 ]
  %643 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %643) #8
  store i32 %.0.i.i463, i32* %13, align 4, !tbaa !38
  %644 = call i64 @encwrite(i8* %643, i64 4, %struct.__sFILE* %savef) #8
  %645 = icmp eq i64 %644, 4
  br i1 %645, label %rs_write_object_reference.exit468, label %646

; <label>:646                                     ; preds = %.loopexit559
  store i1 true, i1* @write_error, align 1
  br label %rs_write_object_reference.exit488

rs_write_object_reference.exit468:                ; preds = %.loopexit559
  %.b.pre.i464 = load i1* @write_error, align 1
  %647 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %648 = load %union.thing** @l_last_pick, align 8, !tbaa !1
  br i1 %.b.pre.i464, label %rs_write_object_reference.exit488, label %649

; <label>:649                                     ; preds = %rs_write_object_reference.exit468
  %650 = icmp eq %union.thing* %647, null
  br i1 %650, label %.loopexit558, label %.lr.ph.i.i472

.lr.ph.i.i472:                                    ; preds = %652, %649
  %count.03.i.i470 = phi i32 [ %653, %652 ], [ 0, %649 ]
  %.012.i.i471 = phi %union.thing* [ %655, %652 ], [ %647, %649 ]
  %651 = icmp eq %union.thing* %.012.i.i471, %648
  br i1 %651, label %.loopexit558, label %652

; <label>:652                                     ; preds = %.lr.ph.i.i472
  %653 = add nsw i32 %count.03.i.i470, 1
  %654 = getelementptr inbounds %union.thing* %.012.i.i471, i64 0, i32 0, i32 0
  %655 = load %union.thing** %654, align 8, !tbaa !14
  %656 = icmp eq %union.thing* %655, null
  br i1 %656, label %.loopexit558, label %.lr.ph.i.i472

.loopexit558:                                     ; preds = %652, %.lr.ph.i.i472, %649
  %.0.i.i473 = phi i32 [ -1, %649 ], [ -1, %652 ], [ %count.03.i.i470, %.lr.ph.i.i472 ]
  %657 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %657) #8
  store i32 %.0.i.i473, i32* %12, align 4, !tbaa !38
  %658 = call i64 @encwrite(i8* %657, i64 4, %struct.__sFILE* %savef) #8
  %659 = icmp eq i64 %658, 4
  br i1 %659, label %rs_write_object_reference.exit478, label %660

; <label>:660                                     ; preds = %.loopexit558
  store i1 true, i1* @write_error, align 1
  br label %rs_write_object_reference.exit488

rs_write_object_reference.exit478:                ; preds = %.loopexit558
  %.b.pre.i474 = load i1* @write_error, align 1
  %661 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %662 = load %union.thing** @last_pick, align 8, !tbaa !1
  br i1 %.b.pre.i474, label %rs_write_object_reference.exit488, label %663

; <label>:663                                     ; preds = %rs_write_object_reference.exit478
  %664 = icmp eq %union.thing* %661, null
  br i1 %664, label %.loopexit, label %.lr.ph.i.i482

.lr.ph.i.i482:                                    ; preds = %666, %663
  %count.03.i.i480 = phi i32 [ %667, %666 ], [ 0, %663 ]
  %.012.i.i481 = phi %union.thing* [ %669, %666 ], [ %661, %663 ]
  %665 = icmp eq %union.thing* %.012.i.i481, %662
  br i1 %665, label %.loopexit, label %666

; <label>:666                                     ; preds = %.lr.ph.i.i482
  %667 = add nsw i32 %count.03.i.i480, 1
  %668 = getelementptr inbounds %union.thing* %.012.i.i481, i64 0, i32 0, i32 0
  %669 = load %union.thing** %668, align 8, !tbaa !14
  %670 = icmp eq %union.thing* %669, null
  br i1 %670, label %.loopexit, label %.lr.ph.i.i482

.loopexit:                                        ; preds = %666, %.lr.ph.i.i482, %663
  %.0.i.i483 = phi i32 [ -1, %663 ], [ -1, %666 ], [ %count.03.i.i480, %.lr.ph.i.i482 ]
  %671 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %671) #8
  store i32 %.0.i.i483, i32* %11, align 4, !tbaa !38
  %672 = call i64 @encwrite(i8* %671, i64 4, %struct.__sFILE* %savef) #8
  %673 = icmp eq i64 %672, 4
  br i1 %673, label %rs_write_object_reference.exit488, label %674

; <label>:674                                     ; preds = %.loopexit
  store i1 true, i1* @write_error, align 1
  br label %rs_write_object_reference.exit488

rs_write_object_reference.exit488:                ; preds = %674, %.loopexit, %rs_write_object_reference.exit478, %660, %rs_write_object_reference.exit468, %646, %rs_write_object_reference.exit458, %632, %rs_write_object_reference.exit448, %618, %rs_write_object_reference.exit, %604, %rs_write_coord.exit434
  %675 = load %union.thing** @lvl_obj, align 8, !tbaa !1
  %676 = call i32 @rs_write_object_list(%struct.__sFILE* %savef, %union.thing* %675)
  %677 = load %union.thing** @mlist, align 8, !tbaa !1
  %678 = call i32 @rs_write_thing_list(%struct.__sFILE* %savef, %union.thing* %677)
  %679 = call i32 @rs_write_places(%struct.__sFILE* %savef, %struct.PLACE* getelementptr inbounds ([2560 x %struct.PLACE]* @places, i64 0, i64 0), i32 2560)
  %680 = call i32 @rs_write_stats(%struct.__sFILE* %savef, %struct.stats* @max_stats)
  %.b1.i489 = load i1* @write_error, align 1
  br i1 %.b1.i489, label %rs_write_monsters.exit, label %681

; <label>:681                                     ; preds = %rs_write_object_reference.exit488
  %682 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %682) #8
  store i32 9, i32* %10, align 4, !tbaa !38
  %683 = call i64 @encwrite(i8* %682, i64 4, %struct.__sFILE* %savef) #8
  %684 = icmp eq i64 %683, 4
  br i1 %684, label %rs_write_int.exit.i493.preheader, label %685

; <label>:685                                     ; preds = %681
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.i493.preheader

rs_write_int.exit.i493.preheader:                 ; preds = %685, %681
  %686 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0)) #8
  %687 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 1)) #8
  %688 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 2)) #8
  %689 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 3)) #8
  %690 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 4)) #8
  %691 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 5)) #8
  %692 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 6)) #8
  %693 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 7)) #8
  %694 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 8)) #8
  %.b.i494 = load i1* @write_error, align 1
  %695 = load %struct.room** @oldrp, align 8, !tbaa !1
  br i1 %.b.i494, label %rs_write_monsters.exit, label %696

; <label>:696                                     ; preds = %rs_write_int.exit.i493.preheader
  %not..i497 = icmp ne %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 0)
  %i.0.room.0.i = sext i1 %not..i497 to i32
  %697 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 1)
  %i.0.room.0.1.i = select i1 %697, i32 1, i32 %i.0.room.0.i
  %698 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 2)
  %i.0.room.0.2.i = select i1 %698, i32 2, i32 %i.0.room.0.1.i
  %699 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 3)
  %i.0.room.0.3.i = select i1 %699, i32 3, i32 %i.0.room.0.2.i
  %700 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 4)
  %i.0.room.0.4.i = select i1 %700, i32 4, i32 %i.0.room.0.3.i
  %701 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 5)
  %i.0.room.0.5.i = select i1 %701, i32 5, i32 %i.0.room.0.4.i
  %702 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 6)
  %i.0.room.0.6.i = select i1 %702, i32 6, i32 %i.0.room.0.5.i
  %703 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 7)
  %i.0.room.0.7.i = select i1 %703, i32 7, i32 %i.0.room.0.6.i
  %704 = icmp eq %struct.room* %695, getelementptr inbounds ([9 x %struct.room]* @rooms, i64 0, i64 8)
  %i.0.room.0.8.i = select i1 %704, i32 8, i32 %i.0.room.0.7.i
  %705 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %705) #8
  store i32 %i.0.room.0.8.i, i32* %9, align 4, !tbaa !38
  %706 = call i64 @encwrite(i8* %705, i64 4, %struct.__sFILE* %savef) #8
  %707 = icmp eq i64 %706, 4
  br i1 %707, label %rs_write_room_reference.exit, label %708

; <label>:708                                     ; preds = %696
  store i1 true, i1* @write_error, align 1
  br label %rs_write_monsters.exit

rs_write_room_reference.exit:                     ; preds = %696
  %.b.pre.i498 = load i1* @write_error, align 1
  br i1 %.b.pre.i498, label %rs_write_monsters.exit, label %709

; <label>:709                                     ; preds = %rs_write_room_reference.exit
  %710 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %710) #8
  store i32 13, i32* %8, align 4, !tbaa !38
  %711 = call i64 @encwrite(i8* %710, i64 4, %struct.__sFILE* %savef) #8
  %712 = icmp eq i64 %711, 4
  br i1 %712, label %rs_write_int.exit.i508.preheader, label %713

; <label>:713                                     ; preds = %709
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.i508.preheader

rs_write_int.exit.i508.preheader:                 ; preds = %713, %709
  %714 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 0)) #8
  %715 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 1)) #8
  %716 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 2)) #8
  %717 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 3)) #8
  %718 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 4)) #8
  %719 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 5)) #8
  %720 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 6)) #8
  %721 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 7)) #8
  %722 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 8)) #8
  %723 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 9)) #8
  %724 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 10)) #8
  %725 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 11)) #8
  %726 = call i32 @rs_write_room(%struct.__sFILE* %savef, %struct.room* getelementptr inbounds ([13 x %struct.room]* @passages, i64 0, i64 12)) #8
  %.b.i509 = load i1* @write_error, align 1
  br i1 %.b.i509, label %rs_write_monsters.exit, label %727

; <label>:727                                     ; preds = %rs_write_int.exit.i508.preheader
  %728 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %728) #8
  store i32 -1412628469, i32* %7, align 4, !tbaa !38
  %729 = call i64 @encwrite(i8* %728, i64 4, %struct.__sFILE* %savef) #8
  %730 = icmp eq i64 %729, 4
  br i1 %730, label %rs_write_marker.exit.i, label %rs_write_marker.exit.thread.i

rs_write_marker.exit.thread.i:                    ; preds = %727
  store i1 true, i1* @write_error, align 1
  %731 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %731) #8
  store i32 26, i32* %6, align 4, !tbaa !38
  br label %rs_write_int.exit.i520

rs_write_marker.exit.i:                           ; preds = %727
  %.b1.i2.pre.i514 = load i1* @write_error, align 1
  %732 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %732) #8
  store i32 26, i32* %6, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i514, label %rs_write_int.exit.i520, label %733

; <label>:733                                     ; preds = %rs_write_marker.exit.i
  %734 = call i64 @encwrite(i8* %732, i64 4, %struct.__sFILE* %savef) #8
  %735 = icmp eq i64 %734, 4
  br i1 %735, label %rs_write_int.exit.i520, label %736

; <label>:736                                     ; preds = %733
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit.i520

rs_write_int.exit.i520:                           ; preds = %rs_write_int.exit.i520, %736, %733, %rs_write_marker.exit.i, %rs_write_marker.exit.thread.i
  %indvars.iv.i516 = phi i64 [ %indvars.iv.next.i517, %rs_write_int.exit.i520 ], [ 0, %736 ], [ 0, %733 ], [ 0, %rs_write_marker.exit.i ], [ 0, %rs_write_marker.exit.thread.i ]
  %737 = getelementptr inbounds [0 x %struct.monster]* bitcast ([26 x %struct.monster]* @monsters to [0 x %struct.monster]*), i64 0, i64 %indvars.iv.i516, i32 3
  %738 = call i32 @rs_write_stats(%struct.__sFILE* %savef, %struct.stats* %737) #8
  %indvars.iv.next.i517 = add nuw nsw i64 %indvars.iv.i516, 1
  %exitcond = icmp eq i64 %indvars.iv.next.i517, 26
  br i1 %exitcond, label %rs_write_monsters.exit, label %rs_write_int.exit.i520

rs_write_monsters.exit:                           ; preds = %rs_write_int.exit.i520, %rs_write_int.exit.i508.preheader, %rs_write_room_reference.exit, %708, %rs_write_int.exit.i493.preheader, %rs_write_object_reference.exit488
  %739 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 0), i32 7)
  %740 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 8)
  %741 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 14)
  %742 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 14)
  %743 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 18)
  %744 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 10)
  %745 = call i32 @rs_write_obj_info(%struct.__sFILE* %savef, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 14)
  %746 = call i32 @rs_write_daemons(%struct.__sFILE* %savef, %struct.delayed_action* getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), i32 20)
  %747 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %747) #8
  store i32 0, i32* %5, align 4, !tbaa !38
  %.b1.i524 = load i1* @write_error, align 1
  br i1 %.b1.i524, label %rs_write_int.exit528.thread, label %748

; <label>:748                                     ; preds = %rs_write_monsters.exit
  %749 = call i64 @encwrite(i8* %747, i64 4, %struct.__sFILE* %savef) #8
  %750 = icmp eq i64 %749, 4
  br i1 %750, label %rs_write_int.exit528, label %751

; <label>:751                                     ; preds = %748
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit528.thread

rs_write_int.exit528.thread:                      ; preds = %751, %rs_write_monsters.exit
  call void @llvm.lifetime.end(i64 4, i8* %747) #8
  %752 = load i32* @between, align 4, !tbaa !38
  %753 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %753) #8
  store i32 %752, i32* %4, align 4, !tbaa !38
  br label %rs_write_int.exit533.thread

rs_write_int.exit528:                             ; preds = %748
  %.b1.i529.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %747) #8
  %754 = load i32* @between, align 4, !tbaa !38
  %755 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %755) #8
  store i32 %754, i32* %4, align 4, !tbaa !38
  br i1 %.b1.i529.pre, label %rs_write_int.exit533.thread, label %756

; <label>:756                                     ; preds = %rs_write_int.exit528
  %757 = call i64 @encwrite(i8* %755, i64 4, %struct.__sFILE* %savef) #8
  %758 = icmp eq i64 %757, 4
  br i1 %758, label %rs_write_int.exit533, label %759

; <label>:759                                     ; preds = %756
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit533.thread

rs_write_int.exit533.thread:                      ; preds = %759, %rs_write_int.exit528, %rs_write_int.exit528.thread
  %.ph665 = phi i8* [ %755, %rs_write_int.exit528 ], [ %755, %759 ], [ %753, %rs_write_int.exit528.thread ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph665) #8
  br label %rs_write_coord.exit543.thread

rs_write_int.exit533:                             ; preds = %756
  %.b1.i534.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %755) #8
  %760 = load i64* bitcast (%struct.coord* @nh to i64*), align 4
  br i1 %.b1.i534.pre, label %rs_write_coord.exit543.thread, label %761

; <label>:761                                     ; preds = %rs_write_int.exit533
  %762 = lshr i64 %760, 32
  %763 = trunc i64 %762 to i32
  %764 = trunc i64 %760 to i32
  %765 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %765) #8
  store i32 %764, i32* %3, align 4, !tbaa !38
  %766 = call i64 @encwrite(i8* %765, i64 4, %struct.__sFILE* %savef) #8
  %767 = icmp eq i64 %766, 4
  br i1 %767, label %rs_write_int.exit.i537, label %rs_write_int.exit.thread.i535

rs_write_int.exit.thread.i535:                    ; preds = %761
  store i1 true, i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %765) #8
  %768 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %768) #8
  store i32 %763, i32* %2, align 4, !tbaa !38
  br label %rs_write_coord.exit543.thread668

rs_write_int.exit.i537:                           ; preds = %761
  %.b1.i2.pre.i536 = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %765) #8
  %769 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %769) #8
  store i32 %763, i32* %2, align 4, !tbaa !38
  br i1 %.b1.i2.pre.i536, label %rs_write_coord.exit543.thread668, label %770

; <label>:770                                     ; preds = %rs_write_int.exit.i537
  %771 = call i64 @encwrite(i8* %769, i64 4, %struct.__sFILE* %savef) #8
  %772 = icmp eq i64 %771, 4
  br i1 %772, label %rs_write_coord.exit543, label %773

; <label>:773                                     ; preds = %770
  store i1 true, i1* @write_error, align 1
  br label %rs_write_coord.exit543.thread668

rs_write_coord.exit543.thread:                    ; preds = %rs_write_int.exit533, %rs_write_int.exit533.thread
  %774 = load i32* @group, align 4, !tbaa !38
  %775 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %775) #8
  store i32 %774, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit548

rs_write_coord.exit543.thread668:                 ; preds = %773, %rs_write_int.exit.i537, %rs_write_int.exit.thread.i535
  %.ph667 = phi i8* [ %769, %rs_write_int.exit.i537 ], [ %769, %773 ], [ %768, %rs_write_int.exit.thread.i535 ]
  call void @llvm.lifetime.end(i64 4, i8* %.ph667) #8
  %776 = load i32* @group, align 4, !tbaa !38
  %777 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %777) #8
  store i32 %776, i32* %1, align 4, !tbaa !38
  br label %rs_write_int.exit548

rs_write_coord.exit543:                           ; preds = %770
  %.b1.i544.pre.pre = load i1* @write_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %769) #8
  %778 = load i32* @group, align 4, !tbaa !38
  %779 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %779) #8
  store i32 %778, i32* %1, align 4, !tbaa !38
  br i1 %.b1.i544.pre.pre, label %rs_write_int.exit548, label %780

; <label>:780                                     ; preds = %rs_write_coord.exit543
  %781 = call i64 @encwrite(i8* %779, i64 4, %struct.__sFILE* %savef) #8
  %782 = icmp eq i64 %781, 4
  br i1 %782, label %rs_write_int.exit548, label %783

; <label>:783                                     ; preds = %780
  store i1 true, i1* @write_error, align 1
  br label %rs_write_int.exit548

rs_write_int.exit548:                             ; preds = %783, %780, %rs_write_coord.exit543, %rs_write_coord.exit543.thread668, %rs_write_coord.exit543.thread
  %784 = phi i8* [ %775, %rs_write_coord.exit543.thread ], [ %779, %780 ], [ %779, %rs_write_coord.exit543 ], [ %779, %783 ], [ %777, %rs_write_coord.exit543.thread668 ]
  call void @llvm.lifetime.end(i64 4, i8* %784) #8
  %785 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %786 = call i32 @rs_write_window(%struct.__sFILE* %savef, %struct._win_st* %785)
  %.b = load i1* @write_error, align 1
  br label %787

; <label>:787                                     ; preds = %rs_write_int.exit548, %0
  %.b1.sink = phi i1 [ %.b, %rs_write_int.exit548 ], [ true, %0 ]
  %788 = zext i1 %.b1.sink to i32
  ret i32 %788
}

; Function Attrs: nounwind ssp uwtable
define i32 @rs_restore_file(%struct.__sFILE* %inf) #0 {
  %input.i943 = alloca i32, align 4
  %input.i7.i921 = alloca i32, align 4
  %input.i.i922 = alloca i32, align 4
  %input.i910 = alloca i32, align 4
  %input.i899 = alloca i32, align 4
  %input.i.i882 = alloca i32, align 4
  %input.i.i873 = alloca i32, align 4
  %input.i.i859 = alloca i32, align 4
  %input.i.i840 = alloca i32, align 4
  %input.i.i825 = alloca i32, align 4
  %input.i.i810 = alloca i32, align 4
  %input.i.i795 = alloca i32, align 4
  %input.i.i780 = alloca i32, align 4
  %input.i.i771 = alloca i32, align 4
  %input.i7.i749 = alloca i32, align 4
  %input.i.i750 = alloca i32, align 4
  %input.i7.i727 = alloca i32, align 4
  %input.i.i728 = alloca i32, align 4
  %input.i7.i = alloca i32, align 4
  %input.i.i721 = alloca i32, align 4
  %input.i710 = alloca i32, align 4
  %input.i699 = alloca i32, align 4
  %input.i688 = alloca i32, align 4
  %input.i677 = alloca i32, align 4
  %input.i666 = alloca i32, align 4
  %input.i655 = alloca i32, align 4
  %input.i644 = alloca i32, align 4
  %input.i633 = alloca i32, align 4
  %input.i622 = alloca i32, align 4
  %input.i611 = alloca i32, align 4
  %input.i600 = alloca i32, align 4
  %input.i589 = alloca i32, align 4
  %input.i578 = alloca i32, align 4
  %input.i567 = alloca i32, align 4
  %input.i556 = alloca i32, align 4
  %input.i545 = alloca i32, align 4
  %input.i534 = alloca i32, align 4
  %input.i523 = alloca i32, align 4
  %input.i512 = alloca i32, align 4
  %input.i.i496 = alloca i32, align 4
  %input.i.i440 = alloca i32, align 4
  %input.i.i422 = alloca i32, align 4
  %input.i.i404 = alloca i32, align 4
  %input.i393 = alloca i32, align 4
  %input.i.i375 = alloca i32, align 4
  %input.i.i.i335 = alloca i32, align 4
  %input.i.i317 = alloca i32, align 4
  %input.i.i.i = alloca i32, align 4
  %input.i.i292 = alloca i32, align 4
  %input.i.i = alloca i32, align 4
  %input.i261 = alloca i32, align 4
  %buf.i251 = alloca i8, align 1
  %buf.i241 = alloca i8, align 1
  %buf.i231 = alloca i8, align 1
  %buf.i221 = alloca i8, align 1
  %buf.i211 = alloca i8, align 1
  %buf.i201 = alloca i8, align 1
  %buf.i191 = alloca i8, align 1
  %buf.i181 = alloca i8, align 1
  %buf.i171 = alloca i8, align 1
  %buf.i161 = alloca i8, align 1
  %buf.i151 = alloca i8, align 1
  %buf.i141 = alloca i8, align 1
  %buf.i131 = alloca i8, align 1
  %buf.i121 = alloca i8, align 1
  %buf.i111 = alloca i8, align 1
  %buf.i101 = alloca i8, align 1
  %buf.i91 = alloca i8, align 1
  %buf.i81 = alloca i8, align 1
  %buf.i71 = alloca i8, align 1
  %buf.i61 = alloca i8, align 1
  %buf.i51 = alloca i8, align 1
  %buf.i41 = alloca i8, align 1
  %buf.i31 = alloca i8, align 1
  %buf.i21 = alloca i8, align 1
  %input.i = alloca i32, align 4
  %buf.i5 = alloca i8, align 1
  %buf.i = alloca i8, align 1
  %.b2 = load i1* @read_error, align 1
  %.b3 = load i1* @format_error, align 1
  %or.cond = or i1 %.b2, %.b3
  br i1 %or.cond, label %718, label %1

; <label>:1                                       ; preds = %0
  call void @llvm.lifetime.start(i64 1, i8* %buf.i) #8
  store i8 0, i8* %buf.i, align 1, !tbaa !28
  %2 = call i64 @encread(i8* %buf.i, i64 1, %struct.__sFILE* %inf) #8
  %3 = icmp eq i64 %2, 1
  br i1 %3, label %.rs_read.exit.i_crit_edge, label %4

.rs_read.exit.i_crit_edge:                        ; preds = %1
  %.b2.i6.pre.pre = load i1* @read_error, align 1
  br label %rs_read_boolean.exit

; <label>:4                                       ; preds = %1
  store i1 true, i1* @read_error, align 1
  br label %rs_read_boolean.exit

rs_read_boolean.exit:                             ; preds = %4, %.rs_read.exit.i_crit_edge
  %.b2.i6.pre = phi i1 [ %.b2.i6.pre.pre, %.rs_read.exit.i_crit_edge ], [ true, %4 ]
  %5 = load i8* %buf.i, align 1, !tbaa !28
  %6 = icmp ne i8 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* @after, align 1, !tbaa !5
  %.b3.i7.pre = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 1, i8* %buf.i) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i5) #8
  store i8 0, i8* %buf.i5, align 1, !tbaa !28
  %or.cond.i8 = or i1 %.b2.i6.pre, %.b3.i7.pre
  br i1 %or.cond.i8, label %rs_read_boolean.exit14, label %8

; <label>:8                                       ; preds = %rs_read_boolean.exit
  %9 = call i64 @encread(i8* %buf.i5, i64 1, %struct.__sFILE* %inf) #8
  %10 = icmp eq i64 %9, 1
  br i1 %10, label %.rs_read.exit.i12_crit_edge, label %11

.rs_read.exit.i12_crit_edge:                      ; preds = %8
  %.b2.i15.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i12

; <label>:11                                      ; preds = %8
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i12

rs_read.exit.i12:                                 ; preds = %11, %.rs_read.exit.i12_crit_edge
  %.b2.i15.pre = phi i1 [ %.b2.i15.pre.pre, %.rs_read.exit.i12_crit_edge ], [ true, %11 ]
  %12 = load i8* %buf.i5, align 1, !tbaa !28
  %13 = icmp ne i8 %12, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* @again, align 1, !tbaa !5
  %.b3.i16.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit14

rs_read_boolean.exit14:                           ; preds = %rs_read.exit.i12, %rs_read_boolean.exit
  %.b3.i16 = phi i1 [ %.b3.i7.pre, %rs_read_boolean.exit ], [ %.b3.i16.pre, %rs_read.exit.i12 ]
  %.b2.i15 = phi i1 [ %.b2.i6.pre, %rs_read_boolean.exit ], [ %.b2.i15.pre, %rs_read.exit.i12 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i5) #8
  %15 = bitcast i32* %input.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #8
  store i32 0, i32* %input.i, align 4, !tbaa !38
  %or.cond.i17 = or i1 %.b2.i15, %.b3.i16
  br i1 %or.cond.i17, label %rs_read_int.exit, label %16

; <label>:16                                      ; preds = %rs_read_boolean.exit14
  %17 = call i64 @encread(i8* %15, i64 4, %struct.__sFILE* %inf) #8
  %18 = icmp eq i64 %17, 4
  br i1 %18, label %.rs_read.exit.i20_crit_edge, label %19

.rs_read.exit.i20_crit_edge:                      ; preds = %16
  %.b2.i22.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i20

; <label>:19                                      ; preds = %16
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i20

rs_read.exit.i20:                                 ; preds = %19, %.rs_read.exit.i20_crit_edge
  %.b2.i22.pre = phi i1 [ %.b2.i22.pre.pre, %.rs_read.exit.i20_crit_edge ], [ true, %19 ]
  %20 = load i32* %input.i, align 4, !tbaa !38
  store i32 %20, i32* @noscore, align 4, !tbaa !38
  %.b3.i23.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit

rs_read_int.exit:                                 ; preds = %rs_read.exit.i20, %rs_read_boolean.exit14
  %.b3.i23 = phi i1 [ %.b3.i16, %rs_read_boolean.exit14 ], [ %.b3.i23.pre, %rs_read.exit.i20 ]
  %.b2.i22 = phi i1 [ %.b2.i15, %rs_read_boolean.exit14 ], [ %.b2.i22.pre, %rs_read.exit.i20 ]
  call void @llvm.lifetime.end(i64 4, i8* %15) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i21) #8
  store i8 0, i8* %buf.i21, align 1, !tbaa !28
  %or.cond.i24 = or i1 %.b2.i22, %.b3.i23
  br i1 %or.cond.i24, label %rs_read_boolean.exit30, label %21

; <label>:21                                      ; preds = %rs_read_int.exit
  %22 = call i64 @encread(i8* %buf.i21, i64 1, %struct.__sFILE* %inf) #8
  %23 = icmp eq i64 %22, 1
  br i1 %23, label %.rs_read.exit.i28_crit_edge, label %24

.rs_read.exit.i28_crit_edge:                      ; preds = %21
  %.b2.i32.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i28

; <label>:24                                      ; preds = %21
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i28

rs_read.exit.i28:                                 ; preds = %24, %.rs_read.exit.i28_crit_edge
  %.b2.i32.pre = phi i1 [ %.b2.i32.pre.pre, %.rs_read.exit.i28_crit_edge ], [ true, %24 ]
  %25 = load i8* %buf.i21, align 1, !tbaa !28
  %26 = icmp ne i8 %25, 0
  %27 = zext i1 %26 to i8
  store i8 %27, i8* @seenstairs, align 1, !tbaa !5
  %.b3.i33.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit30

rs_read_boolean.exit30:                           ; preds = %rs_read.exit.i28, %rs_read_int.exit
  %.b3.i33 = phi i1 [ %.b3.i23, %rs_read_int.exit ], [ %.b3.i33.pre, %rs_read.exit.i28 ]
  %.b2.i32 = phi i1 [ %.b2.i22, %rs_read_int.exit ], [ %.b2.i32.pre, %rs_read.exit.i28 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i21) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i31) #8
  store i8 0, i8* %buf.i31, align 1, !tbaa !28
  %or.cond.i34 = or i1 %.b2.i32, %.b3.i33
  br i1 %or.cond.i34, label %rs_read_boolean.exit40, label %28

; <label>:28                                      ; preds = %rs_read_boolean.exit30
  %29 = call i64 @encread(i8* %buf.i31, i64 1, %struct.__sFILE* %inf) #8
  %30 = icmp eq i64 %29, 1
  br i1 %30, label %.rs_read.exit.i38_crit_edge, label %31

.rs_read.exit.i38_crit_edge:                      ; preds = %28
  %.b2.i42.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i38

; <label>:31                                      ; preds = %28
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i38

rs_read.exit.i38:                                 ; preds = %31, %.rs_read.exit.i38_crit_edge
  %.b2.i42.pre = phi i1 [ %.b2.i42.pre.pre, %.rs_read.exit.i38_crit_edge ], [ true, %31 ]
  %32 = load i8* %buf.i31, align 1, !tbaa !28
  %33 = icmp ne i8 %32, 0
  %34 = zext i1 %33 to i8
  store i8 %34, i8* @amulet, align 1, !tbaa !5
  %.b3.i43.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit40

rs_read_boolean.exit40:                           ; preds = %rs_read.exit.i38, %rs_read_boolean.exit30
  %.b3.i43 = phi i1 [ %.b3.i33, %rs_read_boolean.exit30 ], [ %.b3.i43.pre, %rs_read.exit.i38 ]
  %.b2.i42 = phi i1 [ %.b2.i32, %rs_read_boolean.exit30 ], [ %.b2.i42.pre, %rs_read.exit.i38 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i31) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i41) #8
  store i8 0, i8* %buf.i41, align 1, !tbaa !28
  %or.cond.i44 = or i1 %.b2.i42, %.b3.i43
  br i1 %or.cond.i44, label %rs_read_boolean.exit50, label %35

; <label>:35                                      ; preds = %rs_read_boolean.exit40
  %36 = call i64 @encread(i8* %buf.i41, i64 1, %struct.__sFILE* %inf) #8
  %37 = icmp eq i64 %36, 1
  br i1 %37, label %.rs_read.exit.i48_crit_edge, label %38

.rs_read.exit.i48_crit_edge:                      ; preds = %35
  %.b2.i52.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i48

; <label>:38                                      ; preds = %35
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i48

rs_read.exit.i48:                                 ; preds = %38, %.rs_read.exit.i48_crit_edge
  %.b2.i52.pre = phi i1 [ %.b2.i52.pre.pre, %.rs_read.exit.i48_crit_edge ], [ true, %38 ]
  %39 = load i8* %buf.i41, align 1, !tbaa !28
  %40 = icmp ne i8 %39, 0
  %41 = zext i1 %40 to i8
  store i8 %41, i8* @door_stop, align 1, !tbaa !5
  %.b3.i53.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit50

rs_read_boolean.exit50:                           ; preds = %rs_read.exit.i48, %rs_read_boolean.exit40
  %.b3.i53 = phi i1 [ %.b3.i43, %rs_read_boolean.exit40 ], [ %.b3.i53.pre, %rs_read.exit.i48 ]
  %.b2.i52 = phi i1 [ %.b2.i42, %rs_read_boolean.exit40 ], [ %.b2.i52.pre, %rs_read.exit.i48 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i41) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i51) #8
  store i8 0, i8* %buf.i51, align 1, !tbaa !28
  %or.cond.i54 = or i1 %.b2.i52, %.b3.i53
  br i1 %or.cond.i54, label %rs_read_boolean.exit60, label %42

; <label>:42                                      ; preds = %rs_read_boolean.exit50
  %43 = call i64 @encread(i8* %buf.i51, i64 1, %struct.__sFILE* %inf) #8
  %44 = icmp eq i64 %43, 1
  br i1 %44, label %.rs_read.exit.i58_crit_edge, label %45

.rs_read.exit.i58_crit_edge:                      ; preds = %42
  %.b2.i62.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i58

; <label>:45                                      ; preds = %42
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i58

rs_read.exit.i58:                                 ; preds = %45, %.rs_read.exit.i58_crit_edge
  %.b2.i62.pre = phi i1 [ %.b2.i62.pre.pre, %.rs_read.exit.i58_crit_edge ], [ true, %45 ]
  %46 = load i8* %buf.i51, align 1, !tbaa !28
  %47 = icmp ne i8 %46, 0
  %48 = zext i1 %47 to i8
  store i8 %48, i8* @fight_flush, align 1, !tbaa !5
  %.b3.i63.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit60

rs_read_boolean.exit60:                           ; preds = %rs_read.exit.i58, %rs_read_boolean.exit50
  %.b3.i63 = phi i1 [ %.b3.i53, %rs_read_boolean.exit50 ], [ %.b3.i63.pre, %rs_read.exit.i58 ]
  %.b2.i62 = phi i1 [ %.b2.i52, %rs_read_boolean.exit50 ], [ %.b2.i62.pre, %rs_read.exit.i58 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i51) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i61) #8
  store i8 0, i8* %buf.i61, align 1, !tbaa !28
  %or.cond.i64 = or i1 %.b2.i62, %.b3.i63
  br i1 %or.cond.i64, label %rs_read_boolean.exit70, label %49

; <label>:49                                      ; preds = %rs_read_boolean.exit60
  %50 = call i64 @encread(i8* %buf.i61, i64 1, %struct.__sFILE* %inf) #8
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %.rs_read.exit.i68_crit_edge, label %52

.rs_read.exit.i68_crit_edge:                      ; preds = %49
  %.b2.i72.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i68

; <label>:52                                      ; preds = %49
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i68

rs_read.exit.i68:                                 ; preds = %52, %.rs_read.exit.i68_crit_edge
  %.b2.i72.pre = phi i1 [ %.b2.i72.pre.pre, %.rs_read.exit.i68_crit_edge ], [ true, %52 ]
  %53 = load i8* %buf.i61, align 1, !tbaa !28
  %54 = icmp ne i8 %53, 0
  %55 = zext i1 %54 to i8
  store i8 %55, i8* @firstmove, align 1, !tbaa !5
  %.b3.i73.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit70

rs_read_boolean.exit70:                           ; preds = %rs_read.exit.i68, %rs_read_boolean.exit60
  %.b3.i73 = phi i1 [ %.b3.i63, %rs_read_boolean.exit60 ], [ %.b3.i73.pre, %rs_read.exit.i68 ]
  %.b2.i72 = phi i1 [ %.b2.i62, %rs_read_boolean.exit60 ], [ %.b2.i72.pre, %rs_read.exit.i68 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i61) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i71) #8
  store i8 0, i8* %buf.i71, align 1, !tbaa !28
  %or.cond.i74 = or i1 %.b2.i72, %.b3.i73
  br i1 %or.cond.i74, label %rs_read_boolean.exit80, label %56

; <label>:56                                      ; preds = %rs_read_boolean.exit70
  %57 = call i64 @encread(i8* %buf.i71, i64 1, %struct.__sFILE* %inf) #8
  %58 = icmp eq i64 %57, 1
  br i1 %58, label %.rs_read.exit.i78_crit_edge, label %59

.rs_read.exit.i78_crit_edge:                      ; preds = %56
  %.b2.i82.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i78

; <label>:59                                      ; preds = %56
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i78

rs_read.exit.i78:                                 ; preds = %59, %.rs_read.exit.i78_crit_edge
  %.b2.i82.pre = phi i1 [ %.b2.i82.pre.pre, %.rs_read.exit.i78_crit_edge ], [ true, %59 ]
  %60 = load i8* %buf.i71, align 1, !tbaa !28
  %61 = icmp ne i8 %60, 0
  %62 = zext i1 %61 to i8
  store i8 %62, i8* @got_ltc, align 1, !tbaa !5
  %.b3.i83.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit80

rs_read_boolean.exit80:                           ; preds = %rs_read.exit.i78, %rs_read_boolean.exit70
  %.b3.i83 = phi i1 [ %.b3.i73, %rs_read_boolean.exit70 ], [ %.b3.i83.pre, %rs_read.exit.i78 ]
  %.b2.i82 = phi i1 [ %.b2.i72, %rs_read_boolean.exit70 ], [ %.b2.i82.pre, %rs_read.exit.i78 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i71) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i81) #8
  store i8 0, i8* %buf.i81, align 1, !tbaa !28
  %or.cond.i84 = or i1 %.b2.i82, %.b3.i83
  br i1 %or.cond.i84, label %rs_read_boolean.exit90, label %63

; <label>:63                                      ; preds = %rs_read_boolean.exit80
  %64 = call i64 @encread(i8* %buf.i81, i64 1, %struct.__sFILE* %inf) #8
  %65 = icmp eq i64 %64, 1
  br i1 %65, label %.rs_read.exit.i88_crit_edge, label %66

.rs_read.exit.i88_crit_edge:                      ; preds = %63
  %.b2.i92.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i88

; <label>:66                                      ; preds = %63
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i88

rs_read.exit.i88:                                 ; preds = %66, %.rs_read.exit.i88_crit_edge
  %.b2.i92.pre = phi i1 [ %.b2.i92.pre.pre, %.rs_read.exit.i88_crit_edge ], [ true, %66 ]
  %67 = load i8* %buf.i81, align 1, !tbaa !28
  %68 = icmp ne i8 %67, 0
  %69 = zext i1 %68 to i8
  store i8 %69, i8* @has_hit, align 1, !tbaa !5
  %.b3.i93.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit90

rs_read_boolean.exit90:                           ; preds = %rs_read.exit.i88, %rs_read_boolean.exit80
  %.b3.i93 = phi i1 [ %.b3.i83, %rs_read_boolean.exit80 ], [ %.b3.i93.pre, %rs_read.exit.i88 ]
  %.b2.i92 = phi i1 [ %.b2.i82, %rs_read_boolean.exit80 ], [ %.b2.i92.pre, %rs_read.exit.i88 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i81) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i91) #8
  store i8 0, i8* %buf.i91, align 1, !tbaa !28
  %or.cond.i94 = or i1 %.b2.i92, %.b3.i93
  br i1 %or.cond.i94, label %rs_read_boolean.exit100, label %70

; <label>:70                                      ; preds = %rs_read_boolean.exit90
  %71 = call i64 @encread(i8* %buf.i91, i64 1, %struct.__sFILE* %inf) #8
  %72 = icmp eq i64 %71, 1
  br i1 %72, label %.rs_read.exit.i98_crit_edge, label %73

.rs_read.exit.i98_crit_edge:                      ; preds = %70
  %.b2.i102.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i98

; <label>:73                                      ; preds = %70
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i98

rs_read.exit.i98:                                 ; preds = %73, %.rs_read.exit.i98_crit_edge
  %.b2.i102.pre = phi i1 [ %.b2.i102.pre.pre, %.rs_read.exit.i98_crit_edge ], [ true, %73 ]
  %74 = load i8* %buf.i91, align 1, !tbaa !28
  %75 = icmp ne i8 %74, 0
  %76 = zext i1 %75 to i8
  store i8 %76, i8* @in_shell, align 1, !tbaa !5
  %.b3.i103.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit100

rs_read_boolean.exit100:                          ; preds = %rs_read.exit.i98, %rs_read_boolean.exit90
  %.b3.i103 = phi i1 [ %.b3.i93, %rs_read_boolean.exit90 ], [ %.b3.i103.pre, %rs_read.exit.i98 ]
  %.b2.i102 = phi i1 [ %.b2.i92, %rs_read_boolean.exit90 ], [ %.b2.i102.pre, %rs_read.exit.i98 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i91) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i101) #8
  store i8 0, i8* %buf.i101, align 1, !tbaa !28
  %or.cond.i104 = or i1 %.b2.i102, %.b3.i103
  br i1 %or.cond.i104, label %rs_read_boolean.exit110, label %77

; <label>:77                                      ; preds = %rs_read_boolean.exit100
  %78 = call i64 @encread(i8* %buf.i101, i64 1, %struct.__sFILE* %inf) #8
  %79 = icmp eq i64 %78, 1
  br i1 %79, label %.rs_read.exit.i108_crit_edge, label %80

.rs_read.exit.i108_crit_edge:                     ; preds = %77
  %.b2.i112.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i108

; <label>:80                                      ; preds = %77
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i108

rs_read.exit.i108:                                ; preds = %80, %.rs_read.exit.i108_crit_edge
  %.b2.i112.pre = phi i1 [ %.b2.i112.pre.pre, %.rs_read.exit.i108_crit_edge ], [ true, %80 ]
  %81 = load i8* %buf.i101, align 1, !tbaa !28
  %82 = icmp ne i8 %81, 0
  %83 = zext i1 %82 to i8
  store i8 %83, i8* @inv_describe, align 1, !tbaa !5
  %.b3.i113.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit110

rs_read_boolean.exit110:                          ; preds = %rs_read.exit.i108, %rs_read_boolean.exit100
  %.b3.i113 = phi i1 [ %.b3.i103, %rs_read_boolean.exit100 ], [ %.b3.i113.pre, %rs_read.exit.i108 ]
  %.b2.i112 = phi i1 [ %.b2.i102, %rs_read_boolean.exit100 ], [ %.b2.i112.pre, %rs_read.exit.i108 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i101) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i111) #8
  store i8 0, i8* %buf.i111, align 1, !tbaa !28
  %or.cond.i114 = or i1 %.b2.i112, %.b3.i113
  br i1 %or.cond.i114, label %rs_read_boolean.exit120, label %84

; <label>:84                                      ; preds = %rs_read_boolean.exit110
  %85 = call i64 @encread(i8* %buf.i111, i64 1, %struct.__sFILE* %inf) #8
  %86 = icmp eq i64 %85, 1
  br i1 %86, label %.rs_read.exit.i118_crit_edge, label %87

.rs_read.exit.i118_crit_edge:                     ; preds = %84
  %.b2.i122.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i118

; <label>:87                                      ; preds = %84
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i118

rs_read.exit.i118:                                ; preds = %87, %.rs_read.exit.i118_crit_edge
  %.b2.i122.pre = phi i1 [ %.b2.i122.pre.pre, %.rs_read.exit.i118_crit_edge ], [ true, %87 ]
  %88 = load i8* %buf.i111, align 1, !tbaa !28
  %89 = icmp ne i8 %88, 0
  %90 = zext i1 %89 to i8
  store i8 %90, i8* @jump, align 1, !tbaa !5
  %.b3.i123.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit120

rs_read_boolean.exit120:                          ; preds = %rs_read.exit.i118, %rs_read_boolean.exit110
  %.b3.i123 = phi i1 [ %.b3.i113, %rs_read_boolean.exit110 ], [ %.b3.i123.pre, %rs_read.exit.i118 ]
  %.b2.i122 = phi i1 [ %.b2.i112, %rs_read_boolean.exit110 ], [ %.b2.i122.pre, %rs_read.exit.i118 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i111) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i121) #8
  store i8 0, i8* %buf.i121, align 1, !tbaa !28
  %or.cond.i124 = or i1 %.b2.i122, %.b3.i123
  br i1 %or.cond.i124, label %rs_read_boolean.exit130, label %91

; <label>:91                                      ; preds = %rs_read_boolean.exit120
  %92 = call i64 @encread(i8* %buf.i121, i64 1, %struct.__sFILE* %inf) #8
  %93 = icmp eq i64 %92, 1
  br i1 %93, label %.rs_read.exit.i128_crit_edge, label %94

.rs_read.exit.i128_crit_edge:                     ; preds = %91
  %.b2.i132.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i128

; <label>:94                                      ; preds = %91
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i128

rs_read.exit.i128:                                ; preds = %94, %.rs_read.exit.i128_crit_edge
  %.b2.i132.pre = phi i1 [ %.b2.i132.pre.pre, %.rs_read.exit.i128_crit_edge ], [ true, %94 ]
  %95 = load i8* %buf.i121, align 1, !tbaa !28
  %96 = icmp ne i8 %95, 0
  %97 = zext i1 %96 to i8
  store i8 %97, i8* @kamikaze, align 1, !tbaa !5
  %.b3.i133.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit130

rs_read_boolean.exit130:                          ; preds = %rs_read.exit.i128, %rs_read_boolean.exit120
  %.b3.i133 = phi i1 [ %.b3.i123, %rs_read_boolean.exit120 ], [ %.b3.i133.pre, %rs_read.exit.i128 ]
  %.b2.i132 = phi i1 [ %.b2.i122, %rs_read_boolean.exit120 ], [ %.b2.i132.pre, %rs_read.exit.i128 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i121) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i131) #8
  store i8 0, i8* %buf.i131, align 1, !tbaa !28
  %or.cond.i134 = or i1 %.b2.i132, %.b3.i133
  br i1 %or.cond.i134, label %rs_read_boolean.exit140, label %98

; <label>:98                                      ; preds = %rs_read_boolean.exit130
  %99 = call i64 @encread(i8* %buf.i131, i64 1, %struct.__sFILE* %inf) #8
  %100 = icmp eq i64 %99, 1
  br i1 %100, label %.rs_read.exit.i138_crit_edge, label %101

.rs_read.exit.i138_crit_edge:                     ; preds = %98
  %.b2.i142.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i138

; <label>:101                                     ; preds = %98
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i138

rs_read.exit.i138:                                ; preds = %101, %.rs_read.exit.i138_crit_edge
  %.b2.i142.pre = phi i1 [ %.b2.i142.pre.pre, %.rs_read.exit.i138_crit_edge ], [ true, %101 ]
  %102 = load i8* %buf.i131, align 1, !tbaa !28
  %103 = icmp ne i8 %102, 0
  %104 = zext i1 %103 to i8
  store i8 %104, i8* @lower_msg, align 1, !tbaa !5
  %.b3.i143.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit140

rs_read_boolean.exit140:                          ; preds = %rs_read.exit.i138, %rs_read_boolean.exit130
  %.b3.i143 = phi i1 [ %.b3.i133, %rs_read_boolean.exit130 ], [ %.b3.i143.pre, %rs_read.exit.i138 ]
  %.b2.i142 = phi i1 [ %.b2.i132, %rs_read_boolean.exit130 ], [ %.b2.i142.pre, %rs_read.exit.i138 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i131) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i141) #8
  store i8 0, i8* %buf.i141, align 1, !tbaa !28
  %or.cond.i144 = or i1 %.b2.i142, %.b3.i143
  br i1 %or.cond.i144, label %rs_read_boolean.exit150, label %105

; <label>:105                                     ; preds = %rs_read_boolean.exit140
  %106 = call i64 @encread(i8* %buf.i141, i64 1, %struct.__sFILE* %inf) #8
  %107 = icmp eq i64 %106, 1
  br i1 %107, label %.rs_read.exit.i148_crit_edge, label %108

.rs_read.exit.i148_crit_edge:                     ; preds = %105
  %.b2.i152.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i148

; <label>:108                                     ; preds = %105
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i148

rs_read.exit.i148:                                ; preds = %108, %.rs_read.exit.i148_crit_edge
  %.b2.i152.pre = phi i1 [ %.b2.i152.pre.pre, %.rs_read.exit.i148_crit_edge ], [ true, %108 ]
  %109 = load i8* %buf.i141, align 1, !tbaa !28
  %110 = icmp ne i8 %109, 0
  %111 = zext i1 %110 to i8
  store i8 %111, i8* @move_on, align 1, !tbaa !5
  %.b3.i153.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit150

rs_read_boolean.exit150:                          ; preds = %rs_read.exit.i148, %rs_read_boolean.exit140
  %.b3.i153 = phi i1 [ %.b3.i143, %rs_read_boolean.exit140 ], [ %.b3.i153.pre, %rs_read.exit.i148 ]
  %.b2.i152 = phi i1 [ %.b2.i142, %rs_read_boolean.exit140 ], [ %.b2.i152.pre, %rs_read.exit.i148 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i141) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i151) #8
  store i8 0, i8* %buf.i151, align 1, !tbaa !28
  %or.cond.i154 = or i1 %.b2.i152, %.b3.i153
  br i1 %or.cond.i154, label %rs_read_boolean.exit160, label %112

; <label>:112                                     ; preds = %rs_read_boolean.exit150
  %113 = call i64 @encread(i8* %buf.i151, i64 1, %struct.__sFILE* %inf) #8
  %114 = icmp eq i64 %113, 1
  br i1 %114, label %.rs_read.exit.i158_crit_edge, label %115

.rs_read.exit.i158_crit_edge:                     ; preds = %112
  %.b2.i162.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i158

; <label>:115                                     ; preds = %112
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i158

rs_read.exit.i158:                                ; preds = %115, %.rs_read.exit.i158_crit_edge
  %.b2.i162.pre = phi i1 [ %.b2.i162.pre.pre, %.rs_read.exit.i158_crit_edge ], [ true, %115 ]
  %116 = load i8* %buf.i151, align 1, !tbaa !28
  %117 = icmp ne i8 %116, 0
  %118 = zext i1 %117 to i8
  store i8 %118, i8* @msg_esc, align 1, !tbaa !5
  %.b3.i163.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit160

rs_read_boolean.exit160:                          ; preds = %rs_read.exit.i158, %rs_read_boolean.exit150
  %.b3.i163 = phi i1 [ %.b3.i153, %rs_read_boolean.exit150 ], [ %.b3.i163.pre, %rs_read.exit.i158 ]
  %.b2.i162 = phi i1 [ %.b2.i152, %rs_read_boolean.exit150 ], [ %.b2.i162.pre, %rs_read.exit.i158 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i151) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i161) #8
  store i8 0, i8* %buf.i161, align 1, !tbaa !28
  %or.cond.i164 = or i1 %.b2.i162, %.b3.i163
  br i1 %or.cond.i164, label %rs_read_boolean.exit170, label %119

; <label>:119                                     ; preds = %rs_read_boolean.exit160
  %120 = call i64 @encread(i8* %buf.i161, i64 1, %struct.__sFILE* %inf) #8
  %121 = icmp eq i64 %120, 1
  br i1 %121, label %.rs_read.exit.i168_crit_edge, label %122

.rs_read.exit.i168_crit_edge:                     ; preds = %119
  %.b2.i172.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i168

; <label>:122                                     ; preds = %119
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i168

rs_read.exit.i168:                                ; preds = %122, %.rs_read.exit.i168_crit_edge
  %.b2.i172.pre = phi i1 [ %.b2.i172.pre.pre, %.rs_read.exit.i168_crit_edge ], [ true, %122 ]
  %123 = load i8* %buf.i161, align 1, !tbaa !28
  %124 = icmp ne i8 %123, 0
  %125 = zext i1 %124 to i8
  store i8 %125, i8* @passgo, align 1, !tbaa !5
  %.b3.i173.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit170

rs_read_boolean.exit170:                          ; preds = %rs_read.exit.i168, %rs_read_boolean.exit160
  %.b3.i173 = phi i1 [ %.b3.i163, %rs_read_boolean.exit160 ], [ %.b3.i173.pre, %rs_read.exit.i168 ]
  %.b2.i172 = phi i1 [ %.b2.i162, %rs_read_boolean.exit160 ], [ %.b2.i172.pre, %rs_read.exit.i168 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i161) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i171) #8
  store i8 0, i8* %buf.i171, align 1, !tbaa !28
  %or.cond.i174 = or i1 %.b2.i172, %.b3.i173
  br i1 %or.cond.i174, label %rs_read_boolean.exit180, label %126

; <label>:126                                     ; preds = %rs_read_boolean.exit170
  %127 = call i64 @encread(i8* %buf.i171, i64 1, %struct.__sFILE* %inf) #8
  %128 = icmp eq i64 %127, 1
  br i1 %128, label %.rs_read.exit.i178_crit_edge, label %129

.rs_read.exit.i178_crit_edge:                     ; preds = %126
  %.b2.i182.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i178

; <label>:129                                     ; preds = %126
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i178

rs_read.exit.i178:                                ; preds = %129, %.rs_read.exit.i178_crit_edge
  %.b2.i182.pre = phi i1 [ %.b2.i182.pre.pre, %.rs_read.exit.i178_crit_edge ], [ true, %129 ]
  %130 = load i8* %buf.i171, align 1, !tbaa !28
  %131 = icmp ne i8 %130, 0
  %132 = zext i1 %131 to i8
  store i8 %132, i8* @playing, align 1, !tbaa !5
  %.b3.i183.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit180

rs_read_boolean.exit180:                          ; preds = %rs_read.exit.i178, %rs_read_boolean.exit170
  %.b3.i183 = phi i1 [ %.b3.i173, %rs_read_boolean.exit170 ], [ %.b3.i183.pre, %rs_read.exit.i178 ]
  %.b2.i182 = phi i1 [ %.b2.i172, %rs_read_boolean.exit170 ], [ %.b2.i182.pre, %rs_read.exit.i178 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i171) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i181) #8
  store i8 0, i8* %buf.i181, align 1, !tbaa !28
  %or.cond.i184 = or i1 %.b2.i182, %.b3.i183
  br i1 %or.cond.i184, label %rs_read_boolean.exit190, label %133

; <label>:133                                     ; preds = %rs_read_boolean.exit180
  %134 = call i64 @encread(i8* %buf.i181, i64 1, %struct.__sFILE* %inf) #8
  %135 = icmp eq i64 %134, 1
  br i1 %135, label %.rs_read.exit.i188_crit_edge, label %136

.rs_read.exit.i188_crit_edge:                     ; preds = %133
  %.b2.i192.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i188

; <label>:136                                     ; preds = %133
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i188

rs_read.exit.i188:                                ; preds = %136, %.rs_read.exit.i188_crit_edge
  %.b2.i192.pre = phi i1 [ %.b2.i192.pre.pre, %.rs_read.exit.i188_crit_edge ], [ true, %136 ]
  %137 = load i8* %buf.i181, align 1, !tbaa !28
  %138 = icmp ne i8 %137, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* @q_comm, align 1, !tbaa !5
  %.b3.i193.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit190

rs_read_boolean.exit190:                          ; preds = %rs_read.exit.i188, %rs_read_boolean.exit180
  %.b3.i193 = phi i1 [ %.b3.i183, %rs_read_boolean.exit180 ], [ %.b3.i193.pre, %rs_read.exit.i188 ]
  %.b2.i192 = phi i1 [ %.b2.i182, %rs_read_boolean.exit180 ], [ %.b2.i192.pre, %rs_read.exit.i188 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i181) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i191) #8
  store i8 0, i8* %buf.i191, align 1, !tbaa !28
  %or.cond.i194 = or i1 %.b2.i192, %.b3.i193
  br i1 %or.cond.i194, label %rs_read_boolean.exit200, label %140

; <label>:140                                     ; preds = %rs_read_boolean.exit190
  %141 = call i64 @encread(i8* %buf.i191, i64 1, %struct.__sFILE* %inf) #8
  %142 = icmp eq i64 %141, 1
  br i1 %142, label %.rs_read.exit.i198_crit_edge, label %143

.rs_read.exit.i198_crit_edge:                     ; preds = %140
  %.b2.i202.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i198

; <label>:143                                     ; preds = %140
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i198

rs_read.exit.i198:                                ; preds = %143, %.rs_read.exit.i198_crit_edge
  %.b2.i202.pre = phi i1 [ %.b2.i202.pre.pre, %.rs_read.exit.i198_crit_edge ], [ true, %143 ]
  %144 = load i8* %buf.i191, align 1, !tbaa !28
  %145 = icmp ne i8 %144, 0
  %146 = zext i1 %145 to i8
  store i8 %146, i8* @running, align 1, !tbaa !5
  %.b3.i203.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit200

rs_read_boolean.exit200:                          ; preds = %rs_read.exit.i198, %rs_read_boolean.exit190
  %.b3.i203 = phi i1 [ %.b3.i193, %rs_read_boolean.exit190 ], [ %.b3.i203.pre, %rs_read.exit.i198 ]
  %.b2.i202 = phi i1 [ %.b2.i192, %rs_read_boolean.exit190 ], [ %.b2.i202.pre, %rs_read.exit.i198 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i191) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i201) #8
  store i8 0, i8* %buf.i201, align 1, !tbaa !28
  %or.cond.i204 = or i1 %.b2.i202, %.b3.i203
  br i1 %or.cond.i204, label %rs_read_boolean.exit210, label %147

; <label>:147                                     ; preds = %rs_read_boolean.exit200
  %148 = call i64 @encread(i8* %buf.i201, i64 1, %struct.__sFILE* %inf) #8
  %149 = icmp eq i64 %148, 1
  br i1 %149, label %.rs_read.exit.i208_crit_edge, label %150

.rs_read.exit.i208_crit_edge:                     ; preds = %147
  %.b2.i212.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i208

; <label>:150                                     ; preds = %147
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i208

rs_read.exit.i208:                                ; preds = %150, %.rs_read.exit.i208_crit_edge
  %.b2.i212.pre = phi i1 [ %.b2.i212.pre.pre, %.rs_read.exit.i208_crit_edge ], [ true, %150 ]
  %151 = load i8* %buf.i201, align 1, !tbaa !28
  %152 = icmp ne i8 %151, 0
  %153 = zext i1 %152 to i8
  store i8 %153, i8* @save_msg, align 1, !tbaa !5
  %.b3.i213.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit210

rs_read_boolean.exit210:                          ; preds = %rs_read.exit.i208, %rs_read_boolean.exit200
  %.b3.i213 = phi i1 [ %.b3.i203, %rs_read_boolean.exit200 ], [ %.b3.i213.pre, %rs_read.exit.i208 ]
  %.b2.i212 = phi i1 [ %.b2.i202, %rs_read_boolean.exit200 ], [ %.b2.i212.pre, %rs_read.exit.i208 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i201) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i211) #8
  store i8 0, i8* %buf.i211, align 1, !tbaa !28
  %or.cond.i214 = or i1 %.b2.i212, %.b3.i213
  br i1 %or.cond.i214, label %rs_read_boolean.exit220, label %154

; <label>:154                                     ; preds = %rs_read_boolean.exit210
  %155 = call i64 @encread(i8* %buf.i211, i64 1, %struct.__sFILE* %inf) #8
  %156 = icmp eq i64 %155, 1
  br i1 %156, label %.rs_read.exit.i218_crit_edge, label %157

.rs_read.exit.i218_crit_edge:                     ; preds = %154
  %.b2.i222.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i218

; <label>:157                                     ; preds = %154
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i218

rs_read.exit.i218:                                ; preds = %157, %.rs_read.exit.i218_crit_edge
  %.b2.i222.pre = phi i1 [ %.b2.i222.pre.pre, %.rs_read.exit.i218_crit_edge ], [ true, %157 ]
  %158 = load i8* %buf.i211, align 1, !tbaa !28
  %159 = icmp ne i8 %158, 0
  %160 = zext i1 %159 to i8
  store i8 %160, i8* @see_floor, align 1, !tbaa !5
  %.b3.i223.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit220

rs_read_boolean.exit220:                          ; preds = %rs_read.exit.i218, %rs_read_boolean.exit210
  %.b3.i223 = phi i1 [ %.b3.i213, %rs_read_boolean.exit210 ], [ %.b3.i223.pre, %rs_read.exit.i218 ]
  %.b2.i222 = phi i1 [ %.b2.i212, %rs_read_boolean.exit210 ], [ %.b2.i222.pre, %rs_read.exit.i218 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i211) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i221) #8
  store i8 0, i8* %buf.i221, align 1, !tbaa !28
  %or.cond.i224 = or i1 %.b2.i222, %.b3.i223
  br i1 %or.cond.i224, label %rs_read_boolean.exit230, label %161

; <label>:161                                     ; preds = %rs_read_boolean.exit220
  %162 = call i64 @encread(i8* %buf.i221, i64 1, %struct.__sFILE* %inf) #8
  %163 = icmp eq i64 %162, 1
  br i1 %163, label %.rs_read.exit.i228_crit_edge, label %164

.rs_read.exit.i228_crit_edge:                     ; preds = %161
  %.b2.i232.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i228

; <label>:164                                     ; preds = %161
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i228

rs_read.exit.i228:                                ; preds = %164, %.rs_read.exit.i228_crit_edge
  %.b2.i232.pre = phi i1 [ %.b2.i232.pre.pre, %.rs_read.exit.i228_crit_edge ], [ true, %164 ]
  %165 = load i8* %buf.i221, align 1, !tbaa !28
  %166 = icmp ne i8 %165, 0
  %167 = zext i1 %166 to i8
  store i8 %167, i8* @stat_msg, align 1, !tbaa !5
  %.b3.i233.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit230

rs_read_boolean.exit230:                          ; preds = %rs_read.exit.i228, %rs_read_boolean.exit220
  %.b3.i233 = phi i1 [ %.b3.i223, %rs_read_boolean.exit220 ], [ %.b3.i233.pre, %rs_read.exit.i228 ]
  %.b2.i232 = phi i1 [ %.b2.i222, %rs_read_boolean.exit220 ], [ %.b2.i232.pre, %rs_read.exit.i228 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i221) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i231) #8
  store i8 0, i8* %buf.i231, align 1, !tbaa !28
  %or.cond.i234 = or i1 %.b2.i232, %.b3.i233
  br i1 %or.cond.i234, label %rs_read_boolean.exit240, label %168

; <label>:168                                     ; preds = %rs_read_boolean.exit230
  %169 = call i64 @encread(i8* %buf.i231, i64 1, %struct.__sFILE* %inf) #8
  %170 = icmp eq i64 %169, 1
  br i1 %170, label %.rs_read.exit.i238_crit_edge, label %171

.rs_read.exit.i238_crit_edge:                     ; preds = %168
  %.b2.i242.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i238

; <label>:171                                     ; preds = %168
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i238

rs_read.exit.i238:                                ; preds = %171, %.rs_read.exit.i238_crit_edge
  %.b2.i242.pre = phi i1 [ %.b2.i242.pre.pre, %.rs_read.exit.i238_crit_edge ], [ true, %171 ]
  %172 = load i8* %buf.i231, align 1, !tbaa !28
  %173 = icmp ne i8 %172, 0
  %174 = zext i1 %173 to i8
  store i8 %174, i8* @terse, align 1, !tbaa !5
  %.b3.i243.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit240

rs_read_boolean.exit240:                          ; preds = %rs_read.exit.i238, %rs_read_boolean.exit230
  %.b3.i243 = phi i1 [ %.b3.i233, %rs_read_boolean.exit230 ], [ %.b3.i243.pre, %rs_read.exit.i238 ]
  %.b2.i242 = phi i1 [ %.b2.i232, %rs_read_boolean.exit230 ], [ %.b2.i242.pre, %rs_read.exit.i238 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i231) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i241) #8
  store i8 0, i8* %buf.i241, align 1, !tbaa !28
  %or.cond.i244 = or i1 %.b2.i242, %.b3.i243
  br i1 %or.cond.i244, label %rs_read_boolean.exit250, label %175

; <label>:175                                     ; preds = %rs_read_boolean.exit240
  %176 = call i64 @encread(i8* %buf.i241, i64 1, %struct.__sFILE* %inf) #8
  %177 = icmp eq i64 %176, 1
  br i1 %177, label %.rs_read.exit.i248_crit_edge, label %178

.rs_read.exit.i248_crit_edge:                     ; preds = %175
  %.b2.i252.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i248

; <label>:178                                     ; preds = %175
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i248

rs_read.exit.i248:                                ; preds = %178, %.rs_read.exit.i248_crit_edge
  %.b2.i252.pre = phi i1 [ %.b2.i252.pre.pre, %.rs_read.exit.i248_crit_edge ], [ true, %178 ]
  %179 = load i8* %buf.i241, align 1, !tbaa !28
  %180 = icmp ne i8 %179, 0
  %181 = zext i1 %180 to i8
  store i8 %181, i8* @to_death, align 1, !tbaa !5
  %.b3.i253.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit250

rs_read_boolean.exit250:                          ; preds = %rs_read.exit.i248, %rs_read_boolean.exit240
  %.b3.i253 = phi i1 [ %.b3.i243, %rs_read_boolean.exit240 ], [ %.b3.i253.pre, %rs_read.exit.i248 ]
  %.b2.i252 = phi i1 [ %.b2.i242, %rs_read_boolean.exit240 ], [ %.b2.i252.pre, %rs_read.exit.i248 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i241) #8
  call void @llvm.lifetime.start(i64 1, i8* %buf.i251) #8
  store i8 0, i8* %buf.i251, align 1, !tbaa !28
  %or.cond.i254 = or i1 %.b2.i252, %.b3.i253
  br i1 %or.cond.i254, label %rs_read_boolean.exit260, label %182

; <label>:182                                     ; preds = %rs_read_boolean.exit250
  %183 = call i64 @encread(i8* %buf.i251, i64 1, %struct.__sFILE* %inf) #8
  %184 = icmp eq i64 %183, 1
  br i1 %184, label %.rs_read.exit.i258_crit_edge, label %185

.rs_read.exit.i258_crit_edge:                     ; preds = %182
  %.b2.i262.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i258

; <label>:185                                     ; preds = %182
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i258

rs_read.exit.i258:                                ; preds = %185, %.rs_read.exit.i258_crit_edge
  %.b2.i262.pre = phi i1 [ %.b2.i262.pre.pre, %.rs_read.exit.i258_crit_edge ], [ true, %185 ]
  %186 = load i8* %buf.i251, align 1, !tbaa !28
  %187 = icmp ne i8 %186, 0
  %188 = zext i1 %187 to i8
  store i8 %188, i8* @tombstone, align 1, !tbaa !5
  %.b3.i263.pre = load i1* @format_error, align 1
  br label %rs_read_boolean.exit260

rs_read_boolean.exit260:                          ; preds = %rs_read.exit.i258, %rs_read_boolean.exit250
  %.b3.i263 = phi i1 [ %.b3.i253, %rs_read_boolean.exit250 ], [ %.b3.i263.pre, %rs_read.exit.i258 ]
  %.b2.i262 = phi i1 [ %.b2.i252, %rs_read_boolean.exit250 ], [ %.b2.i262.pre, %rs_read.exit.i258 ]
  call void @llvm.lifetime.end(i64 1, i8* %buf.i251) #8
  %189 = bitcast i32* %input.i261 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %189) #8
  store i32 0, i32* %input.i261, align 4, !tbaa !38
  %or.cond.i264 = or i1 %.b2.i262, %.b3.i263
  br i1 %or.cond.i264, label %rs_read_int.exit271, label %190

; <label>:190                                     ; preds = %rs_read_boolean.exit260
  %191 = call i64 @encread(i8* %189, i64 4, %struct.__sFILE* %inf) #8
  %192 = icmp eq i64 %191, 4
  br i1 %192, label %rs_read_int.exit271, label %193

; <label>:193                                     ; preds = %190
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit271

rs_read_int.exit271:                              ; preds = %193, %190, %rs_read_boolean.exit260
  call void @llvm.lifetime.end(i64 4, i8* %189) #8
  %194 = call i32 @rs_read_booleans(%struct.__sFILE* %inf, i8* getelementptr inbounds ([26 x i8]* @pack_used, i64 0, i64 0), i32 26)
  %.b2.i272 = load i1* @read_error, align 1
  %.b3.i273 = load i1* @format_error, align 1
  %or.cond.i274 = or i1 %.b2.i272, %.b3.i273
  br i1 %or.cond.i274, label %rs_read_char.exit, label %195

; <label>:195                                     ; preds = %rs_read_int.exit271
  %196 = call i64 @encread(i8* @dir_ch, i64 1, %struct.__sFILE* %inf) #8
  %197 = icmp eq i64 %196, 1
  br i1 %197, label %.rs_read_char.exit_crit_edge, label %rs_read_char.exit.thread

.rs_read_char.exit_crit_edge:                     ; preds = %195
  %.b2.i282.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit

rs_read_char.exit.thread:                         ; preds = %195
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_char.exit:                                ; preds = %.rs_read_char.exit_crit_edge, %rs_read_int.exit271
  %.b2.i282 = phi i1 [ %.b2.i282.pre, %.rs_read_char.exit_crit_edge ], [ %.b2.i272, %rs_read_int.exit271 ]
  %.b3.i283 = load i1* @format_error, align 1
  %or.cond.i284 = or i1 %.b2.i282, %.b3.i283
  br i1 %or.cond.i284, label %rs_read_chars.exit, label %198

; <label>:198                                     ; preds = %rs_read_char.exit
  %199 = bitcast i32* %input.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %199) #8
  store i32 0, i32* %input.i.i, align 4, !tbaa !38
  %200 = call i64 @encread(i8* %199, i64 4, %struct.__sFILE* %inf) #8
  %201 = icmp eq i64 %200, 4
  br i1 %201, label %rs_read_int.exit.i, label %202

; <label>:202                                     ; preds = %198
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i

rs_read_int.exit.i:                               ; preds = %202, %198
  %203 = load i32* %input.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %199) #8
  %204 = icmp eq i32 %203, 1024
  br i1 %204, label %205, label %.thread.i

.thread.i:                                        ; preds = %rs_read_int.exit.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit

; <label>:205                                     ; preds = %rs_read_int.exit.i
  %.b3.i6.pre.i = load i1* @format_error, align 1
  %.b2.i5.i = load i1* @read_error, align 1
  %or.cond.i7.i = or i1 %.b2.i5.i, %.b3.i6.pre.i
  br i1 %or.cond.i7.i, label %rs_read_chars.exit, label %206

; <label>:206                                     ; preds = %205
  %207 = call i64 @encread(i8* getelementptr inbounds ([1024 x i8]* @file_name, i64 0, i64 0), i64 1024, %struct.__sFILE* %inf) #8
  %208 = icmp eq i64 %207, 1024
  br i1 %208, label %rs_read_chars.exit, label %209

; <label>:209                                     ; preds = %206
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit

rs_read_chars.exit:                               ; preds = %209, %206, %205, %.thread.i, %rs_read_char.exit, %rs_read_char.exit.thread
  %.b2.i293 = load i1* @read_error, align 1
  %.b3.i294 = load i1* @format_error, align 1
  %or.cond.i295 = or i1 %.b2.i293, %.b3.i294
  br i1 %or.cond.i295, label %rs_read_chars.exit309, label %210

; <label>:210                                     ; preds = %rs_read_chars.exit
  %211 = bitcast i32* %input.i.i292 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %211) #8
  store i32 0, i32* %input.i.i292, align 4, !tbaa !38
  %212 = call i64 @encread(i8* %211, i64 4, %struct.__sFILE* %inf) #8
  %213 = icmp eq i64 %212, 4
  br i1 %213, label %rs_read_int.exit.i296, label %214

; <label>:214                                     ; preds = %210
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i296

rs_read_int.exit.i296:                            ; preds = %214, %210
  %215 = load i32* %input.i.i292, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %211) #8
  %216 = icmp eq i32 %215, 1024
  br i1 %216, label %217, label %.thread.i298

.thread.i298:                                     ; preds = %rs_read_int.exit.i296
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit309

; <label>:217                                     ; preds = %rs_read_int.exit.i296
  %.b3.i6.pre.i299 = load i1* @format_error, align 1
  %.b2.i5.i300 = load i1* @read_error, align 1
  %or.cond.i7.i301 = or i1 %.b2.i5.i300, %.b3.i6.pre.i299
  br i1 %or.cond.i7.i301, label %rs_read_chars.exit309, label %218

; <label>:218                                     ; preds = %217
  %219 = call i64 @encread(i8* getelementptr inbounds ([1024 x i8]* @huh, i64 0, i64 0), i64 1024, %struct.__sFILE* %inf) #8
  %220 = icmp eq i64 %219, 1024
  br i1 %220, label %rs_read_chars.exit309, label %221

; <label>:221                                     ; preds = %218
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit309

rs_read_chars.exit309:                            ; preds = %221, %218, %217, %.thread.i298, %rs_read_chars.exit
  %.b2.i310 = load i1* @read_error, align 1
  %.b3.i311 = load i1* @format_error, align 1
  %or.cond.i312 = or i1 %.b2.i310, %.b3.i311
  br i1 %or.cond.i312, label %rs_read_potions.exit, label %.preheader.i

.preheader.i:                                     ; preds = %rs_read_chars.exit309
  %222 = bitcast i32* %input.i.i.i to i8*
  br label %rs_read_string_index.exit._crit_edge.i

rs_read_string_index.exit._crit_edge.i:           ; preds = %rs_read_string_index.exit.i, %.preheader.i
  %.b3.i.i = phi i1 [ false, %.preheader.i ], [ %.b3.i319.pre, %rs_read_string_index.exit.i ]
  %.b2.i.i = phi i1 [ false, %.preheader.i ], [ %.b2.i318.pre, %rs_read_string_index.exit.i ]
  %indvars.iv.i = phi i64 [ 0, %.preheader.i ], [ %indvars.iv.next.i, %rs_read_string_index.exit.i ]
  %223 = load i32* @cNCOLORS, align 4, !tbaa !38
  %224 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @p_colors to [0 x i8*]*), i64 0, i64 %indvars.iv.i
  %or.cond.i.i = or i1 %.b2.i.i, %.b3.i.i
  br i1 %or.cond.i.i, label %rs_read_string_index.exit.i, label %225

; <label>:225                                     ; preds = %rs_read_string_index.exit._crit_edge.i
  call void @llvm.lifetime.start(i64 4, i8* %222) #8
  store i32 0, i32* %input.i.i.i, align 4, !tbaa !38
  %226 = call i64 @encread(i8* %222, i64 4, %struct.__sFILE* %inf) #8
  %227 = icmp eq i64 %226, 4
  br i1 %227, label %rs_read_int.exit.i.i, label %228

; <label>:228                                     ; preds = %225
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i.i

rs_read_int.exit.i.i:                             ; preds = %228, %225
  %229 = load i32* %input.i.i.i, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %222) #8
  %230 = icmp sgt i32 %229, %223
  br i1 %230, label %231, label %232

; <label>:231                                     ; preds = %rs_read_int.exit.i.i
  store i1 true, i1* @format_error, align 1
  br label %rs_read_string_index.exit.i

; <label>:232                                     ; preds = %rs_read_int.exit.i.i
  %233 = icmp sgt i32 %229, -1
  br i1 %233, label %234, label %.thread.i.i

; <label>:234                                     ; preds = %232
  %235 = sext i32 %229 to i64
  %236 = getelementptr inbounds [0 x i8*]* bitcast ([27 x i8*]* @rainbow to [0 x i8*]*), i64 0, i64 %235
  %237 = load i8** %236, align 8, !tbaa !1
  store i8* %237, i8** %224, align 8, !tbaa !1
  br label %rs_read_string_index.exit.i

.thread.i.i:                                      ; preds = %232
  store i8* null, i8** %224, align 8, !tbaa !1
  br label %rs_read_string_index.exit.i

rs_read_string_index.exit.i:                      ; preds = %.thread.i.i, %234, %231, %rs_read_string_index.exit._crit_edge.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 14
  %.b2.i318.pre = load i1* @read_error, align 1
  %.b3.i319.pre = load i1* @format_error, align 1
  br i1 %exitcond.i, label %rs_read_potions.exit, label %rs_read_string_index.exit._crit_edge.i

rs_read_potions.exit:                             ; preds = %rs_read_string_index.exit.i, %rs_read_chars.exit309
  %.b3.i319 = phi i1 [ %.b3.i311, %rs_read_chars.exit309 ], [ %.b3.i319.pre, %rs_read_string_index.exit.i ]
  %.b2.i318 = phi i1 [ %.b2.i310, %rs_read_chars.exit309 ], [ %.b2.i318.pre, %rs_read_string_index.exit.i ]
  %or.cond.i320 = or i1 %.b2.i318, %.b3.i319
  br i1 %or.cond.i320, label %rs_read_chars.exit334, label %238

; <label>:238                                     ; preds = %rs_read_potions.exit
  %239 = bitcast i32* %input.i.i317 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %239) #8
  store i32 0, i32* %input.i.i317, align 4, !tbaa !38
  %240 = call i64 @encread(i8* %239, i64 4, %struct.__sFILE* %inf) #8
  %241 = icmp eq i64 %240, 4
  br i1 %241, label %rs_read_int.exit.i321, label %242

; <label>:242                                     ; preds = %238
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i321

rs_read_int.exit.i321:                            ; preds = %242, %238
  %243 = load i32* %input.i.i317, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %239) #8
  %244 = icmp eq i32 %243, 2048
  br i1 %244, label %245, label %.thread.i323

.thread.i323:                                     ; preds = %rs_read_int.exit.i321
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit334

; <label>:245                                     ; preds = %rs_read_int.exit.i321
  %.b3.i6.pre.i324 = load i1* @format_error, align 1
  %.b2.i5.i325 = load i1* @read_error, align 1
  %or.cond.i7.i326 = or i1 %.b2.i5.i325, %.b3.i6.pre.i324
  br i1 %or.cond.i7.i326, label %rs_read_chars.exit334, label %246

; <label>:246                                     ; preds = %245
  %247 = call i64 @encread(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i64 2048, %struct.__sFILE* %inf) #8
  %248 = icmp eq i64 %247, 2048
  br i1 %248, label %rs_read_chars.exit334, label %249

; <label>:249                                     ; preds = %246
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit334

rs_read_chars.exit334:                            ; preds = %249, %246, %245, %.thread.i323, %rs_read_potions.exit
  %.b2.i336 = load i1* @read_error, align 1
  %.b3.i337 = load i1* @format_error, align 1
  %or.cond.i338 = or i1 %.b2.i336, %.b3.i337
  br i1 %or.cond.i338, label %rs_read_rings.exit, label %.preheader.i339

.preheader.i339:                                  ; preds = %rs_read_chars.exit334
  %250 = bitcast i32* %input.i.i.i335 to i8*
  br label %251

; <label>:251                                     ; preds = %rs_read_stone_index.exit._crit_edge.i, %.preheader.i339
  %.b3.i.i340 = phi i1 [ false, %.preheader.i339 ], [ %.b3.i.pre.i348, %rs_read_stone_index.exit._crit_edge.i ]
  %.b2.i.i341 = phi i1 [ false, %.preheader.i339 ], [ %.b2.i.pre.i347, %rs_read_stone_index.exit._crit_edge.i ]
  %indvars.iv.i342 = phi i64 [ 0, %.preheader.i339 ], [ %indvars.iv.next.i345, %rs_read_stone_index.exit._crit_edge.i ]
  %252 = load i32* @cNSTONES, align 4, !tbaa !38
  %253 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @r_stones to [0 x i8*]*), i64 0, i64 %indvars.iv.i342
  %or.cond.i.i343 = or i1 %.b2.i.i341, %.b3.i.i340
  br i1 %or.cond.i.i343, label %rs_read_stone_index.exit.i, label %254

; <label>:254                                     ; preds = %251
  call void @llvm.lifetime.start(i64 4, i8* %250) #8
  store i32 0, i32* %input.i.i.i335, align 4, !tbaa !38
  %255 = call i64 @encread(i8* %250, i64 4, %struct.__sFILE* %inf) #8
  %256 = icmp eq i64 %255, 4
  br i1 %256, label %rs_read_int.exit.i.i344, label %257

; <label>:257                                     ; preds = %254
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i.i344

rs_read_int.exit.i.i344:                          ; preds = %257, %254
  %258 = load i32* %input.i.i.i335, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %250) #8
  %259 = icmp sgt i32 %258, %252
  br i1 %259, label %260, label %261

; <label>:260                                     ; preds = %rs_read_int.exit.i.i344
  store i1 true, i1* @format_error, align 1
  br label %rs_read_stone_index.exit.i

; <label>:261                                     ; preds = %rs_read_int.exit.i.i344
  %262 = icmp sgt i32 %258, -1
  br i1 %262, label %263, label %267

; <label>:263                                     ; preds = %261
  %264 = sext i32 %258 to i64
  %265 = getelementptr inbounds [0 x %struct.STONE]* bitcast (<{ { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] }, { i8*, i32, [4 x i8] } }>* @stones to [0 x %struct.STONE]*), i64 0, i64 %264, i32 0
  %266 = load i8** %265, align 8, !tbaa !79
  store i8* %266, i8** %253, align 8, !tbaa !1
  br label %rs_read_stone_index.exit.i

; <label>:267                                     ; preds = %261
  store i8* null, i8** %253, align 8, !tbaa !1
  br label %rs_read_stone_index.exit.i

rs_read_stone_index.exit.i:                       ; preds = %267, %263, %260, %251
  %indvars.iv.next.i345 = add nuw nsw i64 %indvars.iv.i342, 1
  %exitcond.i346 = icmp eq i64 %indvars.iv.next.i345, 14
  br i1 %exitcond.i346, label %rs_read_rings.exit, label %rs_read_stone_index.exit._crit_edge.i

rs_read_stone_index.exit._crit_edge.i:            ; preds = %rs_read_stone_index.exit.i
  %.b2.i.pre.i347 = load i1* @read_error, align 1
  %.b3.i.pre.i348 = load i1* @format_error, align 1
  br label %251

rs_read_rings.exit:                               ; preds = %rs_read_stone_index.exit.i, %rs_read_chars.exit334
  %268 = call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** @release)
  %.b2.i353 = load i1* @read_error, align 1
  %.b3.i354 = load i1* @format_error, align 1
  %or.cond.i355 = or i1 %.b2.i353, %.b3.i354
  br i1 %or.cond.i355, label %rs_read_char.exit363, label %269

; <label>:269                                     ; preds = %rs_read_rings.exit
  %270 = call i64 @encread(i8* @runch, i64 1, %struct.__sFILE* %inf) #8
  %271 = icmp eq i64 %270, 1
  br i1 %271, label %rs_read_char.exit363, label %272

; <label>:272                                     ; preds = %269
  store i1 true, i1* @read_error, align 1
  br label %rs_read_char.exit363

rs_read_char.exit363:                             ; preds = %272, %269, %rs_read_rings.exit
  %273 = call i32 @rs_read_scrolls(%struct.__sFILE* %inf)
  %.b2.i364 = load i1* @read_error, align 1
  %.b3.i365 = load i1* @format_error, align 1
  %or.cond.i366 = or i1 %.b2.i364, %.b3.i365
  br i1 %or.cond.i366, label %rs_read_char.exit374, label %274

; <label>:274                                     ; preds = %rs_read_char.exit363
  %275 = call i64 @encread(i8* @take, i64 1, %struct.__sFILE* %inf) #8
  %276 = icmp eq i64 %275, 1
  br i1 %276, label %.rs_read_char.exit374_crit_edge, label %rs_read_char.exit374.thread

.rs_read_char.exit374_crit_edge:                  ; preds = %274
  %.b2.i376.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit374

rs_read_char.exit374.thread:                      ; preds = %274
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit392

rs_read_char.exit374:                             ; preds = %.rs_read_char.exit374_crit_edge, %rs_read_char.exit363
  %.b2.i376 = phi i1 [ %.b2.i376.pre, %.rs_read_char.exit374_crit_edge ], [ %.b2.i364, %rs_read_char.exit363 ]
  %.b3.i377 = load i1* @format_error, align 1
  %or.cond.i378 = or i1 %.b2.i376, %.b3.i377
  br i1 %or.cond.i378, label %rs_read_chars.exit392, label %277

; <label>:277                                     ; preds = %rs_read_char.exit374
  %278 = bitcast i32* %input.i.i375 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %278) #8
  store i32 0, i32* %input.i.i375, align 4, !tbaa !38
  %279 = call i64 @encread(i8* %278, i64 4, %struct.__sFILE* %inf) #8
  %280 = icmp eq i64 %279, 4
  br i1 %280, label %rs_read_int.exit.i379, label %281

; <label>:281                                     ; preds = %277
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i379

rs_read_int.exit.i379:                            ; preds = %281, %277
  %282 = load i32* %input.i.i375, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %278) #8
  %283 = icmp eq i32 %282, 1024
  br i1 %283, label %284, label %.thread.i381

.thread.i381:                                     ; preds = %rs_read_int.exit.i379
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit392

; <label>:284                                     ; preds = %rs_read_int.exit.i379
  %.b3.i6.pre.i382 = load i1* @format_error, align 1
  %.b2.i5.i383 = load i1* @read_error, align 1
  %or.cond.i7.i384 = or i1 %.b2.i5.i383, %.b3.i6.pre.i382
  br i1 %or.cond.i7.i384, label %rs_read_chars.exit392, label %285

; <label>:285                                     ; preds = %284
  %286 = call i64 @encread(i8* getelementptr inbounds ([1024 x i8]* @whoami, i64 0, i64 0), i64 1024, %struct.__sFILE* %inf) #8
  %287 = icmp eq i64 %286, 1024
  br i1 %287, label %rs_read_chars.exit392, label %288

; <label>:288                                     ; preds = %285
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit392

rs_read_chars.exit392:                            ; preds = %288, %285, %284, %.thread.i381, %rs_read_char.exit374, %rs_read_char.exit374.thread
  %289 = call i32 @rs_read_sticks(%struct.__sFILE* %inf)
  %290 = bitcast i32* %input.i393 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %290) #8
  store i32 0, i32* %input.i393, align 4, !tbaa !38
  %.b2.i394 = load i1* @read_error, align 1
  %.b3.i395 = load i1* @format_error, align 1
  %or.cond.i396 = or i1 %.b2.i394, %.b3.i395
  br i1 %or.cond.i396, label %rs_read_int.exit403, label %291

; <label>:291                                     ; preds = %rs_read_chars.exit392
  %292 = call i64 @encread(i8* %290, i64 4, %struct.__sFILE* %inf) #8
  %293 = icmp eq i64 %292, 4
  br i1 %293, label %.rs_read.exit.i401_crit_edge, label %294

.rs_read.exit.i401_crit_edge:                     ; preds = %291
  %.b2.i405.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i401

; <label>:294                                     ; preds = %291
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i401

rs_read.exit.i401:                                ; preds = %294, %.rs_read.exit.i401_crit_edge
  %.b2.i405.pre = phi i1 [ %.b2.i405.pre.pre, %.rs_read.exit.i401_crit_edge ], [ true, %294 ]
  %295 = load i32* %input.i393, align 4, !tbaa !38
  store i32 %295, i32* @orig_dsusp, align 4, !tbaa !38
  %.b3.i406.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit403

rs_read_int.exit403:                              ; preds = %rs_read.exit.i401, %rs_read_chars.exit392
  %.b3.i406 = phi i1 [ %.b3.i395, %rs_read_chars.exit392 ], [ %.b3.i406.pre, %rs_read.exit.i401 ]
  %.b2.i405 = phi i1 [ %.b2.i394, %rs_read_chars.exit392 ], [ %.b2.i405.pre, %rs_read.exit.i401 ]
  call void @llvm.lifetime.end(i64 4, i8* %290) #8
  %or.cond.i407 = or i1 %.b2.i405, %.b3.i406
  br i1 %or.cond.i407, label %rs_read_chars.exit421, label %296

; <label>:296                                     ; preds = %rs_read_int.exit403
  %297 = bitcast i32* %input.i.i404 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %297) #8
  store i32 0, i32* %input.i.i404, align 4, !tbaa !38
  %298 = call i64 @encread(i8* %297, i64 4, %struct.__sFILE* %inf) #8
  %299 = icmp eq i64 %298, 4
  br i1 %299, label %rs_read_int.exit.i408, label %300

; <label>:300                                     ; preds = %296
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i408

rs_read_int.exit.i408:                            ; preds = %300, %296
  %301 = load i32* %input.i.i404, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %297) #8
  %302 = icmp eq i32 %301, 1024
  br i1 %302, label %303, label %.thread.i410

.thread.i410:                                     ; preds = %rs_read_int.exit.i408
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit421

; <label>:303                                     ; preds = %rs_read_int.exit.i408
  %.b3.i6.pre.i411 = load i1* @format_error, align 1
  %.b2.i5.i412 = load i1* @read_error, align 1
  %or.cond.i7.i413 = or i1 %.b2.i5.i412, %.b3.i6.pre.i411
  br i1 %or.cond.i7.i413, label %rs_read_chars.exit421, label %304

; <label>:304                                     ; preds = %303
  %305 = call i64 @encread(i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0), i64 1024, %struct.__sFILE* %inf) #8
  %306 = icmp eq i64 %305, 1024
  br i1 %306, label %rs_read_chars.exit421, label %307

; <label>:307                                     ; preds = %304
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit421

rs_read_chars.exit421:                            ; preds = %307, %304, %303, %.thread.i410, %rs_read_int.exit403
  %.b2.i423 = load i1* @read_error, align 1
  %.b3.i424 = load i1* @format_error, align 1
  %or.cond.i425 = or i1 %.b2.i423, %.b3.i424
  br i1 %or.cond.i425, label %rs_read_chars.exit439, label %308

; <label>:308                                     ; preds = %rs_read_chars.exit421
  %309 = bitcast i32* %input.i.i422 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %309) #8
  store i32 0, i32* %input.i.i422, align 4, !tbaa !38
  %310 = call i64 @encread(i8* %309, i64 4, %struct.__sFILE* %inf) #8
  %311 = icmp eq i64 %310, 4
  br i1 %311, label %rs_read_int.exit.i426, label %312

; <label>:312                                     ; preds = %308
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i426

rs_read_int.exit.i426:                            ; preds = %312, %308
  %313 = load i32* %input.i.i422, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %309) #8
  %314 = icmp eq i32 %313, 1024
  br i1 %314, label %315, label %.thread.i428

.thread.i428:                                     ; preds = %rs_read_int.exit.i426
  store i1 true, i1* @format_error, align 1
  br label %rs_read_chars.exit439

; <label>:315                                     ; preds = %rs_read_int.exit.i426
  %.b3.i6.pre.i429 = load i1* @format_error, align 1
  %.b2.i5.i430 = load i1* @read_error, align 1
  %or.cond.i7.i431 = or i1 %.b2.i5.i430, %.b3.i6.pre.i429
  br i1 %or.cond.i7.i431, label %rs_read_chars.exit439, label %316

; <label>:316                                     ; preds = %315
  %317 = call i64 @encread(i8* getelementptr inbounds ([1024 x i8]* @home, i64 0, i64 0), i64 1024, %struct.__sFILE* %inf) #8
  %318 = icmp eq i64 %317, 1024
  br i1 %318, label %rs_read_chars.exit439, label %319

; <label>:319                                     ; preds = %316
  store i1 true, i1* @read_error, align 1
  br label %rs_read_chars.exit439

rs_read_chars.exit439:                            ; preds = %319, %316, %315, %.thread.i428, %rs_read_chars.exit421
  %.b2.i441 = load i1* @read_error, align 1
  %.b3.i442 = load i1* @format_error, align 1
  %or.cond.i443 = or i1 %.b2.i441, %.b3.i442
  br i1 %or.cond.i443, label %rs_read_new_strings.exit, label %320

; <label>:320                                     ; preds = %rs_read_chars.exit439
  %321 = bitcast i32* %input.i.i440 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %321) #8
  store i32 0, i32* %input.i.i440, align 4, !tbaa !38
  %322 = call i64 @encread(i8* %321, i64 4, %struct.__sFILE* %inf) #8
  %323 = icmp eq i64 %322, 4
  br i1 %323, label %rs_read_int.exit.i444, label %324

; <label>:324                                     ; preds = %320
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i444

rs_read_int.exit.i444:                            ; preds = %324, %320
  %325 = load i32* %input.i.i440, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %321) #8
  %326 = icmp eq i32 %325, 3
  br i1 %326, label %.lr.ph.i, label %327

; <label>:327                                     ; preds = %rs_read_int.exit.i444
  store i1 true, i1* @format_error, align 1
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %327, %rs_read_int.exit.i444
  %indvars.iv.i446 = phi i64 [ %indvars.iv.next.i447, %.lr.ph.i ], [ 0, %327 ], [ 0, %rs_read_int.exit.i444 ]
  %328 = getelementptr inbounds [0 x i8*]* bitcast ([3 x i8*]* @inv_t_name to [0 x i8*]*), i64 0, i64 %indvars.iv.i446
  %329 = call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** %328) #8
  %330 = icmp eq i32 %329, 0
  %indvars.iv.next.i447 = add nuw nsw i64 %indvars.iv.i446, 1
  %331 = trunc i64 %indvars.iv.next.i447 to i32
  %332 = icmp slt i32 %331, 3
  %or.cond7.i = and i1 %330, %332
  br i1 %or.cond7.i, label %.lr.ph.i, label %rs_read_new_strings.exit.loopexit

rs_read_new_strings.exit.loopexit:                ; preds = %.lr.ph.i
  %.b2.i452.pre = load i1* @read_error, align 1
  %.b3.i453.pre = load i1* @format_error, align 1
  br label %rs_read_new_strings.exit

rs_read_new_strings.exit:                         ; preds = %rs_read_new_strings.exit.loopexit, %rs_read_chars.exit439
  %.b3.i453 = phi i1 [ %.b3.i453.pre, %rs_read_new_strings.exit.loopexit ], [ %.b3.i442, %rs_read_chars.exit439 ]
  %.b2.i452 = phi i1 [ %.b2.i452.pre, %rs_read_new_strings.exit.loopexit ], [ %.b2.i441, %rs_read_chars.exit439 ]
  %or.cond.i454 = or i1 %.b2.i452, %.b3.i453
  br i1 %or.cond.i454, label %rs_read_char.exit462, label %333

; <label>:333                                     ; preds = %rs_read_new_strings.exit
  %334 = call i64 @encread(i8* @l_last_comm, i64 1, %struct.__sFILE* %inf) #8
  %335 = icmp eq i64 %334, 1
  br i1 %335, label %.rs_read_char.exit462_crit_edge, label %rs_read_char.exit462.thread

.rs_read_char.exit462_crit_edge:                  ; preds = %333
  %.b2.i463.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit462

rs_read_char.exit462.thread:                      ; preds = %333
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit599.thread

rs_read_char.exit462:                             ; preds = %.rs_read_char.exit462_crit_edge, %rs_read_new_strings.exit
  %.b2.i463 = phi i1 [ %.b2.i463.pre, %.rs_read_char.exit462_crit_edge ], [ %.b2.i452, %rs_read_new_strings.exit ]
  %.b3.i464 = load i1* @format_error, align 1
  %or.cond.i465 = or i1 %.b2.i463, %.b3.i464
  br i1 %or.cond.i465, label %rs_read_char.exit473, label %336

; <label>:336                                     ; preds = %rs_read_char.exit462
  %337 = call i64 @encread(i8* @l_last_dir, i64 1, %struct.__sFILE* %inf) #8
  %338 = icmp eq i64 %337, 1
  br i1 %338, label %.rs_read_char.exit473_crit_edge, label %339

.rs_read_char.exit473_crit_edge:                  ; preds = %336
  %.b2.i474.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit473

; <label>:339                                     ; preds = %336
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit599.thread

rs_read_char.exit473:                             ; preds = %.rs_read_char.exit473_crit_edge, %rs_read_char.exit462
  %.b2.i474 = phi i1 [ %.b2.i474.pre, %.rs_read_char.exit473_crit_edge ], [ %.b2.i463, %rs_read_char.exit462 ]
  %.b3.i475 = load i1* @format_error, align 1
  %or.cond.i476 = or i1 %.b2.i474, %.b3.i475
  br i1 %or.cond.i476, label %rs_read_char.exit484, label %340

; <label>:340                                     ; preds = %rs_read_char.exit473
  %341 = call i64 @encread(i8* @last_comm, i64 1, %struct.__sFILE* %inf) #8
  %342 = icmp eq i64 %341, 1
  br i1 %342, label %.rs_read_char.exit484_crit_edge, label %343

.rs_read_char.exit484_crit_edge:                  ; preds = %340
  %.b2.i485.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit484

; <label>:343                                     ; preds = %340
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit599.thread

rs_read_char.exit484:                             ; preds = %.rs_read_char.exit484_crit_edge, %rs_read_char.exit473
  %.b2.i485 = phi i1 [ %.b2.i485.pre, %.rs_read_char.exit484_crit_edge ], [ %.b2.i474, %rs_read_char.exit473 ]
  %.b3.i486 = load i1* @format_error, align 1
  %or.cond.i487 = or i1 %.b2.i485, %.b3.i486
  br i1 %or.cond.i487, label %rs_read_char.exit495, label %344

; <label>:344                                     ; preds = %rs_read_char.exit484
  %345 = call i64 @encread(i8* @last_dir, i64 1, %struct.__sFILE* %inf) #8
  %346 = icmp eq i64 %345, 1
  br i1 %346, label %.rs_read_char.exit495_crit_edge, label %347

.rs_read_char.exit495_crit_edge:                  ; preds = %344
  %.b2.i497.pre = load i1* @read_error, align 1
  br label %rs_read_char.exit495

; <label>:347                                     ; preds = %344
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit599.thread

rs_read_int.exit599.thread:                       ; preds = %347, %343, %339, %rs_read_char.exit462.thread
  %348 = bitcast i32* %input.i512 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %348) #8
  call void @llvm.lifetime.end(i64 4, i8* %348) #8
  %349 = bitcast i32* %input.i523 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %349) #8
  call void @llvm.lifetime.end(i64 4, i8* %349) #8
  %350 = bitcast i32* %input.i534 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %350) #8
  call void @llvm.lifetime.end(i64 4, i8* %350) #8
  %351 = bitcast i32* %input.i545 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %351) #8
  call void @llvm.lifetime.end(i64 4, i8* %351) #8
  %352 = bitcast i32* %input.i556 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %352) #8
  call void @llvm.lifetime.end(i64 4, i8* %352) #8
  %353 = bitcast i32* %input.i567 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %353) #8
  call void @llvm.lifetime.end(i64 4, i8* %353) #8
  %354 = bitcast i32* %input.i578 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %354) #8
  call void @llvm.lifetime.end(i64 4, i8* %354) #8
  %355 = bitcast i32* %input.i589 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %355) #8
  call void @llvm.lifetime.end(i64 4, i8* %355) #8
  %356 = bitcast i32* %input.i600 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %356) #8
  store i32 0, i32* %input.i600, align 4, !tbaa !38
  br label %rs_read_int.exit610

rs_read_char.exit495:                             ; preds = %.rs_read_char.exit495_crit_edge, %rs_read_char.exit484
  %.b2.i497 = phi i1 [ %.b2.i497.pre, %.rs_read_char.exit495_crit_edge ], [ %.b2.i485, %rs_read_char.exit484 ]
  %.b3.i498 = load i1* @format_error, align 1
  %or.cond.i499 = or i1 %.b2.i497, %.b3.i498
  br i1 %or.cond.i499, label %rs_read_new_strings.exit511, label %357

; <label>:357                                     ; preds = %rs_read_char.exit495
  %358 = bitcast i32* %input.i.i496 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %358) #8
  store i32 0, i32* %input.i.i496, align 4, !tbaa !38
  %359 = call i64 @encread(i8* %358, i64 4, %struct.__sFILE* %inf) #8
  %360 = icmp eq i64 %359, 4
  br i1 %360, label %rs_read_int.exit.i500, label %361

; <label>:361                                     ; preds = %357
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i500

rs_read_int.exit.i500:                            ; preds = %361, %357
  %362 = load i32* %input.i.i496, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %358) #8
  %363 = icmp eq i32 %362, 8
  br i1 %363, label %.lr.ph.i505, label %364

; <label>:364                                     ; preds = %rs_read_int.exit.i500
  store i1 true, i1* @format_error, align 1
  br label %.lr.ph.i505

.lr.ph.i505:                                      ; preds = %.lr.ph.i505, %364, %rs_read_int.exit.i500
  %indvars.iv.i502 = phi i64 [ %indvars.iv.next.i503, %.lr.ph.i505 ], [ 0, %364 ], [ 0, %rs_read_int.exit.i500 ]
  %365 = getelementptr inbounds [0 x i8*]* bitcast ([8 x i8*]* @tr_name to [0 x i8*]*), i64 0, i64 %indvars.iv.i502
  %366 = call i32 @rs_read_new_string(%struct.__sFILE* %inf, i8** %365) #8
  %367 = icmp eq i32 %366, 0
  %indvars.iv.next.i503 = add nuw nsw i64 %indvars.iv.i502, 1
  %368 = trunc i64 %indvars.iv.next.i503 to i32
  %369 = icmp slt i32 %368, 8
  %or.cond7.i504 = and i1 %367, %369
  br i1 %or.cond7.i504, label %.lr.ph.i505, label %rs_read_new_strings.exit511.loopexit

rs_read_new_strings.exit511.loopexit:             ; preds = %.lr.ph.i505
  %.b2.i513.pre = load i1* @read_error, align 1
  %.b3.i514.pre = load i1* @format_error, align 1
  br label %rs_read_new_strings.exit511

rs_read_new_strings.exit511:                      ; preds = %rs_read_new_strings.exit511.loopexit, %rs_read_char.exit495
  %.b3.i514 = phi i1 [ %.b3.i514.pre, %rs_read_new_strings.exit511.loopexit ], [ %.b3.i498, %rs_read_char.exit495 ]
  %.b2.i513 = phi i1 [ %.b2.i513.pre, %rs_read_new_strings.exit511.loopexit ], [ %.b2.i497, %rs_read_char.exit495 ]
  %370 = bitcast i32* %input.i512 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %370) #8
  store i32 0, i32* %input.i512, align 4, !tbaa !38
  %or.cond.i515 = or i1 %.b2.i513, %.b3.i514
  br i1 %or.cond.i515, label %rs_read_int.exit522, label %371

; <label>:371                                     ; preds = %rs_read_new_strings.exit511
  %372 = call i64 @encread(i8* %370, i64 4, %struct.__sFILE* %inf) #8
  %373 = icmp eq i64 %372, 4
  br i1 %373, label %.rs_read.exit.i520_crit_edge, label %374

.rs_read.exit.i520_crit_edge:                     ; preds = %371
  %.b2.i524.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i520

; <label>:374                                     ; preds = %371
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i520

rs_read.exit.i520:                                ; preds = %374, %.rs_read.exit.i520_crit_edge
  %.b2.i524.pre = phi i1 [ %.b2.i524.pre.pre, %.rs_read.exit.i520_crit_edge ], [ true, %374 ]
  %375 = load i32* %input.i512, align 4, !tbaa !38
  store i32 %375, i32* @n_objs, align 4, !tbaa !38
  %.b3.i525.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit522

rs_read_int.exit522:                              ; preds = %rs_read.exit.i520, %rs_read_new_strings.exit511
  %.b3.i525 = phi i1 [ %.b3.i514, %rs_read_new_strings.exit511 ], [ %.b3.i525.pre, %rs_read.exit.i520 ]
  %.b2.i524 = phi i1 [ %.b2.i513, %rs_read_new_strings.exit511 ], [ %.b2.i524.pre, %rs_read.exit.i520 ]
  call void @llvm.lifetime.end(i64 4, i8* %370) #8
  %376 = bitcast i32* %input.i523 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %376) #8
  store i32 0, i32* %input.i523, align 4, !tbaa !38
  %or.cond.i526 = or i1 %.b2.i524, %.b3.i525
  br i1 %or.cond.i526, label %rs_read_int.exit533, label %377

; <label>:377                                     ; preds = %rs_read_int.exit522
  %378 = call i64 @encread(i8* %376, i64 4, %struct.__sFILE* %inf) #8
  %379 = icmp eq i64 %378, 4
  br i1 %379, label %.rs_read.exit.i531_crit_edge, label %380

.rs_read.exit.i531_crit_edge:                     ; preds = %377
  %.b2.i535.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i531

; <label>:380                                     ; preds = %377
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i531

rs_read.exit.i531:                                ; preds = %380, %.rs_read.exit.i531_crit_edge
  %.b2.i535.pre = phi i1 [ %.b2.i535.pre.pre, %.rs_read.exit.i531_crit_edge ], [ true, %380 ]
  %381 = load i32* %input.i523, align 4, !tbaa !38
  store i32 %381, i32* @ntraps, align 4, !tbaa !38
  %.b3.i536.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit533

rs_read_int.exit533:                              ; preds = %rs_read.exit.i531, %rs_read_int.exit522
  %.b3.i536 = phi i1 [ %.b3.i525, %rs_read_int.exit522 ], [ %.b3.i536.pre, %rs_read.exit.i531 ]
  %.b2.i535 = phi i1 [ %.b2.i524, %rs_read_int.exit522 ], [ %.b2.i535.pre, %rs_read.exit.i531 ]
  call void @llvm.lifetime.end(i64 4, i8* %376) #8
  %382 = bitcast i32* %input.i534 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %382) #8
  store i32 0, i32* %input.i534, align 4, !tbaa !38
  %or.cond.i537 = or i1 %.b2.i535, %.b3.i536
  br i1 %or.cond.i537, label %rs_read_int.exit544, label %383

; <label>:383                                     ; preds = %rs_read_int.exit533
  %384 = call i64 @encread(i8* %382, i64 4, %struct.__sFILE* %inf) #8
  %385 = icmp eq i64 %384, 4
  br i1 %385, label %.rs_read.exit.i542_crit_edge, label %386

.rs_read.exit.i542_crit_edge:                     ; preds = %383
  %.b2.i546.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i542

; <label>:386                                     ; preds = %383
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i542

rs_read.exit.i542:                                ; preds = %386, %.rs_read.exit.i542_crit_edge
  %.b2.i546.pre = phi i1 [ %.b2.i546.pre.pre, %.rs_read.exit.i542_crit_edge ], [ true, %386 ]
  %387 = load i32* %input.i534, align 4, !tbaa !38
  store i32 %387, i32* @hungry_state, align 4, !tbaa !38
  %.b3.i547.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit544

rs_read_int.exit544:                              ; preds = %rs_read.exit.i542, %rs_read_int.exit533
  %.b3.i547 = phi i1 [ %.b3.i536, %rs_read_int.exit533 ], [ %.b3.i547.pre, %rs_read.exit.i542 ]
  %.b2.i546 = phi i1 [ %.b2.i535, %rs_read_int.exit533 ], [ %.b2.i546.pre, %rs_read.exit.i542 ]
  call void @llvm.lifetime.end(i64 4, i8* %382) #8
  %388 = bitcast i32* %input.i545 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %388) #8
  store i32 0, i32* %input.i545, align 4, !tbaa !38
  %or.cond.i548 = or i1 %.b2.i546, %.b3.i547
  br i1 %or.cond.i548, label %rs_read_int.exit555, label %389

; <label>:389                                     ; preds = %rs_read_int.exit544
  %390 = call i64 @encread(i8* %388, i64 4, %struct.__sFILE* %inf) #8
  %391 = icmp eq i64 %390, 4
  br i1 %391, label %.rs_read.exit.i553_crit_edge, label %392

.rs_read.exit.i553_crit_edge:                     ; preds = %389
  %.b2.i557.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i553

; <label>:392                                     ; preds = %389
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i553

rs_read.exit.i553:                                ; preds = %392, %.rs_read.exit.i553_crit_edge
  %.b2.i557.pre = phi i1 [ %.b2.i557.pre.pre, %.rs_read.exit.i553_crit_edge ], [ true, %392 ]
  %393 = load i32* %input.i545, align 4, !tbaa !38
  store i32 %393, i32* @inpack, align 4, !tbaa !38
  %.b3.i558.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit555

rs_read_int.exit555:                              ; preds = %rs_read.exit.i553, %rs_read_int.exit544
  %.b3.i558 = phi i1 [ %.b3.i547, %rs_read_int.exit544 ], [ %.b3.i558.pre, %rs_read.exit.i553 ]
  %.b2.i557 = phi i1 [ %.b2.i546, %rs_read_int.exit544 ], [ %.b2.i557.pre, %rs_read.exit.i553 ]
  call void @llvm.lifetime.end(i64 4, i8* %388) #8
  %394 = bitcast i32* %input.i556 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %394) #8
  store i32 0, i32* %input.i556, align 4, !tbaa !38
  %or.cond.i559 = or i1 %.b2.i557, %.b3.i558
  br i1 %or.cond.i559, label %rs_read_int.exit566, label %395

; <label>:395                                     ; preds = %rs_read_int.exit555
  %396 = call i64 @encread(i8* %394, i64 4, %struct.__sFILE* %inf) #8
  %397 = icmp eq i64 %396, 4
  br i1 %397, label %.rs_read.exit.i564_crit_edge, label %398

.rs_read.exit.i564_crit_edge:                     ; preds = %395
  %.b2.i568.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i564

; <label>:398                                     ; preds = %395
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i564

rs_read.exit.i564:                                ; preds = %398, %.rs_read.exit.i564_crit_edge
  %.b2.i568.pre = phi i1 [ %.b2.i568.pre.pre, %.rs_read.exit.i564_crit_edge ], [ true, %398 ]
  %399 = load i32* %input.i556, align 4, !tbaa !38
  store i32 %399, i32* @inv_type, align 4, !tbaa !38
  %.b3.i569.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit566

rs_read_int.exit566:                              ; preds = %rs_read.exit.i564, %rs_read_int.exit555
  %.b3.i569 = phi i1 [ %.b3.i558, %rs_read_int.exit555 ], [ %.b3.i569.pre, %rs_read.exit.i564 ]
  %.b2.i568 = phi i1 [ %.b2.i557, %rs_read_int.exit555 ], [ %.b2.i568.pre, %rs_read.exit.i564 ]
  call void @llvm.lifetime.end(i64 4, i8* %394) #8
  %400 = bitcast i32* %input.i567 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %400) #8
  store i32 0, i32* %input.i567, align 4, !tbaa !38
  %or.cond.i570 = or i1 %.b2.i568, %.b3.i569
  br i1 %or.cond.i570, label %rs_read_int.exit577, label %401

; <label>:401                                     ; preds = %rs_read_int.exit566
  %402 = call i64 @encread(i8* %400, i64 4, %struct.__sFILE* %inf) #8
  %403 = icmp eq i64 %402, 4
  br i1 %403, label %.rs_read.exit.i575_crit_edge, label %404

.rs_read.exit.i575_crit_edge:                     ; preds = %401
  %.b2.i579.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i575

; <label>:404                                     ; preds = %401
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i575

rs_read.exit.i575:                                ; preds = %404, %.rs_read.exit.i575_crit_edge
  %.b2.i579.pre = phi i1 [ %.b2.i579.pre.pre, %.rs_read.exit.i575_crit_edge ], [ true, %404 ]
  %405 = load i32* %input.i567, align 4, !tbaa !38
  store i32 %405, i32* @level, align 4, !tbaa !38
  %.b3.i580.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit577

rs_read_int.exit577:                              ; preds = %rs_read.exit.i575, %rs_read_int.exit566
  %.b3.i580 = phi i1 [ %.b3.i569, %rs_read_int.exit566 ], [ %.b3.i580.pre, %rs_read.exit.i575 ]
  %.b2.i579 = phi i1 [ %.b2.i568, %rs_read_int.exit566 ], [ %.b2.i579.pre, %rs_read.exit.i575 ]
  call void @llvm.lifetime.end(i64 4, i8* %400) #8
  %406 = bitcast i32* %input.i578 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %406) #8
  store i32 0, i32* %input.i578, align 4, !tbaa !38
  %or.cond.i581 = or i1 %.b2.i579, %.b3.i580
  br i1 %or.cond.i581, label %rs_read_int.exit588, label %407

; <label>:407                                     ; preds = %rs_read_int.exit577
  %408 = call i64 @encread(i8* %406, i64 4, %struct.__sFILE* %inf) #8
  %409 = icmp eq i64 %408, 4
  br i1 %409, label %.rs_read.exit.i586_crit_edge, label %410

.rs_read.exit.i586_crit_edge:                     ; preds = %407
  %.b2.i590.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i586

; <label>:410                                     ; preds = %407
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i586

rs_read.exit.i586:                                ; preds = %410, %.rs_read.exit.i586_crit_edge
  %.b2.i590.pre = phi i1 [ %.b2.i590.pre.pre, %.rs_read.exit.i586_crit_edge ], [ true, %410 ]
  %411 = load i32* %input.i578, align 4, !tbaa !38
  store i32 %411, i32* @max_level, align 4, !tbaa !38
  %.b3.i591.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit588

rs_read_int.exit588:                              ; preds = %rs_read.exit.i586, %rs_read_int.exit577
  %.b3.i591 = phi i1 [ %.b3.i580, %rs_read_int.exit577 ], [ %.b3.i591.pre, %rs_read.exit.i586 ]
  %.b2.i590 = phi i1 [ %.b2.i579, %rs_read_int.exit577 ], [ %.b2.i590.pre, %rs_read.exit.i586 ]
  call void @llvm.lifetime.end(i64 4, i8* %406) #8
  %412 = bitcast i32* %input.i589 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %412) #8
  store i32 0, i32* %input.i589, align 4, !tbaa !38
  %or.cond.i592 = or i1 %.b2.i590, %.b3.i591
  br i1 %or.cond.i592, label %rs_read_int.exit599, label %413

; <label>:413                                     ; preds = %rs_read_int.exit588
  %414 = call i64 @encread(i8* %412, i64 4, %struct.__sFILE* %inf) #8
  %415 = icmp eq i64 %414, 4
  br i1 %415, label %.rs_read.exit.i597_crit_edge, label %416

.rs_read.exit.i597_crit_edge:                     ; preds = %413
  %.b2.i601.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i597

; <label>:416                                     ; preds = %413
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i597

rs_read.exit.i597:                                ; preds = %416, %.rs_read.exit.i597_crit_edge
  %.b2.i601.pre = phi i1 [ %.b2.i601.pre.pre, %.rs_read.exit.i597_crit_edge ], [ true, %416 ]
  %417 = load i32* %input.i589, align 4, !tbaa !38
  store i32 %417, i32* @mpos, align 4, !tbaa !38
  %.b3.i602.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit599

rs_read_int.exit599:                              ; preds = %rs_read.exit.i597, %rs_read_int.exit588
  %.b3.i602 = phi i1 [ %.b3.i591, %rs_read_int.exit588 ], [ %.b3.i602.pre, %rs_read.exit.i597 ]
  %.b2.i601 = phi i1 [ %.b2.i590, %rs_read_int.exit588 ], [ %.b2.i601.pre, %rs_read.exit.i597 ]
  call void @llvm.lifetime.end(i64 4, i8* %412) #8
  %418 = bitcast i32* %input.i600 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %418) #8
  store i32 0, i32* %input.i600, align 4, !tbaa !38
  %or.cond.i603 = or i1 %.b2.i601, %.b3.i602
  br i1 %or.cond.i603, label %rs_read_int.exit610, label %419

; <label>:419                                     ; preds = %rs_read_int.exit599
  %420 = call i64 @encread(i8* %418, i64 4, %struct.__sFILE* %inf) #8
  %421 = icmp eq i64 %420, 4
  br i1 %421, label %rs_read.exit.i608, label %422

; <label>:422                                     ; preds = %419
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i608

rs_read.exit.i608:                                ; preds = %422, %419
  %423 = load i32* %input.i600, align 4, !tbaa !38
  store i32 %423, i32* @no_food, align 4, !tbaa !38
  br label %rs_read_int.exit610

rs_read_int.exit610:                              ; preds = %rs_read.exit.i608, %rs_read_int.exit599, %rs_read_int.exit599.thread
  %424 = phi i8* [ %356, %rs_read_int.exit599.thread ], [ %418, %rs_read_int.exit599 ], [ %418, %rs_read.exit.i608 ]
  call void @llvm.lifetime.end(i64 4, i8* %424) #8
  %425 = call i32 @rs_read_ints(%struct.__sFILE* %inf, i32* getelementptr inbounds ([8 x i32]* @a_class, i64 0, i64 0), i32 8)
  %426 = bitcast i32* %input.i611 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %426) #8
  store i32 0, i32* %input.i611, align 4, !tbaa !38
  %.b2.i612 = load i1* @read_error, align 1
  %.b3.i613 = load i1* @format_error, align 1
  %or.cond.i614 = or i1 %.b2.i612, %.b3.i613
  br i1 %or.cond.i614, label %rs_read_int.exit621, label %427

; <label>:427                                     ; preds = %rs_read_int.exit610
  %428 = call i64 @encread(i8* %426, i64 4, %struct.__sFILE* %inf) #8
  %429 = icmp eq i64 %428, 4
  br i1 %429, label %.rs_read.exit.i619_crit_edge, label %430

.rs_read.exit.i619_crit_edge:                     ; preds = %427
  %.b2.i623.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i619

; <label>:430                                     ; preds = %427
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i619

rs_read.exit.i619:                                ; preds = %430, %.rs_read.exit.i619_crit_edge
  %.b2.i623.pre = phi i1 [ %.b2.i623.pre.pre, %.rs_read.exit.i619_crit_edge ], [ true, %430 ]
  %431 = load i32* %input.i611, align 4, !tbaa !38
  store i32 %431, i32* @count, align 4, !tbaa !38
  %.b3.i624.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit621

rs_read_int.exit621:                              ; preds = %rs_read.exit.i619, %rs_read_int.exit610
  %.b3.i624 = phi i1 [ %.b3.i613, %rs_read_int.exit610 ], [ %.b3.i624.pre, %rs_read.exit.i619 ]
  %.b2.i623 = phi i1 [ %.b2.i612, %rs_read_int.exit610 ], [ %.b2.i623.pre, %rs_read.exit.i619 ]
  call void @llvm.lifetime.end(i64 4, i8* %426) #8
  %432 = bitcast i32* %input.i622 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %432) #8
  store i32 0, i32* %input.i622, align 4, !tbaa !38
  %or.cond.i625 = or i1 %.b2.i623, %.b3.i624
  br i1 %or.cond.i625, label %rs_read_int.exit632, label %433

; <label>:433                                     ; preds = %rs_read_int.exit621
  %434 = call i64 @encread(i8* %432, i64 4, %struct.__sFILE* %inf) #8
  %435 = icmp eq i64 %434, 4
  br i1 %435, label %.rs_read.exit.i630_crit_edge, label %436

.rs_read.exit.i630_crit_edge:                     ; preds = %433
  %.b2.i634.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i630

; <label>:436                                     ; preds = %433
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i630

rs_read.exit.i630:                                ; preds = %436, %.rs_read.exit.i630_crit_edge
  %.b2.i634.pre = phi i1 [ %.b2.i634.pre.pre, %.rs_read.exit.i630_crit_edge ], [ true, %436 ]
  %437 = load i32* %input.i622, align 4, !tbaa !38
  store i32 %437, i32* @food_left, align 4, !tbaa !38
  %.b3.i635.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit632

rs_read_int.exit632:                              ; preds = %rs_read.exit.i630, %rs_read_int.exit621
  %.b3.i635 = phi i1 [ %.b3.i624, %rs_read_int.exit621 ], [ %.b3.i635.pre, %rs_read.exit.i630 ]
  %.b2.i634 = phi i1 [ %.b2.i623, %rs_read_int.exit621 ], [ %.b2.i634.pre, %rs_read.exit.i630 ]
  call void @llvm.lifetime.end(i64 4, i8* %432) #8
  %438 = bitcast i32* %input.i633 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %438) #8
  store i32 0, i32* %input.i633, align 4, !tbaa !38
  %or.cond.i636 = or i1 %.b2.i634, %.b3.i635
  br i1 %or.cond.i636, label %rs_read_int.exit643, label %439

; <label>:439                                     ; preds = %rs_read_int.exit632
  %440 = call i64 @encread(i8* %438, i64 4, %struct.__sFILE* %inf) #8
  %441 = icmp eq i64 %440, 4
  br i1 %441, label %.rs_read.exit.i641_crit_edge, label %442

.rs_read.exit.i641_crit_edge:                     ; preds = %439
  %.b2.i645.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i641

; <label>:442                                     ; preds = %439
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i641

rs_read.exit.i641:                                ; preds = %442, %.rs_read.exit.i641_crit_edge
  %.b2.i645.pre = phi i1 [ %.b2.i645.pre.pre, %.rs_read.exit.i641_crit_edge ], [ true, %442 ]
  %443 = load i32* %input.i633, align 4, !tbaa !38
  store i32 %443, i32* @lastscore, align 4, !tbaa !38
  %.b3.i646.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit643

rs_read_int.exit643:                              ; preds = %rs_read.exit.i641, %rs_read_int.exit632
  %.b3.i646 = phi i1 [ %.b3.i635, %rs_read_int.exit632 ], [ %.b3.i646.pre, %rs_read.exit.i641 ]
  %.b2.i645 = phi i1 [ %.b2.i634, %rs_read_int.exit632 ], [ %.b2.i645.pre, %rs_read.exit.i641 ]
  call void @llvm.lifetime.end(i64 4, i8* %438) #8
  %444 = bitcast i32* %input.i644 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %444) #8
  store i32 0, i32* %input.i644, align 4, !tbaa !38
  %or.cond.i647 = or i1 %.b2.i645, %.b3.i646
  br i1 %or.cond.i647, label %rs_read_int.exit654, label %445

; <label>:445                                     ; preds = %rs_read_int.exit643
  %446 = call i64 @encread(i8* %444, i64 4, %struct.__sFILE* %inf) #8
  %447 = icmp eq i64 %446, 4
  br i1 %447, label %.rs_read.exit.i652_crit_edge, label %448

.rs_read.exit.i652_crit_edge:                     ; preds = %445
  %.b2.i656.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i652

; <label>:448                                     ; preds = %445
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i652

rs_read.exit.i652:                                ; preds = %448, %.rs_read.exit.i652_crit_edge
  %.b2.i656.pre = phi i1 [ %.b2.i656.pre.pre, %.rs_read.exit.i652_crit_edge ], [ true, %448 ]
  %449 = load i32* %input.i644, align 4, !tbaa !38
  store i32 %449, i32* @no_command, align 4, !tbaa !38
  %.b3.i657.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit654

rs_read_int.exit654:                              ; preds = %rs_read.exit.i652, %rs_read_int.exit643
  %.b3.i657 = phi i1 [ %.b3.i646, %rs_read_int.exit643 ], [ %.b3.i657.pre, %rs_read.exit.i652 ]
  %.b2.i656 = phi i1 [ %.b2.i645, %rs_read_int.exit643 ], [ %.b2.i656.pre, %rs_read.exit.i652 ]
  call void @llvm.lifetime.end(i64 4, i8* %444) #8
  %450 = bitcast i32* %input.i655 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %450) #8
  store i32 0, i32* %input.i655, align 4, !tbaa !38
  %or.cond.i658 = or i1 %.b2.i656, %.b3.i657
  br i1 %or.cond.i658, label %rs_read_int.exit665, label %451

; <label>:451                                     ; preds = %rs_read_int.exit654
  %452 = call i64 @encread(i8* %450, i64 4, %struct.__sFILE* %inf) #8
  %453 = icmp eq i64 %452, 4
  br i1 %453, label %.rs_read.exit.i663_crit_edge, label %454

.rs_read.exit.i663_crit_edge:                     ; preds = %451
  %.b2.i667.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i663

; <label>:454                                     ; preds = %451
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i663

rs_read.exit.i663:                                ; preds = %454, %.rs_read.exit.i663_crit_edge
  %.b2.i667.pre = phi i1 [ %.b2.i667.pre.pre, %.rs_read.exit.i663_crit_edge ], [ true, %454 ]
  %455 = load i32* %input.i655, align 4, !tbaa !38
  store i32 %455, i32* @no_move, align 4, !tbaa !38
  %.b3.i668.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit665

rs_read_int.exit665:                              ; preds = %rs_read.exit.i663, %rs_read_int.exit654
  %.b3.i668 = phi i1 [ %.b3.i657, %rs_read_int.exit654 ], [ %.b3.i668.pre, %rs_read.exit.i663 ]
  %.b2.i667 = phi i1 [ %.b2.i656, %rs_read_int.exit654 ], [ %.b2.i667.pre, %rs_read.exit.i663 ]
  call void @llvm.lifetime.end(i64 4, i8* %450) #8
  %456 = bitcast i32* %input.i666 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %456) #8
  store i32 0, i32* %input.i666, align 4, !tbaa !38
  %or.cond.i669 = or i1 %.b2.i667, %.b3.i668
  br i1 %or.cond.i669, label %rs_read_int.exit676, label %457

; <label>:457                                     ; preds = %rs_read_int.exit665
  %458 = call i64 @encread(i8* %456, i64 4, %struct.__sFILE* %inf) #8
  %459 = icmp eq i64 %458, 4
  br i1 %459, label %.rs_read.exit.i674_crit_edge, label %460

.rs_read.exit.i674_crit_edge:                     ; preds = %457
  %.b2.i678.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i674

; <label>:460                                     ; preds = %457
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i674

rs_read.exit.i674:                                ; preds = %460, %.rs_read.exit.i674_crit_edge
  %.b2.i678.pre = phi i1 [ %.b2.i678.pre.pre, %.rs_read.exit.i674_crit_edge ], [ true, %460 ]
  %461 = load i32* %input.i666, align 4, !tbaa !38
  store i32 %461, i32* @purse, align 4, !tbaa !38
  %.b3.i679.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit676

rs_read_int.exit676:                              ; preds = %rs_read.exit.i674, %rs_read_int.exit665
  %.b3.i679 = phi i1 [ %.b3.i668, %rs_read_int.exit665 ], [ %.b3.i679.pre, %rs_read.exit.i674 ]
  %.b2.i678 = phi i1 [ %.b2.i667, %rs_read_int.exit665 ], [ %.b2.i678.pre, %rs_read.exit.i674 ]
  call void @llvm.lifetime.end(i64 4, i8* %456) #8
  %462 = bitcast i32* %input.i677 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %462) #8
  store i32 0, i32* %input.i677, align 4, !tbaa !38
  %or.cond.i680 = or i1 %.b2.i678, %.b3.i679
  br i1 %or.cond.i680, label %rs_read_int.exit687, label %463

; <label>:463                                     ; preds = %rs_read_int.exit676
  %464 = call i64 @encread(i8* %462, i64 4, %struct.__sFILE* %inf) #8
  %465 = icmp eq i64 %464, 4
  br i1 %465, label %.rs_read.exit.i685_crit_edge, label %466

.rs_read.exit.i685_crit_edge:                     ; preds = %463
  %.b2.i689.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i685

; <label>:466                                     ; preds = %463
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i685

rs_read.exit.i685:                                ; preds = %466, %.rs_read.exit.i685_crit_edge
  %.b2.i689.pre = phi i1 [ %.b2.i689.pre.pre, %.rs_read.exit.i685_crit_edge ], [ true, %466 ]
  %467 = load i32* %input.i677, align 4, !tbaa !38
  store i32 %467, i32* @quiet, align 4, !tbaa !38
  %.b3.i690.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit687

rs_read_int.exit687:                              ; preds = %rs_read.exit.i685, %rs_read_int.exit676
  %.b3.i690 = phi i1 [ %.b3.i679, %rs_read_int.exit676 ], [ %.b3.i690.pre, %rs_read.exit.i685 ]
  %.b2.i689 = phi i1 [ %.b2.i678, %rs_read_int.exit676 ], [ %.b2.i689.pre, %rs_read.exit.i685 ]
  call void @llvm.lifetime.end(i64 4, i8* %462) #8
  %468 = bitcast i32* %input.i688 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %468) #8
  store i32 0, i32* %input.i688, align 4, !tbaa !38
  %or.cond.i691 = or i1 %.b2.i689, %.b3.i690
  br i1 %or.cond.i691, label %rs_read_int.exit698, label %469

; <label>:469                                     ; preds = %rs_read_int.exit687
  %470 = call i64 @encread(i8* %468, i64 4, %struct.__sFILE* %inf) #8
  %471 = icmp eq i64 %470, 4
  br i1 %471, label %.rs_read.exit.i696_crit_edge, label %472

.rs_read.exit.i696_crit_edge:                     ; preds = %469
  %.b2.i700.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i696

; <label>:472                                     ; preds = %469
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i696

rs_read.exit.i696:                                ; preds = %472, %.rs_read.exit.i696_crit_edge
  %.b2.i700.pre = phi i1 [ %.b2.i700.pre.pre, %.rs_read.exit.i696_crit_edge ], [ true, %472 ]
  %473 = load i32* %input.i688, align 4, !tbaa !38
  store i32 %473, i32* @vf_hit, align 4, !tbaa !38
  %.b3.i701.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit698

rs_read_int.exit698:                              ; preds = %rs_read.exit.i696, %rs_read_int.exit687
  %.b3.i701 = phi i1 [ %.b3.i690, %rs_read_int.exit687 ], [ %.b3.i701.pre, %rs_read.exit.i696 ]
  %.b2.i700 = phi i1 [ %.b2.i689, %rs_read_int.exit687 ], [ %.b2.i700.pre, %rs_read.exit.i696 ]
  call void @llvm.lifetime.end(i64 4, i8* %468) #8
  %474 = bitcast i32* %input.i699 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %474) #8
  store i32 0, i32* %input.i699, align 4, !tbaa !38
  %or.cond.i702 = or i1 %.b2.i700, %.b3.i701
  br i1 %or.cond.i702, label %rs_read_int.exit709, label %475

; <label>:475                                     ; preds = %rs_read_int.exit698
  %476 = call i64 @encread(i8* %474, i64 4, %struct.__sFILE* %inf) #8
  %477 = icmp eq i64 %476, 4
  br i1 %477, label %.rs_read.exit.i707_crit_edge, label %478

.rs_read.exit.i707_crit_edge:                     ; preds = %475
  %.b2.i711.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i707

; <label>:478                                     ; preds = %475
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i707

rs_read.exit.i707:                                ; preds = %478, %.rs_read.exit.i707_crit_edge
  %.b2.i711.pre = phi i1 [ %.b2.i711.pre.pre, %.rs_read.exit.i707_crit_edge ], [ true, %478 ]
  %479 = load i32* %input.i699, align 4, !tbaa !38
  store i32 %479, i32* @dnum, align 4, !tbaa !38
  %.b3.i712.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit709

rs_read_int.exit709:                              ; preds = %rs_read.exit.i707, %rs_read_int.exit698
  %.b3.i712 = phi i1 [ %.b3.i701, %rs_read_int.exit698 ], [ %.b3.i712.pre, %rs_read.exit.i707 ]
  %.b2.i711 = phi i1 [ %.b2.i700, %rs_read_int.exit698 ], [ %.b2.i711.pre, %rs_read.exit.i707 ]
  call void @llvm.lifetime.end(i64 4, i8* %474) #8
  %480 = bitcast i32* %input.i710 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %480) #8
  store i32 0, i32* %input.i710, align 4, !tbaa !38
  %or.cond.i713 = or i1 %.b2.i711, %.b3.i712
  br i1 %or.cond.i713, label %rs_read_int.exit720, label %481

; <label>:481                                     ; preds = %rs_read_int.exit709
  %482 = call i64 @encread(i8* %480, i64 4, %struct.__sFILE* %inf) #8
  %483 = icmp eq i64 %482, 4
  br i1 %483, label %rs_read.exit.i718, label %484

; <label>:484                                     ; preds = %481
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i718

rs_read.exit.i718:                                ; preds = %484, %481
  %485 = load i32* %input.i710, align 4, !tbaa !38
  store i32 %485, i32* @seed, align 4, !tbaa !38
  br label %rs_read_int.exit720

rs_read_int.exit720:                              ; preds = %rs_read.exit.i718, %rs_read_int.exit709
  call void @llvm.lifetime.end(i64 4, i8* %480) #8
  %486 = call i32 @rs_read_ints(%struct.__sFILE* %inf, i32* getelementptr inbounds ([21 x i32]* @e_levels, i64 0, i64 0), i32 21)
  %.b3.i722 = load i1* @read_error, align 1
  %.b4.i723 = load i1* @format_error, align 1
  %or.cond.i724 = or i1 %.b3.i722, %.b4.i723
  br i1 %or.cond.i724, label %rs_read_coord.exit, label %487

; <label>:487                                     ; preds = %rs_read_int.exit720
  %488 = bitcast i32* %input.i.i721 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %488) #8
  store i32 0, i32* %input.i.i721, align 4, !tbaa !38
  %489 = call i64 @encread(i8* %488, i64 4, %struct.__sFILE* %inf) #8
  %490 = icmp eq i64 %489, 4
  br i1 %490, label %.rs_read.exit.i_crit_edge.i, label %491

.rs_read.exit.i_crit_edge.i:                      ; preds = %487
  %.b2.i8.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read_int.exit.i725

; <label>:491                                     ; preds = %487
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i725

rs_read_int.exit.i725:                            ; preds = %491, %.rs_read.exit.i_crit_edge.i
  %.b2.i8.pre.i = phi i1 [ %.b2.i8.pre.pre.i, %.rs_read.exit.i_crit_edge.i ], [ true, %491 ]
  %492 = load i32* %input.i.i721, align 4, !tbaa !38
  %.b3.i9.pre.i = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %488) #8
  %493 = bitcast i32* %input.i7.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %493) #8
  store i32 0, i32* %input.i7.i, align 4, !tbaa !38
  %or.cond.i10.i = or i1 %.b2.i8.pre.i, %.b3.i9.pre.i
  br i1 %or.cond.i10.i, label %rs_read_int.exit17.i, label %494

; <label>:494                                     ; preds = %rs_read_int.exit.i725
  %495 = call i64 @encread(i8* %493, i64 4, %struct.__sFILE* %inf) #8
  %496 = icmp eq i64 %495, 4
  br i1 %496, label %.rs_read.exit.i15_crit_edge.i, label %497

.rs_read.exit.i15_crit_edge.i:                    ; preds = %494
  %.b2.pre.pre.i = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i

; <label>:497                                     ; preds = %494
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i

rs_read.exit.i15.i:                               ; preds = %497, %.rs_read.exit.i15_crit_edge.i
  %.b2.pre.i = phi i1 [ %.b2.pre.pre.i, %.rs_read.exit.i15_crit_edge.i ], [ true, %497 ]
  %498 = load i32* %input.i7.i, align 4, !tbaa !38
  %.b6.pre.i = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i

rs_read_int.exit17.i:                             ; preds = %rs_read.exit.i15.i, %rs_read_int.exit.i725
  %.b.i726 = phi i1 [ %.b2.pre.i, %rs_read.exit.i15.i ], [ %.b2.i8.pre.i, %rs_read_int.exit.i725 ]
  %.b5.i = phi i1 [ %.b6.pre.i, %rs_read.exit.i15.i ], [ %.b3.i9.pre.i, %rs_read_int.exit.i725 ]
  %499 = phi i32 [ %498, %rs_read.exit.i15.i ], [ undef, %rs_read_int.exit.i725 ]
  call void @llvm.lifetime.end(i64 4, i8* %493) #8
  %..b2.i = or i1 %.b5.i, %.b.i726
  br i1 %..b2.i, label %rs_read_coord.exit, label %500

; <label>:500                                     ; preds = %rs_read_int.exit17.i
  store i32 %492, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  store i32 %499, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  br label %rs_read_coord.exit

rs_read_coord.exit:                               ; preds = %500, %rs_read_int.exit17.i, %rs_read_int.exit720
  %.b4.i730 = phi i1 [ %.b4.i723, %rs_read_int.exit720 ], [ %.b5.i, %rs_read_int.exit17.i ], [ false, %500 ]
  %.b3.i729 = phi i1 [ %.b3.i722, %rs_read_int.exit720 ], [ %.b.i726, %rs_read_int.exit17.i ], [ false, %500 ]
  %or.cond.i731 = or i1 %.b3.i729, %.b4.i730
  br i1 %or.cond.i731, label %rs_read_coord.exit748, label %501

; <label>:501                                     ; preds = %rs_read_coord.exit
  %502 = bitcast i32* %input.i.i728 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %502) #8
  store i32 0, i32* %input.i.i728, align 4, !tbaa !38
  %503 = call i64 @encread(i8* %502, i64 4, %struct.__sFILE* %inf) #8
  %504 = icmp eq i64 %503, 4
  br i1 %504, label %.rs_read.exit.i_crit_edge.i733, label %505

.rs_read.exit.i_crit_edge.i733:                   ; preds = %501
  %.b2.i8.pre.pre.i732 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i737

; <label>:505                                     ; preds = %501
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i737

rs_read_int.exit.i737:                            ; preds = %505, %.rs_read.exit.i_crit_edge.i733
  %.b2.i8.pre.i734 = phi i1 [ %.b2.i8.pre.pre.i732, %.rs_read.exit.i_crit_edge.i733 ], [ true, %505 ]
  %506 = load i32* %input.i.i728, align 4, !tbaa !38
  %.b3.i9.pre.i735 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %502) #8
  %507 = bitcast i32* %input.i7.i727 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %507) #8
  store i32 0, i32* %input.i7.i727, align 4, !tbaa !38
  %or.cond.i10.i736 = or i1 %.b2.i8.pre.i734, %.b3.i9.pre.i735
  br i1 %or.cond.i10.i736, label %rs_read_int.exit17.i746, label %508

; <label>:508                                     ; preds = %rs_read_int.exit.i737
  %509 = call i64 @encread(i8* %507, i64 4, %struct.__sFILE* %inf) #8
  %510 = icmp eq i64 %509, 4
  br i1 %510, label %.rs_read.exit.i15_crit_edge.i739, label %511

.rs_read.exit.i15_crit_edge.i739:                 ; preds = %508
  %.b2.pre.pre.i738 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i742

; <label>:511                                     ; preds = %508
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i742

rs_read.exit.i15.i742:                            ; preds = %511, %.rs_read.exit.i15_crit_edge.i739
  %.b2.pre.i740 = phi i1 [ %.b2.pre.pre.i738, %.rs_read.exit.i15_crit_edge.i739 ], [ true, %511 ]
  %512 = load i32* %input.i7.i727, align 4, !tbaa !38
  %.b6.pre.i741 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i746

rs_read_int.exit17.i746:                          ; preds = %rs_read.exit.i15.i742, %rs_read_int.exit.i737
  %.b.i743 = phi i1 [ %.b2.pre.i740, %rs_read.exit.i15.i742 ], [ %.b2.i8.pre.i734, %rs_read_int.exit.i737 ]
  %.b5.i744 = phi i1 [ %.b6.pre.i741, %rs_read.exit.i15.i742 ], [ %.b3.i9.pre.i735, %rs_read_int.exit.i737 ]
  %513 = phi i32 [ %512, %rs_read.exit.i15.i742 ], [ undef, %rs_read_int.exit.i737 ]
  call void @llvm.lifetime.end(i64 4, i8* %507) #8
  %..b2.i745 = or i1 %.b5.i744, %.b.i743
  br i1 %..b2.i745, label %rs_read_coord.exit748, label %514

; <label>:514                                     ; preds = %rs_read_int.exit17.i746
  store i32 %506, i32* getelementptr inbounds (%struct.coord* @oldpos, i64 0, i32 0), align 4, !tbaa !21
  store i32 %513, i32* getelementptr inbounds (%struct.coord* @oldpos, i64 0, i32 1), align 4, !tbaa !20
  br label %rs_read_coord.exit748

rs_read_coord.exit748:                            ; preds = %514, %rs_read_int.exit17.i746, %rs_read_coord.exit
  %.b4.i752 = phi i1 [ %.b4.i730, %rs_read_coord.exit ], [ %.b5.i744, %rs_read_int.exit17.i746 ], [ false, %514 ]
  %.b3.i751 = phi i1 [ %.b3.i729, %rs_read_coord.exit ], [ %.b.i743, %rs_read_int.exit17.i746 ], [ false, %514 ]
  %or.cond.i753 = or i1 %.b3.i751, %.b4.i752
  br i1 %or.cond.i753, label %rs_read_coord.exit770, label %515

; <label>:515                                     ; preds = %rs_read_coord.exit748
  %516 = bitcast i32* %input.i.i750 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %516) #8
  store i32 0, i32* %input.i.i750, align 4, !tbaa !38
  %517 = call i64 @encread(i8* %516, i64 4, %struct.__sFILE* %inf) #8
  %518 = icmp eq i64 %517, 4
  br i1 %518, label %.rs_read.exit.i_crit_edge.i755, label %519

.rs_read.exit.i_crit_edge.i755:                   ; preds = %515
  %.b2.i8.pre.pre.i754 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i759

; <label>:519                                     ; preds = %515
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i759

rs_read_int.exit.i759:                            ; preds = %519, %.rs_read.exit.i_crit_edge.i755
  %.b2.i8.pre.i756 = phi i1 [ %.b2.i8.pre.pre.i754, %.rs_read.exit.i_crit_edge.i755 ], [ true, %519 ]
  %520 = load i32* %input.i.i750, align 4, !tbaa !38
  %.b3.i9.pre.i757 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %516) #8
  %521 = bitcast i32* %input.i7.i749 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %521) #8
  store i32 0, i32* %input.i7.i749, align 4, !tbaa !38
  %or.cond.i10.i758 = or i1 %.b2.i8.pre.i756, %.b3.i9.pre.i757
  br i1 %or.cond.i10.i758, label %rs_read_int.exit17.i768, label %522

; <label>:522                                     ; preds = %rs_read_int.exit.i759
  %523 = call i64 @encread(i8* %521, i64 4, %struct.__sFILE* %inf) #8
  %524 = icmp eq i64 %523, 4
  br i1 %524, label %.rs_read.exit.i15_crit_edge.i761, label %525

.rs_read.exit.i15_crit_edge.i761:                 ; preds = %522
  %.b2.pre.pre.i760 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i764

; <label>:525                                     ; preds = %522
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i764

rs_read.exit.i15.i764:                            ; preds = %525, %.rs_read.exit.i15_crit_edge.i761
  %.b2.pre.i762 = phi i1 [ %.b2.pre.pre.i760, %.rs_read.exit.i15_crit_edge.i761 ], [ true, %525 ]
  %526 = load i32* %input.i7.i749, align 4, !tbaa !38
  %.b6.pre.i763 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i768

rs_read_int.exit17.i768:                          ; preds = %rs_read.exit.i15.i764, %rs_read_int.exit.i759
  %.b.i765 = phi i1 [ %.b2.pre.i762, %rs_read.exit.i15.i764 ], [ %.b2.i8.pre.i756, %rs_read_int.exit.i759 ]
  %.b5.i766 = phi i1 [ %.b6.pre.i763, %rs_read.exit.i15.i764 ], [ %.b3.i9.pre.i757, %rs_read_int.exit.i759 ]
  %527 = phi i32 [ %526, %rs_read.exit.i15.i764 ], [ undef, %rs_read_int.exit.i759 ]
  call void @llvm.lifetime.end(i64 4, i8* %521) #8
  %..b2.i767 = or i1 %.b5.i766, %.b.i765
  br i1 %..b2.i767, label %rs_read_coord.exit770, label %528

; <label>:528                                     ; preds = %rs_read_int.exit17.i768
  store i32 %520, i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 0), align 4, !tbaa !21
  store i32 %527, i32* getelementptr inbounds (%struct.coord* @stairs, i64 0, i32 1), align 4, !tbaa !20
  br label %rs_read_coord.exit770

rs_read_coord.exit770:                            ; preds = %528, %rs_read_int.exit17.i768, %rs_read_coord.exit748
  %529 = call i32 @rs_read_thing(%struct.__sFILE* %inf, %union.thing* @player)
  %530 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %.b2.i772 = load i1* @read_error, align 1
  %.b3.i773 = load i1* @format_error, align 1
  %or.cond.i774 = or i1 %.b2.i772, %.b3.i773
  br i1 %or.cond.i774, label %rs_read_object_reference.exit, label %531

; <label>:531                                     ; preds = %rs_read_coord.exit770
  %532 = bitcast i32* %input.i.i771 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %532) #8
  store i32 0, i32* %input.i.i771, align 4, !tbaa !38
  %533 = call i64 @encread(i8* %532, i64 4, %struct.__sFILE* %inf) #8
  %534 = icmp eq i64 %533, 4
  br i1 %534, label %rs_read_int.exit.i775, label %535

; <label>:535                                     ; preds = %531
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i775

rs_read_int.exit.i775:                            ; preds = %535, %531
  %536 = load i32* %input.i.i771, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %532) #8
  %537 = icmp eq %union.thing* %530, null
  br i1 %537, label %get_list_item.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %539, %rs_read_int.exit.i775
  %count.04.i.i = phi i32 [ %540, %539 ], [ 0, %rs_read_int.exit.i775 ]
  %.013.i.i = phi %union.thing* [ %542, %539 ], [ %530, %rs_read_int.exit.i775 ]
  %538 = icmp eq i32 %count.04.i.i, %536
  br i1 %538, label %get_list_item.exit.i, label %539

; <label>:539                                     ; preds = %.lr.ph.i.i
  %540 = add nsw i32 %count.04.i.i, 1
  %541 = getelementptr inbounds %union.thing* %.013.i.i, i64 0, i32 0, i32 0
  %542 = load %union.thing** %541, align 8, !tbaa !14
  %543 = icmp eq %union.thing* %542, null
  br i1 %543, label %get_list_item.exit.i, label %.lr.ph.i.i

get_list_item.exit.i:                             ; preds = %539, %.lr.ph.i.i, %rs_read_int.exit.i775
  %.0.i.i = phi %union.thing* [ null, %rs_read_int.exit.i775 ], [ null, %539 ], [ %.013.i.i, %.lr.ph.i.i ]
  store %union.thing* %.0.i.i, %union.thing** @cur_armor, align 8, !tbaa !1
  %.pr = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %.b2.i781.pre = load i1* @read_error, align 1
  %.b3.i782.pre = load i1* @format_error, align 1
  br label %rs_read_object_reference.exit

rs_read_object_reference.exit:                    ; preds = %get_list_item.exit.i, %rs_read_coord.exit770
  %.b3.i782 = phi i1 [ %.b3.i773, %rs_read_coord.exit770 ], [ %.b3.i782.pre, %get_list_item.exit.i ]
  %.b2.i781 = phi i1 [ %.b2.i772, %rs_read_coord.exit770 ], [ %.b2.i781.pre, %get_list_item.exit.i ]
  %544 = phi %union.thing* [ %530, %rs_read_coord.exit770 ], [ %.pr, %get_list_item.exit.i ]
  %or.cond.i783 = or i1 %.b2.i781, %.b3.i782
  br i1 %or.cond.i783, label %rs_read_object_reference.exit794, label %545

; <label>:545                                     ; preds = %rs_read_object_reference.exit
  %546 = bitcast i32* %input.i.i780 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %546) #8
  store i32 0, i32* %input.i.i780, align 4, !tbaa !38
  %547 = call i64 @encread(i8* %546, i64 4, %struct.__sFILE* %inf) #8
  %548 = icmp eq i64 %547, 4
  br i1 %548, label %rs_read_int.exit.i784, label %549

; <label>:549                                     ; preds = %545
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i784

rs_read_int.exit.i784:                            ; preds = %549, %545
  %550 = load i32* %input.i.i780, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %546) #8
  %551 = icmp eq %union.thing* %544, null
  br i1 %551, label %get_list_item.exit.i792, label %.lr.ph.i.i787

.lr.ph.i.i787:                                    ; preds = %553, %rs_read_int.exit.i784
  %count.04.i.i785 = phi i32 [ %554, %553 ], [ 0, %rs_read_int.exit.i784 ]
  %.013.i.i786 = phi %union.thing* [ %556, %553 ], [ %544, %rs_read_int.exit.i784 ]
  %552 = icmp eq i32 %count.04.i.i785, %550
  br i1 %552, label %get_list_item.exit.i792, label %553

; <label>:553                                     ; preds = %.lr.ph.i.i787
  %554 = add nsw i32 %count.04.i.i785, 1
  %555 = getelementptr inbounds %union.thing* %.013.i.i786, i64 0, i32 0, i32 0
  %556 = load %union.thing** %555, align 8, !tbaa !14
  %557 = icmp eq %union.thing* %556, null
  br i1 %557, label %get_list_item.exit.i792, label %.lr.ph.i.i787

get_list_item.exit.i792:                          ; preds = %553, %.lr.ph.i.i787, %rs_read_int.exit.i784
  %.0.i.i788 = phi %union.thing* [ null, %rs_read_int.exit.i784 ], [ null, %553 ], [ %.013.i.i786, %.lr.ph.i.i787 ]
  store %union.thing* %.0.i.i788, %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %.pre = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %.b2.i796.pre = load i1* @read_error, align 1
  %.b3.i797.pre = load i1* @format_error, align 1
  br label %rs_read_object_reference.exit794

rs_read_object_reference.exit794:                 ; preds = %get_list_item.exit.i792, %rs_read_object_reference.exit
  %.b3.i797 = phi i1 [ %.b3.i782, %rs_read_object_reference.exit ], [ %.b3.i797.pre, %get_list_item.exit.i792 ]
  %.b2.i796 = phi i1 [ %.b2.i781, %rs_read_object_reference.exit ], [ %.b2.i796.pre, %get_list_item.exit.i792 ]
  %558 = phi %union.thing* [ %544, %rs_read_object_reference.exit ], [ %.pre, %get_list_item.exit.i792 ]
  %or.cond.i798 = or i1 %.b2.i796, %.b3.i797
  br i1 %or.cond.i798, label %rs_read_object_reference.exit809, label %559

; <label>:559                                     ; preds = %rs_read_object_reference.exit794
  %560 = bitcast i32* %input.i.i795 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %560) #8
  store i32 0, i32* %input.i.i795, align 4, !tbaa !38
  %561 = call i64 @encread(i8* %560, i64 4, %struct.__sFILE* %inf) #8
  %562 = icmp eq i64 %561, 4
  br i1 %562, label %rs_read_int.exit.i799, label %563

; <label>:563                                     ; preds = %559
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i799

rs_read_int.exit.i799:                            ; preds = %563, %559
  %564 = load i32* %input.i.i795, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %560) #8
  %565 = icmp eq %union.thing* %558, null
  br i1 %565, label %get_list_item.exit.i807, label %.lr.ph.i.i802

.lr.ph.i.i802:                                    ; preds = %567, %rs_read_int.exit.i799
  %count.04.i.i800 = phi i32 [ %568, %567 ], [ 0, %rs_read_int.exit.i799 ]
  %.013.i.i801 = phi %union.thing* [ %570, %567 ], [ %558, %rs_read_int.exit.i799 ]
  %566 = icmp eq i32 %count.04.i.i800, %564
  br i1 %566, label %get_list_item.exit.i807, label %567

; <label>:567                                     ; preds = %.lr.ph.i.i802
  %568 = add nsw i32 %count.04.i.i800, 1
  %569 = getelementptr inbounds %union.thing* %.013.i.i801, i64 0, i32 0, i32 0
  %570 = load %union.thing** %569, align 8, !tbaa !14
  %571 = icmp eq %union.thing* %570, null
  br i1 %571, label %get_list_item.exit.i807, label %.lr.ph.i.i802

get_list_item.exit.i807:                          ; preds = %567, %.lr.ph.i.i802, %rs_read_int.exit.i799
  %.0.i.i803 = phi %union.thing* [ null, %rs_read_int.exit.i799 ], [ null, %567 ], [ %.013.i.i801, %.lr.ph.i.i802 ]
  store %union.thing* %.0.i.i803, %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %.pr954 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %.b2.i811.pre = load i1* @read_error, align 1
  %.b3.i812.pre = load i1* @format_error, align 1
  br label %rs_read_object_reference.exit809

rs_read_object_reference.exit809:                 ; preds = %get_list_item.exit.i807, %rs_read_object_reference.exit794
  %.b3.i812 = phi i1 [ %.b3.i797, %rs_read_object_reference.exit794 ], [ %.b3.i812.pre, %get_list_item.exit.i807 ]
  %.b2.i811 = phi i1 [ %.b2.i796, %rs_read_object_reference.exit794 ], [ %.b2.i811.pre, %get_list_item.exit.i807 ]
  %572 = phi %union.thing* [ %558, %rs_read_object_reference.exit794 ], [ %.pr954, %get_list_item.exit.i807 ]
  %or.cond.i813 = or i1 %.b2.i811, %.b3.i812
  br i1 %or.cond.i813, label %rs_read_object_reference.exit824, label %573

; <label>:573                                     ; preds = %rs_read_object_reference.exit809
  %574 = bitcast i32* %input.i.i810 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %574) #8
  store i32 0, i32* %input.i.i810, align 4, !tbaa !38
  %575 = call i64 @encread(i8* %574, i64 4, %struct.__sFILE* %inf) #8
  %576 = icmp eq i64 %575, 4
  br i1 %576, label %rs_read_int.exit.i814, label %577

; <label>:577                                     ; preds = %573
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i814

rs_read_int.exit.i814:                            ; preds = %577, %573
  %578 = load i32* %input.i.i810, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %574) #8
  %579 = icmp eq %union.thing* %572, null
  br i1 %579, label %get_list_item.exit.i822, label %.lr.ph.i.i817

.lr.ph.i.i817:                                    ; preds = %581, %rs_read_int.exit.i814
  %count.04.i.i815 = phi i32 [ %582, %581 ], [ 0, %rs_read_int.exit.i814 ]
  %.013.i.i816 = phi %union.thing* [ %584, %581 ], [ %572, %rs_read_int.exit.i814 ]
  %580 = icmp eq i32 %count.04.i.i815, %578
  br i1 %580, label %get_list_item.exit.i822, label %581

; <label>:581                                     ; preds = %.lr.ph.i.i817
  %582 = add nsw i32 %count.04.i.i815, 1
  %583 = getelementptr inbounds %union.thing* %.013.i.i816, i64 0, i32 0, i32 0
  %584 = load %union.thing** %583, align 8, !tbaa !14
  %585 = icmp eq %union.thing* %584, null
  br i1 %585, label %get_list_item.exit.i822, label %.lr.ph.i.i817

get_list_item.exit.i822:                          ; preds = %581, %.lr.ph.i.i817, %rs_read_int.exit.i814
  %.0.i.i818 = phi %union.thing* [ null, %rs_read_int.exit.i814 ], [ null, %581 ], [ %.013.i.i816, %.lr.ph.i.i817 ]
  store %union.thing* %.0.i.i818, %union.thing** @cur_weapon, align 8, !tbaa !1
  %.pre1075 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %.b2.i826.pre = load i1* @read_error, align 1
  %.b3.i827.pre = load i1* @format_error, align 1
  br label %rs_read_object_reference.exit824

rs_read_object_reference.exit824:                 ; preds = %get_list_item.exit.i822, %rs_read_object_reference.exit809
  %.b3.i827 = phi i1 [ %.b3.i812, %rs_read_object_reference.exit809 ], [ %.b3.i827.pre, %get_list_item.exit.i822 ]
  %.b2.i826 = phi i1 [ %.b2.i811, %rs_read_object_reference.exit809 ], [ %.b2.i826.pre, %get_list_item.exit.i822 ]
  %586 = phi %union.thing* [ %572, %rs_read_object_reference.exit809 ], [ %.pre1075, %get_list_item.exit.i822 ]
  %or.cond.i828 = or i1 %.b2.i826, %.b3.i827
  br i1 %or.cond.i828, label %rs_read_object_reference.exit839, label %587

; <label>:587                                     ; preds = %rs_read_object_reference.exit824
  %588 = bitcast i32* %input.i.i825 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %588) #8
  store i32 0, i32* %input.i.i825, align 4, !tbaa !38
  %589 = call i64 @encread(i8* %588, i64 4, %struct.__sFILE* %inf) #8
  %590 = icmp eq i64 %589, 4
  br i1 %590, label %rs_read_int.exit.i829, label %591

; <label>:591                                     ; preds = %587
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i829

rs_read_int.exit.i829:                            ; preds = %591, %587
  %592 = load i32* %input.i.i825, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %588) #8
  %593 = icmp eq %union.thing* %586, null
  br i1 %593, label %get_list_item.exit.i837, label %.lr.ph.i.i832

.lr.ph.i.i832:                                    ; preds = %595, %rs_read_int.exit.i829
  %count.04.i.i830 = phi i32 [ %596, %595 ], [ 0, %rs_read_int.exit.i829 ]
  %.013.i.i831 = phi %union.thing* [ %598, %595 ], [ %586, %rs_read_int.exit.i829 ]
  %594 = icmp eq i32 %count.04.i.i830, %592
  br i1 %594, label %get_list_item.exit.i837, label %595

; <label>:595                                     ; preds = %.lr.ph.i.i832
  %596 = add nsw i32 %count.04.i.i830, 1
  %597 = getelementptr inbounds %union.thing* %.013.i.i831, i64 0, i32 0, i32 0
  %598 = load %union.thing** %597, align 8, !tbaa !14
  %599 = icmp eq %union.thing* %598, null
  br i1 %599, label %get_list_item.exit.i837, label %.lr.ph.i.i832

get_list_item.exit.i837:                          ; preds = %595, %.lr.ph.i.i832, %rs_read_int.exit.i829
  %.0.i.i833 = phi %union.thing* [ null, %rs_read_int.exit.i829 ], [ null, %595 ], [ %.013.i.i831, %.lr.ph.i.i832 ]
  store %union.thing* %.0.i.i833, %union.thing** @l_last_pick, align 8, !tbaa !1
  %.pr955 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %.b2.i841.pre = load i1* @read_error, align 1
  %.b3.i842.pre = load i1* @format_error, align 1
  br label %rs_read_object_reference.exit839

rs_read_object_reference.exit839:                 ; preds = %get_list_item.exit.i837, %rs_read_object_reference.exit824
  %.b3.i842 = phi i1 [ %.b3.i827, %rs_read_object_reference.exit824 ], [ %.b3.i842.pre, %get_list_item.exit.i837 ]
  %.b2.i841 = phi i1 [ %.b2.i826, %rs_read_object_reference.exit824 ], [ %.b2.i841.pre, %get_list_item.exit.i837 ]
  %600 = phi %union.thing* [ %586, %rs_read_object_reference.exit824 ], [ %.pr955, %get_list_item.exit.i837 ]
  %or.cond.i843 = or i1 %.b2.i841, %.b3.i842
  br i1 %or.cond.i843, label %rs_read_object_reference.exit854, label %601

; <label>:601                                     ; preds = %rs_read_object_reference.exit839
  %602 = bitcast i32* %input.i.i840 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %602) #8
  store i32 0, i32* %input.i.i840, align 4, !tbaa !38
  %603 = call i64 @encread(i8* %602, i64 4, %struct.__sFILE* %inf) #8
  %604 = icmp eq i64 %603, 4
  br i1 %604, label %rs_read_int.exit.i844, label %605

; <label>:605                                     ; preds = %601
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i844

rs_read_int.exit.i844:                            ; preds = %605, %601
  %606 = load i32* %input.i.i840, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %602) #8
  %607 = icmp eq %union.thing* %600, null
  br i1 %607, label %get_list_item.exit.i852, label %.lr.ph.i.i847

.lr.ph.i.i847:                                    ; preds = %609, %rs_read_int.exit.i844
  %count.04.i.i845 = phi i32 [ %610, %609 ], [ 0, %rs_read_int.exit.i844 ]
  %.013.i.i846 = phi %union.thing* [ %612, %609 ], [ %600, %rs_read_int.exit.i844 ]
  %608 = icmp eq i32 %count.04.i.i845, %606
  br i1 %608, label %get_list_item.exit.i852, label %609

; <label>:609                                     ; preds = %.lr.ph.i.i847
  %610 = add nsw i32 %count.04.i.i845, 1
  %611 = getelementptr inbounds %union.thing* %.013.i.i846, i64 0, i32 0, i32 0
  %612 = load %union.thing** %611, align 8, !tbaa !14
  %613 = icmp eq %union.thing* %612, null
  br i1 %613, label %get_list_item.exit.i852, label %.lr.ph.i.i847

get_list_item.exit.i852:                          ; preds = %609, %.lr.ph.i.i847, %rs_read_int.exit.i844
  %.0.i.i848 = phi %union.thing* [ null, %rs_read_int.exit.i844 ], [ null, %609 ], [ %.013.i.i846, %.lr.ph.i.i847 ]
  store %union.thing* %.0.i.i848, %union.thing** @last_pick, align 8, !tbaa !1
  br label %rs_read_object_reference.exit854

rs_read_object_reference.exit854:                 ; preds = %get_list_item.exit.i852, %rs_read_object_reference.exit839
  %614 = call i32 @rs_read_object_list(%struct.__sFILE* %inf, %union.thing** @lvl_obj)
  %615 = call i32 @rs_read_thing_list(%struct.__sFILE* %inf, %union.thing** @mlist)
  %616 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 12), align 8, !tbaa !146
  %617 = icmp slt i32 %616, 0
  %.pr956.pre = load %union.thing** @mlist, align 8, !tbaa !1
  br i1 %617, label %rs_fix_thing.exit, label %618

; <label>:618                                     ; preds = %rs_read_object_reference.exit854
  %619 = icmp eq %union.thing* %.pr956.pre, null
  br i1 %619, label %rs_fix_thing_list.exit, label %.lr.ph.i.i857

.lr.ph.i.i857:                                    ; preds = %621, %618
  %count.04.i.i855 = phi i32 [ %622, %621 ], [ 0, %618 ]
  %.013.i.i856 = phi %union.thing* [ %624, %621 ], [ %.pr956.pre, %618 ]
  %620 = icmp eq i32 %count.04.i.i855, %616
  br i1 %620, label %626, label %621

; <label>:621                                     ; preds = %.lr.ph.i.i857
  %622 = add nsw i32 %count.04.i.i855, 1
  %623 = getelementptr inbounds %union.thing* %.013.i.i856, i64 0, i32 0, i32 0
  %624 = load %union.thing** %623, align 8, !tbaa !14
  %625 = icmp eq %union.thing* %624, null
  br i1 %625, label %rs_fix_thing.exit, label %.lr.ph.i.i857

; <label>:626                                     ; preds = %.lr.ph.i.i857
  %627 = getelementptr inbounds %union.thing* %.013.i.i856, i64 0, i32 0, i32 2
  store %struct.coord* %627, %struct.coord** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 7), align 8, !tbaa !27
  br label %rs_fix_thing.exit

rs_fix_thing.exit:                                ; preds = %626, %621, %rs_read_object_reference.exit854
  %628 = icmp eq %union.thing* %.pr956.pre, null
  br i1 %628, label %rs_fix_thing_list.exit, label %.lr.ph.i858

.lr.ph.i858:                                      ; preds = %rs_fix_thing.exit.i, %rs_fix_thing.exit
  %item.02.i = phi %union.thing* [ %645, %rs_fix_thing.exit.i ], [ %.pr956.pre, %rs_fix_thing.exit ]
  %629 = getelementptr inbounds %union.thing* %item.02.i, i64 0, i32 0, i32 12
  %630 = load i32* %629, align 4, !tbaa !146
  %631 = icmp slt i32 %630, 0
  br i1 %631, label %rs_fix_thing.exit.i, label %632

; <label>:632                                     ; preds = %.lr.ph.i858
  %633 = load %union.thing** @mlist, align 8, !tbaa !1
  %634 = icmp eq %union.thing* %633, null
  br i1 %634, label %rs_fix_thing.exit.i, label %.lr.ph.i.i.i

.lr.ph.i.i.i:                                     ; preds = %636, %632
  %count.04.i.i.i = phi i32 [ %637, %636 ], [ 0, %632 ]
  %.013.i.i.i = phi %union.thing* [ %639, %636 ], [ %633, %632 ]
  %635 = icmp eq i32 %count.04.i.i.i, %630
  br i1 %635, label %641, label %636

; <label>:636                                     ; preds = %.lr.ph.i.i.i
  %637 = add nsw i32 %count.04.i.i.i, 1
  %638 = getelementptr inbounds %union.thing* %.013.i.i.i, i64 0, i32 0, i32 0
  %639 = load %union.thing** %638, align 8, !tbaa !14
  %640 = icmp eq %union.thing* %639, null
  br i1 %640, label %rs_fix_thing.exit.i, label %.lr.ph.i.i.i

; <label>:641                                     ; preds = %.lr.ph.i.i.i
  %642 = getelementptr inbounds %union.thing* %.013.i.i.i, i64 0, i32 0, i32 2
  %643 = getelementptr inbounds %union.thing* %item.02.i, i64 0, i32 0, i32 7
  store %struct.coord* %642, %struct.coord** %643, align 8, !tbaa !27
  br label %rs_fix_thing.exit.i

rs_fix_thing.exit.i:                              ; preds = %641, %636, %632, %.lr.ph.i858
  %644 = getelementptr inbounds %union.thing* %item.02.i, i64 0, i32 0, i32 0
  %645 = load %union.thing** %644, align 8, !tbaa !14
  %646 = icmp eq %union.thing* %645, null
  br i1 %646, label %rs_fix_thing_list.exit, label %.lr.ph.i858

rs_fix_thing_list.exit:                           ; preds = %rs_fix_thing.exit.i, %rs_fix_thing.exit, %618
  %647 = call i32 @rs_read_places(%struct.__sFILE* %inf, %struct.PLACE* getelementptr inbounds ([2560 x %struct.PLACE]* @places, i64 0, i64 0), i32 2560)
  %648 = call i32 @rs_read_stats(%struct.__sFILE* %inf, %struct.stats* @max_stats)
  %.b2.i860 = load i1* @read_error, align 1
  %.b3.i861 = load i1* @format_error, align 1
  %or.cond.i862 = or i1 %.b2.i860, %.b3.i861
  br i1 %or.cond.i862, label %rs_read_rooms.exit, label %649

; <label>:649                                     ; preds = %rs_fix_thing_list.exit
  %650 = bitcast i32* %input.i.i859 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %650) #8
  store i32 0, i32* %input.i.i859, align 4, !tbaa !38
  %651 = call i64 @encread(i8* %650, i64 4, %struct.__sFILE* %inf) #8
  %652 = icmp eq i64 %651, 4
  br i1 %652, label %rs_read_int.exit.i863, label %653

; <label>:653                                     ; preds = %649
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i863

rs_read_int.exit.i863:                            ; preds = %653, %649
  %654 = load i32* %input.i.i859, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %650) #8
  %655 = icmp sgt i32 %654, 9
  br i1 %655, label %.preheader.i864.thread, label %.preheader.i864

.preheader.i864.thread:                           ; preds = %rs_read_int.exit.i863
  store i1 true, i1* @format_error, align 1
  br label %.lr.ph.i868

.preheader.i864:                                  ; preds = %rs_read_int.exit.i863
  %656 = icmp sgt i32 %654, 0
  br i1 %656, label %.lr.ph.i868, label %rs_read_rooms.exit

.lr.ph.i868:                                      ; preds = %.lr.ph.i868, %.preheader.i864, %.preheader.i864.thread
  %indvars.iv.i865 = phi i64 [ %indvars.iv.next.i866, %.lr.ph.i868 ], [ 0, %.preheader.i864 ], [ 0, %.preheader.i864.thread ]
  %657 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %indvars.iv.i865
  %658 = call i32 @rs_read_room(%struct.__sFILE* %inf, %struct.room* %657) #8
  %indvars.iv.next.i866 = add nuw nsw i64 %indvars.iv.i865, 1
  %lftr.wideiv959 = trunc i64 %indvars.iv.next.i866 to i32
  %exitcond960 = icmp eq i32 %lftr.wideiv959, %654
  br i1 %exitcond960, label %rs_read_rooms.exit, label %.lr.ph.i868

rs_read_rooms.exit:                               ; preds = %.lr.ph.i868, %.preheader.i864, %rs_fix_thing_list.exit
  %.b2.i874 = load i1* @read_error, align 1
  %.b3.i875 = load i1* @format_error, align 1
  %or.cond.i876 = or i1 %.b2.i874, %.b3.i875
  br i1 %or.cond.i876, label %rs_read_room_reference.exit, label %659

; <label>:659                                     ; preds = %rs_read_rooms.exit
  %660 = bitcast i32* %input.i.i873 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %660) #8
  store i32 0, i32* %input.i.i873, align 4, !tbaa !38
  %661 = call i64 @encread(i8* %660, i64 4, %struct.__sFILE* %inf) #8
  %662 = icmp eq i64 %661, 4
  br i1 %662, label %.rs_read_int.exit.i880_crit_edge, label %663

.rs_read_int.exit.i880_crit_edge:                 ; preds = %659
  %.b2.i883.pre.pre = load i1* @read_error, align 1
  br label %rs_read_int.exit.i880

; <label>:663                                     ; preds = %659
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i880

rs_read_int.exit.i880:                            ; preds = %663, %.rs_read_int.exit.i880_crit_edge
  %.b2.i883.pre = phi i1 [ %.b2.i883.pre.pre, %.rs_read_int.exit.i880_crit_edge ], [ true, %663 ]
  %664 = load i32* %input.i.i873, align 4, !tbaa !38
  %phitmp.i = sext i32 %664 to i64
  call void @llvm.lifetime.end(i64 4, i8* %660) #8
  %665 = getelementptr inbounds [0 x %struct.room]* bitcast ([9 x %struct.room]* @rooms to [0 x %struct.room]*), i64 0, i64 %phitmp.i
  store %struct.room* %665, %struct.room** @oldrp, align 8, !tbaa !1
  %.b3.i884.pre = load i1* @format_error, align 1
  br label %rs_read_room_reference.exit

rs_read_room_reference.exit:                      ; preds = %rs_read_int.exit.i880, %rs_read_rooms.exit
  %.b3.i884 = phi i1 [ %.b3.i875, %rs_read_rooms.exit ], [ %.b3.i884.pre, %rs_read_int.exit.i880 ]
  %.b2.i883 = phi i1 [ %.b2.i874, %rs_read_rooms.exit ], [ %.b2.i883.pre, %rs_read_int.exit.i880 ]
  %or.cond.i885 = or i1 %.b2.i883, %.b3.i884
  br i1 %or.cond.i885, label %rs_read_rooms.exit898, label %666

; <label>:666                                     ; preds = %rs_read_room_reference.exit
  %667 = bitcast i32* %input.i.i882 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %667) #8
  store i32 0, i32* %input.i.i882, align 4, !tbaa !38
  %668 = call i64 @encread(i8* %667, i64 4, %struct.__sFILE* %inf) #8
  %669 = icmp eq i64 %668, 4
  br i1 %669, label %rs_read_int.exit.i886, label %670

; <label>:670                                     ; preds = %666
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i886

rs_read_int.exit.i886:                            ; preds = %670, %666
  %671 = load i32* %input.i.i882, align 4, !tbaa !38
  call void @llvm.lifetime.end(i64 4, i8* %667) #8
  %672 = icmp sgt i32 %671, 13
  br i1 %672, label %.preheader.i887.thread, label %.preheader.i887

.preheader.i887.thread:                           ; preds = %rs_read_int.exit.i886
  store i1 true, i1* @format_error, align 1
  br label %.lr.ph.i892

.preheader.i887:                                  ; preds = %rs_read_int.exit.i886
  %673 = icmp sgt i32 %671, 0
  br i1 %673, label %.lr.ph.i892, label %rs_read_rooms.exit898

.lr.ph.i892:                                      ; preds = %.lr.ph.i892, %.preheader.i887, %.preheader.i887.thread
  %indvars.iv.i888 = phi i64 [ %indvars.iv.next.i889, %.lr.ph.i892 ], [ 0, %.preheader.i887 ], [ 0, %.preheader.i887.thread ]
  %674 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %indvars.iv.i888
  %675 = call i32 @rs_read_room(%struct.__sFILE* %inf, %struct.room* %674) #8
  %indvars.iv.next.i889 = add nuw nsw i64 %indvars.iv.i888, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i889 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %671
  br i1 %exitcond, label %rs_read_rooms.exit898, label %.lr.ph.i892

rs_read_rooms.exit898:                            ; preds = %.lr.ph.i892, %.preheader.i887, %rs_read_room_reference.exit
  %676 = call i32 @rs_read_monsters(%struct.__sFILE* %inf, %struct.monster* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 0), i32 26)
  %677 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 0), i32 7)
  %678 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 8)
  %679 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 14)
  %680 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 14)
  %681 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 18)
  %682 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 10)
  %683 = call i32 @rs_read_obj_info(%struct.__sFILE* %inf, %struct.obj_info* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 0), i32 14)
  %684 = call i32 @rs_read_daemons(%struct.__sFILE* %inf, %struct.delayed_action* getelementptr inbounds ([20 x %struct.delayed_action]* @d_list, i64 0, i64 0), i32 20)
  %685 = bitcast i32* %input.i899 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %685) #8
  store i32 0, i32* %input.i899, align 4, !tbaa !38
  %.b2.i900 = load i1* @read_error, align 1
  %.b3.i901 = load i1* @format_error, align 1
  %or.cond.i902 = or i1 %.b2.i900, %.b3.i901
  br i1 %or.cond.i902, label %rs_read_int.exit909, label %686

; <label>:686                                     ; preds = %rs_read_rooms.exit898
  %687 = call i64 @encread(i8* %685, i64 4, %struct.__sFILE* %inf) #8
  %688 = icmp eq i64 %687, 4
  br i1 %688, label %.rs_read_int.exit909_crit_edge, label %689

.rs_read_int.exit909_crit_edge:                   ; preds = %686
  %.b2.i911.pre = load i1* @read_error, align 1
  br label %rs_read_int.exit909

; <label>:689                                     ; preds = %686
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit909

rs_read_int.exit909:                              ; preds = %689, %.rs_read_int.exit909_crit_edge, %rs_read_rooms.exit898
  %.b2.i911 = phi i1 [ %.b2.i911.pre, %.rs_read_int.exit909_crit_edge ], [ true, %689 ], [ %.b2.i900, %rs_read_rooms.exit898 ]
  call void @llvm.lifetime.end(i64 4, i8* %685) #8
  %690 = bitcast i32* %input.i910 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %690) #8
  store i32 0, i32* %input.i910, align 4, !tbaa !38
  %.b3.i912 = load i1* @format_error, align 1
  %or.cond.i913 = or i1 %.b2.i911, %.b3.i912
  br i1 %or.cond.i913, label %rs_read_int.exit920, label %691

; <label>:691                                     ; preds = %rs_read_int.exit909
  %692 = call i64 @encread(i8* %690, i64 4, %struct.__sFILE* %inf) #8
  %693 = icmp eq i64 %692, 4
  br i1 %693, label %.rs_read.exit.i918_crit_edge, label %694

.rs_read.exit.i918_crit_edge:                     ; preds = %691
  %.b3.i923.pre.pre = load i1* @read_error, align 1
  br label %rs_read.exit.i918

; <label>:694                                     ; preds = %691
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i918

rs_read.exit.i918:                                ; preds = %694, %.rs_read.exit.i918_crit_edge
  %.b3.i923.pre = phi i1 [ %.b3.i923.pre.pre, %.rs_read.exit.i918_crit_edge ], [ true, %694 ]
  %695 = load i32* %input.i910, align 4, !tbaa !38
  store i32 %695, i32* @between, align 4, !tbaa !38
  %.b4.i924.pre = load i1* @format_error, align 1
  br label %rs_read_int.exit920

rs_read_int.exit920:                              ; preds = %rs_read.exit.i918, %rs_read_int.exit909
  %.b4.i924 = phi i1 [ %.b3.i912, %rs_read_int.exit909 ], [ %.b4.i924.pre, %rs_read.exit.i918 ]
  %.b3.i923 = phi i1 [ %.b2.i911, %rs_read_int.exit909 ], [ %.b3.i923.pre, %rs_read.exit.i918 ]
  call void @llvm.lifetime.end(i64 4, i8* %690) #8
  %or.cond.i925 = or i1 %.b3.i923, %.b4.i924
  br i1 %or.cond.i925, label %rs_read_coord.exit942, label %696

; <label>:696                                     ; preds = %rs_read_int.exit920
  %697 = bitcast i32* %input.i.i922 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %697) #8
  store i32 0, i32* %input.i.i922, align 4, !tbaa !38
  %698 = call i64 @encread(i8* %697, i64 4, %struct.__sFILE* %inf) #8
  %699 = icmp eq i64 %698, 4
  br i1 %699, label %.rs_read.exit.i_crit_edge.i927, label %700

.rs_read.exit.i_crit_edge.i927:                   ; preds = %696
  %.b2.i8.pre.pre.i926 = load i1* @read_error, align 1
  br label %rs_read_int.exit.i931

; <label>:700                                     ; preds = %696
  store i1 true, i1* @read_error, align 1
  br label %rs_read_int.exit.i931

rs_read_int.exit.i931:                            ; preds = %700, %.rs_read.exit.i_crit_edge.i927
  %.b2.i8.pre.i928 = phi i1 [ %.b2.i8.pre.pre.i926, %.rs_read.exit.i_crit_edge.i927 ], [ true, %700 ]
  %701 = load i32* %input.i.i922, align 4, !tbaa !38
  %.b3.i9.pre.i929 = load i1* @format_error, align 1
  call void @llvm.lifetime.end(i64 4, i8* %697) #8
  %702 = bitcast i32* %input.i7.i921 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %702) #8
  store i32 0, i32* %input.i7.i921, align 4, !tbaa !38
  %or.cond.i10.i930 = or i1 %.b2.i8.pre.i928, %.b3.i9.pre.i929
  br i1 %or.cond.i10.i930, label %rs_read_int.exit17.i940, label %703

; <label>:703                                     ; preds = %rs_read_int.exit.i931
  %704 = call i64 @encread(i8* %702, i64 4, %struct.__sFILE* %inf) #8
  %705 = icmp eq i64 %704, 4
  br i1 %705, label %.rs_read.exit.i15_crit_edge.i933, label %706

.rs_read.exit.i15_crit_edge.i933:                 ; preds = %703
  %.b2.pre.pre.i932 = load i1* @read_error, align 1
  br label %rs_read.exit.i15.i936

; <label>:706                                     ; preds = %703
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i15.i936

rs_read.exit.i15.i936:                            ; preds = %706, %.rs_read.exit.i15_crit_edge.i933
  %.b2.pre.i934 = phi i1 [ %.b2.pre.pre.i932, %.rs_read.exit.i15_crit_edge.i933 ], [ true, %706 ]
  %707 = load i32* %input.i7.i921, align 4, !tbaa !38
  %.b6.pre.i935 = load i1* @format_error, align 1
  br label %rs_read_int.exit17.i940

rs_read_int.exit17.i940:                          ; preds = %rs_read.exit.i15.i936, %rs_read_int.exit.i931
  %.b.i937 = phi i1 [ %.b2.pre.i934, %rs_read.exit.i15.i936 ], [ %.b2.i8.pre.i928, %rs_read_int.exit.i931 ]
  %.b5.i938 = phi i1 [ %.b6.pre.i935, %rs_read.exit.i15.i936 ], [ %.b3.i9.pre.i929, %rs_read_int.exit.i931 ]
  %708 = phi i32 [ %707, %rs_read.exit.i15.i936 ], [ undef, %rs_read_int.exit.i931 ]
  call void @llvm.lifetime.end(i64 4, i8* %702) #8
  %..b2.i939 = or i1 %.b5.i938, %.b.i937
  br i1 %..b2.i939, label %rs_read_coord.exit942, label %709

; <label>:709                                     ; preds = %rs_read_int.exit17.i940
  store i32 %701, i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 0), align 4, !tbaa !21
  store i32 %708, i32* getelementptr inbounds (%struct.coord* @nh, i64 0, i32 1), align 4, !tbaa !20
  br label %rs_read_coord.exit942

rs_read_coord.exit942:                            ; preds = %709, %rs_read_int.exit17.i940, %rs_read_int.exit920
  %.b3.i945 = phi i1 [ %.b4.i924, %rs_read_int.exit920 ], [ %.b5.i938, %rs_read_int.exit17.i940 ], [ false, %709 ]
  %.b2.i944 = phi i1 [ %.b3.i923, %rs_read_int.exit920 ], [ %.b.i937, %rs_read_int.exit17.i940 ], [ false, %709 ]
  %710 = bitcast i32* %input.i943 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %710) #8
  store i32 0, i32* %input.i943, align 4, !tbaa !38
  %or.cond.i946 = or i1 %.b2.i944, %.b3.i945
  br i1 %or.cond.i946, label %rs_read_int.exit953, label %711

; <label>:711                                     ; preds = %rs_read_coord.exit942
  %712 = call i64 @encread(i8* %710, i64 4, %struct.__sFILE* %inf) #8
  %713 = icmp eq i64 %712, 4
  br i1 %713, label %rs_read.exit.i951, label %714

; <label>:714                                     ; preds = %711
  store i1 true, i1* @read_error, align 1
  br label %rs_read.exit.i951

rs_read.exit.i951:                                ; preds = %714, %711
  %715 = load i32* %input.i943, align 4, !tbaa !38
  store i32 %715, i32* @group, align 4, !tbaa !38
  br label %rs_read_int.exit953

rs_read_int.exit953:                              ; preds = %rs_read.exit.i951, %rs_read_coord.exit942
  call void @llvm.lifetime.end(i64 4, i8* %710) #8
  %716 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %717 = call i32 @rs_read_window(%struct.__sFILE* %inf, %struct._win_st* %716)
  %.b4 = load i1* @format_error, align 1
  %.b = load i1* @read_error, align 1
  %..b = or i1 %.b4, %.b
  br label %718

; <label>:718                                     ; preds = %rs_read_int.exit953, %0
  %..b2.sink = phi i1 [ %..b, %rs_read_int.exit953 ], [ true, %0 ]
  %719 = zext i1 %..b2.sink to i32
  ret i32 %719
}

; Function Attrs: nounwind ssp uwtable
define void @fix_stick(%union.thing* %cur) #0 {
  %1 = bitcast %union.thing* %cur to %struct.anon.0*
  %2 = getelementptr inbounds %union.thing* %cur, i64 0, i32 0, i32 9, i32 5, i64 4
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4, !tbaa !50
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %5
  %7 = load i8** %6, align 8, !tbaa !1
  %8 = tail call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([6 x i8]* @.str952, i64 0, i64 0)) #8
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 7, i64 0
  %11 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %10, i1 false)
  br i1 %9, label %12, label %14

; <label>:12                                      ; preds = %0
  %13 = tail call i8* @__strncpy_chk(i8* %10, i8* getelementptr inbounds ([4 x i8]* @.str1953, i64 0, i64 0), i64 8, i64 %11) #8
  br label %16

; <label>:14                                      ; preds = %0
  %15 = tail call i8* @__strncpy_chk(i8* %10, i8* getelementptr inbounds ([4 x i8]* @.str2954, i64 0, i64 0), i64 8, i64 %11) #8
  br label %16

; <label>:16                                      ; preds = %14, %12
  %17 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 8, i64 0
  %18 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %17, i1 false)
  %19 = tail call i8* @__strncpy_chk(i8* %17, i8* getelementptr inbounds ([4 x i8]* @.str2954, i64 0, i64 0), i64 8, i64 %18) #8
  %20 = load i32* %3, align 4, !tbaa !50
  %cond = icmp eq i32 %20, 0
  br i1 %cond, label %21, label %25

; <label>:21                                      ; preds = %16
  %22 = tail call i32 @rnd(i32 10) #8
  %23 = add nsw i32 %22, 10
  %24 = getelementptr inbounds %union.thing* %cur, i64 0, i32 0, i32 9, i32 6
  store i32 %23, i32* %24, align 4, !tbaa !70
  br label %29

; <label>:25                                      ; preds = %16
  %26 = tail call i32 @rnd(i32 5) #8
  %27 = add nsw i32 %26, 3
  %28 = getelementptr inbounds %union.thing* %cur, i64 0, i32 0, i32 9, i32 6
  store i32 %27, i32* %28, align 4, !tbaa !70
  br label %29

; <label>:29                                      ; preds = %25, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_zap() #0 {
  %new_pos = alloca %struct.coord, align 4
  %1 = call %union.thing* @get_item(i8* getelementptr inbounds ([9 x i8]* @.str3955, i64 0, i64 0), i32 47) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %258, label %3

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  %5 = load i32* %4, align 4, !tbaa !8
  %6 = icmp eq i32 %5, 47
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %3
  store i8 0, i8* @after, align 1, !tbaa !5
  %8 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([25 x i8]* @.str4956, i64 0, i64 0)) #8
  br label %258

; <label>:9                                       ; preds = %3
  %10 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 6
  %11 = load i32* %10, align 4, !tbaa !70
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

; <label>:13                                      ; preds = %9
  %14 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([16 x i8]* @.str5957, i64 0, i64 0)) #8
  br label %258

; <label>:15                                      ; preds = %9
  %16 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load i32* %17, align 4, !tbaa !50
  switch i32 %18, label %255 [
    i32 0, label %19
    i32 9, label %35
    i32 1, label %41
    i32 5, label %41
    i32 11, label %41
    i32 12, label %41
    i32 13, label %41
    i32 6, label %171
    i32 7, label %203
    i32 8, label %203
    i32 2, label %251
    i32 3, label %249
    i32 4, label %250
  ]

; <label>:19                                      ; preds = %15
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 0, i32 4), align 8, !tbaa !102
  %20 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %21 = getelementptr inbounds %struct.room* %20, i64 0, i32 4
  %22 = load i16* %21, align 2, !tbaa !39
  %23 = and i16 %22, 2
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %27, label %25

; <label>:25                                      ; preds = %19
  %26 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([34 x i8]* @.str6958, i64 0, i64 0)) #8
  br label %255

; <label>:27                                      ; preds = %19
  %28 = and i16 %22, -2
  store i16 %28, i16* %21, align 2, !tbaa !39
  call void @enter_room(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([16 x i8]* @.str7959, i64 0, i64 0)) #8
  %29 = load i8* @terse, align 1, !tbaa !5, !range !7
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

; <label>:31                                      ; preds = %27
  %32 = call i8* @pick_color(i8* getelementptr inbounds ([5 x i8]* @.str9961, i64 0, i64 0)) #8
  call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([26 x i8]* @.str8960, i64 0, i64 0), i8* %32) #8
  br label %33

; <label>:33                                      ; preds = %31, %27
  %34 = call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %255

; <label>:35                                      ; preds = %15
  %36 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %37 = icmp slt i32 %36, 2
  br i1 %37, label %38, label %40

; <label>:38                                      ; preds = %35
  %39 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([27 x i8]* @.str10962, i64 0, i64 0)) #8
  br label %258

; <label>:40                                      ; preds = %35
  call void @drain()
  br label %255

; <label>:41                                      ; preds = %15, %15, %15, %15, %15
  %42 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %43 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %44 = shl i32 %43, 5
  %45 = add nsw i32 %44, %42
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %46, i32 2
  %48 = load %union.thing** %47, align 8, !tbaa !43
  %49 = icmp eq %union.thing* %48, null
  %50 = getelementptr inbounds %union.thing* %48, i64 0, i32 0, i32 5
  %51 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %46, i32 0
  %.sink.in3 = select i1 %49, i8* %51, i8* %50
  %.sink4 = load i8* %.sink.in3, align 1
  %52 = sext i8 %.sink4 to i32
  %53 = call i32 @step_ok(i32 %52) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %41
  %y.06 = phi i32 [ %56, %.lr.ph ], [ %42, %41 ]
  %x.05 = phi i32 [ %58, %.lr.ph ], [ %43, %41 ]
  %55 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %56 = add nsw i32 %55, %y.06
  %57 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %58 = add nsw i32 %57, %x.05
  %59 = shl i32 %58, 5
  %60 = add nsw i32 %59, %56
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %61, i32 2
  %63 = load %union.thing** %62, align 8, !tbaa !43
  %64 = icmp eq %union.thing* %63, null
  %65 = getelementptr inbounds %union.thing* %63, i64 0, i32 0, i32 5
  %66 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %61, i32 0
  %.sink.in = select i1 %64, i8* %66, i8* %65
  %.sink = load i8* %.sink.in, align 1
  %67 = sext i8 %.sink to i32
  %68 = call i32 @step_ok(i32 %67) #8
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %41
  %.lcssa2 = phi i8* [ %51, %41 ], [ %66, %.lr.ph ]
  %.lcssa = phi %union.thing** [ %47, %41 ], [ %62, %.lr.ph ]
  %y.0.lcssa = phi i32 [ %42, %41 ], [ %56, %.lr.ph ]
  %x.0.lcssa = phi i32 [ %43, %41 ], [ %58, %.lr.ph ]
  %70 = load %union.thing** %.lcssa, align 8, !tbaa !43
  %71 = icmp eq %union.thing* %70, null
  br i1 %71, label %255, label %72

; <label>:72                                      ; preds = %._crit_edge
  %73 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 4
  %74 = load i8* %73, align 1, !tbaa !37
  %75 = icmp eq i8 %74, 70
  br i1 %75, label %76, label %79

; <label>:76                                      ; preds = %72
  %77 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %78 = and i16 %77, -257
  store i16 %78, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  br label %79

; <label>:79                                      ; preds = %76, %72
  %80 = load i32* %17, align 4, !tbaa !50
  switch i32 %80, label %255 [
    i32 1, label %83
    i32 5, label %98
    i32 13, label %131
    i32 11, label %.preheader
    i32 12, label %158
  ]

.preheader:                                       ; preds = %79
  %81 = getelementptr inbounds %struct.coord* %new_pos, i64 0, i32 1
  %82 = getelementptr inbounds %struct.coord* %new_pos, i64 0, i32 0
  br label %147

; <label>:83                                      ; preds = %79
  %84 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 8
  %85 = load i16* %84, align 2, !tbaa !18
  %86 = or i16 %85, 1024
  store i16 %86, i16* %84, align 2, !tbaa !18
  %87 = call zeroext i1 @cansee(i32 %y.0.lcssa, i32 %x.0.lcssa) #8
  br i1 %87, label %88, label %255

; <label>:88                                      ; preds = %83
  %89 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %90 = call i32 @wmove(%struct._win_st* %89, i32 %y.0.lcssa, i32 %x.0.lcssa) #8
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %255, label %92

; <label>:92                                      ; preds = %88
  %93 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %94 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 6
  %95 = load i8* %94, align 1, !tbaa !42
  %96 = sext i8 %95 to i32
  %97 = call i32 @waddch(%struct._win_st* %93, i32 %96) #8
  br label %255

; <label>:98                                      ; preds = %79
  %99 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 11
  %100 = load %union.thing** %99, align 8, !tbaa !51
  call void @_detach(%union.thing** @mlist, %union.thing* %70) #8
  %101 = call zeroext i1 @see_monst(%union.thing* %70) #8
  br i1 %101, label %102, label %111

; <label>:102                                     ; preds = %98
  %103 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %104 = call i32 @wmove(%struct._win_st* %103, i32 %y.0.lcssa, i32 %x.0.lcssa) #8
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %111, label %106

; <label>:106                                     ; preds = %102
  %107 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %108 = load i8* %.lcssa2, align 8, !tbaa !33
  %109 = sext i8 %108 to i32
  %110 = call i32 @waddch(%struct._win_st* %107, i32 %109) #8
  br label %111

; <label>:111                                     ; preds = %106, %102, %98
  %112 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 6
  %113 = load i8* %112, align 1, !tbaa !42
  store i32 %y.0.lcssa, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 %x.0.lcssa, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %114 = call i32 @rnd(i32 26) #8
  %115 = add nsw i32 %114, 65
  %116 = trunc i32 %115 to i8
  call void @new_monster(%union.thing* %70, i8 signext %116, %struct.coord* @delta) #8
  %117 = call zeroext i1 @see_monst(%union.thing* %70) #8
  br i1 %117, label %118, label %126

; <label>:118                                     ; preds = %111
  %119 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %120 = call i32 @wmove(%struct._win_st* %119, i32 %y.0.lcssa, i32 %x.0.lcssa) #8
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %126, label %122

; <label>:122                                     ; preds = %118
  %123 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %sext = shl i32 %115, 24
  %124 = ashr exact i32 %sext, 24
  %125 = call i32 @waddch(%struct._win_st* %123, i32 %124) #8
  br label %126

; <label>:126                                     ; preds = %122, %118, %111
  store i8 %113, i8* %112, align 1, !tbaa !42
  store %union.thing* %100, %union.thing** %99, align 8, !tbaa !51
  %127 = call zeroext i1 @see_monst(%union.thing* %70) #8
  %128 = zext i1 %127 to i8
  %129 = load i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 5, i32 4), align 8, !tbaa !102, !range !7
  %130 = or i8 %129, %128
  store i8 %130, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 5, i32 4), align 8, !tbaa !102
  br label %255

; <label>:131                                     ; preds = %79
  %132 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 8
  %133 = load i16* %132, align 2, !tbaa !18
  %134 = and i16 %133, -1034
  %135 = or i16 %134, 8
  store i16 %135, i16* %132, align 2, !tbaa !18
  %136 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 5
  store i8 %74, i8* %136, align 1, !tbaa !44
  %137 = call zeroext i1 @see_monst(%union.thing* %70) #8
  br i1 %137, label %138, label %255

; <label>:138                                     ; preds = %131
  %139 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %140 = call i32 @wmove(%struct._win_st* %139, i32 %y.0.lcssa, i32 %x.0.lcssa) #8
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %255, label %142

; <label>:142                                     ; preds = %138
  %143 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %144 = load i8* %136, align 1, !tbaa !44
  %145 = sext i8 %144 to i32
  %146 = call i32 @waddch(%struct._win_st* %143, i32 %145) #8
  br label %255

; <label>:147                                     ; preds = %153, %.preheader
  %148 = call zeroext i1 @find_floor(%struct.room* null, %struct.coord* %new_pos, i32 0, i1 zeroext true) #8
  %149 = load i32* %82, align 4, !tbaa !21
  %150 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %151 = trunc i64 %150 to i32
  %152 = icmp eq i32 %149, %151
  br i1 %152, label %153, label %.critedge

; <label>:153                                     ; preds = %147
  %154 = lshr i64 %150, 32
  %155 = trunc i64 %154 to i32
  %156 = load i32* %81, align 4, !tbaa !20
  %157 = icmp eq i32 %156, %155
  br i1 %157, label %147, label %.critedge

; <label>:158                                     ; preds = %79
  %159 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %160 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %161 = add nsw i32 %160, %159
  %162 = getelementptr inbounds %struct.coord* %new_pos, i64 0, i32 1
  store i32 %161, i32* %162, align 4, !tbaa !20
  %163 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %164 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  %165 = add nsw i32 %164, %163
  %166 = getelementptr inbounds %struct.coord* %new_pos, i64 0, i32 0
  store i32 %165, i32* %166, align 4, !tbaa !21
  br label %.critedge

.critedge:                                        ; preds = %158, %153, %147
  %167 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 7
  store %struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord** %167, align 8, !tbaa !27
  %168 = getelementptr inbounds %union.thing* %70, i64 0, i32 0, i32 8
  %169 = load i16* %168, align 2, !tbaa !18
  %170 = or i16 %169, 8192
  store i16 %170, i16* %168, align 2, !tbaa !18
  call void @relocate(%union.thing* %70, %struct.coord* %new_pos) #8
  br label %255

; <label>:171                                     ; preds = %15
  store i8 1, i8* getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 6, i32 4), align 8, !tbaa !102
  store i32 42, i32* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !8
  %strncpy = call i8* @strncpy(i8* getelementptr (%struct.anon.0* bitcast (%union.thing* @do_zap.bolt to %struct.anon.0*), i64 0, i32 8, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str11963, i64 0, i64 0), i64 8)
  store i32 100, i32* bitcast (i8* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 9, i32 5, i64 8) to i32*), align 4, !tbaa !68
  store i32 1, i32* bitcast (i8* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 9, i32 5, i64 12) to i32*), align 4, !tbaa !69
  store i32 4, i32* getelementptr (%struct.anon.0* bitcast (%union.thing* @do_zap.bolt to %struct.anon.0*), i64 0, i32 14), align 4, !tbaa !12
  %172 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %173 = icmp eq %union.thing* %172, null
  br i1 %173, label %178, label %174

; <label>:174                                     ; preds = %171
  %175 = getelementptr inbounds %union.thing* %172, i64 0, i32 0, i32 9, i32 5, i64 4
  %176 = bitcast i8* %175 to i32*
  %177 = load i32* %176, align 4, !tbaa !50
  store i32 %177, i32* bitcast (i16* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 8) to i32*), align 8, !tbaa !71
  br label %178

; <label>:178                                     ; preds = %174, %171
  %179 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  %180 = load i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  call void @do_motion(%union.thing* @do_zap.bolt, i32 %179, i32 %180) #8
  %181 = load i32* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !40
  %182 = shl i32 %181, 5
  %183 = load i32* bitcast (i8* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 3) to i32*), align 8, !tbaa !41
  %184 = add nsw i32 %182, %183
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %185, i32 2
  %187 = load %union.thing** %186, align 8, !tbaa !43
  %188 = icmp eq %union.thing* %187, null
  br i1 %188, label %196, label %189

; <label>:189                                     ; preds = %178
  %190 = call i32 @save_throw(i32 3, %union.thing* %187) #8
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %196

; <label>:192                                     ; preds = %189
  %193 = load i32* bitcast (i8* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 3) to i32*), align 8, !tbaa !41
  %194 = load i32* getelementptr inbounds (%union.thing* @do_zap.bolt, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !40
  %195 = call i32 @hit_monster(i32 %193, i32 %194, %union.thing* @do_zap.bolt) #8
  br label %255

; <label>:196                                     ; preds = %189, %178
  %197 = load i8* @terse, align 1, !tbaa !5, !range !7
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %201, label %199

; <label>:199                                     ; preds = %196
  %200 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([16 x i8]* @.str12964, i64 0, i64 0)) #8
  br label %255

; <label>:201                                     ; preds = %196
  %202 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([41 x i8]* @.str13965, i64 0, i64 0)) #8
  br label %255

; <label>:203                                     ; preds = %15, %15
  %204 = load <2 x i32>* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to <2 x i32>*), align 8, !tbaa !38
  br label %205

; <label>:205                                     ; preds = %223, %203
  %206 = phi <2 x i32> [ %204, %203 ], [ %225, %223 ]
  %207 = extractelement <2 x i32> %206, i32 1
  %208 = extractelement <2 x i32> %206, i32 0
  %209 = shl i32 %208, 5
  %210 = add nsw i32 %209, %207
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %211, i32 2
  %213 = load %union.thing** %212, align 8, !tbaa !43
  %214 = icmp eq %union.thing* %213, null
  br i1 %214, label %217, label %215

; <label>:215                                     ; preds = %205
  %216 = getelementptr inbounds %union.thing* %213, i64 0, i32 0, i32 5
  br label %219

; <label>:217                                     ; preds = %205
  %218 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %211, i32 0
  br label %219

; <label>:219                                     ; preds = %217, %215
  %.sink1.in = phi i8* [ %216, %215 ], [ %218, %217 ]
  %.sink1 = load i8* %.sink1.in, align 1
  %220 = sext i8 %.sink1 to i32
  %221 = call i32 @step_ok(i32 %220) #8
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %226, label %223

; <label>:223                                     ; preds = %219
  %224 = load <2 x i32>* bitcast (%struct.coord* @delta to <2 x i32>*), align 4, !tbaa !38
  %225 = add <2 x i32> %224, %206
  br label %205

; <label>:226                                     ; preds = %219
  %227 = load %union.thing** %212, align 8, !tbaa !43
  %228 = icmp eq %union.thing* %227, null
  br i1 %228, label %255, label %229

; <label>:229                                     ; preds = %226
  %230 = load i32* %17, align 4, !tbaa !50
  %231 = icmp eq i32 %230, 7
  %232 = getelementptr inbounds %union.thing* %227, i64 0, i32 0, i32 8
  %233 = load i16* %232, align 2, !tbaa !18
  %234 = sext i16 %233 to i32
  br i1 %231, label %235, label %242

; <label>:235                                     ; preds = %229
  %236 = and i32 %234, 32768
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %240, label %238

; <label>:238                                     ; preds = %235
  %239 = and i16 %233, 32767
  store i16 %239, i16* %232, align 2, !tbaa !18
  br label %248

; <label>:240                                     ; preds = %235
  %241 = or i16 %233, 64
  store i16 %241, i16* %232, align 2, !tbaa !18
  br label %248

; <label>:242                                     ; preds = %229
  %243 = and i32 %234, 64
  %244 = icmp eq i32 %243, 0
  %245 = or i16 %233, -32768
  %246 = and i16 %233, -65
  %storemerge = select i1 %244, i16 %245, i16 %246
  store i16 %storemerge, i16* %232, align 2, !tbaa !18
  %247 = getelementptr inbounds %union.thing* %227, i64 0, i32 0, i32 3
  store i8 1, i8* %247, align 1, !tbaa !19
  br label %248

; <label>:248                                     ; preds = %242, %240, %238
  store i32 %207, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 1), align 4, !tbaa !20
  store i32 %208, i32* getelementptr inbounds (%struct.coord* @delta, i64 0, i32 0), align 4, !tbaa !21
  call void @runto(%struct.coord* @delta) #8
  br label %255

; <label>:249                                     ; preds = %15
  br label %251

; <label>:250                                     ; preds = %15
  br label %251

; <label>:251                                     ; preds = %250, %249, %15
  %name.0 = phi i8* [ getelementptr inbounds ([6 x i8]* @.str15967, i64 0, i64 0), %249 ], [ getelementptr inbounds ([4 x i8]* @.str16968, i64 0, i64 0), %250 ], [ getelementptr inbounds ([5 x i8]* @.str14966, i64 0, i64 0), %15 ]
  call void @fire_bolt(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2), %struct.coord* @delta, i8* %name.0)
  %252 = load i32* %17, align 4, !tbaa !50
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %253, i32 4
  store i8 1, i8* %254, align 8, !tbaa !102
  br label %255

; <label>:255                                     ; preds = %251, %248, %226, %201, %199, %192, %.critedge, %142, %138, %131, %126, %92, %88, %83, %79, %._crit_edge, %40, %33, %25, %15
  %256 = load i32* %10, align 4, !tbaa !70
  %257 = add nsw i32 %256, -1
  store i32 %257, i32* %10, align 4, !tbaa !70
  br label %258

; <label>:258                                     ; preds = %255, %38, %13, %7, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @fire_bolt(%struct.coord* readonly %start, %struct.coord* nocapture %dir, i8* %name) #0 {
  %bolt = alloca %union.thing, align 8
  %1 = bitcast %union.thing* %bolt to i8*
  call void @llvm.lifetime.start(i64 112, i8* %1) #8
  %2 = bitcast %union.thing* %bolt to %struct.anon.0*
  %3 = getelementptr inbounds %union.thing* %bolt, i64 0, i32 0, i32 2, i32 0
  store i32 41, i32* %3, align 8, !tbaa !8
  %4 = getelementptr inbounds %union.thing* %bolt, i64 0, i32 0, i32 9, i32 5, i64 4
  %5 = bitcast i8* %4 to i32*
  store i32 9, i32* %5, align 4, !tbaa !50
  %6 = getelementptr inbounds %struct.anon.0* %2, i64 0, i32 8, i64 0
  %strncpy = call i8* @strncpy(i8* %6, i8* getelementptr inbounds ([4 x i8]* @.str18970, i64 0, i64 0), i64 8)
  %7 = getelementptr inbounds %union.thing* %bolt, i64 0, i32 0, i32 9, i32 5, i64 8
  %8 = bitcast i8* %7 to i32*
  store i32 100, i32* %8, align 4, !tbaa !68
  %9 = getelementptr inbounds %union.thing* %bolt, i64 0, i32 0, i32 9, i32 5, i64 12
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 4, !tbaa !69
  store i8* %name, i8** getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 9, i32 0), align 8, !tbaa !66
  %11 = getelementptr inbounds %struct.coord* %dir, i64 0, i32 1
  %12 = load i32* %11, align 4, !tbaa !20
  %13 = getelementptr inbounds %struct.coord* %dir, i64 0, i32 0
  %14 = load i32* %13, align 4, !tbaa !21
  %15 = add nsw i32 %14, %12
  switch i32 %15, label %21 [
    i32 0, label %16
    i32 1, label %17
    i32 -1, label %17
    i32 2, label %20
    i32 -2, label %20
  ]

; <label>:16                                      ; preds = %0
  br label %21

; <label>:17                                      ; preds = %0, %0
  %18 = icmp eq i32 %12, 0
  %19 = select i1 %18, i32 45, i32 124
  br label %21

; <label>:20                                      ; preds = %0, %0
  br label %21

; <label>:21                                      ; preds = %20, %17, %16, %0
  %dirch.0 = phi i32 [ 0, %0 ], [ 92, %20 ], [ %19, %17 ], [ 47, %16 ]
  %22 = bitcast %struct.coord* %start to i64*
  %23 = load i64* %22, align 4
  store i64 %23, i64* bitcast (%struct.coord* @fire_bolt.pos to i64*), align 8
  %24 = icmp ne %struct.coord* %start, getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %union.thing* %bolt, i64 0, i32 0, i32 2, i32 1
  %27 = bitcast i32* %26 to i64*
  %28 = icmp eq %struct.coord* %start, getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)
  %29 = getelementptr inbounds %struct.coord* %start, i64 0, i32 0
  %30 = getelementptr inbounds %struct.coord* %start, i64 0, i32 1
  %31 = lshr i64 %23, 32
  %32 = trunc i64 %31 to i32
  %33 = trunc i64 %23 to i32
  br label %35

.critedge.preheader:                              ; preds = %177
  %34 = icmp ugt %struct.coord* %178, getelementptr inbounds ([6 x %struct.coord]* @fire_bolt.spotpos, i64 0, i64 0)
  br i1 %34, label %.lr.ph, label %.critedge._crit_edge

; <label>:35                                      ; preds = %._crit_edge, %21
  %36 = phi i32 [ %33, %21 ], [ %.pre9, %._crit_edge ]
  %37 = phi i32 [ %32, %21 ], [ %.pre, %._crit_edge ]
  %changed.08 = phi i8 [ 0, %21 ], [ %changed.2, %._crit_edge ]
  %used.07 = phi i8 [ 0, %21 ], [ %used.2, %._crit_edge ]
  %hit_hero.06 = phi i8 [ %25, %21 ], [ %hit_hero.3, %._crit_edge ]
  %c1.05 = phi %struct.coord* [ getelementptr inbounds ([6 x %struct.coord]* @fire_bolt.spotpos, i64 0, i64 0), %21 ], [ %178, %._crit_edge ]
  %38 = load i32* %11, align 4, !tbaa !20
  %39 = add nsw i32 %37, %38
  store i32 %39, i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 1), align 4, !tbaa !20
  %40 = load i32* %13, align 4, !tbaa !21
  %41 = add nsw i32 %36, %40
  store i32 %41, i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 0), align 8, !tbaa !21
  %42 = bitcast %struct.coord* %c1.05 to i64*
  %43 = load i64* bitcast (%struct.coord* @fire_bolt.pos to i64*), align 8
  store i64 %43, i64* %42, align 4
  %44 = load i64* bitcast (%struct.coord* @fire_bolt.pos to i64*), align 8
  %45 = trunc i64 %44 to i32
  %46 = shl i32 %45, 5
  %47 = lshr i64 %44, 32
  %48 = trunc i64 %47 to i32
  %49 = add nsw i32 %46, %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %50, i32 2
  %52 = load %union.thing** %51, align 8, !tbaa !43
  %53 = icmp eq %union.thing* %52, null
  br i1 %53, label %56, label %54

; <label>:54                                      ; preds = %35
  %55 = getelementptr inbounds %union.thing* %52, i64 0, i32 0, i32 5
  br label %58

; <label>:56                                      ; preds = %35
  %57 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %50, i32 0
  br label %58

; <label>:58                                      ; preds = %56, %54
  %.sink.in = phi i8* [ %55, %54 ], [ %57, %56 ]
  %.sink = load i8* %.sink.in, align 1
  %59 = sext i8 %.sink to i32
  switch i32 %59, label %81 [
    i32 43, label %60
    i32 124, label %68
    i32 45, label %68
    i32 32, label %68
  ]

; <label>:60                                      ; preds = %58
  %61 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %62 = trunc i64 %61 to i32
  %63 = icmp eq i32 %62, %45
  br i1 %63, label %64, label %68

; <label>:64                                      ; preds = %60
  %65 = lshr i64 %61, 32
  %66 = trunc i64 %65 to i32
  %67 = icmp eq i32 %66, %48
  br i1 %67, label %81, label %68

; <label>:68                                      ; preds = %64, %60, %58, %58, %58
  %69 = and i8 %changed.08, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %74

; <label>:71                                      ; preds = %68
  %72 = and i8 %hit_hero.06, 1
  %73 = xor i8 %72, 1
  br label %74

; <label>:74                                      ; preds = %71, %68
  %hit_hero.1 = phi i8 [ %hit_hero.06, %68 ], [ %73, %71 ]
  %75 = load i32* %11, align 4, !tbaa !20
  %76 = sub nsw i32 0, %75
  store i32 %76, i32* %11, align 4, !tbaa !20
  %77 = load i32* %13, align 4, !tbaa !21
  %78 = sub nsw i32 0, %77
  store i32 %78, i32* %13, align 4, !tbaa !21
  %79 = getelementptr inbounds %struct.coord* %c1.05, i64 -1
  %80 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([15 x i8]* @.str19971, i64 0, i64 0), i8* %name) #8
  br label %177

; <label>:81                                      ; preds = %64, %58
  %82 = and i8 %hit_hero.06, 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %.critedge3

; <label>:84                                      ; preds = %81
  br i1 %53, label %165, label %85

; <label>:85                                      ; preds = %84
  %86 = and i8 %changed.08, 1
  %87 = xor i8 %86, 1
  %88 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %50, i32 0
  %89 = load i8* %88, align 8, !tbaa !33
  %90 = getelementptr inbounds %union.thing* %52, i64 0, i32 0, i32 6
  store i8 %89, i8* %90, align 1, !tbaa !42
  %91 = call i32 @save_throw(i32 3, %union.thing* %52) #8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %111

; <label>:93                                      ; preds = %85
  %94 = load i64* bitcast (%struct.coord* @fire_bolt.pos to i64*), align 8
  store i64 %94, i64* %27, align 4
  %95 = getelementptr inbounds %union.thing* %52, i64 0, i32 0, i32 4
  %96 = load i8* %95, align 1, !tbaa !37
  %97 = icmp eq i8 %96, 68
  %98 = trunc i64 %94 to i32
  br i1 %97, label %99, label %108

; <label>:99                                      ; preds = %93
  %100 = call i32 @strcmp(i8* %name, i8* getelementptr inbounds ([6 x i8]* @.str15967, i64 0, i64 0)) #8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %108

; <label>:102                                     ; preds = %99
  call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([18 x i8]* @.str20972, i64 0, i64 0)) #8
  %103 = load i8* @terse, align 1, !tbaa !5, !range !7
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %106

; <label>:105                                     ; preds = %102
  call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([16 x i8]* @.str21973, i64 0, i64 0)) #8
  br label %106

; <label>:106                                     ; preds = %105, %102
  %107 = call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  br label %165

; <label>:108                                     ; preds = %99, %93
  %109 = load i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 1), align 4, !tbaa !20
  %110 = call i32 @hit_monster(i32 %109, i32 %98, %union.thing* %bolt) #8
  br label %165

; <label>:111                                     ; preds = %85
  %112 = icmp eq i8 %.sink, 77
  br i1 %112, label %113, label %117

; <label>:113                                     ; preds = %111
  %114 = getelementptr inbounds %union.thing* %52, i64 0, i32 0, i32 5
  %115 = load i8* %114, align 1, !tbaa !44
  %116 = icmp eq i8 %115, 77
  br i1 %116, label %117, label %165

; <label>:117                                     ; preds = %113, %111
  br i1 %28, label %118, label %119

; <label>:118                                     ; preds = %117
  call void @runto(%struct.coord* @fire_bolt.pos) #8
  br label %119

; <label>:119                                     ; preds = %118, %117
  %120 = load i8* @terse, align 1, !tbaa !5, !range !7
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

; <label>:122                                     ; preds = %119
  %123 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([10 x i8]* @.str22974, i64 0, i64 0), i8* %name) #8
  br label %165

; <label>:124                                     ; preds = %119
  %125 = call i8* @set_mname(%union.thing* %52) #8
  %126 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([23 x i8]* @.str23975, i64 0, i64 0), i8* %name, i8* %125) #8
  br label %165

.critedge3:                                       ; preds = %81
  %127 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %128 = trunc i64 %127 to i32
  %129 = icmp eq i32 %45, %128
  br i1 %129, label %130, label %165

; <label>:130                                     ; preds = %.critedge3
  %131 = lshr i64 %127, 32
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %48, %132
  br i1 %133, label %134, label %165

; <label>:134                                     ; preds = %130
  %135 = and i8 %changed.08, 1
  %136 = xor i8 %135, 1
  %137 = call i32 @save(i32 3) #8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %163

; <label>:139                                     ; preds = %134
  %140 = call i32 @roll(i32 6, i32 6) #8
  %141 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %142 = sub nsw i32 %141, %140
  store i32 %142, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %143 = icmp slt i32 %142, 1
  br i1 %143, label %144, label %156

; <label>:144                                     ; preds = %139
  br i1 %28, label %145, label %146

; <label>:145                                     ; preds = %144
  call void @death(i8 signext 98) #8
  br label %156

; <label>:146                                     ; preds = %144
  %147 = load i32* %29, align 4, !tbaa !21
  %148 = shl i32 %147, 5
  %149 = load i32* %30, align 4, !tbaa !20
  %150 = add nsw i32 %148, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %151, i32 2
  %153 = load %union.thing** %152, align 8, !tbaa !43
  %154 = getelementptr inbounds %union.thing* %153, i64 0, i32 0, i32 4
  %155 = load i8* %154, align 1, !tbaa !37
  call void @death(i8 signext %155) #8
  br label %156

; <label>:156                                     ; preds = %146, %145, %139
  %157 = load i8* @terse, align 1, !tbaa !5, !range !7
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %161, label %159

; <label>:159                                     ; preds = %156
  %160 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([12 x i8]* @.str24976, i64 0, i64 0), i8* %name) #8
  br label %165

; <label>:161                                     ; preds = %156
  %162 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([22 x i8]* @.str25977, i64 0, i64 0), i8* %name) #8
  br label %165

; <label>:163                                     ; preds = %134
  %164 = call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([22 x i8]* @.str26978, i64 0, i64 0), i8* %name) #8
  br label %165

; <label>:165                                     ; preds = %163, %161, %159, %130, %.critedge3, %124, %122, %113, %108, %106, %84
  %hit_hero.2 = phi i8 [ 0, %163 ], [ 0, %159 ], [ 0, %161 ], [ %hit_hero.06, %130 ], [ %hit_hero.06, %.critedge3 ], [ 1, %122 ], [ 1, %124 ], [ 1, %113 ], [ 1, %106 ], [ 1, %108 ], [ %hit_hero.06, %84 ]
  %used.1 = phi i8 [ %used.07, %163 ], [ 1, %159 ], [ 1, %161 ], [ %used.07, %130 ], [ %used.07, %.critedge3 ], [ %used.07, %122 ], [ %used.07, %124 ], [ %used.07, %113 ], [ 1, %106 ], [ 1, %108 ], [ %used.07, %84 ]
  %changed.1 = phi i8 [ %136, %163 ], [ %136, %159 ], [ %136, %161 ], [ %changed.08, %130 ], [ %changed.08, %.critedge3 ], [ %87, %122 ], [ %87, %124 ], [ %87, %113 ], [ %87, %106 ], [ %87, %108 ], [ %changed.08, %84 ]
  %166 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %167 = load i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 1), align 4, !tbaa !20
  %168 = load i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 0), align 8, !tbaa !21
  %169 = call i32 @wmove(%struct._win_st* %166, i32 %167, i32 %168) #8
  %170 = icmp eq i32 %169, -1
  br i1 %170, label %174, label %171

; <label>:171                                     ; preds = %165
  %172 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %173 = call i32 @waddch(%struct._win_st* %172, i32 %dirch.0) #8
  br label %174

; <label>:174                                     ; preds = %171, %165
  %175 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %176 = call i32 @wrefresh(%struct._win_st* %175) #8
  br label %177

; <label>:177                                     ; preds = %174, %74
  %c1.1 = phi %struct.coord* [ %c1.05, %174 ], [ %79, %74 ]
  %hit_hero.3 = phi i8 [ %hit_hero.2, %174 ], [ %hit_hero.1, %74 ]
  %used.2 = phi i8 [ %used.1, %174 ], [ %used.07, %74 ]
  %changed.2 = phi i8 [ %changed.1, %174 ], [ 0, %74 ]
  %178 = getelementptr inbounds %struct.coord* %c1.1, i64 1
  %179 = icmp ule %struct.coord* %178, getelementptr inbounds ([6 x %struct.coord]* @fire_bolt.spotpos, i64 0, i64 5)
  %180 = and i8 %used.2, 1
  %181 = icmp eq i8 %180, 0
  %or.cond = and i1 %179, %181
  br i1 %or.cond, label %._crit_edge, label %.critedge.preheader

._crit_edge:                                      ; preds = %177
  %.pre = load i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 1), align 4, !tbaa !20
  %.pre9 = load i32* getelementptr inbounds (%struct.coord* @fire_bolt.pos, i64 0, i32 0), align 8, !tbaa !21
  br label %35

.lr.ph:                                           ; preds = %.critedge, %.critedge.preheader
  %c2.04 = phi %struct.coord* [ %200, %.critedge ], [ getelementptr inbounds ([6 x %struct.coord]* @fire_bolt.spotpos, i64 0, i64 0), %.critedge.preheader ]
  %182 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %183 = getelementptr inbounds %struct.coord* %c2.04, i64 0, i32 1
  %184 = load i32* %183, align 4, !tbaa !20
  %185 = getelementptr inbounds %struct.coord* %c2.04, i64 0, i32 0
  %186 = load i32* %185, align 4, !tbaa !21
  %187 = call i32 @wmove(%struct._win_st* %182, i32 %184, i32 %186) #8
  %188 = icmp eq i32 %187, -1
  br i1 %188, label %.critedge, label %189

; <label>:189                                     ; preds = %.lr.ph
  %190 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %191 = load i32* %185, align 4, !tbaa !21
  %192 = shl i32 %191, 5
  %193 = load i32* %183, align 4, !tbaa !20
  %194 = add nsw i32 %192, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %195, i32 0
  %197 = load i8* %196, align 8, !tbaa !33
  %198 = sext i8 %197 to i32
  %199 = call i32 @waddch(%struct._win_st* %190, i32 %198) #8
  br label %.critedge

.critedge:                                        ; preds = %189, %.lr.ph
  %200 = getelementptr inbounds %struct.coord* %c2.04, i64 1
  %201 = icmp ult %struct.coord* %c2.04, %c1.1
  br i1 %201, label %.lr.ph, label %.critedge._crit_edge

.critedge._crit_edge:                             ; preds = %.critedge, %.critedge.preheader
  call void @llvm.lifetime.end(i64 112, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @drain() #0 {
  %1 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %2 = trunc i64 %1 to i32
  %3 = shl i32 %2, 5
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 0
  %9 = load i8* %8, align 8, !tbaa !33
  %10 = icmp eq i8 %9, 43
  br i1 %10, label %11, label %17

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 1
  %13 = load i8* %12, align 1, !tbaa !36
  %14 = zext i8 %13 to i64
  %15 = and i64 %14, 15
  %16 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %15
  br label %17

; <label>:17                                      ; preds = %11, %0
  %corp.0 = phi %struct.room* [ %16, %11 ], [ null, %0 ]
  %18 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %19 = getelementptr inbounds %struct.room* %18, i64 0, i32 4
  %20 = load i16* %19, align 2, !tbaa !39
  %21 = and i16 %20, 2
  %22 = icmp eq i16 %21, 0
  %mp.02 = load %union.thing** @mlist, align 8
  %23 = icmp eq %union.thing* %mp.02, null
  br i1 %23, label %._crit_edge, label %.lr.ph5

.lr.ph5:                                          ; preds = %._crit_edge6, %17
  %24 = phi %struct.room* [ %.pre, %._crit_edge6 ], [ %18, %17 ]
  %mp.04 = phi %union.thing* [ %mp.0, %._crit_edge6 ], [ %mp.02, %17 ]
  %dp.03 = phi %union.thing** [ %dp.1, %._crit_edge6 ], [ getelementptr inbounds ([40 x %union.thing*]* @drain.drainee, i64 0, i64 0), %17 ]
  %25 = getelementptr inbounds %union.thing* %mp.04, i64 0, i32 0, i32 10
  %26 = load %struct.room** %25, align 8, !tbaa !24
  %27 = icmp eq %struct.room* %26, %24
  %28 = icmp eq %struct.room* %26, %corp.0
  %or.cond = or i1 %27, %28
  br i1 %or.cond, label %48, label %29

; <label>:29                                      ; preds = %.lr.ph5
  br i1 %22, label %50, label %30

; <label>:30                                      ; preds = %29
  %31 = getelementptr inbounds %union.thing* %mp.04, i64 0, i32 0, i32 2, i32 0
  %32 = load i32* %31, align 4, !tbaa !22
  %33 = shl i32 %32, 5
  %34 = getelementptr inbounds %union.thing* %mp.04, i64 0, i32 0, i32 2, i32 1
  %35 = load i32* %34, align 4, !tbaa !23
  %36 = add nsw i32 %33, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %37, i32 0
  %39 = load i8* %38, align 8, !tbaa !33
  %40 = icmp eq i8 %39, 43
  br i1 %40, label %41, label %50

; <label>:41                                      ; preds = %30
  %42 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %37, i32 1
  %43 = load i8* %42, align 1, !tbaa !36
  %44 = zext i8 %43 to i64
  %45 = and i64 %44, 15
  %46 = getelementptr inbounds [0 x %struct.room]* bitcast ([13 x %struct.room]* @passages to [0 x %struct.room]*), i64 0, i64 %45
  %47 = icmp eq %struct.room* %46, %24
  br i1 %47, label %48, label %50

; <label>:48                                      ; preds = %41, %.lr.ph5
  %49 = getelementptr inbounds %union.thing** %dp.03, i64 1
  store %union.thing* %mp.04, %union.thing** %dp.03, align 8, !tbaa !1
  br label %50

; <label>:50                                      ; preds = %48, %41, %30, %29
  %dp.1 = phi %union.thing** [ %49, %48 ], [ %dp.03, %41 ], [ %dp.03, %30 ], [ %dp.03, %29 ]
  %51 = getelementptr inbounds %union.thing* %mp.04, i64 0, i32 0, i32 0
  %mp.0 = load %union.thing** %51, align 8
  %52 = icmp eq %union.thing* %mp.0, null
  br i1 %52, label %._crit_edge, label %._crit_edge6

._crit_edge6:                                     ; preds = %50
  %.pre = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  br label %.lr.ph5

._crit_edge:                                      ; preds = %50, %17
  %dp.0.lcssa = phi %union.thing** [ getelementptr inbounds ([40 x %union.thing*]* @drain.drainee, i64 0, i64 0), %17 ], [ %dp.1, %50 ]
  %53 = ptrtoint %union.thing** %dp.0.lcssa to i64
  %54 = sub i64 %53, ptrtoint ([40 x %union.thing*]* @drain.drainee to i64)
  %55 = lshr exact i64 %54, 3
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

; <label>:58                                      ; preds = %._crit_edge
  %59 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([28 x i8]* @.str17969, i64 0, i64 0)) #8
  br label %.loopexit

; <label>:60                                      ; preds = %._crit_edge
  store %union.thing* null, %union.thing** %dp.0.lcssa, align 8, !tbaa !1
  %61 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %62 = sdiv i32 %61, 2
  store i32 %62, i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 9, i32 4), align 4, !tbaa !64
  %63 = sdiv i32 %62, %56
  %64 = load %union.thing** getelementptr inbounds ([40 x %union.thing*]* @drain.drainee, i64 0, i64 0), align 16, !tbaa !1
  %65 = icmp eq %union.thing* %64, null
  br i1 %65, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %75, %60
  %66 = phi %union.thing* [ %77, %75 ], [ %64, %60 ]
  %dp.21 = phi %union.thing** [ %76, %75 ], [ getelementptr inbounds ([40 x %union.thing*]* @drain.drainee, i64 0, i64 0), %60 ]
  %67 = getelementptr inbounds %union.thing* %66, i64 0, i32 0, i32 9, i32 4
  %68 = load i32* %67, align 4, !tbaa !64
  %69 = sub nsw i32 %68, %63
  store i32 %69, i32* %67, align 4, !tbaa !64
  %70 = icmp slt i32 %69, 1
  br i1 %70, label %71, label %73

; <label>:71                                      ; preds = %.lr.ph
  %72 = tail call zeroext i1 @see_monst(%union.thing* %66) #8
  tail call void @killed(%union.thing* %66, i1 zeroext %72) #8
  br label %75

; <label>:73                                      ; preds = %.lr.ph
  %74 = getelementptr inbounds %union.thing* %66, i64 0, i32 0, i32 2
  tail call void @runto(%struct.coord* %74) #8
  br label %75

; <label>:75                                      ; preds = %73, %71
  %76 = getelementptr inbounds %union.thing** %dp.21, i64 1
  %77 = load %union.thing** %76, align 8, !tbaa !1
  %78 = icmp eq %union.thing* %77, null
  br i1 %78, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %75, %60, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @charge_str(%union.thing* nocapture readonly %obj) #0 {
  %1 = bitcast %union.thing* %obj to %struct.anon.0*
  %2 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 14
  %3 = load i32* %2, align 4, !tbaa !12
  %4 = and i32 %3, 2
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store i8 0, i8* getelementptr inbounds ([20 x i8]* @charge_str.buf, i64 0, i64 0), align 16, !tbaa !28
  br label %16

; <label>:7                                       ; preds = %0
  %8 = load i8* @terse, align 1, !tbaa !5, !range !7
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 6
  %11 = load i32* %10, align 4, !tbaa !70
  br i1 %9, label %14, label %12

; <label>:12                                      ; preds = %7
  %13 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([20 x i8]* @charge_str.buf, i64 0, i64 0), i32 0, i64 20, i8* getelementptr inbounds ([6 x i8]* @.str27979, i64 0, i64 0), i32 %11) #8
  br label %16

; <label>:14                                      ; preds = %7
  %15 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([20 x i8]* @charge_str.buf, i64 0, i64 0), i32 0, i64 20, i8* getelementptr inbounds ([14 x i8]* @.str28980, i64 0, i64 0), i32 %11) #8
  br label %16

; <label>:16                                      ; preds = %14, %12, %6
  ret i8* getelementptr inbounds ([20 x i8]* @charge_str.buf, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define i8* @inv_name(%union.thing* %obj, i1 zeroext %drop) #0 {
  %1 = bitcast %union.thing* %obj to %struct.anon.0*
  %2 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 4
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4, !tbaa !50
  %5 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 2, i32 0
  %6 = load i32* %5, align 4, !tbaa !8
  switch i32 %6, label %169 [
    i32 33, label %7
    i32 61, label %12
    i32 47, label %17
    i32 63, label %24
    i32 58, label %57
    i32 41, label %75
    i32 93, label %122
    i32 44, label %161
    i32 42, label %164
  ]

; <label>:7                                       ; preds = %0
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @p_colors to [0 x i8*]*), i64 0, i64 %8
  %10 = load i8** %9, align 8, !tbaa !1
  %11 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %8
  tail call void @nameit(%union.thing* %obj, i8* getelementptr inbounds ([7 x i8]* @.str985, i64 0, i64 0), i8* %10, %struct.obj_info* %11, i8* (%union.thing*)* @nullstr)
  br label %169

; <label>:12                                      ; preds = %0
  %13 = sext i32 %4 to i64
  %14 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @r_stones to [0 x i8*]*), i64 0, i64 %13
  %15 = load i8** %14, align 8, !tbaa !1
  %16 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %13
  tail call void @nameit(%union.thing* %obj, i8* getelementptr inbounds ([5 x i8]* @.str1986, i64 0, i64 0), i8* %15, %struct.obj_info* %16, i8* (%union.thing*)* @ring_num)
  br label %169

; <label>:17                                      ; preds = %0
  %18 = sext i32 %4 to i64
  %19 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_type to [0 x i8*]*), i64 0, i64 %18
  %20 = load i8** %19, align 8, !tbaa !1
  %21 = getelementptr inbounds [0 x i8*]* bitcast ([14 x i8*]* @ws_made to [0 x i8*]*), i64 0, i64 %18
  %22 = load i8** %21, align 8, !tbaa !1
  %23 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %18
  tail call void @nameit(%union.thing* %obj, i8* %20, i8* %22, %struct.obj_info* %23, i8* (%union.thing*)* @charge_str)
  br label %169

; <label>:24                                      ; preds = %0
  %25 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5
  %26 = bitcast [13 x i8]* %25 to i32*
  %27 = load i32* %26, align 4, !tbaa !78
  %28 = icmp eq i32 %27, 1
  %29 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %28, label %30, label %32

; <label>:30                                      ; preds = %24
  %31 = tail call i8* @__memcpy_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str2987, i64 0, i64 0), i64 10, i64 %29)
  br label %36

; <label>:32                                      ; preds = %24
  %33 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %29, i8* getelementptr inbounds ([12 x i8]* @.str3988, i64 0, i64 0), i32 %27) #8
  %34 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %35 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %34
  br label %36

; <label>:36                                      ; preds = %32, %30
  %pb.0 = phi i8* [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 9), %30 ], [ %35, %32 ]
  %37 = sext i32 %4 to i64
  %38 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %37, i32 4
  %39 = load i8* %38, align 8, !tbaa !102, !range !7
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %46, label %41

; <label>:41                                      ; preds = %36
  %42 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %pb.0, i1 false)
  %43 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %37, i32 0
  %44 = load i8** %43, align 8, !tbaa !66
  %45 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %pb.0, i32 0, i64 %42, i8* getelementptr inbounds ([6 x i8]* @.str4989, i64 0, i64 0), i8* %44) #8
  br label %169

; <label>:46                                      ; preds = %36
  %47 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %37, i32 3
  %48 = load i8** %47, align 8, !tbaa !103
  %49 = icmp eq i8* %48, null
  %50 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %pb.0, i1 false)
  br i1 %49, label %53, label %51

; <label>:51                                      ; preds = %46
  %52 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %pb.0, i32 0, i64 %50, i8* getelementptr inbounds ([10 x i8]* @.str5990, i64 0, i64 0), i8* %48) #8
  br label %169

; <label>:53                                      ; preds = %46
  %54 = getelementptr inbounds [0 x i8*]* bitcast ([18 x i8*]* @s_names to [0 x i8*]*), i64 0, i64 %37
  %55 = load i8** %54, align 8, !tbaa !1
  %56 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %pb.0, i32 0, i64 %50, i8* getelementptr inbounds ([12 x i8]* @.str6991, i64 0, i64 0), i8* %55) #8
  br label %169

; <label>:57                                      ; preds = %0
  %58 = icmp eq i32 %4, 1
  %59 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5
  %60 = bitcast [13 x i8]* %59 to i32*
  %61 = load i32* %60, align 4, !tbaa !78
  %62 = icmp eq i32 %61, 1
  %63 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %58, label %64, label %70

; <label>:64                                      ; preds = %57
  br i1 %62, label %65, label %68

; <label>:65                                      ; preds = %64
  %66 = tail call i8* @vowelstr(i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0)) #8
  %67 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %63, i8* getelementptr inbounds ([7 x i8]* @.str7992, i64 0, i64 0), i8* %66, i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0)) #8
  br label %169

; <label>:68                                      ; preds = %64
  %69 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %63, i8* getelementptr inbounds ([7 x i8]* @.str8993, i64 0, i64 0), i32 %61, i8* getelementptr inbounds ([1024 x i8]* @fruit, i64 0, i64 0)) #8
  br label %169

; <label>:70                                      ; preds = %57
  br i1 %62, label %71, label %73

; <label>:71                                      ; preds = %70
  %72 = tail call i8* @__memcpy_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str9994, i64 0, i64 0), i64 10, i64 %63)
  br label %169

; <label>:73                                      ; preds = %70
  %74 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %63, i8* getelementptr inbounds ([19 x i8]* @.str10995, i64 0, i64 0), i32 %61) #8
  br label %169

; <label>:75                                      ; preds = %0
  %76 = sext i32 %4 to i64
  %77 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %76, i32 0
  %78 = load i8** %77, align 8, !tbaa !66
  %79 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5
  %80 = bitcast [13 x i8]* %79 to i32*
  %81 = load i32* %80, align 4, !tbaa !78
  %82 = icmp sgt i32 %81, 1
  %83 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %82, label %84, label %86

; <label>:84                                      ; preds = %75
  %85 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %83, i8* getelementptr inbounds ([4 x i8]* @.str11996, i64 0, i64 0), i32 %81) #8
  br label %89

; <label>:86                                      ; preds = %75
  %87 = tail call i8* @vowelstr(i8* %78) #8
  %88 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %83, i8* getelementptr inbounds ([5 x i8]* @.str12997, i64 0, i64 0), i8* %87) #8
  br label %89

; <label>:89                                      ; preds = %86, %84
  %90 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %91 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %90
  %92 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 14
  %93 = load i32* %92, align 4, !tbaa !12
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %91, i1 false)
  br i1 %95, label %106, label %97

; <label>:97                                      ; preds = %89
  %98 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 8
  %99 = bitcast i8* %98 to i32*
  %100 = load i32* %99, align 4, !tbaa !68
  %101 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 12
  %102 = bitcast i8* %101 to i32*
  %103 = load i32* %102, align 4, !tbaa !69
  %104 = tail call i8* @num(i32 %100, i32 %103, i8 signext 41) #8
  %105 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %91, i32 0, i64 %96, i8* getelementptr inbounds ([6 x i8]* @.str13998, i64 0, i64 0), i8* %104, i8* %78) #8
  br label %108

; <label>:106                                     ; preds = %89
  %107 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %91, i32 0, i64 %96, i8* getelementptr inbounds ([3 x i8]* @.str14999, i64 0, i64 0), i8* %78) #8
  br label %108

; <label>:108                                     ; preds = %106, %97
  %109 = load i32* %80, align 4, !tbaa !78
  %110 = icmp sgt i32 %109, 1
  br i1 %110, label %111, label %113

; <label>:111                                     ; preds = %108
  %112 = tail call i8* @__strcat_chk(i8* %91, i8* getelementptr inbounds ([2 x i8]* @.str151000, i64 0, i64 0), i64 %96) #8
  br label %113

; <label>:113                                     ; preds = %111, %108
  %114 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 11
  %115 = load %union.thing** %114, align 8
  %116 = icmp eq %union.thing* %115, null
  br i1 %116, label %169, label %117

; <label>:117                                     ; preds = %113
  %118 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %119 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %118
  %120 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %119, i1 false)
  %121 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %119, i32 0, i64 %120, i8* getelementptr inbounds ([11 x i8]* @.str161001, i64 0, i64 0), %union.thing* %115) #8
  br label %169

; <label>:122                                     ; preds = %0
  %123 = sext i32 %4 to i64
  %124 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 %123, i32 0
  %125 = load i8** %124, align 8, !tbaa !66
  %126 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 14
  %127 = load i32* %126, align 4, !tbaa !12
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %129, label %150, label %131

; <label>:131                                     ; preds = %122
  %132 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %123
  %133 = load i32* %132, align 4, !tbaa !38
  %134 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 6
  %135 = load i32* %134, align 4, !tbaa !70
  %136 = sub nsw i32 %133, %135
  %137 = tail call i8* @num(i32 %136, i32 0, i8 signext 93) #8
  %138 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %130, i8* getelementptr inbounds ([8 x i8]* @.str171002, i64 0, i64 0), i8* %137, i8* %125) #8
  %139 = load i8* @terse, align 1, !tbaa !5, !range !7
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %143

; <label>:141                                     ; preds = %131
  %142 = tail call i8* @__strcat_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8]* @.str181003, i64 0, i64 0), i64 %130) #8
  br label %143

; <label>:143                                     ; preds = %141, %131
  %144 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %145 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %144
  %146 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %145, i1 false)
  %147 = load i32* %134, align 4, !tbaa !70
  %148 = sub nsw i32 10, %147
  %149 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %145, i32 0, i64 %146, i8* getelementptr inbounds ([4 x i8]* @.str191004, i64 0, i64 0), i32 %148) #8
  br label %152

; <label>:150                                     ; preds = %122
  %151 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %130, i8* getelementptr inbounds ([3 x i8]* @.str14999, i64 0, i64 0), i8* %125) #8
  br label %152

; <label>:152                                     ; preds = %150, %143
  %pb.1 = phi i8* [ %145, %143 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %150 ]
  %153 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 11
  %154 = load %union.thing** %153, align 8
  %155 = icmp eq %union.thing* %154, null
  br i1 %155, label %169, label %156

; <label>:156                                     ; preds = %152
  %157 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %158 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %157
  %159 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %158, i1 false)
  %160 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %158, i32 0, i64 %159, i8* getelementptr inbounds ([11 x i8]* @.str161001, i64 0, i64 0), %union.thing* %154) #8
  br label %169

; <label>:161                                     ; preds = %0
  %162 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  %163 = tail call i8* @__memcpy_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8]* @.str201005, i64 0, i64 0), i64 21, i64 %162)
  br label %169

; <label>:164                                     ; preds = %0
  %165 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  %166 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 6
  %167 = load i32* %166, align 4, !tbaa !70
  %168 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %165, i8* getelementptr inbounds ([15 x i8]* @.str211006, i64 0, i64 0), i32 %167) #8
  br label %169

; <label>:169                                     ; preds = %164, %161, %156, %152, %117, %113, %73, %71, %68, %65, %53, %51, %41, %17, %12, %7, %0
  %pb.2 = phi i8* [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %0 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %164 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %161 ], [ %158, %156 ], [ %pb.1, %152 ], [ %119, %117 ], [ %91, %113 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %65 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %68 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %71 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %73 ], [ %pb.0, %41 ], [ %pb.0, %51 ], [ %pb.0, %53 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %17 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %12 ], [ getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), %7 ]
  %170 = load i8* @inv_describe, align 1, !tbaa !5, !range !7
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %196, label %172

; <label>:172                                     ; preds = %169
  %173 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %174 = icmp eq %union.thing* %173, %obj
  br i1 %174, label %175, label %178

; <label>:175                                     ; preds = %172
  %176 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %pb.2, i1 false)
  %177 = tail call i8* @__strcat_chk(i8* %pb.2, i8* getelementptr inbounds ([14 x i8]* @.str221007, i64 0, i64 0), i64 %176) #8
  br label %178

; <label>:178                                     ; preds = %175, %172
  %179 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %180 = icmp eq %union.thing* %179, %obj
  br i1 %180, label %181, label %184

; <label>:181                                     ; preds = %178
  %182 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %pb.2, i1 false)
  %183 = tail call i8* @__strcat_chk(i8* %pb.2, i8* getelementptr inbounds ([18 x i8]* @.str231008, i64 0, i64 0), i64 %182) #8
  br label %184

; <label>:184                                     ; preds = %181, %178
  %185 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8, !tbaa !1
  %186 = icmp eq %union.thing* %185, %obj
  br i1 %186, label %187, label %190

; <label>:187                                     ; preds = %184
  %188 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %pb.2, i1 false)
  %189 = tail call i8* @__strcat_chk(i8* %pb.2, i8* getelementptr inbounds ([16 x i8]* @.str241009, i64 0, i64 0), i64 %188) #8
  br label %196

; <label>:190                                     ; preds = %184
  %191 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %192 = icmp eq %union.thing* %191, %obj
  br i1 %192, label %193, label %196

; <label>:193                                     ; preds = %190
  %194 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %pb.2, i1 false)
  %195 = tail call i8* @__strcat_chk(i8* %pb.2, i8* getelementptr inbounds ([17 x i8]* @.str251010, i64 0, i64 0), i64 %194) #8
  br label %196

; <label>:196                                     ; preds = %193, %190, %187, %169
  %197 = load i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %isascii.i.i5 = icmp sgt i8 %197, -1
  br i1 %drop, label %198, label %.critedge

; <label>:198                                     ; preds = %196
  br i1 %isascii.i.i5, label %199, label %204

; <label>:199                                     ; preds = %198
  %200 = sext i8 %197 to i64
  %201 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %200
  %202 = load i32* %201, align 4, !tbaa !38
  %203 = and i32 %202, 32768
  br label %isupper.exit

; <label>:204                                     ; preds = %198
  %205 = sext i8 %197 to i32
  %206 = tail call i32 @__maskrune(i32 %205, i64 32768) #8
  br label %isupper.exit

isupper.exit:                                     ; preds = %204, %199
  %.sink.i.in.i = phi i32 [ %203, %199 ], [ %206, %204 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %225, label %207

; <label>:207                                     ; preds = %isupper.exit
  %208 = load i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %209 = sext i8 %208 to i32
  %210 = tail call i32 @__tolower(i32 %209) #8
  %211 = trunc i32 %210 to i8
  store i8 %211, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  br label %225

.critedge:                                        ; preds = %196
  br i1 %isascii.i.i5, label %212, label %217

; <label>:212                                     ; preds = %.critedge
  %213 = sext i8 %197 to i64
  %214 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %213
  %215 = load i32* %214, align 4, !tbaa !38
  %216 = and i32 %215, 4096
  br label %islower.exit

; <label>:217                                     ; preds = %.critedge
  %218 = sext i8 %197 to i32
  %219 = tail call i32 @__maskrune(i32 %218, i64 4096) #8
  br label %islower.exit

islower.exit:                                     ; preds = %217, %212
  %.sink.i.in.i2 = phi i32 [ %216, %212 ], [ %219, %217 ]
  %.sink.i.i3 = icmp eq i32 %.sink.i.in.i2, 0
  br i1 %.sink.i.i3, label %225, label %220

; <label>:220                                     ; preds = %islower.exit
  %221 = load i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  %222 = sext i8 %221 to i32
  %223 = tail call i32 @__toupper(i32 %222) #8
  %224 = trunc i32 %223 to i8
  store i8 %224, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), align 1, !tbaa !28
  br label %225

; <label>:225                                     ; preds = %220, %islower.exit, %207, %isupper.exit
  store i8 0, i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 1023), align 1, !tbaa !28
  ret i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define void @nameit(%union.thing* %obj, i8* %type, i8* %which, %struct.obj_info* nocapture readonly %op, i8* (%union.thing*)* nocapture %prfunc) #0 {
  %1 = getelementptr inbounds %struct.obj_info* %op, i64 0, i32 4
  %2 = load i8* %1, align 1, !tbaa !102, !range !7
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.obj_info* %op, i64 0, i32 3
  %6 = load i8** %5, align 8, !tbaa !103
  %7 = icmp eq i8* %6, null
  br i1 %7, label %37, label %8

; <label>:8                                       ; preds = %4, %0
  %9 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5
  %10 = bitcast [13 x i8]* %9 to i32*
  %11 = load i32* %10, align 4, !tbaa !78
  %12 = icmp eq i32 %11, 1
  %13 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %12, label %14, label %16

; <label>:14                                      ; preds = %8
  %15 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %13, i8* getelementptr inbounds ([6 x i8]* @.str441029, i64 0, i64 0), i8* %type) #8
  br label %18

; <label>:16                                      ; preds = %8
  %17 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %13, i8* getelementptr inbounds ([8 x i8]* @.str451030, i64 0, i64 0), i32 %11, i8* %type) #8
  br label %18

; <label>:18                                      ; preds = %16, %14
  %19 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %20 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %19
  %21 = load i8* %1, align 1, !tbaa !102, !range !7
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %29, label %23

; <label>:23                                      ; preds = %18
  %24 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %20, i1 false)
  %25 = getelementptr inbounds %struct.obj_info* %op, i64 0, i32 0
  %26 = load i8** %25, align 8, !tbaa !66
  %27 = tail call i8* %prfunc(%union.thing* %obj) #8
  %28 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %20, i32 0, i64 %24, i8* getelementptr inbounds ([12 x i8]* @.str461031, i64 0, i64 0), i8* %26, i8* %27, i8* %which) #8
  br label %48

; <label>:29                                      ; preds = %18
  %30 = getelementptr inbounds %struct.obj_info* %op, i64 0, i32 3
  %31 = load i8** %30, align 8, !tbaa !103
  %32 = icmp eq i8* %31, null
  br i1 %32, label %48, label %33

; <label>:33                                      ; preds = %29
  %34 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %20, i1 false)
  %35 = tail call i8* %prfunc(%union.thing* %obj) #8
  %36 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %20, i32 0, i64 %34, i8* getelementptr inbounds ([16 x i8]* @.str471032, i64 0, i64 0), i8* %31, i8* %35, i8* %which) #8
  br label %48

; <label>:37                                      ; preds = %4
  %38 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5
  %39 = bitcast [13 x i8]* %38 to i32*
  %40 = load i32* %39, align 4, !tbaa !78
  %41 = icmp eq i32 %40, 1
  %42 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %41, label %43, label %46

; <label>:43                                      ; preds = %37
  %44 = tail call i8* @vowelstr(i8* %which) #8
  %45 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %42, i8* getelementptr inbounds ([10 x i8]* @.str481033, i64 0, i64 0), i8* %44, i8* %which, i8* %type) #8
  br label %48

; <label>:46                                      ; preds = %37
  %47 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %42, i8* getelementptr inbounds ([10 x i8]* @.str491034, i64 0, i64 0), i32 %40, i8* %which, i8* %type) #8
  br label %48

; <label>:48                                      ; preds = %46, %43, %33, %29, %23
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define i8* @nullstr(%union.thing* nocapture readnone %ignored) #3 {
  ret i8* getelementptr inbounds ([1 x i8]* @.str351020, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define void @drop() #0 {
  %1 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %2 = trunc i64 %1 to i32
  %3 = shl i32 %2, 5
  %4 = lshr i64 %1, 32
  %5 = trunc i64 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %7, i32 0
  %9 = load i8* %8, align 8, !tbaa !33
  switch i8 %9, label %10 [
    i8 46, label %12
    i8 35, label %12
  ]

; <label>:10                                      ; preds = %0
  store i8 0, i8* @after, align 1, !tbaa !5
  %11 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([33 x i8]* @.str261011, i64 0, i64 0)) #8
  br label %46

; <label>:12                                      ; preds = %0, %0
  %13 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([5 x i8]* @.str271012, i64 0, i64 0), i32 0) #8
  %14 = icmp eq %union.thing* %13, null
  br i1 %14, label %46, label %15

; <label>:15                                      ; preds = %12
  %16 = tail call zeroext i1 @dropcheck(%union.thing* %13)
  br i1 %16, label %17, label %46

; <label>:17                                      ; preds = %15
  %18 = getelementptr inbounds %union.thing* %13, i64 0, i32 0, i32 2, i32 0
  %19 = load i32* %18, align 4, !tbaa !8
  %switch.tableidx = add i32 %19, -33
  %20 = icmp ult i32 %switch.tableidx, 31
  br i1 %20, label %switch.lookup, label %22

switch.lookup:                                    ; preds = %17
  %switch.cast = trunc i32 %switch.tableidx to i31
  %switch.downshift = lshr i31 1040187390, %switch.cast
  %21 = and i31 %switch.downshift, 1
  %switch.masked = icmp ne i31 %21, 0
  br label %22

; <label>:22                                      ; preds = %switch.lookup, %17
  %23 = phi i1 [ %switch.masked, %switch.lookup ], [ true, %17 ]
  %24 = tail call %union.thing* @leave_pack(%union.thing* %13, i1 zeroext true, i1 zeroext %23) #8
  tail call void @_attach(%union.thing** @lvl_obj, %union.thing* %24) #8
  %25 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 2, i32 0
  %26 = load i32* %25, align 4, !tbaa !8
  %27 = trunc i32 %26 to i8
  %28 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %29 = trunc i64 %28 to i32
  %30 = shl i32 %29, 5
  %31 = lshr i64 %28, 32
  %32 = trunc i64 %31 to i32
  %33 = add nsw i32 %30, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %34, i32 0
  store i8 %27, i8* %35, align 8, !tbaa !33
  %36 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %34, i32 1
  %37 = load i8* %36, align 1, !tbaa !36
  %38 = or i8 %37, 32
  store i8 %38, i8* %36, align 1, !tbaa !36
  %39 = getelementptr inbounds %union.thing* %24, i64 0, i32 0, i32 2, i32 1
  %40 = bitcast i32* %39 to i64*
  store i64 %28, i64* %40, align 4
  %41 = icmp eq i32 %26, 44
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %22
  store i8 0, i8* @amulet, align 1, !tbaa !5
  br label %43

; <label>:43                                      ; preds = %42, %22
  %44 = tail call i8* @inv_name(%union.thing* %24, i1 zeroext true)
  %45 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([11 x i8]* @.str281013, i64 0, i64 0), i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  br label %46

; <label>:46                                      ; preds = %43, %15, %12, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @dropcheck(%union.thing* readonly %obj) #0 {
  %1 = icmp eq %union.thing* %obj, null
  br i1 %1, label %35, label %2

; <label>:2                                       ; preds = %0
  %3 = load %union.thing** @cur_armor, align 8, !tbaa !1
  %4 = icmp eq %union.thing* %3, %obj
  %5 = load %union.thing** @cur_weapon, align 8
  %6 = icmp eq %union.thing* %5, %obj
  %or.cond = or i1 %4, %6
  %7 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 0), align 8
  %8 = icmp eq %union.thing* %7, %obj
  %or.cond3 = or i1 %or.cond, %8
  br i1 %or.cond3, label %12, label %9

; <label>:9                                       ; preds = %2
  %10 = load %union.thing** getelementptr inbounds ([2 x %union.thing*]* @cur_ring, i64 0, i64 1), align 8, !tbaa !1
  %11 = icmp eq %union.thing* %10, %obj
  br i1 %11, label %12, label %35

; <label>:12                                      ; preds = %9, %2
  %13 = bitcast %union.thing* %obj to %struct.anon.0*
  %14 = getelementptr inbounds %struct.anon.0* %13, i64 0, i32 14
  %15 = load i32* %14, align 4, !tbaa !12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %12
  %19 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([36 x i8]* @.str291014, i64 0, i64 0)) #8
  br label %35

; <label>:20                                      ; preds = %12
  br i1 %6, label %21, label %22

; <label>:21                                      ; preds = %20
  store %union.thing* null, %union.thing** @cur_weapon, align 8, !tbaa !1
  br label %35

; <label>:22                                      ; preds = %20
  br i1 %4, label %23, label %24

; <label>:23                                      ; preds = %22
  tail call void (...)* bitcast (void ()* @waste_time to void (...)*)() #8
  store %union.thing* null, %union.thing** @cur_armor, align 8, !tbaa !1
  br label %35

; <label>:24                                      ; preds = %22
  %not. = icmp ne %union.thing* %7, %obj
  %25 = zext i1 %not. to i64
  %26 = getelementptr inbounds [0 x %union.thing*]* bitcast ([2 x %union.thing*]* @cur_ring to [0 x %union.thing*]*), i64 0, i64 %25
  store %union.thing* null, %union.thing** %26, align 8, !tbaa !1
  %27 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 4
  %28 = bitcast i8* %27 to i32*
  %29 = load i32* %28, align 4, !tbaa !50
  switch i32 %29, label %35 [
    i32 1, label %30
    i32 4, label %34
  ]

; <label>:30                                      ; preds = %24
  %31 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 6
  %32 = load i32* %31, align 4, !tbaa !70
  %33 = sub nsw i32 0, %32
  tail call void @chg_str(i32 %33) #8
  br label %35

; <label>:34                                      ; preds = %24
  tail call void (...)* bitcast (void ()* @unsee to void (...)*)() #8
  tail call void @extinguish(void (...)* bitcast (void ()* @unsee to void (...)*)) #8
  br label %35

; <label>:35                                      ; preds = %34, %30, %24, %23, %21, %18, %9, %0
  %.0 = phi i1 [ false, %18 ], [ true, %0 ], [ true, %9 ], [ true, %23 ], [ true, %24 ], [ true, %34 ], [ true, %30 ], [ true, %21 ]
  ret i1 %.0
}

; Function Attrs: nounwind ssp uwtable
define %union.thing* @new_thing() #0 {
  %1 = tail call %union.thing* (...)* bitcast (%union.thing* ()* @new_item to %union.thing* (...)*)() #8
  %2 = bitcast %union.thing* %1 to %struct.anon.0*
  %3 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 0, i32* %4, align 4, !tbaa !68
  %5 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 4, !tbaa !69
  %7 = getelementptr inbounds %struct.anon.0* %2, i64 0, i32 7, i64 0
  %8 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %7, i1 false)
  %9 = tail call i8* @__strncpy_chk(i8* %7, i8* getelementptr inbounds ([4 x i8]* @.str301015, i64 0, i64 0), i64 8, i64 %8) #8
  %10 = getelementptr inbounds %struct.anon.0* %2, i64 0, i32 8, i64 0
  %11 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %10, i1 false)
  %12 = tail call i8* @__strncpy_chk(i8* %10, i8* getelementptr inbounds ([4 x i8]* @.str301015, i64 0, i64 0), i64 8, i64 %11) #8
  %13 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 6
  store i32 11, i32* %13, align 4, !tbaa !70
  %14 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5
  %15 = bitcast [13 x i8]* %14 to i32*
  store i32 1, i32* %15, align 4, !tbaa !78
  %16 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 10
  %17 = bitcast %struct.room** %16 to i32*
  store i32 0, i32* %17, align 4, !tbaa !116
  %18 = getelementptr inbounds %struct.anon.0* %2, i64 0, i32 14
  store i32 0, i32* %18, align 4, !tbaa !12
  %19 = load i32* @no_food, align 4, !tbaa !38
  %20 = icmp sgt i32 %19, 3
  br i1 %20, label %.thread, label %21

; <label>:21                                      ; preds = %0
  %22 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i

; <label>:23                                      ; preds = %.lr.ph.i
  %24 = icmp ult %struct.obj_info* %28, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 7)
  br i1 %24, label %.lr.ph.i, label %29

.lr.ph.i:                                         ; preds = %23, %21
  %.01.i = phi %struct.obj_info* [ %28, %23 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 0), %21 ]
  %25 = getelementptr inbounds %struct.obj_info* %.01.i, i64 0, i32 1
  %26 = load i32* %25, align 4, !tbaa !83
  %27 = icmp slt i32 %22, %26
  %28 = getelementptr inbounds %struct.obj_info* %.01.i, i64 1
  br i1 %27, label %29, label %23

; <label>:29                                      ; preds = %.lr.ph.i, %23
  %.0.lcssa.i = phi %struct.obj_info* [ %.01.i, %.lr.ph.i ], [ %28, %23 ]
  %30 = icmp eq %struct.obj_info* %.0.lcssa.i, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to [0 x %struct.obj_info]*), i64 0, i64 7)
  %31 = ptrtoint %struct.obj_info* %.0.lcssa.i to i64
  %32 = select i1 %30, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to i64), i64 %31
  %33 = sub i64 %32, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @things to i64)
  %34 = lshr exact i64 %33, 5
  %35 = trunc i64 %34 to i32
  switch i32 %35, label %184 [
    i32 0, label %36
    i32 1, label %53
    i32 2, label %.thread
    i32 3, label %77
    i32 4, label %106
    i32 5, label %141
    i32 6, label %167
  ]

; <label>:36                                      ; preds = %29
  %37 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 33, i32* %37, align 4, !tbaa !8
  %38 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i2

; <label>:39                                      ; preds = %.lr.ph.i2
  %40 = icmp ult %struct.obj_info* %44, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  br i1 %40, label %.lr.ph.i2, label %pick_one.exit5

.lr.ph.i2:                                        ; preds = %39, %36
  %.01.i1 = phi %struct.obj_info* [ %44, %39 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 0), %36 ]
  %41 = getelementptr inbounds %struct.obj_info* %.01.i1, i64 0, i32 1
  %42 = load i32* %41, align 4, !tbaa !83
  %43 = icmp slt i32 %38, %42
  %44 = getelementptr inbounds %struct.obj_info* %.01.i1, i64 1
  br i1 %43, label %pick_one.exit5, label %39

pick_one.exit5:                                   ; preds = %.lr.ph.i2, %39
  %.0.lcssa.i3 = phi %struct.obj_info* [ %.01.i1, %.lr.ph.i2 ], [ %44, %39 ]
  %45 = icmp eq %struct.obj_info* %.0.lcssa.i3, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  %46 = ptrtoint %struct.obj_info* %.0.lcssa.i3 to i64
  %47 = select i1 %45, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to i64), i64 %46
  %48 = sub i64 %47, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to i64)
  %49 = lshr exact i64 %48, 5
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 4, !tbaa !50
  br label %184

; <label>:53                                      ; preds = %29
  %54 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 63, i32* %54, align 4, !tbaa !8
  %55 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i7

; <label>:56                                      ; preds = %.lr.ph.i7
  %57 = icmp ult %struct.obj_info* %61, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 18)
  br i1 %57, label %.lr.ph.i7, label %pick_one.exit10

.lr.ph.i7:                                        ; preds = %56, %53
  %.01.i6 = phi %struct.obj_info* [ %61, %56 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 0), %53 ]
  %58 = getelementptr inbounds %struct.obj_info* %.01.i6, i64 0, i32 1
  %59 = load i32* %58, align 4, !tbaa !83
  %60 = icmp slt i32 %55, %59
  %61 = getelementptr inbounds %struct.obj_info* %.01.i6, i64 1
  br i1 %60, label %pick_one.exit10, label %56

pick_one.exit10:                                  ; preds = %.lr.ph.i7, %56
  %.0.lcssa.i8 = phi %struct.obj_info* [ %.01.i6, %.lr.ph.i7 ], [ %61, %56 ]
  %62 = icmp eq %struct.obj_info* %.0.lcssa.i8, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 18)
  %63 = ptrtoint %struct.obj_info* %.0.lcssa.i8 to i64
  %64 = select i1 %62, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to i64), i64 %63
  %65 = sub i64 %64, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to i64)
  %66 = lshr exact i64 %65, 5
  %67 = trunc i64 %66 to i32
  %68 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %69 = bitcast i8* %68 to i32*
  store i32 %67, i32* %69, align 4, !tbaa !50
  br label %184

.thread:                                          ; preds = %29, %0
  %70 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 58, i32* %70, align 4, !tbaa !8
  store i32 0, i32* @no_food, align 4, !tbaa !38
  %71 = tail call i32 @rnd(i32 10) #8
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %74 = bitcast i8* %73 to i32*
  br i1 %72, label %76, label %75

; <label>:75                                      ; preds = %.thread
  store i32 0, i32* %74, align 4, !tbaa !50
  br label %184

; <label>:76                                      ; preds = %.thread
  store i32 1, i32* %74, align 4, !tbaa !50
  br label %184

; <label>:77                                      ; preds = %29
  %78 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i12

; <label>:79                                      ; preds = %.lr.ph.i12
  %80 = icmp ult %struct.obj_info* %84, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 9)
  br i1 %80, label %.lr.ph.i12, label %pick_one.exit15

.lr.ph.i12:                                       ; preds = %79, %77
  %.01.i11 = phi %struct.obj_info* [ %84, %79 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 0), %77 ]
  %81 = getelementptr inbounds %struct.obj_info* %.01.i11, i64 0, i32 1
  %82 = load i32* %81, align 4, !tbaa !83
  %83 = icmp slt i32 %78, %82
  %84 = getelementptr inbounds %struct.obj_info* %.01.i11, i64 1
  br i1 %83, label %pick_one.exit15, label %79

pick_one.exit15:                                  ; preds = %.lr.ph.i12, %79
  %.0.lcssa.i13 = phi %struct.obj_info* [ %.01.i11, %.lr.ph.i12 ], [ %84, %79 ]
  %85 = icmp eq %struct.obj_info* %.0.lcssa.i13, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 9)
  %86 = ptrtoint %struct.obj_info* %.0.lcssa.i13 to i64
  %87 = select i1 %85, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to i64), i64 %86
  %88 = sub i64 %87, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to i64)
  %89 = lshr exact i64 %88, 5
  %90 = trunc i64 %89 to i32
  tail call void @init_weapon(%union.thing* %1, i32 %90) #8
  %91 = tail call i32 @rnd(i32 100) #8
  %92 = icmp slt i32 %91, 10
  br i1 %92, label %93, label %99

; <label>:93                                      ; preds = %pick_one.exit15
  %94 = load i32* %18, align 4, !tbaa !12
  %95 = or i32 %94, 1
  store i32 %95, i32* %18, align 4, !tbaa !12
  %96 = tail call i32 @rnd(i32 3) #8
  %97 = load i32* %4, align 4, !tbaa !68
  %.neg31 = xor i32 %96, -1
  %98 = add i32 %97, %.neg31
  store i32 %98, i32* %4, align 4, !tbaa !68
  br label %184

; <label>:99                                      ; preds = %pick_one.exit15
  %100 = icmp slt i32 %91, 15
  br i1 %100, label %101, label %184

; <label>:101                                     ; preds = %99
  %102 = tail call i32 @rnd(i32 3) #8
  %103 = add nsw i32 %102, 1
  %104 = load i32* %4, align 4, !tbaa !68
  %105 = add nsw i32 %103, %104
  store i32 %105, i32* %4, align 4, !tbaa !68
  br label %184

; <label>:106                                     ; preds = %29
  %107 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 93, i32* %107, align 4, !tbaa !8
  %108 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i17

; <label>:109                                     ; preds = %.lr.ph.i17
  %110 = icmp ult %struct.obj_info* %114, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 8)
  br i1 %110, label %.lr.ph.i17, label %pick_one.exit20

.lr.ph.i17:                                       ; preds = %109, %106
  %.01.i16 = phi %struct.obj_info* [ %114, %109 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 0), %106 ]
  %111 = getelementptr inbounds %struct.obj_info* %.01.i16, i64 0, i32 1
  %112 = load i32* %111, align 4, !tbaa !83
  %113 = icmp slt i32 %108, %112
  %114 = getelementptr inbounds %struct.obj_info* %.01.i16, i64 1
  br i1 %113, label %pick_one.exit20, label %109

pick_one.exit20:                                  ; preds = %.lr.ph.i17, %109
  %.0.lcssa.i18 = phi %struct.obj_info* [ %.01.i16, %.lr.ph.i17 ], [ %114, %109 ]
  %115 = icmp eq %struct.obj_info* %.0.lcssa.i18, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to [0 x %struct.obj_info]*), i64 0, i64 8)
  %116 = ptrtoint %struct.obj_info* %.0.lcssa.i18 to i64
  %117 = select i1 %115, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to i64), i64 %116
  %118 = sub i64 %117, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @arm_info to i64)
  %119 = lshr exact i64 %118, 5
  %120 = trunc i64 %119 to i32
  %121 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %122 = bitcast i8* %121 to i32*
  store i32 %120, i32* %122, align 4, !tbaa !50
  %sext = shl i64 %118, 27
  %123 = ashr exact i64 %sext, 32
  %124 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @a_class to [0 x i32]*), i64 0, i64 %123
  %125 = load i32* %124, align 4, !tbaa !38
  store i32 %125, i32* %13, align 4, !tbaa !70
  %126 = tail call i32 @rnd(i32 100) #8
  %127 = icmp slt i32 %126, 20
  br i1 %127, label %128, label %135

; <label>:128                                     ; preds = %pick_one.exit20
  %129 = load i32* %18, align 4, !tbaa !12
  %130 = or i32 %129, 1
  store i32 %130, i32* %18, align 4, !tbaa !12
  %131 = tail call i32 @rnd(i32 3) #8
  %132 = add nsw i32 %131, 1
  %133 = load i32* %13, align 4, !tbaa !70
  %134 = add nsw i32 %132, %133
  store i32 %134, i32* %13, align 4, !tbaa !70
  br label %184

; <label>:135                                     ; preds = %pick_one.exit20
  %136 = icmp slt i32 %126, 28
  br i1 %136, label %137, label %184

; <label>:137                                     ; preds = %135
  %138 = tail call i32 @rnd(i32 3) #8
  %139 = load i32* %13, align 4, !tbaa !70
  %.neg33 = xor i32 %138, -1
  %140 = add i32 %139, %.neg33
  store i32 %140, i32* %13, align 4, !tbaa !70
  br label %184

; <label>:141                                     ; preds = %29
  %142 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 61, i32* %142, align 4, !tbaa !8
  %143 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i22

; <label>:144                                     ; preds = %.lr.ph.i22
  %145 = icmp ult %struct.obj_info* %149, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  br i1 %145, label %.lr.ph.i22, label %pick_one.exit25

.lr.ph.i22:                                       ; preds = %144, %141
  %.01.i21 = phi %struct.obj_info* [ %149, %144 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 0), %141 ]
  %146 = getelementptr inbounds %struct.obj_info* %.01.i21, i64 0, i32 1
  %147 = load i32* %146, align 4, !tbaa !83
  %148 = icmp slt i32 %143, %147
  %149 = getelementptr inbounds %struct.obj_info* %.01.i21, i64 1
  br i1 %148, label %pick_one.exit25, label %144

pick_one.exit25:                                  ; preds = %.lr.ph.i22, %144
  %.0.lcssa.i23 = phi %struct.obj_info* [ %.01.i21, %.lr.ph.i22 ], [ %149, %144 ]
  %150 = icmp eq %struct.obj_info* %.0.lcssa.i23, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  %151 = ptrtoint %struct.obj_info* %.0.lcssa.i23 to i64
  %152 = select i1 %150, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to i64), i64 %151
  %153 = sub i64 %152, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to i64)
  %154 = lshr exact i64 %153, 5
  %155 = trunc i64 %154 to i32
  %156 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %157 = bitcast i8* %156 to i32*
  store i32 %155, i32* %157, align 4, !tbaa !50
  switch i32 %155, label %184 [
    i32 1, label %158
    i32 0, label %158
    i32 7, label %158
    i32 8, label %158
    i32 6, label %164
    i32 11, label %164
  ]

; <label>:158                                     ; preds = %pick_one.exit25, %pick_one.exit25, %pick_one.exit25, %pick_one.exit25
  %159 = tail call i32 @rnd(i32 3) #8
  store i32 %159, i32* %13, align 4, !tbaa !70
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %184

; <label>:161                                     ; preds = %158
  store i32 -1, i32* %13, align 4, !tbaa !70
  %162 = load i32* %18, align 4, !tbaa !12
  %163 = or i32 %162, 1
  store i32 %163, i32* %18, align 4, !tbaa !12
  br label %184

; <label>:164                                     ; preds = %pick_one.exit25, %pick_one.exit25
  %165 = load i32* %18, align 4, !tbaa !12
  %166 = or i32 %165, 1
  store i32 %166, i32* %18, align 4, !tbaa !12
  br label %184

; <label>:167                                     ; preds = %29
  %168 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 2, i32 0
  store i32 47, i32* %168, align 4, !tbaa !8
  %169 = tail call i32 @rnd(i32 100) #8
  br label %.lr.ph.i27

; <label>:170                                     ; preds = %.lr.ph.i27
  %171 = icmp ult %struct.obj_info* %175, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  br i1 %171, label %.lr.ph.i27, label %pick_one.exit30

.lr.ph.i27:                                       ; preds = %170, %167
  %.01.i26 = phi %struct.obj_info* [ %175, %170 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 0), %167 ]
  %172 = getelementptr inbounds %struct.obj_info* %.01.i26, i64 0, i32 1
  %173 = load i32* %172, align 4, !tbaa !83
  %174 = icmp slt i32 %169, %173
  %175 = getelementptr inbounds %struct.obj_info* %.01.i26, i64 1
  br i1 %174, label %pick_one.exit30, label %170

pick_one.exit30:                                  ; preds = %.lr.ph.i27, %170
  %.0.lcssa.i28 = phi %struct.obj_info* [ %.01.i26, %.lr.ph.i27 ], [ %175, %170 ]
  %176 = icmp eq %struct.obj_info* %.0.lcssa.i28, getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 14)
  %177 = ptrtoint %struct.obj_info* %.0.lcssa.i28 to i64
  %178 = select i1 %176, i64 ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to i64), i64 %177
  %179 = sub i64 %178, ptrtoint (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to i64)
  %180 = lshr exact i64 %179, 5
  %181 = trunc i64 %180 to i32
  %182 = getelementptr inbounds %union.thing* %1, i64 0, i32 0, i32 9, i32 5, i64 4
  %183 = bitcast i8* %182 to i32*
  store i32 %181, i32* %183, align 4, !tbaa !50
  tail call void @fix_stick(%union.thing* %1) #8
  br label %184

; <label>:184                                     ; preds = %pick_one.exit30, %164, %161, %158, %pick_one.exit25, %137, %135, %128, %101, %99, %93, %76, %75, %pick_one.exit10, %pick_one.exit5, %29
  ret %union.thing* %1
}

; Function Attrs: nounwind ssp uwtable
define i32 @pick_one(%struct.obj_info* %info, i32 %nitems) #0 {
  %1 = sext i32 %nitems to i64
  %2 = getelementptr inbounds %struct.obj_info* %info, i64 %1
  %3 = tail call i32 @rnd(i32 100) #8
  %4 = icmp sgt i32 %nitems, 0
  br i1 %4, label %.lr.ph, label %split2

; <label>:5                                       ; preds = %.lr.ph
  %6 = icmp ult %struct.obj_info* %10, %2
  br i1 %6, label %.lr.ph, label %split2

.lr.ph:                                           ; preds = %5, %0
  %.01 = phi %struct.obj_info* [ %10, %5 ], [ %info, %0 ]
  %7 = getelementptr inbounds %struct.obj_info* %.01, i64 0, i32 1
  %8 = load i32* %7, align 4, !tbaa !83
  %9 = icmp slt i32 %3, %8
  %10 = getelementptr inbounds %struct.obj_info* %.01, i64 1
  br i1 %9, label %split2, label %5

split2:                                           ; preds = %.lr.ph, %5, %0
  %.0.lcssa = phi %struct.obj_info* [ %info, %0 ], [ %10, %5 ], [ %.01, %.lr.ph ]
  %11 = icmp eq %struct.obj_info* %.0.lcssa, %2
  %info..0 = select i1 %11, %struct.obj_info* %info, %struct.obj_info* %.0.lcssa
  %12 = ptrtoint %struct.obj_info* %info..0 to i64
  %13 = ptrtoint %struct.obj_info* %info to i64
  %14 = sub i64 %12, %13
  %15 = lshr exact i64 %14, 5
  %16 = trunc i64 %15 to i32
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define void @discovered() #0 {
  br label %.backedge

.backedge:                                        ; preds = %.critedge1, %.critedge, %0
  %1 = load i8* @terse, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %.backedge
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([5 x i8]* @.str311016, i64 0, i64 0)) #8
  br label %4

; <label>:4                                       ; preds = %3, %.backedge
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([10 x i8]* @.str321017, i64 0, i64 0)) #8
  %5 = load i8* @terse, align 1, !tbaa !5, !range !7
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([30 x i8]* @.str331018, i64 0, i64 0)) #8
  br label %8

; <label>:8                                       ; preds = %7, %4
  %9 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([14 x i8]* @.str341019, i64 0, i64 0)) #8
  %10 = tail call signext i8 (...)* bitcast (i8 ()* @readchar to i8 (...)*)() #8
  %11 = sext i8 %10 to i32
  switch i32 %11, label %14 [
    i32 27, label %12
    i32 33, label %19
    i32 63, label %19
    i32 61, label %19
    i32 47, label %19
    i32 42, label %19
  ]

; <label>:12                                      ; preds = %8
  %13 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str351020, i64 0, i64 0)) #8
  br label %50

; <label>:14                                      ; preds = %8
  %15 = load i8* @terse, align 1, !tbaa !5, !range !7
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %.critedge1, label %.critedge

.critedge:                                        ; preds = %14
  %17 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([11 x i8]* @.str361021, i64 0, i64 0)) #8
  br label %.backedge

.critedge1:                                       ; preds = %14
  %18 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([45 x i8]* @.str371022, i64 0, i64 0), i32 33, i32 63, i32 61, i32 47) #8
  br label %.backedge

; <label>:19                                      ; preds = %8, %8, %8, %8, %8
  %20 = icmp eq i8 %10, 42
  br i1 %20, label %21, label %37

; <label>:21                                      ; preds = %19
  tail call void @print_disc(i8 signext 33)
  %22 = tail call signext i8 @add_line(i8* getelementptr inbounds ([1 x i8]* @.str351020, i64 0, i64 0), i8* null)
  tail call void @print_disc(i8 signext 63)
  %23 = tail call signext i8 @add_line(i8* getelementptr inbounds ([1 x i8]* @.str351020, i64 0, i64 0), i8* null)
  tail call void @print_disc(i8 signext 61)
  %24 = tail call signext i8 @add_line(i8* getelementptr inbounds ([1 x i8]* @.str351020, i64 0, i64 0), i8* null)
  tail call void @print_disc(i8 signext 47)
  %25 = load i32* @inv_type, align 4, !tbaa !38
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %end_line.exit, label %27

; <label>:27                                      ; preds = %21
  %28 = load i32* @line_cnt, align 4, !tbaa !38
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %35

; <label>:30                                      ; preds = %27
  %.b.i = load i1* @newpage, align 1
  br i1 %.b.i, label %35, label %31

; <label>:31                                      ; preds = %30
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %32 = load i8** @lastfmt, align 8, !tbaa !1
  %33 = load i8** @lastarg, align 8, !tbaa !1
  %34 = tail call i32 (i8*, ...)* @msg(i8* %32, i8* %33) #8
  br label %end_line.exit

; <label>:35                                      ; preds = %30, %27
  %36 = tail call signext i8 @add_line(i8* null, i8* null) #8
  br label %end_line.exit

end_line.exit:                                    ; preds = %35, %31, %21
  store i32 0, i32* @line_cnt, align 4, !tbaa !38
  store i1 false, i1* @newpage, align 1
  br label %50

; <label>:37                                      ; preds = %19
  tail call void @print_disc(i8 signext %10)
  %38 = load i32* @inv_type, align 4, !tbaa !38
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %end_line.exit3, label %40

; <label>:40                                      ; preds = %37
  %41 = load i32* @line_cnt, align 4, !tbaa !38
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %48

; <label>:43                                      ; preds = %40
  %.b.i2 = load i1* @newpage, align 1
  br i1 %.b.i2, label %48, label %44

; <label>:44                                      ; preds = %43
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %45 = load i8** @lastfmt, align 8, !tbaa !1
  %46 = load i8** @lastarg, align 8, !tbaa !1
  %47 = tail call i32 (i8*, ...)* @msg(i8* %45, i8* %46) #8
  br label %end_line.exit3

; <label>:48                                      ; preds = %43, %40
  %49 = tail call signext i8 @add_line(i8* null, i8* null) #8
  br label %end_line.exit3

end_line.exit3:                                   ; preds = %48, %44, %37
  store i32 0, i32* @line_cnt, align 4, !tbaa !38
  store i1 false, i1* @newpage, align 1
  br label %50

; <label>:50                                      ; preds = %end_line.exit3, %end_line.exit, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @print_disc(i8 signext %type) #0 {
  %1 = sext i8 %type to i32
  switch i32 %1, label %._crit_edge.thread [
    i32 63, label %.thread
    i32 33, label %2
    i32 61, label %3
    i32 47, label %4
  ]

._crit_edge.thread:                               ; preds = %0
  store i32 1, i32* bitcast (i8* getelementptr inbounds (%union.thing* @print_disc.obj, i64 0, i32 0, i32 9, i32 5, i64 0) to i32*), align 4, !tbaa !78
  store i32 0, i32* getelementptr (%struct.anon.0* bitcast (%union.thing* @print_disc.obj to %struct.anon.0*), i64 0, i32 14), align 4, !tbaa !12
  br label %44

; <label>:2                                       ; preds = %0
  br label %.thread

; <label>:3                                       ; preds = %0
  br label %.thread

; <label>:4                                       ; preds = %0
  br label %.thread

.thread:                                          ; preds = %4, %3, %2, %0
  %info.0.ph = phi %struct.obj_info* [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 0), %4 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 0), %3 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 0), %2 ], [ getelementptr inbounds ([0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 0), %0 ]
  %maxnum.0.ph = phi i32 [ 14, %4 ], [ 14, %3 ], [ 14, %2 ], [ 18, %0 ]
  %5 = add i32 %maxnum.0.ph, -1
  %6 = zext i32 %5 to i64
  %7 = add i64 %6, 1
  %end.idx = add i64 %6, 1
  %n.vec = and i64 %7, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %.thread
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %.thread ]
  %8 = getelementptr inbounds [18 x i32]* @print_disc.order, i64 0, i64 %index
  %9 = trunc i64 %index to i32
  %broadcast.splatinsert14 = insertelement <4 x i32> undef, i32 %9, i32 0
  %broadcast.splat15 = shufflevector <4 x i32> %broadcast.splatinsert14, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction16 = add <4 x i32> %broadcast.splat15, <i32 0, i32 1, i32 2, i32 3>
  %induction17 = add <4 x i32> %broadcast.splat15, <i32 4, i32 5, i32 6, i32 7>
  %10 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> %induction16, <4 x i32>* %10, align 16
  %.sum20 = or i64 %index, 4
  %11 = getelementptr [18 x i32]* @print_disc.order, i64 0, i64 %.sum20
  %12 = bitcast i32* %11 to <4 x i32>*
  store <4 x i32> %induction17, <4 x i32>* %12, align 16
  %index.next = add i64 %index, 8
  %13 = icmp eq i64 %index.next, %n.vec
  br i1 %13, label %middle.block, label %vector.body, !llvm.loop !147

middle.block:                                     ; preds = %vector.body, %.thread
  %resume.val = phi i64 [ 0, %.thread ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %.lr.ph.i, label %.lr.ph4.i

.lr.ph.i:                                         ; preds = %.lr.ph4.i, %middle.block
  %14 = zext i32 %maxnum.0.ph to i64
  br label %17

.lr.ph4.i:                                        ; preds = %.lr.ph4.i, %middle.block
  %indvars.iv5.i = phi i64 [ %indvars.iv.next6.i, %.lr.ph4.i ], [ %resume.val, %middle.block ]
  %15 = getelementptr inbounds [18 x i32]* @print_disc.order, i64 0, i64 %indvars.iv5.i
  %16 = trunc i64 %indvars.iv5.i to i32
  store i32 %16, i32* %15, align 4, !tbaa !38
  %indvars.iv.next6.i = add nuw nsw i64 %indvars.iv5.i, 1
  %lftr.wideiv8 = trunc i64 %indvars.iv.next6.i to i32
  %exitcond9 = icmp eq i32 %lftr.wideiv8, %maxnum.0.ph
  br i1 %exitcond9, label %.lr.ph.i, label %.lr.ph4.i, !llvm.loop !150

; <label>:17                                      ; preds = %17, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %14, %.lr.ph.i ], [ %indvars.iv.next.i, %17 ]
  %18 = trunc i64 %indvars.iv.i to i32
  %19 = tail call i32 @rnd(i32 %18) #8
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %20 = getelementptr inbounds [18 x i32]* @print_disc.order, i64 0, i64 %indvars.iv.next.i
  %21 = load i32* %20, align 4, !tbaa !38
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds [18 x i32]* @print_disc.order, i64 0, i64 %22
  %24 = load i32* %23, align 4, !tbaa !38
  store i32 %24, i32* %20, align 4, !tbaa !38
  store i32 %21, i32* %23, align 4, !tbaa !38
  %25 = trunc i64 %indvars.iv.next.i to i32
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %17, label %.lr.ph

.lr.ph:                                           ; preds = %17
  store i32 1, i32* bitcast (i8* getelementptr inbounds (%union.thing* @print_disc.obj, i64 0, i32 0, i32 9, i32 5, i64 0) to i32*), align 4, !tbaa !78
  store i32 0, i32* getelementptr (%struct.anon.0* bitcast (%union.thing* @print_disc.obj to %struct.anon.0*), i64 0, i32 14), align 4, !tbaa !12
  br label %27

; <label>:27                                      ; preds = %42, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %42 ]
  %num_found.07 = phi i32 [ 0, %.lr.ph ], [ %num_found.1, %42 ]
  %28 = getelementptr inbounds [18 x i32]* @print_disc.order, i64 0, i64 %indvars.iv
  %29 = load i32* %28, align 4, !tbaa !38
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.obj_info* %info.0.ph, i64 %30, i32 4
  %32 = load i8* %31, align 8, !tbaa !102, !range !7
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

; <label>:34                                      ; preds = %27
  %35 = getelementptr inbounds %struct.obj_info* %info.0.ph, i64 %30, i32 3
  %36 = load i8** %35, align 8, !tbaa !103
  %37 = icmp eq i8* %36, null
  br i1 %37, label %42, label %38

; <label>:38                                      ; preds = %34, %27
  store i32 %1, i32* getelementptr inbounds (%union.thing* @print_disc.obj, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !8
  store i32 %29, i32* bitcast (i8* getelementptr inbounds (%union.thing* @print_disc.obj, i64 0, i32 0, i32 9, i32 5, i64 4) to i32*), align 4, !tbaa !50
  %39 = tail call i8* @inv_name(%union.thing* @print_disc.obj, i1 zeroext false)
  %40 = tail call signext i8 @add_line(i8* getelementptr inbounds ([3 x i8]* @.str14999, i64 0, i64 0), i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0))
  %41 = add nsw i32 %num_found.07, 1
  br label %42

; <label>:42                                      ; preds = %38, %34
  %num_found.1 = phi i32 [ %41, %38 ], [ %num_found.07, %34 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %maxnum.0.ph
  br i1 %exitcond, label %._crit_edge, label %27

._crit_edge:                                      ; preds = %42
  %43 = icmp eq i32 %num_found.1, 0
  br i1 %43, label %44, label %47

; <label>:44                                      ; preds = %._crit_edge, %._crit_edge.thread
  %45 = tail call i8* @nothing(i8 signext %type)
  %46 = tail call signext i8 @add_line(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i8* null)
  br label %47

; <label>:47                                      ; preds = %44, %._crit_edge
  ret void
}

; Function Attrs: nounwind ssp uwtable
define signext i8 @add_line(i8* %fmt, i8* %arg) #0 {
  %1 = load i32* @line_cnt, align 4, !tbaa !38
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %8

; <label>:3                                       ; preds = %0
  %4 = load %struct._win_st** @hw, align 8, !tbaa !1
  %5 = tail call i32 @wclear(%struct._win_st* %4) #8
  %6 = load i32* @inv_type, align 4, !tbaa !38
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %.thread16, label %.thread

.thread16:                                        ; preds = %3
  store i32 0, i32* @mpos, align 4, !tbaa !38
  br label %10

; <label>:8                                       ; preds = %0
  %.pr.pre = load i32* @inv_type, align 4, !tbaa !38
  %9 = icmp eq i32 %.pr.pre, 1
  br i1 %9, label %10, label %.thread

; <label>:10                                      ; preds = %8, %.thread16
  %11 = load i8* %fmt, align 1, !tbaa !28
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

; <label>:13                                      ; preds = %10
  %14 = tail call i32 (i8*, ...)* @msg(i8* %fmt, i8* %arg) #8
  %15 = icmp eq i32 %14, 27
  br i1 %15, label %163, label %16

; <label>:16                                      ; preds = %13, %10
  %17 = load i32* @line_cnt, align 4, !tbaa !38
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* @line_cnt, align 4, !tbaa !38
  br label %163

.thread:                                          ; preds = %8, %3
  %19 = phi i32 [ %6, %3 ], [ %.pr.pre, %8 ]
  %20 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %.thread
  store i32 27, i32* @add_line.maxlen, align 4, !tbaa !38
  br label %23

; <label>:23                                      ; preds = %22, %.thread
  %24 = load i32* @line_cnt, align 4, !tbaa !38
  %25 = load i32* @LINES, align 4, !tbaa !38
  %26 = add nsw i32 %25, -1
  %27 = icmp sge i32 %24, %26
  %28 = icmp eq i8* %fmt, null
  %or.cond = or i1 %27, %28
  br i1 %or.cond, label %29, label %140

; <label>:29                                      ; preds = %23
  %30 = icmp eq i32 %19, 0
  %or.cond3 = and i1 %30, %28
  br i1 %or.cond3, label %31, label %118

; <label>:31                                      ; preds = %29
  %.b = load i1* @newpage, align 1
  br i1 %.b, label %118, label %32

; <label>:32                                      ; preds = %31
  %33 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([1 x i8]* @.str351020, i64 0, i64 0)) #8
  %34 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %35 = tail call i32 @wrefresh(%struct._win_st* %34) #8
  %36 = load i32* @line_cnt, align 4, !tbaa !38
  %37 = add nsw i32 %36, 1
  %38 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %39 = add nsw i32 %38, 2
  %40 = load i32* @COLS, align 4, !tbaa !38
  %41 = sub i32 -3, %38
  %42 = add i32 %41, %40
  %43 = tail call %struct._win_st* @newwin(i32 %37, i32 %39, i32 0, i32 %42) #8
  %44 = load i32* @line_cnt, align 4, !tbaa !38
  %45 = add nsw i32 %44, 1
  %46 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %47 = add nsw i32 %46, 1
  %48 = load i32* @COLS, align 4, !tbaa !38
  %49 = sub i32 -2, %46
  %50 = add i32 %49, %48
  %51 = tail call %struct._win_st* @subwin(%struct._win_st* %43, i32 %45, i32 %47, i32 0, i32 %50) #8
  %52 = load i32* @line_cnt, align 4, !tbaa !38
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %._crit_edge12, label %.lr.ph11

.lr.ph11:                                         ; preds = %._crit_edge, %32
  %y.09 = phi i32 [ %69, %._crit_edge ], [ 0, %32 ]
  %54 = tail call i32 @wmove(%struct._win_st* %51, i32 %y.09, i32 0) #8
  %55 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %63, %.lr.ph11
  %x.08 = phi i32 [ %66, %63 ], [ 0, %.lr.ph11 ]
  %57 = load %struct._win_st** @hw, align 8, !tbaa !1
  %58 = tail call i32 @wmove(%struct._win_st* %57, i32 %y.09, i32 %x.08) #8
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %63, label %60

; <label>:60                                      ; preds = %.lr.ph
  %61 = load %struct._win_st** @hw, align 8, !tbaa !1
  %62 = tail call i32 @winch(%struct._win_st* %61) #8
  br label %63

; <label>:63                                      ; preds = %60, %.lr.ph
  %64 = phi i32 [ %62, %60 ], [ -1, %.lr.ph ]
  %65 = tail call i32 @waddch(%struct._win_st* %51, i32 %64) #8
  %66 = add nsw i32 %x.08, 1
  %67 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %68 = icmp slt i32 %x.08, %67
  br i1 %68, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %63, %.lr.ph11
  %69 = add nsw i32 %y.09, 1
  %70 = load i32* @line_cnt, align 4, !tbaa !38
  %71 = icmp slt i32 %y.09, %70
  br i1 %71, label %.lr.ph11, label %._crit_edge12

._crit_edge12:                                    ; preds = %._crit_edge, %32
  %.lcssa = phi i32 [ %52, %32 ], [ %70, %._crit_edge ]
  %72 = tail call i32 @wmove(%struct._win_st* %43, i32 %.lcssa, i32 1) #8
  %73 = tail call i32 @waddnstr(%struct._win_st* %43, i8* getelementptr inbounds ([28 x i8]* @.str381023, i64 0, i64 0), i32 -1) #8
  %74 = load i32* @LINES, align 4, !tbaa !38
  %75 = icmp sgt i32 %74, 24
  br i1 %75, label %76, label %89

; <label>:76                                      ; preds = %._crit_edge12
  %77 = load i32* @line_cnt, align 4, !tbaa !38
  %78 = add nsw i32 %77, 24
  %79 = icmp sgt i32 %78, %74
  br i1 %79, label %80, label %87

; <label>:80                                      ; preds = %76
  %.neg6 = add i32 %74, -1
  %81 = sub i32 %.neg6, %77
  %82 = load i32* @COLS, align 4, !tbaa !38
  %83 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %84 = add i32 %82, -3
  %85 = sub i32 %84, %83
  %86 = tail call i32 @mvwin(%struct._win_st* %43, i32 %81, i32 %85) #8
  br label %89

; <label>:87                                      ; preds = %76
  %88 = tail call i32 @mvwin(%struct._win_st* %43, i32 24, i32 0) #8
  br label %89

; <label>:89                                      ; preds = %87, %80, %._crit_edge12
  %90 = icmp eq %struct._win_st* %43, null
  br i1 %90, label %96, label %91

; <label>:91                                      ; preds = %89
  %92 = getelementptr inbounds %struct._win_st* %43, i64 0, i32 2
  %93 = load i16* %92, align 2, !tbaa !56
  %94 = sext i16 %93 to i32
  %95 = add nsw i32 %94, 1
  br label %96

; <label>:96                                      ; preds = %91, %89
  %97 = phi i32 [ %95, %91 ], [ -1, %89 ]
  %98 = tail call i32 @wtouchln(%struct._win_st* %43, i32 0, i32 %97, i32 1) #8
  %99 = tail call i32 @wrefresh(%struct._win_st* %43) #8
  tail call void @wait_for(i32 32) #8
  %100 = tail call i32 (...)* bitcast (i32 ()* @md_hasclreol to i32 (...)*)() #8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %106, label %102

; <label>:102                                     ; preds = %96
  %103 = tail call i32 @werase(%struct._win_st* %43) #8
  %104 = tail call i32 @leaveok(%struct._win_st* %43, i1 zeroext true) #8
  %105 = tail call i32 @wrefresh(%struct._win_st* %43) #8
  br label %106

; <label>:106                                     ; preds = %102, %96
  %107 = tail call i32 @delwin(%struct._win_st* %43) #8
  %108 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %109 = icmp eq %struct._win_st* %108, null
  br i1 %109, label %115, label %110

; <label>:110                                     ; preds = %106
  %111 = getelementptr inbounds %struct._win_st* %108, i64 0, i32 2
  %112 = load i16* %111, align 2, !tbaa !56
  %113 = sext i16 %112 to i32
  %114 = add nsw i32 %113, 1
  br label %115

; <label>:115                                     ; preds = %110, %106
  %116 = phi i32 [ %114, %110 ], [ -1, %106 ]
  %117 = tail call i32 @wtouchln(%struct._win_st* %108, i32 0, i32 %116, i32 1) #8
  br label %139

; <label>:118                                     ; preds = %31, %29
  %119 = load %struct._win_st** @hw, align 8, !tbaa !1
  %120 = tail call i32 @wmove(%struct._win_st* %119, i32 %26, i32 0) #8
  %121 = load %struct._win_st** @hw, align 8, !tbaa !1
  %122 = tail call i32 @waddnstr(%struct._win_st* %121, i8* getelementptr inbounds ([28 x i8]* @.str381023, i64 0, i64 0), i32 -1) #8
  %123 = load %struct._win_st** @hw, align 8, !tbaa !1
  %124 = tail call i32 @wrefresh(%struct._win_st* %123) #8
  tail call void @wait_for(i32 32) #8
  %125 = load %struct._win_st** @curscr, align 8, !tbaa !1
  %126 = tail call i32 @clearok(%struct._win_st* %125, i1 zeroext true) #8
  %127 = load %struct._win_st** @hw, align 8, !tbaa !1
  %128 = tail call i32 @wclear(%struct._win_st* %127) #8
  %129 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %130 = icmp eq %struct._win_st* %129, null
  br i1 %130, label %136, label %131

; <label>:131                                     ; preds = %118
  %132 = getelementptr inbounds %struct._win_st* %129, i64 0, i32 2
  %133 = load i16* %132, align 2, !tbaa !56
  %134 = sext i16 %133 to i32
  %135 = add nsw i32 %134, 1
  br label %136

; <label>:136                                     ; preds = %131, %118
  %137 = phi i32 [ %135, %131 ], [ -1, %118 ]
  %138 = tail call i32 @wtouchln(%struct._win_st* %129, i32 0, i32 %137, i32 1) #8
  br label %139

; <label>:139                                     ; preds = %136, %115
  store i1 true, i1* @newpage, align 1
  store i32 0, i32* @line_cnt, align 4, !tbaa !38
  store i32 27, i32* @add_line.maxlen, align 4, !tbaa !38
  br label %140

; <label>:140                                     ; preds = %139, %23
  %141 = phi i32 [ %24, %23 ], [ 0, %139 ]
  br i1 %28, label %163, label %142

; <label>:142                                     ; preds = %140
  %143 = icmp eq i32 %141, 0
  br i1 %143, label %144, label %147

; <label>:144                                     ; preds = %142
  %145 = load i8* %fmt, align 1, !tbaa !28
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %163, label %147

; <label>:147                                     ; preds = %144, %142
  %148 = load %struct._win_st** @hw, align 8, !tbaa !1
  %149 = add nsw i32 %141, 1
  store i32 %149, i32* @line_cnt, align 4, !tbaa !38
  %150 = tail call i32 (%struct._win_st*, i32, i32, i8*, ...)* @mvwprintw(%struct._win_st* %148, i32 %141, i32 0, i8* %fmt, i8* %arg) #8
  %151 = load %struct._win_st** @hw, align 8, !tbaa !1
  %152 = icmp eq %struct._win_st* %151, null
  br i1 %152, label %157, label %153

; <label>:153                                     ; preds = %147
  %154 = getelementptr inbounds %struct._win_st* %151, i64 0, i32 1
  %155 = load i16* %154, align 2, !tbaa !86
  %156 = sext i16 %155 to i32
  br label %157

; <label>:157                                     ; preds = %153, %147
  %158 = phi i32 [ %156, %153 ], [ -1, %147 ]
  %159 = load i32* @add_line.maxlen, align 4, !tbaa !38
  %160 = icmp slt i32 %159, %158
  br i1 %160, label %161, label %162

; <label>:161                                     ; preds = %157
  store i32 %158, i32* @add_line.maxlen, align 4, !tbaa !38
  br label %162

; <label>:162                                     ; preds = %161, %157
  store i8* %fmt, i8** @lastfmt, align 8, !tbaa !1
  store i8* %arg, i8** @lastarg, align 8, !tbaa !1
  br label %163

; <label>:163                                     ; preds = %162, %144, %140, %16, %13
  %.0 = phi i8 [ 27, %13 ], [ -28, %140 ], [ -28, %144 ], [ -28, %162 ], [ -28, %16 ]
  ret i8 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @nothing(i8 signext %type) #0 {
  %1 = load i8* @terse, align 1, !tbaa !5, !range !7
  %2 = icmp eq i8 %1, 0
  %3 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i1 false)
  br i1 %2, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %3, i8* getelementptr inbounds ([8 x i8]* @.str391024, i64 0, i64 0)) #8
  br label %8

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0), i32 0, i64 %3, i8* getelementptr inbounds ([28 x i8]* @.str401025, i64 0, i64 0)) #8
  br label %8

; <label>:8                                       ; preds = %6, %4
  %9 = icmp eq i8 %type, 42
  br i1 %9, label %21, label %10

; <label>:10                                      ; preds = %8
  %11 = sext i8 %type to i32
  %12 = tail call i64 @strlen(i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)) #8
  %13 = getelementptr inbounds [0 x i8]* bitcast ([2048 x i8]* @prbuf to [0 x i8]*), i64 0, i64 %12
  switch i32 %11, label %18 [
    i32 33, label %14
    i32 63, label %15
    i32 61, label %16
    i32 47, label %17
  ]

; <label>:14                                      ; preds = %10
  br label %18

; <label>:15                                      ; preds = %10
  br label %18

; <label>:16                                      ; preds = %10
  br label %18

; <label>:17                                      ; preds = %10
  br label %18

; <label>:18                                      ; preds = %17, %16, %15, %14, %10
  %tystr.0 = phi i8* [ null, %10 ], [ getelementptr inbounds ([6 x i8]* @.str421027, i64 0, i64 0), %17 ], [ getelementptr inbounds ([5 x i8]* @.str1986, i64 0, i64 0), %16 ], [ getelementptr inbounds ([7 x i8]* @.str411026, i64 0, i64 0), %15 ], [ getelementptr inbounds ([7 x i8]* @.str985, i64 0, i64 0), %14 ]
  %19 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %13, i1 false)
  %20 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %13, i32 0, i64 %19, i8* getelementptr inbounds ([15 x i8]* @.str431028, i64 0, i64 0), i8* %tystr.0) #8
  br label %21

; <label>:21                                      ; preds = %18, %8
  ret i8* getelementptr inbounds ([2048 x i8]* @prbuf, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define void @set_order(i32* nocapture %order, i32 %numthings) #0 {
  %1 = icmp sgt i32 %numthings, 0
  br i1 %1, label %.lr.ph4.preheader, label %._crit_edge

.lr.ph4.preheader:                                ; preds = %0
  %2 = add i32 %numthings, -1
  %3 = zext i32 %2 to i64
  %4 = add i64 %3, 1
  %end.idx = add i64 %3, 1
  %n.vec = and i64 %4, 8589934584
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %.lr.ph4.preheader
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %.lr.ph4.preheader ]
  %5 = getelementptr inbounds i32* %order, i64 %index
  %6 = trunc i64 %index to i32
  %broadcast.splatinsert8 = insertelement <4 x i32> undef, i32 %6, i32 0
  %broadcast.splat9 = shufflevector <4 x i32> %broadcast.splatinsert8, <4 x i32> undef, <4 x i32> zeroinitializer
  %induction10 = add <4 x i32> %broadcast.splat9, <i32 0, i32 1, i32 2, i32 3>
  %induction11 = add <4 x i32> %broadcast.splat9, <i32 4, i32 5, i32 6, i32 7>
  %7 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> %induction10, <4 x i32>* %7, align 4
  %.sum14 = or i64 %index, 4
  %8 = getelementptr i32* %order, i64 %.sum14
  %9 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> %induction11, <4 x i32>* %9, align 4
  %index.next = add i64 %index, 8
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !151

middle.block:                                     ; preds = %vector.body, %.lr.ph4.preheader
  %resume.val = phi i64 [ 0, %.lr.ph4.preheader ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %.preheader, label %.lr.ph4

.preheader:                                       ; preds = %.lr.ph4, %middle.block
  br i1 %1, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %11 = sext i32 %numthings to i64
  br label %14

.lr.ph4:                                          ; preds = %.lr.ph4, %middle.block
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %.lr.ph4 ], [ %resume.val, %middle.block ]
  %12 = getelementptr inbounds i32* %order, i64 %indvars.iv5
  %13 = trunc i64 %indvars.iv5 to i32
  store i32 %13, i32* %12, align 4, !tbaa !38
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next6 to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %numthings
  br i1 %exitcond, label %.preheader, label %.lr.ph4, !llvm.loop !152

; <label>:14                                      ; preds = %14, %.lr.ph
  %indvars.iv = phi i64 [ %11, %.lr.ph ], [ %indvars.iv.next, %14 ]
  %15 = trunc i64 %indvars.iv to i32
  %16 = tail call i32 @rnd(i32 %15) #8
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %17 = getelementptr inbounds i32* %order, i64 %indvars.iv.next
  %18 = load i32* %17, align 4, !tbaa !38
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds i32* %order, i64 %19
  %21 = load i32* %20, align 4, !tbaa !38
  store i32 %21, i32* %17, align 4, !tbaa !38
  store i32 %18, i32* %20, align 4, !tbaa !38
  %22 = trunc i64 %indvars.iv.next to i32
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %14, label %._crit_edge

._crit_edge:                                      ; preds = %14, %.preheader, %0
  ret void
}

declare %struct._win_st* @subwin(%struct._win_st*, i32, i32, i32, i32) #2

declare i32 @mvwin(%struct._win_st*, i32, i32) #2

declare i32 @werase(%struct._win_st*) #2

; Function Attrs: nounwind ssp uwtable
define void @end_line() #0 {
  %1 = load i32* @inv_type, align 4, !tbaa !38
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %13, label %3

; <label>:3                                       ; preds = %0
  %4 = load i32* @line_cnt, align 4, !tbaa !38
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %3
  %.b = load i1* @newpage, align 1
  br i1 %.b, label %11, label %7

; <label>:7                                       ; preds = %6
  store i32 0, i32* @mpos, align 4, !tbaa !38
  %8 = load i8** @lastfmt, align 8, !tbaa !1
  %9 = load i8** @lastarg, align 8, !tbaa !1
  %10 = tail call i32 (i8*, ...)* @msg(i8* %8, i8* %9) #8
  br label %13

; <label>:11                                      ; preds = %6, %3
  %12 = tail call signext i8 @add_line(i8* null, i8* null)
  br label %13

; <label>:13                                      ; preds = %11, %7, %0
  store i32 0, i32* @line_cnt, align 4, !tbaa !38
  store i1 false, i1* @newpage, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @missile(i32 %ydelta, i32 %xdelta) #0 {
  %1 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([6 x i8]* @.str1060, i64 0, i64 0), i32 41) #8
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %23, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call zeroext i1 @dropcheck(%union.thing* %1) #8
  br i1 %4, label %5, label %23

; <label>:5                                       ; preds = %3
  %6 = tail call zeroext i1 @is_current(%union.thing* %1) #8
  br i1 %6, label %23, label %7

; <label>:7                                       ; preds = %5
  %8 = tail call %union.thing* @leave_pack(%union.thing* %1, i1 zeroext true, i1 zeroext false) #8
  tail call void @do_motion(%union.thing* %8, i32 %ydelta, i32 %xdelta)
  %9 = getelementptr inbounds %union.thing* %8, i64 0, i32 0, i32 2, i32 1
  %10 = load i32* %9, align 4, !tbaa !40
  %11 = shl i32 %10, 5
  %12 = getelementptr inbounds i32* %9, i64 1
  %13 = load i32* %12, align 4, !tbaa !41
  %14 = add nsw i32 %11, %13
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %15, i32 2
  %17 = load %union.thing** %16, align 8, !tbaa !43
  %18 = icmp eq %union.thing* %17, null
  br i1 %18, label %22, label %19

; <label>:19                                      ; preds = %7
  store i32 %13, i32* getelementptr inbounds (%struct.coord* @hit_monster.mp, i64 0, i32 1), align 4, !tbaa !20
  store i32 %10, i32* getelementptr inbounds (%struct.coord* @hit_monster.mp, i64 0, i32 0), align 4, !tbaa !21
  %20 = tail call i32 @fight(%struct.coord* @hit_monster.mp, %union.thing* %8, i1 zeroext true) #8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

; <label>:22                                      ; preds = %19, %7
  tail call void @fall(%union.thing* %8, i1 zeroext true)
  br label %23

; <label>:23                                      ; preds = %22, %19, %5, %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @do_motion(%union.thing* nocapture %obj, i32 %ydelta, i32 %xdelta) #0 {
  %1 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 2, i32 1
  %2 = bitcast i32* %1 to i64*
  %3 = load i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  store i64 %3, i64* %2, align 4
  %4 = getelementptr inbounds i32* %1, i64 1
  %5 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 2, i32 0
  %6 = trunc i64 %3 to i32
  br label %7

; <label>:7                                       ; preds = %.backedge, %0
  %8 = phi i32 [ %.pre, %.backedge ], [ %6, %0 ]
  %9 = load i64* bitcast (i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0) to i64*), align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %._crit_edge

._crit_edge:                                      ; preds = %7
  %.pre6 = load i32* %4, align 4, !tbaa !41
  br label %17

; <label>:12                                      ; preds = %7
  %13 = lshr i64 %9, 32
  %14 = trunc i64 %13 to i32
  %15 = load i32* %4, align 4, !tbaa !41
  %16 = icmp eq i32 %15, %14
  br i1 %16, label %43, label %17

; <label>:17                                      ; preds = %12, %._crit_edge
  %18 = phi i32 [ %.pre6, %._crit_edge ], [ %15, %12 ]
  %19 = tail call zeroext i1 @cansee(i32 %18, i32 %8) #8
  %20 = load i8* @terse, align 1
  %21 = icmp eq i8 %20, 0
  %or.cond3 = and i1 %19, %21
  br i1 %or.cond3, label %22, label %43

; <label>:22                                      ; preds = %17
  %23 = load i32* %1, align 4, !tbaa !40
  %24 = shl i32 %23, 5
  %25 = load i32* %4, align 4, !tbaa !41
  %26 = add nsw i32 %24, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %27, i32 0
  %29 = load i8* %28, align 8, !tbaa !33
  %30 = sext i8 %29 to i32
  %31 = icmp eq i8 %29, 46
  br i1 %31, label %32, label %34

; <label>:32                                      ; preds = %22
  %33 = tail call zeroext i1 (...)* bitcast (i1 ()* @show_floor to i1 (...)*)() #8
  %. = select i1 %33, i32 %30, i32 32
  %.pre7 = load i32* %4, align 4, !tbaa !41
  %.pre8 = load i32* %1, align 4, !tbaa !40
  br label %34

; <label>:34                                      ; preds = %32, %22
  %35 = phi i32 [ %23, %22 ], [ %.pre8, %32 ]
  %36 = phi i32 [ %25, %22 ], [ %.pre7, %32 ]
  %ch.0 = phi i32 [ %30, %22 ], [ %., %32 ]
  %37 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %38 = tail call i32 @wmove(%struct._win_st* %37, i32 %36, i32 %35) #8
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %43, label %40

; <label>:40                                      ; preds = %34
  %41 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %42 = tail call i32 @waddch(%struct._win_st* %41, i32 %ch.0) #8
  br label %43

; <label>:43                                      ; preds = %40, %34, %17, %12
  %44 = load i32* %4, align 4, !tbaa !41
  %45 = add nsw i32 %44, %ydelta
  store i32 %45, i32* %4, align 4, !tbaa !41
  %46 = load i32* %1, align 4, !tbaa !40
  %47 = add nsw i32 %46, %xdelta
  store i32 %47, i32* %1, align 4, !tbaa !40
  %48 = shl i32 %47, 5
  %49 = add nsw i32 %48, %45
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %50, i32 2
  %52 = load %union.thing** %51, align 8, !tbaa !43
  %53 = icmp eq %union.thing* %52, null
  br i1 %53, label %56, label %54

; <label>:54                                      ; preds = %43
  %55 = getelementptr inbounds %union.thing* %52, i64 0, i32 0, i32 5
  br label %58

; <label>:56                                      ; preds = %43
  %57 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %50, i32 0
  br label %58

; <label>:58                                      ; preds = %56, %54
  %.sink.in = phi i8* [ %55, %54 ], [ %57, %56 ]
  %.sink = load i8* %.sink.in, align 1
  %59 = sext i8 %.sink to i32
  %60 = tail call i32 @step_ok(i32 %59) #8
  %61 = icmp ne i32 %60, 0
  %62 = icmp ne i8 %.sink, 43
  %or.cond = and i1 %61, %62
  br i1 %or.cond, label %63, label %82

; <label>:63                                      ; preds = %58
  %64 = load i32* %4, align 4, !tbaa !41
  %65 = load i32* %1, align 4, !tbaa !40
  %66 = tail call zeroext i1 @cansee(i32 %64, i32 %65) #8
  %67 = load i8* @terse, align 1
  %68 = icmp eq i8 %67, 0
  %or.cond5 = and i1 %66, %68
  br i1 %or.cond5, label %69, label %.backedge

; <label>:69                                      ; preds = %63
  %70 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %71 = load i32* %4, align 4, !tbaa !41
  %72 = load i32* %1, align 4, !tbaa !40
  %73 = tail call i32 @wmove(%struct._win_st* %70, i32 %71, i32 %72) #8
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %79, label %75

; <label>:75                                      ; preds = %69
  %76 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %77 = load i32* %5, align 4, !tbaa !8
  %78 = tail call i32 @waddch(%struct._win_st* %76, i32 %77) #8
  br label %79

; <label>:79                                      ; preds = %75, %69
  %80 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %81 = tail call i32 @wrefresh(%struct._win_st* %80) #8
  br label %.backedge

.backedge:                                        ; preds = %79, %63
  %.pre = load i32* %1, align 4, !tbaa !40
  br label %7

; <label>:82                                      ; preds = %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @hit_monster(i32 %y, i32 %x, %union.thing* %obj) #0 {
  store i32 %y, i32* getelementptr inbounds (%struct.coord* @hit_monster.mp, i64 0, i32 1), align 4, !tbaa !20
  store i32 %x, i32* getelementptr inbounds (%struct.coord* @hit_monster.mp, i64 0, i32 0), align 4, !tbaa !21
  %1 = tail call i32 @fight(%struct.coord* @hit_monster.mp, %union.thing* %obj, i1 zeroext true) #8
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define void @fall(%union.thing* %obj, i1 zeroext %pr) #0 {
  %1 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 2, i32 1
  %2 = getelementptr inbounds i32* %1, i64 1
  %3 = load i32* %2, align 4, !tbaa !20
  %4 = add nsw i32 %3, -1
  %.pre = load i32* %1, align 4, !tbaa !21
  br label %.lr.ph.i

.lr.ph.i:                                         ; preds = %29, %0
  %5 = phi i32 [ %.pre, %0 ], [ %26, %29 ]
  %y.08.i = phi i32 [ %4, %0 ], [ %30, %29 ]
  %cnt.07.i = phi i32 [ 0, %0 ], [ %cnt.2.i, %29 ]
  %6 = add nsw i32 %5, -1
  %7 = sext i32 %6 to i64
  br label %8

; <label>:8                                       ; preds = %25, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %25 ], [ %7, %.lr.ph.i ]
  %cnt.16.i = phi i32 [ %cnt.2.i, %25 ], [ %cnt.07.i, %.lr.ph.i ]
  %9 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %10 = icmp eq i32 %y.08.i, %9
  %11 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8
  %12 = trunc i64 %indvars.iv.i to i32
  %13 = icmp eq i32 %12, %11
  %or.cond3.i = and i1 %10, %13
  br i1 %or.cond3.i, label %25, label %14

; <label>:14                                      ; preds = %8
  %15 = shl i32 %12, 5
  %16 = add nsw i32 %15, %y.08.i
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %17, i32 0
  %19 = load i8* %18, align 8, !tbaa !33
  switch i8 %19, label %25 [
    i8 46, label %20
    i8 35, label %20
  ]

; <label>:20                                      ; preds = %14, %14
  %21 = add nsw i32 %cnt.16.i, 1
  %22 = tail call i32 @rnd(i32 %21) #8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

; <label>:24                                      ; preds = %20
  store i32 %y.08.i, i32* getelementptr inbounds (%struct.coord* @fall.fpos, i64 0, i32 1), align 4, !tbaa !20
  store i32 %12, i32* getelementptr inbounds (%struct.coord* @fall.fpos, i64 0, i32 0), align 8, !tbaa !21
  br label %25

; <label>:25                                      ; preds = %24, %20, %14, %8
  %cnt.2.i = phi i32 [ %21, %24 ], [ %21, %20 ], [ %cnt.16.i, %14 ], [ %cnt.16.i, %8 ]
  %26 = load i32* %1, align 4, !tbaa !21
  %27 = add nsw i32 %26, 1
  %28 = icmp slt i32 %12, %27
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  br i1 %28, label %8, label %29

; <label>:29                                      ; preds = %25
  %.pre.i = load i32* %2, align 4, !tbaa !20
  %30 = add nsw i32 %y.08.i, 1
  %31 = add nsw i32 %.pre.i, 1
  %32 = icmp slt i32 %y.08.i, %31
  br i1 %32, label %.lr.ph.i, label %fallpos.exit

fallpos.exit:                                     ; preds = %29
  %33 = icmp eq i32 %cnt.2.i, 0
  br i1 %33, label %69, label %34

; <label>:34                                      ; preds = %fallpos.exit
  %35 = load i64* bitcast (%struct.coord* @fall.fpos to i64*), align 8
  %36 = trunc i64 %35 to i32
  %37 = shl i32 %36, 5
  %38 = lshr i64 %35, 32
  %39 = trunc i64 %38 to i32
  %40 = add nsw i32 %37, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 2, i32 0
  %43 = load i32* %42, align 4, !tbaa !8
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %41, i32 0
  store i8 %44, i8* %45, align 8, !tbaa !33
  %46 = bitcast i32* %1 to i64*
  store i64 %35, i64* %46, align 4
  %47 = load i32* getelementptr inbounds (%struct.coord* @fall.fpos, i64 0, i32 1), align 4, !tbaa !20
  %48 = load i32* getelementptr inbounds (%struct.coord* @fall.fpos, i64 0, i32 0), align 8, !tbaa !21
  %49 = tail call zeroext i1 @cansee(i32 %47, i32 %48) #8
  br i1 %49, label %50, label %68

; <label>:50                                      ; preds = %34
  %51 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %41, i32 2
  %52 = load %union.thing** %51, align 8, !tbaa !43
  %53 = icmp eq %union.thing* %52, null
  br i1 %53, label %58, label %54

; <label>:54                                      ; preds = %50
  %55 = load i32* %42, align 4, !tbaa !8
  %56 = trunc i32 %55 to i8
  %57 = getelementptr inbounds %union.thing* %52, i64 0, i32 0, i32 6
  store i8 %56, i8* %57, align 1, !tbaa !42
  br label %68

; <label>:58                                      ; preds = %50
  %59 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %60 = load i32* getelementptr inbounds (%struct.coord* @fall.fpos, i64 0, i32 1), align 4, !tbaa !20
  %61 = load i32* getelementptr inbounds (%struct.coord* @fall.fpos, i64 0, i32 0), align 8, !tbaa !21
  %62 = tail call i32 @wmove(%struct._win_st* %59, i32 %60, i32 %61) #8
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %68, label %64

; <label>:64                                      ; preds = %58
  %65 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %66 = load i32* %42, align 4, !tbaa !8
  %67 = tail call i32 @waddch(%struct._win_st* %65, i32 %66) #8
  br label %68

; <label>:68                                      ; preds = %64, %58, %54, %34
  tail call void @_attach(%union.thing** @lvl_obj, %union.thing* %obj) #8
  br label %84

; <label>:69                                      ; preds = %fallpos.exit
  br i1 %pr, label %70, label %83

; <label>:70                                      ; preds = %69
  %71 = load i8* @has_hit, align 1, !tbaa !5, !range !7
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %75, label %73

; <label>:73                                      ; preds = %70
  %74 = tail call i32 (...)* bitcast (i32 ()* @endmsg to i32 (...)*)() #8
  store i8 0, i8* @has_hit, align 1, !tbaa !5
  br label %75

; <label>:75                                      ; preds = %73, %70
  %76 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 4
  %77 = bitcast i8* %76 to i32*
  %78 = load i32* %77, align 4, !tbaa !50
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @weap_info to [0 x %struct.obj_info]*), i64 0, i64 %79, i32 0
  %81 = load i8** %80, align 8, !tbaa !66
  %82 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([38 x i8]* @.str11061, i64 0, i64 0), i8* %81) #8
  br label %83

; <label>:83                                      ; preds = %75, %69
  tail call void @discard(%union.thing* %obj) #8
  br label %84

; <label>:84                                      ; preds = %83, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define zeroext i1 @fallpos(%struct.coord* nocapture readonly %pos, %struct.coord* nocapture %newpos) #0 {
.lr.ph11:
  %0 = getelementptr inbounds %struct.coord* %pos, i64 0, i32 1
  %1 = load i32* %0, align 4, !tbaa !20
  %2 = add nsw i32 %1, -1
  %3 = getelementptr inbounds %struct.coord* %pos, i64 0, i32 0
  %4 = getelementptr inbounds %struct.coord* %newpos, i64 0, i32 1
  %5 = getelementptr inbounds %struct.coord* %newpos, i64 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %30, %.lr.ph11
  %y.08 = phi i32 [ %2, %.lr.ph11 ], [ %31, %30 ]
  %cnt.07 = phi i32 [ 0, %.lr.ph11 ], [ %cnt.2, %30 ]
  %6 = load i32* %3, align 4, !tbaa !21
  %7 = add nsw i32 %6, -1
  %8 = sext i32 %7 to i64
  br label %9

; <label>:9                                       ; preds = %26, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %26 ], [ %8, %.lr.ph ]
  %cnt.16 = phi i32 [ %cnt.2, %26 ], [ %cnt.07, %.lr.ph ]
  %10 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %11 = icmp eq i32 %y.08, %10
  %12 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8
  %13 = trunc i64 %indvars.iv to i32
  %14 = icmp eq i32 %13, %12
  %or.cond3 = and i1 %11, %14
  br i1 %or.cond3, label %26, label %15

; <label>:15                                      ; preds = %9
  %16 = shl i32 %13, 5
  %17 = add nsw i32 %16, %y.08
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [0 x %struct.PLACE]* bitcast ([2560 x %struct.PLACE]* @places to [0 x %struct.PLACE]*), i64 0, i64 %18, i32 0
  %20 = load i8* %19, align 8, !tbaa !33
  switch i8 %20, label %26 [
    i8 46, label %21
    i8 35, label %21
  ]

; <label>:21                                      ; preds = %15, %15
  %22 = add nsw i32 %cnt.16, 1
  %23 = tail call i32 @rnd(i32 %22) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %21
  store i32 %y.08, i32* %4, align 4, !tbaa !20
  store i32 %13, i32* %5, align 4, !tbaa !21
  br label %26

; <label>:26                                      ; preds = %25, %21, %15, %9
  %cnt.2 = phi i32 [ %22, %25 ], [ %22, %21 ], [ %cnt.16, %15 ], [ %cnt.16, %9 ]
  %27 = load i32* %3, align 4, !tbaa !21
  %28 = add nsw i32 %27, 1
  %29 = icmp slt i32 %13, %28
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %29, label %9, label %30

; <label>:30                                      ; preds = %26
  %.pre = load i32* %0, align 4, !tbaa !20
  %31 = add nsw i32 %y.08, 1
  %32 = add nsw i32 %.pre, 1
  %33 = icmp slt i32 %y.08, %32
  br i1 %33, label %.lr.ph, label %._crit_edge12

._crit_edge12:                                    ; preds = %30
  %34 = icmp ne i32 %cnt.2, 0
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define void @init_weapon(%union.thing* %weap, i32 %which) #0 {
  %1 = bitcast %union.thing* %weap to %struct.anon.0*
  %2 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 2, i32 0
  store i32 41, i32* %2, align 4, !tbaa !8
  %3 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 4
  %4 = bitcast i8* %3 to i32*
  store i32 %which, i32* %4, align 4, !tbaa !50
  %5 = sext i32 %which to i64
  %6 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 7, i64 0
  %7 = getelementptr inbounds [9 x %struct.init_weaps]* @init_dam, i64 0, i64 %5, i32 0
  %8 = load i8** %7, align 8, !tbaa !153
  %9 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %6, i1 false)
  %10 = tail call i8* @__strncpy_chk(i8* %6, i8* %8, i64 8, i64 %9) #8
  %11 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 8, i64 0
  %12 = getelementptr inbounds [9 x %struct.init_weaps]* @init_dam, i64 0, i64 %5, i32 1
  %13 = load i8** %12, align 8, !tbaa !155
  %14 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %11, i1 false)
  %15 = tail call i8* @__strncpy_chk(i8* %11, i8* %13, i64 8, i64 %14) #8
  %16 = getelementptr inbounds [9 x %struct.init_weaps]* @init_dam, i64 0, i64 %5, i32 2
  %17 = load i8* %16, align 8, !tbaa !156
  %18 = sext i8 %17 to i32
  %19 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 8
  %20 = bitcast i16* %19 to i32*
  store i32 %18, i32* %20, align 4, !tbaa !71
  %21 = getelementptr inbounds [9 x %struct.init_weaps]* @init_dam, i64 0, i64 %5, i32 3
  %22 = load i32* %21, align 4, !tbaa !157
  %23 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 14
  store i32 %22, i32* %23, align 4, !tbaa !12
  %24 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 4, !tbaa !68
  %26 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 0, i32* %27, align 4, !tbaa !69
  %28 = icmp eq i32 %which, 4
  br i1 %28, label %29, label %38

; <label>:29                                      ; preds = %0
  %30 = tail call i32 @rnd(i32 4) #8
  %31 = add nsw i32 %30, 2
  %32 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5
  %33 = bitcast [13 x i8]* %32 to i32*
  store i32 %31, i32* %33, align 4, !tbaa !78
  %34 = load i32* @group, align 4, !tbaa !38
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* @group, align 4, !tbaa !38
  %36 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 10
  %37 = bitcast %struct.room** %36 to i32*
  store i32 %34, i32* %37, align 4, !tbaa !116
  br label %56

; <label>:38                                      ; preds = %0
  %39 = lshr i64 311, %5
  %40 = and i64 %39, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %51

; <label>:42                                      ; preds = %38
  %43 = tail call i32 @rnd(i32 8) #8
  %44 = add nsw i32 %43, 8
  %45 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5
  %46 = bitcast [13 x i8]* %45 to i32*
  store i32 %44, i32* %46, align 4, !tbaa !78
  %47 = load i32* @group, align 4, !tbaa !38
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* @group, align 4, !tbaa !38
  %49 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 10
  %50 = bitcast %struct.room** %49 to i32*
  store i32 %47, i32* %50, align 4, !tbaa !116
  br label %56

; <label>:51                                      ; preds = %38
  %52 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 9, i32 5
  %53 = bitcast [13 x i8]* %52 to i32*
  store i32 1, i32* %53, align 4, !tbaa !78
  %54 = getelementptr inbounds %union.thing* %weap, i64 0, i32 0, i32 10
  %55 = bitcast %struct.room** %54 to i32*
  store i32 0, i32* %55, align 4, !tbaa !116
  br label %56

; <label>:56                                      ; preds = %51, %42, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @num(i32 %n1, i32 %n2, i8 signext %type) #0 {
  %1 = icmp slt i32 %n1, 0
  %2 = select i1 %1, i8* getelementptr inbounds ([3 x i8]* @.str21062, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str31063, i64 0, i64 0)
  %3 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* getelementptr inbounds ([10 x i8]* @num.numbuf, i64 0, i64 0), i32 0, i64 10, i8* %2, i32 %n1) #8
  %4 = icmp eq i8 %type, 41
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([10 x i8]* @num.numbuf, i64 0, i64 0)) #8
  %7 = getelementptr inbounds [10 x i8]* @num.numbuf, i64 0, i64 %6
  %8 = icmp slt i32 %n2, 0
  %9 = select i1 %8, i8* getelementptr inbounds ([4 x i8]* @.str41064, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str51065, i64 0, i64 0)
  %10 = tail call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %7, i32 0, i64 -1, i8* %9, i32 %n2) #8
  br label %11

; <label>:11                                      ; preds = %5, %0
  ret i8* getelementptr inbounds ([10 x i8]* @num.numbuf, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define void @wield() #0 {
  %1 = load %union.thing** @cur_weapon, align 8, !tbaa !1
  %2 = tail call zeroext i1 @dropcheck(%union.thing* %1) #8
  store %union.thing* %1, %union.thing** @cur_weapon, align 8, !tbaa !1
  br i1 %2, label %3, label %26

; <label>:3                                       ; preds = %0
  %4 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([6 x i8]* @.str61066, i64 0, i64 0), i32 41) #8
  %5 = icmp eq %union.thing* %4, null
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %13, %11, %3
  store i8 0, i8* @after, align 1, !tbaa !5
  br label %26

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds %union.thing* %4, i64 0, i32 0, i32 2, i32 0
  %9 = load i32* %8, align 4, !tbaa !8
  %10 = icmp eq i32 %9, 93
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %7
  %12 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([22 x i8]* @.str71067, i64 0, i64 0)) #8
  br label %6

; <label>:13                                      ; preds = %7
  %14 = tail call zeroext i1 @is_current(%union.thing* %4) #8
  br i1 %14, label %6, label %15

; <label>:15                                      ; preds = %13
  %16 = tail call i8* @inv_name(%union.thing* %4, i1 zeroext true) #8
  store %union.thing* %4, %union.thing** @cur_weapon, align 8, !tbaa !1
  %17 = load i8* @terse, align 1, !tbaa !5, !range !7
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

; <label>:19                                      ; preds = %15
  tail call void (i8*, ...)* @addmsg(i8* getelementptr inbounds ([13 x i8]* @.str81068, i64 0, i64 0)) #8
  br label %20

; <label>:20                                      ; preds = %19, %15
  %21 = getelementptr inbounds %union.thing* %4, i64 0, i32 0, i32 9
  %22 = bitcast %struct.stats* %21 to i8*
  %23 = load i8* %22, align 1, !tbaa !13
  %24 = sext i8 %23 to i32
  %25 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([17 x i8]* @.str91069, i64 0, i64 0), i8* %16, i32 %24) #8
  br label %26

; <label>:26                                      ; preds = %20, %6, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @whatis(i1 zeroext %insist, i32 %type) #0 {
  %1 = load %union.thing** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 11), align 8, !tbaa !51
  %2 = icmp eq %union.thing* %1, null
  br i1 %2, label %6, label %.preheader5

.preheader5:                                      ; preds = %0
  %3 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([9 x i8]* @.str11096, i64 0, i64 0), i32 %type) #8
  br i1 %insist, label %.lr.ph, label %split8

.lr.ph:                                           ; preds = %.preheader5
  %4 = icmp eq i32 %type, 0
  %5 = icmp eq i32 %type, -2
  br label %8

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([49 x i8]* @.str1095, i64 0, i64 0)) #8
  br label %.loopexit

; <label>:8                                       ; preds = %.backedge, %.lr.ph
  %9 = phi %union.thing* [ %3, %.lr.ph ], [ %35, %.backedge ]
  %10 = load i32* @n_objs, align 4, !tbaa !38
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %.loopexit, label %12

; <label>:12                                      ; preds = %8
  %13 = icmp eq %union.thing* %9, null
  br i1 %13, label %14, label %16

; <label>:14                                      ; preds = %12
  %15 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([28 x i8]* @.str21097, i64 0, i64 0)) #8
  br label %.backedge

; <label>:16                                      ; preds = %12
  br i1 %4, label %.thread, label %17

; <label>:17                                      ; preds = %16
  %18 = getelementptr inbounds %union.thing* %9, i64 0, i32 0, i32 2, i32 0
  %19 = load i32* %18, align 4, !tbaa !8
  %20 = icmp eq i32 %19, %type
  br i1 %20, label %split8, label %21

; <label>:21                                      ; preds = %17
  br i1 %5, label %22, label %.preheader

; <label>:22                                      ; preds = %21
  switch i32 %19, label %.preheader [
    i32 61, label %split8
    i32 47, label %split8
  ]

; <label>:23                                      ; preds = %.preheader
  %24 = getelementptr inbounds %struct.h_list* %30, i64 0, i32 0
  %25 = load i8* %24, align 1, !tbaa !54
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %type_name.exit, label %.preheader

.preheader:                                       ; preds = %23, %22, %21
  %27 = phi i8 [ %25, %23 ], [ 33, %22 ], [ 33, %21 ]
  %hp.02.i = phi %struct.h_list* [ %30, %23 ], [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @type_name.tlist to %struct.h_list*), %22 ], [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @type_name.tlist to %struct.h_list*), %21 ]
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, %type
  %30 = getelementptr inbounds %struct.h_list* %hp.02.i, i64 1
  br i1 %29, label %31, label %23

; <label>:31                                      ; preds = %.preheader
  %32 = getelementptr inbounds %struct.h_list* %hp.02.i, i64 0, i32 1
  %33 = load i8** %32, align 8, !tbaa !52
  br label %type_name.exit

type_name.exit:                                   ; preds = %31, %23
  %.0.i = phi i8* [ %33, %31 ], [ null, %23 ]
  %34 = tail call i32 (i8*, ...)* @msg(i8* getelementptr inbounds ([23 x i8]* @.str31098, i64 0, i64 0), i8* %.0.i) #8
  br label %.backedge

.backedge:                                        ; preds = %type_name.exit, %14
  %35 = tail call %union.thing* @get_item(i8* getelementptr inbounds ([9 x i8]* @.str11096, i64 0, i64 0), i32 %type) #8
  br label %8

split8:                                           ; preds = %22, %22, %17, %.preheader5
  %.lcssa = phi %union.thing* [ %3, %.preheader5 ], [ %9, %17 ], [ %9, %22 ], [ %9, %22 ]
  %36 = icmp eq %union.thing* %.lcssa, null
  br i1 %36, label %.loopexit, label %.thread

.thread:                                          ; preds = %split8, %16
  %37 = phi %union.thing* [ %.lcssa, %split8 ], [ %9, %16 ]
  %38 = bitcast %union.thing* %37 to %struct.anon.0*
  %39 = getelementptr inbounds %union.thing* %37, i64 0, i32 0, i32 2, i32 0
  %40 = load i32* %39, align 4, !tbaa !8
  switch i32 %40, label %set_know.exit1 [
    i32 63, label %41
    i32 33, label %54
    i32 47, label %67
    i32 41, label %80
    i32 93, label %80
    i32 61, label %84
  ]

; <label>:41                                      ; preds = %.thread
  %42 = getelementptr inbounds %union.thing* %37, i64 0, i32 0, i32 9, i32 5, i64 4
  %43 = bitcast i8* %42 to i32*
  %44 = load i32* %43, align 4, !tbaa !50
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %45, i32 4
  store i8 1, i8* %46, align 8, !tbaa !102
  %47 = getelementptr inbounds %struct.anon.0* %38, i64 0, i32 14
  %48 = load i32* %47, align 4, !tbaa !12
  %49 = or i32 %48, 2
  store i32 %49, i32* %47, align 4, !tbaa !12
  %50 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @scr_info to [0 x %struct.obj_info]*), i64 0, i64 %45, i32 3
  %51 = load i8** %50, align 8, !tbaa !1
  %52 = icmp eq i8* %51, null
  br i1 %52, label %set_know.exit1, label %53

; <label>:53                                      ; preds = %41
  tail call void @free(i8* %51) #8
  store i8* null, i8** %50, align 8, !tbaa !1
  br label %set_know.exit1

; <label>:54                                      ; preds = %.thread
  %55 = getelementptr inbounds %union.thing* %37, i64 0, i32 0, i32 9, i32 5, i64 4
  %56 = bitcast i8* %55 to i32*
  %57 = load i32* %56, align 4, !tbaa !50
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %58, i32 4
  store i8 1, i8* %59, align 8, !tbaa !102
  %60 = getelementptr inbounds %struct.anon.0* %38, i64 0, i32 14
  %61 = load i32* %60, align 4, !tbaa !12
  %62 = or i32 %61, 2
  store i32 %62, i32* %60, align 4, !tbaa !12
  %63 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @pot_info to [0 x %struct.obj_info]*), i64 0, i64 %58, i32 3
  %64 = load i8** %63, align 8, !tbaa !1
  %65 = icmp eq i8* %64, null
  br i1 %65, label %set_know.exit1, label %66

; <label>:66                                      ; preds = %54
  tail call void @free(i8* %64) #8
  store i8* null, i8** %63, align 8, !tbaa !1
  br label %set_know.exit1

; <label>:67                                      ; preds = %.thread
  %68 = getelementptr inbounds %union.thing* %37, i64 0, i32 0, i32 9, i32 5, i64 4
  %69 = bitcast i8* %68 to i32*
  %70 = load i32* %69, align 4, !tbaa !50
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %71, i32 4
  store i8 1, i8* %72, align 8, !tbaa !102
  %73 = getelementptr inbounds %struct.anon.0* %38, i64 0, i32 14
  %74 = load i32* %73, align 4, !tbaa !12
  %75 = or i32 %74, 2
  store i32 %75, i32* %73, align 4, !tbaa !12
  %76 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ws_info to [0 x %struct.obj_info]*), i64 0, i64 %71, i32 3
  %77 = load i8** %76, align 8, !tbaa !1
  %78 = icmp eq i8* %77, null
  br i1 %78, label %set_know.exit1, label %79

; <label>:79                                      ; preds = %67
  tail call void @free(i8* %77) #8
  store i8* null, i8** %76, align 8, !tbaa !1
  br label %set_know.exit1

; <label>:80                                      ; preds = %.thread, %.thread
  %81 = getelementptr inbounds %struct.anon.0* %38, i64 0, i32 14
  %82 = load i32* %81, align 4, !tbaa !12
  %83 = or i32 %82, 2
  store i32 %83, i32* %81, align 4, !tbaa !12
  br label %set_know.exit1

; <label>:84                                      ; preds = %.thread
  %85 = getelementptr inbounds %union.thing* %37, i64 0, i32 0, i32 9, i32 5, i64 4
  %86 = bitcast i8* %85 to i32*
  %87 = load i32* %86, align 4, !tbaa !50
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %88, i32 4
  store i8 1, i8* %89, align 8, !tbaa !102
  %90 = getelementptr inbounds %struct.anon.0* %38, i64 0, i32 14
  %91 = load i32* %90, align 4, !tbaa !12
  %92 = or i32 %91, 2
  store i32 %92, i32* %90, align 4, !tbaa !12
  %93 = getelementptr inbounds [0 x %struct.obj_info]* bitcast (<{ { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] }, { i8*, i32, i32, i8*, i8, [7 x i8] } }>* @ring_info to [0 x %struct.obj_info]*), i64 0, i64 %88, i32 3
  %94 = load i8** %93, align 8, !tbaa !1
  %95 = icmp eq i8* %94, null
  br i1 %95, label %set_know.exit1, label %96

; <label>:96                                      ; preds = %84
  tail call void @free(i8* %94) #8
  store i8* null, i8** %93, align 8, !tbaa !1
  br label %set_know.exit1

set_know.exit1:                                   ; preds = %96, %84, %80, %79, %67, %66, %54, %53, %41, %.thread
  %97 = tail call i8* @inv_name(%union.thing* %37, i1 zeroext false) #8
  %98 = tail call i32 (i8*, ...)* @msg(i8* %97) #8
  br label %.loopexit

.loopexit:                                        ; preds = %set_know.exit1, %split8, %8, %6
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @type_name(i32 %type) #1 {
.lr.ph:
  br label %4

; <label>:0                                       ; preds = %4
  %1 = getelementptr inbounds %struct.h_list* %8, i64 0, i32 0
  %2 = load i8* %1, align 1, !tbaa !54
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %.loopexit, label %4

; <label>:4                                       ; preds = %0, %.lr.ph
  %5 = phi i8 [ 33, %.lr.ph ], [ %2, %0 ]
  %hp.02 = phi %struct.h_list* [ bitcast (<{ { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] }, { i8, i8*, i8, [7 x i8] } }>* @type_name.tlist to %struct.h_list*), %.lr.ph ], [ %8, %0 ]
  %6 = sext i8 %5 to i32
  %7 = icmp eq i32 %6, %type
  %8 = getelementptr inbounds %struct.h_list* %hp.02, i64 1
  br i1 %7, label %9, label %0

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %struct.h_list* %hp.02, i64 0, i32 1
  %11 = load i8** %10, align 8, !tbaa !52
  br label %.loopexit

.loopexit:                                        ; preds = %9, %0
  %.0 = phi i8* [ %11, %9 ], [ null, %0 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @set_know(%union.thing* nocapture %obj, %struct.obj_info* nocapture %info) #0 {
  %1 = bitcast %union.thing* %obj to %struct.anon.0*
  %2 = getelementptr inbounds %union.thing* %obj, i64 0, i32 0, i32 9, i32 5, i64 4
  %3 = bitcast i8* %2 to i32*
  %4 = load i32* %3, align 4, !tbaa !50
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.obj_info* %info, i64 %5, i32 4
  store i8 1, i8* %6, align 1, !tbaa !102
  %7 = getelementptr inbounds %struct.anon.0* %1, i64 0, i32 14
  %8 = load i32* %7, align 4, !tbaa !12
  %9 = or i32 %8, 2
  store i32 %9, i32* %7, align 4, !tbaa !12
  %10 = getelementptr inbounds %struct.obj_info* %info, i64 %5, i32 3
  %11 = load i8** %10, align 8, !tbaa !1
  %12 = icmp eq i8* %11, null
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %0
  tail call void @free(i8* %11)
  store i8* null, i8** %10, align 8, !tbaa !1
  br label %14

; <label>:14                                      ; preds = %13, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @teleport() #0 {
  %1 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %2 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %3 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %4 = tail call i32 @wmove(%struct._win_st* %1, i32 %2, i32 %3) #8
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %11, label %6

; <label>:6                                       ; preds = %0
  %7 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %8 = tail call signext i8 (...)* bitcast (i8 ()* @floor_at to i8 (...)*)() #8
  %9 = sext i8 %8 to i32
  %10 = tail call i32 @waddch(%struct._win_st* %7, i32 %9) #8
  br label %11

; <label>:11                                      ; preds = %6, %0
  %12 = tail call zeroext i1 @find_floor(%struct.room* null, %struct.coord* @teleport.c, i32 0, i1 zeroext true) #8
  %13 = tail call %struct.room* @roomin(%struct.coord* @teleport.c) #8
  %14 = load %struct.room** getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 10), align 8, !tbaa !24
  %15 = icmp eq %struct.room* %13, %14
  br i1 %15, label %18, label %16

; <label>:16                                      ; preds = %11
  tail call void @leave_room(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  %17 = load i64* bitcast (%struct.coord* @teleport.c to i64*), align 8
  store i64 %17, i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  tail call void @enter_room(%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2)) #8
  br label %20

; <label>:18                                      ; preds = %11
  %19 = load i64* bitcast (%struct.coord* @teleport.c to i64*), align 8
  store i64 %19, i64* bitcast (%struct.coord* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2) to i64*), align 8
  tail call void @look(i1 zeroext true) #8
  br label %20

; <label>:20                                      ; preds = %18, %16
  %21 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %22 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 1), align 4, !tbaa !23
  %23 = load i32* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 2, i32 0), align 8, !tbaa !22
  %24 = tail call i32 @wmove(%struct._win_st* %21, i32 %22, i32 %23) #8
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %29, label %26

; <label>:26                                      ; preds = %20
  %27 = load %struct._win_st** @stdscr, align 8, !tbaa !1
  %28 = tail call i32 @waddch(%struct._win_st* %27, i32 64) #8
  br label %29

; <label>:29                                      ; preds = %26, %20
  %30 = load i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  %31 = and i16 %30, 256
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %37, label %33

; <label>:33                                      ; preds = %29
  %34 = and i16 %30, -257
  store i16 %34, i16* getelementptr inbounds (%union.thing* @player, i64 0, i32 0, i32 8), align 8, !tbaa !18
  store i32 0, i32* @vf_hit, align 4, !tbaa !38
  %35 = tail call i64 @llvm.objectsize.i64.p0i8(i8* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 5, i32 3, i32 5, i64 0), i1 false)
  %36 = tail call i8* @__memcpy_chk(i8* getelementptr inbounds ([26 x %struct.monster]* @monsters, i64 0, i64 5, i32 3, i32 5, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str121107, i64 0, i64 0), i64 6, i64 %35)
  br label %37

; <label>:37                                      ; preds = %33, %29
  store i32 0, i32* @no_move, align 4, !tbaa !38
  store i32 0, i32* @count, align 4, !tbaa !38
  store i8 0, i8* @running, align 1, !tbaa !5
  tail call void (...)* bitcast (void ()* @flush_type to void (...)*)() #8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @xntohl(i32 %x) #1 {
  %1 = load i8* bitcast (i32* @md_endian to i8*), align 4, !tbaa !28
  %2 = icmp eq i8 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @llvm.bswap.i32(i32 %x)
  br label %5

; <label>:5                                       ; preds = %3, %0
  %.0 = phi i32 [ %4, %3 ], [ %x, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @xhtonl(i32 %x) #1 {
  %1 = load i8* bitcast (i32* @md_endian to i8*), align 4, !tbaa !28
  %2 = icmp eq i8 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @llvm.bswap.i32(i32 %x)
  br label %5

; <label>:5                                       ; preds = %3, %0
  %.0 = phi i32 [ %4, %3 ], [ %x, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @xcrypt(i8* nocapture readonly %key, i8* nocapture readonly %setting) #0 {
  %l_out.i = alloca i32, align 4
  %r_out.i = alloca i32, align 4
  %x.i = alloca i64, align 8
  %r0 = alloca i32, align 4
  %r1 = alloca i32, align 4
  %keybuf = alloca i64, align 8
  %.b = load i1* @des_initialised, align 1
  br i1 %.b, label %.lr.ph28, label %1

; <label>:1                                       ; preds = %0
  call fastcc void @des_init()
  br label %.lr.ph28

.lr.ph28:                                         ; preds = %1, %0
  %2 = bitcast i64* %keybuf to i8*
  %3 = ptrtoint i64* %keybuf to i64
  br label %4

; <label>:4                                       ; preds = %4, %.lr.ph28
  %q.026 = phi i8* [ %2, %.lr.ph28 ], [ %7, %4 ]
  %.0125 = phi i8* [ %key, %.lr.ph28 ], [ %.01., %4 ]
  %5 = load i8* %.0125, align 1, !tbaa !28
  %6 = shl i8 %5, 1
  %7 = getelementptr inbounds i8* %q.026, i64 1
  store i8 %6, i8* %q.026, align 1, !tbaa !28
  %8 = icmp eq i8 %6, 0
  %9 = getelementptr inbounds i8* %.0125, i64 1
  %.01. = select i1 %8, i8* %.0125, i8* %9
  %10 = ptrtoint i8* %7 to i64
  %11 = sub i64 %10, %3
  %12 = icmp ult i64 %11, 8
  br i1 %12, label %4, label %._crit_edge29

._crit_edge29:                                    ; preds = %4
  call fastcc void @des_setkey(i8* %2)
  %13 = load i8* %setting, align 1, !tbaa !28
  %14 = icmp eq i8 %13, 95
  %15 = getelementptr inbounds i8* %setting, i64 1
  %16 = load i8* %15, align 1, !tbaa !28
  %17 = sext i8 %16 to i32
  %18 = icmp sgt i8 %16, 122
  br i1 %14, label %.preheader22, label %98

.preheader22:                                     ; preds = %._crit_edge29
  br i1 %18, label %ascii_to_bin.exit, label %19

; <label>:19                                      ; preds = %.preheader22
  %20 = icmp sgt i8 %16, 96
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %19
  %22 = add nsw i32 %17, -59
  br label %ascii_to_bin.exit

; <label>:23                                      ; preds = %19
  %24 = icmp sgt i8 %16, 90
  br i1 %24, label %ascii_to_bin.exit, label %25

; <label>:25                                      ; preds = %23
  %26 = icmp sgt i8 %16, 64
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %25
  %28 = add nsw i32 %17, -53
  br label %ascii_to_bin.exit

; <label>:29                                      ; preds = %25
  %ch.off.i = add i8 %16, -46
  %30 = icmp ult i8 %ch.off.i, 12
  %31 = add nsw i32 %17, -46
  %..i = select i1 %30, i32 %31, i32 0
  br label %ascii_to_bin.exit

ascii_to_bin.exit:                                ; preds = %29, %27, %23, %21, %.preheader22
  %32 = phi i32 [ %..i, %29 ], [ %22, %21 ], [ %28, %27 ], [ 0, %.preheader22 ], [ 0, %23 ]
  %33 = getelementptr inbounds i8* %setting, i64 2
  %34 = load i8* %33, align 1, !tbaa !28
  %35 = sext i8 %34 to i32
  %36 = icmp sgt i8 %34, 122
  br i1 %36, label %ascii_to_bin.exit.1, label %278

.lr.ph18:                                         ; preds = %ascii_to_bin.exit5.3
  %37 = bitcast i32* %l_out.i to i8*
  %38 = bitcast i32* %r_out.i to i8*
  %39 = bitcast i64* %x.i to i8*
  %tmpcast.i = bitcast i64* %x.i to [2 x i32]*
  %40 = bitcast i64* %x.i to i32*
  %41 = getelementptr inbounds [2 x i32]* %tmpcast.i, i64 0, i64 1
  br label %60

; <label>:42                                      ; preds = %ascii_to_bin.exit.3
  %43 = icmp sgt i8 %335, 96
  br i1 %43, label %44, label %46

; <label>:44                                      ; preds = %42
  %45 = add nsw i32 %336, -59
  br label %ascii_to_bin.exit5

; <label>:46                                      ; preds = %42
  %47 = icmp sgt i8 %335, 90
  br i1 %47, label %ascii_to_bin.exit5, label %48

; <label>:48                                      ; preds = %46
  %49 = icmp sgt i8 %335, 64
  br i1 %49, label %50, label %52

; <label>:50                                      ; preds = %48
  %51 = add nsw i32 %336, -53
  br label %ascii_to_bin.exit5

; <label>:52                                      ; preds = %48
  %ch.off.i2 = add i8 %335, -46
  %53 = icmp ult i8 %ch.off.i2, 12
  %54 = add nsw i32 %336, -46
  %..i3 = select i1 %53, i32 %54, i32 0
  br label %ascii_to_bin.exit5

ascii_to_bin.exit5:                               ; preds = %ascii_to_bin.exit.3, %52, %50, %46, %44
  %55 = phi i32 [ %..i3, %52 ], [ %45, %44 ], [ %51, %50 ], [ 0, %ascii_to_bin.exit.3 ], [ 0, %46 ]
  %56 = getelementptr inbounds i8* %setting, i64 6
  %57 = load i8* %56, align 1, !tbaa !28
  %58 = sext i8 %57 to i32
  %59 = icmp sgt i8 %57, 122
  br i1 %59, label %ascii_to_bin.exit5.1, label %220

; <label>:60                                      ; preds = %.critedge, %.lr.ph18
  %.117 = phi i8* [ %.01., %.lr.ph18 ], [ %.2.lcssa, %.critedge ]
  call void @llvm.lifetime.start(i64 4, i8* %37) #8
  call void @llvm.lifetime.start(i64 4, i8* %38) #8
  call void @llvm.lifetime.start(i64 8, i8* %39) #8
  %.b.i = load i1* @des_initialised, align 1
  br i1 %.b.i, label %62, label %61

; <label>:61                                      ; preds = %60
  call fastcc void @des_init() #8
  br label %62

; <label>:62                                      ; preds = %61, %60
  %63 = load i32* @old_salt, align 4, !tbaa !38
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %setup_salt.exit.i, label %setup_salt.exit.loopexit.i

setup_salt.exit.loopexit.i:                       ; preds = %62
  store i32 0, i32* @old_salt, align 4, !tbaa !38
  store i32 0, i32* @saltbits, align 4, !tbaa !38
  br label %setup_salt.exit.i

setup_salt.exit.i:                                ; preds = %setup_salt.exit.loopexit.i, %62
  %65 = load i64* %keybuf, align 8
  store i64 %65, i64* %x.i, align 8
  %trunc.i = trunc i64 %65 to i32
  %66 = load i8* bitcast (i32* @md_endian to i8*), align 4, !tbaa !28
  %67 = icmp eq i8 %66, 1
  %68 = lshr i64 %65, 32
  %69 = trunc i64 %68 to i32
  br i1 %67, label %xntohl.exit5.i, label %xntohl.exit.i

xntohl.exit.i:                                    ; preds = %setup_salt.exit.i
  %70 = call i32 @llvm.bswap.i32(i32 %trunc.i) #8
  %71 = call i32 @llvm.bswap.i32(i32 %69) #8
  br label %xntohl.exit5.i

xntohl.exit5.i:                                   ; preds = %xntohl.exit.i, %setup_salt.exit.i
  %.0.i36.i = phi i32 [ %70, %xntohl.exit.i ], [ %trunc.i, %setup_salt.exit.i ]
  %.0.i4.i = phi i32 [ %71, %xntohl.exit.i ], [ %69, %setup_salt.exit.i ]
  %72 = call fastcc i32 @do_des(i32 %.0.i36.i, i32 %.0.i4.i, i32* %l_out.i, i32* %r_out.i, i32 1) #8
  %73 = load i32* %l_out.i, align 4, !tbaa !38
  %74 = load i8* bitcast (i32* @md_endian to i8*), align 4, !tbaa !28
  %75 = icmp eq i8 %74, 1
  br i1 %75, label %xhtonl.exit2.thread.i, label %77

xhtonl.exit2.thread.i:                            ; preds = %xntohl.exit5.i
  store i32 %73, i32* %40, align 8, !tbaa !38
  %76 = load i32* %r_out.i, align 4, !tbaa !38
  br label %des_cipher.exit

; <label>:77                                      ; preds = %xntohl.exit5.i
  %78 = call i32 @llvm.bswap.i32(i32 %73) #8
  store i32 %78, i32* %40, align 8, !tbaa !38
  %79 = load i32* %r_out.i, align 4, !tbaa !38
  %80 = call i32 @llvm.bswap.i32(i32 %79) #8
  br label %des_cipher.exit

des_cipher.exit:                                  ; preds = %77, %xhtonl.exit2.thread.i
  %.0.i.i = phi i32 [ %80, %77 ], [ %76, %xhtonl.exit2.thread.i ]
  store i32 %.0.i.i, i32* %41, align 4, !tbaa !38
  %81 = load i64* %x.i, align 8
  store i64 %81, i64* %keybuf, align 8
  call void @llvm.lifetime.end(i64 4, i8* %37) #8
  call void @llvm.lifetime.end(i64 4, i8* %38) #8
  call void @llvm.lifetime.end(i64 8, i8* %39) #8
  %82 = icmp eq i32 %72, 0
  br i1 %82, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %85, %des_cipher.exit
  %q.115 = phi i8* [ %88, %85 ], [ %2, %des_cipher.exit ]
  %.214 = phi i8* [ %86, %85 ], [ %.117, %des_cipher.exit ]
  %83 = load i8* %.214, align 1, !tbaa !28
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %.critedge, label %85

; <label>:85                                      ; preds = %.lr.ph
  %86 = getelementptr inbounds i8* %.214, i64 1
  %87 = shl i8 %83, 1
  %88 = getelementptr inbounds i8* %q.115, i64 1
  %89 = load i8* %q.115, align 1, !tbaa !28
  %90 = xor i8 %89, %87
  store i8 %90, i8* %q.115, align 1, !tbaa !28
  %91 = ptrtoint i8* %88 to i64
  %92 = sub i64 %91, %3
  %93 = icmp ult i64 %92, 8
  br i1 %93, label %.lr.ph, label %.critedge

.critedge:                                        ; preds = %85, %.lr.ph
  %.2.lcssa = phi i8* [ %.214, %.lr.ph ], [ %86, %85 ]
  call fastcc void @des_setkey(i8* %2)
  %94 = load i8* %.2.lcssa, align 1, !tbaa !28
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %._crit_edge, label %60

._crit_edge:                                      ; preds = %ascii_to_bin.exit5.3, %.critedge
  %strncpy = call i8* @strncpy(i8* getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 0), i8* %setting, i64 9)
  store i8 0, i8* getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 9), align 1, !tbaa !28
  %96 = call i64 @strlen(i8* getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 0)) #8
  %97 = getelementptr inbounds [21 x i8]* @xcrypt.output, i64 0, i64 %96
  br label %133

; <label>:98                                      ; preds = %._crit_edge29
  br i1 %18, label %ascii_to_bin.exit13, label %99

; <label>:99                                      ; preds = %98
  %100 = icmp sgt i8 %16, 96
  br i1 %100, label %101, label %103

; <label>:101                                     ; preds = %99
  %102 = add nsw i32 %17, -59
  br label %ascii_to_bin.exit13

; <label>:103                                     ; preds = %99
  %104 = icmp sgt i8 %16, 90
  br i1 %104, label %ascii_to_bin.exit13, label %105

; <label>:105                                     ; preds = %103
  %106 = icmp sgt i8 %16, 64
  br i1 %106, label %107, label %109

; <label>:107                                     ; preds = %105
  %108 = add nsw i32 %17, -53
  br label %ascii_to_bin.exit13

; <label>:109                                     ; preds = %105
  %ch.off.i10 = add i8 %16, -46
  %110 = icmp ult i8 %ch.off.i10, 12
  %111 = add nsw i32 %17, -46
  %..i11 = select i1 %110, i32 %111, i32 0
  br label %ascii_to_bin.exit13

ascii_to_bin.exit13:                              ; preds = %109, %107, %103, %101, %98
  %112 = phi i32 [ %..i11, %109 ], [ %102, %101 ], [ %108, %107 ], [ 0, %98 ], [ 0, %103 ]
  %113 = shl i32 %112, 6
  %114 = sext i8 %13 to i32
  %115 = icmp sgt i8 %13, 122
  br i1 %115, label %ascii_to_bin.exit9, label %116

; <label>:116                                     ; preds = %ascii_to_bin.exit13
  %117 = icmp sgt i8 %13, 96
  br i1 %117, label %118, label %120

; <label>:118                                     ; preds = %116
  %119 = add nsw i32 %114, -59
  br label %ascii_to_bin.exit9

; <label>:120                                     ; preds = %116
  %121 = icmp sgt i8 %13, 90
  br i1 %121, label %ascii_to_bin.exit9, label %122

; <label>:122                                     ; preds = %120
  %123 = icmp sgt i8 %13, 64
  br i1 %123, label %124, label %126

; <label>:124                                     ; preds = %122
  %125 = add nsw i32 %114, -53
  br label %ascii_to_bin.exit9

; <label>:126                                     ; preds = %122
  %ch.off.i6 = add i8 %13, -46
  %127 = icmp ult i8 %ch.off.i6, 12
  %128 = add nsw i32 %114, -46
  %..i7 = select i1 %127, i32 %128, i32 0
  br label %ascii_to_bin.exit9

ascii_to_bin.exit9:                               ; preds = %126, %124, %120, %118, %ascii_to_bin.exit13
  %129 = phi i32 [ %..i7, %126 ], [ %119, %118 ], [ %125, %124 ], [ 0, %ascii_to_bin.exit13 ], [ 0, %120 ]
  %130 = or i32 %129, %113
  store i8 %13, i8* getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 0), align 16, !tbaa !28
  %131 = load i8* %15, align 1, !tbaa !28
  %132 = icmp eq i8 %131, 0
  %. = select i1 %132, i8 %13, i8 %131
  store i8 %., i8* getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 1), align 1, !tbaa !28
  br label %133

; <label>:133                                     ; preds = %ascii_to_bin.exit9, %._crit_edge
  %count.1 = phi i32 [ %333, %._crit_edge ], [ 25, %ascii_to_bin.exit9 ]
  %salt.1 = phi i32 [ %275, %._crit_edge ], [ %130, %ascii_to_bin.exit9 ]
  %p.0 = phi i8* [ %97, %._crit_edge ], [ getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 2), %ascii_to_bin.exit9 ]
  %134 = load i32* @old_salt, align 4, !tbaa !38
  %135 = icmp eq i32 %134, %salt.1
  br i1 %135, label %setup_salt.exit, label %136

; <label>:136                                     ; preds = %133
  store i32 %salt.1, i32* @old_salt, align 4, !tbaa !38
  store i32 0, i32* @saltbits, align 4, !tbaa !38
  br label %137

; <label>:137                                     ; preds = %143, %136
  %138 = phi i32 [ 0, %136 ], [ %144, %143 ]
  %i.03.i = phi i32 [ 0, %136 ], [ %147, %143 ]
  %saltbit.02.i = phi i32 [ 1, %136 ], [ %145, %143 ]
  %obit.01.i = phi i32 [ 8388608, %136 ], [ %146, %143 ]
  %139 = and i32 %saltbit.02.i, %salt.1
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %143, label %141

; <label>:141                                     ; preds = %137
  %142 = or i32 %obit.01.i, %138
  store i32 %142, i32* @saltbits, align 4, !tbaa !38
  br label %143

; <label>:143                                     ; preds = %141, %137
  %144 = phi i32 [ %138, %137 ], [ %142, %141 ]
  %145 = shl i32 %saltbit.02.i, 1
  %146 = lshr i32 %obit.01.i, 1
  %147 = add nsw i32 %i.03.i, 1
  %exitcond.i = icmp eq i32 %147, 24
  br i1 %exitcond.i, label %setup_salt.exit, label %137

setup_salt.exit:                                  ; preds = %143, %133
  %148 = call fastcc i32 @do_des(i32 0, i32 0, i32* %r0, i32* %r1, i32 %count.1)
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %.loopexit

; <label>:150                                     ; preds = %setup_salt.exit
  %151 = load i32* %r0, align 4, !tbaa !38
  %152 = lshr i32 %151, 8
  %153 = lshr i32 %151, 26
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %154
  %156 = load i8* %155, align 1, !tbaa !28
  %157 = getelementptr inbounds i8* %p.0, i64 1
  store i8 %156, i8* %p.0, align 1, !tbaa !28
  %158 = lshr i32 %151, 20
  %159 = and i32 %158, 63
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %160
  %162 = load i8* %161, align 1, !tbaa !28
  %163 = getelementptr inbounds i8* %p.0, i64 2
  store i8 %162, i8* %157, align 1, !tbaa !28
  %164 = lshr i32 %151, 14
  %165 = and i32 %164, 63
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %166
  %168 = load i8* %167, align 1, !tbaa !28
  %169 = getelementptr inbounds i8* %p.0, i64 3
  store i8 %168, i8* %163, align 1, !tbaa !28
  %170 = and i32 %152, 63
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %171
  %173 = load i8* %172, align 1, !tbaa !28
  %174 = getelementptr inbounds i8* %p.0, i64 4
  store i8 %173, i8* %169, align 1, !tbaa !28
  %175 = shl i32 %151, 16
  %176 = load i32* %r1, align 4, !tbaa !38
  %177 = lshr i32 %176, 16
  %178 = or i32 %177, %175
  %179 = lshr i32 %151, 2
  %180 = and i32 %179, 63
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %181
  %183 = load i8* %182, align 1, !tbaa !28
  %184 = getelementptr inbounds i8* %p.0, i64 5
  store i8 %183, i8* %174, align 1, !tbaa !28
  %185 = lshr i32 %178, 12
  %186 = and i32 %185, 63
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %187
  %189 = load i8* %188, align 1, !tbaa !28
  %190 = getelementptr inbounds i8* %p.0, i64 6
  store i8 %189, i8* %184, align 1, !tbaa !28
  %191 = lshr i32 %176, 22
  %192 = and i32 %191, 63
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %193
  %195 = load i8* %194, align 1, !tbaa !28
  %196 = getelementptr inbounds i8* %p.0, i64 7
  store i8 %195, i8* %190, align 1, !tbaa !28
  %197 = and i32 %177, 63
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %198
  %200 = load i8* %199, align 1, !tbaa !28
  %201 = getelementptr inbounds i8* %p.0, i64 8
  store i8 %200, i8* %196, align 1, !tbaa !28
  %202 = shl i32 %176, 2
  %203 = lshr i32 %176, 10
  %204 = and i32 %203, 63
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %205
  %207 = load i8* %206, align 1, !tbaa !28
  %208 = getelementptr inbounds i8* %p.0, i64 9
  store i8 %207, i8* %201, align 1, !tbaa !28
  %209 = lshr i32 %176, 4
  %210 = and i32 %209, 63
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %211
  %213 = load i8* %212, align 1, !tbaa !28
  %214 = getelementptr inbounds i8* %p.0, i64 10
  store i8 %213, i8* %208, align 1, !tbaa !28
  %215 = and i32 %202, 60
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds [65 x i8]* @ascii64, i64 0, i64 %216
  %218 = load i8* %217, align 4, !tbaa !28
  %219 = getelementptr inbounds i8* %p.0, i64 11
  store i8 %218, i8* %214, align 1, !tbaa !28
  store i8 0, i8* %219, align 1, !tbaa !28
  br label %.loopexit

.loopexit:                                        ; preds = %150, %setup_salt.exit, %des_cipher.exit
  %.0 = phi i8* [ getelementptr inbounds ([21 x i8]* @xcrypt.output, i64 0, i64 0), %150 ], [ null, %setup_salt.exit ], [ null, %des_cipher.exit ]
  ret i8* %.0

; <label>:220                                     ; preds = %ascii_to_bin.exit5
  %221 = icmp sgt i8 %57, 96
  br i1 %221, label %231, label %222

; <label>:222                                     ; preds = %220
  %223 = icmp sgt i8 %57, 90
  br i1 %223, label %ascii_to_bin.exit5.1, label %224

; <label>:224                                     ; preds = %222
  %225 = icmp sgt i8 %57, 64
  br i1 %225, label %229, label %226

; <label>:226                                     ; preds = %224
  %ch.off.i2.1 = add i8 %57, -46
  %227 = icmp ult i8 %ch.off.i2.1, 12
  %228 = add nsw i32 %58, -46
  %..i3.1 = select i1 %227, i32 %228, i32 0
  br label %ascii_to_bin.exit5.1

; <label>:229                                     ; preds = %224
  %230 = add nsw i32 %58, -53
  br label %ascii_to_bin.exit5.1

; <label>:231                                     ; preds = %220
  %232 = add nsw i32 %58, -59
  br label %ascii_to_bin.exit5.1

ascii_to_bin.exit5.1:                             ; preds = %231, %229, %226, %222, %ascii_to_bin.exit5
  %233 = phi i32 [ %..i3.1, %226 ], [ %232, %231 ], [ %230, %229 ], [ 0, %ascii_to_bin.exit5 ], [ 0, %222 ]
  %234 = shl i32 %233, 6
  %235 = or i32 %234, %55
  %236 = getelementptr inbounds i8* %setting, i64 7
  %237 = load i8* %236, align 1, !tbaa !28
  %238 = sext i8 %237 to i32
  %239 = icmp sgt i8 %237, 122
  br i1 %239, label %ascii_to_bin.exit5.2, label %240

; <label>:240                                     ; preds = %ascii_to_bin.exit5.1
  %241 = icmp sgt i8 %237, 96
  br i1 %241, label %251, label %242

; <label>:242                                     ; preds = %240
  %243 = icmp sgt i8 %237, 90
  br i1 %243, label %ascii_to_bin.exit5.2, label %244

; <label>:244                                     ; preds = %242
  %245 = icmp sgt i8 %237, 64
  br i1 %245, label %249, label %246

; <label>:246                                     ; preds = %244
  %ch.off.i2.2 = add i8 %237, -46
  %247 = icmp ult i8 %ch.off.i2.2, 12
  %248 = add nsw i32 %238, -46
  %..i3.2 = select i1 %247, i32 %248, i32 0
  br label %ascii_to_bin.exit5.2

; <label>:249                                     ; preds = %244
  %250 = add nsw i32 %238, -53
  br label %ascii_to_bin.exit5.2

; <label>:251                                     ; preds = %240
  %252 = add nsw i32 %238, -59
  br label %ascii_to_bin.exit5.2

ascii_to_bin.exit5.2:                             ; preds = %251, %249, %246, %242, %ascii_to_bin.exit5.1
  %253 = phi i32 [ %..i3.2, %246 ], [ %252, %251 ], [ %250, %249 ], [ 0, %ascii_to_bin.exit5.1 ], [ 0, %242 ]
  %254 = shl i32 %253, 12
  %255 = or i32 %254, %235
  %256 = getelementptr inbounds i8* %setting, i64 8
  %257 = load i8* %256, align 1, !tbaa !28
  %258 = sext i8 %257 to i32
  %259 = icmp sgt i8 %257, 122
  br i1 %259, label %ascii_to_bin.exit5.3, label %260

; <label>:260                                     ; preds = %ascii_to_bin.exit5.2
  %261 = icmp sgt i8 %257, 96
  br i1 %261, label %271, label %262

; <label>:262                                     ; preds = %260
  %263 = icmp sgt i8 %257, 90
  br i1 %263, label %ascii_to_bin.exit5.3, label %264

; <label>:264                                     ; preds = %262
  %265 = icmp sgt i8 %257, 64
  br i1 %265, label %269, label %266

; <label>:266                                     ; preds = %264
  %ch.off.i2.3 = add i8 %257, -46
  %267 = icmp ult i8 %ch.off.i2.3, 12
  %268 = add nsw i32 %258, -46
  %..i3.3 = select i1 %267, i32 %268, i32 0
  br label %ascii_to_bin.exit5.3

; <label>:269                                     ; preds = %264
  %270 = add nsw i32 %258, -53
  br label %ascii_to_bin.exit5.3

; <label>:271                                     ; preds = %260
  %272 = add nsw i32 %258, -59
  br label %ascii_to_bin.exit5.3

ascii_to_bin.exit5.3:                             ; preds = %271, %269, %266, %262, %ascii_to_bin.exit5.2
  %273 = phi i32 [ %..i3.3, %266 ], [ %272, %271 ], [ %270, %269 ], [ 0, %ascii_to_bin.exit5.2 ], [ 0, %262 ]
  %274 = shl i32 %273, 18
  %275 = or i32 %274, %255
  %276 = load i8* %.01., align 1, !tbaa !28
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %._crit_edge, label %.lr.ph18

; <label>:278                                     ; preds = %ascii_to_bin.exit
  %279 = icmp sgt i8 %34, 96
  br i1 %279, label %289, label %280

; <label>:280                                     ; preds = %278
  %281 = icmp sgt i8 %34, 90
  br i1 %281, label %ascii_to_bin.exit.1, label %282

; <label>:282                                     ; preds = %280
  %283 = icmp sgt i8 %34, 64
  br i1 %283, label %287, label %284

; <label>:284                                     ; preds = %282
  %ch.off.i.1 = add i8 %34, -46
  %285 = icmp ult i8 %ch.off.i.1, 12
  %286 = add nsw i32 %35, -46
  %..i.1 = select i1 %285, i32 %286, i32 0
  br label %ascii_to_bin.exit.1

; <label>:287                                     ; preds = %282
  %288 = add nsw i32 %35, -53
  br label %ascii_to_bin.exit.1

; <label>:289                                     ; preds = %278
  %290 = add nsw i32 %35, -59
  br label %ascii_to_bin.exit.1

ascii_to_bin.exit.1:                              ; preds = %289, %287, %284, %280, %ascii_to_bin.exit
  %291 = phi i32 [ %..i.1, %284 ], [ %290, %289 ], [ %288, %287 ], [ 0, %ascii_to_bin.exit ], [ 0, %280 ]
  %292 = shl i32 %291, 6
  %293 = or i32 %292, %32
  %294 = getelementptr inbounds i8* %setting, i64 3
  %295 = load i8* %294, align 1, !tbaa !28
  %296 = sext i8 %295 to i32
  %297 = icmp sgt i8 %295, 122
  br i1 %297, label %ascii_to_bin.exit.2, label %298

; <label>:298                                     ; preds = %ascii_to_bin.exit.1
  %299 = icmp sgt i8 %295, 96
  br i1 %299, label %309, label %300

; <label>:300                                     ; preds = %298
  %301 = icmp sgt i8 %295, 90
  br i1 %301, label %ascii_to_bin.exit.2, label %302

; <label>:302                                     ; preds = %300
  %303 = icmp sgt i8 %295, 64
  br i1 %303, label %307, label %304

; <label>:304                                     ; preds = %302
  %ch.off.i.2 = add i8 %295, -46
  %305 = icmp ult i8 %ch.off.i.2, 12
  %306 = add nsw i32 %296, -46
  %..i.2 = select i1 %305, i32 %306, i32 0
  br label %ascii_to_bin.exit.2

; <label>:307                                     ; preds = %302
  %308 = add nsw i32 %296, -53
  br label %ascii_to_bin.exit.2

; <label>:309                                     ; preds = %298
  %310 = add nsw i32 %296, -59
  br label %ascii_to_bin.exit.2

ascii_to_bin.exit.2:                              ; preds = %309, %307, %304, %300, %ascii_to_bin.exit.1
  %311 = phi i32 [ %..i.2, %304 ], [ %310, %309 ], [ %308, %307 ], [ 0, %ascii_to_bin.exit.1 ], [ 0, %300 ]
  %312 = shl i32 %311, 12
  %313 = or i32 %312, %293
  %314 = getelementptr inbounds i8* %setting, i64 4
  %315 = load i8* %314, align 1, !tbaa !28
  %316 = sext i8 %315 to i32
  %317 = icmp sgt i8 %315, 122
  br i1 %317, label %ascii_to_bin.exit.3, label %318

; <label>:318                                     ; preds = %ascii_to_bin.exit.2
  %319 = icmp sgt i8 %315, 96
  br i1 %319, label %329, label %320

; <label>:320                                     ; preds = %318
  %321 = icmp sgt i8 %315, 90
  br i1 %321, label %ascii_to_bin.exit.3, label %322

; <label>:322                                     ; preds = %320
  %323 = icmp sgt i8 %315, 64
  br i1 %323, label %327, label %324

; <label>:324                                     ; preds = %322
  %ch.off.i.3 = add i8 %315, -46
  %325 = icmp ult i8 %ch.off.i.3, 12
  %326 = add nsw i32 %316, -46
  %..i.3 = select i1 %325, i32 %326, i32 0
  br label %ascii_to_bin.exit.3

; <label>:327                                     ; preds = %322
  %328 = add nsw i32 %316, -53
  br label %ascii_to_bin.exit.3

; <label>:329                                     ; preds = %318
  %330 = add nsw i32 %316, -59
  br label %ascii_to_bin.exit.3

ascii_to_bin.exit.3:                              ; preds = %329, %327, %324, %320, %ascii_to_bin.exit.2
  %331 = phi i32 [ %..i.3, %324 ], [ %330, %329 ], [ %328, %327 ], [ 0, %ascii_to_bin.exit.2 ], [ 0, %320 ]
  %332 = shl i32 %331, 18
  %333 = or i32 %332, %313
  %334 = getelementptr inbounds i8* %setting, i64 5
  %335 = load i8* %334, align 1, !tbaa !28
  %336 = sext i8 %335 to i32
  %337 = icmp sgt i8 %335, 122
  br i1 %337, label %ascii_to_bin.exit5, label %42
}

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @des_init() #0 {
  store i32 0, i32* @old_rawkey1, align 4, !tbaa !38
  store i32 0, i32* @old_rawkey0, align 4, !tbaa !38
  store i32 0, i32* @saltbits, align 4, !tbaa !38
  store i32 0, i32* @old_salt, align 4, !tbaa !38
  store i32* getelementptr inbounds ([32 x i32]* @bits32, i64 0, i64 4), i32** @bits28, align 8, !tbaa !1
  store i32* getelementptr inbounds ([32 x i32]* @bits32, i64 0, i64 8), i32** @bits24, align 8, !tbaa !1
  br label %.preheader28

.preheader28:                                     ; preds = %15, %0
  %indvars.iv95 = phi i64 [ 0, %0 ], [ %indvars.iv.next96, %15 ]
  br label %1

; <label>:1                                       ; preds = %1, %.preheader28
  %indvars.iv92 = phi i64 [ 0, %.preheader28 ], [ %indvars.iv.next93, %1 ]
  %2 = trunc i64 %indvars.iv92 to i32
  %3 = and i32 %2, 32
  %4 = shl i64 %indvars.iv92, 4
  %5 = trunc i64 %4 to i32
  %6 = and i32 %5, 16
  %7 = or i32 %6, %3
  %8 = lshr i32 %2, 1
  %9 = and i32 %8, 15
  %10 = or i32 %7, %9
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [8 x [64 x i8]]* @sbox, i64 0, i64 %indvars.iv95, i64 %11
  %13 = load i8* %12, align 1, !tbaa !28
  %14 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 %indvars.iv95, i64 %indvars.iv92
  store i8 %13, i8* %14, align 1, !tbaa !28
  %indvars.iv.next93 = add nuw nsw i64 %indvars.iv92, 1
  %exitcond94 = icmp eq i64 %indvars.iv.next93, 64
  br i1 %exitcond94, label %15, label %1

; <label>:15                                      ; preds = %1
  %indvars.iv.next96 = add nuw nsw i64 %indvars.iv95, 1
  %exitcond97 = icmp eq i64 %indvars.iv.next96, 8
  br i1 %exitcond97, label %.preheader22, label %.preheader28

.preheader22:                                     ; preds = %27, %15
  %indvars.iv82 = phi i64 [ %indvars.iv.next83, %27 ], [ 0, %15 ]
  %16 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 0, i64 %indvars.iv82
  %17 = load i8* %16, align 1, !tbaa !28
  %18 = shl i8 %17, 4
  %19 = shl i64 %indvars.iv82, 6
  br label %20

; <label>:20                                      ; preds = %20, %.preheader22
  %indvars.iv79 = phi i64 [ 0, %.preheader22 ], [ %indvars.iv.next80, %20 ]
  %21 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 1, i64 %indvars.iv79
  %22 = load i8* %21, align 1, !tbaa !28
  %23 = or i8 %18, %22
  %24 = or i64 %indvars.iv79, %19
  %sext = shl i64 %24, 32
  %25 = ashr exact i64 %sext, 32
  %26 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 0, i64 %25
  store i8 %23, i8* %26, align 1, !tbaa !28
  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1
  %exitcond81 = icmp eq i64 %indvars.iv.next80, 64
  br i1 %exitcond81, label %27, label %20

; <label>:27                                      ; preds = %20
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %exitcond84 = icmp eq i64 %indvars.iv.next83, 64
  br i1 %exitcond84, label %.preheader22.1, label %.preheader22

.preheader18:                                     ; preds = %28
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([56 x i8]* @inv_comp_perm, i64 0, i64 0), i8 -1, i64 56, i32 16, i1 false)
  br label %37

; <label>:28                                      ; preds = %.preheader2091, %28
  %indvars.iv76 = phi i64 [ 0, %.preheader2091 ], [ %indvars.iv.next77, %28 ]
  %i.221 = phi i32 [ 0, %.preheader2091 ], [ %36, %28 ]
  %29 = trunc i32 %i.221 to i8
  %30 = getelementptr inbounds [64 x i8]* @IP, i64 0, i64 %indvars.iv76
  %31 = load i8* %30, align 1, !tbaa !28
  %32 = add i8 %31, -1
  %33 = getelementptr inbounds [64 x i8]* @final_perm, i64 0, i64 %indvars.iv76
  store i8 %32, i8* %33, align 1, !tbaa !28
  %34 = zext i8 %32 to i64
  %35 = getelementptr inbounds [64 x i8]* @init_perm, i64 0, i64 %34
  store i8 %29, i8* %35, align 1, !tbaa !28
  %indvars.iv.next77 = add nuw nsw i64 %indvars.iv76, 1
  %36 = add nsw i32 %i.221, 1
  %exitcond78 = icmp eq i64 %indvars.iv.next77, 64
  br i1 %exitcond78, label %.preheader18, label %28

; <label>:37                                      ; preds = %37, %.preheader18
  %indvars.iv73 = phi i64 [ 0, %.preheader18 ], [ %indvars.iv.next74, %37 ]
  %i.319 = phi i32 [ 0, %.preheader18 ], [ %44, %37 ]
  %38 = trunc i32 %i.319 to i8
  %39 = getelementptr inbounds [56 x i8]* @key_perm, i64 0, i64 %indvars.iv73
  %40 = load i8* %39, align 1, !tbaa !28
  %41 = zext i8 %40 to i64
  %42 = add i64 %41, -1
  %43 = getelementptr inbounds [64 x i8]* @inv_key_perm, i64 0, i64 %42
  store i8 %38, i8* %43, align 1, !tbaa !28
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %44 = add nsw i32 %i.319, 1
  %exitcond75 = icmp eq i64 %indvars.iv.next74, 56
  br i1 %exitcond75, label %.preheader16, label %37

.preheader16:                                     ; preds = %.preheader16, %37
  %indvars.iv70 = phi i64 [ %indvars.iv.next71, %.preheader16 ], [ 0, %37 ]
  %i.417 = phi i32 [ %51, %.preheader16 ], [ 0, %37 ]
  %45 = trunc i32 %i.417 to i8
  %46 = getelementptr inbounds [48 x i8]* @comp_perm, i64 0, i64 %indvars.iv70
  %47 = load i8* %46, align 1, !tbaa !28
  %48 = zext i8 %47 to i64
  %49 = add i64 %48, -1
  %50 = getelementptr inbounds [56 x i8]* @inv_comp_perm, i64 0, i64 %49
  store i8 %45, i8* %50, align 1, !tbaa !28
  %indvars.iv.next71 = add nuw nsw i64 %indvars.iv70, 1
  %51 = add nsw i32 %i.417, 1
  %exitcond72 = icmp eq i64 %indvars.iv.next71, 48
  br i1 %exitcond72, label %.preheader8, label %.preheader16

.preheader8:                                      ; preds = %167, %.preheader16
  %indvars.iv67 = phi i64 [ %indvars.iv.next68, %167 ], [ 0, %.preheader16 ]
  %52 = shl i64 %indvars.iv67, 3
  br label %53

; <label>:53                                      ; preds = %105, %.preheader8
  %indvars.iv47 = phi i64 [ 0, %.preheader8 ], [ %indvars.iv.next48, %105 ]
  %54 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 %indvars.iv67, i64 %indvars.iv47
  store i32 0, i32* %54, align 4, !tbaa !38
  %55 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 %indvars.iv67, i64 %indvars.iv47
  store i32 0, i32* %55, align 4, !tbaa !38
  %56 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 %indvars.iv67, i64 %indvars.iv47
  store i32 0, i32* %56, align 4, !tbaa !38
  %57 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 %indvars.iv67, i64 %indvars.iv47
  store i32 0, i32* %57, align 4, !tbaa !38
  br label %58

; <label>:58                                      ; preds = %100, %53
  %59 = phi i32 [ 0, %53 ], [ %101, %100 ]
  %60 = phi i32 [ 0, %53 ], [ %102, %100 ]
  %61 = phi i32 [ 0, %53 ], [ %103, %100 ]
  %62 = phi i32 [ 0, %53 ], [ %104, %100 ]
  %indvars.iv44 = phi i64 [ 0, %53 ], [ %indvars.iv.next45, %100 ]
  %63 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv44
  %64 = load i8* %63, align 1, !tbaa !28
  %65 = zext i8 %64 to i32
  %66 = trunc i64 %indvars.iv47 to i32
  %67 = and i32 %65, %66
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %100, label %69

; <label>:69                                      ; preds = %58
  %70 = add nsw i64 %indvars.iv44, %52
  %71 = getelementptr inbounds [64 x i8]* @init_perm, i64 0, i64 %70
  %72 = load i8* %71, align 1, !tbaa !28
  %73 = icmp ult i8 %72, 32
  %74 = zext i8 %72 to i64
  br i1 %73, label %75, label %79

; <label>:75                                      ; preds = %69
  %76 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %74
  %77 = load i32* %76, align 4, !tbaa !38
  %78 = or i32 %62, %77
  store i32 %78, i32* %54, align 4, !tbaa !38
  br label %84

; <label>:79                                      ; preds = %69
  %80 = add i64 %74, -32
  %81 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %80
  %82 = load i32* %81, align 4, !tbaa !38
  %83 = or i32 %59, %82
  store i32 %83, i32* %55, align 4, !tbaa !38
  br label %84

; <label>:84                                      ; preds = %79, %75
  %85 = phi i32 [ %83, %79 ], [ %59, %75 ]
  %86 = phi i32 [ %62, %79 ], [ %78, %75 ]
  %87 = getelementptr inbounds [64 x i8]* @final_perm, i64 0, i64 %70
  %88 = load i8* %87, align 1, !tbaa !28
  %89 = icmp ult i8 %88, 32
  %90 = zext i8 %88 to i64
  br i1 %89, label %91, label %95

; <label>:91                                      ; preds = %84
  %92 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %90
  %93 = load i32* %92, align 4, !tbaa !38
  %94 = or i32 %61, %93
  store i32 %94, i32* %56, align 4, !tbaa !38
  br label %100

; <label>:95                                      ; preds = %84
  %96 = add i64 %90, -32
  %97 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %96
  %98 = load i32* %97, align 4, !tbaa !38
  %99 = or i32 %60, %98
  store i32 %99, i32* %57, align 4, !tbaa !38
  br label %100

; <label>:100                                     ; preds = %95, %91, %58
  %101 = phi i32 [ %59, %58 ], [ %85, %95 ], [ %85, %91 ]
  %102 = phi i32 [ %60, %58 ], [ %99, %95 ], [ %60, %91 ]
  %103 = phi i32 [ %61, %58 ], [ %61, %95 ], [ %94, %91 ]
  %104 = phi i32 [ %62, %58 ], [ %86, %95 ], [ %86, %91 ]
  %indvars.iv.next45 = add nuw nsw i64 %indvars.iv44, 1
  %exitcond46 = icmp eq i64 %indvars.iv.next45, 8
  br i1 %exitcond46, label %105, label %58

; <label>:105                                     ; preds = %100
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %exitcond49 = icmp eq i64 %indvars.iv.next48, 256
  br i1 %exitcond49, label %.loopexit, label %53

.loopexit:                                        ; preds = %105
  %106 = mul nsw i64 %indvars.iv67, 7
  br label %107

; <label>:107                                     ; preds = %166, %.loopexit
  %indvars.iv60 = phi i64 [ 0, %.loopexit ], [ %indvars.iv.next61, %166 ]
  %108 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 %indvars.iv67, i64 %indvars.iv60
  store i32 0, i32* %108, align 4, !tbaa !38
  %109 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 %indvars.iv67, i64 %indvars.iv60
  store i32 0, i32* %109, align 4, !tbaa !38
  br label %110

; <label>:110                                     ; preds = %.backedge, %107
  %111 = phi i32 [ 0, %107 ], [ %119, %.backedge ]
  %112 = phi i32 [ 0, %107 ], [ %120, %.backedge ]
  %indvars.iv54 = phi i64 [ 0, %107 ], [ %indvars.iv.next55, %.backedge ]
  %indvars.iv.next55 = add nuw nsw i64 %indvars.iv54, 1
  %113 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv.next55
  %114 = load i8* %113, align 1, !tbaa !28
  %115 = zext i8 %114 to i32
  %116 = trunc i64 %indvars.iv60 to i32
  %117 = and i32 %115, %116
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %.backedge, label %121

.backedge:                                        ; preds = %133, %129, %121, %110
  %119 = phi i32 [ %111, %110 ], [ %136, %133 ], [ %111, %129 ], [ %111, %121 ]
  %120 = phi i32 [ %112, %110 ], [ %112, %133 ], [ %132, %129 ], [ %112, %121 ]
  %exitcond56 = icmp eq i64 %indvars.iv.next55, 7
  br i1 %exitcond56, label %137, label %110

; <label>:121                                     ; preds = %110
  %122 = add nsw i64 %indvars.iv54, %52
  %123 = getelementptr inbounds [64 x i8]* @inv_key_perm, i64 0, i64 %122
  %124 = load i8* %123, align 1, !tbaa !28
  %125 = zext i8 %124 to i64
  %126 = icmp eq i8 %124, -1
  br i1 %126, label %.backedge, label %127

; <label>:127                                     ; preds = %121
  %128 = icmp ult i8 %124, 28
  br i1 %128, label %129, label %133

; <label>:129                                     ; preds = %127
  %.sum103 = add i64 %125, 4
  %130 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %.sum103
  %131 = load i32* %130, align 4, !tbaa !38
  %132 = or i32 %112, %131
  store i32 %132, i32* %108, align 4, !tbaa !38
  br label %.backedge

; <label>:133                                     ; preds = %127
  %.sum = add i64 %125, -24
  %134 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %.sum
  %135 = load i32* %134, align 4, !tbaa !38
  %136 = or i32 %111, %135
  store i32 %136, i32* %109, align 4, !tbaa !38
  br label %.backedge

; <label>:137                                     ; preds = %.backedge
  %138 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 %indvars.iv67, i64 %indvars.iv60
  store i32 0, i32* %138, align 4, !tbaa !38
  %139 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 %indvars.iv67, i64 %indvars.iv60
  store i32 0, i32* %139, align 4, !tbaa !38
  br label %140

; <label>:140                                     ; preds = %.backedge11, %137
  %141 = phi i32 [ 0, %137 ], [ %148, %.backedge11 ]
  %142 = phi i32 [ 0, %137 ], [ %149, %.backedge11 ]
  %indvars.iv57 = phi i64 [ 0, %137 ], [ %indvars.iv.next58, %.backedge11 ]
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %143 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv.next58
  %144 = load i8* %143, align 1, !tbaa !28
  %145 = zext i8 %144 to i32
  %146 = and i32 %145, %116
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %.backedge11, label %150

.backedge11:                                      ; preds = %162, %158, %150, %140
  %148 = phi i32 [ %141, %140 ], [ %165, %162 ], [ %141, %158 ], [ %141, %150 ]
  %149 = phi i32 [ %142, %140 ], [ %142, %162 ], [ %161, %158 ], [ %142, %150 ]
  %exitcond59 = icmp eq i64 %indvars.iv.next58, 7
  br i1 %exitcond59, label %166, label %140

; <label>:150                                     ; preds = %140
  %151 = add nsw i64 %indvars.iv57, %106
  %152 = getelementptr inbounds [56 x i8]* @inv_comp_perm, i64 0, i64 %151
  %153 = load i8* %152, align 1, !tbaa !28
  %154 = zext i8 %153 to i64
  %155 = icmp eq i8 %153, -1
  br i1 %155, label %.backedge11, label %156

; <label>:156                                     ; preds = %150
  %157 = icmp ult i8 %153, 24
  br i1 %157, label %158, label %162

; <label>:158                                     ; preds = %156
  %.sum102 = add i64 %154, 8
  %159 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %.sum102
  %160 = load i32* %159, align 4, !tbaa !38
  %161 = or i32 %142, %160
  store i32 %161, i32* %138, align 4, !tbaa !38
  br label %.backedge11

; <label>:162                                     ; preds = %156
  %.sum101 = add i64 %154, -16
  %163 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %.sum101
  %164 = load i32* %163, align 4, !tbaa !38
  %165 = or i32 %141, %164
  store i32 %165, i32* %139, align 4, !tbaa !38
  br label %.backedge11

; <label>:166                                     ; preds = %.backedge11
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond62 = icmp eq i64 %indvars.iv.next61, 128
  br i1 %exitcond62, label %167, label %107

; <label>:167                                     ; preds = %166
  %indvars.iv.next68 = add nuw nsw i64 %indvars.iv67, 1
  %exitcond69 = icmp eq i64 %indvars.iv.next68, 8
  br i1 %exitcond69, label %.preheader5, label %.preheader8

.preheader5:                                      ; preds = %.preheader5, %167
  %indvars.iv41 = phi i64 [ %indvars.iv.next42, %.preheader5 ], [ 0, %167 ]
  %i.76 = phi i32 [ %174, %.preheader5 ], [ 0, %167 ]
  %168 = trunc i32 %i.76 to i8
  %169 = getelementptr inbounds [32 x i8]* @pbox, i64 0, i64 %indvars.iv41
  %170 = load i8* %169, align 1, !tbaa !28
  %171 = zext i8 %170 to i64
  %172 = add i64 %171, -1
  %173 = getelementptr inbounds [32 x i8]* @un_pbox, i64 0, i64 %172
  store i8 %168, i8* %173, align 1, !tbaa !28
  %indvars.iv.next42 = add nuw nsw i64 %indvars.iv41, 1
  %174 = add nsw i32 %i.76, 1
  %exitcond43 = icmp eq i64 %indvars.iv.next42, 32
  br i1 %exitcond43, label %.preheader3, label %.preheader5

.preheader3:                                      ; preds = %193, %.preheader5
  %indvars.iv31 = phi i64 [ %indvars.iv.next32, %193 ], [ 0, %.preheader5 ]
  %175 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 0, i64 %indvars.iv31
  store i32 0, i32* %175, align 4, !tbaa !38
  br label %176

; <label>:176                                     ; preds = %191, %.preheader3
  %177 = phi i32 [ 0, %.preheader3 ], [ %192, %191 ]
  %indvars.iv = phi i64 [ 0, %.preheader3 ], [ %indvars.iv.next, %191 ]
  %178 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv
  %179 = load i8* %178, align 1, !tbaa !28
  %180 = zext i8 %179 to i32
  %181 = trunc i64 %indvars.iv31 to i32
  %182 = and i32 %180, %181
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %191, label %184

; <label>:184                                     ; preds = %176
  %185 = getelementptr inbounds [32 x i8]* @un_pbox, i64 0, i64 %indvars.iv
  %186 = load i8* %185, align 1, !tbaa !28
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %187
  %189 = load i32* %188, align 4, !tbaa !38
  %190 = or i32 %177, %189
  store i32 %190, i32* %175, align 4, !tbaa !38
  br label %191

; <label>:191                                     ; preds = %184, %176
  %192 = phi i32 [ %177, %176 ], [ %190, %184 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 8
  br i1 %exitcond, label %193, label %176

; <label>:193                                     ; preds = %191
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %exitcond33 = icmp eq i64 %indvars.iv.next32, 256
  br i1 %exitcond33, label %.preheader.138, label %.preheader3

.preheader.138:                                   ; preds = %213, %193
  %indvars.iv31.1 = phi i64 [ %indvars.iv.next32.1, %213 ], [ 0, %193 ]
  %194 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 1, i64 %indvars.iv31.1
  store i32 0, i32* %194, align 4, !tbaa !38
  br label %195

; <label>:195                                     ; preds = %211, %.preheader.138
  %196 = phi i32 [ 0, %.preheader.138 ], [ %212, %211 ]
  %indvars.iv.1 = phi i64 [ 0, %.preheader.138 ], [ %indvars.iv.next.1, %211 ]
  %197 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv.1
  %198 = load i8* %197, align 1, !tbaa !28
  %199 = zext i8 %198 to i32
  %200 = trunc i64 %indvars.iv31.1 to i32
  %201 = and i32 %199, %200
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %211, label %203

; <label>:203                                     ; preds = %195
  %204 = add nsw i64 %indvars.iv.1, 8
  %205 = getelementptr inbounds [32 x i8]* @un_pbox, i64 0, i64 %204
  %206 = load i8* %205, align 1, !tbaa !28
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %207
  %209 = load i32* %208, align 4, !tbaa !38
  %210 = or i32 %196, %209
  store i32 %210, i32* %194, align 4, !tbaa !38
  br label %211

; <label>:211                                     ; preds = %203, %195
  %212 = phi i32 [ %210, %203 ], [ %196, %195 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 8
  br i1 %exitcond.1, label %213, label %195

; <label>:213                                     ; preds = %211
  %indvars.iv.next32.1 = add nuw nsw i64 %indvars.iv31.1, 1
  %exitcond33.1 = icmp eq i64 %indvars.iv.next32.1, 256
  br i1 %exitcond33.1, label %.preheader.239, label %.preheader.138

.preheader.239:                                   ; preds = %233, %213
  %indvars.iv31.2 = phi i64 [ %indvars.iv.next32.2, %233 ], [ 0, %213 ]
  %214 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 2, i64 %indvars.iv31.2
  store i32 0, i32* %214, align 4, !tbaa !38
  br label %215

; <label>:215                                     ; preds = %231, %.preheader.239
  %216 = phi i32 [ 0, %.preheader.239 ], [ %232, %231 ]
  %indvars.iv.2 = phi i64 [ 0, %.preheader.239 ], [ %indvars.iv.next.2, %231 ]
  %217 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv.2
  %218 = load i8* %217, align 1, !tbaa !28
  %219 = zext i8 %218 to i32
  %220 = trunc i64 %indvars.iv31.2 to i32
  %221 = and i32 %219, %220
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %231, label %223

; <label>:223                                     ; preds = %215
  %224 = add nsw i64 %indvars.iv.2, 16
  %225 = getelementptr inbounds [32 x i8]* @un_pbox, i64 0, i64 %224
  %226 = load i8* %225, align 1, !tbaa !28
  %227 = zext i8 %226 to i64
  %228 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %227
  %229 = load i32* %228, align 4, !tbaa !38
  %230 = or i32 %216, %229
  store i32 %230, i32* %214, align 4, !tbaa !38
  br label %231

; <label>:231                                     ; preds = %223, %215
  %232 = phi i32 [ %230, %223 ], [ %216, %215 ]
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %exitcond.2 = icmp eq i64 %indvars.iv.next.2, 8
  br i1 %exitcond.2, label %233, label %215

; <label>:233                                     ; preds = %231
  %indvars.iv.next32.2 = add nuw nsw i64 %indvars.iv31.2, 1
  %exitcond33.2 = icmp eq i64 %indvars.iv.next32.2, 256
  br i1 %exitcond33.2, label %.preheader.340, label %.preheader.239

.preheader.340:                                   ; preds = %253, %233
  %indvars.iv31.3 = phi i64 [ %indvars.iv.next32.3, %253 ], [ 0, %233 ]
  %234 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 3, i64 %indvars.iv31.3
  store i32 0, i32* %234, align 4, !tbaa !38
  br label %235

; <label>:235                                     ; preds = %251, %.preheader.340
  %236 = phi i32 [ 0, %.preheader.340 ], [ %252, %251 ]
  %indvars.iv.3 = phi i64 [ 0, %.preheader.340 ], [ %indvars.iv.next.3, %251 ]
  %237 = getelementptr inbounds [8 x i8]* @bits8, i64 0, i64 %indvars.iv.3
  %238 = load i8* %237, align 1, !tbaa !28
  %239 = zext i8 %238 to i32
  %240 = trunc i64 %indvars.iv31.3 to i32
  %241 = and i32 %239, %240
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %251, label %243

; <label>:243                                     ; preds = %235
  %244 = add nsw i64 %indvars.iv.3, 24
  %245 = getelementptr inbounds [32 x i8]* @un_pbox, i64 0, i64 %244
  %246 = load i8* %245, align 1, !tbaa !28
  %247 = zext i8 %246 to i64
  %248 = getelementptr inbounds [32 x i32]* @bits32, i64 0, i64 %247
  %249 = load i32* %248, align 4, !tbaa !38
  %250 = or i32 %236, %249
  store i32 %250, i32* %234, align 4, !tbaa !38
  br label %251

; <label>:251                                     ; preds = %243, %235
  %252 = phi i32 [ %250, %243 ], [ %236, %235 ]
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.3, 1
  %exitcond.3 = icmp eq i64 %indvars.iv.next.3, 8
  br i1 %exitcond.3, label %253, label %235

; <label>:253                                     ; preds = %251
  %indvars.iv.next32.3 = add nuw nsw i64 %indvars.iv31.3, 1
  %exitcond33.3 = icmp eq i64 %indvars.iv.next32.3, 256
  br i1 %exitcond33.3, label %254, label %.preheader.340

; <label>:254                                     ; preds = %253
  store i1 true, i1* @des_initialised, align 1
  ret void

.preheader22.1:                                   ; preds = %266, %27
  %indvars.iv82.1 = phi i64 [ %indvars.iv.next83.1, %266 ], [ 0, %27 ]
  %255 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 2, i64 %indvars.iv82.1
  %256 = load i8* %255, align 1, !tbaa !28
  %257 = shl i8 %256, 4
  %258 = shl i64 %indvars.iv82.1, 6
  br label %259

; <label>:259                                     ; preds = %259, %.preheader22.1
  %indvars.iv79.1 = phi i64 [ 0, %.preheader22.1 ], [ %indvars.iv.next80.1, %259 ]
  %260 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 3, i64 %indvars.iv79.1
  %261 = load i8* %260, align 1, !tbaa !28
  %262 = or i8 %257, %261
  %263 = or i64 %indvars.iv79.1, %258
  %sext98 = shl i64 %263, 32
  %264 = ashr exact i64 %sext98, 32
  %265 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 1, i64 %264
  store i8 %262, i8* %265, align 1, !tbaa !28
  %indvars.iv.next80.1 = add nuw nsw i64 %indvars.iv79.1, 1
  %exitcond81.1 = icmp eq i64 %indvars.iv.next80.1, 64
  br i1 %exitcond81.1, label %266, label %259

; <label>:266                                     ; preds = %259
  %indvars.iv.next83.1 = add nuw nsw i64 %indvars.iv82.1, 1
  %exitcond84.1 = icmp eq i64 %indvars.iv.next83.1, 64
  br i1 %exitcond84.1, label %.preheader22.2, label %.preheader22.1

.preheader22.2:                                   ; preds = %278, %266
  %indvars.iv82.2 = phi i64 [ %indvars.iv.next83.2, %278 ], [ 0, %266 ]
  %267 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 4, i64 %indvars.iv82.2
  %268 = load i8* %267, align 1, !tbaa !28
  %269 = shl i8 %268, 4
  %270 = shl i64 %indvars.iv82.2, 6
  br label %271

; <label>:271                                     ; preds = %271, %.preheader22.2
  %indvars.iv79.2 = phi i64 [ 0, %.preheader22.2 ], [ %indvars.iv.next80.2, %271 ]
  %272 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 5, i64 %indvars.iv79.2
  %273 = load i8* %272, align 1, !tbaa !28
  %274 = or i8 %269, %273
  %275 = or i64 %indvars.iv79.2, %270
  %sext99 = shl i64 %275, 32
  %276 = ashr exact i64 %sext99, 32
  %277 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 2, i64 %276
  store i8 %274, i8* %277, align 1, !tbaa !28
  %indvars.iv.next80.2 = add nuw nsw i64 %indvars.iv79.2, 1
  %exitcond81.2 = icmp eq i64 %indvars.iv.next80.2, 64
  br i1 %exitcond81.2, label %278, label %271

; <label>:278                                     ; preds = %271
  %indvars.iv.next83.2 = add nuw nsw i64 %indvars.iv82.2, 1
  %exitcond84.2 = icmp eq i64 %indvars.iv.next83.2, 64
  br i1 %exitcond84.2, label %.preheader22.3, label %.preheader22.2

.preheader22.3:                                   ; preds = %290, %278
  %indvars.iv82.3 = phi i64 [ %indvars.iv.next83.3, %290 ], [ 0, %278 ]
  %279 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 6, i64 %indvars.iv82.3
  %280 = load i8* %279, align 1, !tbaa !28
  %281 = shl i8 %280, 4
  %282 = shl i64 %indvars.iv82.3, 6
  br label %283

; <label>:283                                     ; preds = %283, %.preheader22.3
  %indvars.iv79.3 = phi i64 [ 0, %.preheader22.3 ], [ %indvars.iv.next80.3, %283 ]
  %284 = getelementptr inbounds [8 x [64 x i8]]* @u_sbox, i64 0, i64 7, i64 %indvars.iv79.3
  %285 = load i8* %284, align 1, !tbaa !28
  %286 = or i8 %281, %285
  %287 = or i64 %indvars.iv79.3, %282
  %sext100 = shl i64 %287, 32
  %288 = ashr exact i64 %sext100, 32
  %289 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 3, i64 %288
  store i8 %286, i8* %289, align 1, !tbaa !28
  %indvars.iv.next80.3 = add nuw nsw i64 %indvars.iv79.3, 1
  %exitcond81.3 = icmp eq i64 %indvars.iv.next80.3, 64
  br i1 %exitcond81.3, label %290, label %283

; <label>:290                                     ; preds = %283
  %indvars.iv.next83.3 = add nuw nsw i64 %indvars.iv82.3, 1
  %exitcond84.3 = icmp eq i64 %indvars.iv.next83.3, 64
  br i1 %exitcond84.3, label %.preheader2091, label %.preheader22.3

.preheader2091:                                   ; preds = %290
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([64 x i8]* @inv_key_perm, i64 0, i64 0), i8 -1, i64 64, i32 16, i1 false)
  br label %28
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @des_setkey(i8* nocapture readonly %key) #0 {
  %.b = load i1* @des_initialised, align 1
  br i1 %.b, label %2, label %1

; <label>:1                                       ; preds = %0
  tail call fastcc void @des_init()
  br label %2

; <label>:2                                       ; preds = %1, %0
  %3 = bitcast i8* %key to i32*
  %4 = load i32* %3, align 4, !tbaa !38
  %5 = load i8* bitcast (i32* @md_endian to i8*), align 4, !tbaa !28
  %6 = icmp eq i8 %5, 1
  %7 = getelementptr inbounds i8* %key, i64 4
  %8 = bitcast i8* %7 to i32*
  %9 = load i32* %8, align 4, !tbaa !38
  br i1 %6, label %xntohl.exit5, label %xntohl.exit

xntohl.exit:                                      ; preds = %2
  %10 = tail call i32 @llvm.bswap.i32(i32 %4) #8
  %11 = tail call i32 @llvm.bswap.i32(i32 %9) #8
  br label %xntohl.exit5

xntohl.exit5:                                     ; preds = %xntohl.exit, %2
  %.0.i6 = phi i32 [ %10, %xntohl.exit ], [ %4, %2 ]
  %.0.i4 = phi i32 [ %11, %xntohl.exit ], [ %9, %2 ]
  %12 = or i32 %.0.i4, %.0.i6
  %13 = icmp ne i32 %12, 0
  %14 = load i32* @old_rawkey0, align 4
  %15 = icmp eq i32 %.0.i6, %14
  %or.cond = and i1 %13, %15
  %16 = load i32* @old_rawkey1, align 4
  %17 = icmp eq i32 %.0.i4, %16
  %or.cond3 = and i1 %or.cond, %17
  br i1 %or.cond3, label %.loopexit, label %18

; <label>:18                                      ; preds = %xntohl.exit5
  store i32 %.0.i6, i32* @old_rawkey0, align 4, !tbaa !38
  store i32 %.0.i4, i32* @old_rawkey1, align 4, !tbaa !38
  %19 = lshr i32 %.0.i6, 25
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 0, i64 %20
  %22 = load i32* %21, align 4, !tbaa !38
  %23 = lshr i32 %.0.i6, 17
  %24 = and i32 %23, 127
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 1, i64 %25
  %27 = load i32* %26, align 4, !tbaa !38
  %28 = or i32 %27, %22
  %29 = lshr i32 %.0.i6, 9
  %30 = and i32 %29, 127
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 2, i64 %31
  %33 = load i32* %32, align 4, !tbaa !38
  %34 = or i32 %28, %33
  %35 = lshr i32 %.0.i6, 1
  %36 = and i32 %35, 127
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 3, i64 %37
  %39 = load i32* %38, align 4, !tbaa !38
  %40 = or i32 %34, %39
  %41 = lshr i32 %.0.i4, 25
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 4, i64 %42
  %44 = load i32* %43, align 4, !tbaa !38
  %45 = or i32 %40, %44
  %46 = lshr i32 %.0.i4, 17
  %47 = and i32 %46, 127
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 5, i64 %48
  %50 = load i32* %49, align 4, !tbaa !38
  %51 = or i32 %45, %50
  %52 = lshr i32 %.0.i4, 9
  %53 = and i32 %52, 127
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 6, i64 %54
  %56 = load i32* %55, align 4, !tbaa !38
  %57 = or i32 %51, %56
  %58 = lshr i32 %.0.i4, 1
  %59 = and i32 %58, 127
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskl, i64 0, i64 7, i64 %60
  %62 = load i32* %61, align 4, !tbaa !38
  %63 = or i32 %57, %62
  %64 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 0, i64 %20
  %65 = load i32* %64, align 4, !tbaa !38
  %66 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 1, i64 %25
  %67 = load i32* %66, align 4, !tbaa !38
  %68 = or i32 %67, %65
  %69 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 2, i64 %31
  %70 = load i32* %69, align 4, !tbaa !38
  %71 = or i32 %68, %70
  %72 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 3, i64 %37
  %73 = load i32* %72, align 4, !tbaa !38
  %74 = or i32 %71, %73
  %75 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 4, i64 %42
  %76 = load i32* %75, align 4, !tbaa !38
  %77 = or i32 %74, %76
  %78 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 5, i64 %48
  %79 = load i32* %78, align 4, !tbaa !38
  %80 = or i32 %77, %79
  %81 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 6, i64 %54
  %82 = load i32* %81, align 4, !tbaa !38
  %83 = or i32 %80, %82
  %84 = getelementptr inbounds [8 x [128 x i32]]* @key_perm_maskr, i64 0, i64 7, i64 %60
  %85 = load i32* %84, align 4, !tbaa !38
  %86 = or i32 %83, %85
  br label %87

; <label>:87                                      ; preds = %87, %18
  %indvars.iv = phi i64 [ 0, %18 ], [ %indvars.iv.next, %87 ]
  %shifts.08 = phi i32 [ 0, %18 ], [ %91, %87 ]
  %88 = getelementptr inbounds [16 x i8]* @key_shifts, i64 0, i64 %indvars.iv
  %89 = load i8* %88, align 1, !tbaa !28
  %90 = zext i8 %89 to i32
  %91 = add nsw i32 %90, %shifts.08
  %92 = shl i32 %63, %91
  %93 = sub nsw i32 28, %91
  %94 = lshr i32 %63, %93
  %95 = or i32 %94, %92
  %96 = shl i32 %86, %91
  %97 = lshr i32 %86, %93
  %98 = or i32 %97, %96
  %99 = lshr i32 %95, 21
  %100 = and i32 %99, 127
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 0, i64 %101
  %103 = load i32* %102, align 4, !tbaa !38
  %104 = lshr i32 %95, 14
  %105 = and i32 %104, 127
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 1, i64 %106
  %108 = load i32* %107, align 4, !tbaa !38
  %109 = or i32 %108, %103
  %110 = lshr i32 %95, 7
  %111 = and i32 %110, 127
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 2, i64 %112
  %114 = load i32* %113, align 4, !tbaa !38
  %115 = or i32 %109, %114
  %116 = and i32 %95, 127
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 3, i64 %117
  %119 = load i32* %118, align 4, !tbaa !38
  %120 = or i32 %115, %119
  %121 = lshr i32 %98, 21
  %122 = and i32 %121, 127
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 4, i64 %123
  %125 = load i32* %124, align 4, !tbaa !38
  %126 = or i32 %120, %125
  %127 = lshr i32 %98, 14
  %128 = and i32 %127, 127
  %129 = zext i32 %128 to i64
  %130 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 5, i64 %129
  %131 = load i32* %130, align 4, !tbaa !38
  %132 = or i32 %126, %131
  %133 = lshr i32 %98, 7
  %134 = and i32 %133, 127
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 6, i64 %135
  %137 = load i32* %136, align 4, !tbaa !38
  %138 = or i32 %132, %137
  %139 = and i32 %98, 127
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskl, i64 0, i64 7, i64 %140
  %142 = load i32* %141, align 4, !tbaa !38
  %143 = or i32 %138, %142
  %144 = getelementptr inbounds [16 x i32]* @en_keysl, i64 0, i64 %indvars.iv
  store i32 %143, i32* %144, align 4, !tbaa !38
  %145 = sub nsw i64 15, %indvars.iv
  %146 = getelementptr inbounds [16 x i32]* @de_keysl, i64 0, i64 %145
  store i32 %143, i32* %146, align 4, !tbaa !38
  %147 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 0, i64 %101
  %148 = load i32* %147, align 4, !tbaa !38
  %149 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 1, i64 %106
  %150 = load i32* %149, align 4, !tbaa !38
  %151 = or i32 %150, %148
  %152 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 2, i64 %112
  %153 = load i32* %152, align 4, !tbaa !38
  %154 = or i32 %151, %153
  %155 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 3, i64 %117
  %156 = load i32* %155, align 4, !tbaa !38
  %157 = or i32 %154, %156
  %158 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 4, i64 %123
  %159 = load i32* %158, align 4, !tbaa !38
  %160 = or i32 %157, %159
  %161 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 5, i64 %129
  %162 = load i32* %161, align 4, !tbaa !38
  %163 = or i32 %160, %162
  %164 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 6, i64 %135
  %165 = load i32* %164, align 4, !tbaa !38
  %166 = or i32 %163, %165
  %167 = getelementptr inbounds [8 x [128 x i32]]* @comp_maskr, i64 0, i64 7, i64 %140
  %168 = load i32* %167, align 4, !tbaa !38
  %169 = or i32 %166, %168
  %170 = getelementptr inbounds [16 x i32]* @en_keysr, i64 0, i64 %indvars.iv
  store i32 %169, i32* %170, align 4, !tbaa !38
  %171 = getelementptr inbounds [16 x i32]* @de_keysr, i64 0, i64 %145
  store i32 %169, i32* %171, align 4, !tbaa !38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 16
  br i1 %exitcond, label %.loopexit, label %87

.loopexit:                                        ; preds = %87, %xntohl.exit5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @do_des(i32 %l_in, i32 %r_in, i32* nocapture %l_out, i32* nocapture %r_out, i32 %count) #0 {
  %1 = icmp eq i32 %count, 0
  br i1 %1, label %213, label %2

; <label>:2                                       ; preds = %0
  %3 = icmp sgt i32 %count, 0
  %4 = sub nsw i32 0, %count
  %kl1.0 = select i1 %3, i32* getelementptr inbounds ([16 x i32]* @en_keysl, i64 0, i64 0), i32* getelementptr inbounds ([16 x i32]* @de_keysl, i64 0, i64 0)
  %kr1.0 = select i1 %3, i32* getelementptr inbounds ([16 x i32]* @en_keysr, i64 0, i64 0), i32* getelementptr inbounds ([16 x i32]* @de_keysr, i64 0, i64 0)
  %.01 = select i1 %3, i32 %count, i32 %4
  %5 = lshr i32 %l_in, 24
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 0, i64 %6
  %8 = load i32* %7, align 4, !tbaa !38
  %9 = lshr i32 %l_in, 16
  %10 = and i32 %9, 255
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 1, i64 %11
  %13 = load i32* %12, align 4, !tbaa !38
  %14 = or i32 %13, %8
  %15 = lshr i32 %l_in, 8
  %16 = and i32 %15, 255
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 2, i64 %17
  %19 = load i32* %18, align 4, !tbaa !38
  %20 = or i32 %14, %19
  %21 = and i32 %l_in, 255
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 3, i64 %22
  %24 = load i32* %23, align 4, !tbaa !38
  %25 = or i32 %20, %24
  %26 = lshr i32 %r_in, 24
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 4, i64 %27
  %29 = load i32* %28, align 4, !tbaa !38
  %30 = or i32 %25, %29
  %31 = lshr i32 %r_in, 16
  %32 = and i32 %31, 255
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 5, i64 %33
  %35 = load i32* %34, align 4, !tbaa !38
  %36 = or i32 %30, %35
  %37 = lshr i32 %r_in, 8
  %38 = and i32 %37, 255
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 6, i64 %39
  %41 = load i32* %40, align 4, !tbaa !38
  %42 = or i32 %36, %41
  %43 = and i32 %r_in, 255
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskl, i64 0, i64 7, i64 %44
  %46 = load i32* %45, align 4, !tbaa !38
  %47 = or i32 %42, %46
  %48 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 0, i64 %6
  %49 = load i32* %48, align 4, !tbaa !38
  %50 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 1, i64 %11
  %51 = load i32* %50, align 4, !tbaa !38
  %52 = or i32 %51, %49
  %53 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 2, i64 %17
  %54 = load i32* %53, align 4, !tbaa !38
  %55 = or i32 %52, %54
  %56 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 3, i64 %22
  %57 = load i32* %56, align 4, !tbaa !38
  %58 = or i32 %55, %57
  %59 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 4, i64 %27
  %60 = load i32* %59, align 4, !tbaa !38
  %61 = or i32 %58, %60
  %62 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 5, i64 %33
  %63 = load i32* %62, align 4, !tbaa !38
  %64 = or i32 %61, %63
  %65 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 6, i64 %39
  %66 = load i32* %65, align 4, !tbaa !38
  %67 = or i32 %64, %66
  %68 = getelementptr inbounds [8 x [256 x i32]]* @ip_maskr, i64 0, i64 7, i64 %44
  %69 = load i32* %68, align 4, !tbaa !38
  %70 = or i32 %67, %69
  %71 = icmp eq i32 %.01, 0
  br i1 %71, label %._crit_edge, label %.preheader.lr.ph

.preheader.lr.ph:                                 ; preds = %2
  %72 = load i32* @saltbits, align 4, !tbaa !38
  br label %.preheader

.loopexit:                                        ; preds = %75
  %73 = add nsw i32 %.in, -1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %._crit_edge, label %.preheader

.preheader:                                       ; preds = %.loopexit, %.preheader.lr.ph
  %.in = phi i32 [ %.01, %.preheader.lr.ph ], [ %73, %.loopexit ]
  %r.08 = phi i32 [ %70, %.preheader.lr.ph ], [ %r.13, %.loopexit ]
  %l.07 = phi i32 [ %47, %.preheader.lr.ph ], [ %145, %.loopexit ]
  br label %75

; <label>:75                                      ; preds = %75, %.preheader
  %round.06 = phi i32 [ 16, %.preheader ], [ %76, %75 ]
  %kr.05 = phi i32* [ %kr1.0, %.preheader ], [ %110, %75 ]
  %kl.04 = phi i32* [ %kl1.0, %.preheader ], [ %106, %75 ]
  %r.13 = phi i32 [ %r.08, %.preheader ], [ %145, %75 ]
  %l.12 = phi i32 [ %l.07, %.preheader ], [ %r.13, %75 ]
  %76 = add nsw i32 %round.06, -1
  %77 = shl i32 %r.13, 23
  %78 = and i32 %77, 8388608
  %79 = lshr i32 %r.13, 9
  %80 = and i32 %79, 8126464
  %81 = or i32 %78, %80
  %82 = lshr i32 %r.13, 11
  %83 = and i32 %82, 258048
  %84 = or i32 %81, %83
  %85 = lshr i32 %r.13, 13
  %86 = and i32 %85, 4032
  %87 = or i32 %84, %86
  %88 = lshr i32 %r.13, 15
  %89 = and i32 %88, 63
  %90 = or i32 %87, %89
  %91 = shl i32 %r.13, 7
  %92 = and i32 %91, 16515072
  %93 = shl i32 %r.13, 5
  %94 = and i32 %93, 258048
  %95 = shl i32 %r.13, 3
  %96 = and i32 %95, 4032
  %97 = shl i32 %r.13, 1
  %98 = and i32 %97, 62
  %99 = lshr i32 %r.13, 31
  %100 = or i32 %94, %99
  %101 = or i32 %100, %92
  %102 = or i32 %101, %96
  %103 = or i32 %102, %98
  %104 = xor i32 %90, %103
  %105 = and i32 %72, %104
  %106 = getelementptr inbounds i32* %kl.04, i64 1
  %107 = load i32* %kl.04, align 4, !tbaa !38
  %108 = xor i32 %107, %90
  %109 = xor i32 %108, %105
  %110 = getelementptr inbounds i32* %kr.05, i64 1
  %111 = load i32* %kr.05, align 4, !tbaa !38
  %112 = xor i32 %105, %103
  %113 = xor i32 %112, %111
  %114 = lshr i32 %109, 12
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 0, i64 %115
  %117 = load i8* %116, align 1, !tbaa !28
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 0, i64 %118
  %120 = load i32* %119, align 4, !tbaa !38
  %121 = and i32 %109, 4095
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 1, i64 %122
  %124 = load i8* %123, align 1, !tbaa !28
  %125 = zext i8 %124 to i64
  %126 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 1, i64 %125
  %127 = load i32* %126, align 4, !tbaa !38
  %128 = or i32 %127, %120
  %129 = lshr i32 %113, 12
  %130 = zext i32 %129 to i64
  %131 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 2, i64 %130
  %132 = load i8* %131, align 1, !tbaa !28
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 2, i64 %133
  %135 = load i32* %134, align 4, !tbaa !38
  %136 = or i32 %128, %135
  %137 = and i32 %113, 4095
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds [4 x [4096 x i8]]* @m_sbox, i64 0, i64 3, i64 %138
  %140 = load i8* %139, align 1, !tbaa !28
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [4 x [256 x i32]]* @psbox, i64 0, i64 3, i64 %141
  %143 = load i32* %142, align 4, !tbaa !38
  %144 = or i32 %136, %143
  %145 = xor i32 %144, %l.12
  %146 = icmp eq i32 %76, 0
  br i1 %146, label %.loopexit, label %75

._crit_edge:                                      ; preds = %.loopexit, %2
  %r.0.lcssa = phi i32 [ %70, %2 ], [ %r.13, %.loopexit ]
  %l.0.lcssa = phi i32 [ %47, %2 ], [ %145, %.loopexit ]
  %147 = lshr i32 %l.0.lcssa, 24
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 0, i64 %148
  %150 = load i32* %149, align 4, !tbaa !38
  %151 = lshr i32 %l.0.lcssa, 16
  %152 = and i32 %151, 255
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 1, i64 %153
  %155 = load i32* %154, align 4, !tbaa !38
  %156 = or i32 %155, %150
  %157 = lshr i32 %l.0.lcssa, 8
  %158 = and i32 %157, 255
  %159 = zext i32 %158 to i64
  %160 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 2, i64 %159
  %161 = load i32* %160, align 4, !tbaa !38
  %162 = or i32 %156, %161
  %163 = and i32 %l.0.lcssa, 255
  %164 = zext i32 %163 to i64
  %165 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 3, i64 %164
  %166 = load i32* %165, align 4, !tbaa !38
  %167 = or i32 %162, %166
  %168 = lshr i32 %r.0.lcssa, 24
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 4, i64 %169
  %171 = load i32* %170, align 4, !tbaa !38
  %172 = or i32 %167, %171
  %173 = lshr i32 %r.0.lcssa, 16
  %174 = and i32 %173, 255
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 5, i64 %175
  %177 = load i32* %176, align 4, !tbaa !38
  %178 = or i32 %172, %177
  %179 = lshr i32 %r.0.lcssa, 8
  %180 = and i32 %179, 255
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 6, i64 %181
  %183 = load i32* %182, align 4, !tbaa !38
  %184 = or i32 %178, %183
  %185 = and i32 %r.0.lcssa, 255
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskl, i64 0, i64 7, i64 %186
  %188 = load i32* %187, align 4, !tbaa !38
  %189 = or i32 %184, %188
  store i32 %189, i32* %l_out, align 4, !tbaa !38
  %190 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 0, i64 %148
  %191 = load i32* %190, align 4, !tbaa !38
  %192 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 1, i64 %153
  %193 = load i32* %192, align 4, !tbaa !38
  %194 = or i32 %193, %191
  %195 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 2, i64 %159
  %196 = load i32* %195, align 4, !tbaa !38
  %197 = or i32 %194, %196
  %198 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 3, i64 %164
  %199 = load i32* %198, align 4, !tbaa !38
  %200 = or i32 %197, %199
  %201 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 4, i64 %169
  %202 = load i32* %201, align 4, !tbaa !38
  %203 = or i32 %200, %202
  %204 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 5, i64 %175
  %205 = load i32* %204, align 4, !tbaa !38
  %206 = or i32 %203, %205
  %207 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 6, i64 %181
  %208 = load i32* %207, align 4, !tbaa !38
  %209 = or i32 %206, %208
  %210 = getelementptr inbounds [8 x [256 x i32]]* @fp_maskr, i64 0, i64 7, i64 %186
  %211 = load i32* %210, align 4, !tbaa !38
  %212 = or i32 %209, %211
  store i32 %212, i32* %r_out, align 4, !tbaa !38
  br label %213

; <label>:213                                     ; preds = %._crit_edge, %0
  %.0 = phi i32 [ 0, %._crit_edge ], [ 1, %0 ]
  ret i32 %.0
}

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { cold nounwind }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !6, i64 0}
!6 = metadata !{metadata !"_Bool", metadata !3, i64 0}
!7 = metadata !{i8 0, i8 2}
!8 = metadata !{metadata !9, metadata !10, i64 16}
!9 = metadata !{metadata !"", metadata !2, i64 0, metadata !2, i64 8, metadata !10, i64 16, metadata !11, i64 20, metadata !2, i64 32, metadata !10, i64 40, metadata !3, i64 44, metadata !3, i64 45, metadata !3, i64 53, metadata !10, i64 64, metadata !10, i64 68, metadata !10, i64 72, metadata !10, i64 76, metadata !10, i64 80, metadata !10, i64 84, metadata !10, i64 88, metadata !2, i64 96}
!10 = metadata !{metadata !"int", metadata !3, i64 0}
!11 = metadata !{metadata !"", metadata !10, i64 0, metadata !10, i64 4}
!12 = metadata !{metadata !9, metadata !10, i64 84}
!13 = metadata !{metadata !9, metadata !3, i64 44}
!14 = metadata !{metadata !15, metadata !2, i64 0}
!15 = metadata !{metadata !"", metadata !2, i64 0, metadata !2, i64 8, metadata !11, i64 16, metadata !6, i64 24, metadata !3, i64 25, metadata !3, i64 26, metadata !3, i64 27, metadata !2, i64 32, metadata !16, i64 40, metadata !17, i64 44, metadata !2, i64 88, metadata !2, i64 96, metadata !10, i64 104}
!16 = metadata !{metadata !"short", metadata !3, i64 0}
!17 = metadata !{metadata !"stats", metadata !10, i64 0, metadata !10, i64 4, metadata !10, i64 8, metadata !10, i64 12, metadata !10, i64 16, metadata !3, i64 20, metadata !10, i64 36}
!18 = metadata !{metadata !15, metadata !16, i64 40}
!19 = metadata !{metadata !15, metadata !6, i64 24}
!20 = metadata !{metadata !11, metadata !10, i64 4}
!21 = metadata !{metadata !11, metadata !10, i64 0}
!22 = metadata !{metadata !15, metadata !10, i64 16}
!23 = metadata !{metadata !15, metadata !10, i64 20}
!24 = metadata !{metadata !15, metadata !2, i64 88}
!25 = metadata !{metadata !26, metadata !10, i64 24}
!26 = metadata !{metadata !"room", metadata !11, i64 0, metadata !11, i64 8, metadata !11, i64 16, metadata !10, i64 24, metadata !16, i64 28, metadata !10, i64 32, metadata !3, i64 36}
!27 = metadata !{metadata !15, metadata !2, i64 32}
!28 = metadata !{metadata !3, metadata !3, i64 0}
!29 = metadata !{metadata !26, metadata !10, i64 0}
!30 = metadata !{metadata !26, metadata !10, i64 8}
!31 = metadata !{metadata !26, metadata !10, i64 4}
!32 = metadata !{metadata !26, metadata !10, i64 12}
!33 = metadata !{metadata !34, metadata !3, i64 0}
!34 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 1, metadata !2, i64 8}
!35 = metadata !{metadata !26, metadata !10, i64 32}
!36 = metadata !{metadata !34, metadata !3, i64 1}
!37 = metadata !{metadata !15, metadata !3, i64 25}
!38 = metadata !{metadata !10, metadata !10, i64 0}
!39 = metadata !{metadata !26, metadata !16, i64 28}
!40 = metadata !{metadata !9, metadata !10, i64 20}
!41 = metadata !{metadata !9, metadata !10, i64 24}
!42 = metadata !{metadata !15, metadata !3, i64 27}
!43 = metadata !{metadata !34, metadata !2, i64 8}
!44 = metadata !{metadata !15, metadata !3, i64 26}
!45 = metadata !{metadata !46, metadata !10, i64 16}
!46 = metadata !{metadata !"_win_st", metadata !16, i64 0, metadata !16, i64 2, metadata !16, i64 4, metadata !16, i64 6, metadata !16, i64 8, metadata !16, i64 10, metadata !16, i64 12, metadata !10, i64 16, metadata !10, i64 20, metadata !6, i64 24, metadata !6, i64 25, metadata !6, i64 26, metadata !6, i64 27, metadata !6, i64 28, metadata !6, i64 29, metadata !6, i64 30, metadata !6, i64 31, metadata !6, i64 32, metadata !10, i64 36, metadata !2, i64 40, metadata !16, i64 48, metadata !16, i64 50, metadata !10, i64 52, metadata !10, i64 56, metadata !2, i64 64, metadata !47, i64 72, metadata !16, i64 84}
!47 = metadata !{metadata !"pdat", metadata !16, i64 0, metadata !16, i64 2, metadata !16, i64 4, metadata !16, i64 6, metadata !16, i64 8, metadata !16, i64 10}
!48 = metadata !{metadata !49, metadata !10, i64 8}
!49 = metadata !{metadata !"monster", metadata !2, i64 0, metadata !10, i64 8, metadata !16, i64 12, metadata !17, i64 16}
!50 = metadata !{metadata !9, metadata !10, i64 68}
!51 = metadata !{metadata !15, metadata !2, i64 96}
!52 = metadata !{metadata !53, metadata !2, i64 8}
!53 = metadata !{metadata !"h_list", metadata !3, i64 0, metadata !2, i64 8, metadata !6, i64 16}
!54 = metadata !{metadata !53, metadata !3, i64 0}
!55 = metadata !{metadata !53, metadata !6, i64 16}
!56 = metadata !{metadata !46, metadata !16, i64 4}
!57 = metadata !{metadata !49, metadata !2, i64 0}
!58 = metadata !{metadata !59, metadata !10, i64 0}
!59 = metadata !{metadata !"delayed_action", metadata !10, i64 0, metadata !2, i64 8, metadata !10, i64 16, metadata !10, i64 20}
!60 = metadata !{metadata !59, metadata !2, i64 8}
!61 = metadata !{metadata !59, metadata !10, i64 16}
!62 = metadata !{metadata !59, metadata !10, i64 20}
!63 = metadata !{metadata !15, metadata !10, i64 52}
!64 = metadata !{metadata !15, metadata !10, i64 60}
!65 = metadata !{metadata !15, metadata !10, i64 80}
!66 = metadata !{metadata !67, metadata !2, i64 0}
!67 = metadata !{metadata !"obj_info", metadata !2, i64 0, metadata !10, i64 8, metadata !10, i64 12, metadata !2, i64 16, metadata !6, i64 24}
!68 = metadata !{metadata !9, metadata !10, i64 72}
!69 = metadata !{metadata !9, metadata !10, i64 76}
!70 = metadata !{metadata !9, metadata !10, i64 80}
!71 = metadata !{metadata !9, metadata !10, i64 40}
!72 = metadata !{metadata !17, metadata !10, i64 12}
!73 = metadata !{metadata !17, metadata !10, i64 8}
!74 = metadata !{metadata !17, metadata !10, i64 0}
!75 = metadata !{metadata !17, metadata !10, i64 16}
!76 = metadata !{metadata !15, metadata !10, i64 48}
!77 = metadata !{i64 0, i64 4, metadata !38, i64 4, i64 4, metadata !38, i64 8, i64 4, metadata !38, i64 12, i64 4, metadata !38, i64 16, i64 4, metadata !38, i64 20, i64 13, metadata !28, i64 36, i64 4, metadata !38}
!78 = metadata !{metadata !9, metadata !10, i64 64}
!79 = metadata !{metadata !80, metadata !2, i64 0}
!80 = metadata !{metadata !"", metadata !2, i64 0, metadata !10, i64 8}
!81 = metadata !{metadata !80, metadata !10, i64 8}
!82 = metadata !{metadata !67, metadata !10, i64 12}
!83 = metadata !{metadata !67, metadata !10, i64 8}
!84 = metadata !{metadata !15, metadata !10, i64 44}
!85 = metadata !{metadata !46, metadata !16, i64 0}
!86 = metadata !{metadata !46, metadata !16, i64 2}
!87 = metadata !{metadata !15, metadata !2, i64 8}
!88 = metadata !{metadata !89, metadata !16, i64 4}
!89 = metadata !{metadata !"stat", metadata !10, i64 0, metadata !16, i64 4, metadata !16, i64 6, metadata !90, i64 8, metadata !10, i64 16, metadata !10, i64 20, metadata !10, i64 24, metadata !91, i64 32, metadata !91, i64 48, metadata !91, i64 64, metadata !91, i64 80, metadata !90, i64 96, metadata !90, i64 104, metadata !10, i64 112, metadata !10, i64 116, metadata !10, i64 120, metadata !10, i64 124, metadata !3, i64 128}
!90 = metadata !{metadata !"long long", metadata !3, i64 0}
!91 = metadata !{metadata !"timespec", metadata !92, i64 0, metadata !92, i64 8}
!92 = metadata !{metadata !"long", metadata !3, i64 0}
!93 = metadata !{metadata !89, metadata !92, i64 48}
!94 = metadata !{metadata !95, metadata !2, i64 32}
!95 = metadata !{metadata !"term", metadata !96, i64 0, metadata !16, i64 72, metadata !97, i64 80, metadata !97, i64 152, metadata !10, i64 224, metadata !2, i64 232}
!96 = metadata !{metadata !"termtype", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !16, i64 56, metadata !16, i64 58, metadata !16, i64 60, metadata !16, i64 62, metadata !16, i64 64, metadata !16, i64 66}
!97 = metadata !{metadata !"termios", metadata !92, i64 0, metadata !92, i64 8, metadata !92, i64 16, metadata !92, i64 24, metadata !3, i64 32, metadata !92, i64 56, metadata !92, i64 64}
!98 = metadata !{metadata !99, metadata !2, i64 0}
!99 = metadata !{metadata !"passwd", metadata !2, i64 0, metadata !2, i64 8, metadata !10, i64 16, metadata !10, i64 20, metadata !92, i64 24, metadata !2, i64 32, metadata !2, i64 40, metadata !2, i64 48, metadata !2, i64 56, metadata !92, i64 64}
!100 = metadata !{metadata !99, metadata !2, i64 48}
!101 = metadata !{metadata !99, metadata !2, i64 56}
!102 = metadata !{metadata !67, metadata !6, i64 24}
!103 = metadata !{metadata !67, metadata !2, i64 16}
!104 = metadata !{metadata !49, metadata !10, i64 24}
!105 = metadata !{metadata !49, metadata !10, i64 28}
!106 = metadata !{metadata !15, metadata !10, i64 56}
!107 = metadata !{metadata !49, metadata !10, i64 16}
!108 = metadata !{metadata !49, metadata !10, i64 20}
!109 = metadata !{metadata !49, metadata !16, i64 12}
!110 = metadata !{metadata !111, metadata !2, i64 8}
!111 = metadata !{metadata !"optstruct", metadata !2, i64 0, metadata !2, i64 8, metadata !2, i64 16, metadata !2, i64 24, metadata !2, i64 32}
!112 = metadata !{metadata !111, metadata !2, i64 0}
!113 = metadata !{metadata !111, metadata !2, i64 24}
!114 = metadata !{metadata !111, metadata !2, i64 16}
!115 = metadata !{metadata !111, metadata !2, i64 32}
!116 = metadata !{metadata !9, metadata !10, i64 88}
!117 = metadata !{i64 0, i64 8, metadata !1, i64 8, i64 8, metadata !1, i64 16, i64 4, metadata !38, i64 20, i64 4, metadata !38, i64 24, i64 1, metadata !5, i64 25, i64 1, metadata !28, i64 26, i64 1, metadata !28, i64 27, i64 1, metadata !28, i64 32, i64 8, metadata !1, i64 40, i64 2, metadata !118, i64 44, i64 4, metadata !38, i64 48, i64 4, metadata !38, i64 52, i64 4, metadata !38, i64 56, i64 4, metadata !38, i64 60, i64 4, metadata !38, i64 64, i64 13, metadata !28, i64 80, i64 4, metadata !38, i64 88, i64 8, metadata !1, i64 96, i64 8, metadata !1, i64 104, i64 4, metadata !38, i64 0, i64 8, metadata !1, i64 8, i64 8, metadata !1, i64 16, i64 4, metadata !38, i64 20, i64 4, metadata !38, i64 24, i64 4, metadata !38, i64 32, i64 8, metadata !1, i64 40, i64 4, metadata !38, i64 44, i64 1, metadata !28, i64 45, i64 8, metadata !28, i64 53, i64 8, metadata !28, i64 64, i64 4, metadata !38, i64 68, i64 4, metadata !38, i64 72, i64 4, metadata !38, i64 76, i64 4, metadata !38, i64 80, i64 4, metadata !38, i64 84, i64 4, metadata !38, i64 88, i64 4, metadata !38, i64 96, i64 8, metadata !1}
!118 = metadata !{metadata !16, metadata !16, i64 0}
!119 = metadata !{metadata !120, metadata !6, i64 18}
!120 = metadata !{metadata !"rdes", metadata !3, i64 0, metadata !3, i64 9, metadata !6, i64 18}
!121 = metadata !{metadata !122, metadata !10, i64 16}
!122 = metadata !{metadata !"", metadata !10, i64 0, metadata !2, i64 8, metadata !10, i64 16, metadata !2, i64 24, metadata !2, i64 32}
!123 = metadata !{metadata !122, metadata !10, i64 0}
!124 = metadata !{metadata !122, metadata !2, i64 8}
!125 = metadata !{metadata !122, metadata !2, i64 24}
!126 = metadata !{metadata !122, metadata !2, i64 32}
!127 = metadata !{metadata !128, metadata !10, i64 4}
!128 = metadata !{metadata !"sc_ent", metadata !10, i64 0, metadata !10, i64 4, metadata !10, i64 8, metadata !16, i64 12, metadata !3, i64 14, metadata !10, i64 1040, metadata !10, i64 1044}
!129 = metadata !{metadata !128, metadata !10, i64 8}
!130 = metadata !{metadata !128, metadata !10, i64 1040}
!131 = metadata !{metadata !128, metadata !16, i64 12}
!132 = metadata !{metadata !128, metadata !10, i64 0}
!133 = metadata !{i64 0, i64 4, metadata !38, i64 4, i64 4, metadata !38, i64 8, i64 4, metadata !38, i64 12, i64 2, metadata !118, i64 14, i64 1024, metadata !28, i64 1040, i64 4, metadata !38, i64 1044, i64 4, metadata !38}
!134 = metadata !{metadata !135, metadata !10, i64 20}
!135 = metadata !{metadata !"tm", metadata !10, i64 0, metadata !10, i64 4, metadata !10, i64 8, metadata !10, i64 12, metadata !10, i64 16, metadata !10, i64 20, metadata !10, i64 24, metadata !10, i64 28, metadata !10, i64 32, metadata !92, i64 40, metadata !2, i64 48}
!136 = metadata !{metadata !26, metadata !10, i64 16}
!137 = metadata !{metadata !26, metadata !10, i64 20}
!138 = metadata !{metadata !139, metadata !10, i64 36}
!139 = metadata !{metadata !"spot", metadata !10, i64 0, metadata !3, i64 4, metadata !10, i64 36}
!140 = metadata !{metadata !139, metadata !10, i64 0}
!141 = metadata !{metadata !89, metadata !16, i64 6}
!142 = metadata !{metadata !128, metadata !10, i64 1044}
!143 = metadata !{metadata !46, metadata !16, i64 6}
!144 = metadata !{metadata !17, metadata !10, i64 4}
!145 = metadata !{metadata !17, metadata !10, i64 36}
!146 = metadata !{metadata !15, metadata !10, i64 104}
!147 = metadata !{metadata !147, metadata !148, metadata !149}
!148 = metadata !{metadata !"llvm.loop.vectorize.width", i32 1}
!149 = metadata !{metadata !"llvm.loop.interleave.count", i32 1}
!150 = metadata !{metadata !150, metadata !148, metadata !149}
!151 = metadata !{metadata !151, metadata !148, metadata !149}
!152 = metadata !{metadata !152, metadata !148, metadata !149}
!153 = metadata !{metadata !154, metadata !2, i64 0}
!154 = metadata !{metadata !"init_weaps", metadata !2, i64 0, metadata !2, i64 8, metadata !3, i64 16, metadata !10, i64 20}
!155 = metadata !{metadata !154, metadata !2, i64 8}
!156 = metadata !{metadata !154, metadata !3, i64 16}
!157 = metadata !{metadata !154, metadata !10, i64 20}
