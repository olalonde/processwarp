; ModuleID = 'lua.bc'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.10.0"

%union.Value.230 = type { %union.GCObject.229* }
%union.GCObject.229 = type { %struct.lua_State.228 }
%struct.lua_State.228 = type { %union.GCObject.229*, i8, i8, i8, %struct.lua_TValue.215*, %struct.global_State.223*, %struct.CallInfo.225*, i32*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State.228*, %struct.lua_Debug.226*)*, %union.GCObject.229*, %union.GCObject.229*, %struct.lua_longjmp*, i64, %struct.CallInfo.225 }
%struct.global_State.223 = type { i8* (i8*, i8*, i64, i64)*, i8*, i64, i64, i64, i64, %struct.stringtable.216, %struct.lua_TValue.215, i32, i8, i8, i8, i8, i32, %union.GCObject.229*, %union.GCObject.229*, %union.GCObject.229**, %union.GCObject.229**, %union.GCObject.229*, %union.GCObject.229*, %union.GCObject.229*, %union.GCObject.229*, %union.GCObject.229*, %union.GCObject.229*, %struct.UpVal.217, %struct.Mbuffer, i32, i32, i32, i32 (%struct.lua_State.228*)*, %struct.lua_State.228*, double*, %union.TString.219*, [17 x %union.TString.219*], [9 x %struct.Table.222*] }
%struct.stringtable.216 = type { %union.GCObject.229**, i32, i32 }
%struct.lua_TValue.215 = type { %union.Value.230, i32 }
%struct.UpVal.217 = type { %union.GCObject.229*, i8, i8, %struct.lua_TValue.215*, %union.anon.4 }
%union.anon.4 = type { %struct.lua_TValue.215 }
%struct.Mbuffer = type { i8*, i64, i64 }
%union.TString.219 = type { %struct.anon }
%struct.anon = type { %union.GCObject.229*, i8, i8, i8, i32, i64 }
%struct.Table.222 = type { %union.GCObject.229*, i8, i8, i8, i8, %struct.Table.222*, %struct.lua_TValue.215*, %struct.Node.221*, %struct.Node.221*, %union.GCObject.229*, i32 }
%struct.Node.221 = type { %struct.lua_TValue.215, %union.TKey.220 }
%union.TKey.220 = type { %struct.anon.3 }
%struct.anon.3 = type { %union.Value.230, i32, %struct.Node.221* }
%struct.lua_Debug.226 = type { i32, i8*, i8*, i8*, i8*, i32, i32, i32, i8, i8, i8, i8, [60 x i8], %struct.CallInfo.225* }
%struct.lua_longjmp = type { %struct.lua_longjmp*, [37 x i32], i32 }
%struct.CallInfo.225 = type { %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.CallInfo.225*, %struct.CallInfo.225*, i16, i8, i64, %union.anon.224 }
%union.anon.224 = type { %struct.anon.2 }
%struct.anon.2 = type { i32, {}*, i64, i8, i8 }
%struct.anon.9 = type { i8, i8 }
%union.Value = type { %union.GCObject* }
%union.GCObject = type { %struct.lua_State }
%struct.lua_State = type { %union.GCObject*, i8, i8, i8, %struct.lua_TValue*, %struct.global_State*, %struct.CallInfo*, i32*, %struct.lua_TValue*, %struct.lua_TValue*, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State*, %struct.lua_Debug*)*, %union.GCObject*, %union.GCObject*, %struct.lua_longjmp*, i64, %struct.CallInfo }
%struct.global_State = type { i8* (i8*, i8*, i64, i64)*, i8*, i64, i64, i64, i64, %struct.stringtable, %struct.lua_TValue, i32, i8, i8, i8, i8, i32, %union.GCObject*, %union.GCObject*, %union.GCObject**, %union.GCObject**, %union.GCObject*, %union.GCObject*, %union.GCObject*, %union.GCObject*, %union.GCObject*, %union.GCObject*, %struct.UpVal, %struct.Mbuffer, i32, i32, i32, i32 (%struct.lua_State*)*, %struct.lua_State*, double*, %union.TString*, [17 x %union.TString*], [9 x %struct.Table*] }
%struct.stringtable = type { %union.GCObject**, i32, i32 }
%struct.lua_TValue = type { %union.Value, i32 }
%struct.UpVal = type { %union.GCObject*, i8, i8, %struct.lua_TValue*, %union.anon }
%union.anon = type { %struct.lua_TValue }
%union.TString = type { %struct.anon.0 }
%struct.anon.0 = type { %union.GCObject*, i8, i8, i8, i32, i64 }
%struct.Table = type { %union.GCObject*, i8, i8, i8, i8, %struct.Table*, %struct.lua_TValue*, %struct.Node*, %struct.Node*, %union.GCObject*, i32 }
%struct.Node = type { %struct.lua_TValue, %union.TKey }
%struct.lua_Debug = type { i32, i8*, i8*, i8*, i8*, i32, i32, i32, i8, i8, i8, i8, [60 x i8], %struct.CallInfo* }
%struct.CallInfo = type { %struct.lua_TValue*, %struct.lua_TValue*, %struct.CallInfo*, %struct.CallInfo*, i16, i8, i64, %union.anon.2 }
%union.anon.2 = type { %struct.anon.4 }
%struct.anon.4 = type { i32, i32 (%struct.lua_State*)*, i64, i8, i8 }
%union.TKey = type { %struct.anon.1 }
%struct.anon.1 = type { %union.Value, i32, %struct.Node* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sFILEX = type opaque
%struct.__sbuf = type { i8*, i32 }
%struct.luaL_Reg = type { i8*, i32 (%struct.lua_State*)* }
%struct._RuneLocale = type { [8 x i8], [32 x i8], i32 (i8*, i64, i8**)*, i32 (i32, i8*, i64, i8**)*, i32, [256 x i32], [256 x i32], [256 x i32], %struct._RuneRange, %struct._RuneRange, %struct._RuneRange, i8*, i32, i32, %struct._RuneCharClass* }
%struct._RuneRange = type { i32, %struct._RuneEntry* }
%struct._RuneEntry = type { i32, i32, i32, i32* }
%struct._RuneCharClass = type { [14 x i8], i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%union.Closure = type { %struct.CClosure }
%struct.CClosure = type { %union.GCObject*, i8, i8, i8, %union.GCObject*, i32 (%struct.lua_State*)*, [1 x %struct.lua_TValue] }
%struct.CallS = type { %struct.lua_TValue*, i32 }
%struct.Zio = type { i64, i8*, i8* (%struct.lua_State*, i8*, i64*)*, i8*, %struct.lua_State* }
%struct.GCheader = type { %union.GCObject*, i8, i8 }
%struct.Proto = type { %union.GCObject*, i8, i8, %struct.lua_TValue*, i32*, %struct.Proto**, i32*, %struct.LocVar*, %struct.Upvaldesc*, %union.Closure*, %union.TString*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject*, i8, i8, i8 }
%struct.LocVar = type { %union.TString*, i32, i32 }
%struct.Upvaldesc = type { %union.TString*, i8, i8 }
%union.Udata = type { %struct.anon.5 }
%struct.anon.5 = type { %union.GCObject*, i8, i8, %struct.Table*, %struct.Table*, i64 }
%struct.FuncState = type { %struct.Proto.24*, %struct.Table.11*, %struct.FuncState*, %struct.LexState*, %struct.BlockCnt*, i32, i32, i32, i32, i32, i32, i16, i8, i8, i8 }
%struct.Proto.24 = type { %union.GCObject.19*, i8, i8, %struct.lua_TValue.1*, i32*, %struct.Proto.24**, i32*, %struct.LocVar.20*, %struct.Upvaldesc.21*, %union.Closure.23*, %union.TString.7*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject.19*, i8, i8, i8 }
%struct.lua_TValue.1 = type { %union.Value.0, i32 }
%union.Value.0 = type { %union.GCObject.19* }
%struct.LocVar.20 = type { %union.TString.7*, i32, i32 }
%struct.Upvaldesc.21 = type { %union.TString.7*, i8, i8 }
%union.Closure.23 = type { %struct.CClosure.22 }
%struct.CClosure.22 = type { %union.GCObject.19*, i8, i8, i8, %union.GCObject.19*, i32 (%struct.lua_State.18*)*, [1 x %struct.lua_TValue.1] }
%struct.lua_State.18 = type { %union.GCObject.19*, i8, i8, i8, %struct.lua_TValue.1*, %struct.global_State.12*, %struct.CallInfo.15*, i32*, %struct.lua_TValue.1*, %struct.lua_TValue.1*, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State.18*, %struct.lua_Debug.16*)*, %union.GCObject.19*, %union.GCObject.19*, %struct.lua_longjmp*, i64, %struct.CallInfo.15 }
%struct.global_State.12 = type { i8* (i8*, i8*, i64, i64)*, i8*, i64, i64, i64, i64, %struct.stringtable.2, %struct.lua_TValue.1, i32, i8, i8, i8, i8, i32, %union.GCObject.19*, %union.GCObject.19*, %union.GCObject.19**, %union.GCObject.19**, %union.GCObject.19*, %union.GCObject.19*, %union.GCObject.19*, %union.GCObject.19*, %union.GCObject.19*, %union.GCObject.19*, %struct.UpVal.4, %struct.Mbuffer, i32, i32, i32, i32 (%struct.lua_State.18*)*, %struct.lua_State.18*, double*, %union.TString.7*, [17 x %union.TString.7*], [9 x %struct.Table.11*] }
%struct.stringtable.2 = type { %union.GCObject.19**, i32, i32 }
%struct.UpVal.4 = type { %union.GCObject.19*, i8, i8, %struct.lua_TValue.1*, %union.anon.2.3 }
%union.anon.2.3 = type { %struct.lua_TValue.1 }
%struct.lua_Debug.16 = type { i32, i8*, i8*, i8*, i8*, i32, i32, i32, i8, i8, i8, i8, [60 x i8], %struct.CallInfo.15* }
%struct.CallInfo.15 = type { %struct.lua_TValue.1*, %struct.lua_TValue.1*, %struct.CallInfo.15*, %struct.CallInfo.15*, i16, i8, i64, %union.anon.14 }
%union.anon.14 = type { %struct.anon.0.13 }
%struct.anon.0.13 = type { i32, {}*, i64, i8, i8 }
%union.TString.7 = type { %struct.anon.1.6 }
%struct.anon.1.6 = type { %union.GCObject.19*, i8, i8, i8, i32, i64 }
%union.GCObject.19 = type { %struct.lua_State.18 }
%struct.Table.11 = type { %union.GCObject.19*, i8, i8, i8, i8, %struct.Table.11*, %struct.lua_TValue.1*, %struct.Node.10*, %struct.Node.10*, %union.GCObject.19*, i32 }
%struct.Node.10 = type { %struct.lua_TValue.1, %union.TKey.9 }
%union.TKey.9 = type { %struct.anon.4.8 }
%struct.anon.4.8 = type { %union.Value.0, i32, %struct.Node.10* }
%struct.LexState = type { i32, i32, i32, %struct.Token, %struct.Token, %struct.FuncState*, %struct.lua_State.18*, %struct.Zio.25*, %struct.Mbuffer*, %struct.Dyndata*, %union.TString.7*, %union.TString.7*, i8 }
%struct.Token = type { i32, %union.SemInfo }
%union.SemInfo = type { double }
%struct.Zio.25 = type { i64, i8*, i8* (%struct.lua_State.18*, i8*, i64*)*, i8*, %struct.lua_State.18* }
%struct.Dyndata = type { %struct.anon.5.26, %struct.Labellist, %struct.Labellist }
%struct.anon.5.26 = type { %struct.Vardesc*, i32, i32 }
%struct.Vardesc = type { i16 }
%struct.Labellist = type { %struct.Labeldesc*, i32, i32 }
%struct.Labeldesc = type { %union.TString.7*, i32, i32, i8 }
%struct.BlockCnt = type { %struct.BlockCnt*, i16, i16, i8, i8, i8 }
%struct.expdesc = type { i32, %union.anon.7, i32, i32 }
%union.anon.7 = type { double }
%struct.anon.8 = type { i16, i8, i8 }
%struct.SParser = type { %struct.Zio*, %struct.Mbuffer, %struct.Dyndata.79, i8*, i8* }
%struct.Dyndata.79 = type { %struct.anon.6, %struct.Labellist.78, %struct.Labellist.78 }
%struct.anon.6 = type { %struct.Vardesc*, i32, i32 }
%struct.Labellist.78 = type { %struct.Labeldesc.77*, i32, i32 }
%struct.Labeldesc.77 = type { %union.TString*, i32, i32, i8 }
%struct.DumpState = type { %struct.lua_State*, i32 (%struct.lua_State*, i8*, i64, i8*)*, i8*, i32, i32 }
%union.Closure.129 = type { %struct.CClosure.128 }
%struct.CClosure.128 = type { %union.GCObject.127*, i8, i8, i8, %union.GCObject.127*, i32 (%struct.lua_State.126*)*, [1 x %struct.lua_TValue.109] }
%union.GCObject.127 = type { %struct.lua_State.126 }
%struct.lua_State.126 = type { %union.GCObject.127*, i8, i8, i8, %struct.lua_TValue.109*, %struct.global_State.120*, %struct.CallInfo.123*, i32*, %struct.lua_TValue.109*, %struct.lua_TValue.109*, i32, i16, i16, i8, i8, i32, i32, void (%struct.lua_State.126*, %struct.lua_Debug.124*)*, %union.GCObject.127*, %union.GCObject.127*, %struct.lua_longjmp*, i64, %struct.CallInfo.123 }
%struct.global_State.120 = type { i8* (i8*, i8*, i64, i64)*, i8*, i64, i64, i64, i64, %struct.stringtable.110, %struct.lua_TValue.109, i32, i8, i8, i8, i8, i32, %union.GCObject.127*, %union.GCObject.127*, %union.GCObject.127**, %union.GCObject.127**, %union.GCObject.127*, %union.GCObject.127*, %union.GCObject.127*, %union.GCObject.127*, %union.GCObject.127*, %union.GCObject.127*, %struct.UpVal.112, %struct.Mbuffer, i32, i32, i32, {}*, %struct.lua_State.126*, double*, %union.TString.115*, [17 x %union.TString.115*], [9 x %struct.Table.119*] }
%struct.stringtable.110 = type { %union.GCObject.127**, i32, i32 }
%struct.lua_TValue.109 = type { %union.Value.108, i32 }
%union.Value.108 = type { %union.GCObject.127* }
%struct.UpVal.112 = type { %union.GCObject.127*, i8, i8, %struct.lua_TValue.109*, %union.anon.111 }
%union.anon.111 = type { %struct.lua_TValue.109 }
%union.TString.115 = type { %struct.anon.0.114 }
%struct.anon.0.114 = type { %union.GCObject.127*, i8, i8, i8, i32, i64 }
%struct.Table.119 = type { %union.GCObject.127*, i8, i8, i8, i8, %struct.Table.119*, %struct.lua_TValue.109*, %struct.Node.118*, %struct.Node.118*, %union.GCObject.127*, i32 }
%struct.Node.118 = type { %struct.lua_TValue.109, %union.TKey.117 }
%union.TKey.117 = type { %struct.anon.1.116 }
%struct.anon.1.116 = type { %union.Value.108, i32, %struct.Node.118* }
%struct.lua_Debug.124 = type { i32, i8*, i8*, i8*, i8*, i32, i32, i32, i8, i8, i8, i8, [60 x i8], %struct.CallInfo.123* }
%struct.CallInfo.123 = type { %struct.lua_TValue.109*, %struct.lua_TValue.109*, %struct.CallInfo.123*, %struct.CallInfo.123*, i16, i8, i64, %union.anon.2.122 }
%union.anon.2.122 = type { %struct.anon.4.121 }
%struct.anon.4.121 = type { i32, {}*, i64, i8, i8 }
%struct.Proto.132 = type { %union.GCObject.127*, i8, i8, %struct.lua_TValue.109*, i32*, %struct.Proto.132**, i32*, %struct.LocVar.130*, %struct.Upvaldesc.131*, %union.Closure.129*, %union.TString.115*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject.127*, i8, i8, i8 }
%struct.LocVar.130 = type { %union.TString.115*, i32, i32 }
%struct.Upvaldesc.131 = type { %union.TString.115*, i8, i8 }
%struct.LClosure = type { %union.GCObject*, i8, i8, i8, %union.GCObject*, %struct.Proto*, [1 x %struct.UpVal*] }
%struct.LexState.194 = type { i32, i32, i32, %struct.Token, %struct.Token, %struct.FuncState.187*, %struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, %struct.Dyndata.193*, %union.TString*, %union.TString*, i8 }
%struct.FuncState.187 = type { %struct.Proto*, %struct.Table*, %struct.FuncState.187*, %struct.LexState.194*, %struct.BlockCnt*, i32, i32, i32, i32, i32, i32, i16, i8, i8, i8 }
%struct.Dyndata.193 = type { %struct.anon.6, %struct.Labellist.192, %struct.Labellist.192 }
%struct.Labellist.192 = type { %struct.Labeldesc.191*, i32, i32 }
%struct.Labeldesc.191 = type { %union.TString*, i32, i32, i8 }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.Zio.254 = type { i64, i8*, i8* (%struct.lua_State.126*, i8*, i64*)*, i8*, %struct.lua_State.126* }
%struct.Dyndata.259 = type { %struct.anon.6, %struct.Labellist.258, %struct.Labellist.258 }
%struct.Labellist.258 = type { %struct.Labeldesc.257*, i32, i32 }
%struct.Labeldesc.257 = type { %union.TString.115*, i32, i32, i8 }
%struct.LexState.267 = type { i32, i32, i32, %struct.Token, %struct.Token, %struct.FuncState.266*, %struct.lua_State.126*, %struct.Zio.254*, %struct.Mbuffer*, %struct.Dyndata.259*, %union.TString.115*, %union.TString.115*, i8 }
%struct.FuncState.266 = type { %struct.Proto.132*, %struct.Table.119*, %struct.FuncState.266*, %struct.LexState.267*, %struct.BlockCnt*, i32, i32, i32, i32, i32, i32, i16, i8, i8, i8 }
%struct.LHS_assign = type { %struct.LHS_assign*, %struct.expdesc }
%struct.ConsControl = type { %struct.expdesc, %struct.expdesc*, i32, i32, i32 }
%union.Udata.312 = type { %struct.anon.0.311 }
%struct.anon.0.311 = type { %union.GCObject.229*, i8, i8, %struct.Table.222*, %struct.Table.222*, i64 }
%struct.Zio.375 = type { i64, i8*, i8* (%struct.lua_State.126*, i8*, i64*)*, i8*, %struct.lua_State.126* }
%struct.LoadState = type { %struct.lua_State.126*, %struct.Zio.375*, %struct.Mbuffer*, i8* }
%struct.Proto.403 = type { %union.GCObject.229*, i8, i8, %struct.lua_TValue.215*, i32*, %struct.Proto.403**, i32*, %struct.LocVar.401*, %struct.Upvaldesc.402*, %union.Closure.400*, %union.TString.219*, i32, i32, i32, i32, i32, i32, i32, i32, %union.GCObject.229*, i8, i8, i8 }
%struct.LocVar.401 = type { %union.TString.219*, i32, i32 }
%struct.Upvaldesc.402 = type { %union.TString.219*, i8, i8 }
%union.Closure.400 = type { %struct.CClosure.399 }
%struct.CClosure.399 = type { %union.GCObject.229*, i8, i8, i8, %union.GCObject.229*, i32 (%struct.lua_State.228*)*, [1 x %struct.lua_TValue.215] }
%struct.luaL_Buffer = type { i8*, i64, i64, %struct.lua_State*, [1024 x i8] }
%struct.LoadF = type { i32, %struct.__sFILE*, [1024 x i8] }
%struct.LoadS = type { i8*, i64 }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.MatchState = type { i32, i8*, i8*, i8*, %struct.lua_State*, i32, [32 x %struct.anon.465] }
%struct.anon.465 = type { i8*, i64 }

@lua_ident = constant [129 x i8] c"$LuaVersion: Lua 5.2.3  Copyright (C) 1994-2013 Lua.org, PUC-Rio $$LuaAuthors: R. Ierusalimschy, L. H. de Figueiredo, W. Celes $\00", align 16
@lua_version.version = internal constant double 5.020000e+02, align 8
@.str = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str2 = private unnamed_addr constant [35 x i8] c"function or expression too complex\00", align 1
@.str13 = private unnamed_addr constant [21 x i8] c"constructor too long\00", align 1
@.str24 = private unnamed_addr constant [10 x i8] c"constants\00", align 1
@.str3 = private unnamed_addr constant [8 x i8] c"opcodes\00", align 1
@.str4 = private unnamed_addr constant [27 x i8] c"control structure too long\00", align 1
@luai_ctype_ = constant [257 x i8] calign 16
@.str5 = private unnamed_addr constant [35 x i8] c"attempt to %s %s '%s' (a %s value)\00", align 1
@.str16 = private unnamed_addr constant [25 x i8] c"attempt to %s a %s value\00", align 1
@.str27 = private unnamed_addr constant [12 x i8] c"concatenate\00", align 1
@.str38 = private unnamed_addr constant [22 x i8] c"perform arithmetic on\00", align 1
@.str49 = private unnamed_addr constant [33 x i8] c"attempt to compare two %s values\00", align 1
@.str510 = private unnamed_addr constant [30 x i8] c"attempt to compare %s with %s\00", align 1
@.str6 = private unnamed_addr constant [10 x i8] c"%s:%d: %s\00", align 1
@.str7 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c"_ENV\00", align 1
@.str9 = private unnamed_addr constant [7 x i8] c"global\00", align 1
@.str10 = private unnamed_addr constant [6 x i8] c"field\00", align 1
@.str11 = private unnamed_addr constant [8 x i8] c"upvalue\00", align 1
@.str12 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str1311 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str14 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str15 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str1612 = private unnamed_addr constant [13 x i8] c"for iterator\00", align 1
@.str17 = private unnamed_addr constant [11 x i8] c"metamethod\00", align 1
@.str18 = private unnamed_addr constant [5 x i8] c"=[C]\00", align 1
@.str19 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str20 = private unnamed_addr constant [3 x i8] c"=?\00", align 1
@.str21 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str22 = private unnamed_addr constant [4 x i8] c"Lua\00", align 1
@.str23 = private unnamed_addr constant [13 x i8] c"(*temporary)\00", align 1
@.str2413 = private unnamed_addr constant [10 x i8] c"(*vararg)\00", align 1
@.str25 = private unnamed_addr constant [15 x i8] c"stack overflow\00", align 1
@.str126 = private unnamed_addr constant [17 x i8] c"C stack overflow\00", align 1
@.str227 = private unnamed_addr constant [42 x i8] c"attempt to yield across a C-call boundary\00", align 1
@.str328 = private unnamed_addr constant [42 x i8] c"attempt to yield from outside a coroutine\00", align 1
@.str529 = private unnamed_addr constant [7 x i8] c"binary\00", align 1
@.str630 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str731 = private unnamed_addr constant [42 x i8] c"attempt to load a %s chunk (mode is '%s')\00", align 1
@.str832 = private unnamed_addr constant [24 x i8] c"error in error handling\00", align 1
@.str933 = private unnamed_addr constant [38 x i8] c"cannot resume non-suspended coroutine\00", align 1
@.str1034 = private unnamed_addr constant [29 x i8] c"cannot resume dead coroutine\00", align 1
@.str1135 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str58 = private unnamed_addr constant [11 x i8] c"no message\00", align 1
@.str159 = private unnamed_addr constant [30 x i8] c"error in __gc metamethod (%s)\00", align 1
@luaX_tokens = internal unnamed_addr constant [33 x i8*] [i8* getelementptr inbounds ([4 x i8]* @.str2199, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str22100, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str23101, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str24102, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str25103, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str27104, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str35, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str36, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str37, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str38105, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str39, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str40, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str41, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str42, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str45, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str46, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str47, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str48, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str49106, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str50, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str51, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str52, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str53, i32 0, i32 0)], align 16
@.str78 = private unnamed_addr constant [5 x i8] c"'%c'\00", align 1
@.str179 = private unnamed_addr constant [9 x i8] c"char(%d)\00", align 1
@.str280 = private unnamed_addr constant [5 x i8] c"'%s'\00", align 1
@.str381 = private unnamed_addr constant [5 x i8] c"_ENV\00", align 1
@.str482 = private unnamed_addr constant [30 x i8] c"invalid long string delimiter\00", align 1
@.str583 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str684 = private unnamed_addr constant [3 x i8] c"Ee\00", align 1
@.str785 = private unnamed_addr constant [3 x i8] c"Xx\00", align 1
@.str886 = private unnamed_addr constant [3 x i8] c"Pp\00", align 1
@.str987 = private unnamed_addr constant [3 x i8] c"+-\00", align 1
@.str1088 = private unnamed_addr constant [17 x i8] c"malformed number\00", align 1
@.str1189 = private unnamed_addr constant [25 x i8] c"lexical element too long\00", align 1
@.str1290 = private unnamed_addr constant [18 x i8] c"unfinished string\00", align 1
@.str1391 = private unnamed_addr constant [24 x i8] c"invalid escape sequence\00", align 1
@.str1492 = private unnamed_addr constant [25 x i8] c"decimal escape too large\00", align 1
@.str1593 = private unnamed_addr constant [27 x i8] c"hexadecimal digit expected\00", align 1
@.str1694 = private unnamed_addr constant [23 x i8] c"unfinished long string\00", align 1
@.str1795 = private unnamed_addr constant [24 x i8] c"unfinished long comment\00", align 1
@.str1896 = private unnamed_addr constant [25 x i8] c"chunk has too many lines\00", align 1
@.str1997 = private unnamed_addr constant [10 x i8] c"%s:%d: %s\00", align 1
@.str2098 = private unnamed_addr constant [11 x i8] c"%s near %s\00", align 1
@.str2199 = private unnamed_addr constant [4 x i8] c"and\00", align 1
@.str22100 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str23101 = private unnamed_addr constant [3 x i8] c"do\00", align 1
@.str24102 = private unnamed_addr constant [5 x i8] c"else\00", align 1
@.str25103 = private unnamed_addr constant [7 x i8] c"elseif\00", align 1
@.str26 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str27104 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str28 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str29 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str30 = private unnamed_addr constant [5 x i8] c"goto\00", align 1
@.str31 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str32 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str33 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str34 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str35 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str36 = private unnamed_addr constant [3 x i8] c"or\00", align 1
@.str37 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str38105 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str39 = private unnamed_addr constant [5 x i8] c"then\00", align 1
@.str40 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str41 = private unnamed_addr constant [6 x i8] c"until\00", align 1
@.str42 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str43 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str44 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str45 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str46 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str47 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str48 = private unnamed_addr constant [3 x i8] c"~=\00", align 1
@.str49106 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str50 = private unnamed_addr constant [6 x i8] c"<eof>\00", align 1
@.str51 = private unnamed_addr constant [9 x i8] c"<number>\00", align 1
@.str52 = private unnamed_addr constant [7 x i8] c"<name>\00", align 1
@.str53 = private unnamed_addr constant [9 x i8] c"<string>\00", align 1
@.str109 = private unnamed_addr constant [26 x i8] c"too many %s (limit is %d)\00", align 1
@.str1110 = private unnamed_addr constant [39 x i8] c"memory allocation error: block too big\00", align 1
@luaO_nilobject_ = constant { %union.Value.230, i32, [4 x i8] } { %union.Value.230 zeroinitializer, i32 0, [4 x i8] undef }, align 8
@luaO_ceillog2.log_2 = internal unnamed_addr constant [256 x i8] calign 16
@.str119 = private unnamed_addr constant [3 x i8] c"nN\00", align 1
@.str2120 = private unnamed_addr constant [7 x i8] c"(null)\00", align 1
@.str3121 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str4122 = private unnamed_addr constant [2 x i8] c"%\00", align 1
@.str5123 = private unnamed_addr constant [43 x i8] c"invalid option '%%%c' to 'lua_pushfstring'\00", align 1
@.str6124 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str7125 = private unnamed_addr constant [10 x i8] c"[string \22\00", align 1
@.str8126 = private unnamed_addr constant [3 x i8] c"\22]\00", align 1
@.str139 = private unnamed_addr constant [5 x i8] c"MOVE\00", align 1
@.str1140 = private unnamed_addr constant [6 x i8] c"LOADK\00", align 1
@.str2141 = private unnamed_addr constant [7 x i8] c"LOADKX\00", align 1
@.str3142 = private unnamed_addr constant [9 x i8] c"LOADBOOL\00", align 1
@.str4143 = private unnamed_addr constant [8 x i8] c"LOADNIL\00", align 1
@.str5144 = private unnamed_addr constant [9 x i8] c"GETUPVAL\00", align 1
@.str6145 = private unnamed_addr constant [9 x i8] c"GETTABUP\00", align 1
@.str7146 = private unnamed_addr constant [9 x i8] c"GETTABLE\00", align 1
@.str8147 = private unnamed_addr constant [9 x i8] c"SETTABUP\00", align 1
@.str9148 = private unnamed_addr constant [9 x i8] c"SETUPVAL\00", align 1
@.str10149 = private unnamed_addr constant [9 x i8] c"SETTABLE\00", align 1
@.str11150 = private unnamed_addr constant [9 x i8] c"NEWTABLE\00", align 1
@.str12151 = private unnamed_addr constant [5 x i8] c"SELF\00", align 1
@.str13152 = private unnamed_addr constant [4 x i8] c"ADD\00", align 1
@.str14153 = private unnamed_addr constant [4 x i8] c"SUB\00", align 1
@.str15154 = private unnamed_addr constant [4 x i8] c"MUL\00", align 1
@.str16155 = private unnamed_addr constant [4 x i8] c"DIV\00", align 1
@.str17156 = private unnamed_addr constant [4 x i8] c"MOD\00", align 1
@.str18157 = private unnamed_addr constant [4 x i8] c"POW\00", align 1
@.str19158 = private unnamed_addr constant [4 x i8] c"UNM\00", align 1
@.str20159 = private unnamed_addr constant [4 x i8] c"NOT\00", align 1
@.str21160 = private unnamed_addr constant [4 x i8] c"LEN\00", align 1
@.str22161 = private unnamed_addr constant [7 x i8] c"CONCAT\00", align 1
@.str23162 = private unnamed_addr constant [4 x i8] c"JMP\00", align 1
@.str24163 = private unnamed_addr constant [3 x i8] c"EQ\00", align 1
@.str25164 = private unnamed_addr constant [3 x i8] c"LT\00", align 1
@.str26165 = private unnamed_addr constant [3 x i8] c"LE\00", align 1
@.str27166 = private unnamed_addr constant [5 x i8] c"TEST\00", align 1
@.str28167 = private unnamed_addr constant [8 x i8] c"TESTSET\00", align 1
@.str29168 = private unnamed_addr constant [5 x i8] c"CALL\00", align 1
@.str30169 = private unnamed_addr constant [9 x i8] c"TAILCALL\00", align 1
@.str31170 = private unnamed_addr constant [7 x i8] c"RETURN\00", align 1
@.str32171 = private unnamed_addr constant [8 x i8] c"FORLOOP\00", align 1
@.str33172 = private unnamed_addr constant [8 x i8] c"FORPREP\00", align 1
@.str34173 = private unnamed_addr constant [9 x i8] c"TFORCALL\00", align 1
@.str35174 = private unnamed_addr constant [9 x i8] c"TFORLOOP\00", align 1
@.str36175 = private unnamed_addr constant [8 x i8] c"SETLIST\00", align 1
@.str37176 = private unnamed_addr constant [8 x i8] c"CLOSURE\00", align 1
@.str38177 = private unnamed_addr constant [7 x i8] c"VARARG\00", align 1
@.str39178 = private unnamed_addr constant [9 x i8] c"EXTRAARG\00", align 1
@luaP_opnames = constant [41 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str139, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str1140, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str2141, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str3142, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str4143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str5144, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str6145, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str7146, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str8147, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str9148, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str10149, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str11150, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str12151, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str13152, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str14153, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str15154, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str16155, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str17156, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str18157, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str19158, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str20159, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str21160, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str22161, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str23162, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str24163, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str25164, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str26165, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str27166, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str28167, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str29168, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str30169, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str31170, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str32171, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str33172, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str34173, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str35174, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str36175, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str37176, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str38177, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str39178, i32 0, i32 0), i8* null], align 16
@luaP_opmodes = constant [40 x i8] c"`qATPP\5Cl<\10<Tl||||||```h\22\BC\BC\BC\84\E4TT\10bb\04b\14QP\17", align 16
@.str181 = private unnamed_addr constant [34 x i8] c"<%s> at line %d not inside a loop\00", align 1
@.str1182 = private unnamed_addr constant [44 x i8] c"no visible label '%s' for <goto> at line %d\00", align 1
@.str2183 = private unnamed_addr constant [56 x i8] c"<goto %s> at line %d jumps into the scope of local '%s'\00", align 1
@.str3184 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str4185 = private unnamed_addr constant [13 x i8] c"labels/gotos\00", align 1
@.str5186 = private unnamed_addr constant [12 x i8] c"%s expected\00", align 1
@.str6187 = private unnamed_addr constant [13 x i8] c"syntax error\00", align 1
@.str7188 = private unnamed_addr constant [9 x i8] c"C levels\00", align 1
@priority = internal unnamed_addr constant [15 x %struct.anon.9] [%struct.anon.9 { i8 6, i8 6 }, %struct.anon.9 { i8 6, i8 6 }, %struct.anon.9 { i8 7, i8 7 }, %struct.anon.9 { i8 7, i8 7 }, %struct.anon.9 { i8 7, i8 7 }, %struct.anon.9 { i8 10, i8 9 }, %struct.anon.9 { i8 5, i8 4 }, %struct.anon.9 { i8 3, i8 3 }, %struct.anon.9 { i8 3, i8 3 }, %struct.anon.9 { i8 3, i8 3 }, %struct.anon.9 { i8 3, i8 3 }, %struct.anon.9 { i8 3, i8 3 }, %struct.anon.9 { i8 3, i8 3 }, %struct.anon.9 { i8 2, i8 2 }, %struct.anon.9 { i8 1, i8 1 }], align 16
@.str8189 = private unnamed_addr constant [43 x i8] c"cannot use '...' outside a vararg function\00", align 1
@.str9190 = private unnamed_addr constant [5 x i8] c"self\00", align 1
@.str10191 = private unnamed_addr constant [25 x i8] c"<name> or '...' expected\00", align 1
@.str11192 = private unnamed_addr constant [16 x i8] c"local variables\00", align 1
@.str12193 = private unnamed_addr constant [10 x i8] c"functions\00", align 1
@.str13194 = private unnamed_addr constant [23 x i8] c"items in a constructor\00", align 1
@.str14195 = private unnamed_addr constant [14 x i8] c"main function\00", align 1
@.str15196 = private unnamed_addr constant [20 x i8] c"function at line %d\00", align 1
@.str16197 = private unnamed_addr constant [32 x i8] c"too many %s (limit is %d) in %s\00", align 1
@.str17198 = private unnamed_addr constant [28 x i8] c"function arguments expected\00", align 1
@.str18199 = private unnamed_addr constant [18 x i8] c"unexpected symbol\00", align 1
@.str19200 = private unnamed_addr constant [38 x i8] c"label '%s' already defined on line %d\00", align 1
@.str20201 = private unnamed_addr constant [21 x i8] c"'=' or 'in' expected\00", align 1
@.str21202 = private unnamed_addr constant [16 x i8] c"(for generator)\00", align 1
@.str22203 = private unnamed_addr constant [12 x i8] c"(for state)\00", align 1
@.str23204 = private unnamed_addr constant [14 x i8] c"(for control)\00", align 1
@.str24205 = private unnamed_addr constant [12 x i8] c"(for index)\00", align 1
@.str25206 = private unnamed_addr constant [12 x i8] c"(for limit)\00", align 1
@.str26207 = private unnamed_addr constant [11 x i8] c"(for step)\00", align 1
@.str27208 = private unnamed_addr constant [37 x i8] c"%s expected (to close %s at line %d)\00", align 1
@.str28209 = private unnamed_addr constant [9 x i8] c"upvalues\00", align 1
@.str212 = private unnamed_addr constant [18 x i8] c"not enough memory\00", align 1
@.str233 = private unnamed_addr constant [19 x i8] c"table index is nil\00", align 1
@.str1234 = private unnamed_addr constant [19 x i8] c"table index is NaN\00", align 1
@dummynode_ = internal constant { { %union.Value, i32, [4 x i8] }, %union.TKey } { { %union.Value, i32, [4 x i8] } { %union.Value zeroinitializer, i32 0, [4 x i8] undef }, %union.TKey zeroinitializer }, align 8
@.str2235 = private unnamed_addr constant [15 x i8] c"table overflow\00", align 1
@.str3236 = private unnamed_addr constant [22 x i8] c"invalid key to 'next'\00", align 1
@.str255 = private unnamed_addr constant [9 x i8] c"no value\00", align 1
@.str1256 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str2257 = private unnamed_addr constant [8 x i8] c"boolean\00", align 1
@udatatypename = internal constant [9 x i8] c"userdata\00", align 1
@.str3258 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str4259 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str5260 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str6261 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str7262 = private unnamed_addr constant [7 x i8] c"thread\00", align 1
@.str8263 = private unnamed_addr constant [6 x i8] c"proto\00", align 1
@.str9264 = private unnamed_addr constant [6 x i8] c"upval\00", align 1
@luaT_typenames_ = constant [12 x i8*] [i8* getelementptr inbounds ([9 x i8]* @.str255, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str1256, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str2257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @udatatypename, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str3258, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str4259, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str5260, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str6261, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @udatatypename, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str7262, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str8263, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str9264, i32 0, i32 0)], align 16
@luaT_init.luaT_eventname = internal unnamed_addr constant [17 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str10267, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str11268, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str12269, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str13270, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str14271, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str15272, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str16273, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str17274, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str18275, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str19276, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str20277, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str21278, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str22279, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str23280, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str24281, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str25282, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str26283, i32 0, i32 0)], align 16
@.str10267 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@.str11268 = private unnamed_addr constant [11 x i8] c"__newindex\00", align 1
@.str12269 = private unnamed_addr constant [5 x i8] c"__gc\00", align 1
@.str13270 = private unnamed_addr constant [7 x i8] c"__mode\00", align 1
@.str14271 = private unnamed_addr constant [6 x i8] c"__len\00", align 1
@.str15272 = private unnamed_addr constant [5 x i8] c"__eq\00", align 1
@.str16273 = private unnamed_addr constant [6 x i8] c"__add\00", align 1
@.str17274 = private unnamed_addr constant [6 x i8] c"__sub\00", align 1
@.str18275 = private unnamed_addr constant [6 x i8] c"__mul\00", align 1
@.str19276 = private unnamed_addr constant [6 x i8] c"__div\00", align 1
@.str20277 = private unnamed_addr constant [6 x i8] c"__mod\00", align 1
@.str21278 = private unnamed_addr constant [6 x i8] c"__pow\00", align 1
@.str22279 = private unnamed_addr constant [6 x i8] c"__unm\00", align 1
@.str23280 = private unnamed_addr constant [5 x i8] c"__lt\00", align 1
@.str24281 = private unnamed_addr constant [5 x i8] c"__le\00", align 1
@.str25282 = private unnamed_addr constant [9 x i8] c"__concat\00", align 1
@.str26283 = private unnamed_addr constant [7 x i8] c"__call\00", align 1
@.str290 = private unnamed_addr constant [5 x i8] c"\1BLua\00", align 1
@.str1291 = private unnamed_addr constant [14 x i8] c"binary string\00", align 1
@.str4292 = private unnamed_addr constant [7 x i8] c"\19\93\0D\0A\1A\0A\00", align 1
@.str5293 = private unnamed_addr constant [10 x i8] c"truncated\00", align 1
@.str6294 = private unnamed_addr constant [25 x i8] c"%s: %s precompiled chunk\00", align 1
@.str7295 = private unnamed_addr constant [10 x i8] c"corrupted\00", align 1
@.str8296 = private unnamed_addr constant [6 x i8] c"not a\00", align 1
@.str9297 = private unnamed_addr constant [20 x i8] c"version mismatch in\00", align 1
@.str10298 = private unnamed_addr constant [13 x i8] c"incompatible\00", align 1
@.str303 = private unnamed_addr constant [6 x i8] c"%.14g\00", align 1
@.str1304 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str2305 = private unnamed_addr constant [17 x i8] c"loop in gettable\00", align 1
@.str3306 = private unnamed_addr constant [17 x i8] c"loop in settable\00", align 1
@.str4307 = private unnamed_addr constant [23 x i8] c"string length overflow\00", align 1
@.str5308 = private unnamed_addr constant [14 x i8] c"get length of\00", align 1
@.str6309 = private unnamed_addr constant [37 x i8] c"'for' initial value must be a number\00", align 1
@.str7310 = private unnamed_addr constant [29 x i8] c"'for' limit must be a number\00", align 1
@.str8311 = private unnamed_addr constant [28 x i8] c"'for' step must be a number\00", align 1
@.str344 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str1345 = private unnamed_addr constant [17 x i8] c"stack traceback:\00", align 1
@.str2346 = private unnamed_addr constant [6 x i8] c"\0A\09...\00", align 1
@.str3347 = private unnamed_addr constant [5 x i8] c"Slnt\00", align 1
@.str4348 = private unnamed_addr constant [6 x i8] c"\0A\09%s:\00", align 1
@.str5349 = private unnamed_addr constant [4 x i8] c"%d:\00", align 1
@.str6350 = private unnamed_addr constant [5 x i8] c" in \00", align 1
@.str7351 = private unnamed_addr constant [21 x i8] c"\0A\09(...tail calls...)\00", align 1
@.str8352 = private unnamed_addr constant [22 x i8] c"bad argument #%d (%s)\00", align 1
@.str9353 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str10354 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str11355 = private unnamed_addr constant [30 x i8] c"calling '%s' on bad self (%s)\00", align 1
@.str12356 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str13357 = private unnamed_addr constant [30 x i8] c"bad argument #%d to '%s' (%s)\00", align 1
@.str14358 = private unnamed_addr constant [3 x i8] c"Sl\00", align 1
@.str15359 = private unnamed_addr constant [8 x i8] c"%s:%d: \00", align 1
@.str16360 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str17361 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str18362 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str19363 = private unnamed_addr constant [7 x i8] c"signal\00", align 1
@.str20364 = private unnamed_addr constant [20 x i8] c"invalid option '%s'\00", align 1
@.str21365 = private unnamed_addr constant [20 x i8] c"stack overflow (%s)\00", align 1
@.str22366 = private unnamed_addr constant [15 x i8] c"stack overflow\00", align 1
@.str23367 = private unnamed_addr constant [15 x i8] c"value expected\00", align 1
@.str24368 = private unnamed_addr constant [17 x i8] c"buffer too large\00", align 1
@.str25369 = private unnamed_addr constant [7 x i8] c"=stdin\00", align 1
@__stdinp = external global %struct.__sFILE*
@.str26370 = private unnamed_addr constant [4 x i8] c"@%s\00", align 1
@.str27371 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str28372 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str30373 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str31374 = private unnamed_addr constant [7 x i8] c"reopen\00", align 1
@.str32375 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str33376 = private unnamed_addr constant [30 x i8] c"object length is not a number\00", align 1
@.str34377 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@.str35378 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str36379 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str37380 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str38381 = private unnamed_addr constant [7 x i8] c"%s: %p\00", align 1
@.str39382 = private unnamed_addr constant [8 x i8] c"_LOADED\00", align 1
@.str40383 = private unnamed_addr constant [30 x i8] c"name conflict for module '%s'\00", align 1
@.str41384 = private unnamed_addr constant [18 x i8] c"too many upvalues\00", align 1
@.str42385 = private unnamed_addr constant [26 x i8] c"multiple Lua VMs detected\00", align 1
@.str43386 = private unnamed_addr constant [54 x i8] c"version mismatch: app. needs %f, Lua core provides %f\00", align 1
@.str44387 = private unnamed_addr constant [68 x i8] c"bad conversion number->int; must recompile Lua with proper settings\00", align 1
@__stderrp = external global %struct.__sFILE*
@.str45388 = private unnamed_addr constant [50 x i8] c"PANIC: unprotected error in call to Lua API (%s)\0A\00", align 1
@.str46389 = private unnamed_addr constant [4 x i8] c"\EF\BB\BF\00", align 1
@.str47390 = private unnamed_addr constant [17 x i8] c"cannot %s %s: %s\00", align 1
@.str48391 = private unnamed_addr constant [20 x i8] c"%s expected, got %s\00", align 1
@.str49392 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str50393 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str51394 = private unnamed_addr constant [14 x i8] c"function '%s'\00", align 1
@.str52395 = private unnamed_addr constant [11 x i8] c"main chunk\00", align 1
@.str53396 = private unnamed_addr constant [17 x i8] c"function <%s:%d>\00", align 1
@.str397 = private unnamed_addr constant [3 x i8] c"_G\00", align 1
@base_funcs = internal constant [24 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str3400, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_assert }, %struct.luaL_Reg { i8* getelementptr inbounds ([15 x i8]* @.str4401, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_collectgarbage }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str5402, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_dofile }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str6403, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_error }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8]* @.str7404, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_getmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str8405, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_ipairs }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str9406, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_loadfile }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str10407, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_load }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8]* @.str11408, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_load }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str12409, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_next }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str13410, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_pairs }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str14411, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_pcall }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str15412, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_print }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str16413, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawequal }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str17414, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawlen }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str18415, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawget }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str19416, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_rawset }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str20417, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_select }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8]* @.str21418, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_setmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str22419, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_tonumber }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str23420, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_tostring }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str24421, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_type }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str25422, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_xpcall }, %struct.luaL_Reg zeroinitializer], align 16
@.str1398 = private unnamed_addr constant [8 x i8] c"Lua 5.2\00", align 1
@.str2399 = private unnamed_addr constant [9 x i8] c"_VERSION\00", align 1
@.str3400 = private unnamed_addr constant [7 x i8] c"assert\00", align 1
@.str4401 = private unnamed_addr constant [15 x i8] c"collectgarbage\00", align 1
@.str5402 = private unnamed_addr constant [7 x i8] c"dofile\00", align 1
@.str6403 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str7404 = private unnamed_addr constant [13 x i8] c"getmetatable\00", align 1
@.str8405 = private unnamed_addr constant [7 x i8] c"ipairs\00", align 1
@.str9406 = private unnamed_addr constant [9 x i8] c"loadfile\00", align 1
@.str10407 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str11408 = private unnamed_addr constant [11 x i8] c"loadstring\00", align 1
@.str12409 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str13410 = private unnamed_addr constant [6 x i8] c"pairs\00", align 1
@.str14411 = private unnamed_addr constant [6 x i8] c"pcall\00", align 1
@.str15412 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str16413 = private unnamed_addr constant [9 x i8] c"rawequal\00", align 1
@.str17414 = private unnamed_addr constant [7 x i8] c"rawlen\00", align 1
@.str18415 = private unnamed_addr constant [7 x i8] c"rawget\00", align 1
@.str19416 = private unnamed_addr constant [7 x i8] c"rawset\00", align 1
@.str20417 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str21418 = private unnamed_addr constant [13 x i8] c"setmetatable\00", align 1
@.str22419 = private unnamed_addr constant [9 x i8] c"tonumber\00", align 1
@.str23420 = private unnamed_addr constant [9 x i8] c"tostring\00", align 1
@.str24421 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str25422 = private unnamed_addr constant [7 x i8] c"xpcall\00", align 1
@.str26423 = private unnamed_addr constant [15 x i8] c"value expected\00", align 1
@.str27424 = private unnamed_addr constant [15 x i8] c"stack overflow\00", align 1
@.str28425 = private unnamed_addr constant [18 x i8] c"base out of range\00", align 1
@.str29426 = private unnamed_addr constant [7 x i8] c" \0C\0A\0D\09\0B\00", align 1
@_DefaultRuneLocale = external global %struct._RuneLocale
@.str30427 = private unnamed_addr constant [22 x i8] c"nil or table expected\00", align 1
@.str31428 = private unnamed_addr constant [12 x i8] c"__metatable\00", align 1
@.str32429 = private unnamed_addr constant [36 x i8] c"cannot change a protected metatable\00", align 1
@.str33430 = private unnamed_addr constant [19 x i8] c"index out of range\00", align 1
@.str34431 = private unnamed_addr constant [25 x i8] c"table or string expected\00", align 1
@.str35432 = private unnamed_addr constant [43 x i8] c"'tostring' must return a string to 'print'\00", align 1
@.str36433 = private unnamed_addr constant [2 x i8] c"\09\00", align 1
@__stdoutp = external global %struct.__sFILE*
@.str37434 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str38435 = private unnamed_addr constant [8 x i8] c"__pairs\00", align 1
@.str39436 = private unnamed_addr constant [3 x i8] c"bt\00", align 1
@.str40437 = private unnamed_addr constant [8 x i8] c"=(load)\00", align 1
@.str41438 = private unnamed_addr constant [26 x i8] c"too many nested functions\00", align 1
@.str42439 = private unnamed_addr constant [37 x i8] c"reader function must return a string\00", align 1
@.str43440 = private unnamed_addr constant [9 x i8] c"__ipairs\00", align 1
@luaB_collectgarbage.opts = internal constant [12 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str45442, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str46443, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str47444, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str48445, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str49446, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str50447, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str51448, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str52449, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str53450, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str54, i32 0, i32 0), i8* null], align 16
@.str44441 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str45442 = private unnamed_addr constant [8 x i8] c"restart\00", align 1
@.str46443 = private unnamed_addr constant [8 x i8] c"collect\00", align 1
@.str47444 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str48445 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str49446 = private unnamed_addr constant [9 x i8] c"setpause\00", align 1
@.str50447 = private unnamed_addr constant [11 x i8] c"setstepmul\00", align 1
@.str51448 = private unnamed_addr constant [12 x i8] c"setmajorinc\00", align 1
@.str52449 = private unnamed_addr constant [10 x i8] c"isrunning\00", align 1
@.str53450 = private unnamed_addr constant [13 x i8] c"generational\00", align 1
@.str54 = private unnamed_addr constant [12 x i8] c"incremental\00", align 1
@luaB_collectgarbage.optsnum = internal unnamed_addr constant [11 x i32] [i32 0, i32 1, i32 2, i32 3, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11], align 16
@.str55 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str56 = private unnamed_addr constant [18 x i8] c"assertion failed!\00", align 1
@bitlib = internal constant [13 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str451, i32 0, i32 0), i32 (%struct.lua_State*)* @b_arshift }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str1452, i32 0, i32 0), i32 (%struct.lua_State*)* @b_and }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str2453, i32 0, i32 0), i32 (%struct.lua_State*)* @b_not }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str3454, i32 0, i32 0), i32 (%struct.lua_State*)* @b_or }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str4455, i32 0, i32 0), i32 (%struct.lua_State*)* @b_xor }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str5456, i32 0, i32 0), i32 (%struct.lua_State*)* @b_test }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str6457, i32 0, i32 0), i32 (%struct.lua_State*)* @b_extract }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str7458, i32 0, i32 0), i32 (%struct.lua_State*)* @b_lrot }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str8459, i32 0, i32 0), i32 (%struct.lua_State*)* @b_lshift }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str9460, i32 0, i32 0), i32 (%struct.lua_State*)* @b_replace }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str10461, i32 0, i32 0), i32 (%struct.lua_State*)* @b_rrot }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str11462, i32 0, i32 0), i32 (%struct.lua_State*)* @b_rshift }, %struct.luaL_Reg zeroinitializer], align 16
@.str451 = private unnamed_addr constant [8 x i8] c"arshift\00", align 1
@.str1452 = private unnamed_addr constant [5 x i8] c"band\00", align 1
@.str2453 = private unnamed_addr constant [5 x i8] c"bnot\00", align 1
@.str3454 = private unnamed_addr constant [4 x i8] c"bor\00", align 1
@.str4455 = private unnamed_addr constant [5 x i8] c"bxor\00", align 1
@.str5456 = private unnamed_addr constant [6 x i8] c"btest\00", align 1
@.str6457 = private unnamed_addr constant [8 x i8] c"extract\00", align 1
@.str7458 = private unnamed_addr constant [8 x i8] c"lrotate\00", align 1
@.str8459 = private unnamed_addr constant [7 x i8] c"lshift\00", align 1
@.str9460 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str10461 = private unnamed_addr constant [8 x i8] c"rrotate\00", align 1
@.str11462 = private unnamed_addr constant [7 x i8] c"rshift\00", align 1
@.str12463 = private unnamed_addr constant [25 x i8] c"field cannot be negative\00", align 1
@.str13464 = private unnamed_addr constant [23 x i8] c"width must be positive\00", align 1
@.str14465 = private unnamed_addr constant [35 x i8] c"trying to access non-existent bits\00", align 1
@co_funcs = internal constant [7 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str466, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_cocreate }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str1467, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_coresume }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str2468, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_corunning }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str3469, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_costatus }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str4470, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_cowrap }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str5471, i32 0, i32 0), i32 (%struct.lua_State*)* @luaB_yield }, %struct.luaL_Reg zeroinitializer], align 16
@.str466 = private unnamed_addr constant [7 x i8] c"create\00", align 1
@.str1467 = private unnamed_addr constant [7 x i8] c"resume\00", align 1
@.str2468 = private unnamed_addr constant [8 x i8] c"running\00", align 1
@.str3469 = private unnamed_addr constant [7 x i8] c"status\00", align 1
@.str4470 = private unnamed_addr constant [5 x i8] c"wrap\00", align 1
@.str5471 = private unnamed_addr constant [6 x i8] c"yield\00", align 1
@.str6472 = private unnamed_addr constant [29 x i8] c"too many arguments to resume\00", align 1
@.str7473 = private unnamed_addr constant [29 x i8] c"cannot resume dead coroutine\00", align 1
@.str8474 = private unnamed_addr constant [27 x i8] c"too many results to resume\00", align 1
@.str9475 = private unnamed_addr constant [19 x i8] c"coroutine expected\00", align 1
@.str10476 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str11477 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str12478 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@dblib = internal constant [17 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str479, i32 0, i32 0), i32 (%struct.lua_State*)* @db_debug }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8]* @.str1480, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getuservalue }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str2481, i32 0, i32 0), i32 (%struct.lua_State*)* @db_gethook }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str3482, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getinfo }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str4483, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getlocal }, %struct.luaL_Reg { i8* getelementptr inbounds ([12 x i8]* @.str5484, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getregistry }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8]* @.str6485, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8]* @.str7486, i32 0, i32 0), i32 (%struct.lua_State*)* @db_getupvalue }, %struct.luaL_Reg { i8* getelementptr inbounds ([12 x i8]* @.str8487, i32 0, i32 0), i32 (%struct.lua_State*)* @db_upvaluejoin }, %struct.luaL_Reg { i8* getelementptr inbounds ([10 x i8]* @.str9488, i32 0, i32 0), i32 (%struct.lua_State*)* @db_upvalueid }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8]* @.str10489, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setuservalue }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str11490, i32 0, i32 0), i32 (%struct.lua_State*)* @db_sethook }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str12491, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setlocal }, %struct.luaL_Reg { i8* getelementptr inbounds ([13 x i8]* @.str13492, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setmetatable }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8]* @.str14493, i32 0, i32 0), i32 (%struct.lua_State*)* @db_setupvalue }, %struct.luaL_Reg { i8* getelementptr inbounds ([10 x i8]* @.str15494, i32 0, i32 0), i32 (%struct.lua_State*)* @db_traceback }, %struct.luaL_Reg zeroinitializer], align 16
@.str479 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str1480 = private unnamed_addr constant [13 x i8] c"getuservalue\00", align 1
@.str2481 = private unnamed_addr constant [8 x i8] c"gethook\00", align 1
@.str3482 = private unnamed_addr constant [8 x i8] c"getinfo\00", align 1
@.str4483 = private unnamed_addr constant [9 x i8] c"getlocal\00", align 1
@.str5484 = private unnamed_addr constant [12 x i8] c"getregistry\00", align 1
@.str6485 = private unnamed_addr constant [13 x i8] c"getmetatable\00", align 1
@.str7486 = private unnamed_addr constant [11 x i8] c"getupvalue\00", align 1
@.str8487 = private unnamed_addr constant [12 x i8] c"upvaluejoin\00", align 1
@.str9488 = private unnamed_addr constant [10 x i8] c"upvalueid\00", align 1
@.str10489 = private unnamed_addr constant [13 x i8] c"setuservalue\00", align 1
@.str11490 = private unnamed_addr constant [8 x i8] c"sethook\00", align 1
@.str12491 = private unnamed_addr constant [9 x i8] c"setlocal\00", align 1
@.str13492 = private unnamed_addr constant [13 x i8] c"setmetatable\00", align 1
@.str14493 = private unnamed_addr constant [11 x i8] c"setupvalue\00", align 1
@.str15494 = private unnamed_addr constant [10 x i8] c"traceback\00", align 1
@.str16495 = private unnamed_addr constant [22 x i8] c"nil or table expected\00", align 1
@.str17496 = private unnamed_addr constant [19 x i8] c"level out of range\00", align 1
@.str18497 = private unnamed_addr constant [6 x i8] c"_HKEY\00", align 1
@.str19498 = private unnamed_addr constant [2 x i8] c"k\00", align 1
@.str20499 = private unnamed_addr constant [7 x i8] c"__mode\00", align 1
@hookf.hooknames = internal unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str21500, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str22501, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str23502, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str24503, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str25504, i32 0, i32 0)], align 16
@.str21500 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str22501 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str23502 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str24503 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str25504 = private unnamed_addr constant [10 x i8] c"tail call\00", align 1
@.str26505 = private unnamed_addr constant [43 x i8] c"full userdata expected, got light userdata\00", align 1
@.str27506 = private unnamed_addr constant [3 x i8] c">u\00", align 1
@.str28507 = private unnamed_addr constant [22 x i8] c"invalid upvalue index\00", align 1
@.str29508 = private unnamed_addr constant [22 x i8] c"Lua function expected\00", align 1
@.str30509 = private unnamed_addr constant [7 x i8] c"flnStu\00", align 1
@.str31510 = private unnamed_addr constant [4 x i8] c">%s\00", align 1
@.str32511 = private unnamed_addr constant [27 x i8] c"function or level expected\00", align 1
@.str33512 = private unnamed_addr constant [15 x i8] c"invalid option\00", align 1
@.str34513 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str35514 = private unnamed_addr constant [10 x i8] c"short_src\00", align 1
@.str36515 = private unnamed_addr constant [12 x i8] c"linedefined\00", align 1
@.str37516 = private unnamed_addr constant [16 x i8] c"lastlinedefined\00", align 1
@.str38517 = private unnamed_addr constant [5 x i8] c"what\00", align 1
@.str39518 = private unnamed_addr constant [12 x i8] c"currentline\00", align 1
@.str40519 = private unnamed_addr constant [5 x i8] c"nups\00", align 1
@.str41520 = private unnamed_addr constant [8 x i8] c"nparams\00", align 1
@.str42521 = private unnamed_addr constant [9 x i8] c"isvararg\00", align 1
@.str43522 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str44523 = private unnamed_addr constant [9 x i8] c"namewhat\00", align 1
@.str45524 = private unnamed_addr constant [11 x i8] c"istailcall\00", align 1
@.str46525 = private unnamed_addr constant [12 x i8] c"activelines\00", align 1
@.str47526 = private unnamed_addr constant [5 x i8] c"func\00", align 1
@.str48527 = private unnamed_addr constant [14 x i8] c"external hook\00", align 1
@.str50528 = private unnamed_addr constant [12 x i8] c"lua_debug> \00", align 1
@.str51529 = private unnamed_addr constant [6 x i8] c"cont\0A\00", align 1
@.str52530 = private unnamed_addr constant [17 x i8] c"=(debug command)\00", align 1
@.str53531 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@iolib = internal constant [12 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str8540, i32 0, i32 0), i32 (%struct.lua_State*)* @io_close }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str9541, i32 0, i32 0), i32 (%struct.lua_State*)* @io_flush }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str35567, i32 0, i32 0), i32 (%struct.lua_State*)* @io_input }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str10542, i32 0, i32 0), i32 (%struct.lua_State*)* @io_lines }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str36568, i32 0, i32 0), i32 (%struct.lua_State*)* @io_open }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str37569, i32 0, i32 0), i32 (%struct.lua_State*)* @io_output }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str38570, i32 0, i32 0), i32 (%struct.lua_State*)* @io_popen }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str11543, i32 0, i32 0), i32 (%struct.lua_State*)* @io_read }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str39571, i32 0, i32 0), i32 (%struct.lua_State*)* @io_tmpfile }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str40572, i32 0, i32 0), i32 (%struct.lua_State*)* @io_type }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str14546, i32 0, i32 0), i32 (%struct.lua_State*)* @io_write }, %struct.luaL_Reg zeroinitializer], align 16
@.str532 = private unnamed_addr constant [10 x i8] c"_IO_input\00", align 1
@.str1533 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str2534 = private unnamed_addr constant [11 x i8] c"_IO_output\00", align 1
@.str3535 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str4536 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str5537 = private unnamed_addr constant [6 x i8] c"FILE*\00", align 1
@.str6538 = private unnamed_addr constant [27 x i8] c"cannot close standard file\00", align 1
@.str7539 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@flib = internal constant [10 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str8540, i32 0, i32 0), i32 (%struct.lua_State*)* @io_close }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str9541, i32 0, i32 0), i32 (%struct.lua_State*)* @f_flush }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str10542, i32 0, i32 0), i32 (%struct.lua_State*)* @f_lines }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str11543, i32 0, i32 0), i32 (%struct.lua_State*)* @f_read }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str12544, i32 0, i32 0), i32 (%struct.lua_State*)* @f_seek }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str13545, i32 0, i32 0), i32 (%struct.lua_State*)* @f_setvbuf }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str14546, i32 0, i32 0), i32 (%struct.lua_State*)* @f_write }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str15547, i32 0, i32 0), i32 (%struct.lua_State*)* @f_gc }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8]* @.str16548, i32 0, i32 0), i32 (%struct.lua_State*)* @f_tostring }, %struct.luaL_Reg zeroinitializer], align 16
@.str8540 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str9541 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str10542 = private unnamed_addr constant [6 x i8] c"lines\00", align 1
@.str11543 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str12544 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str13545 = private unnamed_addr constant [8 x i8] c"setvbuf\00", align 1
@.str14546 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str15547 = private unnamed_addr constant [5 x i8] c"__gc\00", align 1
@.str16548 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@.str17549 = private unnamed_addr constant [14 x i8] c"file (closed)\00", align 1
@.str18550 = private unnamed_addr constant [10 x i8] c"file (%p)\00", align 1
@.str19551 = private unnamed_addr constant [6 x i8] c"%.14g\00", align 1
@.str20552 = private unnamed_addr constant [29 x i8] c"attempt to use a closed file\00", align 1
@f_setvbuf.mode = internal unnamed_addr constant [3 x i32] [i32 2, i32 0, i32 1], align 4
@f_setvbuf.modenames = internal constant [4 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str21553, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str22554, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str23555, i32 0, i32 0), i8* null], align 16
@.str21553 = private unnamed_addr constant [3 x i8] c"no\00", align 1
@.str22554 = private unnamed_addr constant [5 x i8] c"full\00", align 1
@.str23555 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@f_seek.mode = internal unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 2], align 4
@f_seek.modenames = internal constant [4 x i8*] [i8* getelementptr inbounds ([4 x i8]* @.str24556, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str25557, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @.str26558, i32 0, i32 0), i8* null], align 16
@.str24556 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str25557 = private unnamed_addr constant [4 x i8] c"cur\00", align 1
@.str26558 = private unnamed_addr constant [4 x i8] c"end\00", align 1
@.str27559 = private unnamed_addr constant [31 x i8] c"not an integer in proper range\00", align 1
@.str28560 = private unnamed_addr constant [19 x i8] c"too many arguments\00", align 1
@.str29561 = private unnamed_addr constant [15 x i8] c"invalid option\00", align 1
@.str30562 = private unnamed_addr constant [15 x i8] c"invalid format\00", align 1
@.str31563 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str32564 = private unnamed_addr constant [17 x i8] c"too many options\00", align 1
@.str33565 = private unnamed_addr constant [23 x i8] c"file is already closed\00", align 1
@.str34566 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str35567 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@.str36568 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str37569 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str38570 = private unnamed_addr constant [6 x i8] c"popen\00", align 1
@.str39571 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str40572 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str41573 = private unnamed_addr constant [27 x i8] c"standard %s file is closed\00", align 1
@.str42574 = private unnamed_addr constant [12 x i8] c"closed file\00", align 1
@.str43575 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str44576 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str45577 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str46578 = private unnamed_addr constant [27 x i8] c"cannot open file '%s' (%s)\00", align 1
@.str47579 = private unnamed_addr constant [4 x i8] c"rwa\00", align 1
@.str48580 = private unnamed_addr constant [13 x i8] c"invalid mode\00", align 1
@mathlib = internal constant [29 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str2583, i32 0, i32 0), i32 (%struct.lua_State*)* @math_abs }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str3584, i32 0, i32 0), i32 (%struct.lua_State*)* @math_acos }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str4585, i32 0, i32 0), i32 (%struct.lua_State*)* @math_asin }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str5586, i32 0, i32 0), i32 (%struct.lua_State*)* @math_atan2 }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str6587, i32 0, i32 0), i32 (%struct.lua_State*)* @math_atan }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str7588, i32 0, i32 0), i32 (%struct.lua_State*)* @math_ceil }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str8589, i32 0, i32 0), i32 (%struct.lua_State*)* @math_cosh }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str9590, i32 0, i32 0), i32 (%struct.lua_State*)* @math_cos }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str10591, i32 0, i32 0), i32 (%struct.lua_State*)* @math_deg }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str11592, i32 0, i32 0), i32 (%struct.lua_State*)* @math_exp }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str12593, i32 0, i32 0), i32 (%struct.lua_State*)* @math_floor }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str13594, i32 0, i32 0), i32 (%struct.lua_State*)* @math_fmod }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str14595, i32 0, i32 0), i32 (%struct.lua_State*)* @math_frexp }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str15596, i32 0, i32 0), i32 (%struct.lua_State*)* @math_ldexp }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str16597, i32 0, i32 0), i32 (%struct.lua_State*)* @math_log10 }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str17598, i32 0, i32 0), i32 (%struct.lua_State*)* @math_log }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str18599, i32 0, i32 0), i32 (%struct.lua_State*)* @math_max }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str19600, i32 0, i32 0), i32 (%struct.lua_State*)* @math_min }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str20601, i32 0, i32 0), i32 (%struct.lua_State*)* @math_modf }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str21602, i32 0, i32 0), i32 (%struct.lua_State*)* @math_pow }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str22603, i32 0, i32 0), i32 (%struct.lua_State*)* @math_rad }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str23604, i32 0, i32 0), i32 (%struct.lua_State*)* @math_random }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8]* @.str24605, i32 0, i32 0), i32 (%struct.lua_State*)* @math_randomseed }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str25606, i32 0, i32 0), i32 (%struct.lua_State*)* @math_sinh }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str26607, i32 0, i32 0), i32 (%struct.lua_State*)* @math_sin }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str27608, i32 0, i32 0), i32 (%struct.lua_State*)* @math_sqrt }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str28609, i32 0, i32 0), i32 (%struct.lua_State*)* @math_tanh }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str29610, i32 0, i32 0), i32 (%struct.lua_State*)* @math_tan }, %struct.luaL_Reg zeroinitializer], align 16
@.str581 = private unnamed_addr constant [3 x i8] c"pi\00", align 1
@.str1582 = private unnamed_addr constant [5 x i8] c"huge\00", align 1
@.str2583 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str3584 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str4585 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str5586 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str6587 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str7588 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str8589 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str9590 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str10591 = private unnamed_addr constant [4 x i8] c"deg\00", align 1
@.str11592 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str12593 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str13594 = private unnamed_addr constant [5 x i8] c"fmod\00", align 1
@.str14595 = private unnamed_addr constant [6 x i8] c"frexp\00", align 1
@.str15596 = private unnamed_addr constant [6 x i8] c"ldexp\00", align 1
@.str16597 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str17598 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str18599 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str19600 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str20601 = private unnamed_addr constant [5 x i8] c"modf\00", align 1
@.str21602 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str22603 = private unnamed_addr constant [4 x i8] c"rad\00", align 1
@.str23604 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str24605 = private unnamed_addr constant [11 x i8] c"randomseed\00", align 1
@.str25606 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str26607 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str27608 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str28609 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str29610 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str30611 = private unnamed_addr constant [18 x i8] c"interval is empty\00", align 1
@.str31612 = private unnamed_addr constant [26 x i8] c"wrong number of arguments\00", align 1
@syslib = internal constant [12 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str613, i32 0, i32 0), i32 (%struct.lua_State*)* @os_clock }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str1614, i32 0, i32 0), i32 (%struct.lua_State*)* @os_date }, %struct.luaL_Reg { i8* getelementptr inbounds ([9 x i8]* @.str2615, i32 0, i32 0), i32 (%struct.lua_State*)* @os_difftime }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str3616, i32 0, i32 0), i32 (%struct.lua_State*)* @os_execute }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str4617, i32 0, i32 0), i32 (%struct.lua_State*)* @os_exit }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str5618, i32 0, i32 0), i32 (%struct.lua_State*)* @os_getenv }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str6619, i32 0, i32 0), i32 (%struct.lua_State*)* @os_remove }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str7620, i32 0, i32 0), i32 (%struct.lua_State*)* @os_rename }, %struct.luaL_Reg { i8* getelementptr inbounds ([10 x i8]* @.str8621, i32 0, i32 0), i32 (%struct.lua_State*)* @os_setlocale }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str9622, i32 0, i32 0), i32 (%struct.lua_State*)* @os_time }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str10623, i32 0, i32 0), i32 (%struct.lua_State*)* @os_tmpname }, %struct.luaL_Reg zeroinitializer], align 16
@.str613 = private unnamed_addr constant [6 x i8] c"clock\00", align 1
@.str1614 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str2615 = private unnamed_addr constant [9 x i8] c"difftime\00", align 1
@.str3616 = private unnamed_addr constant [8 x i8] c"execute\00", align 1
@.str4617 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str5618 = private unnamed_addr constant [7 x i8] c"getenv\00", align 1
@.str6619 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str7620 = private unnamed_addr constant [7 x i8] c"rename\00", align 1
@.str8621 = private unnamed_addr constant [10 x i8] c"setlocale\00", align 1
@.str9622 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str10623 = private unnamed_addr constant [8 x i8] c"tmpname\00", align 1
@.str11624 = private unnamed_addr constant [16 x i8] c"/tmp/lua_XXXXXX\00", align 1
@.str12625 = private unnamed_addr constant [37 x i8] c"unable to generate a unique filename\00", align 1
@.str13626 = private unnamed_addr constant [4 x i8] c"sec\00", align 1
@.str14627 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str15628 = private unnamed_addr constant [5 x i8] c"hour\00", align 1
@.str16629 = private unnamed_addr constant [4 x i8] c"day\00", align 1
@.str17630 = private unnamed_addr constant [6 x i8] c"month\00", align 1
@.str18631 = private unnamed_addr constant [5 x i8] c"year\00", align 1
@.str19632 = private unnamed_addr constant [6 x i8] c"isdst\00", align 1
@.str20633 = private unnamed_addr constant [33 x i8] c"field '%s' missing in date table\00", align 1
@os_setlocale.cat = internal unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5], align 16
@os_setlocale.catnames = internal constant [7 x i8*] [i8* getelementptr inbounds ([4 x i8]* @.str21634, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str22635, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @.str23636, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @.str24637, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @.str25638, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str9622, i32 0, i32 0), i8* null], align 16
@.str21634 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str22635 = private unnamed_addr constant [8 x i8] c"collate\00", align 1
@.str23636 = private unnamed_addr constant [6 x i8] c"ctype\00", align 1
@.str24637 = private unnamed_addr constant [9 x i8] c"monetary\00", align 1
@.str25638 = private unnamed_addr constant [8 x i8] c"numeric\00", align 1
@.str26639 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str27640 = private unnamed_addr constant [3 x i8] c"*t\00", align 1
@.str28641 = private unnamed_addr constant [5 x i8] c"wday\00", align 1
@.str29642 = private unnamed_addr constant [5 x i8] c"yday\00", align 1
@checkoption.options = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([38 x i8]* @.str30643, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str31644, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str32645, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @.str33646, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.str34647, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str35648, i32 0, i32 0)], align 16
@.str30643 = private unnamed_addr constant [38 x i8] c"aAbBcCdDeFgGhHIjmMnprRStTuUVwWxXyYzZ%\00", align 1
@.str31644 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str32645 = private unnamed_addr constant [2 x i8] c"E\00", align 1
@.str33646 = private unnamed_addr constant [7 x i8] c"cCxXyY\00", align 1
@.str34647 = private unnamed_addr constant [2 x i8] c"O\00", align 1
@.str35648 = private unnamed_addr constant [14 x i8] c"deHImMSuUVwWy\00", align 1
@.str36649 = private unnamed_addr constant [36 x i8] c"invalid conversion specifier '%%%s'\00", align 1
@strlib = internal constant [15 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str2652, i32 0, i32 0), i32 (%struct.lua_State*)* @str_byte }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str3653, i32 0, i32 0), i32 (%struct.lua_State*)* @str_char }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str4654, i32 0, i32 0), i32 (%struct.lua_State*)* @str_dump }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str5655, i32 0, i32 0), i32 (%struct.lua_State*)* @str_find }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str6656, i32 0, i32 0), i32 (%struct.lua_State*)* @str_format }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str7657, i32 0, i32 0), i32 (%struct.lua_State*)* @gmatch }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str8658, i32 0, i32 0), i32 (%struct.lua_State*)* @str_gsub }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str9659, i32 0, i32 0), i32 (%struct.lua_State*)* @str_len }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str10660, i32 0, i32 0), i32 (%struct.lua_State*)* @str_lower }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str11661, i32 0, i32 0), i32 (%struct.lua_State*)* @str_match }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str12662, i32 0, i32 0), i32 (%struct.lua_State*)* @str_rep }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str13663, i32 0, i32 0), i32 (%struct.lua_State*)* @str_reverse }, %struct.luaL_Reg { i8* getelementptr inbounds ([4 x i8]* @.str14664, i32 0, i32 0), i32 (%struct.lua_State*)* @str_sub }, %struct.luaL_Reg { i8* getelementptr inbounds ([6 x i8]* @.str15665, i32 0, i32 0), i32 (%struct.lua_State*)* @str_upper }, %struct.luaL_Reg zeroinitializer], align 16
@.str650 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str1651 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@.str2652 = private unnamed_addr constant [5 x i8] c"byte\00", align 1
@.str3653 = private unnamed_addr constant [5 x i8] c"char\00", align 1
@.str4654 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str5655 = private unnamed_addr constant [5 x i8] c"find\00", align 1
@.str6656 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str7657 = private unnamed_addr constant [7 x i8] c"gmatch\00", align 1
@.str8658 = private unnamed_addr constant [5 x i8] c"gsub\00", align 1
@.str9659 = private unnamed_addr constant [4 x i8] c"len\00", align 1
@.str10660 = private unnamed_addr constant [6 x i8] c"lower\00", align 1
@.str11661 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str12662 = private unnamed_addr constant [4 x i8] c"rep\00", align 1
@.str13663 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str14664 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str15665 = private unnamed_addr constant [6 x i8] c"upper\00", align 1
@.str16666 = private unnamed_addr constant [27 x i8] c"resulting string too large\00", align 1
@.str17667 = private unnamed_addr constant [18 x i8] c"too many captures\00", align 1
@.str18668 = private unnamed_addr constant [22 x i8] c"invalid capture index\00", align 1
@.str19669 = private unnamed_addr constant [19 x i8] c"unfinished capture\00", align 1
@.str20670 = private unnamed_addr constant [20 x i8] c"pattern too complex\00", align 1
@.str21671 = private unnamed_addr constant [35 x i8] c"missing '[' after '%%f' in pattern\00", align 1
@.str22672 = private unnamed_addr constant [27 x i8] c"invalid capture index %%%d\00", align 1
@.str23673 = private unnamed_addr constant [35 x i8] c"malformed pattern (ends with '%%')\00", align 1
@.str24674 = private unnamed_addr constant [32 x i8] c"malformed pattern (missing ']')\00", align 1
@.str25675 = private unnamed_addr constant [47 x i8] c"malformed pattern (missing arguments to '%%b')\00", align 1
@.str26676 = private unnamed_addr constant [24 x i8] c"invalid pattern capture\00", align 1
@.str27677 = private unnamed_addr constant [11 x i8] c"^$*+?.([%-\00", align 1
@.str28678 = private unnamed_addr constant [31 x i8] c"string/function/table expected\00", align 1
@.str29679 = private unnamed_addr constant [33 x i8] c"invalid replacement value (a %s)\00", align 1
@.str30680 = private unnamed_addr constant [42 x i8] c"invalid use of '%c' in replacement string\00", align 1
@.str31681 = private unnamed_addr constant [9 x i8] c"no value\00", align 1
@.str32682 = private unnamed_addr constant [29 x i8] c"not a number in proper range\00", align 1
@.str33683 = private unnamed_addr constant [3 x i8] c"ll\00", align 1
@.str34684 = private unnamed_addr constant [42 x i8] c"not a non-negative number in proper range\00", align 1
@.str35685 = private unnamed_addr constant [34 x i8] c"invalid option '%%%c' to 'format'\00", align 1
@.str36686 = private unnamed_addr constant [4 x i8] c"\5C%d\00", align 1
@.str37687 = private unnamed_addr constant [6 x i8] c"\5C%03d\00", align 1
@.str38688 = private unnamed_addr constant [6 x i8] c"-+ #0\00", align 1
@.str39689 = private unnamed_addr constant [32 x i8] c"invalid format (repeated flags)\00", align 1
@.str40690 = private unnamed_addr constant [45 x i8] c"invalid format (width or precision too long)\00", align 1
@.str41691 = private unnamed_addr constant [30 x i8] c"unable to dump given function\00", align 1
@.str42692 = private unnamed_addr constant [19 x i8] c"value out of range\00", align 1
@.str43693 = private unnamed_addr constant [22 x i8] c"string slice too long\00", align 1
@tab_funcs = internal constant [8 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str1695, i32 0, i32 0), i32 (%struct.lua_State*)* @tconcat }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str2696, i32 0, i32 0), i32 (%struct.lua_State*)* @maxn }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str3697, i32 0, i32 0), i32 (%struct.lua_State*)* @tinsert }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str4698, i32 0, i32 0), i32 (%struct.lua_State*)* @pack }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str694, i32 0, i32 0), i32 (%struct.lua_State*)* @unpack }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str5699, i32 0, i32 0), i32 (%struct.lua_State*)* @tremove }, %struct.luaL_Reg { i8* getelementptr inbounds ([5 x i8]* @.str6700, i32 0, i32 0), i32 (%struct.lua_State*)* @sort }, %struct.luaL_Reg zeroinitializer], align 16
@.str694 = private unnamed_addr constant [7 x i8] c"unpack\00", align 1
@.str1695 = private unnamed_addr constant [7 x i8] c"concat\00", align 1
@.str2696 = private unnamed_addr constant [5 x i8] c"maxn\00", align 1
@.str3697 = private unnamed_addr constant [7 x i8] c"insert\00", align 1
@.str4698 = private unnamed_addr constant [5 x i8] c"pack\00", align 1
@.str5699 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str6700 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str7701 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str8702 = private unnamed_addr constant [35 x i8] c"invalid order function for sorting\00", align 1
@.str9703 = private unnamed_addr constant [23 x i8] c"position out of bounds\00", align 1
@.str10704 = private unnamed_addr constant [27 x i8] c"too many results to unpack\00", align 1
@.str11705 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str12706 = private unnamed_addr constant [38 x i8] c"wrong number of arguments to 'insert'\00", align 1
@.str13707 = private unnamed_addr constant [53 x i8] c"invalid value (%s) at index %d in table for 'concat'\00", align 1
@.str708 = private unnamed_addr constant [7 x i8] c"_CLIBS\00", align 1
@.str1709 = private unnamed_addr constant [5 x i8] c"__gc\00", align 1
@pk_funcs = internal constant [4 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str44750, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_loadlib }, %struct.luaL_Reg { i8* getelementptr inbounds ([11 x i8]* @.str45751, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_searchpath }, %struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str46752, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_seeall }, %struct.luaL_Reg zeroinitializer], align 16
@.str2710 = private unnamed_addr constant [8 x i8] c"loaders\00", align 1
@.str3711 = private unnamed_addr constant [10 x i8] c"searchers\00", align 1
@.str4712 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str5713 = private unnamed_addr constant [13 x i8] c"LUA_PATH_5_2\00", align 1
@.str6714 = private unnamed_addr constant [9 x i8] c"LUA_PATH\00", align 1
@.str7715 = private unnamed_addr constant [138 x i8] c"/usr/local/share/lua/5.2/?.lua;/usr/local/share/lua/5.2/?/init.lua;/usr/local/lib/lua/5.2/?.lua;/usr/local/lib/lua/5.2/?/init.lua;./?.lua\00", align 1
@.str8716 = private unnamed_addr constant [6 x i8] c"cpath\00", align 1
@.str9717 = private unnamed_addr constant [14 x i8] c"LUA_CPATH_5_2\00", align 1
@.str10718 = private unnamed_addr constant [10 x i8] c"LUA_CPATH\00", align 1
@.str11719 = private unnamed_addr constant [69 x i8] c"/usr/local/lib/lua/5.2/?.so;/usr/local/lib/lua/5.2/loadall.so;./?.so\00", align 1
@.str12720 = private unnamed_addr constant [11 x i8] c"/\0A;\0A?\0A!\0A-\0A\00", align 1
@.str13721 = private unnamed_addr constant [7 x i8] c"config\00", align 1
@.str14722 = private unnamed_addr constant [8 x i8] c"_LOADED\00", align 1
@.str15723 = private unnamed_addr constant [7 x i8] c"loaded\00", align 1
@.str16724 = private unnamed_addr constant [9 x i8] c"_PRELOAD\00", align 1
@.str17725 = private unnamed_addr constant [8 x i8] c"preload\00", align 1
@ll_funcs = internal constant [3 x %struct.luaL_Reg] [%struct.luaL_Reg { i8* getelementptr inbounds ([7 x i8]* @.str18726, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_module }, %struct.luaL_Reg { i8* getelementptr inbounds ([8 x i8]* @.str19727, i32 0, i32 0), i32 (%struct.lua_State*)* @ll_require }, %struct.luaL_Reg zeroinitializer], align 16
@.str18726 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str19727 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str20728 = private unnamed_addr constant [36 x i8] c"'package.searchers' must be a table\00", align 1
@.str21729 = private unnamed_addr constant [25 x i8] c"module '%s' not found:%s\00", align 1
@.str22730 = private unnamed_addr constant [6 x i8] c"_NAME\00", align 1
@.str23731 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str24732 = private unnamed_addr constant [40 x i8] c"'module' not called from a Lua function\00", align 1
@.str25733 = private unnamed_addr constant [3 x i8] c"_M\00", align 1
@.str26734 = private unnamed_addr constant [9 x i8] c"_PACKAGE\00", align 1
@.str27735 = private unnamed_addr constant [3 x i8] c";;\00", align 1
@.str28736 = private unnamed_addr constant [4 x i8] c";\01;\00", align 1
@.str29737 = private unnamed_addr constant [2 x i8] c"\01\00", align 1
@.str30738 = private unnamed_addr constant [10 x i8] c"LUA_NOENV\00", align 1
@.str31739 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str32740 = private unnamed_addr constant [30 x i8] c"\0A\09no module '%s' in file '%s'\00", align 1
@.str33741 = private unnamed_addr constant [46 x i8] c"error loading module '%s' from file '%s':\0A\09%s\00", align 1
@.str34742 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str35743 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str37744 = private unnamed_addr constant [11 x i8] c"luaopen_%s\00", align 1
@.str38745 = private unnamed_addr constant [30 x i8] c"'package.%s' must be a string\00", align 1
@.str39746 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str40747 = private unnamed_addr constant [15 x i8] c"\0A\09no file '%s'\00", align 1
@.str41748 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str43749 = private unnamed_addr constant [33 x i8] c"\0A\09no field package.preload['%s']\00", align 1
@.str44750 = private unnamed_addr constant [8 x i8] c"loadlib\00", align 1
@.str45751 = private unnamed_addr constant [11 x i8] c"searchpath\00", align 1
@.str46752 = private unnamed_addr constant [7 x i8] c"seeall\00", align 1
@.str47753 = private unnamed_addr constant [8 x i8] c"__index\00", align 1
@.str48754 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str49755 = private unnamed_addr constant [5 x i8] c"init\00", align 1
@.str756 = private unnamed_addr constant [9 x i8] c"_PRELOAD\00", align 1
@.str1757 = private unnamed_addr constant [3 x i8] c"_G\00", align 1
@.str2758 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@.str3759 = private unnamed_addr constant [10 x i8] c"coroutine\00", align 1
@.str4760 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str5761 = private unnamed_addr constant [3 x i8] c"io\00", align 1
@.str6762 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@.str7763 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str8764 = private unnamed_addr constant [6 x i8] c"bit32\00", align 1
@.str9765 = private unnamed_addr constant [5 x i8] c"math\00", align 1
@.str10766 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str767 = private unnamed_addr constant [39 x i8] c"cannot create state: not enough memory\00", align 1
@.str1768 = private unnamed_addr constant [31 x i8] c"(error object is not a string)\00", align 1
@progname = internal unnamed_addr global i8* getelementptr inbounds ([4 x i8]* @.str2769, i64 0, i64 0), align 8
@.str2769 = private unnamed_addr constant [4 x i8] c"lua\00", align 1
@.str3770 = private unnamed_addr constant [10 x i8] c"LUA_NOENV\00", align 1
@globalL = internal unnamed_addr global %struct.lua_State* null, align 8
@.str4771 = private unnamed_addr constant [13 x i8] c"interrupted!\00", align 1
@.str5772 = private unnamed_addr constant [11 x i8] c"__tostring\00", align 1
@.str6773 = private unnamed_addr constant [19 x i8] c"(no error message)\00", align 1
@.str7774 = private unnamed_addr constant [26 x i8] c"too many results to print\00", align 1
@.str8775 = private unnamed_addr constant [6 x i8] c"print\00", align 1
@.str9776 = private unnamed_addr constant [27 x i8] c"error calling 'print' (%s)\00", align 1
@.str10777 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str11778 = private unnamed_addr constant [7 x i8] c"=stdin\00", align 1
@.str12779 = private unnamed_addr constant [6 x i8] c"<eof>\00", align 1
@.str13780 = private unnamed_addr constant [10 x i8] c"return %s\00", align 1
@.str14781 = private unnamed_addr constant [8 x i8] c"_PROMPT\00", align 1
@.str15782 = private unnamed_addr constant [9 x i8] c"_PROMPT2\00", align 1
@.str16783 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@.str17784 = private unnamed_addr constant [4 x i8] c">> \00", align 1
@.str18785 = private unnamed_addr constant [4 x i8] c"arg\00", align 1
@.str19786 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str20787 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str21788 = private unnamed_addr constant [29 x i8] c"too many arguments to script\00", align 1
@.str22789 = private unnamed_addr constant [16 x i8] c"=(command line)\00", align 1
@.str23790 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str24791 = private unnamed_addr constant [14 x i8] c"=LUA_INIT_5_2\00", align 1
@.str25792 = private unnamed_addr constant [10 x i8] c"=LUA_INIT\00", align 1
@.str26793 = private unnamed_addr constant [52 x i8] c"Lua 5.2.3  Copyright (C) 1994-2013 Lua.org, PUC-Rio\00", align 1
@.str27794 = private unnamed_addr constant [5 x i8] c"%s: \00", align 1
@.str28795 = private unnamed_addr constant [21 x i8] c"'%s' needs argument\0A\00", align 1
@.str29796 = private unnamed_addr constant [26 x i8] c"unrecognized option '%s'\0A\00", align 1
@.str30797 = private unnamed_addr constant [346 x i8] c"usage: %s [options] [script [args]]\0AAvailable options are:\0A  -e stat  execute string 'stat'\0A  -i       enter interactive mode after executing 'script'\0A  -l name  require library 'name'\0A  -v       show version information\0A  -E       ignore environment variables\0A  --       stop handling options\0A  -        stop handling options and execute stdin\0A\00", align 1
@.str31798 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define i32 @lua_checkstack(%struct.lua_State* %L, i32 %size) #0 {
  %1 = alloca i32, align 4
  store i32 %size, i32* %1, align 4, !tbaa !1
  %2 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %3 = load %struct.CallInfo** %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  %5 = load %struct.lua_TValue** %4, align 8, !tbaa !11
  %6 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %7 = load %struct.lua_TValue** %6, align 8, !tbaa !12
  %8 = ptrtoint %struct.lua_TValue* %5 to i64
  %9 = ptrtoint %struct.lua_TValue* %7 to i64
  %10 = sub i64 %8, %9
  %11 = ashr exact i64 %10, 4
  %12 = sext i32 %size to i64
  %13 = icmp sgt i64 %11, %12
  br i1 %13, label %.thread2, label %14

; <label>:14                                      ; preds = %0
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !13
  %17 = ptrtoint %struct.lua_TValue* %16 to i64
  %18 = sub i64 %9, %17
  %19 = lshr exact i64 %18, 4
  %20 = trunc i64 %19 to i32
  %21 = add nsw i32 %20, 5
  %22 = sub nsw i32 1000000, %size
  %23 = icmp sgt i32 %21, %22
  br i1 %23, label %.thread, label %24

; <label>:24                                      ; preds = %14
  %25 = bitcast i32* %1 to i8*
  %26 = call i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* @growstack, i8* %25) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %..thread2_crit_edge, label %.thread

..thread2_crit_edge:                              ; preds = %24
  %28 = zext i1 %27 to i32
  %.pre = load %struct.lua_TValue** %6, align 8, !tbaa !12
  %.pre4 = load i32* %1, align 4, !tbaa !1
  br label %.thread2

.thread2:                                         ; preds = %..thread2_crit_edge, %0
  %29 = phi i32 [ %.pre4, %..thread2_crit_edge ], [ %size, %0 ]
  %30 = phi %struct.lua_TValue* [ %.pre, %..thread2_crit_edge ], [ %7, %0 ]
  %res.03 = phi i32 [ %28, %..thread2_crit_edge ], [ 1, %0 ]
  %31 = getelementptr inbounds %struct.CallInfo* %3, i64 0, i32 1
  %32 = load %struct.lua_TValue** %31, align 8, !tbaa !14
  %33 = sext i32 %29 to i64
  %34 = getelementptr inbounds %struct.lua_TValue* %30, i64 %33
  %35 = icmp ult %struct.lua_TValue* %32, %34
  br i1 %35, label %36, label %.thread

; <label>:36                                      ; preds = %.thread2
  store %struct.lua_TValue* %34, %struct.lua_TValue** %31, align 8, !tbaa !14
  br label %.thread

.thread:                                          ; preds = %36, %.thread2, %24, %14
  %res.01 = phi i32 [ 0, %24 ], [ %res.03, %36 ], [ %res.03, %.thread2 ], [ 0, %14 ]
  ret i32 %res.01
}

; Function Attrs: nounwind ssp uwtable
define internal void @growstack(%struct.lua_State* %L, i8* nocapture readonly %ud) #0 {
  %1 = bitcast i8* %ud to i32*
  %2 = load i32* %1, align 4, !tbaa !1
  tail call void @luaD_growstack(%struct.lua_State* %L, i32 %2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_xmove(%struct.lua_State* %from, %struct.lua_State* %to, i32 %n) #0 {
  %1 = icmp eq %struct.lua_State* %from, %to
  br i1 %1, label %.loopexit, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %from, i64 0, i32 4
  %4 = load %struct.lua_TValue** %3, align 8, !tbaa !12
  %5 = sext i32 %n to i64
  %6 = sub i64 0, %5
  %7 = getelementptr inbounds %struct.lua_TValue* %4, i64 %6
  store %struct.lua_TValue* %7, %struct.lua_TValue** %3, align 8, !tbaa !12
  %8 = icmp sgt i32 %n, 0
  br i1 %8, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %2
  %9 = getelementptr inbounds %struct.lua_State* %to, i64 0, i32 4
  br label %10

; <label>:10                                      ; preds = %._crit_edge, %.lr.ph
  %11 = phi %struct.lua_TValue* [ %7, %.lr.ph ], [ %.pre, %._crit_edge ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %._crit_edge ]
  %12 = getelementptr inbounds %struct.lua_TValue* %11, i64 %indvars.iv
  %13 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %14 = getelementptr inbounds %struct.lua_TValue* %13, i64 1
  store %struct.lua_TValue* %14, %struct.lua_TValue** %9, align 8, !tbaa !12
  %15 = bitcast %struct.lua_TValue* %12 to i64*
  %16 = load i64* %15, align 8
  %17 = getelementptr inbounds %struct.lua_TValue* %13, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %16 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %17, align 8
  %18 = getelementptr inbounds %struct.lua_TValue* %11, i64 %indvars.iv, i32 1
  %19 = load i32* %18, align 4, !tbaa !15
  %20 = getelementptr inbounds %struct.lua_TValue* %13, i64 0, i32 1
  store i32 %19, i32* %20, align 4, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %n
  br i1 %exitcond, label %.loopexit, label %._crit_edge

._crit_edge:                                      ; preds = %10
  %.pre = load %struct.lua_TValue** %3, align 8, !tbaa !12
  br label %10

.loopexit:                                        ; preds = %10, %2, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 (%struct.lua_State*)* @lua_atpanic(%struct.lua_State* nocapture readonly %L, i32 (%struct.lua_State*)* %panicf) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 29
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !18
  store i32 (%struct.lua_State*)* %panicf, i32 (%struct.lua_State*)** %3, align 8, !tbaa !18
  ret i32 (%struct.lua_State*)* %4
}

; Function Attrs: nounwind readonly ssp uwtable
define double* @lua_version(%struct.lua_State* readonly %L) #1 {
  %1 = icmp eq %struct.lua_State* %L, null
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.global_State** %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.global_State* %4, i64 0, i32 31
  %6 = load double** %5, align 8, !tbaa !23
  br label %7

; <label>:7                                       ; preds = %2, %0
  %.0 = phi double* [ %6, %2 ], [ @lua_version.version, %0 ]
  ret double* %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_absindex(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %idx.off = add i32 %idx, 1000999
  %1 = icmp ugt i32 %idx.off, 1000999
  br i1 %1, label %16, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %4 = load %struct.lua_TValue** %3, align 8, !tbaa !12
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %6 = load %struct.CallInfo** %5, align 8, !tbaa !5
  %7 = getelementptr inbounds %struct.CallInfo* %6, i64 0, i32 0
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !24
  %9 = ptrtoint %struct.lua_TValue* %4 to i64
  %10 = ptrtoint %struct.lua_TValue* %8 to i64
  %11 = sub i64 %9, %10
  %12 = lshr exact i64 %11, 4
  %13 = zext i32 %idx to i64
  %14 = add nsw i64 %12, %13
  %15 = trunc i64 %14 to i32
  br label %16

; <label>:16                                      ; preds = %2, %0
  %17 = phi i32 [ %15, %2 ], [ %idx, %0 ]
  ret i32 %17
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_gettop(%struct.lua_State* nocapture readonly %L) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %4 = load %struct.CallInfo** %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.CallInfo* %4, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = getelementptr inbounds %struct.lua_TValue* %6, i64 1
  %8 = ptrtoint %struct.lua_TValue* %2 to i64
  %9 = ptrtoint %struct.lua_TValue* %7 to i64
  %10 = sub i64 %8, %9
  %11 = lshr exact i64 %10, 4
  %12 = trunc i64 %11 to i32
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define void @lua_settop(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = icmp sgt i32 %idx, -1
  br i1 %1, label %.preheader, label %21

.preheader:                                       ; preds = %0
  %2 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %3 = load %struct.CallInfo** %2, align 8, !tbaa !5
  %4 = getelementptr inbounds %struct.CallInfo* %3, i64 0, i32 0
  %5 = load %struct.lua_TValue** %4, align 8, !tbaa !24
  %6 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %7 = load %struct.lua_TValue** %6, align 8, !tbaa !12
  %8 = sext i32 %idx to i64
  %.sum = add i64 %8, 1
  %9 = getelementptr inbounds %struct.lua_TValue* %5, i64 %.sum
  %10 = icmp ult %struct.lua_TValue* %7, %9
  br i1 %10, label %.lr.ph, label %20

.lr.ph:                                           ; preds = %.preheader
  %11 = ptrtoint %struct.lua_TValue* %7 to i64
  %scevgep = getelementptr %struct.lua_TValue* %5, i64 %8, i32 1
  %scevgep4 = getelementptr i32* %scevgep, i64 1
  %scevgep45 = bitcast i32* %scevgep4 to i8*
  %12 = sub i64 3, %11
  %uglygep = getelementptr i8* %scevgep45, i64 %12
  %uglygep6 = ptrtoint i8* %uglygep to i64
  %13 = lshr i64 %uglygep6, 4
  %14 = add i64 %13, 1
  br label %15

; <label>:15                                      ; preds = %15, %.lr.ph
  %16 = phi %struct.lua_TValue* [ %7, %.lr.ph ], [ %17, %15 ]
  %17 = getelementptr inbounds %struct.lua_TValue* %16, i64 1
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 0, i32 1
  store i32 0, i32* %18, align 4, !tbaa !15
  %19 = icmp ult %struct.lua_TValue* %17, %9
  br i1 %19, label %15, label %._crit_edge

._crit_edge:                                      ; preds = %15
  %scevgep7 = getelementptr %struct.lua_TValue* %7, i64 %14
  store %struct.lua_TValue* %scevgep7, %struct.lua_TValue** %6, align 8, !tbaa !12
  br label %20

; <label>:20                                      ; preds = %._crit_edge, %.preheader
  store %struct.lua_TValue* %9, %struct.lua_TValue** %6, align 8, !tbaa !12
  br label %27

; <label>:21                                      ; preds = %0
  %22 = add nsw i32 %idx, 1
  %23 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %24 = load %struct.lua_TValue** %23, align 8, !tbaa !12
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds %struct.lua_TValue* %24, i64 %25
  store %struct.lua_TValue* %26, %struct.lua_TValue** %23, align 8, !tbaa !12
  br label %27

; <label>:27                                      ; preds = %21, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_remove(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit.preheader

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit.preheader

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit.preheader

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit.preheader, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit.preheader, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit.preheader

index2addr.exit.preheader:                        ; preds = %39, %32, %25, %21, %14, %4
  %p.0.ph = phi %struct.lua_TValue* [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %p.0.ph, i64 1
  %46 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %47 = load %struct.lua_TValue** %46, align 8, !tbaa !12
  %48 = icmp ult %struct.lua_TValue* %45, %47
  br i1 %48, label %index2addr.exit, label %index2addr.exit._crit_edge

index2addr.exit:                                  ; preds = %index2addr.exit, %index2addr.exit.preheader
  %49 = phi %struct.lua_TValue* [ %56, %index2addr.exit ], [ %45, %index2addr.exit.preheader ]
  %p.02 = phi %struct.lua_TValue* [ %49, %index2addr.exit ], [ %p.0.ph, %index2addr.exit.preheader ]
  %50 = bitcast %struct.lua_TValue* %49 to i64*
  %51 = load i64* %50, align 8
  %52 = getelementptr inbounds %struct.lua_TValue* %p.02, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %51 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %52, align 8
  %53 = getelementptr inbounds %struct.lua_TValue* %p.02, i64 1, i32 1
  %54 = load i32* %53, align 4, !tbaa !15
  %55 = getelementptr inbounds %struct.lua_TValue* %p.02, i64 0, i32 1
  store i32 %54, i32* %55, align 4, !tbaa !15
  %56 = getelementptr inbounds %struct.lua_TValue* %49, i64 1
  %57 = load %struct.lua_TValue** %46, align 8, !tbaa !12
  %58 = icmp ult %struct.lua_TValue* %56, %57
  br i1 %58, label %index2addr.exit, label %index2addr.exit._crit_edge

index2addr.exit._crit_edge:                       ; preds = %index2addr.exit, %index2addr.exit.preheader
  %.lcssa1 = phi %struct.lua_TValue* [ %47, %index2addr.exit.preheader ], [ %57, %index2addr.exit ]
  %59 = getelementptr inbounds %struct.lua_TValue* %.lcssa1, i64 -1
  store %struct.lua_TValue* %59, %struct.lua_TValue** %46, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_insert(%struct.lua_State* nocapture readonly %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = icmp ugt %struct.lua_TValue* %46, %.0.i
  br i1 %47, label %.lr.ph, label %56

.lr.ph:                                           ; preds = %.lr.ph, %index2addr.exit
  %q.04 = phi %struct.lua_TValue* [ %48, %.lr.ph ], [ %46, %index2addr.exit ]
  %48 = getelementptr inbounds %struct.lua_TValue* %q.04, i64 -1
  %49 = bitcast %struct.lua_TValue* %48 to i64*
  %50 = load i64* %49, align 8
  %51 = getelementptr inbounds %struct.lua_TValue* %q.04, i64 0, i32 0, i32 0
  %.c3 = inttoptr i64 %50 to %union.GCObject*
  store %union.GCObject* %.c3, %union.GCObject** %51, align 8
  %52 = getelementptr inbounds %struct.lua_TValue* %q.04, i64 -1, i32 1
  %53 = load i32* %52, align 4, !tbaa !15
  %54 = getelementptr inbounds %struct.lua_TValue* %q.04, i64 0, i32 1
  store i32 %53, i32* %54, align 4, !tbaa !15
  %55 = icmp ugt %struct.lua_TValue* %48, %.0.i
  br i1 %55, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %.pre = load %struct.lua_TValue** %45, align 8, !tbaa !12
  br label %56

; <label>:56                                      ; preds = %._crit_edge, %index2addr.exit
  %57 = phi %struct.lua_TValue* [ %.pre, %._crit_edge ], [ %46, %index2addr.exit ]
  %58 = bitcast %struct.lua_TValue* %57 to i64*
  %59 = load i64* %58, align 8
  %60 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %59 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %60, align 8
  %61 = getelementptr inbounds %struct.lua_TValue* %57, i64 0, i32 1
  %62 = load i32* %61, align 4, !tbaa !15
  %63 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  store i32 %62, i32* %63, align 4, !tbaa !15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_replace(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_TValue* %2, i64 -1
  %4 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %5 = load %struct.CallInfo** %4, align 8, !tbaa !5
  %6 = icmp sgt i32 %idx, 0
  br i1 %6, label %7, label %13

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 0
  %9 = load %struct.lua_TValue** %8, align 8, !tbaa !24
  %10 = sext i32 %idx to i64
  %11 = getelementptr inbounds %struct.lua_TValue* %9, i64 %10
  %12 = icmp ult %struct.lua_TValue* %11, %2
  %.luaO_nilobject_.i = select i1 %12, %struct.lua_TValue* %11, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:13                                      ; preds = %0
  %14 = icmp slt i32 %idx, -1000999
  br i1 %14, label %18, label %15

; <label>:15                                      ; preds = %13
  %16 = sext i32 %idx to i64
  %17 = getelementptr inbounds %struct.lua_TValue* %2, i64 %16
  br label %index2addr.exit

; <label>:18                                      ; preds = %13
  %19 = icmp eq i32 %idx, -1001000
  br i1 %19, label %20, label %24

; <label>:20                                      ; preds = %18
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %22 = load %struct.global_State** %21, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 7
  br label %index2addr.exit

; <label>:24                                      ; preds = %18
  %25 = sub nsw i32 -1001000, %idx
  %26 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 0
  %27 = load %struct.lua_TValue** %26, align 8, !tbaa !24
  %28 = getelementptr inbounds %struct.lua_TValue* %27, i64 0, i32 1
  %29 = load i32* %28, align 4, !tbaa !15
  %30 = icmp eq i32 %29, 22
  br i1 %30, label %index2addr.exit, label %31

; <label>:31                                      ; preds = %24
  %32 = getelementptr inbounds %struct.lua_TValue* %27, i64 0, i32 0, i32 0
  %33 = load %union.GCObject** %32, align 8, !tbaa !25
  %34 = getelementptr inbounds %union.GCObject* %33, i64 0, i32 0, i32 3
  %35 = load i8* %34, align 1, !tbaa !26
  %36 = zext i8 %35 to i32
  %37 = icmp sgt i32 %25, %36
  br i1 %37, label %index2addr.exit, label %38

; <label>:38                                      ; preds = %31
  %39 = add nsw i32 %25, -1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %union.GCObject* %33, i64 0, i32 0, i32 6
  %42 = bitcast %struct.CallInfo** %41 to [1 x %struct.lua_TValue]*
  %43 = getelementptr inbounds [1 x %struct.lua_TValue]* %42, i64 0, i64 %40
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %38, %31, %24, %20, %15, %7
  %.0.i = phi %struct.lua_TValue* [ %23, %20 ], [ %17, %15 ], [ %.luaO_nilobject_.i, %7 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %24 ], [ %43, %38 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %31 ]
  %44 = bitcast %struct.lua_TValue* %3 to i64*
  %45 = load i64* %44, align 8
  %46 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %45 to %union.GCObject*
  store %union.GCObject* %.c.i, %union.GCObject** %46, align 8
  %47 = getelementptr inbounds %struct.lua_TValue* %2, i64 -1, i32 1
  %48 = load i32* %47, align 4, !tbaa !15
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  store i32 %48, i32* %49, align 4, !tbaa !15
  %50 = icmp slt i32 %idx, -1001000
  br i1 %50, label %51, label %moveto.exit

; <label>:51                                      ; preds = %index2addr.exit
  %52 = load i32* %47, align 4, !tbaa !15
  %53 = and i32 %52, 64
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %moveto.exit, label %55

; <label>:55                                      ; preds = %51
  %56 = getelementptr inbounds %struct.lua_TValue* %3, i64 0, i32 0, i32 0
  %57 = load %union.GCObject** %56, align 8, !tbaa !25
  %58 = getelementptr inbounds %union.GCObject* %57, i64 0, i32 0, i32 2
  %59 = load i8* %58, align 1, !tbaa !28
  %60 = and i8 %59, 3
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %moveto.exit, label %62

; <label>:62                                      ; preds = %55
  %63 = load %struct.CallInfo** %4, align 8, !tbaa !5
  %64 = getelementptr inbounds %struct.CallInfo* %63, i64 0, i32 0
  %65 = load %struct.lua_TValue** %64, align 8, !tbaa !24
  %66 = getelementptr inbounds %struct.lua_TValue* %65, i64 0, i32 0, i32 0
  %67 = load %union.GCObject** %66, align 8, !tbaa !25
  %68 = getelementptr inbounds %union.GCObject* %67, i64 0, i32 0, i32 2
  %69 = load i8* %68, align 1, !tbaa !28
  %70 = and i8 %69, 4
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %moveto.exit, label %72

; <label>:72                                      ; preds = %62
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %67, %union.GCObject* %57) #3
  br label %moveto.exit

moveto.exit:                                      ; preds = %72, %62, %55, %51, %index2addr.exit
  %73 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %74 = getelementptr inbounds %struct.lua_TValue* %73, i64 -1
  store %struct.lua_TValue* %74, %struct.lua_TValue** %1, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_copy(%struct.lua_State* %L, i32 %fromidx, i32 %toidx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %fromidx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %fromidx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %fromidx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %fromidx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %fromidx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %fromidx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = icmp sgt i32 %toidx, 0
  br i1 %45, label %46, label %54

; <label>:46                                      ; preds = %index2addr.exit
  %47 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !24
  %49 = sext i32 %toidx to i64
  %50 = getelementptr inbounds %struct.lua_TValue* %48, i64 %49
  %51 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %52 = load %struct.lua_TValue** %51, align 8, !tbaa !12
  %53 = icmp ult %struct.lua_TValue* %50, %52
  %.luaO_nilobject_.i1 = select i1 %53, %struct.lua_TValue* %50, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit3

; <label>:54                                      ; preds = %index2addr.exit
  %55 = icmp slt i32 %toidx, -1000999
  br i1 %55, label %61, label %56

; <label>:56                                      ; preds = %54
  %57 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue** %57, align 8, !tbaa !12
  %59 = sext i32 %toidx to i64
  %60 = getelementptr inbounds %struct.lua_TValue* %58, i64 %59
  br label %index2addr.exit3

; <label>:61                                      ; preds = %54
  %62 = icmp eq i32 %toidx, -1001000
  br i1 %62, label %63, label %67

; <label>:63                                      ; preds = %61
  %64 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %65 = load %struct.global_State** %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.global_State* %65, i64 0, i32 7
  br label %index2addr.exit3

; <label>:67                                      ; preds = %61
  %68 = sub nsw i32 -1001000, %toidx
  %69 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %70 = load %struct.lua_TValue** %69, align 8, !tbaa !24
  %71 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 1
  %72 = load i32* %71, align 4, !tbaa !15
  %73 = icmp eq i32 %72, 22
  br i1 %73, label %index2addr.exit3, label %74

; <label>:74                                      ; preds = %67
  %75 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 0, i32 0
  %76 = load %union.GCObject** %75, align 8, !tbaa !25
  %77 = getelementptr inbounds %union.GCObject* %76, i64 0, i32 0, i32 3
  %78 = load i8* %77, align 1, !tbaa !26
  %79 = zext i8 %78 to i32
  %80 = icmp sgt i32 %68, %79
  br i1 %80, label %index2addr.exit3, label %81

; <label>:81                                      ; preds = %74
  %82 = add nsw i32 %68, -1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %union.GCObject* %76, i64 0, i32 0, i32 6
  %85 = bitcast %struct.CallInfo** %84 to [1 x %struct.lua_TValue]*
  %86 = getelementptr inbounds [1 x %struct.lua_TValue]* %85, i64 0, i64 %83
  br label %index2addr.exit3

index2addr.exit3:                                 ; preds = %81, %74, %67, %63, %56, %46
  %.0.i2 = phi %struct.lua_TValue* [ %66, %63 ], [ %60, %56 ], [ %.luaO_nilobject_.i1, %46 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %67 ], [ %86, %81 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %74 ]
  %87 = bitcast %struct.lua_TValue* %.0.i to i64*
  %88 = load i64* %87, align 8
  %89 = getelementptr inbounds %struct.lua_TValue* %.0.i2, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %88 to %union.GCObject*
  store %union.GCObject* %.c.i, %union.GCObject** %89, align 8
  %90 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %91 = load i32* %90, align 4, !tbaa !15
  %92 = getelementptr inbounds %struct.lua_TValue* %.0.i2, i64 0, i32 1
  store i32 %91, i32* %92, align 4, !tbaa !15
  %93 = icmp slt i32 %toidx, -1001000
  br i1 %93, label %94, label %moveto.exit

; <label>:94                                      ; preds = %index2addr.exit3
  %95 = load i32* %90, align 4, !tbaa !15
  %96 = and i32 %95, 64
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %moveto.exit, label %98

; <label>:98                                      ; preds = %94
  %99 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %100 = load %union.GCObject** %99, align 8, !tbaa !25
  %101 = getelementptr inbounds %union.GCObject* %100, i64 0, i32 0, i32 2
  %102 = load i8* %101, align 1, !tbaa !28
  %103 = and i8 %102, 3
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %moveto.exit, label %105

; <label>:105                                     ; preds = %98
  %106 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %107 = getelementptr inbounds %struct.CallInfo* %106, i64 0, i32 0
  %108 = load %struct.lua_TValue** %107, align 8, !tbaa !24
  %109 = getelementptr inbounds %struct.lua_TValue* %108, i64 0, i32 0, i32 0
  %110 = load %union.GCObject** %109, align 8, !tbaa !25
  %111 = getelementptr inbounds %union.GCObject* %110, i64 0, i32 0, i32 2
  %112 = load i8* %111, align 1, !tbaa !28
  %113 = and i8 %112, 4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %moveto.exit, label %115

; <label>:115                                     ; preds = %105
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %110, %union.GCObject* %100) #3
  br label %moveto.exit

moveto.exit:                                      ; preds = %115, %105, %98, %94, %index2addr.exit3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushvalue(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = bitcast %struct.lua_TValue* %.0.i to i64*
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %struct.lua_TValue* %46, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %48 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %49, align 8
  %50 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %51 = load i32* %50, align 4, !tbaa !15
  %52 = getelementptr inbounds %struct.lua_TValue* %46, i64 0, i32 1
  store i32 %51, i32* %52, align 4, !tbaa !15
  %53 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %54 = getelementptr inbounds %struct.lua_TValue* %53, i64 1
  store %struct.lua_TValue* %54, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_type(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  br i1 %11, label %index2addr.exit, label %index2addr.exit.thread

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit.thread, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit.thread, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %44, %39 ], [ %8, %4 ]
  %45 = icmp eq %struct.lua_TValue* %.0.i, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %45, label %index2addr.exit.thread, label %46

; <label>:46                                      ; preds = %index2addr.exit
  %47 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %48 = load i32* %47, align 4, !tbaa !15
  %49 = and i32 %48, 15
  br label %index2addr.exit.thread

index2addr.exit.thread:                           ; preds = %46, %index2addr.exit, %32, %25, %4
  %50 = phi i32 [ %49, %46 ], [ -1, %index2addr.exit ], [ -1, %4 ], [ -1, %25 ], [ -1, %32 ]
  ret i32 %50
}

; Function Attrs: nounwind readnone ssp uwtable
define i8* @lua_typename(%struct.lua_State* nocapture readnone %L, i32 %t) #2 {
  %1 = add nsw i32 %t, 1
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [12 x i8*]* @luaT_typenames_, i64 0, i64 %2
  %4 = load i8** %3, align 8, !tbaa !25
  ret i8* %4
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_iscfunction(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 22
  %48 = icmp eq i32 %46, 102
  %. = or i1 %47, %48
  %49 = zext i1 %. to i32
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_isnumber(%struct.lua_State* nocapture readonly %L, i32 %idx) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %51, label %48

; <label>:48                                      ; preds = %index2addr.exit
  %49 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.215* (%struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.0.i, %struct.lua_TValue* %n) #3
  %50 = icmp ne %struct.lua_TValue* %49, null
  br label %51

; <label>:51                                      ; preds = %48, %index2addr.exit
  %52 = phi i1 [ true, %index2addr.exit ], [ %50, %48 ]
  %53 = zext i1 %52 to i32
  ret i32 %53
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_isstring(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  br i1 %11, label %index2addr.exit.i, label %lua_type.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit.i

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit.i

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %lua_type.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %lua_type.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit.i

index2addr.exit.i:                                ; preds = %39, %21, %14, %4
  %.0.i.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %44, %39 ], [ %8, %4 ]
  %45 = icmp eq %struct.lua_TValue* %.0.i.i, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %45, label %lua_type.exit, label %46

; <label>:46                                      ; preds = %index2addr.exit.i
  %47 = getelementptr inbounds %struct.lua_TValue* %.0.i.i, i64 0, i32 1
  %48 = load i32* %47, align 4, !tbaa !15
  %49 = and i32 %48, 15
  %phitmp = add i32 %49, -3
  %phitmp1 = icmp ult i32 %phitmp, 2
  br label %lua_type.exit

lua_type.exit:                                    ; preds = %46, %index2addr.exit.i, %32, %25, %4
  %50 = phi i1 [ %phitmp1, %46 ], [ false, %index2addr.exit.i ], [ false, %4 ], [ false, %25 ], [ false, %32 ]
  %51 = zext i1 %50 to i32
  ret i32 %51
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_isuserdata(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 71
  %48 = icmp eq i32 %46, 2
  %. = or i1 %47, %48
  %49 = zext i1 %. to i32
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_rawequal(%struct.lua_State* nocapture readonly %L, i32 %index1, i32 %index2) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %index1, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %index1 to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %index1, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %index1 to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %index1, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %index1
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = icmp sgt i32 %index2, 0
  br i1 %45, label %46, label %54

; <label>:46                                      ; preds = %index2addr.exit
  %47 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !24
  %49 = sext i32 %index2 to i64
  %50 = getelementptr inbounds %struct.lua_TValue* %48, i64 %49
  %51 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %52 = load %struct.lua_TValue** %51, align 8, !tbaa !12
  %53 = icmp ult %struct.lua_TValue* %50, %52
  %.luaO_nilobject_.i2 = select i1 %53, %struct.lua_TValue* %50, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit4

; <label>:54                                      ; preds = %index2addr.exit
  %55 = icmp slt i32 %index2, -1000999
  br i1 %55, label %61, label %56

; <label>:56                                      ; preds = %54
  %57 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue** %57, align 8, !tbaa !12
  %59 = sext i32 %index2 to i64
  %60 = getelementptr inbounds %struct.lua_TValue* %58, i64 %59
  br label %index2addr.exit4

; <label>:61                                      ; preds = %54
  %62 = icmp eq i32 %index2, -1001000
  br i1 %62, label %63, label %67

; <label>:63                                      ; preds = %61
  %64 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %65 = load %struct.global_State** %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.global_State* %65, i64 0, i32 7
  br label %index2addr.exit4

; <label>:67                                      ; preds = %61
  %68 = sub nsw i32 -1001000, %index2
  %69 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %70 = load %struct.lua_TValue** %69, align 8, !tbaa !24
  %71 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 1
  %72 = load i32* %71, align 4, !tbaa !15
  %73 = icmp eq i32 %72, 22
  br i1 %73, label %index2addr.exit4.thread, label %74

; <label>:74                                      ; preds = %67
  %75 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 0, i32 0
  %76 = load %union.GCObject** %75, align 8, !tbaa !25
  %77 = getelementptr inbounds %union.GCObject* %76, i64 0, i32 0, i32 3
  %78 = load i8* %77, align 1, !tbaa !26
  %79 = zext i8 %78 to i32
  %80 = icmp sgt i32 %68, %79
  br i1 %80, label %index2addr.exit4.thread, label %81

; <label>:81                                      ; preds = %74
  %82 = add nsw i32 %68, -1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %union.GCObject* %76, i64 0, i32 0, i32 6
  %85 = bitcast %struct.CallInfo** %84 to [1 x %struct.lua_TValue]*
  %86 = getelementptr inbounds [1 x %struct.lua_TValue]* %85, i64 0, i64 %83
  br label %index2addr.exit4

index2addr.exit4:                                 ; preds = %81, %63, %56, %46
  %.0.i3 = phi %struct.lua_TValue* [ %66, %63 ], [ %60, %56 ], [ %.luaO_nilobject_.i2, %46 ], [ %86, %81 ]
  %87 = icmp ne %struct.lua_TValue* %.0.i, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  %88 = icmp ne %struct.lua_TValue* %.0.i3, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  %or.cond = and i1 %87, %88
  br i1 %or.cond, label %89, label %index2addr.exit4.thread

; <label>:89                                      ; preds = %index2addr.exit4
  %90 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %91 = load i32* %90, align 4, !tbaa !15
  %92 = getelementptr inbounds %struct.lua_TValue* %.0.i3, i64 0, i32 1
  %93 = load i32* %92, align 4, !tbaa !15
  %94 = icmp eq i32 %91, %93
  br i1 %94, label %95, label %98

; <label>:95                                      ; preds = %89
  %96 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_equalobj_ to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* null, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %.0.i3) #3
  %97 = icmp ne i32 %96, 0
  br label %98

; <label>:98                                      ; preds = %95, %89
  %99 = phi i1 [ false, %89 ], [ %97, %95 ]
  %100 = zext i1 %99 to i32
  br label %index2addr.exit4.thread

index2addr.exit4.thread:                          ; preds = %98, %index2addr.exit4, %74, %67
  %101 = phi i32 [ %100, %98 ], [ 0, %index2addr.exit4 ], [ 0, %67 ], [ 0, %74 ]
  ret i32 %101
}

; Function Attrs: nounwind ssp uwtable
define void @lua_arith(%struct.lua_State* %L, i32 %op) #0 {
  %1 = icmp eq i32 %op, 6
  %2 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %3 = load %struct.lua_TValue** %2, align 8, !tbaa !12
  br i1 %1, label %4, label %._crit_edge

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue* %3, i64 -1
  %6 = bitcast %struct.lua_TValue* %5 to i64*
  %7 = load i64* %6, align 8
  %8 = getelementptr inbounds %struct.lua_TValue* %3, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %7 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %8, align 8
  %9 = getelementptr inbounds %struct.lua_TValue* %3, i64 -1, i32 1
  %10 = load i32* %9, align 4, !tbaa !15
  %11 = getelementptr inbounds %struct.lua_TValue* %3, i64 0, i32 1
  store i32 %10, i32* %11, align 4, !tbaa !15
  %12 = load %struct.lua_TValue** %2, align 8, !tbaa !12
  %13 = getelementptr inbounds %struct.lua_TValue* %12, i64 1
  store %struct.lua_TValue* %13, %struct.lua_TValue** %2, align 8, !tbaa !12
  br label %._crit_edge

._crit_edge:                                      ; preds = %4, %0
  %14 = phi %struct.lua_TValue* [ %13, %4 ], [ %3, %0 ]
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = getelementptr inbounds %struct.lua_TValue* %14, i64 -2
  %17 = getelementptr inbounds %struct.lua_TValue* %14, i64 -1
  %18 = getelementptr inbounds %struct.lua_TValue* %14, i64 -2, i32 1
  %19 = load i32* %18, align 4, !tbaa !15
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %21, label %31

; <label>:21                                      ; preds = %._crit_edge
  %22 = getelementptr inbounds %struct.lua_TValue* %14, i64 -1, i32 1
  %23 = load i32* %22, align 4, !tbaa !15
  %24 = icmp eq i32 %23, 3
  br i1 %24, label %25, label %31

; <label>:25                                      ; preds = %21
  %26 = bitcast %struct.lua_TValue* %16 to double*
  %27 = load double* %26, align 8, !tbaa !30
  %28 = bitcast %struct.lua_TValue* %17 to double*
  %29 = load double* %28, align 8, !tbaa !30
  %30 = tail call double @luaO_arith(i32 %op, double %27, double %29) #3
  store double %30, double* %26, align 8, !tbaa !30
  store i32 3, i32* %18, align 4, !tbaa !15
  br label %33

; <label>:31                                      ; preds = %21, %._crit_edge
  %32 = add nsw i32 %op, 6
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, i32)* @luaV_arith to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*, i32)*)(%struct.lua_State* %L, %struct.lua_TValue* %16, %struct.lua_TValue* %16, %struct.lua_TValue* %17, i32 %32) #3
  br label %33

; <label>:33                                      ; preds = %31, %25
  %34 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %35 = getelementptr inbounds %struct.lua_TValue* %34, i64 -1
  store %struct.lua_TValue* %35, %struct.lua_TValue** %15, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_compare(%struct.lua_State* %L, i32 %index1, i32 %index2, i32 %op) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %index1, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %index1 to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %index1, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %index1 to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %index1, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %index1
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = icmp sgt i32 %index2, 0
  br i1 %45, label %46, label %54

; <label>:46                                      ; preds = %index2addr.exit
  %47 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !24
  %49 = sext i32 %index2 to i64
  %50 = getelementptr inbounds %struct.lua_TValue* %48, i64 %49
  %51 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %52 = load %struct.lua_TValue** %51, align 8, !tbaa !12
  %53 = icmp ult %struct.lua_TValue* %50, %52
  %.luaO_nilobject_.i2 = select i1 %53, %struct.lua_TValue* %50, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit4

; <label>:54                                      ; preds = %index2addr.exit
  %55 = icmp slt i32 %index2, -1000999
  br i1 %55, label %61, label %56

; <label>:56                                      ; preds = %54
  %57 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %58 = load %struct.lua_TValue** %57, align 8, !tbaa !12
  %59 = sext i32 %index2 to i64
  %60 = getelementptr inbounds %struct.lua_TValue* %58, i64 %59
  br label %index2addr.exit4

; <label>:61                                      ; preds = %54
  %62 = icmp eq i32 %index2, -1001000
  br i1 %62, label %63, label %67

; <label>:63                                      ; preds = %61
  %64 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %65 = load %struct.global_State** %64, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.global_State* %65, i64 0, i32 7
  br label %index2addr.exit4

; <label>:67                                      ; preds = %61
  %68 = sub nsw i32 -1001000, %index2
  %69 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %70 = load %struct.lua_TValue** %69, align 8, !tbaa !24
  %71 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 1
  %72 = load i32* %71, align 4, !tbaa !15
  %73 = icmp eq i32 %72, 22
  br i1 %73, label %index2addr.exit4.thread, label %74

; <label>:74                                      ; preds = %67
  %75 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 0, i32 0
  %76 = load %union.GCObject** %75, align 8, !tbaa !25
  %77 = getelementptr inbounds %union.GCObject* %76, i64 0, i32 0, i32 3
  %78 = load i8* %77, align 1, !tbaa !26
  %79 = zext i8 %78 to i32
  %80 = icmp sgt i32 %68, %79
  br i1 %80, label %index2addr.exit4.thread, label %81

; <label>:81                                      ; preds = %74
  %82 = add nsw i32 %68, -1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %union.GCObject* %76, i64 0, i32 0, i32 6
  %85 = bitcast %struct.CallInfo** %84 to [1 x %struct.lua_TValue]*
  %86 = getelementptr inbounds [1 x %struct.lua_TValue]* %85, i64 0, i64 %83
  br label %index2addr.exit4

index2addr.exit4:                                 ; preds = %81, %63, %56, %46
  %.0.i3 = phi %struct.lua_TValue* [ %66, %63 ], [ %60, %56 ], [ %.luaO_nilobject_.i2, %46 ], [ %86, %81 ]
  %87 = icmp ne %struct.lua_TValue* %.0.i, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  %88 = icmp ne %struct.lua_TValue* %.0.i3, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  %or.cond = and i1 %87, %88
  br i1 %or.cond, label %89, label %index2addr.exit4.thread

; <label>:89                                      ; preds = %index2addr.exit4
  switch i32 %op, label %index2addr.exit4.thread [
    i32 0, label %90
    i32 1, label %102
    i32 2, label %104
  ]

; <label>:90                                      ; preds = %89
  %91 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %92 = load i32* %91, align 4, !tbaa !15
  %93 = getelementptr inbounds %struct.lua_TValue* %.0.i3, i64 0, i32 1
  %94 = load i32* %93, align 4, !tbaa !15
  %95 = icmp eq i32 %92, %94
  br i1 %95, label %96, label %99

; <label>:96                                      ; preds = %90
  %97 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_equalobj_ to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %.0.i3) #3
  %98 = icmp ne i32 %97, 0
  br label %99

; <label>:99                                      ; preds = %96, %90
  %100 = phi i1 [ false, %90 ], [ %98, %96 ]
  %101 = zext i1 %100 to i32
  br label %index2addr.exit4.thread

; <label>:102                                     ; preds = %89
  %103 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_lessthan to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %.0.i3) #3
  br label %index2addr.exit4.thread

; <label>:104                                     ; preds = %89
  %105 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_lessequal to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %.0.i3) #3
  br label %index2addr.exit4.thread

index2addr.exit4.thread:                          ; preds = %104, %102, %99, %89, %index2addr.exit4, %74, %67
  %i.0 = phi i32 [ 0, %89 ], [ %105, %104 ], [ %103, %102 ], [ %101, %99 ], [ 0, %index2addr.exit4 ], [ 0, %67 ], [ 0, %74 ]
  ret i32 %i.0
}

; Function Attrs: nounwind ssp uwtable
define double @lua_tonumberx(%struct.lua_State* nocapture readonly %L, i32 %idx, i32* %isnum) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %51, label %48

; <label>:48                                      ; preds = %index2addr.exit
  %49 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.215* (%struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.0.i, %struct.lua_TValue* %n) #3
  %50 = icmp eq %struct.lua_TValue* %49, null
  br i1 %50, label %57, label %51

; <label>:51                                      ; preds = %48, %index2addr.exit
  %o.0 = phi %struct.lua_TValue* [ %.0.i, %index2addr.exit ], [ %49, %48 ]
  %52 = icmp eq i32* %isnum, null
  br i1 %52, label %54, label %53

; <label>:53                                      ; preds = %51
  store i32 1, i32* %isnum, align 4, !tbaa !1
  br label %54

; <label>:54                                      ; preds = %53, %51
  %55 = bitcast %struct.lua_TValue* %o.0 to double*
  %56 = load double* %55, align 8, !tbaa !30
  br label %60

; <label>:57                                      ; preds = %48
  %58 = icmp eq i32* %isnum, null
  br i1 %58, label %60, label %59

; <label>:59                                      ; preds = %57
  store i32 0, i32* %isnum, align 4, !tbaa !1
  br label %60

; <label>:60                                      ; preds = %59, %57, %54
  %.0 = phi double [ %56, %54 ], [ 0.000000e+00, %57 ], [ 0.000000e+00, %59 ]
  ret double %.0
}

; Function Attrs: nounwind ssp uwtable
define i64 @lua_tointegerx(%struct.lua_State* nocapture readonly %L, i32 %idx, i32* %isnum) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %51, label %48

; <label>:48                                      ; preds = %index2addr.exit
  %49 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.215* (%struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.0.i, %struct.lua_TValue* %n) #3
  %50 = icmp eq %struct.lua_TValue* %49, null
  br i1 %50, label %57, label %51

; <label>:51                                      ; preds = %48, %index2addr.exit
  %o.0 = phi %struct.lua_TValue* [ %.0.i, %index2addr.exit ], [ %49, %48 ]
  %52 = bitcast %struct.lua_TValue* %o.0 to double*
  %53 = load double* %52, align 8, !tbaa !30
  %54 = fptosi double %53 to i64
  %55 = icmp eq i32* %isnum, null
  br i1 %55, label %60, label %56

; <label>:56                                      ; preds = %51
  store i32 1, i32* %isnum, align 4, !tbaa !1
  br label %60

; <label>:57                                      ; preds = %48
  %58 = icmp eq i32* %isnum, null
  br i1 %58, label %60, label %59

; <label>:59                                      ; preds = %57
  store i32 0, i32* %isnum, align 4, !tbaa !1
  br label %60

; <label>:60                                      ; preds = %59, %57, %56, %51
  %.0 = phi i64 [ %54, %51 ], [ %54, %56 ], [ 0, %57 ], [ 0, %59 ]
  ret i64 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_tounsignedx(%struct.lua_State* nocapture readonly %L, i32 %idx, i32* %isnum) #0 {
  %n = alloca %struct.lua_TValue, align 8
  %u.sroa.0 = alloca double, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %51, label %48

; <label>:48                                      ; preds = %index2addr.exit
  %49 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.215* (%struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %.0.i, %struct.lua_TValue* %n) #3
  %50 = icmp eq %struct.lua_TValue* %49, null
  br i1 %50, label %59, label %51

; <label>:51                                      ; preds = %48, %index2addr.exit
  %o.0 = phi %struct.lua_TValue* [ %.0.i, %index2addr.exit ], [ %49, %48 ]
  %52 = bitcast %struct.lua_TValue* %o.0 to double*
  %53 = load double* %52, align 8, !tbaa !30
  %54 = fadd double %53, 0x4338000000000000
  store volatile double %54, double* %u.sroa.0, align 8
  %55 = bitcast double* %u.sroa.0 to i32*
  %56 = load volatile i32* %55, align 8
  %57 = icmp eq i32* %isnum, null
  br i1 %57, label %62, label %58

; <label>:58                                      ; preds = %51
  store i32 1, i32* %isnum, align 4, !tbaa !1
  br label %62

; <label>:59                                      ; preds = %48
  %60 = icmp eq i32* %isnum, null
  br i1 %60, label %62, label %61

; <label>:61                                      ; preds = %59
  store i32 0, i32* %isnum, align 4, !tbaa !1
  br label %62

; <label>:62                                      ; preds = %61, %59, %58, %51
  %.0 = phi i32 [ %56, %51 ], [ %56, %58 ], [ 0, %59 ], [ 0, %61 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_toboolean(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

; <label>:48                                      ; preds = %index2addr.exit
  %49 = icmp eq i32 %46, 1
  br i1 %49, label %50, label %53

; <label>:50                                      ; preds = %48
  %51 = bitcast %struct.lua_TValue* %.0.i to i32*
  %52 = load i32* %51, align 4, !tbaa !1
  %phitmp = icmp ne i32 %52, 0
  br label %53

; <label>:53                                      ; preds = %50, %48, %index2addr.exit
  %54 = phi i1 [ false, %index2addr.exit ], [ true, %48 ], [ %phitmp, %50 ]
  %55 = zext i1 %54 to i32
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_tolstring(%struct.lua_State* %L, i32 %idx, i64* %len) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 15
  %48 = icmp eq i32 %47, 4
  br i1 %48, label %index2addr.exit3, label %49

; <label>:49                                      ; preds = %index2addr.exit
  %50 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*)* @luaV_tostring to i32 (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i) #3
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

; <label>:52                                      ; preds = %49
  %53 = icmp eq i64* %len, null
  br i1 %53, label %111, label %54

; <label>:54                                      ; preds = %52
  store i64 0, i64* %len, align 8, !tbaa !32
  br label %111

; <label>:55                                      ; preds = %49
  %56 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %57 = load %struct.global_State** %56, align 8, !tbaa !17
  %58 = getelementptr inbounds %struct.global_State* %57, i64 0, i32 3
  %59 = load i64* %58, align 8, !tbaa !33
  %60 = icmp sgt i64 %59, 0
  br i1 %60, label %61, label %62

; <label>:61                                      ; preds = %55
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %62

; <label>:62                                      ; preds = %61, %55
  %63 = load %struct.CallInfo** %1, align 8, !tbaa !5
  br i1 %3, label %64, label %72

; <label>:64                                      ; preds = %62
  %65 = getelementptr inbounds %struct.CallInfo* %63, i64 0, i32 0
  %66 = load %struct.lua_TValue** %65, align 8, !tbaa !24
  %67 = sext i32 %idx to i64
  %68 = getelementptr inbounds %struct.lua_TValue* %66, i64 %67
  %69 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %70 = load %struct.lua_TValue** %69, align 8, !tbaa !12
  %71 = icmp ult %struct.lua_TValue* %68, %70
  %.luaO_nilobject_.i1 = select i1 %71, %struct.lua_TValue* %68, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit3

; <label>:72                                      ; preds = %62
  %73 = icmp slt i32 %idx, -1000999
  br i1 %73, label %79, label %74

; <label>:74                                      ; preds = %72
  %75 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %76 = load %struct.lua_TValue** %75, align 8, !tbaa !12
  %77 = sext i32 %idx to i64
  %78 = getelementptr inbounds %struct.lua_TValue* %76, i64 %77
  br label %index2addr.exit3

; <label>:79                                      ; preds = %72
  %80 = icmp eq i32 %idx, -1001000
  br i1 %80, label %81, label %84

; <label>:81                                      ; preds = %79
  %82 = load %struct.global_State** %56, align 8, !tbaa !17
  %83 = getelementptr inbounds %struct.global_State* %82, i64 0, i32 7
  br label %index2addr.exit3

; <label>:84                                      ; preds = %79
  %85 = sub nsw i32 -1001000, %idx
  %86 = getelementptr inbounds %struct.CallInfo* %63, i64 0, i32 0
  %87 = load %struct.lua_TValue** %86, align 8, !tbaa !24
  %88 = getelementptr inbounds %struct.lua_TValue* %87, i64 0, i32 1
  %89 = load i32* %88, align 4, !tbaa !15
  %90 = icmp eq i32 %89, 22
  br i1 %90, label %index2addr.exit3, label %91

; <label>:91                                      ; preds = %84
  %92 = getelementptr inbounds %struct.lua_TValue* %87, i64 0, i32 0, i32 0
  %93 = load %union.GCObject** %92, align 8, !tbaa !25
  %94 = getelementptr inbounds %union.GCObject* %93, i64 0, i32 0, i32 3
  %95 = load i8* %94, align 1, !tbaa !26
  %96 = zext i8 %95 to i32
  %97 = icmp sgt i32 %85, %96
  br i1 %97, label %index2addr.exit3, label %98

; <label>:98                                      ; preds = %91
  %99 = add nsw i32 %85, -1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %union.GCObject* %93, i64 0, i32 0, i32 6
  %102 = bitcast %struct.CallInfo** %101 to [1 x %struct.lua_TValue]*
  %103 = getelementptr inbounds [1 x %struct.lua_TValue]* %102, i64 0, i64 %100
  br label %index2addr.exit3

index2addr.exit3:                                 ; preds = %98, %91, %84, %81, %74, %64, %index2addr.exit
  %o.0 = phi %struct.lua_TValue* [ %.0.i, %index2addr.exit ], [ %83, %81 ], [ %78, %74 ], [ %.luaO_nilobject_.i1, %64 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %84 ], [ %103, %98 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %91 ]
  %104 = icmp eq i64* %len, null
  %.phi.trans.insert = getelementptr inbounds %struct.lua_TValue* %o.0, i64 0, i32 0, i32 0
  %.pre = load %union.GCObject** %.phi.trans.insert, align 8, !tbaa !25
  br i1 %104, label %index2addr.exit3._crit_edge, label %105

; <label>:105                                     ; preds = %index2addr.exit3
  %106 = getelementptr inbounds %union.GCObject* %.pre, i64 0, i32 0, i32 4
  %107 = bitcast %struct.lua_TValue** %106 to i64*
  %108 = load i64* %107, align 8, !tbaa !34
  store i64 %108, i64* %len, align 8, !tbaa !32
  br label %index2addr.exit3._crit_edge

index2addr.exit3._crit_edge:                      ; preds = %105, %index2addr.exit3
  %109 = getelementptr inbounds %union.GCObject* %.pre, i64 0, i32 0, i32 5
  %110 = bitcast %struct.global_State** %109 to i8*
  br label %111

; <label>:111                                     ; preds = %index2addr.exit3._crit_edge, %54, %52
  %.0 = phi i8* [ %110, %index2addr.exit3._crit_edge ], [ null, %52 ], [ null, %54 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define i64 @lua_rawlen(%struct.lua_State* nocapture readonly %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 15
  switch i32 %47, label %66 [
    i32 4, label %48
    i32 7, label %54
    i32 5, label %60
  ]

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 4
  %52 = bitcast %struct.lua_TValue** %51 to i64*
  %53 = load i64* %52, align 8, !tbaa !34
  br label %66

; <label>:54                                      ; preds = %index2addr.exit
  %55 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %56 = load %union.GCObject** %55, align 8, !tbaa !25
  %57 = getelementptr inbounds %union.GCObject* %56, i64 0, i32 0, i32 6
  %58 = bitcast %struct.CallInfo** %57 to i64*
  %59 = load i64* %58, align 8, !tbaa !36
  br label %66

; <label>:60                                      ; preds = %index2addr.exit
  %61 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %62 = load %union.GCObject** %61, align 8, !tbaa !25
  %63 = bitcast %union.GCObject* %62 to %struct.Table*
  %64 = tail call i32 @luaH_getn(%struct.Table* %63) #3
  %65 = sext i32 %64 to i64
  br label %66

; <label>:66                                      ; preds = %60, %54, %48, %index2addr.exit
  %.0 = phi i64 [ %65, %60 ], [ %59, %54 ], [ %53, %48 ], [ 0, %index2addr.exit ]
  ret i64 %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 (%struct.lua_State*)* @lua_tocfunction(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  switch i32 %46, label %56 [
    i32 22, label %47
    i32 102, label %50
  ]

; <label>:47                                      ; preds = %index2addr.exit
  %48 = bitcast %struct.lua_TValue* %.0.i to i32 (%struct.lua_State*)**
  %49 = load i32 (%struct.lua_State*)** %48, align 8, !tbaa !25
  br label %56

; <label>:50                                      ; preds = %index2addr.exit
  %51 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %52 = load %union.GCObject** %51, align 8, !tbaa !25
  %53 = getelementptr inbounds %union.GCObject* %52, i64 0, i32 0, i32 5
  %54 = load %struct.global_State** %53, align 8
  %55 = bitcast %struct.global_State* %54 to i32 (%struct.lua_State*)*
  br label %56

; <label>:56                                      ; preds = %50, %47, %index2addr.exit
  %.0 = phi i32 (%struct.lua_State*)* [ %49, %47 ], [ %55, %50 ], [ null, %index2addr.exit ]
  ret i32 (%struct.lua_State*)* %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @lua_touserdata(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 15
  switch i32 %47, label %56 [
    i32 7, label %48
    i32 2, label %53
  ]

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 7
  %52 = bitcast i32** %51 to i8*
  br label %56

; <label>:53                                      ; preds = %index2addr.exit
  %54 = bitcast %struct.lua_TValue* %.0.i to i8**
  %55 = load i8** %54, align 8, !tbaa !25
  br label %56

; <label>:56                                      ; preds = %53, %48, %index2addr.exit
  %.0 = phi i8* [ %55, %53 ], [ %52, %48 ], [ null, %index2addr.exit ]
  ret i8* %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define %struct.lua_State* @lua_tothread(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = icmp eq i32 %46, 72
  br i1 %47, label %48, label %52

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0
  br label %52

; <label>:52                                      ; preds = %48, %index2addr.exit
  %53 = phi %struct.lua_State* [ %51, %48 ], [ null, %index2addr.exit ]
  ret %struct.lua_State* %53
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @lua_topointer(%struct.lua_State* nocapture readonly %L, i32 %idx) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 63
  switch i32 %47, label %lua_touserdata.exit [
    i32 5, label %48
    i32 6, label %52
    i32 38, label %56
    i32 22, label %60
    i32 8, label %64
    i32 7, label %68
    i32 2, label %68
  ]

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = bitcast %union.GCObject* %50 to i8*
  br label %lua_touserdata.exit

; <label>:52                                      ; preds = %index2addr.exit
  %53 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %54 = load %union.GCObject** %53, align 8, !tbaa !25
  %55 = bitcast %union.GCObject* %54 to i8*
  br label %lua_touserdata.exit

; <label>:56                                      ; preds = %index2addr.exit
  %57 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %58 = load %union.GCObject** %57, align 8, !tbaa !25
  %59 = bitcast %union.GCObject* %58 to i8*
  br label %lua_touserdata.exit

; <label>:60                                      ; preds = %index2addr.exit
  %61 = bitcast %struct.lua_TValue* %.0.i to i32 (%struct.lua_State*)**
  %62 = load i32 (%struct.lua_State*)** %61, align 8, !tbaa !25
  %63 = bitcast i32 (%struct.lua_State*)* %62 to i8*
  br label %lua_touserdata.exit

; <label>:64                                      ; preds = %index2addr.exit
  %65 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %66 = load %union.GCObject** %65, align 8, !tbaa !25
  %67 = bitcast %union.GCObject* %66 to i8*
  br label %lua_touserdata.exit

; <label>:68                                      ; preds = %index2addr.exit, %index2addr.exit
  br i1 %3, label %69, label %77

; <label>:69                                      ; preds = %68
  %70 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %71 = load %struct.lua_TValue** %70, align 8, !tbaa !24
  %72 = sext i32 %idx to i64
  %73 = getelementptr inbounds %struct.lua_TValue* %71, i64 %72
  %74 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %75 = load %struct.lua_TValue** %74, align 8, !tbaa !12
  %76 = icmp ult %struct.lua_TValue* %73, %75
  %.luaO_nilobject_.i.i = select i1 %76, %struct.lua_TValue* %73, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit.i

; <label>:77                                      ; preds = %68
  %78 = icmp slt i32 %idx, -1000999
  br i1 %78, label %84, label %79

; <label>:79                                      ; preds = %77
  %80 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %81 = load %struct.lua_TValue** %80, align 8, !tbaa !12
  %82 = sext i32 %idx to i64
  %83 = getelementptr inbounds %struct.lua_TValue* %81, i64 %82
  br label %index2addr.exit.i

; <label>:84                                      ; preds = %77
  %85 = icmp eq i32 %idx, -1001000
  br i1 %85, label %86, label %90

; <label>:86                                      ; preds = %84
  %87 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %88 = load %struct.global_State** %87, align 8, !tbaa !17
  %89 = getelementptr inbounds %struct.global_State* %88, i64 0, i32 7
  br label %index2addr.exit.i

; <label>:90                                      ; preds = %84
  %91 = sub nsw i32 -1001000, %idx
  %92 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %93 = load %struct.lua_TValue** %92, align 8, !tbaa !24
  %94 = getelementptr inbounds %struct.lua_TValue* %93, i64 0, i32 1
  %95 = load i32* %94, align 4, !tbaa !15
  %96 = icmp eq i32 %95, 22
  br i1 %96, label %index2addr.exit.i, label %97

; <label>:97                                      ; preds = %90
  %98 = getelementptr inbounds %struct.lua_TValue* %93, i64 0, i32 0, i32 0
  %99 = load %union.GCObject** %98, align 8, !tbaa !25
  %100 = getelementptr inbounds %union.GCObject* %99, i64 0, i32 0, i32 3
  %101 = load i8* %100, align 1, !tbaa !26
  %102 = zext i8 %101 to i32
  %103 = icmp sgt i32 %91, %102
  br i1 %103, label %index2addr.exit.i, label %104

; <label>:104                                     ; preds = %97
  %105 = add nsw i32 %91, -1
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds %union.GCObject* %99, i64 0, i32 0, i32 6
  %108 = bitcast %struct.CallInfo** %107 to [1 x %struct.lua_TValue]*
  %109 = getelementptr inbounds [1 x %struct.lua_TValue]* %108, i64 0, i64 %106
  br label %index2addr.exit.i

index2addr.exit.i:                                ; preds = %104, %97, %90, %86, %79, %69
  %.0.i.i = phi %struct.lua_TValue* [ %89, %86 ], [ %83, %79 ], [ %.luaO_nilobject_.i.i, %69 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %90 ], [ %109, %104 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %97 ]
  %110 = getelementptr inbounds %struct.lua_TValue* %.0.i.i, i64 0, i32 1
  %111 = load i32* %110, align 4, !tbaa !15
  %112 = and i32 %111, 15
  switch i32 %112, label %lua_touserdata.exit [
    i32 7, label %113
    i32 2, label %118
  ]

; <label>:113                                     ; preds = %index2addr.exit.i
  %114 = getelementptr inbounds %struct.lua_TValue* %.0.i.i, i64 0, i32 0, i32 0
  %115 = load %union.GCObject** %114, align 8, !tbaa !25
  %116 = getelementptr inbounds %union.GCObject* %115, i64 0, i32 0, i32 7
  %117 = bitcast i32** %116 to i8*
  br label %lua_touserdata.exit

; <label>:118                                     ; preds = %index2addr.exit.i
  %119 = bitcast %struct.lua_TValue* %.0.i.i to i8**
  %120 = load i8** %119, align 8, !tbaa !25
  br label %lua_touserdata.exit

lua_touserdata.exit:                              ; preds = %118, %113, %index2addr.exit.i, %64, %60, %56, %52, %48, %index2addr.exit
  %.0 = phi i8* [ %67, %64 ], [ %63, %60 ], [ %59, %56 ], [ %55, %52 ], [ %51, %48 ], [ null, %index2addr.exit ], [ %120, %118 ], [ %117, %113 ], [ null, %index2addr.exit.i ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushnil(%struct.lua_State* nocapture %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 1
  store i32 0, i32* %3, align 4, !tbaa !15
  %4 = getelementptr inbounds %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %4, %struct.lua_TValue** %1, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushnumber(%struct.lua_State* nocapture %L, double %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = bitcast %struct.lua_TValue* %2 to double*
  store double %n, double* %3, align 8, !tbaa !30
  %4 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 1
  store i32 3, i32* %4, align 4, !tbaa !15
  %5 = getelementptr inbounds %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %5, %struct.lua_TValue** %1, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushinteger(%struct.lua_State* nocapture %L, i64 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = sitofp i64 %n to double
  %4 = bitcast %struct.lua_TValue* %2 to double*
  store double %3, double* %4, align 8, !tbaa !30
  %5 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 1
  store i32 3, i32* %5, align 4, !tbaa !15
  %6 = getelementptr inbounds %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %1, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushunsigned(%struct.lua_State* nocapture %L, i32 %u) #0 {
  %1 = icmp sgt i32 %u, -1
  br i1 %1, label %2, label %4

; <label>:2                                       ; preds = %0
  %3 = sitofp i32 %u to double
  br label %6

; <label>:4                                       ; preds = %0
  %5 = uitofp i32 %u to double
  br label %6

; <label>:6                                       ; preds = %4, %2
  %7 = phi double [ %3, %2 ], [ %5, %4 ]
  %8 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %9 = load %struct.lua_TValue** %8, align 8, !tbaa !12
  %10 = bitcast %struct.lua_TValue* %9 to double*
  store double %7, double* %10, align 8, !tbaa !30
  %11 = getelementptr inbounds %struct.lua_TValue* %9, i64 0, i32 1
  store i32 3, i32* %11, align 4, !tbaa !15
  %12 = getelementptr inbounds %struct.lua_TValue* %9, i64 1
  store %struct.lua_TValue* %12, %struct.lua_TValue** %8, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_pushlstring(%struct.lua_State* %L, i8* %s, i64 %len) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %4 = load i64* %3, align 8, !tbaa !33
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString* (%struct.lua_State*, i8*, i64)*)(%struct.lua_State* %L, i8* %s, i64 %len) #3
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = bitcast %union.TString* %8 to %union.GCObject*
  %12 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 0, i32 0
  store %union.GCObject* %11, %union.GCObject** %12, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.TString* %8, i64 0, i32 0, i32 1
  %14 = load i8* %13, align 1, !tbaa !38
  %15 = zext i8 %14 to i32
  %16 = or i32 %15, 64
  %17 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 1
  store i32 %16, i32* %17, align 4, !tbaa !15
  %18 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %19 = getelementptr inbounds %struct.lua_TValue* %18, i64 1
  store %struct.lua_TValue* %19, %struct.lua_TValue** %9, align 8, !tbaa !12
  %20 = getelementptr inbounds %union.TString* %8, i64 1
  %21 = bitcast %union.TString* %20 to i8*
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_pushstring(%struct.lua_State* %L, i8* %s) #0 {
  %1 = icmp eq i8* %s, null
  br i1 %1, label %2, label %7

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %4 = load %struct.lua_TValue** %3, align 8, !tbaa !12
  %5 = getelementptr inbounds %struct.lua_TValue* %4, i64 0, i32 1
  store i32 0, i32* %5, align 4, !tbaa !15
  %6 = getelementptr inbounds %struct.lua_TValue* %4, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %3, align 8, !tbaa !12
  br label %29

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %9 = load %struct.global_State** %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.global_State* %9, i64 0, i32 3
  %11 = load i64* %10, align 8, !tbaa !33
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %13, label %14

; <label>:13                                      ; preds = %7
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %14

; <label>:14                                      ; preds = %13, %7
  %15 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %s) #3
  %16 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %17 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %18 = bitcast %union.TString* %15 to %union.GCObject*
  %19 = getelementptr inbounds %struct.lua_TValue* %17, i64 0, i32 0, i32 0
  store %union.GCObject* %18, %union.GCObject** %19, align 8, !tbaa !25
  %20 = getelementptr inbounds %union.TString* %15, i64 0, i32 0, i32 1
  %21 = load i8* %20, align 1, !tbaa !38
  %22 = zext i8 %21 to i32
  %23 = or i32 %22, 64
  %24 = getelementptr inbounds %struct.lua_TValue* %17, i64 0, i32 1
  store i32 %23, i32* %24, align 4, !tbaa !15
  %25 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %26 = getelementptr inbounds %struct.lua_TValue* %25, i64 1
  store %struct.lua_TValue* %26, %struct.lua_TValue** %16, align 8, !tbaa !12
  %27 = getelementptr inbounds %union.TString* %15, i64 1
  %28 = bitcast %union.TString* %27 to i8*
  br label %29

; <label>:29                                      ; preds = %14, %2
  %.0 = phi i8* [ null, %2 ], [ %28, %14 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_pushvfstring(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %argp) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %4 = load i64* %3, align 8, !tbaa !33
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call i8* bitcast (i8* (%struct.lua_State.228*, i8*, %struct.__va_list_tag*)* @luaO_pushvfstring to i8* (%struct.lua_State*, i8*, %struct.__va_list_tag*)*)(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %argp) #3
  ret i8* %8
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_pushfstring(%struct.lua_State* %L, i8* %fmt, ...) #0 {
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %4 = load i64* %3, align 8, !tbaa !33
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  call void @luaC_step(%struct.lua_State* %L) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  %9 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.va_start(i8* %9)
  %10 = call i8* bitcast (i8* (%struct.lua_State.228*, i8*, %struct.__va_list_tag*)* @luaO_pushvfstring to i8* (%struct.lua_State*, i8*, %struct.__va_list_tag*)*)(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %8) #3
  call void @llvm.va_end(i8* %9)
  ret i8* %10
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: nounwind ssp uwtable
define void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %fn, i32 %n) #0 {
  %1 = icmp eq i32 %n, 0
  br i1 %1, label %2, label %7

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %4 = load %struct.lua_TValue** %3, align 8, !tbaa !12
  %5 = getelementptr inbounds %struct.lua_TValue* %4, i64 0, i32 0, i32 0
  %fn.c = bitcast i32 (%struct.lua_State*)* %fn to %union.GCObject*
  store %union.GCObject* %fn.c, %union.GCObject** %5, align 8, !tbaa !25
  %6 = getelementptr inbounds %struct.lua_TValue* %4, i64 0, i32 1
  store i32 22, i32* %6, align 4, !tbaa !15
  br label %36

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %9 = load %struct.global_State** %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.global_State* %9, i64 0, i32 3
  %11 = load i64* %10, align 8, !tbaa !33
  %12 = icmp sgt i64 %11, 0
  br i1 %12, label %13, label %.lr.ph

; <label>:13                                      ; preds = %7
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %.lr.ph

.lr.ph:                                           ; preds = %13, %7
  %14 = tail call %union.Closure* bitcast (%union.Closure.129* (%struct.lua_State.126*, i32)* @luaF_newCclosure to %union.Closure* (%struct.lua_State*, i32)*)(%struct.lua_State* %L, i32 %n) #3
  %15 = getelementptr inbounds %union.Closure* %14, i64 0, i32 0, i32 5
  store i32 (%struct.lua_State*)* %fn, i32 (%struct.lua_State*)** %15, align 8, !tbaa !39
  %16 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %17 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %18 = sext i32 %n to i64
  %19 = sub i64 0, %18
  %20 = getelementptr inbounds %struct.lua_TValue* %17, i64 %19
  store %struct.lua_TValue* %20, %struct.lua_TValue** %16, align 8, !tbaa !12
  br label %21

; <label>:21                                      ; preds = %21, %.lr.ph
  %indvars.iv = phi i64 [ %18, %.lr.ph ], [ %indvars.iv.next, %21 ]
  %22 = phi %struct.lua_TValue* [ %20, %.lr.ph ], [ %32, %21 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %23 = getelementptr inbounds %struct.lua_TValue* %22, i64 %indvars.iv.next
  %24 = bitcast %struct.lua_TValue* %23 to i64*
  %25 = load i64* %24, align 8
  %26 = getelementptr inbounds %union.Closure* %14, i64 0, i32 0, i32 6, i64 %indvars.iv.next, i32 0, i32 0
  %.c = inttoptr i64 %25 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %26, align 8
  %27 = getelementptr inbounds %struct.lua_TValue* %22, i64 %indvars.iv.next, i32 1
  %28 = load i32* %27, align 4, !tbaa !15
  %29 = getelementptr inbounds %union.Closure* %14, i64 0, i32 0, i32 6, i64 %indvars.iv.next, i32 1
  store i32 %28, i32* %29, align 4, !tbaa !15
  %30 = trunc i64 %indvars.iv.next to i32
  %31 = icmp eq i32 %30, 0
  %32 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  br i1 %31, label %._crit_edge, label %21

._crit_edge:                                      ; preds = %21
  %33 = bitcast %union.Closure* %14 to %union.GCObject*
  %34 = getelementptr inbounds %struct.lua_TValue* %32, i64 0, i32 0, i32 0
  store %union.GCObject* %33, %union.GCObject** %34, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_TValue* %32, i64 0, i32 1
  store i32 102, i32* %35, align 4, !tbaa !15
  br label %36

; <label>:36                                      ; preds = %._crit_edge, %2
  %37 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %38 = load %struct.lua_TValue** %37, align 8, !tbaa !12
  %39 = getelementptr inbounds %struct.lua_TValue* %38, i64 1
  store %struct.lua_TValue* %39, %struct.lua_TValue** %37, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushboolean(%struct.lua_State* nocapture %L, i32 %b) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = icmp ne i32 %b, 0
  %4 = zext i1 %3 to i32
  %5 = bitcast %struct.lua_TValue* %2 to i32*
  store i32 %4, i32* %5, align 4, !tbaa !1
  %6 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 1
  store i32 1, i32* %6, align 4, !tbaa !15
  %7 = getelementptr inbounds %struct.lua_TValue* %2, i64 1
  store %struct.lua_TValue* %7, %struct.lua_TValue** %1, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_pushlightuserdata(%struct.lua_State* nocapture %L, i8* %p) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 0, i32 0
  %p.c = bitcast i8* %p to %union.GCObject*
  store %union.GCObject* %p.c, %union.GCObject** %3, align 8, !tbaa !25
  %4 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 1
  store i32 2, i32* %4, align 4, !tbaa !15
  %5 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %6 = getelementptr inbounds %struct.lua_TValue* %5, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %1, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_pushthread(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = bitcast %struct.lua_State* %L to %union.GCObject*
  %4 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 0, i32 0
  store %union.GCObject* %3, %union.GCObject** %4, align 8, !tbaa !25
  %5 = getelementptr inbounds %struct.lua_TValue* %2, i64 0, i32 1
  store i32 72, i32* %5, align 4, !tbaa !15
  %6 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %7 = getelementptr inbounds %struct.lua_TValue* %6, i64 1
  store %struct.lua_TValue* %7, %struct.lua_TValue** %1, align 8, !tbaa !12
  %8 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %9 = load %struct.global_State** %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.global_State* %9, i64 0, i32 30
  %11 = load %struct.lua_State** %10, align 8, !tbaa !40
  %12 = icmp eq %struct.lua_State* %11, %L
  %13 = zext i1 %12 to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define void @lua_getglobal(%struct.lua_State* %L, i8* %var) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 7, i32 0, i32 0
  %4 = load %union.GCObject** %3, align 8, !tbaa !25
  %5 = bitcast %union.GCObject* %4 to %struct.Table*
  %6 = tail call %struct.lua_TValue* @luaH_getint(%struct.Table* %5, i32 2) #3
  %7 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !12
  %9 = getelementptr inbounds %struct.lua_TValue* %8, i64 1
  store %struct.lua_TValue* %9, %struct.lua_TValue** %7, align 8, !tbaa !12
  %10 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %var) #3
  %11 = bitcast %union.TString* %10 to %union.GCObject*
  %12 = getelementptr inbounds %struct.lua_TValue* %8, i64 0, i32 0, i32 0
  store %union.GCObject* %11, %union.GCObject** %12, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.TString* %10, i64 0, i32 0, i32 1
  %14 = load i8* %13, align 1, !tbaa !38
  %15 = zext i8 %14 to i32
  %16 = or i32 %15, 64
  %17 = getelementptr inbounds %struct.lua_TValue* %8, i64 0, i32 1
  store i32 %16, i32* %17, align 4, !tbaa !15
  %18 = load %struct.lua_TValue** %7, align 8, !tbaa !12
  %19 = getelementptr inbounds %struct.lua_TValue* %18, i64 -1
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_gettable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %6, %struct.lua_TValue* %19, %struct.lua_TValue* %19) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_gettable(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_gettable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %47, %struct.lua_TValue* %47) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_getfield(%struct.lua_State* %L, i32 %idx, i8* %k) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %k) #3
  %48 = bitcast %union.TString* %47 to %union.GCObject*
  %49 = getelementptr inbounds %struct.lua_TValue* %46, i64 0, i32 0, i32 0
  store %union.GCObject* %48, %union.GCObject** %49, align 8, !tbaa !25
  %50 = getelementptr inbounds %union.TString* %47, i64 0, i32 0, i32 1
  %51 = load i8* %50, align 1, !tbaa !38
  %52 = zext i8 %51 to i32
  %53 = or i32 %52, 64
  %54 = getelementptr inbounds %struct.lua_TValue* %46, i64 0, i32 1
  store i32 %53, i32* %54, align 4, !tbaa !15
  %55 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %56 = getelementptr inbounds %struct.lua_TValue* %55, i64 1
  store %struct.lua_TValue* %56, %struct.lua_TValue** %45, align 8, !tbaa !12
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_gettable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %55, %struct.lua_TValue* %55) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_rawget(%struct.lua_State* nocapture readonly %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %46 = load %union.GCObject** %45, align 8, !tbaa !25
  %47 = bitcast %union.GCObject* %46 to %struct.Table*
  %48 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %49 = load %struct.lua_TValue** %48, align 8, !tbaa !12
  %50 = getelementptr inbounds %struct.lua_TValue* %49, i64 -1
  %51 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %47, %struct.lua_TValue* %50) #3
  %52 = load %struct.lua_TValue** %48, align 8, !tbaa !12
  %53 = bitcast %struct.lua_TValue* %51 to i64*
  %54 = load i64* %53, align 8
  %55 = getelementptr inbounds %struct.lua_TValue* %52, i64 -1, i32 0, i32 0
  %.c = inttoptr i64 %54 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %55, align 8
  %56 = getelementptr inbounds %struct.lua_TValue* %51, i64 0, i32 1
  %57 = load i32* %56, align 4, !tbaa !15
  %58 = getelementptr inbounds %struct.lua_TValue* %52, i64 -1, i32 1
  store i32 %57, i32* %58, align 4, !tbaa !15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_rawgeti(%struct.lua_State* nocapture %L, i32 %idx, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %46 = load %union.GCObject** %45, align 8, !tbaa !25
  %47 = bitcast %union.GCObject* %46 to %struct.Table*
  %48 = tail call %struct.lua_TValue* @luaH_getint(%struct.Table* %47, i32 %n) #3
  %49 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %50 = load %struct.lua_TValue** %49, align 8, !tbaa !12
  %51 = bitcast %struct.lua_TValue* %48 to i64*
  %52 = load i64* %51, align 8
  %53 = getelementptr inbounds %struct.lua_TValue* %50, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %52 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %53, align 8
  %54 = getelementptr inbounds %struct.lua_TValue* %48, i64 0, i32 1
  %55 = load i32* %54, align 4, !tbaa !15
  %56 = getelementptr inbounds %struct.lua_TValue* %50, i64 0, i32 1
  store i32 %55, i32* %56, align 4, !tbaa !15
  %57 = load %struct.lua_TValue** %49, align 8, !tbaa !12
  %58 = getelementptr inbounds %struct.lua_TValue* %57, i64 1
  store %struct.lua_TValue* %58, %struct.lua_TValue** %49, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_rawgetp(%struct.lua_State* nocapture %L, i32 %idx, i8* %p) #0 {
  %k = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %k, i64 0, i32 0, i32 0
  %p.c = bitcast i8* %p to %union.GCObject*
  store %union.GCObject* %p.c, %union.GCObject** %45, align 8, !tbaa !25
  %46 = getelementptr inbounds %struct.lua_TValue* %k, i64 0, i32 1
  store i32 2, i32* %46, align 8, !tbaa !15
  %47 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %48 = load %union.GCObject** %47, align 8, !tbaa !25
  %49 = bitcast %union.GCObject* %48 to %struct.Table*
  %50 = call %struct.lua_TValue* @luaH_get(%struct.Table* %49, %struct.lua_TValue* %k) #3
  %51 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %52 = load %struct.lua_TValue** %51, align 8, !tbaa !12
  %53 = bitcast %struct.lua_TValue* %50 to i64*
  %54 = load i64* %53, align 8
  %55 = getelementptr inbounds %struct.lua_TValue* %52, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %54 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %55, align 8
  %56 = getelementptr inbounds %struct.lua_TValue* %50, i64 0, i32 1
  %57 = load i32* %56, align 4, !tbaa !15
  %58 = getelementptr inbounds %struct.lua_TValue* %52, i64 0, i32 1
  store i32 %57, i32* %58, align 4, !tbaa !15
  %59 = load %struct.lua_TValue** %51, align 8, !tbaa !12
  %60 = getelementptr inbounds %struct.lua_TValue* %59, i64 1
  store %struct.lua_TValue* %60, %struct.lua_TValue** %51, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_createtable(%struct.lua_State* %L, i32 %narray, i32 %nrec) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %4 = load i64* %3, align 8, !tbaa !33
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call %struct.Table* @luaH_new(%struct.lua_State* %L) #3
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = bitcast %struct.Table* %8 to %union.GCObject*
  %12 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 0, i32 0
  store %union.GCObject* %11, %union.GCObject** %12, align 8, !tbaa !25
  %13 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 1
  store i32 69, i32* %13, align 4, !tbaa !15
  %14 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %15 = getelementptr inbounds %struct.lua_TValue* %14, i64 1
  store %struct.lua_TValue* %15, %struct.lua_TValue** %9, align 8, !tbaa !12
  %16 = icmp sgt i32 %narray, 0
  %17 = icmp sgt i32 %nrec, 0
  %or.cond = or i1 %16, %17
  br i1 %or.cond, label %18, label %19

; <label>:18                                      ; preds = %7
  tail call void @luaH_resize(%struct.lua_State* %L, %struct.Table* %8, i32 %narray, i32 %nrec) #3
  br label %19

; <label>:19                                      ; preds = %18, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_getmetatable(%struct.lua_State* nocapture %L, i32 %objindex) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %objindex, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %objindex to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %objindex, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %objindex to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %objindex, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %objindex
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 15
  switch i32 %47, label %60 [
    i32 5, label %48
    i32 7, label %54
  ]

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 4
  %52 = load %struct.lua_TValue** %51, align 8
  %53 = bitcast %struct.lua_TValue* %52 to %struct.Table*
  br label %66

; <label>:54                                      ; preds = %index2addr.exit
  %55 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %56 = load %union.GCObject** %55, align 8, !tbaa !25
  %57 = getelementptr inbounds %union.GCObject* %56, i64 0, i32 0, i32 4
  %58 = load %struct.lua_TValue** %57, align 8
  %59 = bitcast %struct.lua_TValue* %58 to %struct.Table*
  br label %66

; <label>:60                                      ; preds = %index2addr.exit
  %61 = zext i32 %47 to i64
  %62 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %63 = load %struct.global_State** %62, align 8, !tbaa !17
  %64 = getelementptr inbounds %struct.global_State* %63, i64 0, i32 34, i64 %61
  %65 = load %struct.Table** %64, align 8, !tbaa !25
  br label %66

; <label>:66                                      ; preds = %60, %54, %48
  %mt.0 = phi %struct.Table* [ %65, %60 ], [ %59, %54 ], [ %53, %48 ]
  %67 = icmp eq %struct.Table* %mt.0, null
  br i1 %67, label %76, label %68

; <label>:68                                      ; preds = %66
  %69 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %70 = load %struct.lua_TValue** %69, align 8, !tbaa !12
  %71 = bitcast %struct.Table* %mt.0 to %union.GCObject*
  %72 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 0, i32 0
  store %union.GCObject* %71, %union.GCObject** %72, align 8, !tbaa !25
  %73 = getelementptr inbounds %struct.lua_TValue* %70, i64 0, i32 1
  store i32 69, i32* %73, align 4, !tbaa !15
  %74 = load %struct.lua_TValue** %69, align 8, !tbaa !12
  %75 = getelementptr inbounds %struct.lua_TValue* %74, i64 1
  store %struct.lua_TValue* %75, %struct.lua_TValue** %69, align 8, !tbaa !12
  br label %76

; <label>:76                                      ; preds = %68, %66
  %res.0 = phi i32 [ 1, %68 ], [ 0, %66 ]
  ret i32 %res.0
}

; Function Attrs: nounwind ssp uwtable
define void @lua_getuservalue(%struct.lua_State* nocapture %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %46 = load %union.GCObject** %45, align 8, !tbaa !25
  %47 = getelementptr inbounds %union.GCObject* %46, i64 0, i32 0, i32 5
  %48 = load %struct.global_State** %47, align 8
  %49 = icmp eq %struct.global_State* %48, null
  %50 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %51 = load %struct.lua_TValue** %50, align 8, !tbaa !12
  br i1 %49, label %56, label %52

; <label>:52                                      ; preds = %index2addr.exit
  %53 = bitcast %struct.global_State* %48 to %union.GCObject*
  %54 = getelementptr inbounds %struct.lua_TValue* %51, i64 0, i32 0, i32 0
  store %union.GCObject* %53, %union.GCObject** %54, align 8, !tbaa !25
  %55 = getelementptr inbounds %struct.lua_TValue* %51, i64 0, i32 1
  store i32 69, i32* %55, align 4, !tbaa !15
  %.pre = load %struct.lua_TValue** %50, align 8, !tbaa !12
  br label %58

; <label>:56                                      ; preds = %index2addr.exit
  %57 = getelementptr inbounds %struct.lua_TValue* %51, i64 0, i32 1
  store i32 0, i32* %57, align 4, !tbaa !15
  br label %58

; <label>:58                                      ; preds = %56, %52
  %59 = phi %struct.lua_TValue* [ %51, %56 ], [ %.pre, %52 ]
  %60 = getelementptr inbounds %struct.lua_TValue* %59, i64 1
  store %struct.lua_TValue* %60, %struct.lua_TValue** %50, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_setglobal(%struct.lua_State* %L, i8* %var) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 7, i32 0, i32 0
  %4 = load %union.GCObject** %3, align 8, !tbaa !25
  %5 = bitcast %union.GCObject* %4 to %struct.Table*
  %6 = tail call %struct.lua_TValue* @luaH_getint(%struct.Table* %5, i32 2) #3
  %7 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !12
  %9 = getelementptr inbounds %struct.lua_TValue* %8, i64 1
  store %struct.lua_TValue* %9, %struct.lua_TValue** %7, align 8, !tbaa !12
  %10 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %var) #3
  %11 = bitcast %union.TString* %10 to %union.GCObject*
  %12 = getelementptr inbounds %struct.lua_TValue* %8, i64 0, i32 0, i32 0
  store %union.GCObject* %11, %union.GCObject** %12, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.TString* %10, i64 0, i32 0, i32 1
  %14 = load i8* %13, align 1, !tbaa !38
  %15 = zext i8 %14 to i32
  %16 = or i32 %15, 64
  %17 = getelementptr inbounds %struct.lua_TValue* %8, i64 0, i32 1
  store i32 %16, i32* %17, align 4, !tbaa !15
  %18 = load %struct.lua_TValue** %7, align 8, !tbaa !12
  %19 = getelementptr inbounds %struct.lua_TValue* %18, i64 -1
  %20 = getelementptr inbounds %struct.lua_TValue* %18, i64 -2
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_settable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %6, %struct.lua_TValue* %19, %struct.lua_TValue* %20) #3
  %21 = load %struct.lua_TValue** %7, align 8, !tbaa !12
  %22 = getelementptr inbounds %struct.lua_TValue* %21, i64 -2
  store %struct.lua_TValue* %22, %struct.lua_TValue** %7, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_settable(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.lua_TValue* %46, i64 -2
  %48 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_settable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %47, %struct.lua_TValue* %48) #3
  %49 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %50 = getelementptr inbounds %struct.lua_TValue* %49, i64 -2
  store %struct.lua_TValue* %50, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_setfield(%struct.lua_State* %L, i32 %idx, i8* %k) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.lua_TValue* %46, i64 1
  store %struct.lua_TValue* %47, %struct.lua_TValue** %45, align 8, !tbaa !12
  %48 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %k) #3
  %49 = bitcast %union.TString* %48 to %union.GCObject*
  %50 = getelementptr inbounds %struct.lua_TValue* %46, i64 0, i32 0, i32 0
  store %union.GCObject* %49, %union.GCObject** %50, align 8, !tbaa !25
  %51 = getelementptr inbounds %union.TString* %48, i64 0, i32 0, i32 1
  %52 = load i8* %51, align 1, !tbaa !38
  %53 = zext i8 %52 to i32
  %54 = or i32 %53, 64
  %55 = getelementptr inbounds %struct.lua_TValue* %46, i64 0, i32 1
  store i32 %54, i32* %55, align 4, !tbaa !15
  %56 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %57 = getelementptr inbounds %struct.lua_TValue* %56, i64 -1
  %58 = getelementptr inbounds %struct.lua_TValue* %56, i64 -2
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_settable to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %.0.i, %struct.lua_TValue* %57, %struct.lua_TValue* %58) #3
  %59 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %60 = getelementptr inbounds %struct.lua_TValue* %59, i64 -2
  store %struct.lua_TValue* %60, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_rawset(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1
  %48 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %49 = load %union.GCObject** %48, align 8, !tbaa !25
  %50 = bitcast %union.GCObject* %49 to %struct.Table*
  %51 = getelementptr inbounds %struct.lua_TValue* %46, i64 -2
  %52 = tail call %struct.lua_TValue* @luaH_set(%struct.lua_State* %L, %struct.Table* %50, %struct.lua_TValue* %51) #3
  %53 = bitcast %struct.lua_TValue* %47 to i64*
  %54 = load i64* %53, align 8
  %55 = getelementptr inbounds %struct.lua_TValue* %52, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %54 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %55, align 8
  %56 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1, i32 1
  %57 = load i32* %56, align 4, !tbaa !15
  %58 = getelementptr inbounds %struct.lua_TValue* %52, i64 0, i32 1
  store i32 %57, i32* %58, align 4, !tbaa !15
  %59 = load %union.GCObject** %48, align 8, !tbaa !25
  %60 = getelementptr inbounds %union.GCObject* %59, i64 0, i32 0, i32 3
  store i8 0, i8* %60, align 1, !tbaa !41
  %61 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %62 = getelementptr inbounds %struct.lua_TValue* %61, i64 -1, i32 1
  %63 = load i32* %62, align 4, !tbaa !15
  %64 = and i32 %63, 64
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %79, label %66

; <label>:66                                      ; preds = %index2addr.exit
  %67 = getelementptr inbounds %struct.lua_TValue* %61, i64 -1, i32 0, i32 0
  %68 = load %union.GCObject** %67, align 8, !tbaa !25
  %69 = getelementptr inbounds %union.GCObject* %68, i64 0, i32 0, i32 2
  %70 = load i8* %69, align 1, !tbaa !28
  %71 = and i8 %70, 3
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %79, label %73

; <label>:73                                      ; preds = %66
  %74 = getelementptr inbounds %union.GCObject* %59, i64 0, i32 0, i32 2
  %75 = load i8* %74, align 1, !tbaa !28
  %76 = and i8 %75, 4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %79, label %78

; <label>:78                                      ; preds = %73
  tail call void @luaC_barrierback_(%struct.lua_State* %L, %union.GCObject* %59) #3
  %.pre = load %struct.lua_TValue** %45, align 8, !tbaa !12
  br label %79

; <label>:79                                      ; preds = %78, %73, %66, %index2addr.exit
  %80 = phi %struct.lua_TValue* [ %61, %73 ], [ %61, %66 ], [ %61, %index2addr.exit ], [ %.pre, %78 ]
  %81 = getelementptr inbounds %struct.lua_TValue* %80, i64 -2
  store %struct.lua_TValue* %81, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_rawseti(%struct.lua_State* %L, i32 %idx, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %46 = load %union.GCObject** %45, align 8, !tbaa !25
  %47 = bitcast %union.GCObject* %46 to %struct.Table*
  %48 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %49 = load %struct.lua_TValue** %48, align 8, !tbaa !12
  %50 = getelementptr inbounds %struct.lua_TValue* %49, i64 -1
  tail call void @luaH_setint(%struct.lua_State* %L, %struct.Table* %47, i32 %n, %struct.lua_TValue* %50) #3
  %51 = load %struct.lua_TValue** %48, align 8, !tbaa !12
  %52 = getelementptr inbounds %struct.lua_TValue* %51, i64 -1, i32 1
  %53 = load i32* %52, align 4, !tbaa !15
  %54 = and i32 %53, 64
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %70, label %56

; <label>:56                                      ; preds = %index2addr.exit
  %57 = getelementptr inbounds %struct.lua_TValue* %51, i64 -1, i32 0, i32 0
  %58 = load %union.GCObject** %57, align 8, !tbaa !25
  %59 = getelementptr inbounds %union.GCObject* %58, i64 0, i32 0, i32 2
  %60 = load i8* %59, align 1, !tbaa !28
  %61 = and i8 %60, 3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %70, label %63

; <label>:63                                      ; preds = %56
  %64 = load %union.GCObject** %45, align 8, !tbaa !25
  %65 = getelementptr inbounds %union.GCObject* %64, i64 0, i32 0, i32 2
  %66 = load i8* %65, align 1, !tbaa !28
  %67 = and i8 %66, 4
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %70, label %69

; <label>:69                                      ; preds = %63
  tail call void @luaC_barrierback_(%struct.lua_State* %L, %union.GCObject* %64) #3
  %.pre = load %struct.lua_TValue** %48, align 8, !tbaa !12
  br label %70

; <label>:70                                      ; preds = %69, %63, %56, %index2addr.exit
  %71 = phi %struct.lua_TValue* [ %51, %63 ], [ %51, %56 ], [ %51, %index2addr.exit ], [ %.pre, %69 ]
  %72 = getelementptr inbounds %struct.lua_TValue* %71, i64 -1
  store %struct.lua_TValue* %72, %struct.lua_TValue** %48, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_rawsetp(%struct.lua_State* %L, i32 %idx, i8* %p) #0 {
  %k = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %k, i64 0, i32 0, i32 0
  %p.c = bitcast i8* %p to %union.GCObject*
  store %union.GCObject* %p.c, %union.GCObject** %45, align 8, !tbaa !25
  %46 = getelementptr inbounds %struct.lua_TValue* %k, i64 0, i32 1
  store i32 2, i32* %46, align 8, !tbaa !15
  %47 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !12
  %49 = getelementptr inbounds %struct.lua_TValue* %48, i64 -1
  %50 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %51 = load %union.GCObject** %50, align 8, !tbaa !25
  %52 = bitcast %union.GCObject* %51 to %struct.Table*
  %53 = call %struct.lua_TValue* @luaH_set(%struct.lua_State* %L, %struct.Table* %52, %struct.lua_TValue* %k) #3
  %54 = bitcast %struct.lua_TValue* %49 to i64*
  %55 = load i64* %54, align 8
  %56 = getelementptr inbounds %struct.lua_TValue* %53, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %55 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %56, align 8
  %57 = getelementptr inbounds %struct.lua_TValue* %48, i64 -1, i32 1
  %58 = load i32* %57, align 4, !tbaa !15
  %59 = getelementptr inbounds %struct.lua_TValue* %53, i64 0, i32 1
  store i32 %58, i32* %59, align 4, !tbaa !15
  %60 = load %struct.lua_TValue** %47, align 8, !tbaa !12
  %61 = getelementptr inbounds %struct.lua_TValue* %60, i64 -1, i32 1
  %62 = load i32* %61, align 4, !tbaa !15
  %63 = and i32 %62, 64
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %79, label %65

; <label>:65                                      ; preds = %index2addr.exit
  %66 = getelementptr inbounds %struct.lua_TValue* %60, i64 -1, i32 0, i32 0
  %67 = load %union.GCObject** %66, align 8, !tbaa !25
  %68 = getelementptr inbounds %union.GCObject* %67, i64 0, i32 0, i32 2
  %69 = load i8* %68, align 1, !tbaa !28
  %70 = and i8 %69, 3
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %79, label %72

; <label>:72                                      ; preds = %65
  %73 = load %union.GCObject** %50, align 8, !tbaa !25
  %74 = getelementptr inbounds %union.GCObject* %73, i64 0, i32 0, i32 2
  %75 = load i8* %74, align 1, !tbaa !28
  %76 = and i8 %75, 4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %79, label %78

; <label>:78                                      ; preds = %72
  call void @luaC_barrierback_(%struct.lua_State* %L, %union.GCObject* %73) #3
  %.pre = load %struct.lua_TValue** %47, align 8, !tbaa !12
  br label %79

; <label>:79                                      ; preds = %78, %72, %65, %index2addr.exit
  %80 = phi %struct.lua_TValue* [ %60, %72 ], [ %60, %65 ], [ %60, %index2addr.exit ], [ %.pre, %78 ]
  %81 = getelementptr inbounds %struct.lua_TValue* %80, i64 -1
  store %struct.lua_TValue* %81, %struct.lua_TValue** %47, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_setmetatable(%struct.lua_State* %L, i32 %objindex) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %objindex, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %objindex to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %objindex, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %objindex to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %objindex, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %objindex
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1, i32 1
  %48 = load i32* %47, align 4, !tbaa !15
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

; <label>:50                                      ; preds = %index2addr.exit
  %51 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1, i32 0, i32 0
  %52 = load %union.GCObject** %51, align 8, !tbaa !25
  %53 = bitcast %union.GCObject* %52 to %struct.Table*
  br label %54

; <label>:54                                      ; preds = %50, %index2addr.exit
  %mt.0 = phi %struct.Table* [ %53, %50 ], [ null, %index2addr.exit ]
  %55 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %56 = load i32* %55, align 4, !tbaa !15
  %57 = and i32 %56, 15
  switch i32 %57, label %97 [
    i32 5, label %58
    i32 7, label %77
  ]

; <label>:58                                      ; preds = %54
  %59 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %60 = load %union.GCObject** %59, align 8, !tbaa !25
  %61 = getelementptr inbounds %union.GCObject* %60, i64 0, i32 0, i32 4
  %mt.0.c1 = bitcast %struct.Table* %mt.0 to %struct.lua_TValue*
  store %struct.lua_TValue* %mt.0.c1, %struct.lua_TValue** %61, align 8, !tbaa !43
  %62 = icmp eq %struct.Table* %mt.0, null
  br i1 %62, label %102, label %63

; <label>:63                                      ; preds = %58
  %64 = getelementptr inbounds %struct.Table* %mt.0, i64 0, i32 2
  %65 = load i8* %64, align 1, !tbaa !28
  %66 = and i8 %65, 3
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %75, label %68

; <label>:68                                      ; preds = %63
  %69 = load %union.GCObject** %59, align 8, !tbaa !25
  %70 = getelementptr inbounds %union.GCObject* %69, i64 0, i32 0, i32 2
  %71 = load i8* %70, align 1, !tbaa !28
  %72 = and i8 %71, 4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %75, label %74

; <label>:74                                      ; preds = %68
  tail call void @luaC_barrierback_(%struct.lua_State* %L, %union.GCObject* %69) #3
  br label %75

; <label>:75                                      ; preds = %74, %68, %63
  %76 = load %union.GCObject** %59, align 8, !tbaa !25
  tail call void @luaC_checkfinalizer(%struct.lua_State* %L, %union.GCObject* %76, %struct.Table* %mt.0) #3
  br label %102

; <label>:77                                      ; preds = %54
  %78 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %79 = load %union.GCObject** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds %union.GCObject* %79, i64 0, i32 0, i32 4
  %mt.0.c = bitcast %struct.Table* %mt.0 to %struct.lua_TValue*
  store %struct.lua_TValue* %mt.0.c, %struct.lua_TValue** %80, align 8, !tbaa !44
  %81 = icmp eq %struct.Table* %mt.0, null
  br i1 %81, label %102, label %82

; <label>:82                                      ; preds = %77
  %83 = bitcast %struct.Table* %mt.0 to %union.GCObject*
  %84 = getelementptr inbounds %struct.Table* %mt.0, i64 0, i32 2
  %85 = load i8* %84, align 1, !tbaa !28
  %86 = and i8 %85, 3
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %95, label %88

; <label>:88                                      ; preds = %82
  %89 = load %union.GCObject** %78, align 8, !tbaa !25
  %90 = getelementptr inbounds %union.GCObject* %89, i64 0, i32 0, i32 2
  %91 = load i8* %90, align 1, !tbaa !28
  %92 = and i8 %91, 4
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %95, label %94

; <label>:94                                      ; preds = %88
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %89, %union.GCObject* %83) #3
  br label %95

; <label>:95                                      ; preds = %94, %88, %82
  %96 = load %union.GCObject** %78, align 8, !tbaa !25
  tail call void @luaC_checkfinalizer(%struct.lua_State* %L, %union.GCObject* %96, %struct.Table* %mt.0) #3
  br label %102

; <label>:97                                      ; preds = %54
  %98 = zext i32 %57 to i64
  %99 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %100 = load %struct.global_State** %99, align 8, !tbaa !17
  %101 = getelementptr inbounds %struct.global_State* %100, i64 0, i32 34, i64 %98
  store %struct.Table* %mt.0, %struct.Table** %101, align 8, !tbaa !25
  br label %102

; <label>:102                                     ; preds = %97, %95, %77, %75, %58
  %103 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %104 = getelementptr inbounds %struct.lua_TValue* %103, i64 -1
  store %struct.lua_TValue* %104, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define void @lua_setuservalue(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %47 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1, i32 1
  %48 = load i32* %47, align 4, !tbaa !15
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

; <label>:50                                      ; preds = %index2addr.exit
  %51 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %52 = load %union.GCObject** %51, align 8, !tbaa !25
  %53 = getelementptr inbounds %union.GCObject* %52, i64 0, i32 0, i32 5
  store %struct.global_State* null, %struct.global_State** %53, align 8, !tbaa !45
  br label %72

; <label>:54                                      ; preds = %index2addr.exit
  %55 = getelementptr inbounds %struct.lua_TValue* %46, i64 -1, i32 0, i32 0
  %56 = load %union.GCObject** %55, align 8, !tbaa !25
  %57 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %58 = load %union.GCObject** %57, align 8, !tbaa !25
  %59 = getelementptr inbounds %union.GCObject* %58, i64 0, i32 0, i32 5
  %.c = bitcast %union.GCObject* %56 to %struct.global_State*
  store %struct.global_State* %.c, %struct.global_State** %59, align 8, !tbaa !45
  %60 = load %union.GCObject** %55, align 8, !tbaa !25
  %61 = getelementptr inbounds %union.GCObject* %60, i64 0, i32 0, i32 2
  %62 = load i8* %61, align 1, !tbaa !28
  %63 = and i8 %62, 3
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %72, label %65

; <label>:65                                      ; preds = %54
  %66 = load %union.GCObject** %57, align 8, !tbaa !25
  %67 = getelementptr inbounds %union.GCObject* %66, i64 0, i32 0, i32 2
  %68 = load i8* %67, align 1, !tbaa !28
  %69 = and i8 %68, 4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %72, label %71

; <label>:71                                      ; preds = %65
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %66, %union.GCObject* %60) #3
  %.pre = load %struct.lua_TValue** %45, align 8, !tbaa !12
  br label %72

; <label>:72                                      ; preds = %71, %65, %54, %50
  %73 = phi %struct.lua_TValue* [ %46, %65 ], [ %46, %54 ], [ %.pre, %71 ], [ %46, %50 ]
  %74 = getelementptr inbounds %struct.lua_TValue* %73, i64 -1
  store %struct.lua_TValue* %74, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_getctx(%struct.lua_State* nocapture readonly %L, i32* %ctx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 5
  %4 = load i8* %3, align 1, !tbaa !46
  %5 = and i8 %4, 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

; <label>:7                                       ; preds = %0
  %8 = icmp eq i32* %ctx, null
  br i1 %8, label %12, label %9

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 7, i32 0, i32 0
  %11 = load i32* %10, align 4, !tbaa !47
  store i32 %11, i32* %ctx, align 4, !tbaa !1
  br label %12

; <label>:12                                      ; preds = %9, %7
  %13 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 7, i32 0, i32 4
  %14 = load i8* %13, align 1, !tbaa !49
  %15 = zext i8 %14 to i32
  br label %16

; <label>:16                                      ; preds = %12, %0
  %.0 = phi i32 [ %15, %12 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @lua_callk(%struct.lua_State* %L, i32 %nargs, i32 %nresults, i32 %ctx, i32 (%struct.lua_State*)* %k) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = add nsw i32 %nargs, 1
  %4 = sext i32 %3 to i64
  %5 = sub i64 0, %4
  %6 = getelementptr inbounds %struct.lua_TValue* %2, i64 %5
  %7 = icmp eq i32 (%struct.lua_State*)* %k, null
  br i1 %7, label %17, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %10 = load i16* %9, align 2, !tbaa !50
  %11 = icmp eq i16 %10, 0
  br i1 %11, label %12, label %17

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %14 = load %struct.CallInfo** %13, align 8, !tbaa !5
  %15 = getelementptr inbounds %struct.CallInfo* %14, i64 0, i32 7, i32 0, i32 1
  store i32 (%struct.lua_State*)* %k, i32 (%struct.lua_State*)** %15, align 8, !tbaa !51
  %16 = getelementptr inbounds %struct.CallInfo* %14, i64 0, i32 7, i32 0, i32 0
  store i32 %ctx, i32* %16, align 4, !tbaa !47
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %6, i32 %nresults, i32 1) #3
  br label %18

; <label>:17                                      ; preds = %8, %0
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %6, i32 %nresults, i32 0) #3
  br label %18

; <label>:18                                      ; preds = %17, %12
  %19 = icmp eq i32 %nresults, -1
  br i1 %19, label %20, label %28

; <label>:20                                      ; preds = %18
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %22 = load %struct.CallInfo** %21, align 8, !tbaa !5
  %23 = getelementptr inbounds %struct.CallInfo* %22, i64 0, i32 1
  %24 = load %struct.lua_TValue** %23, align 8, !tbaa !14
  %25 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %26 = icmp ult %struct.lua_TValue* %24, %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %20
  store %struct.lua_TValue* %25, %struct.lua_TValue** %23, align 8, !tbaa !14
  br label %28

; <label>:28                                      ; preds = %27, %20, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_pcallk(%struct.lua_State* %L, i32 %nargs, i32 %nresults, i32 %errfunc, i32 %ctx, i32 (%struct.lua_State*)* %k) #0 {
  %c = alloca %struct.CallS, align 8
  %1 = icmp eq i32 %errfunc, 0
  br i1 %1, label %52, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %4 = load %struct.CallInfo** %3, align 8, !tbaa !5
  %5 = icmp sgt i32 %errfunc, 0
  br i1 %5, label %6, label %14

; <label>:6                                       ; preds = %2
  %7 = getelementptr inbounds %struct.CallInfo* %4, i64 0, i32 0
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !24
  %9 = sext i32 %errfunc to i64
  %10 = getelementptr inbounds %struct.lua_TValue* %8, i64 %9
  %11 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %12 = load %struct.lua_TValue** %11, align 8, !tbaa !12
  %13 = icmp ult %struct.lua_TValue* %10, %12
  %.luaO_nilobject_.i = select i1 %13, %struct.lua_TValue* %10, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:14                                      ; preds = %2
  %15 = icmp slt i32 %errfunc, -1000999
  br i1 %15, label %21, label %16

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %18 = load %struct.lua_TValue** %17, align 8, !tbaa !12
  %19 = sext i32 %errfunc to i64
  %20 = getelementptr inbounds %struct.lua_TValue* %18, i64 %19
  br label %index2addr.exit

; <label>:21                                      ; preds = %14
  %22 = icmp eq i32 %errfunc, -1001000
  br i1 %22, label %23, label %27

; <label>:23                                      ; preds = %21
  %24 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %25 = load %struct.global_State** %24, align 8, !tbaa !17
  %26 = getelementptr inbounds %struct.global_State* %25, i64 0, i32 7
  br label %index2addr.exit

; <label>:27                                      ; preds = %21
  %28 = sub nsw i32 -1001000, %errfunc
  %29 = getelementptr inbounds %struct.CallInfo* %4, i64 0, i32 0
  %30 = load %struct.lua_TValue** %29, align 8, !tbaa !24
  %31 = getelementptr inbounds %struct.lua_TValue* %30, i64 0, i32 1
  %32 = load i32* %31, align 4, !tbaa !15
  %33 = icmp eq i32 %32, 22
  br i1 %33, label %index2addr.exit, label %34

; <label>:34                                      ; preds = %27
  %35 = getelementptr inbounds %struct.lua_TValue* %30, i64 0, i32 0, i32 0
  %36 = load %union.GCObject** %35, align 8, !tbaa !25
  %37 = getelementptr inbounds %union.GCObject* %36, i64 0, i32 0, i32 3
  %38 = load i8* %37, align 1, !tbaa !26
  %39 = zext i8 %38 to i32
  %40 = icmp sgt i32 %28, %39
  br i1 %40, label %index2addr.exit, label %41

; <label>:41                                      ; preds = %34
  %42 = add nsw i32 %28, -1
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %union.GCObject* %36, i64 0, i32 0, i32 6
  %45 = bitcast %struct.CallInfo** %44 to [1 x %struct.lua_TValue]*
  %46 = getelementptr inbounds [1 x %struct.lua_TValue]* %45, i64 0, i64 %43
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %41, %34, %27, %23, %16, %6
  %.0.i = phi %struct.lua_TValue* [ %26, %23 ], [ %20, %16 ], [ %.luaO_nilobject_.i, %6 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %27 ], [ %46, %41 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %34 ]
  %47 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !13
  %49 = ptrtoint %struct.lua_TValue* %.0.i to i64
  %50 = ptrtoint %struct.lua_TValue* %48 to i64
  %51 = sub i64 %49, %50
  br label %52

; <label>:52                                      ; preds = %index2addr.exit, %0
  %func.0 = phi i64 [ %51, %index2addr.exit ], [ 0, %0 ]
  %53 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %54 = load %struct.lua_TValue** %53, align 8, !tbaa !12
  %55 = add nsw i32 %nargs, 1
  %56 = sext i32 %55 to i64
  %57 = sub i64 0, %56
  %58 = getelementptr inbounds %struct.lua_TValue* %54, i64 %57
  %59 = getelementptr inbounds %struct.CallS* %c, i64 0, i32 0
  store %struct.lua_TValue* %58, %struct.lua_TValue** %59, align 8, !tbaa !52
  %60 = icmp eq i32 (%struct.lua_State*)* %k, null
  br i1 %60, label %65, label %61

; <label>:61                                      ; preds = %52
  %62 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %63 = load i16* %62, align 2, !tbaa !50
  %64 = icmp eq i16 %63, 0
  br i1 %64, label %74, label %65

; <label>:65                                      ; preds = %61, %52
  %66 = getelementptr inbounds %struct.CallS* %c, i64 0, i32 1
  store i32 %nresults, i32* %66, align 8, !tbaa !54
  %67 = bitcast %struct.CallS* %c to i8*
  %68 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %69 = load %struct.lua_TValue** %68, align 8, !tbaa !13
  %70 = ptrtoint %struct.lua_TValue* %58 to i64
  %71 = ptrtoint %struct.lua_TValue* %69 to i64
  %72 = sub i64 %70, %71
  %73 = call i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* @f_call, i8* %67, i64 %72, i64 %func.0) #3
  br label %97

; <label>:74                                      ; preds = %61
  %75 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %76 = load %struct.CallInfo** %75, align 8, !tbaa !5
  %77 = getelementptr inbounds %struct.CallInfo* %76, i64 0, i32 7, i32 0, i32 1
  store i32 (%struct.lua_State*)* %k, i32 (%struct.lua_State*)** %77, align 8, !tbaa !51
  %78 = getelementptr inbounds %struct.CallInfo* %76, i64 0, i32 7, i32 0, i32 0
  store i32 %ctx, i32* %78, align 4, !tbaa !47
  %79 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %80 = load %struct.lua_TValue** %79, align 8, !tbaa !13
  %81 = ptrtoint %struct.lua_TValue* %58 to i64
  %82 = ptrtoint %struct.lua_TValue* %80 to i64
  %83 = sub i64 %81, %82
  %84 = getelementptr inbounds %struct.CallInfo* %76, i64 0, i32 6
  store i64 %83, i64* %84, align 8, !tbaa !55
  %85 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %86 = load i8* %85, align 1, !tbaa !56
  %87 = getelementptr inbounds %struct.CallInfo* %76, i64 0, i32 7, i32 0, i32 3
  store i8 %86, i8* %87, align 1, !tbaa !57
  %88 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 21
  %89 = load i64* %88, align 8, !tbaa !58
  %90 = getelementptr inbounds %struct.CallInfo* %76, i64 0, i32 7, i32 0, i32 2
  store i64 %89, i64* %90, align 8, !tbaa !59
  store i64 %func.0, i64* %88, align 8, !tbaa !58
  %91 = getelementptr inbounds %struct.CallInfo* %76, i64 0, i32 5
  %92 = load i8* %91, align 1, !tbaa !46
  %93 = or i8 %92, 16
  store i8 %93, i8* %91, align 1, !tbaa !46
  call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %58, i32 %nresults, i32 1) #3
  %94 = load i8* %91, align 1, !tbaa !46
  %95 = and i8 %94, -17
  store i8 %95, i8* %91, align 1, !tbaa !46
  %96 = load i64* %90, align 8, !tbaa !59
  store i64 %96, i64* %88, align 8, !tbaa !58
  br label %97

; <label>:97                                      ; preds = %74, %65
  %status.0 = phi i32 [ %73, %65 ], [ 0, %74 ]
  %98 = icmp eq i32 %nresults, -1
  br i1 %98, label %99, label %107

; <label>:99                                      ; preds = %97
  %100 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %101 = load %struct.CallInfo** %100, align 8, !tbaa !5
  %102 = getelementptr inbounds %struct.CallInfo* %101, i64 0, i32 1
  %103 = load %struct.lua_TValue** %102, align 8, !tbaa !14
  %104 = load %struct.lua_TValue** %53, align 8, !tbaa !12
  %105 = icmp ult %struct.lua_TValue* %103, %104
  br i1 %105, label %106, label %107

; <label>:106                                     ; preds = %99
  store %struct.lua_TValue* %104, %struct.lua_TValue** %102, align 8, !tbaa !14
  br label %107

; <label>:107                                     ; preds = %106, %99, %97
  ret i32 %status.0
}

; Function Attrs: nounwind ssp uwtable
define internal void @f_call(%struct.lua_State* %L, i8* nocapture readonly %ud) #0 {
  %1 = bitcast i8* %ud to %struct.lua_TValue**
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !52
  %3 = getelementptr inbounds i8* %ud, i64 8
  %4 = bitcast i8* %3 to i32*
  %5 = load i32* %4, align 4, !tbaa !54
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %2, i32 %5, i32 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* %data, i8* %chunkname, i8* %mode) #0 {
  %z = alloca %struct.Zio, align 8
  %1 = bitcast %struct.Zio* %z to i8*
  call void @llvm.lifetime.start(i64 40, i8* %1) #3
  %2 = icmp eq i8* %chunkname, null
  %.chunkname = select i1 %2, i8* getelementptr inbounds ([2 x i8]* @.str, i64 0, i64 0), i8* %chunkname
  call void @luaZ_init(%struct.lua_State* %L, %struct.Zio* %z, i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* %data) #3
  %3 = call i32 @luaD_protectedparser(%struct.lua_State* %L, %struct.Zio* %z, i8* %.chunkname, i8* %mode) #3
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %50

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %7 = load %struct.lua_TValue** %6, align 8, !tbaa !12
  %8 = getelementptr inbounds %struct.lua_TValue* %7, i64 -1, i32 0, i32 0
  %9 = load %union.GCObject** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %union.GCObject* %9, i64 0, i32 0, i32 3
  %11 = load i8* %10, align 1, !tbaa !60
  %12 = icmp eq i8 %11, 1
  br i1 %12, label %13, label %50

; <label>:13                                      ; preds = %5
  %14 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %15 = load %struct.global_State** %14, align 8, !tbaa !17
  %16 = getelementptr inbounds %struct.global_State* %15, i64 0, i32 7, i32 0, i32 0
  %17 = load %union.GCObject** %16, align 8, !tbaa !25
  %18 = bitcast %union.GCObject* %17 to %struct.Table*
  %19 = call %struct.lua_TValue* @luaH_getint(%struct.Table* %18, i32 2) #3
  %20 = getelementptr inbounds %union.GCObject* %9, i64 0, i32 0, i32 6
  %21 = load %struct.CallInfo** %20, align 8
  %22 = getelementptr inbounds %struct.CallInfo* %21, i64 0, i32 2
  %23 = load %struct.CallInfo** %22, align 8
  %24 = bitcast %struct.lua_TValue* %19 to i64*
  %25 = load i64* %24, align 8
  %26 = getelementptr inbounds %struct.CallInfo* %23, i64 0, i32 0
  %.c = inttoptr i64 %25 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c, %struct.lua_TValue** %26, align 8
  %27 = getelementptr inbounds %struct.lua_TValue* %19, i64 0, i32 1
  %28 = load i32* %27, align 4, !tbaa !15
  %29 = getelementptr inbounds %struct.CallInfo* %23, i64 0, i32 1
  %30 = bitcast %struct.lua_TValue** %29 to i32*
  store i32 %28, i32* %30, align 4, !tbaa !15
  %31 = load i32* %27, align 4, !tbaa !15
  %32 = and i32 %31, 64
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %50, label %34

; <label>:34                                      ; preds = %13
  %35 = getelementptr inbounds %struct.lua_TValue* %19, i64 0, i32 0, i32 0
  %36 = load %union.GCObject** %35, align 8, !tbaa !25
  %37 = getelementptr inbounds %union.GCObject* %36, i64 0, i32 0, i32 2
  %38 = load i8* %37, align 1, !tbaa !28
  %39 = and i8 %38, 3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

; <label>:41                                      ; preds = %34
  %42 = load %struct.CallInfo** %20, align 8
  %43 = bitcast %struct.CallInfo* %42 to %struct.GCheader*
  %44 = getelementptr inbounds %struct.GCheader* %43, i64 0, i32 2
  %45 = load i8* %44, align 1, !tbaa !28
  %46 = and i8 %45, 4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

; <label>:48                                      ; preds = %41
  %49 = bitcast %struct.CallInfo* %42 to %union.GCObject*
  call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %49, %union.GCObject* %36) #3
  br label %50

; <label>:50                                      ; preds = %48, %41, %34, %13, %5, %0
  call void @llvm.lifetime.end(i64 40, i8* %1) #3
  ret i32 %3
}

; Function Attrs: nounwind
declare void @llvm.lifetime.start(i64, i8* nocapture) #3

; Function Attrs: nounwind
declare void @llvm.lifetime.end(i64, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define i32 @lua_dump(%struct.lua_State* %L, i32 (%struct.lua_State*, i8*, i64, i8*)* %writer, i8* %data) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_TValue* %2, i64 -1, i32 1
  %4 = load i32* %3, align 4, !tbaa !15
  %5 = icmp eq i32 %4, 70
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.lua_TValue* %2, i64 -1, i32 0, i32 0
  %8 = load %union.GCObject** %7, align 8, !tbaa !25
  %9 = getelementptr inbounds %union.GCObject* %8, i64 0, i32 0, i32 5
  %10 = load %struct.global_State** %9, align 8
  %11 = bitcast %struct.global_State* %10 to %struct.Proto*
  %12 = tail call i32 @luaU_dump(%struct.lua_State* %L, %struct.Proto* %11, i32 (%struct.lua_State*, i8*, i64, i8*)* %writer, i8* %data, i32 0) #3
  br label %13

; <label>:13                                      ; preds = %6, %0
  %status.0 = phi i32 [ %12, %6 ], [ 1, %0 ]
  ret i32 %status.0
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_status(%struct.lua_State* nocapture readonly %L) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 3
  %2 = load i8* %1, align 1, !tbaa !62
  %3 = zext i8 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_gc(%struct.lua_State* %L, i32 %what, i32 %data) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  switch i32 %what, label %62 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %8
    i32 4, label %16
    i32 5, label %23
    i32 6, label %47
    i32 8, label %50
    i32 7, label %53
    i32 9, label %56
    i32 10, label %60
    i32 11, label %61
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  store i8 0, i8* %4, align 1, !tbaa !63
  br label %62

; <label>:5                                       ; preds = %0
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 0) #3
  %6 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  store i8 1, i8* %6, align 1, !tbaa !63
  br label %62

; <label>:7                                       ; preds = %0
  tail call void @luaC_fullgc(%struct.lua_State* %L, i32 0) #3
  br label %62

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %10 = load i64* %9, align 8, !tbaa !64
  %11 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %12 = load i64* %11, align 8, !tbaa !33
  %13 = add i64 %12, %10
  %14 = lshr i64 %13, 10
  %15 = trunc i64 %14 to i32
  br label %62

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %18 = load i64* %17, align 8, !tbaa !64
  %19 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %20 = load i64* %19, align 8, !tbaa !33
  %21 = add i64 %20, %18
  %.tr = trunc i64 %21 to i32
  %22 = and i32 %.tr, 1023
  br label %62

; <label>:23                                      ; preds = %0
  %24 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 11
  %25 = load i8* %24, align 1, !tbaa !65
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %27, label %32

; <label>:27                                      ; preds = %23
  %28 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 5
  %29 = load i64* %28, align 8, !tbaa !66
  %30 = icmp eq i64 %29, 0
  %31 = zext i1 %30 to i32
  tail call void @luaC_forcestep(%struct.lua_State* %L) #3
  br label %62

; <label>:32                                      ; preds = %23
  %33 = sext i32 %data to i64
  %34 = shl nsw i64 %33, 10
  %35 = add i64 %34, -2400
  %36 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  %37 = load i8* %36, align 1, !tbaa !63
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

; <label>:39                                      ; preds = %32
  %40 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %41 = load i64* %40, align 8, !tbaa !33
  %42 = add i64 %41, %35
  br label %43

; <label>:43                                      ; preds = %39, %32
  %debt.0 = phi i64 [ %42, %39 ], [ %35, %32 ]
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 %debt.0) #3
  tail call void @luaC_forcestep(%struct.lua_State* %L) #3
  %44 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %45 = load i8* %44, align 1, !tbaa !67
  %46 = icmp eq i8 %45, 5
  %. = zext i1 %46 to i32
  ret i32 %.

; <label>:47                                      ; preds = %0
  %48 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 26
  %49 = load i32* %48, align 4, !tbaa !68
  store i32 %data, i32* %48, align 4, !tbaa !68
  br label %62

; <label>:50                                      ; preds = %0
  %51 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 27
  %52 = load i32* %51, align 4, !tbaa !69
  store i32 %data, i32* %51, align 4, !tbaa !69
  br label %62

; <label>:53                                      ; preds = %0
  %54 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 28
  %55 = load i32* %54, align 4, !tbaa !70
  store i32 %data, i32* %54, align 4, !tbaa !70
  br label %62

; <label>:56                                      ; preds = %0
  %57 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  %58 = load i8* %57, align 1, !tbaa !63
  %59 = zext i8 %58 to i32
  br label %62

; <label>:60                                      ; preds = %0
  tail call void @luaC_changemode(%struct.lua_State* %L, i32 2) #3
  br label %62

; <label>:61                                      ; preds = %0
  tail call void @luaC_changemode(%struct.lua_State* %L, i32 0) #3
  br label %62

; <label>:62                                      ; preds = %61, %60, %56, %53, %50, %47, %27, %16, %8, %7, %5, %3, %0
  %res.0 = phi i32 [ 0, %61 ], [ 0, %60 ], [ %59, %56 ], [ %55, %53 ], [ %52, %50 ], [ %49, %47 ], [ %31, %27 ], [ %22, %16 ], [ %15, %8 ], [ 0, %7 ], [ 0, %5 ], [ 0, %3 ], [ -1, %0 ]
  ret i32 %res.0
}

; Function Attrs: noreturn nounwind ssp uwtable
define i32 @lua_error(%struct.lua_State* %L) #4 {
  tail call void @luaG_errormsg(%struct.lua_State* %L) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_next(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %46 = load %union.GCObject** %45, align 8, !tbaa !25
  %47 = bitcast %union.GCObject* %46 to %struct.Table*
  %48 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %49 = load %struct.lua_TValue** %48, align 8, !tbaa !12
  %50 = getelementptr inbounds %struct.lua_TValue* %49, i64 -1
  %51 = tail call i32 @luaH_next(%struct.lua_State* %L, %struct.Table* %47, %struct.lua_TValue* %50) #3
  %52 = icmp eq i32 %51, 0
  %53 = load %struct.lua_TValue** %48, align 8, !tbaa !12
  %54 = getelementptr inbounds %struct.lua_TValue* %53, i64 -1
  %55 = getelementptr inbounds %struct.lua_TValue* %53, i64 1
  %storemerge = select i1 %52, %struct.lua_TValue* %54, %struct.lua_TValue* %55
  store %struct.lua_TValue* %storemerge, %struct.lua_TValue** %48, align 8, !tbaa !12
  ret i32 %51
}

; Function Attrs: nounwind ssp uwtable
define void @lua_concat(%struct.lua_State* %L, i32 %n) #0 {
  %1 = icmp sgt i32 %n, 1
  br i1 %1, label %2, label %10

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %4 = load %struct.global_State** %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.global_State* %4, i64 0, i32 3
  %6 = load i64* %5, align 8, !tbaa !33
  %7 = icmp sgt i64 %6, 0
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %2
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %9

; <label>:9                                       ; preds = %8, %2
  tail call void bitcast (void (%struct.lua_State.228*, i32)* @luaV_concat to void (%struct.lua_State*, i32)*)(%struct.lua_State* %L, i32 %n) #3
  br label %25

; <label>:10                                      ; preds = %0
  %11 = icmp eq i32 %n, 0
  br i1 %11, label %12, label %25

; <label>:12                                      ; preds = %10
  %13 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %14 = load %struct.lua_TValue** %13, align 8, !tbaa !12
  %15 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString* (%struct.lua_State*, i8*, i64)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), i64 0) #3
  %16 = bitcast %union.TString* %15 to %union.GCObject*
  %17 = getelementptr inbounds %struct.lua_TValue* %14, i64 0, i32 0, i32 0
  store %union.GCObject* %16, %union.GCObject** %17, align 8, !tbaa !25
  %18 = getelementptr inbounds %union.TString* %15, i64 0, i32 0, i32 1
  %19 = load i8* %18, align 1, !tbaa !38
  %20 = zext i8 %19 to i32
  %21 = or i32 %20, 64
  %22 = getelementptr inbounds %struct.lua_TValue* %14, i64 0, i32 1
  store i32 %21, i32* %22, align 4, !tbaa !15
  %23 = load %struct.lua_TValue** %13, align 8, !tbaa !12
  %24 = getelementptr inbounds %struct.lua_TValue* %23, i64 1
  store %struct.lua_TValue* %24, %struct.lua_TValue** %13, align 8, !tbaa !12
  br label %25

; <label>:25                                      ; preds = %12, %10, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @lua_len(%struct.lua_State* %L, i32 %idx) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %idx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %idx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %idx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %idx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %idx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %idx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_objlen to void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %46, %struct.lua_TValue* %.0.i) #3
  %47 = load %struct.lua_TValue** %45, align 8, !tbaa !12
  %48 = getelementptr inbounds %struct.lua_TValue* %47, i64 1
  store %struct.lua_TValue* %48, %struct.lua_TValue** %45, align 8, !tbaa !12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* (i8*, i8*, i64, i64)* @lua_getallocf(%struct.lua_State* nocapture readonly %L, i8** %ud) #0 {
  %1 = icmp eq i8** %ud, null
  %.pre = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  br i1 %1, label %._crit_edge, label %2

; <label>:2                                       ; preds = %0
  %3 = load %struct.global_State** %.pre, align 8, !tbaa !17
  %4 = getelementptr inbounds %struct.global_State* %3, i64 0, i32 1
  %5 = load i8** %4, align 8, !tbaa !71
  store i8* %5, i8** %ud, align 8, !tbaa !25
  br label %._crit_edge

._crit_edge:                                      ; preds = %2, %0
  %6 = load %struct.global_State** %.pre, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.global_State* %6, i64 0, i32 0
  %8 = load i8* (i8*, i8*, i64, i64)** %7, align 8, !tbaa !72
  ret i8* (i8*, i8*, i64, i64)* %8
}

; Function Attrs: nounwind ssp uwtable
define void @lua_setallocf(%struct.lua_State* nocapture readonly %L, i8* (i8*, i8*, i64, i64)* %f, i8* %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 1
  store i8* %ud, i8** %3, align 8, !tbaa !71
  %4 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 0
  store i8* (i8*, i8*, i64, i64)* %f, i8* (i8*, i8*, i64, i64)** %4, align 8, !tbaa !72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_newuserdata(%struct.lua_State* %L, i64 %size) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %4 = load i64* %3, align 8, !tbaa !33
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @luaC_step(%struct.lua_State* %L) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call %union.Udata* bitcast (%union.Udata.312* (%struct.lua_State.228*, i64, %struct.Table.222*)* @luaS_newudata to %union.Udata* (%struct.lua_State*, i64, %struct.Table*)*)(%struct.lua_State* %L, i64 %size, %struct.Table* null) #3
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = bitcast %union.Udata* %8 to %union.GCObject*
  %12 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 0, i32 0
  store %union.GCObject* %11, %union.GCObject** %12, align 8, !tbaa !25
  %13 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 1
  store i32 71, i32* %13, align 4, !tbaa !15
  %14 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %15 = getelementptr inbounds %struct.lua_TValue* %14, i64 1
  store %struct.lua_TValue* %15, %struct.lua_TValue** %9, align 8, !tbaa !12
  %16 = getelementptr inbounds %union.Udata* %8, i64 1
  %17 = bitcast %union.Udata* %16 to i8*
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_getupvalue(%struct.lua_State* nocapture %L, i32 %funcindex, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %funcindex, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %funcindex to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %funcindex, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %funcindex to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %funcindex, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %funcindex
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 63
  switch i32 %47, label %aux_upvalue.exit.thread [
    i32 38, label %48
    i32 6, label %63
  ]

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = icmp sgt i32 %n, 0
  br i1 %51, label %52, label %aux_upvalue.exit.thread

; <label>:52                                      ; preds = %48
  %53 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 3
  %54 = load i8* %53, align 1, !tbaa !26
  %55 = zext i8 %54 to i32
  %56 = icmp slt i32 %55, %n
  br i1 %56, label %aux_upvalue.exit.thread, label %57

; <label>:57                                      ; preds = %52
  %58 = add nsw i32 %n, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 6
  %61 = bitcast %struct.CallInfo** %60 to [1 x %struct.lua_TValue]*
  %62 = getelementptr inbounds [1 x %struct.lua_TValue]* %61, i64 0, i64 %59
  br label %aux_upvalue.exit.thread4

; <label>:63                                      ; preds = %index2addr.exit
  %64 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %65 = load %union.GCObject** %64, align 8, !tbaa !25
  %66 = getelementptr inbounds %union.GCObject* %65, i64 0, i32 0, i32 5
  %67 = load %struct.global_State** %66, align 8
  %68 = icmp sgt i32 %n, 0
  br i1 %68, label %69, label %aux_upvalue.exit.thread

; <label>:69                                      ; preds = %63
  %70 = getelementptr inbounds %struct.global_State* %67, i64 0, i32 8
  %71 = load i32* %70, align 4, !tbaa !73
  %72 = icmp slt i32 %71, %n
  br i1 %72, label %aux_upvalue.exit.thread, label %73

; <label>:73                                      ; preds = %69
  %74 = add nsw i32 %n, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %union.GCObject* %65, i64 0, i32 0, i32 6
  %77 = bitcast %struct.CallInfo** %76 to [1 x %struct.UpVal*]*
  %78 = getelementptr inbounds [1 x %struct.UpVal*]* %77, i64 0, i64 %75
  %79 = load %struct.UpVal** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds %struct.UpVal* %79, i64 0, i32 3
  %81 = load %struct.lua_TValue** %80, align 8, !tbaa !75
  %82 = getelementptr inbounds %struct.global_State* %67, i64 0, i32 6, i32 1
  %83 = bitcast i32* %82 to %struct.Upvaldesc**
  %84 = load %struct.Upvaldesc** %83, align 8, !tbaa !76
  %85 = getelementptr inbounds %struct.Upvaldesc* %84, i64 %75, i32 0
  %86 = load %union.TString** %85, align 8, !tbaa !77
  %87 = icmp eq %union.TString* %86, null
  br i1 %87, label %aux_upvalue.exit.thread4, label %aux_upvalue.exit

aux_upvalue.exit:                                 ; preds = %73
  %88 = getelementptr inbounds %union.TString* %86, i64 1
  %89 = bitcast %union.TString* %88 to i8*
  br label %aux_upvalue.exit.thread4

aux_upvalue.exit.thread4:                         ; preds = %aux_upvalue.exit, %73, %57
  %.0.i15 = phi i8* [ %89, %aux_upvalue.exit ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %57 ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %73 ]
  %90 = phi %struct.lua_TValue* [ %81, %aux_upvalue.exit ], [ %62, %57 ], [ %81, %73 ]
  %91 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %92 = load %struct.lua_TValue** %91, align 8, !tbaa !12
  %93 = bitcast %struct.lua_TValue* %90 to i64*
  %94 = load i64* %93, align 8
  %95 = getelementptr inbounds %struct.lua_TValue* %92, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %94 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %95, align 8
  %96 = getelementptr inbounds %struct.lua_TValue* %90, i64 0, i32 1
  %97 = load i32* %96, align 4, !tbaa !15
  %98 = getelementptr inbounds %struct.lua_TValue* %92, i64 0, i32 1
  store i32 %97, i32* %98, align 4, !tbaa !15
  %99 = load %struct.lua_TValue** %91, align 8, !tbaa !12
  %100 = getelementptr inbounds %struct.lua_TValue* %99, i64 1
  store %struct.lua_TValue* %100, %struct.lua_TValue** %91, align 8, !tbaa !12
  br label %aux_upvalue.exit.thread

aux_upvalue.exit.thread:                          ; preds = %aux_upvalue.exit.thread4, %69, %63, %52, %48, %index2addr.exit
  %.0.i12 = phi i8* [ %.0.i15, %aux_upvalue.exit.thread4 ], [ null, %52 ], [ null, %48 ], [ null, %69 ], [ null, %63 ], [ null, %index2addr.exit ]
  ret i8* %.0.i12
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_setupvalue(%struct.lua_State* %L, i32 %funcindex, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %funcindex, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %funcindex to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %funcindex, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %funcindex to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %funcindex, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %funcindex
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 63
  switch i32 %47, label %aux_upvalue.exit.thread [
    i32 38, label %48
    i32 6, label %63
  ]

; <label>:48                                      ; preds = %index2addr.exit
  %49 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = icmp sgt i32 %n, 0
  br i1 %51, label %52, label %aux_upvalue.exit.thread

; <label>:52                                      ; preds = %48
  %53 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 3
  %54 = load i8* %53, align 1, !tbaa !26
  %55 = zext i8 %54 to i32
  %56 = icmp slt i32 %55, %n
  br i1 %56, label %aux_upvalue.exit.thread, label %57

; <label>:57                                      ; preds = %52
  %58 = add nsw i32 %n, -1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 6
  %61 = bitcast %struct.CallInfo** %60 to [1 x %struct.lua_TValue]*
  %62 = getelementptr inbounds [1 x %struct.lua_TValue]* %61, i64 0, i64 %59
  br label %aux_upvalue.exit.thread5

; <label>:63                                      ; preds = %index2addr.exit
  %64 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %65 = load %union.GCObject** %64, align 8, !tbaa !25
  %66 = getelementptr inbounds %union.GCObject* %65, i64 0, i32 0, i32 5
  %67 = load %struct.global_State** %66, align 8
  %68 = icmp sgt i32 %n, 0
  br i1 %68, label %69, label %aux_upvalue.exit.thread

; <label>:69                                      ; preds = %63
  %70 = getelementptr inbounds %struct.global_State* %67, i64 0, i32 8
  %71 = load i32* %70, align 4, !tbaa !73
  %72 = icmp slt i32 %71, %n
  br i1 %72, label %aux_upvalue.exit.thread, label %73

; <label>:73                                      ; preds = %69
  %74 = add nsw i32 %n, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds %union.GCObject* %65, i64 0, i32 0, i32 6
  %77 = bitcast %struct.CallInfo** %76 to [1 x %struct.UpVal*]*
  %78 = getelementptr inbounds [1 x %struct.UpVal*]* %77, i64 0, i64 %75
  %79 = load %struct.UpVal** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds %struct.UpVal* %79, i64 0, i32 3
  %81 = load %struct.lua_TValue** %80, align 8, !tbaa !75
  %82 = bitcast %struct.UpVal* %79 to %union.GCObject*
  %83 = getelementptr inbounds %struct.global_State* %67, i64 0, i32 6, i32 1
  %84 = bitcast i32* %83 to %struct.Upvaldesc**
  %85 = load %struct.Upvaldesc** %84, align 8, !tbaa !76
  %86 = getelementptr inbounds %struct.Upvaldesc* %85, i64 %75, i32 0
  %87 = load %union.TString** %86, align 8, !tbaa !77
  %88 = icmp eq %union.TString* %87, null
  br i1 %88, label %aux_upvalue.exit.thread5, label %aux_upvalue.exit

aux_upvalue.exit:                                 ; preds = %73
  %89 = getelementptr inbounds %union.TString* %87, i64 1
  %90 = bitcast %union.TString* %89 to i8*
  br label %aux_upvalue.exit.thread5

aux_upvalue.exit.thread5:                         ; preds = %aux_upvalue.exit, %73, %57
  %.0.i16 = phi i8* [ %90, %aux_upvalue.exit ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %57 ], [ getelementptr inbounds ([1 x i8]* @.str1, i64 0, i64 0), %73 ]
  %91 = phi %union.GCObject* [ %82, %aux_upvalue.exit ], [ %50, %57 ], [ %82, %73 ]
  %92 = phi %struct.lua_TValue* [ %81, %aux_upvalue.exit ], [ %62, %57 ], [ %81, %73 ]
  %93 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %94 = load %struct.lua_TValue** %93, align 8, !tbaa !12
  %95 = getelementptr inbounds %struct.lua_TValue* %94, i64 -1
  store %struct.lua_TValue* %95, %struct.lua_TValue** %93, align 8, !tbaa !12
  %96 = bitcast %struct.lua_TValue* %95 to i64*
  %97 = load i64* %96, align 8
  %98 = getelementptr inbounds %struct.lua_TValue* %92, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %97 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %98, align 8
  %99 = getelementptr inbounds %struct.lua_TValue* %94, i64 -1, i32 1
  %100 = load i32* %99, align 4, !tbaa !15
  %101 = getelementptr inbounds %struct.lua_TValue* %92, i64 0, i32 1
  store i32 %100, i32* %101, align 4, !tbaa !15
  %102 = load %struct.lua_TValue** %93, align 8, !tbaa !12
  %103 = getelementptr inbounds %struct.lua_TValue* %102, i64 0, i32 1
  %104 = load i32* %103, align 4, !tbaa !15
  %105 = and i32 %104, 64
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %aux_upvalue.exit.thread, label %107

; <label>:107                                     ; preds = %aux_upvalue.exit.thread5
  %108 = getelementptr inbounds %struct.lua_TValue* %102, i64 0, i32 0, i32 0
  %109 = load %union.GCObject** %108, align 8, !tbaa !25
  %110 = getelementptr inbounds %union.GCObject* %109, i64 0, i32 0, i32 2
  %111 = load i8* %110, align 1, !tbaa !28
  %112 = and i8 %111, 3
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %aux_upvalue.exit.thread, label %114

; <label>:114                                     ; preds = %107
  %115 = getelementptr inbounds %union.GCObject* %91, i64 0, i32 0, i32 2
  %116 = load i8* %115, align 1, !tbaa !28
  %117 = and i8 %116, 4
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %aux_upvalue.exit.thread, label %119

; <label>:119                                     ; preds = %114
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %91, %union.GCObject* %109) #3
  br label %aux_upvalue.exit.thread

aux_upvalue.exit.thread:                          ; preds = %119, %114, %107, %aux_upvalue.exit.thread5, %69, %63, %52, %48, %index2addr.exit
  %.0.i12 = phi i8* [ %.0.i16, %114 ], [ %.0.i16, %107 ], [ %.0.i16, %aux_upvalue.exit.thread5 ], [ %.0.i16, %119 ], [ null, %52 ], [ null, %48 ], [ null, %69 ], [ null, %63 ], [ null, %index2addr.exit ]
  ret i8* %.0.i12
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @lua_upvalueid(%struct.lua_State* nocapture readonly %L, i32 %fidx, i32 %n) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %fidx, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %fidx to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %index2addr.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %fidx, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %fidx to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %index2addr.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %fidx, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %index2addr.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %fidx
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %index2addr.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %index2addr.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %index2addr.exit

index2addr.exit:                                  ; preds = %39, %32, %25, %21, %14, %4
  %.0.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  %46 = load i32* %45, align 4, !tbaa !15
  %47 = and i32 %46, 63
  switch i32 %47, label %108 [
    i32 6, label %48
    i32 38, label %99
  ]

; <label>:48                                      ; preds = %index2addr.exit
  br i1 %3, label %49, label %57

; <label>:49                                      ; preds = %48
  %50 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %51 = load %struct.lua_TValue** %50, align 8, !tbaa !24
  %52 = sext i32 %fidx to i64
  %53 = getelementptr inbounds %struct.lua_TValue* %51, i64 %52
  %54 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %55 = load %struct.lua_TValue** %54, align 8, !tbaa !12
  %56 = icmp ult %struct.lua_TValue* %53, %55
  %.luaO_nilobject_.i.i = select i1 %56, %struct.lua_TValue* %53, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %getupvalref.exit

; <label>:57                                      ; preds = %48
  %58 = icmp slt i32 %fidx, -1000999
  br i1 %58, label %64, label %59

; <label>:59                                      ; preds = %57
  %60 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %61 = load %struct.lua_TValue** %60, align 8, !tbaa !12
  %62 = sext i32 %fidx to i64
  %63 = getelementptr inbounds %struct.lua_TValue* %61, i64 %62
  br label %getupvalref.exit

; <label>:64                                      ; preds = %57
  %65 = icmp eq i32 %fidx, -1001000
  br i1 %65, label %66, label %70

; <label>:66                                      ; preds = %64
  %67 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %68 = load %struct.global_State** %67, align 8, !tbaa !17
  %69 = getelementptr inbounds %struct.global_State* %68, i64 0, i32 7
  br label %getupvalref.exit

; <label>:70                                      ; preds = %64
  %71 = sub nsw i32 -1001000, %fidx
  %72 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %73 = load %struct.lua_TValue** %72, align 8, !tbaa !24
  %74 = getelementptr inbounds %struct.lua_TValue* %73, i64 0, i32 1
  %75 = load i32* %74, align 4, !tbaa !15
  %76 = icmp eq i32 %75, 22
  br i1 %76, label %getupvalref.exit, label %77

; <label>:77                                      ; preds = %70
  %78 = getelementptr inbounds %struct.lua_TValue* %73, i64 0, i32 0, i32 0
  %79 = load %union.GCObject** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds %union.GCObject* %79, i64 0, i32 0, i32 3
  %81 = load i8* %80, align 1, !tbaa !26
  %82 = zext i8 %81 to i32
  %83 = icmp sgt i32 %71, %82
  br i1 %83, label %getupvalref.exit, label %84

; <label>:84                                      ; preds = %77
  %85 = add nsw i32 %71, -1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %union.GCObject* %79, i64 0, i32 0, i32 6
  %88 = bitcast %struct.CallInfo** %87 to [1 x %struct.lua_TValue]*
  %89 = getelementptr inbounds [1 x %struct.lua_TValue]* %88, i64 0, i64 %86
  br label %getupvalref.exit

getupvalref.exit:                                 ; preds = %84, %77, %70, %66, %59, %49
  %.0.i.i = phi %struct.lua_TValue* [ %69, %66 ], [ %63, %59 ], [ %.luaO_nilobject_.i.i, %49 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %70 ], [ %89, %84 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %77 ]
  %90 = getelementptr inbounds %struct.lua_TValue* %.0.i.i, i64 0, i32 0, i32 0
  %91 = load %union.GCObject** %90, align 8, !tbaa !25
  %92 = add nsw i32 %n, -1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %union.GCObject* %91, i64 0, i32 0, i32 6
  %95 = bitcast %struct.CallInfo** %94 to [1 x %struct.UpVal*]*
  %96 = getelementptr inbounds [1 x %struct.UpVal*]* %95, i64 0, i64 %93
  %97 = load %struct.UpVal** %96, align 8, !tbaa !25
  %98 = bitcast %struct.UpVal* %97 to i8*
  br label %108

; <label>:99                                      ; preds = %index2addr.exit
  %100 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %101 = load %union.GCObject** %100, align 8, !tbaa !25
  %102 = add nsw i32 %n, -1
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %union.GCObject* %101, i64 0, i32 0, i32 6
  %105 = bitcast %struct.CallInfo** %104 to [1 x %struct.lua_TValue]*
  %106 = getelementptr inbounds [1 x %struct.lua_TValue]* %105, i64 0, i64 %103
  %107 = bitcast %struct.lua_TValue* %106 to i8*
  br label %108

; <label>:108                                     ; preds = %99, %getupvalref.exit, %index2addr.exit
  %.0 = phi i8* [ %107, %99 ], [ %98, %getupvalref.exit ], [ null, %index2addr.exit ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @lua_upvaluejoin(%struct.lua_State* %L, i32 %fidx1, i32 %n1, i32 %fidx2, i32 %n2) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = icmp sgt i32 %fidx1, 0
  br i1 %3, label %4, label %12

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !24
  %7 = sext i32 %fidx1 to i64
  %8 = getelementptr inbounds %struct.lua_TValue* %6, i64 %7
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !12
  %11 = icmp ult %struct.lua_TValue* %8, %10
  %.luaO_nilobject_.i.i = select i1 %11, %struct.lua_TValue* %8, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %getupvalref.exit

; <label>:12                                      ; preds = %0
  %13 = icmp slt i32 %fidx1, -1000999
  br i1 %13, label %19, label %14

; <label>:14                                      ; preds = %12
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !12
  %17 = sext i32 %fidx1 to i64
  %18 = getelementptr inbounds %struct.lua_TValue* %16, i64 %17
  br label %getupvalref.exit

; <label>:19                                      ; preds = %12
  %20 = icmp eq i32 %fidx1, -1001000
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %19
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %23 = load %struct.global_State** %22, align 8, !tbaa !17
  %24 = getelementptr inbounds %struct.global_State* %23, i64 0, i32 7
  br label %getupvalref.exit

; <label>:25                                      ; preds = %19
  %26 = sub nsw i32 -1001000, %fidx1
  %27 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %28 = load %struct.lua_TValue** %27, align 8, !tbaa !24
  %29 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !15
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %getupvalref.exit, label %32

; <label>:32                                      ; preds = %25
  %33 = getelementptr inbounds %struct.lua_TValue* %28, i64 0, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 3
  %36 = load i8* %35, align 1, !tbaa !26
  %37 = zext i8 %36 to i32
  %38 = icmp sgt i32 %26, %37
  br i1 %38, label %getupvalref.exit, label %39

; <label>:39                                      ; preds = %32
  %40 = add nsw i32 %26, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 6
  %43 = bitcast %struct.CallInfo** %42 to [1 x %struct.lua_TValue]*
  %44 = getelementptr inbounds [1 x %struct.lua_TValue]* %43, i64 0, i64 %41
  br label %getupvalref.exit

getupvalref.exit:                                 ; preds = %39, %32, %25, %21, %14, %4
  %.0.i.i = phi %struct.lua_TValue* [ %24, %21 ], [ %18, %14 ], [ %.luaO_nilobject_.i.i, %4 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %25 ], [ %44, %39 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %32 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %.0.i.i, i64 0, i32 0, i32 0
  %46 = load %union.GCObject** %45, align 8, !tbaa !25
  %47 = add nsw i32 %n1, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %union.GCObject* %46, i64 0, i32 0, i32 6
  %50 = bitcast %struct.CallInfo** %49 to [1 x %struct.UpVal*]*
  %51 = getelementptr inbounds [1 x %struct.UpVal*]* %50, i64 0, i64 %48
  %52 = icmp sgt i32 %fidx2, 0
  br i1 %52, label %53, label %61

; <label>:53                                      ; preds = %getupvalref.exit
  %54 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %55 = load %struct.lua_TValue** %54, align 8, !tbaa !24
  %56 = sext i32 %fidx2 to i64
  %57 = getelementptr inbounds %struct.lua_TValue* %55, i64 %56
  %58 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %59 = load %struct.lua_TValue** %58, align 8, !tbaa !12
  %60 = icmp ult %struct.lua_TValue* %57, %59
  %.luaO_nilobject_.i.i1 = select i1 %60, %struct.lua_TValue* %57, %struct.lua_TValue* bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br label %getupvalref.exit3

; <label>:61                                      ; preds = %getupvalref.exit
  %62 = icmp slt i32 %fidx2, -1000999
  br i1 %62, label %68, label %63

; <label>:63                                      ; preds = %61
  %64 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %65 = load %struct.lua_TValue** %64, align 8, !tbaa !12
  %66 = sext i32 %fidx2 to i64
  %67 = getelementptr inbounds %struct.lua_TValue* %65, i64 %66
  br label %getupvalref.exit3

; <label>:68                                      ; preds = %61
  %69 = icmp eq i32 %fidx2, -1001000
  br i1 %69, label %70, label %74

; <label>:70                                      ; preds = %68
  %71 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %72 = load %struct.global_State** %71, align 8, !tbaa !17
  %73 = getelementptr inbounds %struct.global_State* %72, i64 0, i32 7
  br label %getupvalref.exit3

; <label>:74                                      ; preds = %68
  %75 = sub nsw i32 -1001000, %fidx2
  %76 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %77 = load %struct.lua_TValue** %76, align 8, !tbaa !24
  %78 = getelementptr inbounds %struct.lua_TValue* %77, i64 0, i32 1
  %79 = load i32* %78, align 4, !tbaa !15
  %80 = icmp eq i32 %79, 22
  br i1 %80, label %getupvalref.exit3, label %81

; <label>:81                                      ; preds = %74
  %82 = getelementptr inbounds %struct.lua_TValue* %77, i64 0, i32 0, i32 0
  %83 = load %union.GCObject** %82, align 8, !tbaa !25
  %84 = getelementptr inbounds %union.GCObject* %83, i64 0, i32 0, i32 3
  %85 = load i8* %84, align 1, !tbaa !26
  %86 = zext i8 %85 to i32
  %87 = icmp sgt i32 %75, %86
  br i1 %87, label %getupvalref.exit3, label %88

; <label>:88                                      ; preds = %81
  %89 = add nsw i32 %75, -1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %union.GCObject* %83, i64 0, i32 0, i32 6
  %92 = bitcast %struct.CallInfo** %91 to [1 x %struct.lua_TValue]*
  %93 = getelementptr inbounds [1 x %struct.lua_TValue]* %92, i64 0, i64 %90
  br label %getupvalref.exit3

getupvalref.exit3:                                ; preds = %88, %81, %74, %70, %63, %53
  %.0.i.i2 = phi %struct.lua_TValue* [ %73, %70 ], [ %67, %63 ], [ %.luaO_nilobject_.i.i1, %53 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %74 ], [ %93, %88 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %81 ]
  %94 = getelementptr inbounds %struct.lua_TValue* %.0.i.i2, i64 0, i32 0, i32 0
  %95 = load %union.GCObject** %94, align 8, !tbaa !25
  %96 = add nsw i32 %n2, -1
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %union.GCObject* %95, i64 0, i32 0, i32 6
  %99 = bitcast %struct.CallInfo** %98 to [1 x %struct.UpVal*]*
  %100 = getelementptr inbounds [1 x %struct.UpVal*]* %99, i64 0, i64 %97
  %101 = load %struct.UpVal** %100, align 8, !tbaa !25
  store %struct.UpVal* %101, %struct.UpVal** %51, align 8, !tbaa !25
  %102 = load %struct.UpVal** %100, align 8, !tbaa !25
  %103 = bitcast %struct.UpVal* %102 to %union.GCObject*
  %104 = getelementptr inbounds %struct.UpVal* %102, i64 0, i32 2
  %105 = load i8* %104, align 1, !tbaa !28
  %106 = and i8 %105, 3
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %114, label %108

; <label>:108                                     ; preds = %getupvalref.exit3
  %109 = getelementptr inbounds %union.GCObject* %46, i64 0, i32 0, i32 2
  %110 = load i8* %109, align 1, !tbaa !28
  %111 = and i8 %110, 4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

; <label>:113                                     ; preds = %108
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %46, %union.GCObject* %103) #3
  br label %114

; <label>:114                                     ; preds = %113, %108, %getupvalref.exit3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_nil(%struct.FuncState* nocapture %fs, i32 %from, i32 %n) #0 {
  %1 = add nsw i32 %n, %from
  %2 = add nsw i32 %1, -1
  %3 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %4 = load i32* %3, align 4, !tbaa !79
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  %6 = load i32* %5, align 4, !tbaa !81
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %8, label %40

; <label>:8                                       ; preds = %0
  %9 = add nsw i32 %4, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %12 = load %struct.Proto.24** %11, align 8, !tbaa !82
  %13 = getelementptr inbounds %struct.Proto.24* %12, i64 0, i32 4
  %14 = load i32** %13, align 8, !tbaa !83
  %15 = getelementptr inbounds i32* %14, i64 %10
  %16 = load i32* %15, align 4, !tbaa !1
  %17 = and i32 %16, 63
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %19, label %40

; <label>:19                                      ; preds = %8
  %20 = lshr i32 %16, 6
  %21 = and i32 %20, 255
  %22 = lshr i32 %16, 23
  %23 = add nsw i32 %21, %22
  %24 = icmp sgt i32 %21, %from
  %25 = add nsw i32 %23, 1
  %26 = icmp slt i32 %25, %from
  %or.cond = or i1 %24, %26
  br i1 %or.cond, label %27, label %30

; <label>:27                                      ; preds = %19
  %28 = icmp slt i32 %21, %from
  %29 = icmp sgt i32 %21, %1
  %or.cond2 = or i1 %28, %29
  br i1 %or.cond2, label %40, label %30

; <label>:30                                      ; preds = %27, %19
  %31 = icmp slt i32 %21, %from
  %.from = select i1 %31, i32 %21, i32 %from
  %32 = icmp sgt i32 %23, %2
  %l.0 = select i1 %32, i32 %23, i32 %2
  %33 = and i32 %16, 8372287
  %34 = shl i32 %.from, 6
  %35 = and i32 %34, 16320
  %36 = sub nsw i32 %l.0, %.from
  %37 = shl i32 %36, 23
  %38 = or i32 %37, %35
  %39 = or i32 %38, %33
  store i32 %39, i32* %15, align 4, !tbaa !1
  br label %47

; <label>:40                                      ; preds = %27, %8, %0
  %41 = shl i32 %from, 6
  %42 = shl i32 %n, 23
  %43 = add i32 %42, -8388608
  %44 = or i32 %41, %43
  %45 = or i32 %44, 4
  %46 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %45) #3
  br label %47

; <label>:47                                      ; preds = %40, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_codeABC(%struct.FuncState* nocapture %fs, i32 %o, i32 %a, i32 %b, i32 %c) #0 {
  %1 = shl i32 %a, 6
  %2 = or i32 %1, %o
  %3 = shl i32 %b, 23
  %4 = or i32 %2, %3
  %5 = shl i32 %c, 14
  %6 = or i32 %4, %5
  %7 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %6)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_jump(%struct.FuncState* nocapture %fs) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %2 = load i32* %1, align 4, !tbaa !84
  store i32 -1, i32* %1, align 4, !tbaa !84
  %3 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 2147450903) #3
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %luaK_concat.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = icmp eq i32 %3, -1
  br i1 %6, label %luaK_concat.exit, label %.preheader.i

.preheader.i:                                     ; preds = %5
  %7 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %8 = load %struct.Proto.24** %7, align 8, !tbaa !82
  %9 = getelementptr inbounds %struct.Proto.24* %8, i64 0, i32 4
  %10 = load i32** %9, align 8, !tbaa !83
  br label %11

; <label>:11                                      ; preds = %getjump.exit.i, %.preheader.i
  %list.0.i = phi i32 [ %19, %getjump.exit.i ], [ %3, %.preheader.i ]
  %12 = sext i32 %list.0.i to i64
  %13 = getelementptr inbounds i32* %10, i64 %12
  %14 = load i32* %13, align 4, !tbaa !1
  %15 = lshr i32 %14, 14
  %16 = add nsw i32 %15, -131071
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %getjump.exit.thread.i, label %getjump.exit.i

getjump.exit.i:                                   ; preds = %11
  %18 = add nsw i32 %list.0.i, 1
  %19 = add nsw i32 %18, %16
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %getjump.exit.thread.i, label %11

getjump.exit.thread.i:                            ; preds = %getjump.exit.i, %11
  %.neg.i.i = xor i32 %list.0.i, -1
  %21 = add i32 %2, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %21, -1
  %neg.i.i = sub i32 0, %21
  %22 = select i1 %ispos.i.i, i32 %21, i32 %neg.i.i
  %23 = icmp sgt i32 %22, 131071
  br i1 %23, label %24, label %fixjump.exit.i

; <label>:24                                      ; preds = %getjump.exit.thread.i
  %25 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %26 = load %struct.LexState** %25, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %26, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %getjump.exit.thread.i
  %27 = and i32 %14, 16383
  %28 = shl i32 %21, 14
  %29 = add i32 %28, 2147467264
  %30 = or i32 %29, %27
  store i32 %30, i32* %13, align 4, !tbaa !1
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %fixjump.exit.i, %5, %0
  %31 = phi i32 [ %3, %0 ], [ %3, %fixjump.exit.i ], [ %2, %5 ]
  ret i32 %31
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_codeABx(%struct.FuncState* nocapture %fs, i32 %o, i32 %a, i32 %bc) #0 {
  %1 = shl i32 %a, 6
  %2 = or i32 %1, %o
  %3 = shl i32 %bc, 14
  %4 = or i32 %2, %3
  %5 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %4)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_concat(%struct.FuncState* nocapture readonly %fs, i32* nocapture %l1, i32 %l2) #0 {
  %1 = icmp eq i32 %l2, -1
  br i1 %1, label %30, label %2

; <label>:2                                       ; preds = %0
  %3 = load i32* %l1, align 4, !tbaa !1
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %9, label %.preheader

.preheader:                                       ; preds = %2
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %6 = load %struct.Proto.24** %5, align 8, !tbaa !82
  %7 = getelementptr inbounds %struct.Proto.24* %6, i64 0, i32 4
  %8 = load i32** %7, align 8, !tbaa !83
  br label %10

; <label>:9                                       ; preds = %2
  store i32 %l2, i32* %l1, align 4, !tbaa !1
  br label %30

; <label>:10                                      ; preds = %getjump.exit, %.preheader
  %list.0 = phi i32 [ %18, %getjump.exit ], [ %3, %.preheader ]
  %11 = sext i32 %list.0 to i64
  %12 = getelementptr inbounds i32* %8, i64 %11
  %13 = load i32* %12, align 4, !tbaa !1
  %14 = lshr i32 %13, 14
  %15 = add nsw i32 %14, -131071
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %getjump.exit.thread, label %getjump.exit

getjump.exit:                                     ; preds = %10
  %17 = add nsw i32 %list.0, 1
  %18 = add nsw i32 %17, %15
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %getjump.exit.thread, label %10

getjump.exit.thread:                              ; preds = %getjump.exit, %10
  %.neg.i = xor i32 %list.0, -1
  %20 = add i32 %.neg.i, %l2
  %ispos.i = icmp sgt i32 %20, -1
  %neg.i = sub i32 0, %20
  %21 = select i1 %ispos.i, i32 %20, i32 %neg.i
  %22 = icmp sgt i32 %21, 131071
  br i1 %22, label %23, label %fixjump.exit

; <label>:23                                      ; preds = %getjump.exit.thread
  %24 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %25 = load %struct.LexState** %24, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %25, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit:                                     ; preds = %getjump.exit.thread
  %26 = and i32 %13, 16383
  %27 = shl i32 %20, 14
  %28 = add i32 %27, 2147467264
  %29 = or i32 %26, %28
  store i32 %29, i32* %12, align 4, !tbaa !1
  br label %30

; <label>:30                                      ; preds = %fixjump.exit, %9, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_ret(%struct.FuncState* nocapture %fs, i32 %first, i32 %nret) #0 {
  %1 = shl i32 %first, 6
  %2 = shl i32 %nret, 23
  %3 = add i32 %2, 8388608
  %4 = or i32 %1, %3
  %5 = or i32 %4, 31
  %6 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %5) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_getlabel(%struct.FuncState* nocapture %fs) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %2 = load i32* %1, align 4, !tbaa !79
  %3 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %2, i32* %3, align 4, !tbaa !81
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_patchlist(%struct.FuncState* nocapture %fs, i32 %list, i32 %target) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %2 = load i32* %1, align 4, !tbaa !79
  %3 = icmp eq i32 %2, %target
  br i1 %3, label %4, label %36

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %target, i32* %5, align 4, !tbaa !81
  %6 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %7 = icmp eq i32 %list, -1
  br i1 %7, label %luaK_patchtohere.exit, label %8

; <label>:8                                       ; preds = %4
  %9 = load i32* %6, align 4, !tbaa !1
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %15, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %8
  %11 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %12 = load %struct.Proto.24** %11, align 8, !tbaa !82
  %13 = getelementptr inbounds %struct.Proto.24* %12, i64 0, i32 4
  %14 = load i32** %13, align 8, !tbaa !83
  br label %16

; <label>:15                                      ; preds = %8
  store i32 %list, i32* %6, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

; <label>:16                                      ; preds = %getjump.exit.i.i, %.preheader.i.i
  %list.0.i.i = phi i32 [ %24, %getjump.exit.i.i ], [ %9, %.preheader.i.i ]
  %17 = sext i32 %list.0.i.i to i64
  %18 = getelementptr inbounds i32* %14, i64 %17
  %19 = load i32* %18, align 4, !tbaa !1
  %20 = lshr i32 %19, 14
  %21 = add nsw i32 %20, -131071
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %getjump.exit.thread.i.i, label %getjump.exit.i.i

getjump.exit.i.i:                                 ; preds = %16
  %23 = add nsw i32 %list.0.i.i, 1
  %24 = add nsw i32 %23, %21
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %getjump.exit.thread.i.i, label %16

getjump.exit.thread.i.i:                          ; preds = %getjump.exit.i.i, %16
  %.neg.i.i.i = xor i32 %list.0.i.i, -1
  %26 = add i32 %.neg.i.i.i, %list
  %ispos.i.i.i = icmp sgt i32 %26, -1
  %neg.i.i.i = sub i32 0, %26
  %27 = select i1 %ispos.i.i.i, i32 %26, i32 %neg.i.i.i
  %28 = icmp sgt i32 %27, 131071
  br i1 %28, label %29, label %fixjump.exit.i.i

; <label>:29                                      ; preds = %getjump.exit.thread.i.i
  %30 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %31 = load %struct.LexState** %30, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %31, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i.i:                                 ; preds = %getjump.exit.thread.i.i
  %32 = and i32 %19, 16383
  %33 = shl i32 %26, 14
  %34 = add i32 %33, 2147467264
  %35 = or i32 %34, %32
  store i32 %35, i32* %18, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

; <label>:36                                      ; preds = %0
  %37 = icmp eq i32 %list, -1
  br i1 %37, label %luaK_patchtohere.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %36
  %38 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %.pre = load %struct.Proto.24** %38, align 8, !tbaa !82
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.24* %.pre, i64 0, i32 4
  %.pre8 = load i32** %.phi.trans.insert, align 8, !tbaa !83
  br label %39

; <label>:39                                      ; preds = %.backedge.i, %.lr.ph.i
  %.01.i = phi i32 [ %list, %.lr.ph.i ], [ %.0.i.i, %.backedge.i ]
  %40 = sext i32 %.01.i to i64
  %41 = getelementptr inbounds i32* %.pre8, i64 %40
  %42 = load i32* %41, align 4, !tbaa !1
  %43 = lshr i32 %42, 14
  %44 = add nsw i32 %43, -131071
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %getjump.exit.i, label %46

; <label>:46                                      ; preds = %39
  %47 = add nsw i32 %.01.i, 1
  %48 = add nsw i32 %47, %44
  br label %getjump.exit.i

getjump.exit.i:                                   ; preds = %46, %39
  %.0.i.i = phi i32 [ %48, %46 ], [ -1, %39 ]
  %49 = icmp sgt i32 %.01.i, 0
  br i1 %49, label %50, label %58

; <label>:50                                      ; preds = %getjump.exit.i
  %.sum.i.i = add i64 %40, -1
  %51 = getelementptr inbounds i32* %.pre8, i64 %.sum.i.i
  %52 = load i32* %51, align 4, !tbaa !1
  %53 = and i32 %52, 63
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %54
  %56 = load i8* %55, align 1, !tbaa !86
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %getjumpcontrol.exit.i, label %58

; <label>:58                                      ; preds = %50, %getjump.exit.i
  br label %getjumpcontrol.exit.i

getjumpcontrol.exit.i:                            ; preds = %58, %50
  %59 = phi i32 [ %42, %58 ], [ %52, %50 ]
  %.0.i.i5 = phi i32* [ %41, %58 ], [ %51, %50 ]
  %60 = and i32 %59, 63
  %61 = icmp eq i32 %60, 28
  br i1 %61, label %62, label %79

; <label>:62                                      ; preds = %getjumpcontrol.exit.i
  %63 = lshr i32 %59, 23
  %64 = shl nuw nsw i32 %63, 6
  %65 = and i32 %59, 8372224
  %66 = or i32 %65, %64
  %67 = or i32 %66, 27
  store i32 %67, i32* %.0.i.i5, align 4, !tbaa !1
  %.neg.i = xor i32 %.01.i, -1
  %68 = add i32 %.neg.i, %target
  %ispos.i = icmp sgt i32 %68, -1
  %neg.i = sub i32 0, %68
  %69 = select i1 %ispos.i, i32 %68, i32 %neg.i
  %70 = icmp sgt i32 %69, 131071
  br i1 %70, label %71, label %fixjump.exit

; <label>:71                                      ; preds = %62
  %72 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %73 = load %struct.LexState** %72, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %73, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit:                                     ; preds = %62
  %74 = load i32* %41, align 4, !tbaa !1
  %75 = and i32 %74, 16383
  %76 = shl i32 %68, 14
  %77 = add i32 %76, 2147467264
  %78 = or i32 %75, %77
  br label %.backedge.i

; <label>:79                                      ; preds = %getjumpcontrol.exit.i
  %.neg.i1 = xor i32 %.01.i, -1
  %80 = add i32 %.neg.i1, %target
  %ispos.i2 = icmp sgt i32 %80, -1
  %neg.i3 = sub i32 0, %80
  %81 = select i1 %ispos.i2, i32 %80, i32 %neg.i3
  %82 = icmp sgt i32 %81, 131071
  br i1 %82, label %83, label %fixjump.exit4

; <label>:83                                      ; preds = %79
  %84 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %85 = load %struct.LexState** %84, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %85, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit4:                                    ; preds = %79
  %86 = and i32 %42, 16383
  %87 = shl i32 %80, 14
  %88 = add i32 %87, 2147467264
  %89 = or i32 %86, %88
  br label %.backedge.i

.backedge.i:                                      ; preds = %fixjump.exit4, %fixjump.exit
  %storemerge = phi i32 [ %89, %fixjump.exit4 ], [ %78, %fixjump.exit ]
  store i32 %storemerge, i32* %41, align 4, !tbaa !1
  %90 = icmp eq i32 %.0.i.i, -1
  br i1 %90, label %luaK_patchtohere.exit, label %39

luaK_patchtohere.exit:                            ; preds = %.backedge.i, %36, %fixjump.exit.i.i, %15, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_patchtohere(%struct.FuncState* nocapture %fs, i32 %list) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %2 = load i32* %1, align 4, !tbaa !79
  %3 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %2, i32* %3, align 4, !tbaa !81
  %4 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %5 = icmp eq i32 %list, -1
  br i1 %5, label %luaK_concat.exit, label %6

; <label>:6                                       ; preds = %0
  %7 = load i32* %4, align 4, !tbaa !1
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %13, label %.preheader.i

.preheader.i:                                     ; preds = %6
  %9 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %10 = load %struct.Proto.24** %9, align 8, !tbaa !82
  %11 = getelementptr inbounds %struct.Proto.24* %10, i64 0, i32 4
  %12 = load i32** %11, align 8, !tbaa !83
  br label %14

; <label>:13                                      ; preds = %6
  store i32 %list, i32* %4, align 4, !tbaa !1
  br label %luaK_concat.exit

; <label>:14                                      ; preds = %getjump.exit.i, %.preheader.i
  %list.0.i = phi i32 [ %22, %getjump.exit.i ], [ %7, %.preheader.i ]
  %15 = sext i32 %list.0.i to i64
  %16 = getelementptr inbounds i32* %12, i64 %15
  %17 = load i32* %16, align 4, !tbaa !1
  %18 = lshr i32 %17, 14
  %19 = add nsw i32 %18, -131071
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %getjump.exit.thread.i, label %getjump.exit.i

getjump.exit.i:                                   ; preds = %14
  %21 = add nsw i32 %list.0.i, 1
  %22 = add nsw i32 %21, %19
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %getjump.exit.thread.i, label %14

getjump.exit.thread.i:                            ; preds = %getjump.exit.i, %14
  %.neg.i.i = xor i32 %list.0.i, -1
  %24 = add i32 %.neg.i.i, %list
  %ispos.i.i = icmp sgt i32 %24, -1
  %neg.i.i = sub i32 0, %24
  %25 = select i1 %ispos.i.i, i32 %24, i32 %neg.i.i
  %26 = icmp sgt i32 %25, 131071
  br i1 %26, label %27, label %fixjump.exit.i

; <label>:27                                      ; preds = %getjump.exit.thread.i
  %28 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %29 = load %struct.LexState** %28, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %29, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %getjump.exit.thread.i
  %30 = and i32 %17, 16383
  %31 = shl i32 %24, 14
  %32 = add i32 %31, 2147467264
  %33 = or i32 %32, %30
  store i32 %33, i32* %16, align 4, !tbaa !1
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %fixjump.exit.i, %13, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_patchclose(%struct.FuncState* nocapture readonly %fs, i32 %list, i32 %level) #0 {
  %1 = icmp eq i32 %list, -1
  br i1 %1, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %2 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %3 = load %struct.Proto.24** %2, align 8, !tbaa !82
  %4 = getelementptr inbounds %struct.Proto.24* %3, i64 0, i32 4
  %5 = load i32** %4, align 8, !tbaa !83
  %6 = shl i32 %level, 6
  %7 = add i32 %6, 64
  %8 = and i32 %7, 16320
  br label %9

; <label>:9                                       ; preds = %getjump.exit, %.lr.ph
  %.01 = phi i32 [ %list, %.lr.ph ], [ %19, %getjump.exit ]
  %10 = sext i32 %.01 to i64
  %11 = getelementptr inbounds i32* %5, i64 %10
  %12 = load i32* %11, align 4, !tbaa !1
  %13 = lshr i32 %12, 14
  %14 = add nsw i32 %13, -131071
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %getjump.exit.thread, label %getjump.exit

getjump.exit.thread:                              ; preds = %9
  %16 = and i32 %12, -16321
  %17 = or i32 %16, %8
  store i32 %17, i32* %11, align 4, !tbaa !1
  br label %._crit_edge

getjump.exit:                                     ; preds = %9
  %18 = add nsw i32 %.01, 1
  %19 = add nsw i32 %18, %14
  %20 = and i32 %12, -16321
  %21 = or i32 %20, %8
  store i32 %21, i32* %11, align 4, !tbaa !1
  %22 = icmp eq i32 %19, -1
  br i1 %22, label %._crit_edge, label %9

._crit_edge:                                      ; preds = %getjump.exit, %getjump.exit.thread, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_codek(%struct.FuncState* nocapture %fs, i32 %reg, i32 %k) #0 {
  %1 = icmp slt i32 %k, 262144
  %2 = shl i32 %reg, 6
  br i1 %1, label %3, label %8

; <label>:3                                       ; preds = %0
  %4 = shl i32 %k, 14
  %5 = or i32 %2, %4
  %6 = or i32 %5, 1
  %7 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %6) #3
  br label %14

; <label>:8                                       ; preds = %0
  %9 = or i32 %2, 2
  %10 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %9) #3
  %11 = shl i32 %k, 6
  %12 = or i32 %11, 39
  %13 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %12) #3
  br label %14

; <label>:14                                      ; preds = %8, %3
  %.0 = phi i32 [ %7, %3 ], [ %10, %8 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_checkstack(%struct.FuncState* nocapture readonly %fs, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %2 = load i8* %1, align 1, !tbaa !87
  %3 = zext i8 %2 to i32
  %4 = add nsw i32 %3, %n
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %6 = load %struct.Proto.24** %5, align 8, !tbaa !82
  %7 = getelementptr inbounds %struct.Proto.24* %6, i64 0, i32 22
  %8 = load i8* %7, align 1, !tbaa !88
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i32 %4, %9
  br i1 %10, label %11, label %18

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %4, 249
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %15 = load %struct.LexState** %14, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %15, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:16                                      ; preds = %11
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %7, align 1, !tbaa !88
  br label %18

; <label>:18                                      ; preds = %16, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_reserveregs(%struct.FuncState* nocapture %fs, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %2 = load i8* %1, align 1, !tbaa !87
  %3 = zext i8 %2 to i32
  %4 = add nsw i32 %3, %n
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %6 = load %struct.Proto.24** %5, align 8, !tbaa !82
  %7 = getelementptr inbounds %struct.Proto.24* %6, i64 0, i32 22
  %8 = load i8* %7, align 1, !tbaa !88
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i32 %4, %9
  br i1 %10, label %11, label %.luaK_checkstack.exit_crit_edge

.luaK_checkstack.exit_crit_edge:                  ; preds = %0
  %.pre = trunc i32 %4 to i8
  br label %luaK_checkstack.exit

; <label>:11                                      ; preds = %0
  %12 = icmp sgt i32 %4, 249
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %15 = load %struct.LexState** %14, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %15, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:16                                      ; preds = %11
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %7, align 1, !tbaa !88
  br label %luaK_checkstack.exit

luaK_checkstack.exit:                             ; preds = %16, %.luaK_checkstack.exit_crit_edge
  %.pre-phi = phi i8 [ %.pre, %.luaK_checkstack.exit_crit_edge ], [ %17, %16 ]
  store i8 %.pre-phi, i8* %1, align 1, !tbaa !87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_stringK(%struct.FuncState* nocapture %fs, %union.TString.7* %s) #0 {
  %o = alloca %struct.lua_TValue.1, align 8
  %1 = bitcast %union.TString.7* %s to %union.GCObject.19*
  %2 = getelementptr inbounds %struct.lua_TValue.1* %o, i64 0, i32 0, i32 0
  store %union.GCObject.19* %1, %union.GCObject.19** %2, align 8, !tbaa !25
  %3 = getelementptr inbounds %union.TString.7* %s, i64 0, i32 0, i32 1
  %4 = load i8* %3, align 1, !tbaa !38
  %5 = zext i8 %4 to i32
  %6 = or i32 %5, 64
  %7 = getelementptr inbounds %struct.lua_TValue.1* %o, i64 0, i32 1
  store i32 %6, i32* %7, align 8, !tbaa !15
  %8 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %o, %struct.lua_TValue.1* %o)
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_numberK(%struct.FuncState* nocapture %fs, double %r) #0 {
  %1 = alloca double, align 8
  %o = alloca %struct.lua_TValue.1, align 8
  store double %r, double* %1, align 8, !tbaa !30
  %2 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %3 = load %struct.LexState** %2, align 8, !tbaa !85
  %4 = getelementptr inbounds %struct.LexState* %3, i64 0, i32 6
  %5 = load %struct.lua_State.18** %4, align 8, !tbaa !89
  %6 = bitcast %struct.lua_TValue.1* %o to double*
  store double %r, double* %6, align 8, !tbaa !30
  %7 = getelementptr inbounds %struct.lua_TValue.1* %o, i64 0, i32 1
  store i32 3, i32* %7, align 8, !tbaa !15
  %8 = fcmp ueq double %r, 0.000000e+00
  br i1 %8, label %9, label %27

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.lua_State.18* %5, i64 0, i32 4
  %11 = load %struct.lua_TValue.1** %10, align 8, !tbaa !12
  %12 = getelementptr inbounds %struct.lua_TValue.1* %11, i64 1
  store %struct.lua_TValue.1* %12, %struct.lua_TValue.1** %10, align 8, !tbaa !12
  %13 = bitcast double* %1 to i8*
  %14 = call %union.TString.7* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString.7* (%struct.lua_State.18*, i8*, i64)*)(%struct.lua_State.18* %5, i8* %13, i64 8) #3
  %15 = bitcast %union.TString.7* %14 to %union.GCObject.19*
  %16 = getelementptr inbounds %struct.lua_TValue.1* %11, i64 0, i32 0, i32 0
  store %union.GCObject.19* %15, %union.GCObject.19** %16, align 8, !tbaa !25
  %17 = getelementptr inbounds %union.TString.7* %14, i64 0, i32 0, i32 1
  %18 = load i8* %17, align 1, !tbaa !38
  %19 = zext i8 %18 to i32
  %20 = or i32 %19, 64
  %21 = getelementptr inbounds %struct.lua_TValue.1* %11, i64 0, i32 1
  store i32 %20, i32* %21, align 4, !tbaa !15
  %22 = load %struct.lua_TValue.1** %10, align 8, !tbaa !12
  %23 = getelementptr inbounds %struct.lua_TValue.1* %22, i64 -1
  %24 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %23, %struct.lua_TValue.1* %o)
  %25 = load %struct.lua_TValue.1** %10, align 8, !tbaa !12
  %26 = getelementptr inbounds %struct.lua_TValue.1* %25, i64 -1
  store %struct.lua_TValue.1* %26, %struct.lua_TValue.1** %10, align 8, !tbaa !12
  br label %29

; <label>:27                                      ; preds = %0
  %28 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %o, %struct.lua_TValue.1* %o)
  br label %29

; <label>:29                                      ; preds = %27, %9
  %n.0 = phi i32 [ %24, %9 ], [ %28, %27 ]
  ret i32 %n.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_setreturns(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture readonly %e, i32 %nresults) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %56 [
    i32 12, label %3
    i32 13, label %19
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.anon.7* %4 to i32*
  %6 = load i32* %5, align 4, !tbaa !1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto.24** %8, align 8, !tbaa !82
  %10 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 4
  %11 = load i32** %10, align 8, !tbaa !83
  %12 = getelementptr inbounds i32* %11, i64 %7
  %13 = load i32* %12, align 4, !tbaa !1
  %14 = and i32 %13, -8372225
  %15 = shl i32 %nresults, 14
  %16 = add i32 %15, 16384
  %17 = and i32 %16, 8372224
  %18 = or i32 %14, %17
  store i32 %18, i32* %12, align 4, !tbaa !1
  br label %56

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %21 = bitcast %union.anon.7* %20 to i32*
  %22 = load i32* %21, align 4, !tbaa !1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %25 = load %struct.Proto.24** %24, align 8, !tbaa !82
  %26 = getelementptr inbounds %struct.Proto.24* %25, i64 0, i32 4
  %27 = load i32** %26, align 8, !tbaa !83
  %28 = getelementptr inbounds i32* %27, i64 %23
  %29 = load i32* %28, align 4, !tbaa !1
  %30 = and i32 %29, 8388607
  %31 = shl i32 %nresults, 23
  %32 = add i32 %31, 8388608
  %33 = or i32 %30, %32
  store i32 %33, i32* %28, align 4, !tbaa !1
  %34 = load i32* %21, align 4, !tbaa !1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32* %27, i64 %35
  %37 = load i32* %36, align 4, !tbaa !1
  %38 = and i32 %37, -16321
  %39 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %40 = load i8* %39, align 1, !tbaa !87
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 6
  %43 = or i32 %42, %38
  store i32 %43, i32* %36, align 4, !tbaa !1
  %44 = add nsw i32 %41, 1
  %45 = getelementptr inbounds %struct.Proto.24* %25, i64 0, i32 22
  %46 = load i8* %45, align 1, !tbaa !88
  %47 = zext i8 %46 to i32
  %48 = icmp ugt i32 %44, %47
  br i1 %48, label %49, label %.luaK_checkstack.exit_crit_edge.i

.luaK_checkstack.exit_crit_edge.i:                ; preds = %19
  %.pre.i = trunc i32 %44 to i8
  br label %luaK_reserveregs.exit

; <label>:49                                      ; preds = %19
  %50 = icmp ugt i32 %44, 249
  br i1 %50, label %51, label %54

; <label>:51                                      ; preds = %49
  %52 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %53 = load %struct.LexState** %52, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %53, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:54                                      ; preds = %49
  %55 = trunc i32 %44 to i8
  store i8 %55, i8* %45, align 1, !tbaa !88
  br label %luaK_reserveregs.exit

luaK_reserveregs.exit:                            ; preds = %54, %.luaK_checkstack.exit_crit_edge.i
  %.pre-phi.i = phi i8 [ %.pre.i, %.luaK_checkstack.exit_crit_edge.i ], [ %55, %54 ]
  store i8 %.pre-phi.i, i8* %39, align 1, !tbaa !87
  br label %56

; <label>:56                                      ; preds = %luaK_reserveregs.exit, %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_setoneret(%struct.FuncState* nocapture readonly %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %29 [
    i32 12, label %3
    i32 13, label %16
  ]

; <label>:3                                       ; preds = %0
  store i32 6, i32* %1, align 4, !tbaa !92
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.anon.7* %4 to i32*
  %6 = load i32* %5, align 4, !tbaa !1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto.24** %8, align 8, !tbaa !82
  %10 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 4
  %11 = load i32** %10, align 8, !tbaa !83
  %12 = getelementptr inbounds i32* %11, i64 %7
  %13 = load i32* %12, align 4, !tbaa !1
  %14 = lshr i32 %13, 6
  %15 = and i32 %14, 255
  store i32 %15, i32* %5, align 4, !tbaa !1
  br label %29

; <label>:16                                      ; preds = %0
  %17 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %18 = bitcast %union.anon.7* %17 to i32*
  %19 = load i32* %18, align 4, !tbaa !1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %22 = load %struct.Proto.24** %21, align 8, !tbaa !82
  %23 = getelementptr inbounds %struct.Proto.24* %22, i64 0, i32 4
  %24 = load i32** %23, align 8, !tbaa !83
  %25 = getelementptr inbounds i32* %24, i64 %20
  %26 = load i32* %25, align 4, !tbaa !1
  %27 = and i32 %26, 8388607
  %28 = or i32 %27, 16777216
  store i32 %28, i32* %25, align 4, !tbaa !1
  store i32 11, i32* %1, align 4, !tbaa !92
  br label %29

; <label>:29                                      ; preds = %16, %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_dischargevars(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %luaK_setoneret.exit [
    i32 7, label %3
    i32 8, label %4
    i32 9, label %11
    i32 12, label %48
    i32 13, label %61
  ]

; <label>:3                                       ; preds = %0
  store i32 6, i32* %1, align 4, !tbaa !92
  br label %luaK_setoneret.exit

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %6 = bitcast %union.anon.7* %5 to i32*
  %7 = load i32* %6, align 4, !tbaa !1
  %8 = shl i32 %7, 23
  %9 = or i32 %8, 5
  %10 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %9) #3
  store i32 %10, i32* %6, align 4, !tbaa !1
  store i32 11, i32* %1, align 4, !tbaa !92
  br label %luaK_setoneret.exit

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %13 = bitcast %union.anon.7* %12 to %struct.anon.8*
  %14 = bitcast %union.anon.7* %12 to i16*
  %15 = load i16* %14, align 2, !tbaa !94
  %16 = sext i16 %15 to i32
  %17 = and i32 %16, 256
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %freereg.exit

; <label>:19                                      ; preds = %11
  %20 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %21 = load i8* %20, align 1, !tbaa !96
  %22 = zext i8 %21 to i32
  %23 = icmp sgt i32 %22, %16
  br i1 %23, label %freereg.exit, label %24

; <label>:24                                      ; preds = %19
  %25 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %26 = load i8* %25, align 1, !tbaa !87
  %27 = add i8 %26, -1
  store i8 %27, i8* %25, align 1, !tbaa !87
  br label %freereg.exit

freereg.exit:                                     ; preds = %24, %19, %11
  %28 = getelementptr inbounds %struct.anon.8* %13, i64 0, i32 2
  %29 = load i8* %28, align 1, !tbaa !97
  %30 = icmp eq i8 %29, 7
  %31 = getelementptr inbounds %struct.anon.8* %13, i64 0, i32 1
  %32 = load i8* %31, align 1, !tbaa !98
  br i1 %30, label %33, label %freereg.exit1

; <label>:33                                      ; preds = %freereg.exit
  %34 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %35 = load i8* %34, align 1, !tbaa !96
  %36 = icmp ugt i8 %35, %32
  br i1 %36, label %freereg.exit1, label %37

; <label>:37                                      ; preds = %33
  %38 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %39 = load i8* %38, align 1, !tbaa !87
  %40 = add i8 %39, -1
  store i8 %40, i8* %38, align 1, !tbaa !87
  br label %freereg.exit1

freereg.exit1:                                    ; preds = %37, %33, %freereg.exit
  %op.0 = phi i32 [ 7, %33 ], [ 7, %37 ], [ 6, %freereg.exit ]
  %41 = zext i8 %32 to i32
  %42 = shl nuw nsw i32 %41, 23
  %43 = or i32 %42, %op.0
  %44 = shl nsw i32 %16, 14
  %45 = or i32 %43, %44
  %46 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %45) #3
  %47 = bitcast %union.anon.7* %12 to i32*
  store i32 %46, i32* %47, align 4, !tbaa !1
  store i32 11, i32* %1, align 4, !tbaa !92
  br label %luaK_setoneret.exit

; <label>:48                                      ; preds = %0
  store i32 6, i32* %1, align 4, !tbaa !92
  %49 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %50 = bitcast %union.anon.7* %49 to i32*
  %51 = load i32* %50, align 4, !tbaa !1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %54 = load %struct.Proto.24** %53, align 8, !tbaa !82
  %55 = getelementptr inbounds %struct.Proto.24* %54, i64 0, i32 4
  %56 = load i32** %55, align 8, !tbaa !83
  %57 = getelementptr inbounds i32* %56, i64 %52
  %58 = load i32* %57, align 4, !tbaa !1
  %59 = lshr i32 %58, 6
  %60 = and i32 %59, 255
  store i32 %60, i32* %50, align 4, !tbaa !1
  br label %luaK_setoneret.exit

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %63 = bitcast %union.anon.7* %62 to i32*
  %64 = load i32* %63, align 4, !tbaa !1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %67 = load %struct.Proto.24** %66, align 8, !tbaa !82
  %68 = getelementptr inbounds %struct.Proto.24* %67, i64 0, i32 4
  %69 = load i32** %68, align 8, !tbaa !83
  %70 = getelementptr inbounds i32* %69, i64 %65
  %71 = load i32* %70, align 4, !tbaa !1
  %72 = and i32 %71, 8388607
  %73 = or i32 %72, 16777216
  store i32 %73, i32* %70, align 4, !tbaa !1
  store i32 11, i32* %1, align 4, !tbaa !92
  br label %luaK_setoneret.exit

luaK_setoneret.exit:                              ; preds = %61, %48, %freereg.exit1, %4, %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %4, label %freeexp.exit

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %6 = bitcast %union.anon.7* %5 to i32*
  %7 = load i32* %6, align 4, !tbaa !1
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %freeexp.exit

; <label>:10                                      ; preds = %4
  %11 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %12 = load i8* %11, align 1, !tbaa !96
  %13 = zext i8 %12 to i32
  %14 = icmp sgt i32 %13, %7
  br i1 %14, label %freeexp.exit, label %15

; <label>:15                                      ; preds = %10
  %16 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %17 = load i8* %16, align 1, !tbaa !87
  %18 = add i8 %17, -1
  store i8 %18, i8* %16, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %15, %10, %4, %0
  %19 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %20 = load i8* %19, align 1, !tbaa !87
  %21 = zext i8 %20 to i32
  %22 = add nsw i32 %21, 1
  %23 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %24 = load %struct.Proto.24** %23, align 8, !tbaa !82
  %25 = getelementptr inbounds %struct.Proto.24* %24, i64 0, i32 22
  %26 = load i8* %25, align 1, !tbaa !88
  %27 = zext i8 %26 to i32
  %28 = icmp ugt i32 %22, %27
  br i1 %28, label %29, label %.luaK_checkstack.exit_crit_edge.i

.luaK_checkstack.exit_crit_edge.i:                ; preds = %freeexp.exit
  %.pre.i = trunc i32 %22 to i8
  br label %luaK_reserveregs.exit

; <label>:29                                      ; preds = %freeexp.exit
  %30 = icmp ugt i32 %22, 249
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %29
  %32 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %33 = load %struct.LexState** %32, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %33, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:34                                      ; preds = %29
  %35 = trunc i32 %22 to i8
  store i8 %35, i8* %25, align 1, !tbaa !88
  br label %luaK_reserveregs.exit

luaK_reserveregs.exit:                            ; preds = %34, %.luaK_checkstack.exit_crit_edge.i
  %.pre-phi.i = phi i8 [ %.pre.i, %.luaK_checkstack.exit_crit_edge.i ], [ %35, %34 ]
  store i8 %.pre-phi.i, i8* %19, align 1, !tbaa !87
  %36 = zext i8 %.pre-phi.i to i32
  %37 = add nsw i32 %36, -1
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %37)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_exp2anyreg(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %4, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.pre = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %.pre1 = bitcast %union.anon.7* %.pre to i32*
  br label %20

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %6 = load i32* %5, align 4, !tbaa !99
  %7 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %8 = load i32* %7, align 4, !tbaa !100
  %9 = icmp eq i32 %6, %8
  %10 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %11 = bitcast %union.anon.7* %10 to i32*
  %12 = load i32* %11, align 4, !tbaa !1
  br i1 %9, label %22, label %13

; <label>:13                                      ; preds = %4
  %14 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %15 = load i8* %14, align 1, !tbaa !96
  %16 = zext i8 %15 to i32
  %17 = icmp slt i32 %12, %16
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %13
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %12)
  %19 = load i32* %11, align 4, !tbaa !1
  br label %22

; <label>:20                                      ; preds = %13, %._crit_edge
  %.pre-phi2 = phi i32* [ %.pre1, %._crit_edge ], [ %11, %13 ]
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e)
  %21 = load i32* %.pre-phi2, align 4, !tbaa !1
  br label %22

; <label>:22                                      ; preds = %20, %18, %4
  %.0 = phi i32 [ %19, %18 ], [ %21, %20 ], [ %12, %4 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_exp2anyregup(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  %3 = icmp eq i32 %2, 8
  br i1 %3, label %4, label %10

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %6 = load i32* %5, align 4, !tbaa !99
  %7 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %8 = load i32* %7, align 4, !tbaa !100
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %luaK_exp2anyreg.exit, label %10

; <label>:10                                      ; preds = %4, %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %11 = load i32* %1, align 4, !tbaa !92
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %13, label %._crit_edge.i

; <label>:13                                      ; preds = %10
  %14 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %15 = load i32* %14, align 4, !tbaa !99
  %16 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %17 = load i32* %16, align 4, !tbaa !100
  %18 = icmp eq i32 %15, %17
  %19 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %20 = bitcast %union.anon.7* %19 to i32*
  %21 = load i32* %20, align 4, !tbaa !1
  br i1 %18, label %luaK_exp2anyreg.exit, label %22

; <label>:22                                      ; preds = %13
  %23 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %24 = load i8* %23, align 1, !tbaa !96
  %25 = zext i8 %24 to i32
  %26 = icmp slt i32 %21, %25
  br i1 %26, label %._crit_edge.i, label %27

; <label>:27                                      ; preds = %22
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %21) #3
  br label %luaK_exp2anyreg.exit

._crit_edge.i:                                    ; preds = %22, %10
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  br label %luaK_exp2anyreg.exit

luaK_exp2anyreg.exit:                             ; preds = %._crit_edge.i, %27, %13, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_exp2val(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %2 = load i32* %1, align 4, !tbaa !99
  %3 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %4 = load i32* %3, align 4, !tbaa !100
  %5 = icmp eq i32 %2, %4
  br i1 %5, label %23, label %6

; <label>:6                                       ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %7 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %8 = load i32* %7, align 4, !tbaa !92
  %9 = icmp eq i32 %8, 6
  br i1 %9, label %10, label %._crit_edge.i

; <label>:10                                      ; preds = %6
  %11 = load i32* %1, align 4, !tbaa !99
  %12 = load i32* %3, align 4, !tbaa !100
  %13 = icmp eq i32 %11, %12
  %14 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %15 = bitcast %union.anon.7* %14 to i32*
  %16 = load i32* %15, align 4, !tbaa !1
  br i1 %13, label %luaK_exp2anyreg.exit, label %17

; <label>:17                                      ; preds = %10
  %18 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %19 = load i8* %18, align 1, !tbaa !96
  %20 = zext i8 %19 to i32
  %21 = icmp slt i32 %16, %20
  br i1 %21, label %._crit_edge.i, label %22

; <label>:22                                      ; preds = %17
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %16) #3
  br label %luaK_exp2anyreg.exit

._crit_edge.i:                                    ; preds = %17, %6
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  br label %luaK_exp2anyreg.exit

; <label>:23                                      ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  br label %luaK_exp2anyreg.exit

luaK_exp2anyreg.exit:                             ; preds = %23, %._crit_edge.i, %22, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* nocapture %e) #0 {
  %1 = alloca double, align 8
  %o.i1 = alloca %struct.lua_TValue.1, align 8
  %o.i = alloca %struct.lua_TValue.1, align 8
  %k.i = alloca %struct.lua_TValue.1, align 8
  %v.i = alloca %struct.lua_TValue.1, align 8
  call void @luaK_exp2val(%struct.FuncState* %fs, %struct.expdesc* %e)
  %2 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !92
  switch i32 %3, label %70 [
    i32 2, label %4
    i32 3, label %4
    i32 1, label %4
    i32 5, label %32
    i32 4, label %._crit_edge
  ]

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %.phi.trans.insert2 = bitcast %union.anon.7* %.phi.trans.insert to i32*
  %.pre = load i32* %.phi.trans.insert2, align 4, !tbaa !1
  br label %65

; <label>:4                                       ; preds = %0, %0, %0
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 8
  %6 = load i32* %5, align 4, !tbaa !101
  %7 = icmp slt i32 %6, 256
  br i1 %7, label %8, label %70

; <label>:8                                       ; preds = %4
  %9 = icmp eq i32 %3, 1
  br i1 %9, label %10, label %20

; <label>:10                                      ; preds = %8
  %11 = bitcast %struct.lua_TValue.1* %k.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %11) #3
  %12 = bitcast %struct.lua_TValue.1* %v.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %12) #3
  %13 = getelementptr inbounds %struct.lua_TValue.1* %v.i, i64 0, i32 1
  store i32 0, i32* %13, align 8, !tbaa !15
  %14 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 1
  %15 = load %struct.Table.11** %14, align 8, !tbaa !102
  %16 = bitcast %struct.Table.11* %15 to %union.GCObject.19*
  %17 = getelementptr inbounds %struct.lua_TValue.1* %k.i, i64 0, i32 0, i32 0
  store %union.GCObject.19* %16, %union.GCObject.19** %17, align 8, !tbaa !25
  %18 = getelementptr inbounds %struct.lua_TValue.1* %k.i, i64 0, i32 1
  store i32 69, i32* %18, align 8, !tbaa !15
  %19 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %k.i, %struct.lua_TValue.1* %v.i) #3
  call void @llvm.lifetime.end(i64 16, i8* %11) #3
  call void @llvm.lifetime.end(i64 16, i8* %12) #3
  br label %27

; <label>:20                                      ; preds = %8
  %21 = icmp eq i32 %3, 2
  %22 = zext i1 %21 to i32
  %23 = bitcast %struct.lua_TValue.1* %o.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %23) #3
  %24 = bitcast %struct.lua_TValue.1* %o.i to i32*
  store i32 %22, i32* %24, align 8, !tbaa !1
  %25 = getelementptr inbounds %struct.lua_TValue.1* %o.i, i64 0, i32 1
  store i32 1, i32* %25, align 8, !tbaa !15
  %26 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %o.i, %struct.lua_TValue.1* %o.i) #3
  call void @llvm.lifetime.end(i64 16, i8* %23) #3
  br label %27

; <label>:27                                      ; preds = %20, %10
  %28 = phi i32 [ %19, %10 ], [ %26, %20 ]
  %29 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %30 = bitcast %union.anon.7* %29 to i32*
  store i32 %28, i32* %30, align 4, !tbaa !1
  store i32 4, i32* %2, align 4, !tbaa !92
  %31 = or i32 %28, 256
  br label %luaK_exp2anyreg.exit

; <label>:32                                      ; preds = %0
  %33 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %34 = getelementptr inbounds %union.anon.7* %33, i64 0, i32 0
  %35 = load double* %34, align 8, !tbaa !30
  %36 = bitcast double* %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %36) #3
  %37 = bitcast %struct.lua_TValue.1* %o.i1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %37) #3
  store double %35, double* %1, align 8, !tbaa !30
  %38 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %39 = load %struct.LexState** %38, align 8, !tbaa !85
  %40 = getelementptr inbounds %struct.LexState* %39, i64 0, i32 6
  %41 = load %struct.lua_State.18** %40, align 8, !tbaa !89
  %42 = bitcast %struct.lua_TValue.1* %o.i1 to double*
  store double %35, double* %42, align 8, !tbaa !30
  %43 = getelementptr inbounds %struct.lua_TValue.1* %o.i1, i64 0, i32 1
  store i32 3, i32* %43, align 8, !tbaa !15
  %44 = fcmp ueq double %35, 0.000000e+00
  br i1 %44, label %45, label %62

; <label>:45                                      ; preds = %32
  %46 = getelementptr inbounds %struct.lua_State.18* %41, i64 0, i32 4
  %47 = load %struct.lua_TValue.1** %46, align 8, !tbaa !12
  %48 = getelementptr inbounds %struct.lua_TValue.1* %47, i64 1
  store %struct.lua_TValue.1* %48, %struct.lua_TValue.1** %46, align 8, !tbaa !12
  %49 = call %union.TString.7* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString.7* (%struct.lua_State.18*, i8*, i64)*)(%struct.lua_State.18* %41, i8* %36, i64 8) #3
  %50 = bitcast %union.TString.7* %49 to %union.GCObject.19*
  %51 = getelementptr inbounds %struct.lua_TValue.1* %47, i64 0, i32 0, i32 0
  store %union.GCObject.19* %50, %union.GCObject.19** %51, align 8, !tbaa !25
  %52 = getelementptr inbounds %union.TString.7* %49, i64 0, i32 0, i32 1
  %53 = load i8* %52, align 1, !tbaa !38
  %54 = zext i8 %53 to i32
  %55 = or i32 %54, 64
  %56 = getelementptr inbounds %struct.lua_TValue.1* %47, i64 0, i32 1
  store i32 %55, i32* %56, align 4, !tbaa !15
  %57 = load %struct.lua_TValue.1** %46, align 8, !tbaa !12
  %58 = getelementptr inbounds %struct.lua_TValue.1* %57, i64 -1
  %59 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %58, %struct.lua_TValue.1* %o.i1) #3
  %60 = load %struct.lua_TValue.1** %46, align 8, !tbaa !12
  %61 = getelementptr inbounds %struct.lua_TValue.1* %60, i64 -1
  store %struct.lua_TValue.1* %61, %struct.lua_TValue.1** %46, align 8, !tbaa !12
  br label %luaK_numberK.exit

; <label>:62                                      ; preds = %32
  %63 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %o.i1, %struct.lua_TValue.1* %o.i1) #3
  br label %luaK_numberK.exit

luaK_numberK.exit:                                ; preds = %62, %45
  %n.0.i = phi i32 [ %59, %45 ], [ %63, %62 ]
  call void @llvm.lifetime.end(i64 8, i8* %36) #3
  call void @llvm.lifetime.end(i64 16, i8* %37) #3
  %64 = bitcast %union.anon.7* %33 to i32*
  store i32 %n.0.i, i32* %64, align 4, !tbaa !1
  store i32 4, i32* %2, align 4, !tbaa !92
  br label %65

; <label>:65                                      ; preds = %luaK_numberK.exit, %._crit_edge
  %66 = phi i32 [ %.pre, %._crit_edge ], [ %n.0.i, %luaK_numberK.exit ]
  %67 = icmp slt i32 %66, 256
  br i1 %67, label %68, label %70

; <label>:68                                      ; preds = %65
  %69 = or i32 %66, 256
  br label %luaK_exp2anyreg.exit

; <label>:70                                      ; preds = %65, %4, %0
  call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %71 = load i32* %2, align 4, !tbaa !92
  %72 = icmp eq i32 %71, 6
  br i1 %72, label %73, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %70
  %.pre.i = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %.pre1.i = bitcast %union.anon.7* %.pre.i to i32*
  br label %89

; <label>:73                                      ; preds = %70
  %74 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %75 = load i32* %74, align 4, !tbaa !99
  %76 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %77 = load i32* %76, align 4, !tbaa !100
  %78 = icmp eq i32 %75, %77
  %79 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %80 = bitcast %union.anon.7* %79 to i32*
  %81 = load i32* %80, align 4, !tbaa !1
  br i1 %78, label %luaK_exp2anyreg.exit, label %82

; <label>:82                                      ; preds = %73
  %83 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %84 = load i8* %83, align 1, !tbaa !96
  %85 = zext i8 %84 to i32
  %86 = icmp slt i32 %81, %85
  br i1 %86, label %89, label %87

; <label>:87                                      ; preds = %82
  call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %81) #3
  %88 = load i32* %80, align 4, !tbaa !1
  br label %luaK_exp2anyreg.exit

; <label>:89                                      ; preds = %82, %._crit_edge.i
  %.pre-phi2.i = phi i32* [ %.pre1.i, %._crit_edge.i ], [ %80, %82 ]
  call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %90 = load i32* %.pre-phi2.i, align 4, !tbaa !1
  br label %luaK_exp2anyreg.exit

luaK_exp2anyreg.exit:                             ; preds = %89, %87, %73, %68, %27
  %.0 = phi i32 [ %69, %68 ], [ %31, %27 ], [ %88, %87 ], [ %90, %89 ], [ %81, %73 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_storevar(%struct.FuncState* %fs, %struct.expdesc* nocapture readonly %var, %struct.expdesc* nocapture %ex) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %76 [
    i32 7, label %3
    i32 8, label %25
    i32 9, label %55
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 0
  %5 = load i32* %4, align 4, !tbaa !92
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %7, label %freeexp.exit

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 1
  %9 = bitcast %union.anon.7* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !1
  %11 = and i32 %10, 256
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %freeexp.exit

; <label>:13                                      ; preds = %7
  %14 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %15 = load i8* %14, align 1, !tbaa !96
  %16 = zext i8 %15 to i32
  %17 = icmp sgt i32 %16, %10
  br i1 %17, label %freeexp.exit, label %18

; <label>:18                                      ; preds = %13
  %19 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %20 = load i8* %19, align 1, !tbaa !87
  %21 = add i8 %20, -1
  store i8 %21, i8* %19, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %18, %13, %7, %3
  %22 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 1
  %23 = bitcast %union.anon.7* %22 to i32*
  %24 = load i32* %23, align 4, !tbaa !1
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %ex, i32 %24)
  br label %freeexp.exit2

; <label>:25                                      ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %ex) #3
  %26 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 0
  %27 = load i32* %26, align 4, !tbaa !92
  %28 = icmp eq i32 %27, 6
  br i1 %28, label %29, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %25
  %.pre.i = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 1
  %.pre1.i = bitcast %union.anon.7* %.pre.i to i32*
  br label %45

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 2
  %31 = load i32* %30, align 4, !tbaa !99
  %32 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 3
  %33 = load i32* %32, align 4, !tbaa !100
  %34 = icmp eq i32 %31, %33
  %35 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 1
  %36 = bitcast %union.anon.7* %35 to i32*
  %37 = load i32* %36, align 4, !tbaa !1
  br i1 %34, label %luaK_exp2anyreg.exit, label %38

; <label>:38                                      ; preds = %29
  %39 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %40 = load i8* %39, align 1, !tbaa !96
  %41 = zext i8 %40 to i32
  %42 = icmp slt i32 %37, %41
  br i1 %42, label %45, label %43

; <label>:43                                      ; preds = %38
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %ex, i32 %37) #3
  %44 = load i32* %36, align 4, !tbaa !1
  br label %luaK_exp2anyreg.exit

; <label>:45                                      ; preds = %38, %._crit_edge.i
  %.pre-phi2.i = phi i32* [ %.pre1.i, %._crit_edge.i ], [ %36, %38 ]
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %ex) #3
  %46 = load i32* %.pre-phi2.i, align 4, !tbaa !1
  br label %luaK_exp2anyreg.exit

luaK_exp2anyreg.exit:                             ; preds = %45, %43, %29
  %.0.i = phi i32 [ %44, %43 ], [ %46, %45 ], [ %37, %29 ]
  %47 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 1
  %48 = bitcast %union.anon.7* %47 to i32*
  %49 = load i32* %48, align 4, !tbaa !1
  %50 = shl i32 %.0.i, 6
  %51 = shl i32 %49, 23
  %52 = or i32 %50, %51
  %53 = or i32 %52, 9
  %54 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %53) #3
  br label %76

; <label>:55                                      ; preds = %0
  %56 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 1
  %57 = bitcast %union.anon.7* %56 to %struct.anon.8*
  %58 = getelementptr inbounds %struct.anon.8* %57, i64 0, i32 2
  %59 = load i8* %58, align 1, !tbaa !97
  %60 = icmp eq i8 %59, 7
  %61 = select i1 %60, i32 10, i32 8
  %62 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %ex)
  %63 = getelementptr inbounds %struct.anon.8* %57, i64 0, i32 1
  %64 = load i8* %63, align 1, !tbaa !98
  %65 = zext i8 %64 to i32
  %66 = bitcast %union.anon.7* %56 to i16*
  %67 = load i16* %66, align 2, !tbaa !94
  %68 = zext i16 %67 to i32
  %69 = shl nuw nsw i32 %65, 6
  %70 = shl i32 %68, 23
  %71 = shl i32 %62, 14
  %72 = or i32 %71, %61
  %73 = or i32 %72, %69
  %74 = or i32 %73, %70
  %75 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %74) #3
  br label %76

; <label>:76                                      ; preds = %55, %luaK_exp2anyreg.exit, %0
  %77 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 0
  %78 = load i32* %77, align 4, !tbaa !92
  %79 = icmp eq i32 %78, 6
  br i1 %79, label %80, label %freeexp.exit2

; <label>:80                                      ; preds = %76
  %81 = getelementptr inbounds %struct.expdesc* %ex, i64 0, i32 1
  %82 = bitcast %union.anon.7* %81 to i32*
  %83 = load i32* %82, align 4, !tbaa !1
  %84 = and i32 %83, 256
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %freeexp.exit2

; <label>:86                                      ; preds = %80
  %87 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %88 = load i8* %87, align 1, !tbaa !96
  %89 = zext i8 %88 to i32
  %90 = icmp sgt i32 %89, %83
  br i1 %90, label %freeexp.exit2, label %91

; <label>:91                                      ; preds = %86
  %92 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %93 = load i8* %92, align 1, !tbaa !87
  %94 = add i8 %93, -1
  store i8 %94, i8* %92, align 1, !tbaa !87
  br label %freeexp.exit2

freeexp.exit2:                                    ; preds = %91, %86, %80, %76, %freeexp.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_self(%struct.FuncState* %fs, %struct.expdesc* nocapture %e, %struct.expdesc* nocapture %key) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  %3 = icmp eq i32 %2, 6
  br i1 %3, label %4, label %.._crit_edge.i_crit_edge

.._crit_edge.i_crit_edge:                         ; preds = %0
  %.pre.pre = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %.pre4.pre = bitcast %union.anon.7* %.pre.pre to i32*
  br label %._crit_edge.i

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %6 = load i32* %5, align 4, !tbaa !99
  %7 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %8 = load i32* %7, align 4, !tbaa !100
  %9 = icmp eq i32 %6, %8
  %10 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %11 = bitcast %union.anon.7* %10 to i32*
  %12 = load i32* %11, align 4, !tbaa !1
  br i1 %9, label %luaK_exp2anyreg.exit, label %13

; <label>:13                                      ; preds = %4
  %14 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %15 = load i8* %14, align 1, !tbaa !96
  %16 = zext i8 %15 to i32
  %17 = icmp slt i32 %12, %16
  br i1 %17, label %._crit_edge.i, label %18

; <label>:18                                      ; preds = %13
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %12) #3
  br label %luaK_exp2anyreg.exit

._crit_edge.i:                                    ; preds = %13, %.._crit_edge.i_crit_edge
  %.pre4.pre-phi = phi i32* [ %.pre4.pre, %.._crit_edge.i_crit_edge ], [ %11, %13 ]
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  br label %luaK_exp2anyreg.exit

luaK_exp2anyreg.exit:                             ; preds = %._crit_edge.i, %18, %4
  %.pre-phi5 = phi i32* [ %11, %4 ], [ %11, %18 ], [ %.pre4.pre-phi, %._crit_edge.i ]
  %19 = load i32* %.pre-phi5, align 4, !tbaa !1
  %20 = load i32* %1, align 4, !tbaa !92
  %21 = icmp eq i32 %20, 6
  %22 = and i32 %19, 256
  %23 = icmp eq i32 %22, 0
  %or.cond = and i1 %21, %23
  br i1 %or.cond, label %24, label %freeexp.exit

; <label>:24                                      ; preds = %luaK_exp2anyreg.exit
  %25 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %26 = load i8* %25, align 1, !tbaa !96
  %27 = zext i8 %26 to i32
  %28 = icmp sgt i32 %27, %19
  br i1 %28, label %freeexp.exit, label %29

; <label>:29                                      ; preds = %24
  %30 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %31 = load i8* %30, align 1, !tbaa !87
  %32 = add i8 %31, -1
  store i8 %32, i8* %30, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %29, %24, %luaK_exp2anyreg.exit
  %33 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %34 = load i8* %33, align 1, !tbaa !87
  %35 = zext i8 %34 to i32
  store i32 %35, i32* %.pre-phi5, align 4, !tbaa !1
  store i32 6, i32* %1, align 4, !tbaa !92
  %36 = add nsw i32 %35, 2
  %37 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %38 = load %struct.Proto.24** %37, align 8, !tbaa !82
  %39 = getelementptr inbounds %struct.Proto.24* %38, i64 0, i32 22
  %40 = load i8* %39, align 1, !tbaa !88
  %41 = zext i8 %40 to i32
  %42 = icmp ugt i32 %36, %41
  br i1 %42, label %43, label %.luaK_checkstack.exit_crit_edge.i

.luaK_checkstack.exit_crit_edge.i:                ; preds = %freeexp.exit
  %.pre.i1 = trunc i32 %36 to i8
  br label %luaK_reserveregs.exit

; <label>:43                                      ; preds = %freeexp.exit
  %44 = icmp ugt i32 %36, 249
  br i1 %44, label %45, label %48

; <label>:45                                      ; preds = %43
  %46 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %47 = load %struct.LexState** %46, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %47, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:48                                      ; preds = %43
  %49 = trunc i32 %36 to i8
  store i8 %49, i8* %39, align 1, !tbaa !88
  br label %luaK_reserveregs.exit

luaK_reserveregs.exit:                            ; preds = %48, %.luaK_checkstack.exit_crit_edge.i
  %.pre-phi.i = phi i8 [ %.pre.i1, %.luaK_checkstack.exit_crit_edge.i ], [ %49, %48 ]
  store i8 %.pre-phi.i, i8* %33, align 1, !tbaa !87
  %50 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %key)
  %51 = shl nuw nsw i32 %35, 6
  %52 = shl i32 %19, 23
  %53 = shl i32 %50, 14
  %54 = or i32 %52, %51
  %55 = or i32 %54, %53
  %56 = or i32 %55, 12
  %57 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %56) #3
  %58 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 0
  %59 = load i32* %58, align 4, !tbaa !92
  %60 = icmp eq i32 %59, 6
  br i1 %60, label %61, label %freeexp.exit2

; <label>:61                                      ; preds = %luaK_reserveregs.exit
  %62 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 1
  %63 = bitcast %union.anon.7* %62 to i32*
  %64 = load i32* %63, align 4, !tbaa !1
  %65 = and i32 %64, 256
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %freeexp.exit2

; <label>:67                                      ; preds = %61
  %68 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %69 = load i8* %68, align 1, !tbaa !96
  %70 = zext i8 %69 to i32
  %71 = icmp sgt i32 %70, %64
  br i1 %71, label %freeexp.exit2, label %72

; <label>:72                                      ; preds = %67
  %73 = load i8* %33, align 1, !tbaa !87
  %74 = add i8 %73, -1
  store i8 %74, i8* %33, align 1, !tbaa !87
  br label %freeexp.exit2

freeexp.exit2:                                    ; preds = %72, %67, %61, %luaK_reserveregs.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_goiftrue(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %31 [
    i32 10, label %3
    i32 4, label %luaK_concat.exit
    i32 5, label %luaK_concat.exit
    i32 2, label %luaK_concat.exit
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.anon.7* %4 to i32*
  %6 = load i32* %5, align 4, !tbaa !1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto.24** %8, align 8, !tbaa !82
  %10 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 4
  %11 = load i32** %10, align 8, !tbaa !83
  %12 = getelementptr inbounds i32* %11, i64 %7
  %13 = icmp sgt i32 %6, 0
  br i1 %13, label %14, label %22

; <label>:14                                      ; preds = %3
  %.sum.i.i = add i64 %7, -1
  %15 = getelementptr inbounds i32* %11, i64 %.sum.i.i
  %16 = load i32* %15, align 4, !tbaa !1
  %17 = and i32 %16, 63
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %18
  %20 = load i8* %19, align 1, !tbaa !86
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %invertjump.exit, label %22

; <label>:22                                      ; preds = %14, %3
  %.pre.i = load i32* %12, align 4, !tbaa !1
  br label %invertjump.exit

invertjump.exit:                                  ; preds = %22, %14
  %23 = phi i32 [ %.pre.i, %22 ], [ %16, %14 ]
  %.0.i.i = phi i32* [ %12, %22 ], [ %15, %14 ]
  %24 = and i32 %23, -16321
  %25 = and i32 %23, 16320
  %26 = icmp eq i32 %25, 0
  %27 = zext i1 %26 to i32
  %28 = shl nuw nsw i32 %27, 6
  %29 = or i32 %28, %24
  store i32 %29, i32* %.0.i.i, align 4, !tbaa !1
  %30 = load i32* %5, align 4, !tbaa !1
  br label %33

; <label>:31                                      ; preds = %0
  %32 = tail call fastcc i32 @jumponcond(%struct.FuncState* %fs, %struct.expdesc* %e, i32 0)
  br label %33

; <label>:33                                      ; preds = %31, %invertjump.exit
  %pc.0 = phi i32 [ %32, %31 ], [ %30, %invertjump.exit ]
  %34 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %35 = icmp eq i32 %pc.0, -1
  br i1 %35, label %luaK_concat.exit, label %36

; <label>:36                                      ; preds = %33
  %37 = load i32* %34, align 4, !tbaa !1
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %43, label %.preheader.i

.preheader.i:                                     ; preds = %36
  %39 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %40 = load %struct.Proto.24** %39, align 8, !tbaa !82
  %41 = getelementptr inbounds %struct.Proto.24* %40, i64 0, i32 4
  %42 = load i32** %41, align 8, !tbaa !83
  br label %44

; <label>:43                                      ; preds = %36
  store i32 %pc.0, i32* %34, align 4, !tbaa !1
  br label %luaK_concat.exit

; <label>:44                                      ; preds = %getjump.exit.i, %.preheader.i
  %list.0.i = phi i32 [ %52, %getjump.exit.i ], [ %37, %.preheader.i ]
  %45 = sext i32 %list.0.i to i64
  %46 = getelementptr inbounds i32* %42, i64 %45
  %47 = load i32* %46, align 4, !tbaa !1
  %48 = lshr i32 %47, 14
  %49 = add nsw i32 %48, -131071
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %getjump.exit.thread.i, label %getjump.exit.i

getjump.exit.i:                                   ; preds = %44
  %51 = add nsw i32 %list.0.i, 1
  %52 = add nsw i32 %51, %49
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %getjump.exit.thread.i, label %44

getjump.exit.thread.i:                            ; preds = %getjump.exit.i, %44
  %.neg.i.i = xor i32 %list.0.i, -1
  %54 = add i32 %pc.0, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %54, -1
  %neg.i.i = sub i32 0, %54
  %55 = select i1 %ispos.i.i, i32 %54, i32 %neg.i.i
  %56 = icmp sgt i32 %55, 131071
  br i1 %56, label %57, label %fixjump.exit.i

; <label>:57                                      ; preds = %getjump.exit.thread.i
  %58 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %59 = load %struct.LexState** %58, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %59, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %getjump.exit.thread.i
  %60 = and i32 %47, 16383
  %61 = shl i32 %54, 14
  %62 = add i32 %61, 2147467264
  %63 = or i32 %62, %60
  store i32 %63, i32* %46, align 4, !tbaa !1
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %fixjump.exit.i, %43, %33, %0, %0, %0
  %64 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %65 = load i32* %64, align 4, !tbaa !99
  %66 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %67 = load i32* %66, align 4, !tbaa !79
  %68 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %67, i32* %68, align 4, !tbaa !81
  %69 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %70 = icmp eq i32 %65, -1
  br i1 %70, label %luaK_patchtohere.exit, label %71

; <label>:71                                      ; preds = %luaK_concat.exit
  %72 = load i32* %69, align 4, !tbaa !1
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %78, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %71
  %74 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %75 = load %struct.Proto.24** %74, align 8, !tbaa !82
  %76 = getelementptr inbounds %struct.Proto.24* %75, i64 0, i32 4
  %77 = load i32** %76, align 8, !tbaa !83
  br label %79

; <label>:78                                      ; preds = %71
  store i32 %65, i32* %69, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

; <label>:79                                      ; preds = %getjump.exit.i.i, %.preheader.i.i
  %list.0.i.i = phi i32 [ %87, %getjump.exit.i.i ], [ %72, %.preheader.i.i ]
  %80 = sext i32 %list.0.i.i to i64
  %81 = getelementptr inbounds i32* %77, i64 %80
  %82 = load i32* %81, align 4, !tbaa !1
  %83 = lshr i32 %82, 14
  %84 = add nsw i32 %83, -131071
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %getjump.exit.thread.i.i, label %getjump.exit.i.i

getjump.exit.i.i:                                 ; preds = %79
  %86 = add nsw i32 %list.0.i.i, 1
  %87 = add nsw i32 %86, %84
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %getjump.exit.thread.i.i, label %79

getjump.exit.thread.i.i:                          ; preds = %getjump.exit.i.i, %79
  %.neg.i.i.i = xor i32 %list.0.i.i, -1
  %89 = add i32 %65, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %89, -1
  %neg.i.i.i = sub i32 0, %89
  %90 = select i1 %ispos.i.i.i, i32 %89, i32 %neg.i.i.i
  %91 = icmp sgt i32 %90, 131071
  br i1 %91, label %92, label %fixjump.exit.i.i

; <label>:92                                      ; preds = %getjump.exit.thread.i.i
  %93 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %94 = load %struct.LexState** %93, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %94, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i.i:                                 ; preds = %getjump.exit.thread.i.i
  %95 = and i32 %82, 16383
  %96 = shl i32 %89, 14
  %97 = add i32 %96, 2147467264
  %98 = or i32 %97, %95
  store i32 %98, i32* %81, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit:                            ; preds = %fixjump.exit.i.i, %78, %luaK_concat.exit
  store i32 -1, i32* %64, align 4, !tbaa !99
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_goiffalse(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e) #0 {
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %7 [
    i32 10, label %3
    i32 1, label %luaK_concat.exit
    i32 3, label %luaK_concat.exit
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.anon.7* %4 to i32*
  %6 = load i32* %5, align 4, !tbaa !1
  br label %9

; <label>:7                                       ; preds = %0
  %8 = tail call fastcc i32 @jumponcond(%struct.FuncState* %fs, %struct.expdesc* %e, i32 1)
  br label %9

; <label>:9                                       ; preds = %7, %3
  %pc.0 = phi i32 [ %8, %7 ], [ %6, %3 ]
  %10 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %11 = icmp eq i32 %pc.0, -1
  br i1 %11, label %luaK_concat.exit, label %12

; <label>:12                                      ; preds = %9
  %13 = load i32* %10, align 4, !tbaa !1
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %19, label %.preheader.i

.preheader.i:                                     ; preds = %12
  %15 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %16 = load %struct.Proto.24** %15, align 8, !tbaa !82
  %17 = getelementptr inbounds %struct.Proto.24* %16, i64 0, i32 4
  %18 = load i32** %17, align 8, !tbaa !83
  br label %20

; <label>:19                                      ; preds = %12
  store i32 %pc.0, i32* %10, align 4, !tbaa !1
  br label %luaK_concat.exit

; <label>:20                                      ; preds = %getjump.exit.i, %.preheader.i
  %list.0.i = phi i32 [ %28, %getjump.exit.i ], [ %13, %.preheader.i ]
  %21 = sext i32 %list.0.i to i64
  %22 = getelementptr inbounds i32* %18, i64 %21
  %23 = load i32* %22, align 4, !tbaa !1
  %24 = lshr i32 %23, 14
  %25 = add nsw i32 %24, -131071
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %getjump.exit.thread.i, label %getjump.exit.i

getjump.exit.i:                                   ; preds = %20
  %27 = add nsw i32 %list.0.i, 1
  %28 = add nsw i32 %27, %25
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %getjump.exit.thread.i, label %20

getjump.exit.thread.i:                            ; preds = %getjump.exit.i, %20
  %.neg.i.i = xor i32 %list.0.i, -1
  %30 = add i32 %pc.0, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %30, -1
  %neg.i.i = sub i32 0, %30
  %31 = select i1 %ispos.i.i, i32 %30, i32 %neg.i.i
  %32 = icmp sgt i32 %31, 131071
  br i1 %32, label %33, label %fixjump.exit.i

; <label>:33                                      ; preds = %getjump.exit.thread.i
  %34 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %35 = load %struct.LexState** %34, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %35, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %getjump.exit.thread.i
  %36 = and i32 %23, 16383
  %37 = shl i32 %30, 14
  %38 = add i32 %37, 2147467264
  %39 = or i32 %38, %36
  store i32 %39, i32* %22, align 4, !tbaa !1
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %fixjump.exit.i, %19, %9, %0, %0
  %40 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %41 = load i32* %40, align 4, !tbaa !100
  %42 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %43 = load i32* %42, align 4, !tbaa !79
  %44 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %43, i32* %44, align 4, !tbaa !81
  %45 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %46 = icmp eq i32 %41, -1
  br i1 %46, label %luaK_patchtohere.exit, label %47

; <label>:47                                      ; preds = %luaK_concat.exit
  %48 = load i32* %45, align 4, !tbaa !1
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %54, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %47
  %50 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %51 = load %struct.Proto.24** %50, align 8, !tbaa !82
  %52 = getelementptr inbounds %struct.Proto.24* %51, i64 0, i32 4
  %53 = load i32** %52, align 8, !tbaa !83
  br label %55

; <label>:54                                      ; preds = %47
  store i32 %41, i32* %45, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

; <label>:55                                      ; preds = %getjump.exit.i.i, %.preheader.i.i
  %list.0.i.i = phi i32 [ %63, %getjump.exit.i.i ], [ %48, %.preheader.i.i ]
  %56 = sext i32 %list.0.i.i to i64
  %57 = getelementptr inbounds i32* %53, i64 %56
  %58 = load i32* %57, align 4, !tbaa !1
  %59 = lshr i32 %58, 14
  %60 = add nsw i32 %59, -131071
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %getjump.exit.thread.i.i, label %getjump.exit.i.i

getjump.exit.i.i:                                 ; preds = %55
  %62 = add nsw i32 %list.0.i.i, 1
  %63 = add nsw i32 %62, %60
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %getjump.exit.thread.i.i, label %55

getjump.exit.thread.i.i:                          ; preds = %getjump.exit.i.i, %55
  %.neg.i.i.i = xor i32 %list.0.i.i, -1
  %65 = add i32 %41, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %65, -1
  %neg.i.i.i = sub i32 0, %65
  %66 = select i1 %ispos.i.i.i, i32 %65, i32 %neg.i.i.i
  %67 = icmp sgt i32 %66, 131071
  br i1 %67, label %68, label %fixjump.exit.i.i

; <label>:68                                      ; preds = %getjump.exit.thread.i.i
  %69 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %70 = load %struct.LexState** %69, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %70, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i.i:                                 ; preds = %getjump.exit.thread.i.i
  %71 = and i32 %58, 16383
  %72 = shl i32 %65, 14
  %73 = add i32 %72, 2147467264
  %74 = or i32 %73, %71
  store i32 %74, i32* %57, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit:                            ; preds = %fixjump.exit.i.i, %54, %luaK_concat.exit
  store i32 -1, i32* %40, align 4, !tbaa !100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_indexed(%struct.FuncState* %fs, %struct.expdesc* nocapture %t, %struct.expdesc* nocapture %k) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %t, i64 0, i32 1
  %2 = bitcast %union.anon.7* %1 to i32*
  %3 = load i32* %2, align 4, !tbaa !1
  %4 = trunc i32 %3 to i8
  %5 = bitcast %union.anon.7* %1 to %struct.anon.8*
  %6 = getelementptr inbounds %struct.anon.8* %5, i64 0, i32 1
  store i8 %4, i8* %6, align 1, !tbaa !98
  %7 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %k)
  %8 = trunc i32 %7 to i16
  %9 = bitcast %union.anon.7* %1 to i16*
  store i16 %8, i16* %9, align 2, !tbaa !94
  %10 = getelementptr inbounds %struct.expdesc* %t, i64 0, i32 0
  %11 = load i32* %10, align 4, !tbaa !92
  %12 = icmp eq i32 %11, 8
  %13 = select i1 %12, i8 8, i8 7
  %14 = getelementptr inbounds %struct.anon.8* %5, i64 0, i32 2
  store i8 %13, i8* %14, align 1, !tbaa !97
  store i32 9, i32* %10, align 4, !tbaa !92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_prefix(%struct.FuncState* %fs, i32 %op, %struct.expdesc* %e, i32 %line) #0 {
  %e2 = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 3
  store i32 -1, i32* %1, align 4, !tbaa !100
  %2 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 2
  store i32 -1, i32* %2, align 8, !tbaa !99
  %3 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 0
  store i32 5, i32* %3, align 8, !tbaa !92
  %4 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 1, i32 0
  store double 0.000000e+00, double* %4, align 8, !tbaa !30
  switch i32 %op, label %codenot.exit [
    i32 0, label %5
    i32 1, label %37
    i32 2, label %177
  ]

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %7 = load i32* %6, align 4, !tbaa !92
  %8 = icmp eq i32 %7, 5
  br i1 %8, label %9, label %.critedge

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %11 = load i32* %10, align 4, !tbaa !99
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %isnumeral.exit, label %.critedge

isnumeral.exit:                                   ; preds = %9
  %13 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %14 = load i32* %13, align 4, !tbaa !100
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %.critedge

; <label>:16                                      ; preds = %isnumeral.exit
  %17 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1, i32 0
  %18 = load double* %17, align 8, !tbaa !30
  %19 = fsub double -0.000000e+00, %18
  store double %19, double* %17, align 8, !tbaa !30
  br label %codenot.exit

.critedge:                                        ; preds = %isnumeral.exit, %9, %5
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %20 = load i32* %6, align 4, !tbaa !92
  %21 = icmp eq i32 %20, 6
  br i1 %21, label %22, label %._crit_edge.i

; <label>:22                                      ; preds = %.critedge
  %23 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %24 = load i32* %23, align 4, !tbaa !99
  %25 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %26 = load i32* %25, align 4, !tbaa !100
  %27 = icmp eq i32 %24, %26
  %28 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %29 = bitcast %union.anon.7* %28 to i32*
  %30 = load i32* %29, align 4, !tbaa !1
  br i1 %27, label %luaK_exp2anyreg.exit, label %31

; <label>:31                                      ; preds = %22
  %32 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %33 = load i8* %32, align 1, !tbaa !96
  %34 = zext i8 %33 to i32
  %35 = icmp slt i32 %30, %34
  br i1 %35, label %._crit_edge.i, label %36

; <label>:36                                      ; preds = %31
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %30) #3
  br label %luaK_exp2anyreg.exit

._crit_edge.i:                                    ; preds = %31, %.critedge
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  br label %luaK_exp2anyreg.exit

luaK_exp2anyreg.exit:                             ; preds = %._crit_edge.i, %36, %22
  call fastcc void @codearith(%struct.FuncState* %fs, i32 19, %struct.expdesc* %e, %struct.expdesc* %e2, i32 %line)
  br label %codenot.exit

; <label>:37                                      ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %38 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %39 = load i32* %38, align 4, !tbaa !92
  switch i32 %39, label %109 [
    i32 1, label %40
    i32 3, label %40
    i32 4, label %41
    i32 5, label %41
    i32 2, label %41
    i32 10, label %42
    i32 6, label %discharge2anyreg.exit.thread.i
    i32 11, label %69
  ]

; <label>:40                                      ; preds = %37, %37
  store i32 2, i32* %38, align 4, !tbaa !92
  br label %109

; <label>:41                                      ; preds = %37, %37, %37
  store i32 3, i32* %38, align 4, !tbaa !92
  br label %109

; <label>:42                                      ; preds = %37
  %43 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %44 = bitcast %union.anon.7* %43 to i32*
  %45 = load i32* %44, align 4, !tbaa !1
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %48 = load %struct.Proto.24** %47, align 8, !tbaa !82
  %49 = getelementptr inbounds %struct.Proto.24* %48, i64 0, i32 4
  %50 = load i32** %49, align 8, !tbaa !83
  %51 = getelementptr inbounds i32* %50, i64 %46
  %52 = icmp sgt i32 %45, 0
  br i1 %52, label %53, label %61

; <label>:53                                      ; preds = %42
  %.sum.i.i.i = add i64 %46, -1
  %54 = getelementptr inbounds i32* %50, i64 %.sum.i.i.i
  %55 = load i32* %54, align 4, !tbaa !1
  %56 = and i32 %55, 63
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %57
  %59 = load i8* %58, align 1, !tbaa !86
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %invertjump.exit.i, label %61

; <label>:61                                      ; preds = %53, %42
  %.pre.i.i = load i32* %51, align 4, !tbaa !1
  br label %invertjump.exit.i

invertjump.exit.i:                                ; preds = %61, %53
  %62 = phi i32 [ %.pre.i.i, %61 ], [ %55, %53 ]
  %.0.i.i.i = phi i32* [ %51, %61 ], [ %54, %53 ]
  %63 = and i32 %62, -16321
  %64 = and i32 %62, 16320
  %65 = icmp eq i32 %64, 0
  %66 = zext i1 %65 to i32
  %67 = shl nuw nsw i32 %66, 6
  %68 = or i32 %67, %63
  store i32 %68, i32* %.0.i.i.i, align 4, !tbaa !1
  br label %109

; <label>:69                                      ; preds = %37
  %70 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %71 = load i8* %70, align 1, !tbaa !87
  %72 = zext i8 %71 to i32
  %73 = add nsw i32 %72, 1
  %74 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %75 = load %struct.Proto.24** %74, align 8, !tbaa !82
  %76 = getelementptr inbounds %struct.Proto.24* %75, i64 0, i32 22
  %77 = load i8* %76, align 1, !tbaa !88
  %78 = zext i8 %77 to i32
  %79 = icmp ugt i32 %73, %78
  br i1 %79, label %80, label %.luaK_checkstack.exit_crit_edge.i.i.i

.luaK_checkstack.exit_crit_edge.i.i.i:            ; preds = %69
  %.pre.i.i14.i = trunc i32 %73 to i8
  br label %discharge2anyreg.exit.i

; <label>:80                                      ; preds = %69
  %81 = icmp ugt i32 %73, 249
  br i1 %81, label %82, label %85

; <label>:82                                      ; preds = %80
  %83 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %84 = load %struct.LexState** %83, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %84, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:85                                      ; preds = %80
  %86 = trunc i32 %73 to i8
  store i8 %86, i8* %76, align 1, !tbaa !88
  br label %discharge2anyreg.exit.i

discharge2anyreg.exit.i:                          ; preds = %85, %.luaK_checkstack.exit_crit_edge.i.i.i
  %.pre-phi.i.i.i = phi i8 [ %.pre.i.i14.i, %.luaK_checkstack.exit_crit_edge.i.i.i ], [ %86, %85 ]
  store i8 %.pre-phi.i.i.i, i8* %70, align 1, !tbaa !87
  %87 = zext i8 %.pre-phi.i.i.i to i32
  %88 = add nsw i32 %87, -1
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %88) #3
  %.pre.i1 = load i32* %38, align 4, !tbaa !92
  %phitmp.i = icmp eq i32 %.pre.i1, 6
  br i1 %phitmp.i, label %discharge2anyreg.exit.thread.i, label %discharge2anyreg.exit.freeexp.exit_crit_edge.i

discharge2anyreg.exit.freeexp.exit_crit_edge.i:   ; preds = %discharge2anyreg.exit.i
  %.phi.trans.insert.i = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %.phi.trans.insert15.i = bitcast %union.anon.7* %.phi.trans.insert.i to i32*
  %.pre16.i = load i32* %.phi.trans.insert15.i, align 4, !tbaa !1
  br label %freeexp.exit.i

discharge2anyreg.exit.thread.i:                   ; preds = %discharge2anyreg.exit.i, %37
  %89 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %90 = bitcast %union.anon.7* %89 to i32*
  %91 = load i32* %90, align 4, !tbaa !1
  %92 = and i32 %91, 256
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %freeexp.exit.i

; <label>:94                                      ; preds = %discharge2anyreg.exit.thread.i
  %95 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %96 = load i8* %95, align 1, !tbaa !96
  %97 = zext i8 %96 to i32
  %98 = icmp sgt i32 %97, %91
  br i1 %98, label %freeexp.exit.i, label %99

; <label>:99                                      ; preds = %94
  %100 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %101 = load i8* %100, align 1, !tbaa !87
  %102 = add i8 %101, -1
  store i8 %102, i8* %100, align 1, !tbaa !87
  br label %freeexp.exit.i

freeexp.exit.i:                                   ; preds = %99, %94, %discharge2anyreg.exit.thread.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i
  %103 = phi i32 [ %.pre16.i, %discharge2anyreg.exit.freeexp.exit_crit_edge.i ], [ %91, %discharge2anyreg.exit.thread.i ], [ %91, %94 ], [ %91, %99 ]
  %104 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %105 = bitcast %union.anon.7* %104 to i32*
  %106 = shl i32 %103, 23
  %107 = or i32 %106, 20
  %108 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %107) #3
  store i32 %108, i32* %105, align 4, !tbaa !1
  store i32 11, i32* %38, align 4, !tbaa !92
  br label %109

; <label>:109                                     ; preds = %freeexp.exit.i, %invertjump.exit.i, %41, %40, %37
  %110 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %111 = load i32* %110, align 4, !tbaa !100
  %112 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %113 = load i32* %112, align 4, !tbaa !99
  store i32 %113, i32* %110, align 4, !tbaa !100
  store i32 %111, i32* %112, align 4, !tbaa !99
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %removevalues.exit13.i, label %.lr.ph.i5.i

.lr.ph.i5.i:                                      ; preds = %109
  %115 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %.pre.i2.i = load %struct.Proto.24** %115, align 8, !tbaa !82
  %.phi.trans.insert.i3.i = getelementptr inbounds %struct.Proto.24* %.pre.i2.i, i64 0, i32 4
  %.pre3.i4.i = load i32** %.phi.trans.insert.i3.i, align 8, !tbaa !83
  br label %116

; <label>:116                                     ; preds = %getjump.exit.backedge.i12.i, %.lr.ph.i5.i
  %.02.i6.i = phi i32 [ %113, %.lr.ph.i5.i ], [ %143, %getjump.exit.backedge.i12.i ]
  %117 = sext i32 %.02.i6.i to i64
  %118 = getelementptr inbounds i32* %.pre3.i4.i, i64 %117
  %119 = icmp sgt i32 %.02.i6.i, 0
  br i1 %119, label %120, label %128

; <label>:120                                     ; preds = %116
  %.sum.i.i.i7.i = add i64 %117, -1
  %121 = getelementptr inbounds i32* %.pre3.i4.i, i64 %.sum.i.i.i7.i
  %122 = load i32* %121, align 4, !tbaa !1
  %123 = and i32 %122, 63
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %124
  %126 = load i8* %125, align 1, !tbaa !86
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %getjumpcontrol.exit.i.i10.i, label %128

; <label>:128                                     ; preds = %120, %116
  %.pre.i.i8.i = load i32* %118, align 4, !tbaa !1
  br label %getjumpcontrol.exit.i.i10.i

getjumpcontrol.exit.i.i10.i:                      ; preds = %128, %120
  %129 = phi i32 [ %.pre.i.i8.i, %128 ], [ %122, %120 ]
  %.0.i.i.i9.i = phi i32* [ %118, %128 ], [ %121, %120 ]
  %130 = and i32 %129, 63
  %131 = icmp eq i32 %130, 28
  br i1 %131, label %132, label %patchtestreg.exit.i11.i

; <label>:132                                     ; preds = %getjumpcontrol.exit.i.i10.i
  %133 = lshr i32 %129, 23
  %134 = shl nuw nsw i32 %133, 6
  %135 = and i32 %129, 8372224
  %136 = or i32 %135, %134
  %137 = or i32 %136, 27
  store i32 %137, i32* %.0.i.i.i9.i, align 4, !tbaa !1
  br label %patchtestreg.exit.i11.i

patchtestreg.exit.i11.i:                          ; preds = %132, %getjumpcontrol.exit.i.i10.i
  %138 = load i32* %118, align 4, !tbaa !1
  %139 = lshr i32 %138, 14
  %140 = add nsw i32 %139, -131071
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %removevalues.exit13thread-pre-split.i, label %getjump.exit.backedge.i12.i

getjump.exit.backedge.i12.i:                      ; preds = %patchtestreg.exit.i11.i
  %142 = add nsw i32 %.02.i6.i, 1
  %143 = add nsw i32 %142, %140
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %removevalues.exit13thread-pre-split.i, label %116

removevalues.exit13thread-pre-split.i:            ; preds = %getjump.exit.backedge.i12.i, %patchtestreg.exit.i11.i
  %.pr.i = load i32* %112, align 4, !tbaa !99
  br label %removevalues.exit13.i

removevalues.exit13.i:                            ; preds = %removevalues.exit13thread-pre-split.i, %109
  %145 = phi i32 [ %.pr.i, %removevalues.exit13thread-pre-split.i ], [ %111, %109 ]
  %146 = icmp eq i32 %145, -1
  br i1 %146, label %codenot.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %removevalues.exit13.i
  %147 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %.pre.i1.i = load %struct.Proto.24** %147, align 8, !tbaa !82
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Proto.24* %.pre.i1.i, i64 0, i32 4
  %.pre3.i.i = load i32** %.phi.trans.insert.i.i, align 8, !tbaa !83
  br label %148

; <label>:148                                     ; preds = %getjump.exit.backedge.i.i, %.lr.ph.i.i
  %.02.i.i = phi i32 [ %145, %.lr.ph.i.i ], [ %175, %getjump.exit.backedge.i.i ]
  %149 = sext i32 %.02.i.i to i64
  %150 = getelementptr inbounds i32* %.pre3.i.i, i64 %149
  %151 = icmp sgt i32 %.02.i.i, 0
  br i1 %151, label %152, label %160

; <label>:152                                     ; preds = %148
  %.sum.i.i.i.i = add i64 %149, -1
  %153 = getelementptr inbounds i32* %.pre3.i.i, i64 %.sum.i.i.i.i
  %154 = load i32* %153, align 4, !tbaa !1
  %155 = and i32 %154, 63
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %156
  %158 = load i8* %157, align 1, !tbaa !86
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %getjumpcontrol.exit.i.i.i, label %160

; <label>:160                                     ; preds = %152, %148
  %.pre.i.i.i = load i32* %150, align 4, !tbaa !1
  br label %getjumpcontrol.exit.i.i.i

getjumpcontrol.exit.i.i.i:                        ; preds = %160, %152
  %161 = phi i32 [ %.pre.i.i.i, %160 ], [ %154, %152 ]
  %.0.i.i.i.i = phi i32* [ %150, %160 ], [ %153, %152 ]
  %162 = and i32 %161, 63
  %163 = icmp eq i32 %162, 28
  br i1 %163, label %164, label %patchtestreg.exit.i.i

; <label>:164                                     ; preds = %getjumpcontrol.exit.i.i.i
  %165 = lshr i32 %161, 23
  %166 = shl nuw nsw i32 %165, 6
  %167 = and i32 %161, 8372224
  %168 = or i32 %167, %166
  %169 = or i32 %168, 27
  store i32 %169, i32* %.0.i.i.i.i, align 4, !tbaa !1
  br label %patchtestreg.exit.i.i

patchtestreg.exit.i.i:                            ; preds = %164, %getjumpcontrol.exit.i.i.i
  %170 = load i32* %150, align 4, !tbaa !1
  %171 = lshr i32 %170, 14
  %172 = add nsw i32 %171, -131071
  %173 = icmp eq i32 %172, -1
  br i1 %173, label %codenot.exit, label %getjump.exit.backedge.i.i

getjump.exit.backedge.i.i:                        ; preds = %patchtestreg.exit.i.i
  %174 = add nsw i32 %.02.i.i, 1
  %175 = add nsw i32 %174, %172
  %176 = icmp eq i32 %175, -1
  br i1 %176, label %codenot.exit, label %148

; <label>:177                                     ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  %178 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %179 = load i32* %178, align 4, !tbaa !92
  %180 = icmp eq i32 %179, 6
  br i1 %180, label %181, label %._crit_edge.i4

; <label>:181                                     ; preds = %177
  %182 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  %183 = load i32* %182, align 4, !tbaa !99
  %184 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %185 = load i32* %184, align 4, !tbaa !100
  %186 = icmp eq i32 %183, %185
  %187 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %188 = bitcast %union.anon.7* %187 to i32*
  %189 = load i32* %188, align 4, !tbaa !1
  br i1 %186, label %luaK_exp2anyreg.exit7, label %190

; <label>:190                                     ; preds = %181
  %191 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %192 = load i8* %191, align 1, !tbaa !96
  %193 = zext i8 %192 to i32
  %194 = icmp slt i32 %189, %193
  br i1 %194, label %._crit_edge.i4, label %195

; <label>:195                                     ; preds = %190
  tail call fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %189) #3
  br label %luaK_exp2anyreg.exit7

._crit_edge.i4:                                   ; preds = %190, %177
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e) #3
  br label %luaK_exp2anyreg.exit7

luaK_exp2anyreg.exit7:                            ; preds = %._crit_edge.i4, %195, %181
  call fastcc void @codearith(%struct.FuncState* %fs, i32 21, %struct.expdesc* %e, %struct.expdesc* %e2, i32 %line)
  br label %codenot.exit

codenot.exit:                                     ; preds = %luaK_exp2anyreg.exit7, %getjump.exit.backedge.i.i, %patchtestreg.exit.i.i, %removevalues.exit13.i, %luaK_exp2anyreg.exit, %16, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_infix(%struct.FuncState* %fs, i32 %op, %struct.expdesc* nocapture %v) #0 {
  switch i32 %op, label %16 [
    i32 13, label %1
    i32 14, label %2
    i32 6, label %3
    i32 0, label %4
    i32 1, label %4
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %4
  ]

; <label>:1                                       ; preds = %0
  tail call void @luaK_goiftrue(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %18

; <label>:2                                       ; preds = %0
  tail call void @luaK_goiffalse(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %18

; <label>:3                                       ; preds = %0
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %18

; <label>:4                                       ; preds = %0, %0, %0, %0, %0, %0
  %5 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  %6 = load i32* %5, align 4, !tbaa !92
  %7 = icmp eq i32 %6, 5
  br i1 %7, label %8, label %.critedge

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  %10 = load i32* %9, align 4, !tbaa !99
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %isnumeral.exit, label %.critedge

isnumeral.exit:                                   ; preds = %8
  %12 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  %13 = load i32* %12, align 4, !tbaa !100
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %18, label %.critedge

.critedge:                                        ; preds = %isnumeral.exit, %8, %4
  %15 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %18

; <label>:16                                      ; preds = %0
  %17 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %v)
  br label %18

; <label>:18                                      ; preds = %16, %.critedge, %isnumeral.exit, %3, %2, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_posfix(%struct.FuncState* %fs, i32 %op, %struct.expdesc* nocapture %e1, %struct.expdesc* nocapture %e2, i32 %line) #0 {
  switch i32 %op, label %119 [
    i32 13, label %1
    i32 14, label %36
    i32 6, label %71
    i32 0, label %113
    i32 1, label %113
    i32 2, label %113
    i32 3, label %113
    i32 4, label %113
    i32 5, label %113
    i32 7, label %115
    i32 8, label %115
    i32 9, label %115
    i32 10, label %117
    i32 11, label %117
    i32 12, label %117
  ]

; <label>:1                                       ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e2)
  %2 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 3
  %3 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 3
  %4 = load i32* %3, align 4, !tbaa !100
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %luaK_concat.exit, label %6

; <label>:6                                       ; preds = %1
  %7 = load i32* %2, align 4, !tbaa !1
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %13, label %.preheader.i

.preheader.i:                                     ; preds = %6
  %9 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %10 = load %struct.Proto.24** %9, align 8, !tbaa !82
  %11 = getelementptr inbounds %struct.Proto.24* %10, i64 0, i32 4
  %12 = load i32** %11, align 8, !tbaa !83
  br label %14

; <label>:13                                      ; preds = %6
  store i32 %4, i32* %2, align 4, !tbaa !1
  br label %luaK_concat.exit

; <label>:14                                      ; preds = %getjump.exit.i, %.preheader.i
  %list.0.i = phi i32 [ %22, %getjump.exit.i ], [ %7, %.preheader.i ]
  %15 = sext i32 %list.0.i to i64
  %16 = getelementptr inbounds i32* %12, i64 %15
  %17 = load i32* %16, align 4, !tbaa !1
  %18 = lshr i32 %17, 14
  %19 = add nsw i32 %18, -131071
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %getjump.exit.thread.i, label %getjump.exit.i

getjump.exit.i:                                   ; preds = %14
  %21 = add nsw i32 %list.0.i, 1
  %22 = add nsw i32 %21, %19
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %getjump.exit.thread.i, label %14

getjump.exit.thread.i:                            ; preds = %getjump.exit.i, %14
  %.neg.i.i = xor i32 %list.0.i, -1
  %24 = add i32 %4, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %24, -1
  %neg.i.i = sub i32 0, %24
  %25 = select i1 %ispos.i.i, i32 %24, i32 %neg.i.i
  %26 = icmp sgt i32 %25, 131071
  br i1 %26, label %27, label %fixjump.exit.i

; <label>:27                                      ; preds = %getjump.exit.thread.i
  %28 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %29 = load %struct.LexState** %28, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %29, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %getjump.exit.thread.i
  %30 = and i32 %17, 16383
  %31 = shl i32 %24, 14
  %32 = add i32 %31, 2147467264
  %33 = or i32 %32, %30
  store i32 %33, i32* %16, align 4, !tbaa !1
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %fixjump.exit.i, %13, %1
  %34 = bitcast %struct.expdesc* %e1 to i8*
  %35 = bitcast %struct.expdesc* %e2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 24, i32 8, i1 false), !tbaa.struct !103
  br label %119

; <label>:36                                      ; preds = %0
  tail call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e2)
  %37 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 2
  %38 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 2
  %39 = load i32* %38, align 4, !tbaa !99
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %luaK_concat.exit9, label %41

; <label>:41                                      ; preds = %36
  %42 = load i32* %37, align 4, !tbaa !1
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %48, label %.preheader.i1

.preheader.i1:                                    ; preds = %41
  %44 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %45 = load %struct.Proto.24** %44, align 8, !tbaa !82
  %46 = getelementptr inbounds %struct.Proto.24* %45, i64 0, i32 4
  %47 = load i32** %46, align 8, !tbaa !83
  br label %49

; <label>:48                                      ; preds = %41
  store i32 %39, i32* %37, align 4, !tbaa !1
  br label %luaK_concat.exit9

; <label>:49                                      ; preds = %getjump.exit.i3, %.preheader.i1
  %list.0.i2 = phi i32 [ %57, %getjump.exit.i3 ], [ %42, %.preheader.i1 ]
  %50 = sext i32 %list.0.i2 to i64
  %51 = getelementptr inbounds i32* %47, i64 %50
  %52 = load i32* %51, align 4, !tbaa !1
  %53 = lshr i32 %52, 14
  %54 = add nsw i32 %53, -131071
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %getjump.exit.thread.i7, label %getjump.exit.i3

getjump.exit.i3:                                  ; preds = %49
  %56 = add nsw i32 %list.0.i2, 1
  %57 = add nsw i32 %56, %54
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %getjump.exit.thread.i7, label %49

getjump.exit.thread.i7:                           ; preds = %getjump.exit.i3, %49
  %.neg.i.i4 = xor i32 %list.0.i2, -1
  %59 = add i32 %39, %.neg.i.i4
  %ispos.i.i5 = icmp sgt i32 %59, -1
  %neg.i.i6 = sub i32 0, %59
  %60 = select i1 %ispos.i.i5, i32 %59, i32 %neg.i.i6
  %61 = icmp sgt i32 %60, 131071
  br i1 %61, label %62, label %fixjump.exit.i8

; <label>:62                                      ; preds = %getjump.exit.thread.i7
  %63 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %64 = load %struct.LexState** %63, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %64, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i8:                                  ; preds = %getjump.exit.thread.i7
  %65 = and i32 %52, 16383
  %66 = shl i32 %59, 14
  %67 = add i32 %66, 2147467264
  %68 = or i32 %67, %65
  store i32 %68, i32* %51, align 4, !tbaa !1
  br label %luaK_concat.exit9

luaK_concat.exit9:                                ; preds = %fixjump.exit.i8, %48, %36
  %69 = bitcast %struct.expdesc* %e1 to i8*
  %70 = bitcast %struct.expdesc* %e2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 24, i32 8, i1 false), !tbaa.struct !103
  br label %119

; <label>:71                                      ; preds = %0
  tail call void @luaK_exp2val(%struct.FuncState* %fs, %struct.expdesc* %e2)
  %72 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 0
  %73 = load i32* %72, align 4, !tbaa !92
  %74 = icmp eq i32 %73, 11
  br i1 %74, label %75, label %112

; <label>:75                                      ; preds = %71
  %76 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 1
  %77 = bitcast %union.anon.7* %76 to i32*
  %78 = load i32* %77, align 4, !tbaa !1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %81 = load %struct.Proto.24** %80, align 8, !tbaa !82
  %82 = getelementptr inbounds %struct.Proto.24* %81, i64 0, i32 4
  %83 = load i32** %82, align 8, !tbaa !83
  %84 = getelementptr inbounds i32* %83, i64 %79
  %85 = load i32* %84, align 4, !tbaa !1
  %86 = and i32 %85, 63
  %87 = icmp eq i32 %86, 22
  br i1 %87, label %88, label %112

; <label>:88                                      ; preds = %75
  %89 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 0
  %90 = load i32* %89, align 4, !tbaa !92
  %91 = icmp eq i32 %90, 6
  %92 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1
  %93 = bitcast %union.anon.7* %92 to i32*
  %94 = load i32* %93, align 4, !tbaa !1
  %95 = and i32 %94, 256
  %96 = icmp eq i32 %95, 0
  %or.cond = and i1 %91, %96
  br i1 %or.cond, label %97, label %freeexp.exit

; <label>:97                                      ; preds = %88
  %98 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %99 = load i8* %98, align 1, !tbaa !96
  %100 = zext i8 %99 to i32
  %101 = icmp sgt i32 %100, %94
  br i1 %101, label %freeexp.exit, label %102

; <label>:102                                     ; preds = %97
  %103 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %104 = load i8* %103, align 1, !tbaa !87
  %105 = add i8 %104, -1
  store i8 %105, i8* %103, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %102, %97, %88
  %106 = and i32 %85, 8388607
  %107 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1
  %108 = bitcast %union.anon.7* %107 to i32*
  %109 = shl i32 %94, 23
  %110 = or i32 %109, %106
  store i32 %110, i32* %84, align 4, !tbaa !1
  store i32 11, i32* %89, align 4, !tbaa !92
  %111 = load i32* %77, align 4, !tbaa !1
  store i32 %111, i32* %108, align 4, !tbaa !1
  br label %119

; <label>:112                                     ; preds = %75, %71
  tail call void @luaK_exp2nextreg(%struct.FuncState* %fs, %struct.expdesc* %e2)
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 22, %struct.expdesc* %e1, %struct.expdesc* %e2, i32 %line)
  br label %119

; <label>:113                                     ; preds = %0, %0, %0, %0, %0, %0
  %114 = add i32 %op, 13
  tail call fastcc void @codearith(%struct.FuncState* %fs, i32 %114, %struct.expdesc* %e1, %struct.expdesc* %e2, i32 %line)
  br label %119

; <label>:115                                     ; preds = %0, %0, %0
  %116 = add i32 %op, 17
  tail call fastcc void @codecomp(%struct.FuncState* %fs, i32 %116, i32 1, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %119

; <label>:117                                     ; preds = %0, %0, %0
  %118 = add i32 %op, 14
  tail call fastcc void @codecomp(%struct.FuncState* %fs, i32 %118, i32 0, %struct.expdesc* %e1, %struct.expdesc* %e2)
  br label %119

; <label>:119                                     ; preds = %117, %115, %113, %112, %freeexp.exit, %luaK_concat.exit9, %luaK_concat.exit, %0
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind ssp uwtable
define void @luaK_fixline(%struct.FuncState* nocapture readonly %fs, i32 %line) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %2 = load i32* %1, align 4, !tbaa !79
  %3 = add nsw i32 %2, -1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %6 = load %struct.Proto.24** %5, align 8, !tbaa !82
  %7 = getelementptr inbounds %struct.Proto.24* %6, i64 0, i32 6
  %8 = load i32** %7, align 8, !tbaa !105
  %9 = getelementptr inbounds i32* %8, i64 %4
  store i32 %line, i32* %9, align 4, !tbaa !1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaK_setlist(%struct.FuncState* nocapture %fs, i32 %base, i32 %nelems, i32 %tostore) #0 {
  %1 = add nsw i32 %nelems, -1
  %2 = sdiv i32 %1, 50
  %3 = add nsw i32 %2, 1
  %4 = icmp eq i32 %tostore, -1
  %5 = select i1 %4, i32 0, i32 %tostore
  %6 = icmp slt i32 %3, 512
  br i1 %6, label %7, label %15

; <label>:7                                       ; preds = %0
  %8 = shl i32 %base, 6
  %9 = shl i32 %5, 23
  %10 = shl i32 %3, 14
  %11 = or i32 %8, %9
  %12 = or i32 %11, %10
  %13 = or i32 %12, 36
  %14 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %13) #3
  br label %29

; <label>:15                                      ; preds = %0
  %16 = icmp slt i32 %3, 67108864
  br i1 %16, label %17, label %26

; <label>:17                                      ; preds = %15
  %18 = shl i32 %base, 6
  %19 = shl i32 %5, 23
  %20 = or i32 %18, %19
  %21 = or i32 %20, 36
  %22 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %21) #3
  %23 = shl i32 %3, 6
  %24 = or i32 %23, 39
  %25 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %24) #3
  br label %29

; <label>:26                                      ; preds = %15
  %27 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %28 = load %struct.LexState** %27, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %28, i8* getelementptr inbounds ([21 x i8]* @.str13, i64 0, i64 0)) #13
  unreachable

; <label>:29                                      ; preds = %17, %7
  %30 = add nsw i32 %base, 1
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  store i8 %31, i8* %32, align 1, !tbaa !87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @luaK_code(%struct.FuncState* nocapture %fs, i32 %i) #0 {
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %2 = load %struct.Proto.24** %1, align 8, !tbaa !82
  %3 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %4 = load i32* %3, align 4, !tbaa !84
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %6 = load i32* %5, align 4, !tbaa !79
  %7 = icmp eq i32 %4, -1
  br i1 %7, label %dischargejpc.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %0
  %.phi.trans.insert.i = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 4
  %.pre6.i = load i32** %.phi.trans.insert.i, align 8, !tbaa !83
  br label %8

; <label>:8                                       ; preds = %.backedge.i.i, %.lr.ph.i.i
  %.01.i.i = phi i32 [ %4, %.lr.ph.i.i ], [ %.0.i.i.i, %.backedge.i.i ]
  %9 = sext i32 %.01.i.i to i64
  %10 = getelementptr inbounds i32* %.pre6.i, i64 %9
  %11 = load i32* %10, align 4, !tbaa !1
  %12 = lshr i32 %11, 14
  %13 = add nsw i32 %12, -131071
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %getjump.exit.i.i, label %15

; <label>:15                                      ; preds = %8
  %16 = add nsw i32 %.01.i.i, 1
  %17 = add nsw i32 %16, %13
  br label %getjump.exit.i.i

getjump.exit.i.i:                                 ; preds = %15, %8
  %.0.i.i.i = phi i32 [ %17, %15 ], [ -1, %8 ]
  %18 = icmp sgt i32 %.01.i.i, 0
  br i1 %18, label %19, label %27

; <label>:19                                      ; preds = %getjump.exit.i.i
  %.sum.i.i.i = add i64 %9, -1
  %20 = getelementptr inbounds i32* %.pre6.i, i64 %.sum.i.i.i
  %21 = load i32* %20, align 4, !tbaa !1
  %22 = and i32 %21, 63
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %23
  %25 = load i8* %24, align 1, !tbaa !86
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %getjumpcontrol.exit.i.i, label %27

; <label>:27                                      ; preds = %19, %getjump.exit.i.i
  br label %getjumpcontrol.exit.i.i

getjumpcontrol.exit.i.i:                          ; preds = %27, %19
  %28 = phi i32 [ %11, %27 ], [ %21, %19 ]
  %.0.i.i5.i = phi i32* [ %10, %27 ], [ %20, %19 ]
  %29 = and i32 %28, 63
  %30 = icmp eq i32 %29, 28
  br i1 %30, label %31, label %48

; <label>:31                                      ; preds = %getjumpcontrol.exit.i.i
  %32 = lshr i32 %28, 23
  %33 = shl nuw nsw i32 %32, 6
  %34 = and i32 %28, 8372224
  %35 = or i32 %34, %33
  %36 = or i32 %35, 27
  store i32 %36, i32* %.0.i.i5.i, align 4, !tbaa !1
  %.neg.i.i = xor i32 %.01.i.i, -1
  %37 = add i32 %6, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %37, -1
  %neg.i.i = sub i32 0, %37
  %38 = select i1 %ispos.i.i, i32 %37, i32 %neg.i.i
  %39 = icmp sgt i32 %38, 131071
  br i1 %39, label %40, label %fixjump.exit.i

; <label>:40                                      ; preds = %31
  %41 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %42 = load %struct.LexState** %41, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %42, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %31
  %43 = load i32* %10, align 4, !tbaa !1
  %44 = and i32 %43, 16383
  %45 = shl i32 %37, 14
  %46 = add i32 %45, 2147467264
  %47 = or i32 %44, %46
  br label %.backedge.i.i

; <label>:48                                      ; preds = %getjumpcontrol.exit.i.i
  %.neg.i1.i = xor i32 %.01.i.i, -1
  %49 = add i32 %6, %.neg.i1.i
  %ispos.i2.i = icmp sgt i32 %49, -1
  %neg.i3.i = sub i32 0, %49
  %50 = select i1 %ispos.i2.i, i32 %49, i32 %neg.i3.i
  %51 = icmp sgt i32 %50, 131071
  br i1 %51, label %52, label %fixjump.exit4.i

; <label>:52                                      ; preds = %48
  %53 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %54 = load %struct.LexState** %53, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %54, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit4.i:                                  ; preds = %48
  %55 = and i32 %11, 16383
  %56 = shl i32 %49, 14
  %57 = add i32 %56, 2147467264
  %58 = or i32 %57, %55
  br label %.backedge.i.i

.backedge.i.i:                                    ; preds = %fixjump.exit4.i, %fixjump.exit.i
  %storemerge.i = phi i32 [ %58, %fixjump.exit4.i ], [ %47, %fixjump.exit.i ]
  store i32 %storemerge.i, i32* %10, align 4, !tbaa !1
  %59 = icmp eq i32 %.0.i.i.i, -1
  br i1 %59, label %dischargejpc.exit.loopexit, label %8

dischargejpc.exit.loopexit:                       ; preds = %.backedge.i.i
  %.pre = load i32* %5, align 4, !tbaa !79
  br label %dischargejpc.exit

dischargejpc.exit:                                ; preds = %dischargejpc.exit.loopexit, %0
  %60 = phi i32 [ %.pre, %dischargejpc.exit.loopexit ], [ %6, %0 ]
  store i32 -1, i32* %3, align 4, !tbaa !84
  %61 = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 13
  %62 = load i32* %61, align 4, !tbaa !106
  %63 = icmp slt i32 %60, %62
  br i1 %63, label %dischargejpc.exit._crit_edge, label %64

dischargejpc.exit._crit_edge:                     ; preds = %dischargejpc.exit
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 4
  %.pre2 = load i32** %.phi.trans.insert, align 8, !tbaa !83
  br label %74

; <label>:64                                      ; preds = %dischargejpc.exit
  %65 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %66 = load %struct.LexState** %65, align 8, !tbaa !85
  %67 = getelementptr inbounds %struct.LexState* %66, i64 0, i32 6
  %68 = load %struct.lua_State.18** %67, align 8, !tbaa !89
  %69 = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 4
  %70 = load i32** %69, align 8, !tbaa !83
  %71 = bitcast i32* %70 to i8*
  %72 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.18*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.18* %68, i8* %71, i32* %61, i64 4, i32 2147483645, i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0)) #3
  %73 = bitcast i8* %72 to i32*
  store i32* %73, i32** %69, align 8, !tbaa !83
  %.pre1 = load i32* %5, align 4, !tbaa !79
  br label %74

; <label>:74                                      ; preds = %64, %dischargejpc.exit._crit_edge
  %75 = phi i32* [ %.pre2, %dischargejpc.exit._crit_edge ], [ %73, %64 ]
  %76 = phi i32 [ %60, %dischargejpc.exit._crit_edge ], [ %.pre1, %64 ]
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32* %75, i64 %77
  store i32 %i, i32* %78, align 4, !tbaa !1
  %79 = load i32* %5, align 4, !tbaa !79
  %80 = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 14
  %81 = load i32* %80, align 4, !tbaa !107
  %82 = icmp slt i32 %79, %81
  %.pre4 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  br i1 %82, label %._crit_edge, label %83

._crit_edge:                                      ; preds = %74
  %.pre5 = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 6
  br label %92

; <label>:83                                      ; preds = %74
  %84 = load %struct.LexState** %.pre4, align 8, !tbaa !85
  %85 = getelementptr inbounds %struct.LexState* %84, i64 0, i32 6
  %86 = load %struct.lua_State.18** %85, align 8, !tbaa !89
  %87 = getelementptr inbounds %struct.Proto.24* %2, i64 0, i32 6
  %88 = load i32** %87, align 8, !tbaa !105
  %89 = bitcast i32* %88 to i8*
  %90 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.18*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.18* %86, i8* %89, i32* %80, i64 4, i32 2147483645, i8* getelementptr inbounds ([8 x i8]* @.str3, i64 0, i64 0)) #3
  %91 = bitcast i8* %90 to i32*
  store i32* %91, i32** %87, align 8, !tbaa !105
  %.pre3 = load i32* %5, align 4, !tbaa !79
  br label %92

; <label>:92                                      ; preds = %83, %._crit_edge
  %.pre-phi6 = phi i32** [ %.pre5, %._crit_edge ], [ %87, %83 ]
  %93 = phi i32 [ %79, %._crit_edge ], [ %.pre3, %83 ]
  %94 = load %struct.LexState** %.pre4, align 8, !tbaa !85
  %95 = getelementptr inbounds %struct.LexState* %94, i64 0, i32 2
  %96 = load i32* %95, align 4, !tbaa !108
  %97 = sext i32 %93 to i64
  %98 = load i32** %.pre-phi6, align 8, !tbaa !105
  %99 = getelementptr inbounds i32* %98, i64 %97
  store i32 %96, i32* %99, align 4, !tbaa !1
  %100 = load i32* %5, align 4, !tbaa !79
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %5, align 4, !tbaa !79
  ret i32 %100
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @addk(%struct.FuncState* nocapture %fs, %struct.lua_TValue.1* %key, %struct.lua_TValue.1* %v) #0 {
  %u.sroa.0 = alloca double, align 8
  %1 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %2 = load %struct.LexState** %1, align 8, !tbaa !85
  %3 = getelementptr inbounds %struct.LexState* %2, i64 0, i32 6
  %4 = load %struct.lua_State.18** %3, align 8, !tbaa !89
  %5 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 1
  %6 = load %struct.Table.11** %5, align 8, !tbaa !102
  %7 = tail call %struct.lua_TValue.1* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.Table*, %struct.lua_TValue*)* @luaH_set to %struct.lua_TValue.1* (%struct.lua_State.18*, %struct.Table.11*, %struct.lua_TValue.1*)*)(%struct.lua_State.18* %4, %struct.Table.11* %6, %struct.lua_TValue.1* %key) #3
  %8 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto.24** %8, align 8, !tbaa !82
  %10 = getelementptr inbounds %struct.lua_TValue.1* %7, i64 0, i32 1
  %11 = load i32* %10, align 4, !tbaa !15
  %12 = icmp eq i32 %11, 3
  %13 = bitcast %struct.lua_TValue.1* %7 to double*
  br i1 %12, label %14, label %._crit_edge3

; <label>:14                                      ; preds = %0
  %15 = load double* %13, align 8, !tbaa !30
  %16 = fadd double %15, 0x4338000000000000
  store volatile double %16, double* %u.sroa.0, align 8
  %17 = bitcast double* %u.sroa.0 to i32*
  %18 = load volatile i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 3
  %21 = load %struct.lua_TValue.1** %20, align 8, !tbaa !109
  %22 = getelementptr inbounds %struct.lua_TValue.1* %21, i64 %19, i32 1
  %23 = load i32* %22, align 4, !tbaa !15
  %24 = getelementptr inbounds %struct.lua_TValue.1* %v, i64 0, i32 1
  %25 = load i32* %24, align 4, !tbaa !15
  %26 = icmp eq i32 %23, %25
  br i1 %26, label %27, label %._crit_edge3

; <label>:27                                      ; preds = %14
  %28 = getelementptr inbounds %struct.lua_TValue.1* %21, i64 %19
  %29 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_equalobj_ to i32 (%struct.lua_State.18*, %struct.lua_TValue.1*, %struct.lua_TValue.1*)*)(%struct.lua_State.18* null, %struct.lua_TValue.1* %28, %struct.lua_TValue.1* %v) #3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %._crit_edge3, label %78

._crit_edge3:                                     ; preds = %27, %14, %0
  %31 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 12
  %32 = load i32* %31, align 4, !tbaa !110
  %33 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 8
  %34 = load i32* %33, align 4, !tbaa !101
  %35 = sitofp i32 %34 to double
  store double %35, double* %13, align 8, !tbaa !30
  store i32 3, i32* %10, align 4, !tbaa !15
  %36 = icmp slt i32 %34, %32
  br i1 %36, label %.preheader, label %37

; <label>:37                                      ; preds = %._crit_edge3
  %38 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 3
  %39 = load %struct.lua_TValue.1** %38, align 8, !tbaa !109
  %40 = bitcast %struct.lua_TValue.1* %39 to i8*
  %41 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.18*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.18* %4, i8* %40, i32* %31, i64 16, i32 67108863, i8* getelementptr inbounds ([10 x i8]* @.str24, i64 0, i64 0)) #3
  %42 = bitcast i8* %41 to %struct.lua_TValue.1*
  store %struct.lua_TValue.1* %42, %struct.lua_TValue.1** %38, align 8, !tbaa !109
  %.pre = load i32* %31, align 4, !tbaa !110
  br label %.preheader

.preheader:                                       ; preds = %37, %._crit_edge3
  %43 = phi i32 [ %.pre, %37 ], [ %32, %._crit_edge3 ]
  %44 = icmp slt i32 %32, %43
  %45 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 3
  %46 = load %struct.lua_TValue.1** %45, align 8, !tbaa !109
  br i1 %44, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %47 = sext i32 %32 to i64
  br label %48

; <label>:48                                      ; preds = %48, %.lr.ph
  %indvars.iv = phi i64 [ %47, %.lr.ph ], [ %indvars.iv.next, %48 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %49 = getelementptr inbounds %struct.lua_TValue.1* %46, i64 %indvars.iv, i32 1
  store i32 0, i32* %49, align 4, !tbaa !15
  %50 = trunc i64 %indvars.iv.next to i32
  %51 = icmp slt i32 %50, %43
  br i1 %51, label %48, label %._crit_edge

._crit_edge:                                      ; preds = %48, %.preheader
  %52 = sext i32 %34 to i64
  %53 = bitcast %struct.lua_TValue.1* %v to i64*
  %54 = load i64* %53, align 8
  %55 = getelementptr inbounds %struct.lua_TValue.1* %46, i64 %52, i32 0, i32 0
  %.c = inttoptr i64 %54 to %union.GCObject.19*
  store %union.GCObject.19* %.c, %union.GCObject.19** %55, align 8
  %56 = getelementptr inbounds %struct.lua_TValue.1* %v, i64 0, i32 1
  %57 = load i32* %56, align 4, !tbaa !15
  %58 = getelementptr inbounds %struct.lua_TValue.1* %46, i64 %52, i32 1
  store i32 %57, i32* %58, align 4, !tbaa !15
  %59 = load i32* %33, align 4, !tbaa !101
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %33, align 4, !tbaa !101
  %61 = load i32* %56, align 4, !tbaa !15
  %62 = and i32 %61, 64
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %78, label %64

; <label>:64                                      ; preds = %._crit_edge
  %65 = getelementptr inbounds %struct.lua_TValue.1* %v, i64 0, i32 0, i32 0
  %66 = load %union.GCObject.19** %65, align 8, !tbaa !25
  %67 = getelementptr inbounds %union.GCObject.19* %66, i64 0, i32 0, i32 2
  %68 = load i8* %67, align 1, !tbaa !28
  %69 = and i8 %68, 3
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %78, label %71

; <label>:71                                      ; preds = %64
  %72 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 2
  %73 = load i8* %72, align 1, !tbaa !28
  %74 = and i8 %73, 4
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

; <label>:76                                      ; preds = %71
  %77 = bitcast %struct.Proto.24* %9 to %union.GCObject.19*
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrier_ to void (%struct.lua_State.18*, %union.GCObject.19*, %union.GCObject.19*)*)(%struct.lua_State.18* %4, %union.GCObject.19* %77, %union.GCObject.19* %66) #3
  br label %78

; <label>:78                                      ; preds = %76, %71, %64, %._crit_edge, %27
  %.0 = phi i32 [ %18, %27 ], [ %34, %71 ], [ %34, %64 ], [ %34, %._crit_edge ], [ %34, %76 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @exp2reg(%struct.FuncState* %fs, %struct.expdesc* nocapture %e, i32 %reg) #0 {
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %reg)
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  %3 = icmp eq i32 %2, 10
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  br i1 %3, label %5, label %luaK_concat.exit

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %7 = bitcast %union.anon.7* %6 to i32*
  %8 = load i32* %7, align 4, !tbaa !1
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %luaK_concat.exit, label %10

; <label>:10                                      ; preds = %5
  %11 = load i32* %4, align 4, !tbaa !1
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %17, label %.preheader.i

.preheader.i:                                     ; preds = %10
  %13 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %14 = load %struct.Proto.24** %13, align 8, !tbaa !82
  %15 = getelementptr inbounds %struct.Proto.24* %14, i64 0, i32 4
  %16 = load i32** %15, align 8, !tbaa !83
  br label %18

; <label>:17                                      ; preds = %10
  store i32 %8, i32* %4, align 4, !tbaa !1
  br label %luaK_concat.exit

; <label>:18                                      ; preds = %getjump.exit.i, %.preheader.i
  %list.0.i = phi i32 [ %26, %getjump.exit.i ], [ %11, %.preheader.i ]
  %19 = sext i32 %list.0.i to i64
  %20 = getelementptr inbounds i32* %16, i64 %19
  %21 = load i32* %20, align 4, !tbaa !1
  %22 = lshr i32 %21, 14
  %23 = add nsw i32 %22, -131071
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %getjump.exit.thread.i, label %getjump.exit.i

getjump.exit.i:                                   ; preds = %18
  %25 = add nsw i32 %list.0.i, 1
  %26 = add nsw i32 %25, %23
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %getjump.exit.thread.i, label %18

getjump.exit.thread.i:                            ; preds = %getjump.exit.i, %18
  %.neg.i.i = xor i32 %list.0.i, -1
  %28 = add i32 %8, %.neg.i.i
  %ispos.i.i = icmp sgt i32 %28, -1
  %neg.i.i = sub i32 0, %28
  %29 = select i1 %ispos.i.i, i32 %28, i32 %neg.i.i
  %30 = icmp sgt i32 %29, 131071
  br i1 %30, label %31, label %fixjump.exit.i

; <label>:31                                      ; preds = %getjump.exit.thread.i
  %32 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %33 = load %struct.LexState** %32, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %33, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i:                                   ; preds = %getjump.exit.thread.i
  %34 = and i32 %21, 16383
  %35 = shl i32 %28, 14
  %36 = add i32 %35, 2147467264
  %37 = or i32 %36, %34
  store i32 %37, i32* %20, align 4, !tbaa !1
  br label %luaK_concat.exit

luaK_concat.exit:                                 ; preds = %fixjump.exit.i, %17, %5, %0
  %38 = load i32* %4, align 4, !tbaa !99
  %39 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  %40 = load i32* %39, align 4, !tbaa !100
  %41 = icmp eq i32 %38, %40
  br i1 %41, label %patchlistaux.exit, label %42

; <label>:42                                      ; preds = %luaK_concat.exit
  %43 = icmp eq i32 %38, -1
  br i1 %43, label %.loopexit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %42
  %44 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %45 = load %struct.Proto.24** %44, align 8, !tbaa !82
  %46 = getelementptr inbounds %struct.Proto.24* %45, i64 0, i32 4
  %47 = load i32** %46, align 8, !tbaa !83
  br label %48

; <label>:48                                      ; preds = %getjump.exit.backedge.i, %.lr.ph.i
  %.013.i = phi i32 [ %38, %.lr.ph.i ], [ %70, %getjump.exit.backedge.i ]
  %49 = sext i32 %.013.i to i64
  %50 = getelementptr inbounds i32* %47, i64 %49
  %51 = icmp sgt i32 %.013.i, 0
  br i1 %51, label %52, label %60

; <label>:52                                      ; preds = %48
  %.sum.i.i = add i64 %49, -1
  %53 = getelementptr inbounds i32* %47, i64 %.sum.i.i
  %54 = load i32* %53, align 4, !tbaa !1
  %55 = and i32 %54, 63
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %56
  %58 = load i8* %57, align 1, !tbaa !86
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %getjumpcontrol.exit.i, label %60

; <label>:60                                      ; preds = %52, %48
  %.pre.i = load i32* %50, align 4, !tbaa !1
  br label %getjumpcontrol.exit.i

getjumpcontrol.exit.i:                            ; preds = %60, %52
  %61 = phi i32 [ %.pre.i, %60 ], [ %54, %52 ]
  %62 = and i32 %61, 63
  %63 = icmp eq i32 %62, 28
  br i1 %63, label %64, label %need_value.exit.thread42

; <label>:64                                      ; preds = %getjumpcontrol.exit.i
  %65 = load i32* %50, align 4, !tbaa !1
  %66 = lshr i32 %65, 14
  %67 = add nsw i32 %66, -131071
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %.loopexit, label %getjump.exit.backedge.i

getjump.exit.backedge.i:                          ; preds = %64
  %69 = add nsw i32 %.013.i, 1
  %70 = add nsw i32 %69, %67
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %.loopexit, label %48

.loopexit:                                        ; preds = %getjump.exit.backedge.i, %64, %42
  %72 = icmp eq i32 %40, -1
  br i1 %72, label %luaK_patchtohere.exit, label %.lr.ph.i3

.lr.ph.i3:                                        ; preds = %.loopexit
  %73 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %74 = load %struct.Proto.24** %73, align 8, !tbaa !82
  %75 = getelementptr inbounds %struct.Proto.24* %74, i64 0, i32 4
  %76 = load i32** %75, align 8, !tbaa !83
  br label %77

; <label>:77                                      ; preds = %getjump.exit.backedge.i8, %.lr.ph.i3
  %.013.i4 = phi i32 [ %40, %.lr.ph.i3 ], [ %99, %getjump.exit.backedge.i8 ]
  %78 = sext i32 %.013.i4 to i64
  %79 = getelementptr inbounds i32* %76, i64 %78
  %80 = icmp sgt i32 %.013.i4, 0
  br i1 %80, label %81, label %89

; <label>:81                                      ; preds = %77
  %.sum.i.i5 = add i64 %78, -1
  %82 = getelementptr inbounds i32* %76, i64 %.sum.i.i5
  %83 = load i32* %82, align 4, !tbaa !1
  %84 = and i32 %83, 63
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %85
  %87 = load i8* %86, align 1, !tbaa !86
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %getjumpcontrol.exit.i7, label %89

; <label>:89                                      ; preds = %81, %77
  %.pre.i6 = load i32* %79, align 4, !tbaa !1
  br label %getjumpcontrol.exit.i7

getjumpcontrol.exit.i7:                           ; preds = %89, %81
  %90 = phi i32 [ %.pre.i6, %89 ], [ %83, %81 ]
  %91 = and i32 %90, 63
  %92 = icmp eq i32 %91, 28
  br i1 %92, label %93, label %need_value.exit.thread42

; <label>:93                                      ; preds = %getjumpcontrol.exit.i7
  %94 = load i32* %79, align 4, !tbaa !1
  %95 = lshr i32 %94, 14
  %96 = add nsw i32 %95, -131071
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %luaK_patchtohere.exit, label %getjump.exit.backedge.i8

getjump.exit.backedge.i8:                         ; preds = %93
  %98 = add nsw i32 %.013.i4, 1
  %99 = add nsw i32 %98, %96
  %100 = icmp eq i32 %99, -1
  br i1 %100, label %luaK_patchtohere.exit, label %77

need_value.exit.thread42:                         ; preds = %getjumpcontrol.exit.i7, %getjumpcontrol.exit.i
  br i1 %3, label %103, label %101

; <label>:101                                     ; preds = %need_value.exit.thread42
  %102 = tail call i32 @luaK_jump(%struct.FuncState* %fs)
  br label %103

; <label>:103                                     ; preds = %101, %need_value.exit.thread42
  %104 = phi i32 [ %102, %101 ], [ -1, %need_value.exit.thread42 ]
  %105 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %106 = load i32* %105, align 4, !tbaa !79
  %107 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %106, i32* %107, align 4, !tbaa !81
  %108 = shl i32 %reg, 6
  %109 = or i32 %108, 16387
  %110 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %109) #3
  %111 = load i32* %105, align 4, !tbaa !79
  store i32 %111, i32* %107, align 4, !tbaa !81
  %112 = or i32 %108, 8388611
  %113 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %112) #3
  %114 = load i32* %105, align 4, !tbaa !79
  store i32 %114, i32* %107, align 4, !tbaa !81
  %115 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 7
  %116 = icmp eq i32 %104, -1
  br i1 %116, label %luaK_patchtohere.exit, label %117

; <label>:117                                     ; preds = %103
  %118 = load i32* %115, align 4, !tbaa !1
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %124, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %117
  %120 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %121 = load %struct.Proto.24** %120, align 8, !tbaa !82
  %122 = getelementptr inbounds %struct.Proto.24* %121, i64 0, i32 4
  %123 = load i32** %122, align 8, !tbaa !83
  br label %125

; <label>:124                                     ; preds = %117
  store i32 %104, i32* %115, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

; <label>:125                                     ; preds = %getjump.exit.i.i, %.preheader.i.i
  %list.0.i.i = phi i32 [ %133, %getjump.exit.i.i ], [ %118, %.preheader.i.i ]
  %126 = sext i32 %list.0.i.i to i64
  %127 = getelementptr inbounds i32* %123, i64 %126
  %128 = load i32* %127, align 4, !tbaa !1
  %129 = lshr i32 %128, 14
  %130 = add nsw i32 %129, -131071
  %131 = icmp eq i32 %130, -1
  br i1 %131, label %getjump.exit.thread.i.i, label %getjump.exit.i.i

getjump.exit.i.i:                                 ; preds = %125
  %132 = add nsw i32 %list.0.i.i, 1
  %133 = add nsw i32 %132, %130
  %134 = icmp eq i32 %133, -1
  br i1 %134, label %getjump.exit.thread.i.i, label %125

getjump.exit.thread.i.i:                          ; preds = %getjump.exit.i.i, %125
  %.neg.i.i.i = xor i32 %list.0.i.i, -1
  %135 = add i32 %104, %.neg.i.i.i
  %ispos.i.i.i = icmp sgt i32 %135, -1
  %neg.i.i.i = sub i32 0, %135
  %136 = select i1 %ispos.i.i.i, i32 %135, i32 %neg.i.i.i
  %137 = icmp sgt i32 %136, 131071
  br i1 %137, label %138, label %fixjump.exit.i.i

; <label>:138                                     ; preds = %getjump.exit.thread.i.i
  %139 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %140 = load %struct.LexState** %139, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %140, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit.i.i:                                 ; preds = %getjump.exit.thread.i.i
  %141 = and i32 %128, 16383
  %142 = shl i32 %135, 14
  %143 = add i32 %142, 2147467264
  %144 = or i32 %143, %141
  store i32 %144, i32* %127, align 4, !tbaa !1
  br label %luaK_patchtohere.exit

luaK_patchtohere.exit:                            ; preds = %fixjump.exit.i.i, %124, %103, %getjump.exit.backedge.i8, %93, %.loopexit
  %p_t.0 = phi i32 [ %113, %103 ], [ %113, %124 ], [ %113, %fixjump.exit.i.i ], [ -1, %.loopexit ], [ -1, %getjump.exit.backedge.i8 ], [ -1, %93 ]
  %p_f.0 = phi i32 [ %110, %103 ], [ %110, %124 ], [ %110, %fixjump.exit.i.i ], [ -1, %.loopexit ], [ -1, %getjump.exit.backedge.i8 ], [ -1, %93 ]
  %145 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %146 = load i32* %145, align 4, !tbaa !79
  %147 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 6
  store i32 %146, i32* %147, align 4, !tbaa !81
  %148 = load i32* %39, align 4, !tbaa !100
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %patchlistaux.exit25, label %.lr.ph.i20

.lr.ph.i20:                                       ; preds = %luaK_patchtohere.exit
  %150 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %151 = icmp eq i32 %reg, 255
  %152 = shl i32 %reg, 6
  %153 = and i32 %152, 16320
  %.pre51 = load %struct.Proto.24** %150, align 8, !tbaa !82
  %.phi.trans.insert53 = getelementptr inbounds %struct.Proto.24* %.pre51, i64 0, i32 4
  %.pre54 = load i32** %.phi.trans.insert53, align 8, !tbaa !83
  br label %154

; <label>:154                                     ; preds = %.backedge.i24, %.lr.ph.i20
  %.01.i21 = phi i32 [ %148, %.lr.ph.i20 ], [ %.0.i.i22, %.backedge.i24 ]
  %155 = sext i32 %.01.i21 to i64
  %156 = getelementptr inbounds i32* %.pre54, i64 %155
  %157 = load i32* %156, align 4, !tbaa !1
  %158 = lshr i32 %157, 14
  %159 = add nsw i32 %158, -131071
  %160 = icmp eq i32 %159, -1
  br i1 %160, label %getjump.exit.i23, label %161

; <label>:161                                     ; preds = %154
  %162 = add nsw i32 %.01.i21, 1
  %163 = add nsw i32 %162, %159
  br label %getjump.exit.i23

getjump.exit.i23:                                 ; preds = %161, %154
  %.0.i.i22 = phi i32 [ %163, %161 ], [ -1, %154 ]
  %164 = icmp sgt i32 %.01.i21, 0
  br i1 %164, label %165, label %173

; <label>:165                                     ; preds = %getjump.exit.i23
  %.sum.i.i34 = add i64 %155, -1
  %166 = getelementptr inbounds i32* %.pre54, i64 %.sum.i.i34
  %167 = load i32* %166, align 4, !tbaa !1
  %168 = and i32 %167, 63
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %169
  %171 = load i8* %170, align 1, !tbaa !86
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %getjumpcontrol.exit.i37, label %173

; <label>:173                                     ; preds = %165, %getjump.exit.i23
  br label %getjumpcontrol.exit.i37

getjumpcontrol.exit.i37:                          ; preds = %173, %165
  %174 = phi i32 [ %157, %173 ], [ %167, %165 ]
  %.0.i.i36 = phi i32* [ %156, %173 ], [ %166, %165 ]
  %175 = and i32 %174, 63
  %176 = icmp eq i32 %175, 28
  br i1 %176, label %177, label %200

; <label>:177                                     ; preds = %getjumpcontrol.exit.i37
  %178 = lshr i32 %174, 23
  %179 = icmp eq i32 %178, %reg
  %or.cond.i38 = or i1 %151, %179
  br i1 %or.cond.i38, label %183, label %180

; <label>:180                                     ; preds = %177
  %181 = and i32 %174, -16321
  %182 = or i32 %181, %153
  br label %188

; <label>:183                                     ; preds = %177
  %184 = shl nuw nsw i32 %178, 6
  %185 = and i32 %174, 8372224
  %186 = or i32 %185, %184
  %187 = or i32 %186, 27
  br label %188

; <label>:188                                     ; preds = %183, %180
  %storemerge.i39 = phi i32 [ %187, %183 ], [ %182, %180 ]
  store i32 %storemerge.i39, i32* %.0.i.i36, align 4, !tbaa !1
  %.neg.i26 = xor i32 %.01.i21, -1
  %189 = add i32 %146, %.neg.i26
  %ispos.i27 = icmp sgt i32 %189, -1
  %neg.i28 = sub i32 0, %189
  %190 = select i1 %ispos.i27, i32 %189, i32 %neg.i28
  %191 = icmp sgt i32 %190, 131071
  br i1 %191, label %192, label %fixjump.exit29

; <label>:192                                     ; preds = %188
  %193 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %194 = load %struct.LexState** %193, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %194, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit29:                                   ; preds = %188
  %195 = load i32* %156, align 4, !tbaa !1
  %196 = and i32 %195, 16383
  %197 = shl i32 %189, 14
  %198 = add i32 %197, 2147467264
  %199 = or i32 %196, %198
  br label %.backedge.i24

; <label>:200                                     ; preds = %getjumpcontrol.exit.i37
  %.neg.i30 = xor i32 %.01.i21, -1
  %201 = add i32 %p_f.0, %.neg.i30
  %ispos.i31 = icmp sgt i32 %201, -1
  %neg.i32 = sub i32 0, %201
  %202 = select i1 %ispos.i31, i32 %201, i32 %neg.i32
  %203 = icmp sgt i32 %202, 131071
  br i1 %203, label %204, label %fixjump.exit33

; <label>:204                                     ; preds = %200
  %205 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %206 = load %struct.LexState** %205, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %206, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit33:                                   ; preds = %200
  %207 = and i32 %157, 16383
  %208 = shl i32 %201, 14
  %209 = add i32 %208, 2147467264
  %210 = or i32 %207, %209
  br label %.backedge.i24

.backedge.i24:                                    ; preds = %fixjump.exit33, %fixjump.exit29
  %storemerge = phi i32 [ %210, %fixjump.exit33 ], [ %199, %fixjump.exit29 ]
  store i32 %storemerge, i32* %156, align 4, !tbaa !1
  %211 = icmp eq i32 %.0.i.i22, -1
  br i1 %211, label %patchlistaux.exit25, label %154

patchlistaux.exit25:                              ; preds = %.backedge.i24, %luaK_patchtohere.exit
  %212 = load i32* %4, align 4, !tbaa !99
  %213 = icmp eq i32 %212, -1
  br i1 %213, label %patchlistaux.exit, label %.lr.ph.i1

.lr.ph.i1:                                        ; preds = %patchlistaux.exit25
  %214 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %215 = icmp eq i32 %reg, 255
  %216 = shl i32 %reg, 6
  %217 = and i32 %216, 16320
  %.pre = load %struct.Proto.24** %214, align 8, !tbaa !82
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.24* %.pre, i64 0, i32 4
  %.pre52 = load i32** %.phi.trans.insert, align 8, !tbaa !83
  br label %218

; <label>:218                                     ; preds = %.backedge.i, %.lr.ph.i1
  %.01.i = phi i32 [ %212, %.lr.ph.i1 ], [ %.0.i.i, %.backedge.i ]
  %219 = sext i32 %.01.i to i64
  %220 = getelementptr inbounds i32* %.pre52, i64 %219
  %221 = load i32* %220, align 4, !tbaa !1
  %222 = lshr i32 %221, 14
  %223 = add nsw i32 %222, -131071
  %224 = icmp eq i32 %223, -1
  br i1 %224, label %getjump.exit.i2, label %225

; <label>:225                                     ; preds = %218
  %226 = add nsw i32 %.01.i, 1
  %227 = add nsw i32 %226, %223
  br label %getjump.exit.i2

getjump.exit.i2:                                  ; preds = %225, %218
  %.0.i.i = phi i32 [ %227, %225 ], [ -1, %218 ]
  %228 = icmp sgt i32 %.01.i, 0
  br i1 %228, label %229, label %237

; <label>:229                                     ; preds = %getjump.exit.i2
  %.sum.i.i11 = add i64 %219, -1
  %230 = getelementptr inbounds i32* %.pre52, i64 %.sum.i.i11
  %231 = load i32* %230, align 4, !tbaa !1
  %232 = and i32 %231, 63
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %233
  %235 = load i8* %234, align 1, !tbaa !86
  %236 = icmp slt i8 %235, 0
  br i1 %236, label %getjumpcontrol.exit.i14, label %237

; <label>:237                                     ; preds = %229, %getjump.exit.i2
  br label %getjumpcontrol.exit.i14

getjumpcontrol.exit.i14:                          ; preds = %237, %229
  %238 = phi i32 [ %221, %237 ], [ %231, %229 ]
  %.0.i.i13 = phi i32* [ %220, %237 ], [ %230, %229 ]
  %239 = and i32 %238, 63
  %240 = icmp eq i32 %239, 28
  br i1 %240, label %241, label %264

; <label>:241                                     ; preds = %getjumpcontrol.exit.i14
  %242 = lshr i32 %238, 23
  %243 = icmp eq i32 %242, %reg
  %or.cond.i = or i1 %215, %243
  br i1 %or.cond.i, label %247, label %244

; <label>:244                                     ; preds = %241
  %245 = and i32 %238, -16321
  %246 = or i32 %245, %217
  br label %252

; <label>:247                                     ; preds = %241
  %248 = shl nuw nsw i32 %242, 6
  %249 = and i32 %238, 8372224
  %250 = or i32 %249, %248
  %251 = or i32 %250, 27
  br label %252

; <label>:252                                     ; preds = %247, %244
  %storemerge.i = phi i32 [ %251, %247 ], [ %246, %244 ]
  store i32 %storemerge.i, i32* %.0.i.i13, align 4, !tbaa !1
  %.neg.i = xor i32 %.01.i, -1
  %253 = add i32 %146, %.neg.i
  %ispos.i = icmp sgt i32 %253, -1
  %neg.i = sub i32 0, %253
  %254 = select i1 %ispos.i, i32 %253, i32 %neg.i
  %255 = icmp sgt i32 %254, 131071
  br i1 %255, label %256, label %fixjump.exit

; <label>:256                                     ; preds = %252
  %257 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %258 = load %struct.LexState** %257, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %258, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit:                                     ; preds = %252
  %259 = load i32* %220, align 4, !tbaa !1
  %260 = and i32 %259, 16383
  %261 = shl i32 %253, 14
  %262 = add i32 %261, 2147467264
  %263 = or i32 %260, %262
  br label %.backedge.i

; <label>:264                                     ; preds = %getjumpcontrol.exit.i14
  %.neg.i16 = xor i32 %.01.i, -1
  %265 = add i32 %p_t.0, %.neg.i16
  %ispos.i17 = icmp sgt i32 %265, -1
  %neg.i18 = sub i32 0, %265
  %266 = select i1 %ispos.i17, i32 %265, i32 %neg.i18
  %267 = icmp sgt i32 %266, 131071
  br i1 %267, label %268, label %fixjump.exit19

; <label>:268                                     ; preds = %264
  %269 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %270 = load %struct.LexState** %269, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %270, i8* getelementptr inbounds ([27 x i8]* @.str4, i64 0, i64 0)) #13
  unreachable

fixjump.exit19:                                   ; preds = %264
  %271 = and i32 %221, 16383
  %272 = shl i32 %265, 14
  %273 = add i32 %272, 2147467264
  %274 = or i32 %271, %273
  br label %.backedge.i

.backedge.i:                                      ; preds = %fixjump.exit19, %fixjump.exit
  %storemerge56 = phi i32 [ %274, %fixjump.exit19 ], [ %263, %fixjump.exit ]
  store i32 %storemerge56, i32* %220, align 4, !tbaa !1
  %275 = icmp eq i32 %.0.i.i, -1
  br i1 %275, label %patchlistaux.exit, label %218

patchlistaux.exit:                                ; preds = %.backedge.i, %patchlistaux.exit25, %luaK_concat.exit
  store i32 -1, i32* %4, align 4, !tbaa !99
  store i32 -1, i32* %39, align 4, !tbaa !100
  %276 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %277 = bitcast %union.anon.7* %276 to i32*
  store i32 %reg, i32* %277, align 4, !tbaa !1
  store i32 6, i32* %1, align 4, !tbaa !92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @jumponcond(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e, i32 %cond) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  switch i32 %2, label %thread-pre-split.thread [
    i32 11, label %3
    i32 6, label %discharge2anyreg.exit.thread
  ]

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %5 = bitcast %union.anon.7* %4 to i32*
  %6 = load i32* %5, align 4, !tbaa !1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %9 = load %struct.Proto.24** %8, align 8, !tbaa !82
  %10 = getelementptr inbounds %struct.Proto.24* %9, i64 0, i32 4
  %11 = load i32** %10, align 8, !tbaa !83
  %12 = getelementptr inbounds i32* %11, i64 %7
  %13 = load i32* %12, align 4, !tbaa !1
  %14 = and i32 %13, 63
  %15 = icmp eq i32 %14, 20
  br i1 %15, label %16, label %thread-pre-split.thread

; <label>:16                                      ; preds = %3
  %17 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %18 = load i32* %17, align 4, !tbaa !79
  %19 = add nsw i32 %18, -1
  store i32 %19, i32* %17, align 4, !tbaa !79
  %20 = lshr i32 %13, 23
  %21 = icmp eq i32 %cond, 0
  %22 = zext i1 %21 to i32
  %23 = shl nuw nsw i32 %20, 6
  %24 = shl nuw nsw i32 %22, 14
  %25 = or i32 %24, %23
  %26 = or i32 %25, 27
  %27 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %26) #3
  %28 = tail call i32 @luaK_jump(%struct.FuncState* %fs) #3
  br label %69

thread-pre-split.thread:                          ; preds = %3, %0
  %29 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %30 = load i8* %29, align 1, !tbaa !87
  %31 = zext i8 %30 to i32
  %32 = add nsw i32 %31, 1
  %33 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %34 = load %struct.Proto.24** %33, align 8, !tbaa !82
  %35 = getelementptr inbounds %struct.Proto.24* %34, i64 0, i32 22
  %36 = load i8* %35, align 1, !tbaa !88
  %37 = zext i8 %36 to i32
  %38 = icmp ugt i32 %32, %37
  br i1 %38, label %39, label %.luaK_checkstack.exit_crit_edge.i.i

.luaK_checkstack.exit_crit_edge.i.i:              ; preds = %thread-pre-split.thread
  %.pre.i.i = trunc i32 %32 to i8
  br label %discharge2anyreg.exit

; <label>:39                                      ; preds = %thread-pre-split.thread
  %40 = icmp ugt i32 %32, 249
  br i1 %40, label %41, label %44

; <label>:41                                      ; preds = %39
  %42 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %43 = load %struct.LexState** %42, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState*, i8*)*)(%struct.LexState* %43, i8* getelementptr inbounds ([35 x i8]* @.str2, i64 0, i64 0)) #13
  unreachable

; <label>:44                                      ; preds = %39
  %45 = trunc i32 %32 to i8
  store i8 %45, i8* %35, align 1, !tbaa !88
  br label %discharge2anyreg.exit

discharge2anyreg.exit:                            ; preds = %44, %.luaK_checkstack.exit_crit_edge.i.i
  %.pre-phi.i.i = phi i8 [ %.pre.i.i, %.luaK_checkstack.exit_crit_edge.i.i ], [ %45, %44 ]
  store i8 %.pre-phi.i.i, i8* %29, align 1, !tbaa !87
  %46 = zext i8 %.pre-phi.i.i to i32
  %47 = add nsw i32 %46, -1
  tail call fastcc void @discharge2reg(%struct.FuncState* %fs, %struct.expdesc* %e, i32 %47) #3
  %.pre = load i32* %1, align 4, !tbaa !92
  %phitmp = icmp eq i32 %.pre, 6
  br i1 %phitmp, label %discharge2anyreg.exit.thread, label %discharge2anyreg.exit.freeexp.exit_crit_edge

discharge2anyreg.exit.freeexp.exit_crit_edge:     ; preds = %discharge2anyreg.exit
  %.phi.trans.insert = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %.phi.trans.insert1 = bitcast %union.anon.7* %.phi.trans.insert to i32*
  %.pre2 = load i32* %.phi.trans.insert1, align 4, !tbaa !1
  br label %freeexp.exit

discharge2anyreg.exit.thread:                     ; preds = %discharge2anyreg.exit, %0
  %48 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %49 = bitcast %union.anon.7* %48 to i32*
  %50 = load i32* %49, align 4, !tbaa !1
  %51 = and i32 %50, 256
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %freeexp.exit

; <label>:53                                      ; preds = %discharge2anyreg.exit.thread
  %54 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %55 = load i8* %54, align 1, !tbaa !96
  %56 = zext i8 %55 to i32
  %57 = icmp sgt i32 %56, %50
  br i1 %57, label %freeexp.exit, label %58

; <label>:58                                      ; preds = %53
  %59 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %60 = load i8* %59, align 1, !tbaa !87
  %61 = add i8 %60, -1
  store i8 %61, i8* %59, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %58, %53, %discharge2anyreg.exit.thread, %discharge2anyreg.exit.freeexp.exit_crit_edge
  %62 = phi i32 [ %.pre2, %discharge2anyreg.exit.freeexp.exit_crit_edge ], [ %50, %discharge2anyreg.exit.thread ], [ %50, %53 ], [ %50, %58 ]
  %63 = shl i32 %62, 23
  %64 = shl i32 %cond, 14
  %65 = or i32 %64, %63
  %66 = or i32 %65, 16348
  %67 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %66) #3
  %68 = tail call i32 @luaK_jump(%struct.FuncState* %fs) #3
  br label %69

; <label>:69                                      ; preds = %freeexp.exit, %16
  %.0 = phi i32 [ %28, %16 ], [ %68, %freeexp.exit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @codearith(%struct.FuncState* %fs, i32 %op, %struct.expdesc* nocapture %e1, %struct.expdesc* nocapture %e2, i32 %line) #0 {
  %1 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !92
  %3 = icmp eq i32 %2, 5
  br i1 %3, label %4, label %32

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 2
  %6 = load i32* %5, align 4, !tbaa !99
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %isnumeral.exit.i, label %32

isnumeral.exit.i:                                 ; preds = %4
  %8 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 3
  %9 = load i32* %8, align 4, !tbaa !100
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %32

; <label>:11                                      ; preds = %isnumeral.exit.i
  %12 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 0
  %13 = load i32* %12, align 4, !tbaa !92
  %14 = icmp eq i32 %13, 5
  br i1 %14, label %15, label %32

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 2
  %17 = load i32* %16, align 4, !tbaa !99
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %isnumeral.exit2.i, label %32

isnumeral.exit2.i:                                ; preds = %15
  %19 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 3
  %20 = load i32* %19, align 4, !tbaa !100
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %32

; <label>:22                                      ; preds = %isnumeral.exit2.i
  %23 = and i32 %op, -2
  %24 = icmp eq i32 %23, 16
  %25 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 1, i32 0
  %26 = load double* %25, align 8, !tbaa !30
  %27 = fcmp oeq double %26, 0.000000e+00
  %or.cond.i = and i1 %24, %27
  br i1 %or.cond.i, label %32, label %constfolding.exit

constfolding.exit:                                ; preds = %22
  %28 = add i32 %op, -13
  %29 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1, i32 0
  %30 = load double* %29, align 8, !tbaa !30
  %31 = tail call double @luaO_arith(i32 %28, double %30, double %26) #3
  store double %31, double* %29, align 8, !tbaa !30
  br label %127

; <label>:32                                      ; preds = %22, %isnumeral.exit2.i, %15, %11, %isnumeral.exit.i, %4, %0
  switch i32 %op, label %33 [
    i32 21, label %35
    i32 19, label %35
  ]

; <label>:33                                      ; preds = %32
  %34 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2)
  br label %35

; <label>:35                                      ; preds = %33, %32, %32
  %36 = phi i32 [ %34, %33 ], [ 0, %32 ], [ 0, %32 ]
  %37 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1)
  %38 = icmp sgt i32 %37, %36
  br i1 %38, label %39, label %75

; <label>:39                                      ; preds = %35
  %40 = load i32* %1, align 4, !tbaa !92
  %41 = icmp eq i32 %40, 6
  br i1 %41, label %42, label %freeexp.exit

; <label>:42                                      ; preds = %39
  %43 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1
  %44 = bitcast %union.anon.7* %43 to i32*
  %45 = load i32* %44, align 4, !tbaa !1
  %46 = and i32 %45, 256
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %freeexp.exit

; <label>:48                                      ; preds = %42
  %49 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %50 = load i8* %49, align 1, !tbaa !96
  %51 = zext i8 %50 to i32
  %52 = icmp sgt i32 %51, %45
  br i1 %52, label %freeexp.exit, label %53

; <label>:53                                      ; preds = %48
  %54 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %55 = load i8* %54, align 1, !tbaa !87
  %56 = add i8 %55, -1
  store i8 %56, i8* %54, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %53, %48, %42, %39
  %57 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 0
  %58 = load i32* %57, align 4, !tbaa !92
  %59 = icmp eq i32 %58, 6
  br i1 %59, label %60, label %freeexp.exit2

; <label>:60                                      ; preds = %freeexp.exit
  %61 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 1
  %62 = bitcast %union.anon.7* %61 to i32*
  %63 = load i32* %62, align 4, !tbaa !1
  %64 = and i32 %63, 256
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %freeexp.exit2

; <label>:66                                      ; preds = %60
  %67 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %68 = load i8* %67, align 1, !tbaa !96
  %69 = zext i8 %68 to i32
  %70 = icmp sgt i32 %69, %63
  br i1 %70, label %freeexp.exit2, label %71

; <label>:71                                      ; preds = %66
  %72 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %73 = load i8* %72, align 1, !tbaa !87
  %74 = add i8 %73, -1
  store i8 %74, i8* %72, align 1, !tbaa !87
  br label %freeexp.exit2

; <label>:75                                      ; preds = %35
  %76 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 0
  %77 = load i32* %76, align 4, !tbaa !92
  %78 = icmp eq i32 %77, 6
  br i1 %78, label %79, label %freeexp.exit4

; <label>:79                                      ; preds = %75
  %80 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 1
  %81 = bitcast %union.anon.7* %80 to i32*
  %82 = load i32* %81, align 4, !tbaa !1
  %83 = and i32 %82, 256
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %freeexp.exit4

; <label>:85                                      ; preds = %79
  %86 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %87 = load i8* %86, align 1, !tbaa !96
  %88 = zext i8 %87 to i32
  %89 = icmp sgt i32 %88, %82
  br i1 %89, label %freeexp.exit4, label %90

; <label>:90                                      ; preds = %85
  %91 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %92 = load i8* %91, align 1, !tbaa !87
  %93 = add i8 %92, -1
  store i8 %93, i8* %91, align 1, !tbaa !87
  br label %freeexp.exit4

freeexp.exit4:                                    ; preds = %90, %85, %79, %75
  %94 = load i32* %1, align 4, !tbaa !92
  %95 = icmp eq i32 %94, 6
  br i1 %95, label %96, label %freeexp.exit2

; <label>:96                                      ; preds = %freeexp.exit4
  %97 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1
  %98 = bitcast %union.anon.7* %97 to i32*
  %99 = load i32* %98, align 4, !tbaa !1
  %100 = and i32 %99, 256
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %freeexp.exit2

; <label>:102                                     ; preds = %96
  %103 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %104 = load i8* %103, align 1, !tbaa !96
  %105 = zext i8 %104 to i32
  %106 = icmp sgt i32 %105, %99
  br i1 %106, label %freeexp.exit2, label %107

; <label>:107                                     ; preds = %102
  %108 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %109 = load i8* %108, align 1, !tbaa !87
  %110 = add i8 %109, -1
  store i8 %110, i8* %108, align 1, !tbaa !87
  br label %freeexp.exit2

freeexp.exit2:                                    ; preds = %107, %102, %96, %freeexp.exit4, %71, %66, %60, %freeexp.exit
  %111 = shl i32 %37, 23
  %112 = shl i32 %36, 14
  %113 = or i32 %112, %op
  %114 = or i32 %113, %111
  %115 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %114) #3
  %116 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1
  %117 = bitcast %union.anon.7* %116 to i32*
  store i32 %115, i32* %117, align 4, !tbaa !1
  store i32 11, i32* %1, align 4, !tbaa !92
  %118 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 5
  %119 = load i32* %118, align 4, !tbaa !79
  %120 = add nsw i32 %119, -1
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %123 = load %struct.Proto.24** %122, align 8, !tbaa !82
  %124 = getelementptr inbounds %struct.Proto.24* %123, i64 0, i32 6
  %125 = load i32** %124, align 8, !tbaa !105
  %126 = getelementptr inbounds i32* %125, i64 %121
  store i32 %line, i32* %126, align 4, !tbaa !1
  br label %127

; <label>:127                                     ; preds = %freeexp.exit2, %constfolding.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @discharge2reg(%struct.FuncState* nocapture %fs, %struct.expdesc* nocapture %e, i32 %reg) #0 {
  %1 = alloca double, align 8
  %o.i = alloca %struct.lua_TValue.1, align 8
  call void @luaK_dischargevars(%struct.FuncState* %fs, %struct.expdesc* %e)
  %2 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !92
  switch i32 %3, label %101 [
    i32 1, label %4
    i32 3, label %5
    i32 2, label %5
    i32 4, label %13
    i32 5, label %30
    i32 11, label %74
    i32 6, label %89
  ]

; <label>:4                                       ; preds = %0
  call void @luaK_nil(%struct.FuncState* %fs, i32 %reg, i32 1)
  br label %luaK_codek.exit

; <label>:5                                       ; preds = %0, %0
  %6 = icmp eq i32 %3, 2
  %7 = zext i1 %6 to i32
  %8 = shl i32 %reg, 6
  %9 = shl nuw nsw i32 %7, 23
  %10 = or i32 %8, %9
  %11 = or i32 %10, 3
  %12 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %11) #3
  br label %luaK_codek.exit

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %15 = bitcast %union.anon.7* %14 to i32*
  %16 = load i32* %15, align 4, !tbaa !1
  %17 = icmp slt i32 %16, 262144
  %18 = shl i32 %reg, 6
  br i1 %17, label %19, label %24

; <label>:19                                      ; preds = %13
  %20 = shl i32 %16, 14
  %21 = or i32 %18, %20
  %22 = or i32 %21, 1
  %23 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %22) #3
  br label %luaK_codek.exit

; <label>:24                                      ; preds = %13
  %25 = or i32 %18, 2
  %26 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %25) #3
  %27 = shl i32 %16, 6
  %28 = or i32 %27, 39
  %29 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %28) #3
  br label %luaK_codek.exit

; <label>:30                                      ; preds = %0
  %31 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1, i32 0
  %32 = load double* %31, align 8, !tbaa !30
  %33 = bitcast double* %1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %33) #3
  %34 = bitcast %struct.lua_TValue.1* %o.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %34) #3
  store double %32, double* %1, align 8, !tbaa !30
  %35 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 3
  %36 = load %struct.LexState** %35, align 8, !tbaa !85
  %37 = getelementptr inbounds %struct.LexState* %36, i64 0, i32 6
  %38 = load %struct.lua_State.18** %37, align 8, !tbaa !89
  %39 = bitcast %struct.lua_TValue.1* %o.i to double*
  store double %32, double* %39, align 8, !tbaa !30
  %40 = getelementptr inbounds %struct.lua_TValue.1* %o.i, i64 0, i32 1
  store i32 3, i32* %40, align 8, !tbaa !15
  %41 = fcmp ueq double %32, 0.000000e+00
  br i1 %41, label %42, label %59

; <label>:42                                      ; preds = %30
  %43 = getelementptr inbounds %struct.lua_State.18* %38, i64 0, i32 4
  %44 = load %struct.lua_TValue.1** %43, align 8, !tbaa !12
  %45 = getelementptr inbounds %struct.lua_TValue.1* %44, i64 1
  store %struct.lua_TValue.1* %45, %struct.lua_TValue.1** %43, align 8, !tbaa !12
  %46 = call %union.TString.7* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString.7* (%struct.lua_State.18*, i8*, i64)*)(%struct.lua_State.18* %38, i8* %33, i64 8) #3
  %47 = bitcast %union.TString.7* %46 to %union.GCObject.19*
  %48 = getelementptr inbounds %struct.lua_TValue.1* %44, i64 0, i32 0, i32 0
  store %union.GCObject.19* %47, %union.GCObject.19** %48, align 8, !tbaa !25
  %49 = getelementptr inbounds %union.TString.7* %46, i64 0, i32 0, i32 1
  %50 = load i8* %49, align 1, !tbaa !38
  %51 = zext i8 %50 to i32
  %52 = or i32 %51, 64
  %53 = getelementptr inbounds %struct.lua_TValue.1* %44, i64 0, i32 1
  store i32 %52, i32* %53, align 4, !tbaa !15
  %54 = load %struct.lua_TValue.1** %43, align 8, !tbaa !12
  %55 = getelementptr inbounds %struct.lua_TValue.1* %54, i64 -1
  %56 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %55, %struct.lua_TValue.1* %o.i) #3
  %57 = load %struct.lua_TValue.1** %43, align 8, !tbaa !12
  %58 = getelementptr inbounds %struct.lua_TValue.1* %57, i64 -1
  store %struct.lua_TValue.1* %58, %struct.lua_TValue.1** %43, align 8, !tbaa !12
  br label %luaK_numberK.exit

; <label>:59                                      ; preds = %30
  %60 = call fastcc i32 @addk(%struct.FuncState* %fs, %struct.lua_TValue.1* %o.i, %struct.lua_TValue.1* %o.i) #3
  br label %luaK_numberK.exit

luaK_numberK.exit:                                ; preds = %59, %42
  %n.0.i = phi i32 [ %56, %42 ], [ %60, %59 ]
  call void @llvm.lifetime.end(i64 8, i8* %33) #3
  call void @llvm.lifetime.end(i64 16, i8* %34) #3
  %61 = icmp slt i32 %n.0.i, 262144
  %62 = shl i32 %reg, 6
  br i1 %61, label %63, label %68

; <label>:63                                      ; preds = %luaK_numberK.exit
  %64 = shl i32 %n.0.i, 14
  %65 = or i32 %62, %64
  %66 = or i32 %65, 1
  %67 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %66) #3
  br label %luaK_codek.exit

; <label>:68                                      ; preds = %luaK_numberK.exit
  %69 = or i32 %62, 2
  %70 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %69) #3
  %71 = shl i32 %n.0.i, 6
  %72 = or i32 %71, 39
  %73 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %72) #3
  br label %luaK_codek.exit

; <label>:74                                      ; preds = %0
  %75 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %76 = bitcast %union.anon.7* %75 to i32*
  %77 = load i32* %76, align 4, !tbaa !1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 0
  %80 = load %struct.Proto.24** %79, align 8, !tbaa !82
  %81 = getelementptr inbounds %struct.Proto.24* %80, i64 0, i32 4
  %82 = load i32** %81, align 8, !tbaa !83
  %83 = getelementptr inbounds i32* %82, i64 %78
  %84 = load i32* %83, align 4, !tbaa !1
  %85 = and i32 %84, -16321
  %86 = shl i32 %reg, 6
  %87 = and i32 %86, 16320
  %88 = or i32 %85, %87
  store i32 %88, i32* %83, align 4, !tbaa !1
  br label %luaK_codek.exit

; <label>:89                                      ; preds = %0
  %90 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %91 = bitcast %union.anon.7* %90 to i32*
  %92 = load i32* %91, align 4, !tbaa !1
  %93 = icmp eq i32 %92, %reg
  br i1 %93, label %luaK_codek.exit, label %94

; <label>:94                                      ; preds = %89
  %95 = shl i32 %reg, 6
  %96 = shl i32 %92, 23
  %97 = or i32 %96, %95
  %98 = call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %97) #3
  br label %luaK_codek.exit

luaK_codek.exit:                                  ; preds = %94, %89, %74, %68, %63, %24, %19, %5, %4
  %99 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %100 = bitcast %union.anon.7* %99 to i32*
  store i32 %reg, i32* %100, align 4, !tbaa !1
  store i32 6, i32* %2, align 4, !tbaa !92
  br label %101

; <label>:101                                     ; preds = %luaK_codek.exit, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @codecomp(%struct.FuncState* %fs, i32 %op, i32 %cond, %struct.expdesc* nocapture %e1, %struct.expdesc* nocapture %e2) #0 {
  %1 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e1)
  %2 = tail call i32 @luaK_exp2RK(%struct.FuncState* %fs, %struct.expdesc* %e2)
  %3 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 0
  %4 = load i32* %3, align 4, !tbaa !92
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %freeexp.exit

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.expdesc* %e2, i64 0, i32 1
  %8 = bitcast %union.anon.7* %7 to i32*
  %9 = load i32* %8, align 4, !tbaa !1
  %10 = and i32 %9, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %freeexp.exit

; <label>:12                                      ; preds = %6
  %13 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %14 = load i8* %13, align 1, !tbaa !96
  %15 = zext i8 %14 to i32
  %16 = icmp sgt i32 %15, %9
  br i1 %16, label %freeexp.exit, label %17

; <label>:17                                      ; preds = %12
  %18 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %19 = load i8* %18, align 1, !tbaa !87
  %20 = add i8 %19, -1
  store i8 %20, i8* %18, align 1, !tbaa !87
  br label %freeexp.exit

freeexp.exit:                                     ; preds = %17, %12, %6, %0
  %21 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 0
  %22 = load i32* %21, align 4, !tbaa !92
  %23 = icmp eq i32 %22, 6
  %24 = getelementptr inbounds %struct.expdesc* %e1, i64 0, i32 1
  %25 = bitcast %union.anon.7* %24 to i32*
  br i1 %23, label %26, label %freeexp.exit3

; <label>:26                                      ; preds = %freeexp.exit
  %27 = load i32* %25, align 4, !tbaa !1
  %28 = and i32 %27, 256
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %freeexp.exit3

; <label>:30                                      ; preds = %26
  %31 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 12
  %32 = load i8* %31, align 1, !tbaa !96
  %33 = zext i8 %32 to i32
  %34 = icmp sgt i32 %33, %27
  br i1 %34, label %freeexp.exit3, label %35

; <label>:35                                      ; preds = %30
  %36 = getelementptr inbounds %struct.FuncState* %fs, i64 0, i32 14
  %37 = load i8* %36, align 1, !tbaa !87
  %38 = add i8 %37, -1
  store i8 %38, i8* %36, align 1, !tbaa !87
  br label %freeexp.exit3

freeexp.exit3:                                    ; preds = %35, %30, %26, %freeexp.exit
  %39 = icmp eq i32 %cond, 0
  %40 = icmp ne i32 %op, 24
  %or.cond = and i1 %39, %40
  %. = select i1 %or.cond, i32 %2, i32 %1
  %.2 = select i1 %or.cond, i32 %1, i32 %2
  %cond.op = shl i32 %cond, 6
  %41 = select i1 %or.cond, i32 64, i32 %cond.op
  %42 = or i32 %41, %op
  %43 = shl i32 %., 23
  %44 = or i32 %42, %43
  %45 = shl i32 %.2, 14
  %46 = or i32 %44, %45
  %47 = tail call fastcc i32 @luaK_code(%struct.FuncState* %fs, i32 %46) #3
  %48 = tail call i32 @luaK_jump(%struct.FuncState* %fs) #3
  store i32 %48, i32* %25, align 4, !tbaa !1
  store i32 10, i32* %21, align 4, !tbaa !92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_sethook(%struct.lua_State* nocapture %L, void (%struct.lua_State*, %struct.lua_Debug*)* %func, i32 %mask, i32 %count) #0 {
  %1 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %func, null
  %2 = icmp eq i32 %mask, 0
  %or.cond = or i1 %1, %2
  %.func = select i1 %or.cond, void (%struct.lua_State*, %struct.lua_Debug*)* null, void (%struct.lua_State*, %struct.lua_Debug*)* %func
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %4 = load %struct.CallInfo** %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.CallInfo* %4, i64 0, i32 5
  %6 = load i8* %5, align 1, !tbaa !46
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.CallInfo* %4, i64 0, i32 7, i32 0, i32 1
  %11 = load i32 (%struct.lua_State*)** %10, align 8
  %12 = bitcast i32 (%struct.lua_State*)* %11 to i32*
  %13 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 7
  store i32* %12, i32** %13, align 8, !tbaa !111
  br label %14

; <label>:14                                      ; preds = %9, %0
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 17
  store void (%struct.lua_State*, %struct.lua_Debug*)* %.func, void (%struct.lua_State*, %struct.lua_Debug*)** %15, align 8, !tbaa !112
  %16 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 15
  store i32 %count, i32* %16, align 4, !tbaa !113
  %17 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 16
  store i32 %count, i32* %17, align 4, !tbaa !114
  %18 = trunc i32 %mask to i8
  %19 = select i1 %or.cond, i8 0, i8 %18
  %20 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 13
  store i8 %19, i8* %20, align 1, !tbaa !115
  ret i32 1
}

; Function Attrs: nounwind readonly ssp uwtable
define void (%struct.lua_State*, %struct.lua_Debug*)* @lua_gethook(%struct.lua_State* nocapture readonly %L) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 17
  %2 = load void (%struct.lua_State*, %struct.lua_Debug*)** %1, align 8, !tbaa !112
  ret void (%struct.lua_State*, %struct.lua_Debug*)* %2
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_gethookmask(%struct.lua_State* nocapture readonly %L) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 13
  %2 = load i8* %1, align 1, !tbaa !115
  %3 = zext i8 %2 to i32
  ret i32 %3
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @lua_gethookcount(%struct.lua_State* nocapture readonly %L) #1 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 15
  %2 = load i32* %1, align 4, !tbaa !113
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_getstack(%struct.lua_State* readonly %L, i32 %level, %struct.lua_Debug* nocapture %ar) #0 {
  %1 = icmp slt i32 %level, 0
  br i1 %1, label %15, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %ci.05 = load %struct.CallInfo** %3, align 8
  %4 = icmp sgt i32 %level, 0
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 22
  %6 = icmp ne %struct.CallInfo* %ci.05, %5
  %or.cond46 = and i1 %4, %6
  br i1 %or.cond46, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %.lr.ph, %2
  %ci.08 = phi %struct.CallInfo* [ %ci.0, %.lr.ph ], [ %ci.05, %2 ]
  %.017 = phi i32 [ %7, %.lr.ph ], [ %level, %2 ]
  %7 = add nsw i32 %.017, -1
  %8 = getelementptr inbounds %struct.CallInfo* %ci.08, i64 0, i32 2
  %ci.0 = load %struct.CallInfo** %8, align 8
  %9 = icmp sgt i32 %7, 0
  %10 = icmp ne %struct.CallInfo* %ci.0, %5
  %or.cond4 = and i1 %9, %10
  br i1 %or.cond4, label %.lr.ph, label %.critedge

.critedge:                                        ; preds = %.lr.ph, %2
  %ci.0.lcssa = phi %struct.CallInfo* [ %ci.05, %2 ], [ %ci.0, %.lr.ph ]
  %.01.lcssa = phi i32 [ %level, %2 ], [ %7, %.lr.ph ]
  %11 = icmp ne i32 %.01.lcssa, 0
  %12 = icmp eq %struct.CallInfo* %ci.0.lcssa, %5
  %or.cond = or i1 %11, %12
  br i1 %or.cond, label %15, label %13

; <label>:13                                      ; preds = %.critedge
  %14 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 13
  store %struct.CallInfo* %ci.0.lcssa, %struct.CallInfo** %14, align 8, !tbaa !116
  br label %15

; <label>:15                                      ; preds = %13, %.critedge, %0
  %.0 = phi i32 [ 0, %0 ], [ 1, %13 ], [ 0, %.critedge ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_getlocal(%struct.lua_State* nocapture %L, %struct.lua_Debug* readonly %ar, i32 %n) #0 {
  %pos = alloca %struct.lua_TValue*, align 8
  %1 = icmp eq %struct.lua_Debug* %ar, null
  br i1 %1, label %2, label %15

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %4 = load %struct.lua_TValue** %3, align 8, !tbaa !12
  %5 = getelementptr inbounds %struct.lua_TValue* %4, i64 -1, i32 1
  %6 = load i32* %5, align 4, !tbaa !15
  %7 = icmp eq i32 %6, 70
  br i1 %7, label %8, label %32

; <label>:8                                       ; preds = %2
  %9 = getelementptr inbounds %struct.lua_TValue* %4, i64 -1, i32 0, i32 0
  %10 = load %union.GCObject** %9, align 8, !tbaa !25
  %11 = getelementptr inbounds %union.GCObject* %10, i64 0, i32 0, i32 5
  %12 = load %struct.global_State** %11, align 8
  %13 = bitcast %struct.global_State* %12 to %struct.Proto*
  %14 = tail call i8* bitcast (i8* (%struct.Proto.132*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %13, i32 %n, i32 0) #3
  br label %32

; <label>:15                                      ; preds = %0
  store %struct.lua_TValue* null, %struct.lua_TValue** %pos, align 8, !tbaa !25
  %16 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 13
  %17 = load %struct.CallInfo** %16, align 8, !tbaa !116
  %18 = call fastcc i8* @findlocal(%struct.lua_State* %L, %struct.CallInfo* %17, i32 %n, %struct.lua_TValue** %pos)
  %19 = icmp eq i8* %18, null
  br i1 %19, label %32, label %20

; <label>:20                                      ; preds = %15
  %21 = load %struct.lua_TValue** %pos, align 8, !tbaa !25
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %23 = load %struct.lua_TValue** %22, align 8, !tbaa !12
  %24 = bitcast %struct.lua_TValue* %21 to i64*
  %25 = load i64* %24, align 8
  %26 = getelementptr inbounds %struct.lua_TValue* %23, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %25 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %26, align 8
  %27 = getelementptr inbounds %struct.lua_TValue* %21, i64 0, i32 1
  %28 = load i32* %27, align 4, !tbaa !15
  %29 = getelementptr inbounds %struct.lua_TValue* %23, i64 0, i32 1
  store i32 %28, i32* %29, align 4, !tbaa !15
  %30 = load %struct.lua_TValue** %22, align 8, !tbaa !12
  %31 = getelementptr inbounds %struct.lua_TValue* %30, i64 1
  store %struct.lua_TValue* %31, %struct.lua_TValue** %22, align 8, !tbaa !12
  br label %32

; <label>:32                                      ; preds = %20, %15, %8, %2
  %name.0 = phi i8* [ %14, %8 ], [ %18, %20 ], [ null, %15 ], [ null, %2 ]
  ret i8* %name.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @lua_setlocal(%struct.lua_State* nocapture %L, %struct.lua_Debug* nocapture readonly %ar, i32 %n) #0 {
  %pos = alloca %struct.lua_TValue*, align 8
  store %struct.lua_TValue* null, %struct.lua_TValue** %pos, align 8, !tbaa !25
  %1 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 13
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !116
  %3 = call fastcc i8* @findlocal(%struct.lua_State* %L, %struct.CallInfo* %2, i32 %n, %struct.lua_TValue** %pos)
  %4 = icmp eq i8* %3, null
  %.pre = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  br i1 %4, label %._crit_edge, label %5

; <label>:5                                       ; preds = %0
  %6 = load %struct.lua_TValue** %.pre, align 8, !tbaa !12
  %7 = getelementptr inbounds %struct.lua_TValue* %6, i64 -1
  %8 = load %struct.lua_TValue** %pos, align 8, !tbaa !25
  %9 = bitcast %struct.lua_TValue* %7 to i64*
  %10 = load i64* %9, align 8
  %11 = getelementptr inbounds %struct.lua_TValue* %8, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %10 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %11, align 8
  %12 = getelementptr inbounds %struct.lua_TValue* %6, i64 -1, i32 1
  %13 = load i32* %12, align 4, !tbaa !15
  %14 = getelementptr inbounds %struct.lua_TValue* %8, i64 0, i32 1
  store i32 %13, i32* %14, align 4, !tbaa !15
  br label %._crit_edge

._crit_edge:                                      ; preds = %5, %0
  %15 = load %struct.lua_TValue** %.pre, align 8, !tbaa !12
  %16 = getelementptr inbounds %struct.lua_TValue* %15, i64 -1
  store %struct.lua_TValue* %16, %struct.lua_TValue** %.pre, align 8, !tbaa !12
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_getinfo(%struct.lua_State* %L, i8* readonly %what, %struct.lua_Debug* %ar) #0 {
  %v.i = alloca %struct.lua_TValue, align 8
  %1 = load i8* %what, align 1, !tbaa !86
  %2 = icmp eq i8 %1, 62
  br i1 %2, label %3, label %8

; <label>:3                                       ; preds = %0
  %4 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %5 = load %struct.lua_TValue** %4, align 8, !tbaa !12
  %6 = getelementptr inbounds %struct.lua_TValue* %5, i64 -1
  %7 = getelementptr inbounds i8* %what, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %4, align 8, !tbaa !12
  br label %13

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 13
  %10 = load %struct.CallInfo** %9, align 8, !tbaa !116
  %11 = getelementptr inbounds %struct.CallInfo* %10, i64 0, i32 0
  %12 = load %struct.lua_TValue** %11, align 8, !tbaa !24
  br label %13

; <label>:13                                      ; preds = %8, %3
  %func.0 = phi %struct.lua_TValue* [ %6, %3 ], [ %12, %8 ]
  %ci.0 = phi %struct.CallInfo* [ null, %3 ], [ %10, %8 ]
  %.0 = phi i8* [ %7, %3 ], [ %what, %8 ]
  %14 = getelementptr inbounds %struct.lua_TValue* %func.0, i64 0, i32 1
  %15 = load i32* %14, align 4, !tbaa !15
  %16 = and i32 %15, 31
  %17 = icmp eq i32 %16, 6
  br i1 %17, label %18, label %22

; <label>:18                                      ; preds = %13
  %19 = getelementptr inbounds %struct.lua_TValue* %func.0, i64 0, i32 0, i32 0
  %20 = load %union.GCObject** %19, align 8, !tbaa !25
  %21 = bitcast %union.GCObject* %20 to %union.Closure*
  br label %22

; <label>:22                                      ; preds = %18, %13
  %23 = phi %union.Closure* [ %21, %18 ], [ null, %13 ]
  %24 = load i8* %.0, align 1, !tbaa !86
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %auxgetinfo.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %22
  %26 = icmp eq %union.Closure* %23, null
  %27 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 4
  %28 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 6
  %29 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 7
  %30 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 3
  %31 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 12, i64 0
  %32 = getelementptr inbounds %union.Closure* %23, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %union.Closure* %23, i64 0, i32 0, i32 5
  %34 = icmp eq %struct.CallInfo* %ci.0, null
  %35 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 5
  %36 = getelementptr inbounds %struct.CallInfo* %ci.0, i64 0, i32 5
  %37 = getelementptr inbounds %struct.CallInfo* %ci.0, i64 0, i32 0
  %38 = getelementptr inbounds %struct.CallInfo* %ci.0, i64 0, i32 7, i32 0, i32 1
  %39 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 8
  %40 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 10
  %41 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 9
  %42 = getelementptr inbounds %union.Closure* %23, i64 0, i32 0, i32 3
  %43 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 11
  %44 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 2
  %45 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 1
  %46 = getelementptr inbounds %struct.CallInfo* %ci.0, i64 0, i32 2
  %47 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  br label %48

; <label>:48                                      ; preds = %182, %.lr.ph.i
  %49 = phi i8 [ %24, %.lr.ph.i ], [ %184, %182 ]
  %status.02.i = phi i32 [ 1, %.lr.ph.i ], [ %status.1.i, %182 ]
  %.01.i = phi i8* [ %.0, %.lr.ph.i ], [ %183, %182 ]
  %50 = sext i8 %49 to i32
  switch i32 %50, label %181 [
    i32 83, label %51
    i32 108, label %74
    i32 117, label %102
    i32 116, label %117
    i32 110, label %123
    i32 76, label %182
    i32 102, label %182
  ]

; <label>:51                                      ; preds = %48
  br i1 %26, label %55, label %52

; <label>:52                                      ; preds = %51
  %53 = load i8* %32, align 1, !tbaa !118
  %54 = icmp eq i8 %53, 38
  br i1 %54, label %55, label %56

; <label>:55                                      ; preds = %52, %51
  store i8* getelementptr inbounds ([5 x i8]* @.str18, i64 0, i64 0), i8** %27, align 8, !tbaa !119
  store i32 -1, i32* %28, align 4, !tbaa !120
  store i32 -1, i32* %29, align 4, !tbaa !121
  br label %funcinfo.exit.i

; <label>:56                                      ; preds = %52
  %57 = load i32 (%struct.lua_State*)** %33, align 8
  %58 = bitcast i32 (%struct.lua_State*)* %57 to %struct.Proto*
  %59 = getelementptr inbounds %struct.Proto* %58, i64 0, i32 10
  %60 = load %union.TString** %59, align 8, !tbaa !122
  %61 = icmp eq %union.TString* %60, null
  br i1 %61, label %65, label %62

; <label>:62                                      ; preds = %56
  %63 = getelementptr inbounds %union.TString* %60, i64 1
  %64 = bitcast %union.TString* %63 to i8*
  br label %65

; <label>:65                                      ; preds = %62, %56
  %66 = phi i8* [ %64, %62 ], [ getelementptr inbounds ([3 x i8]* @.str20, i64 0, i64 0), %56 ]
  store i8* %66, i8** %27, align 8, !tbaa !119
  %67 = getelementptr inbounds %struct.Proto* %58, i64 0, i32 17
  %68 = load i32* %67, align 4, !tbaa !123
  store i32 %68, i32* %28, align 4, !tbaa !120
  %69 = getelementptr inbounds %struct.Proto* %58, i64 0, i32 18
  %70 = load i32* %69, align 4, !tbaa !124
  store i32 %70, i32* %29, align 4, !tbaa !121
  %71 = icmp eq i32 %68, 0
  %72 = select i1 %71, i8* getelementptr inbounds ([5 x i8]* @.str21, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str22, i64 0, i64 0)
  br label %funcinfo.exit.i

funcinfo.exit.i:                                  ; preds = %65, %55
  %storemerge3.i = phi i8* [ %72, %65 ], [ getelementptr inbounds ([2 x i8]* @.str19, i64 0, i64 0), %55 ]
  %73 = phi i8* [ %66, %65 ], [ getelementptr inbounds ([5 x i8]* @.str18, i64 0, i64 0), %55 ]
  store i8* %storemerge3.i, i8** %30, align 8, !tbaa !125
  call void @luaO_chunkid(i8* %31, i8* %73, i64 60) #3
  br label %182

; <label>:74                                      ; preds = %48
  br i1 %34, label %currentline.exit.i, label %75

; <label>:75                                      ; preds = %74
  %76 = load i8* %36, align 1, !tbaa !46
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %currentline.exit.i, label %79

; <label>:79                                      ; preds = %75
  %80 = load %struct.lua_TValue** %37, align 8, !tbaa !24
  %81 = getelementptr inbounds %struct.lua_TValue* %80, i64 0, i32 0, i32 0
  %82 = load %union.GCObject** %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %union.GCObject* %82, i64 0, i32 0, i32 5
  %84 = load %struct.global_State** %83, align 8
  %85 = getelementptr inbounds %struct.global_State* %84, i64 0, i32 5
  %86 = bitcast i64* %85 to i32**
  %87 = load i32** %86, align 8, !tbaa !105
  %88 = icmp eq i32* %87, null
  br i1 %88, label %currentline.exit.i, label %89

; <label>:89                                      ; preds = %79
  %90 = load i32 (%struct.lua_State*)** %38, align 8
  %91 = getelementptr inbounds %struct.global_State* %84, i64 0, i32 3
  %92 = bitcast i64* %91 to i32**
  %93 = load i32** %92, align 8, !tbaa !83
  %94 = ptrtoint i32 (%struct.lua_State*)* %90 to i64
  %95 = ptrtoint i32* %93 to i64
  %96 = sub i64 %94, %95
  %97 = shl i64 %96, 30
  %sext.i.i = add i64 %97, -4294967296
  %98 = ashr exact i64 %sext.i.i, 32
  %99 = getelementptr inbounds i32* %87, i64 %98
  %100 = load i32* %99, align 4, !tbaa !1
  br label %currentline.exit.i

currentline.exit.i:                               ; preds = %89, %79, %75, %74
  %101 = phi i32 [ -1, %75 ], [ -1, %74 ], [ %100, %89 ], [ 0, %79 ]
  store i32 %101, i32* %35, align 4, !tbaa !126
  br label %182

; <label>:102                                     ; preds = %48
  br i1 %26, label %.critedge.i, label %103

; <label>:103                                     ; preds = %102
  %104 = load i8* %42, align 1, !tbaa !26
  store i8 %104, i8* %39, align 1, !tbaa !127
  %105 = load i8* %32, align 1, !tbaa !118
  %106 = icmp eq i8 %105, 38
  br i1 %106, label %107, label %108

.critedge.i:                                      ; preds = %102
  store i8 0, i8* %39, align 1, !tbaa !127
  br label %107

; <label>:107                                     ; preds = %.critedge.i, %103
  store i8 1, i8* %40, align 1, !tbaa !128
  store i8 0, i8* %41, align 1, !tbaa !129
  br label %182

; <label>:108                                     ; preds = %103
  %109 = load i32 (%struct.lua_State*)** %33, align 8
  %110 = bitcast i32 (%struct.lua_State*)* %109 to %struct.Proto*
  %111 = getelementptr inbounds %struct.Proto* %110, i64 0, i32 21
  %112 = load i8* %111, align 1, !tbaa !130
  store i8 %112, i8* %40, align 1, !tbaa !128
  %113 = load i32 (%struct.lua_State*)** %33, align 8
  %114 = bitcast i32 (%struct.lua_State*)* %113 to %struct.Proto*
  %115 = getelementptr inbounds %struct.Proto* %114, i64 0, i32 20
  %116 = load i8* %115, align 1, !tbaa !131
  store i8 %116, i8* %41, align 1, !tbaa !129
  br label %182

; <label>:117                                     ; preds = %48
  br i1 %34, label %121, label %118

; <label>:118                                     ; preds = %117
  %119 = load i8* %36, align 1, !tbaa !46
  %120 = and i8 %119, 64
  br label %121

; <label>:121                                     ; preds = %118, %117
  %122 = phi i8 [ %120, %118 ], [ 0, %117 ]
  store i8 %122, i8* %43, align 1, !tbaa !132
  br label %182

; <label>:123                                     ; preds = %48
  br i1 %34, label %getfuncname.exit.thread.i, label %124

; <label>:124                                     ; preds = %123
  %125 = load i8* %36, align 1, !tbaa !46
  %126 = and i8 %125, 64
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %getfuncname.exit.thread.i

; <label>:128                                     ; preds = %124
  %129 = load %struct.CallInfo** %46, align 8, !tbaa !133
  %130 = getelementptr inbounds %struct.CallInfo* %129, i64 0, i32 5
  %131 = load i8* %130, align 1, !tbaa !46
  %132 = and i8 %131, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %getfuncname.exit.thread.i, label %134

; <label>:134                                     ; preds = %128
  %135 = getelementptr inbounds %struct.CallInfo* %129, i64 0, i32 0
  %136 = load %struct.lua_TValue** %135, align 8, !tbaa !24
  %137 = getelementptr inbounds %struct.lua_TValue* %136, i64 0, i32 0, i32 0
  %138 = load %union.GCObject** %137, align 8, !tbaa !25
  %139 = getelementptr inbounds %union.GCObject* %138, i64 0, i32 0, i32 5
  %140 = load %struct.global_State** %139, align 8
  %141 = bitcast %struct.global_State* %140 to %struct.Proto*
  %142 = getelementptr inbounds %struct.CallInfo* %129, i64 0, i32 7, i32 0, i32 1
  %143 = load i32 (%struct.lua_State*)** %142, align 8
  %144 = getelementptr inbounds %struct.global_State* %140, i64 0, i32 3
  %145 = bitcast i64* %144 to i32**
  %146 = load i32** %145, align 8, !tbaa !83
  %147 = ptrtoint i32 (%struct.lua_State*)* %143 to i64
  %148 = ptrtoint i32* %146 to i64
  %149 = sub i64 %147, %148
  %150 = lshr exact i64 %149, 2
  %151 = trunc i64 %150 to i32
  %152 = add nsw i32 %151, -1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32* %146, i64 %153
  %155 = load i32* %154, align 4, !tbaa !1
  %156 = and i32 %155, 63
  switch i32 %156, label %getfuncname.exit.thread.i [
    i32 29, label %getfuncname.exit.i
    i32 30, label %getfuncname.exit.i
    i32 34, label %getfuncname.exit.thread5.i
    i32 12, label %170
    i32 6, label %170
    i32 7, label %170
    i32 8, label %157
    i32 10, label %157
    i32 24, label %158
    i32 13, label %159
    i32 14, label %160
    i32 15, label %161
    i32 16, label %162
    i32 17, label %163
    i32 18, label %164
    i32 19, label %165
    i32 21, label %166
    i32 25, label %167
    i32 26, label %168
    i32 22, label %169
  ]

; <label>:157                                     ; preds = %134, %134
  br label %170

; <label>:158                                     ; preds = %134
  br label %170

; <label>:159                                     ; preds = %134
  br label %170

; <label>:160                                     ; preds = %134
  br label %170

; <label>:161                                     ; preds = %134
  br label %170

; <label>:162                                     ; preds = %134
  br label %170

; <label>:163                                     ; preds = %134
  br label %170

; <label>:164                                     ; preds = %134
  br label %170

; <label>:165                                     ; preds = %134
  br label %170

; <label>:166                                     ; preds = %134
  br label %170

; <label>:167                                     ; preds = %134
  br label %170

; <label>:168                                     ; preds = %134
  br label %170

; <label>:169                                     ; preds = %134
  br label %170

; <label>:170                                     ; preds = %169, %168, %167, %166, %165, %164, %163, %162, %161, %160, %159, %158, %157, %134, %134, %134
  %tm.0.i.i = phi i64 [ 15, %169 ], [ 14, %168 ], [ 13, %167 ], [ 4, %166 ], [ 12, %165 ], [ 11, %164 ], [ 10, %163 ], [ 9, %162 ], [ 8, %161 ], [ 7, %160 ], [ 6, %159 ], [ 5, %158 ], [ 1, %157 ], [ 0, %134 ], [ 0, %134 ], [ 0, %134 ]
  %171 = load %struct.global_State** %47, align 8, !tbaa !17
  %172 = getelementptr inbounds %struct.global_State* %171, i64 0, i32 33, i64 %tm.0.i.i
  %173 = load %union.TString** %172, align 8, !tbaa !25
  %174 = getelementptr inbounds %union.TString* %173, i64 1
  %175 = bitcast %union.TString* %174 to i8*
  br label %getfuncname.exit.thread5.i

getfuncname.exit.thread.i:                        ; preds = %134, %128, %124, %123
  store i8* null, i8** %44, align 8, !tbaa !134
  br label %180

getfuncname.exit.thread5.i:                       ; preds = %170, %134
  %storemerge.i = phi i8* [ %175, %170 ], [ getelementptr inbounds ([13 x i8]* @.str1612, i64 0, i64 0), %134 ]
  %storemerge.ph.i = phi i8* [ getelementptr inbounds ([11 x i8]* @.str17, i64 0, i64 0), %170 ], [ getelementptr inbounds ([13 x i8]* @.str1612, i64 0, i64 0), %134 ]
  store i8* %storemerge.i, i8** %45, align 8, !tbaa !25
  store i8* %storemerge.ph.i, i8** %44, align 8, !tbaa !134
  br label %182

getfuncname.exit.i:                               ; preds = %134, %134
  %176 = lshr i32 %155, 6
  %177 = and i32 %176, 255
  %178 = call fastcc i8* @getobjname(%struct.Proto* %141, i32 %152, i32 %177, i8** %45) #3
  store i8* %178, i8** %44, align 8, !tbaa !134
  %179 = icmp eq i8* %178, null
  br i1 %179, label %180, label %182

; <label>:180                                     ; preds = %getfuncname.exit.i, %getfuncname.exit.thread.i
  store i8* getelementptr inbounds ([1 x i8]* @.str15, i64 0, i64 0), i8** %44, align 8, !tbaa !134
  store i8* null, i8** %45, align 8, !tbaa !135
  br label %182

; <label>:181                                     ; preds = %48
  br label %182

; <label>:182                                     ; preds = %181, %180, %getfuncname.exit.i, %getfuncname.exit.thread5.i, %121, %108, %107, %currentline.exit.i, %funcinfo.exit.i, %48, %48
  %status.1.i = phi i32 [ 0, %181 ], [ %status.02.i, %48 ], [ %status.02.i, %48 ], [ %status.02.i, %180 ], [ %status.02.i, %getfuncname.exit.i ], [ %status.02.i, %121 ], [ %status.02.i, %107 ], [ %status.02.i, %108 ], [ %status.02.i, %currentline.exit.i ], [ %status.02.i, %funcinfo.exit.i ], [ %status.02.i, %getfuncname.exit.thread5.i ]
  %183 = getelementptr inbounds i8* %.01.i, i64 1
  %184 = load i8* %183, align 1, !tbaa !86
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %auxgetinfo.exit, label %48

auxgetinfo.exit:                                  ; preds = %182, %22
  %status.0.lcssa.i = phi i32 [ 1, %22 ], [ %status.1.i, %182 ]
  %186 = call i8* @strchr(i8* %.0, i32 102) #3
  %187 = icmp eq i8* %186, null
  br i1 %187, label %198, label %188

; <label>:188                                     ; preds = %auxgetinfo.exit
  %189 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %190 = load %struct.lua_TValue** %189, align 8, !tbaa !12
  %191 = bitcast %struct.lua_TValue* %func.0 to i64*
  %192 = load i64* %191, align 8
  %193 = getelementptr inbounds %struct.lua_TValue* %190, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %192 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %193, align 8
  %194 = load i32* %14, align 4, !tbaa !15
  %195 = getelementptr inbounds %struct.lua_TValue* %190, i64 0, i32 1
  store i32 %194, i32* %195, align 4, !tbaa !15
  %196 = load %struct.lua_TValue** %189, align 8, !tbaa !12
  %197 = getelementptr inbounds %struct.lua_TValue* %196, i64 1
  store %struct.lua_TValue* %197, %struct.lua_TValue** %189, align 8, !tbaa !12
  br label %198

; <label>:198                                     ; preds = %188, %auxgetinfo.exit
  %199 = call i8* @strchr(i8* %.0, i32 76) #3
  %200 = icmp eq i8* %199, null
  br i1 %200, label %collectvalidlines.exit, label %201

; <label>:201                                     ; preds = %198
  %202 = bitcast %struct.lua_TValue* %v.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %202) #3
  %203 = icmp eq %union.Closure* %23, null
  br i1 %203, label %208, label %204

; <label>:204                                     ; preds = %201
  %205 = getelementptr inbounds %union.Closure* %23, i64 0, i32 0, i32 1
  %206 = load i8* %205, align 1, !tbaa !118
  %207 = icmp eq i8 %206, 38
  br i1 %207, label %208, label %213

; <label>:208                                     ; preds = %204, %201
  %209 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %210 = load %struct.lua_TValue** %209, align 8, !tbaa !12
  %211 = getelementptr inbounds %struct.lua_TValue* %210, i64 0, i32 1
  store i32 0, i32* %211, align 4, !tbaa !15
  %212 = getelementptr inbounds %struct.lua_TValue* %210, i64 1
  store %struct.lua_TValue* %212, %struct.lua_TValue** %209, align 8, !tbaa !12
  br label %collectvalidlines.exit

; <label>:213                                     ; preds = %204
  %214 = getelementptr inbounds %union.Closure* %23, i64 0, i32 0, i32 5
  %215 = load i32 (%struct.lua_State*)** %214, align 8
  %216 = bitcast i32 (%struct.lua_State*)* %215 to %struct.Proto*
  %217 = getelementptr inbounds %struct.Proto* %216, i64 0, i32 6
  %218 = load i32** %217, align 8, !tbaa !105
  %219 = call %struct.Table* @luaH_new(%struct.lua_State* %L) #3
  %220 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %221 = load %struct.lua_TValue** %220, align 8, !tbaa !12
  %222 = bitcast %struct.Table* %219 to %union.GCObject*
  %223 = getelementptr inbounds %struct.lua_TValue* %221, i64 0, i32 0, i32 0
  store %union.GCObject* %222, %union.GCObject** %223, align 8, !tbaa !25
  %224 = getelementptr inbounds %struct.lua_TValue* %221, i64 0, i32 1
  store i32 69, i32* %224, align 4, !tbaa !15
  %225 = load %struct.lua_TValue** %220, align 8, !tbaa !12
  %226 = getelementptr inbounds %struct.lua_TValue* %225, i64 1
  store %struct.lua_TValue* %226, %struct.lua_TValue** %220, align 8, !tbaa !12
  %227 = bitcast %struct.lua_TValue* %v.i to i32*
  store i32 1, i32* %227, align 8, !tbaa !1
  %228 = getelementptr inbounds %struct.lua_TValue* %v.i, i64 0, i32 1
  store i32 1, i32* %228, align 8, !tbaa !15
  %229 = load i32 (%struct.lua_State*)** %214, align 8
  %230 = bitcast i32 (%struct.lua_State*)* %229 to %struct.Proto*
  %231 = getelementptr inbounds %struct.Proto* %230, i64 0, i32 14
  %232 = load i32* %231, align 4, !tbaa !107
  %233 = icmp sgt i32 %232, 0
  br i1 %233, label %.lr.ph.i1, label %collectvalidlines.exit

.lr.ph.i1:                                        ; preds = %.lr.ph.i1, %213
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %.lr.ph.i1 ], [ 0, %213 ]
  %234 = getelementptr inbounds i32* %218, i64 %indvars.iv.i
  %235 = load i32* %234, align 4, !tbaa !1
  call void @luaH_setint(%struct.lua_State* %L, %struct.Table* %219, i32 %235, %struct.lua_TValue* %v.i) #3
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %236 = load i32 (%struct.lua_State*)** %214, align 8
  %237 = bitcast i32 (%struct.lua_State*)* %236 to %struct.Proto*
  %238 = getelementptr inbounds %struct.Proto* %237, i64 0, i32 14
  %239 = load i32* %238, align 4, !tbaa !107
  %240 = trunc i64 %indvars.iv.next.i to i32
  %241 = icmp slt i32 %240, %239
  br i1 %241, label %.lr.ph.i1, label %collectvalidlines.exit

collectvalidlines.exit:                           ; preds = %.lr.ph.i1, %213, %208, %198
  ret i32 %status.0.lcssa.i
}

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #5

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaG_typeerror(%struct.lua_State* %L, %struct.lua_TValue* %o, i8* %op) #4 {
  %name = alloca i8*, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  store i8* null, i8** %name, align 8, !tbaa !25
  %3 = getelementptr inbounds %struct.lua_TValue* %o, i64 0, i32 1
  %4 = load i32* %3, align 4, !tbaa !15
  %5 = and i32 %4, 15
  %6 = add nsw i32 %5, 1
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds [12 x i8*]* @luaT_typenames_, i64 0, i64 %7
  %9 = load i8** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 5
  %11 = load i8* %10, align 1, !tbaa !46
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %.thread, label %14

; <label>:14                                      ; preds = %0
  %15 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %16 = load %struct.lua_TValue** %15, align 8, !tbaa !24
  %17 = getelementptr inbounds %struct.lua_TValue* %16, i64 0, i32 0, i32 0
  %18 = load %union.GCObject** %17, align 8, !tbaa !25
  %19 = getelementptr inbounds %union.GCObject* %18, i64 0, i32 0, i32 3
  %20 = load i8* %19, align 1, !tbaa !60
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %.loopexit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %14
  %22 = getelementptr inbounds %union.GCObject* %18, i64 0, i32 0, i32 6
  %23 = bitcast %struct.CallInfo** %22 to [1 x %struct.UpVal*]*
  %24 = zext i8 %20 to i32
  br label %28

; <label>:25                                      ; preds = %28
  %26 = trunc i64 %indvars.iv.next.i to i32
  %27 = icmp slt i32 %26, %24
  br i1 %27, label %28, label %.loopexit

; <label>:28                                      ; preds = %25, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %25 ]
  %29 = getelementptr inbounds [1 x %struct.UpVal*]* %23, i64 0, i64 %indvars.iv.i
  %30 = load %struct.UpVal** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.UpVal* %30, i64 0, i32 3
  %32 = load %struct.lua_TValue** %31, align 8, !tbaa !75
  %33 = icmp eq %struct.lua_TValue* %32, %o
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %33, label %34, label %25

; <label>:34                                      ; preds = %28
  %35 = getelementptr inbounds %union.GCObject* %18, i64 0, i32 0, i32 5
  %36 = load %struct.global_State** %35, align 8
  %37 = getelementptr inbounds %struct.global_State* %36, i64 0, i32 6, i32 1
  %38 = bitcast i32* %37 to %struct.Upvaldesc**
  %39 = load %struct.Upvaldesc** %38, align 8, !tbaa !76
  %40 = getelementptr inbounds %struct.Upvaldesc* %39, i64 %indvars.iv.i, i32 0
  %41 = load %union.TString** %40, align 8, !tbaa !77
  %42 = icmp eq %union.TString* %41, null
  br i1 %42, label %.thread5, label %43

; <label>:43                                      ; preds = %34
  %44 = getelementptr inbounds %union.TString* %41, i64 1
  %45 = bitcast %union.TString* %44 to i8*
  br label %.thread5

.thread5:                                         ; preds = %43, %34
  %.0.i.i = phi i8* [ %45, %43 ], [ getelementptr inbounds ([2 x i8]* @.str14, i64 0, i64 0), %34 ]
  store i8* %.0.i.i, i8** %name, align 8, !tbaa !25
  br label %78

.loopexit:                                        ; preds = %25, %14
  %46 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 7
  %47 = bitcast %union.anon.2* %46 to %struct.lua_TValue**
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !136
  %49 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 1
  %50 = load %struct.lua_TValue** %49, align 8, !tbaa !14
  %51 = icmp ult %struct.lua_TValue* %48, %50
  br i1 %51, label %.lr.ph.i1, label %.thread

; <label>:52                                      ; preds = %.lr.ph.i1
  %53 = icmp ult %struct.lua_TValue* %55, %50
  br i1 %53, label %.lr.ph.i1, label %.thread

.lr.ph.i1:                                        ; preds = %52, %.loopexit
  %p.01.i = phi %struct.lua_TValue* [ %55, %52 ], [ %48, %.loopexit ]
  %54 = icmp eq %struct.lua_TValue* %p.01.i, %o
  %55 = getelementptr inbounds %struct.lua_TValue* %p.01.i, i64 1
  br i1 %54, label %56, label %52

; <label>:56                                      ; preds = %.lr.ph.i1
  %57 = getelementptr inbounds %union.GCObject* %18, i64 0, i32 0, i32 5
  %58 = load %struct.global_State** %57, align 8
  %59 = bitcast %struct.global_State* %58 to %struct.Proto*
  %60 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 7, i32 0, i32 1
  %61 = load i32 (%struct.lua_State*)** %60, align 8
  %62 = getelementptr inbounds %struct.global_State* %58, i64 0, i32 3
  %63 = bitcast i64* %62 to i32**
  %64 = load i32** %63, align 8, !tbaa !83
  %65 = ptrtoint i32 (%struct.lua_State*)* %61 to i64
  %66 = ptrtoint i32* %64 to i64
  %67 = sub i64 %65, %66
  %68 = lshr exact i64 %67, 2
  %69 = trunc i64 %68 to i32
  %70 = add nsw i32 %69, -1
  %71 = ptrtoint %struct.lua_TValue* %o to i64
  %72 = ptrtoint %struct.lua_TValue* %48 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 4
  %75 = trunc i64 %74 to i32
  %76 = call fastcc i8* @getobjname(%struct.Proto* %59, i32 %70, i32 %75, i8** %name)
  %77 = icmp eq i8* %76, null
  br i1 %77, label %.thread, label %._crit_edge

._crit_edge:                                      ; preds = %56
  %.pre = load i8** %name, align 8, !tbaa !25
  br label %78

; <label>:78                                      ; preds = %._crit_edge, %.thread5
  %79 = phi i8* [ %.0.i.i, %.thread5 ], [ %.pre, %._crit_edge ]
  %kind.06 = phi i8* [ getelementptr inbounds ([8 x i8]* @.str11, i64 0, i64 0), %.thread5 ], [ %76, %._crit_edge ]
  call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8]* @.str5, i64 0, i64 0), i8* %op, i8* %kind.06, i8* %79, i8* %9) #14
  unreachable

.thread:                                          ; preds = %56, %52, %.loopexit, %0
  call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([25 x i8]* @.str16, i64 0, i64 0), i8* %op, i8* %9) #14
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaG_runerror(%struct.lua_State* %L, i8* %fmt, ...) #4 {
  %buff.i = alloca [60 x i8], align 16
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  %2 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.va_start(i8* %2)
  %3 = call i8* bitcast (i8* (%struct.lua_State.228*, i8*, %struct.__va_list_tag*)* @luaO_pushvfstring to i8* (%struct.lua_State*, i8*, %struct.__va_list_tag*)*)(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %1) #3
  %4 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %5 = load %struct.CallInfo** %4, align 8, !tbaa !5
  %6 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 5
  %7 = load i8* %6, align 1, !tbaa !46
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %addinfo.exit, label %10

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds [60 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 60, i8* %11) #3
  %12 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 0
  %13 = load %struct.lua_TValue** %12, align 8, !tbaa !24
  %14 = getelementptr inbounds %struct.lua_TValue* %13, i64 0, i32 0, i32 0
  %15 = load %union.GCObject** %14, align 8, !tbaa !25
  %16 = getelementptr inbounds %union.GCObject* %15, i64 0, i32 0, i32 5
  %17 = load %struct.global_State** %16, align 8
  %18 = getelementptr inbounds %struct.global_State* %17, i64 0, i32 5
  %19 = bitcast i64* %18 to i32**
  %20 = load i32** %19, align 8, !tbaa !105
  %21 = icmp eq i32* %20, null
  br i1 %21, label %currentline.exit.i, label %22

; <label>:22                                      ; preds = %10
  %23 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 7, i32 0, i32 1
  %24 = load i32 (%struct.lua_State*)** %23, align 8
  %25 = getelementptr inbounds %struct.global_State* %17, i64 0, i32 3
  %26 = bitcast i64* %25 to i32**
  %27 = load i32** %26, align 8, !tbaa !83
  %28 = ptrtoint i32 (%struct.lua_State*)* %24 to i64
  %29 = ptrtoint i32* %27 to i64
  %30 = sub i64 %28, %29
  %31 = shl i64 %30, 30
  %sext.i.i = add i64 %31, -4294967296
  %32 = ashr exact i64 %sext.i.i, 32
  %33 = getelementptr inbounds i32* %20, i64 %32
  %34 = load i32* %33, align 4, !tbaa !1
  br label %currentline.exit.i

currentline.exit.i:                               ; preds = %22, %10
  %35 = phi i32 [ %34, %22 ], [ 0, %10 ]
  %36 = getelementptr inbounds %struct.global_State* %17, i64 0, i32 7, i32 1
  %37 = bitcast i32* %36 to %union.TString**
  %38 = load %union.TString** %37, align 8, !tbaa !122
  %39 = icmp eq %union.TString* %38, null
  br i1 %39, label %43, label %40

; <label>:40                                      ; preds = %currentline.exit.i
  %41 = getelementptr inbounds %union.TString* %38, i64 1
  %42 = bitcast %union.TString* %41 to i8*
  call void @luaO_chunkid(i8* %11, i8* %42, i64 60) #3
  br label %45

; <label>:43                                      ; preds = %currentline.exit.i
  store i8 63, i8* %11, align 16, !tbaa !86
  %44 = getelementptr inbounds [60 x i8]* %buff.i, i64 0, i64 1
  store i8 0, i8* %44, align 1, !tbaa !86
  br label %45

; <label>:45                                      ; preds = %43, %40
  %46 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str6, i64 0, i64 0), i8* %11, i32 %35, i8* %3) #3
  call void @llvm.lifetime.end(i64 60, i8* %11) #3
  br label %addinfo.exit

addinfo.exit:                                     ; preds = %45, %0
  call void @llvm.va_end(i8* %2)
  call void @luaG_errormsg(%struct.lua_State* %L) #14
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaG_concaterror(%struct.lua_State* %L, %struct.lua_TValue* %p1, %struct.lua_TValue* %p2) #4 {
  %1 = getelementptr inbounds %struct.lua_TValue* %p1, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 15
  %4 = icmp eq i32 %3, 4
  %5 = icmp eq i32 %2, 3
  %or.cond = or i1 %4, %5
  %.0 = select i1 %or.cond, %struct.lua_TValue* %p2, %struct.lua_TValue* %p1
  tail call void @luaG_typeerror(%struct.lua_State* %L, %struct.lua_TValue* %.0, i8* getelementptr inbounds ([12 x i8]* @.str27, i64 0, i64 0)) #14
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaG_aritherror(%struct.lua_State* %L, %struct.lua_TValue* %p1, %struct.lua_TValue* %p2) #4 {
  %temp = alloca %struct.lua_TValue, align 8
  %1 = call %struct.lua_TValue* bitcast (%struct.lua_TValue.215* (%struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_tonumber to %struct.lua_TValue* (%struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_TValue* %p1, %struct.lua_TValue* %temp) #3
  %2 = icmp eq %struct.lua_TValue* %1, null
  %p1.p2 = select i1 %2, %struct.lua_TValue* %p1, %struct.lua_TValue* %p2
  call void @luaG_typeerror(%struct.lua_State* %L, %struct.lua_TValue* %p1.p2, i8* getelementptr inbounds ([22 x i8]* @.str38, i64 0, i64 0)) #14
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaG_ordererror(%struct.lua_State* %L, %struct.lua_TValue* nocapture readonly %p1, %struct.lua_TValue* nocapture readonly %p2) #4 {
  %1 = getelementptr inbounds %struct.lua_TValue* %p1, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 15
  %4 = add nsw i32 %3, 1
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds [12 x i8*]* @luaT_typenames_, i64 0, i64 %5
  %7 = load i8** %6, align 8, !tbaa !25
  %8 = getelementptr inbounds %struct.lua_TValue* %p2, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !15
  %10 = and i32 %9, 15
  %11 = add nsw i32 %10, 1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds [12 x i8*]* @luaT_typenames_, i64 0, i64 %12
  %14 = load i8** %13, align 8, !tbaa !25
  %15 = icmp eq i8* %7, %14
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %0
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8]* @.str49, i64 0, i64 0), i8* %7) #14
  unreachable

; <label>:17                                      ; preds = %0
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str510, i64 0, i64 0), i8* %7, i8* %14) #14
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaG_errormsg(%struct.lua_State* %L) #4 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 21
  %2 = load i64* %1, align 8, !tbaa !58
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %34, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !13
  %7 = bitcast %struct.lua_TValue* %6 to i8*
  %.sum = add i64 %2, 8
  %8 = getelementptr inbounds i8* %7, i64 %.sum
  %9 = bitcast i8* %8 to i32*
  %10 = load i32* %9, align 4, !tbaa !15
  %11 = and i32 %10, 15
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %14, label %13

; <label>:13                                      ; preds = %4
  tail call void @luaD_throw(%struct.lua_State* %L, i32 6) #13
  unreachable

; <label>:14                                      ; preds = %4
  %15 = getelementptr inbounds i8* %7, i64 %2
  %16 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %17 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %18 = getelementptr inbounds %struct.lua_TValue* %17, i64 -1
  %19 = bitcast %struct.lua_TValue* %18 to i64*
  %20 = load i64* %19, align 8
  %21 = getelementptr inbounds %struct.lua_TValue* %17, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %20 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %21, align 8
  %22 = getelementptr inbounds %struct.lua_TValue* %17, i64 -1, i32 1
  %23 = load i32* %22, align 4, !tbaa !15
  %24 = getelementptr inbounds %struct.lua_TValue* %17, i64 0, i32 1
  store i32 %23, i32* %24, align 4, !tbaa !15
  %25 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %26 = bitcast i8* %15 to i64*
  %27 = load i64* %26, align 8
  %28 = getelementptr inbounds %struct.lua_TValue* %25, i64 -1, i32 0, i32 0
  %.c3 = inttoptr i64 %27 to %union.GCObject*
  store %union.GCObject* %.c3, %union.GCObject** %28, align 8
  %29 = load i32* %9, align 4, !tbaa !15
  %30 = getelementptr inbounds %struct.lua_TValue* %25, i64 -1, i32 1
  store i32 %29, i32* %30, align 4, !tbaa !15
  %31 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %32 = getelementptr inbounds %struct.lua_TValue* %31, i64 1
  store %struct.lua_TValue* %32, %struct.lua_TValue** %16, align 8, !tbaa !12
  %33 = getelementptr inbounds %struct.lua_TValue* %31, i64 -1
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %33, i32 1, i32 0) #3
  br label %34

; <label>:34                                      ; preds = %14, %0
  tail call void @luaD_throw(%struct.lua_State* %L, i32 2) #13
  unreachable
}

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @findlocal(%struct.lua_State* nocapture readonly %L, %struct.CallInfo* readonly %ci, i32 %n, %struct.lua_TValue** nocapture %pos) #0 {
  %1 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 5
  %2 = load i8* %1, align 1, !tbaa !46
  %3 = and i8 %2, 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %.thread, label %5

; <label>:5                                       ; preds = %0
  %6 = icmp slt i32 %n, 0
  br i1 %6, label %7, label %34

; <label>:7                                       ; preds = %5
  %8 = sub nsw i32 0, %n
  %9 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 0
  %10 = load %struct.lua_TValue** %9, align 8, !tbaa !24
  %11 = getelementptr inbounds %struct.lua_TValue* %10, i64 0, i32 0, i32 0
  %12 = load %union.GCObject** %11, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 5
  %14 = load %struct.global_State** %13, align 8
  %15 = getelementptr inbounds %struct.global_State* %14, i64 0, i32 17
  %16 = bitcast %union.GCObject*** %15 to i8*
  %17 = load i8* %16, align 1, !tbaa !131
  %18 = sext i32 %8 to i64
  %19 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 7
  %20 = bitcast %union.anon.2* %19 to %struct.lua_TValue**
  %21 = load %struct.lua_TValue** %20, align 8, !tbaa !136
  %22 = ptrtoint %struct.lua_TValue* %21 to i64
  %23 = ptrtoint %struct.lua_TValue* %10 to i64
  %24 = sub i64 %22, %23
  %25 = ashr exact i64 %24, 4
  %26 = zext i8 %17 to i64
  %27 = sub nsw i64 %25, %26
  %28 = icmp slt i64 %18, %27
  br i1 %28, label %29, label %findvararg.exit

; <label>:29                                      ; preds = %7
  %.sum.i = add i64 %26, %18
  %30 = getelementptr inbounds %struct.lua_TValue* %10, i64 %.sum.i
  store %struct.lua_TValue* %30, %struct.lua_TValue** %pos, align 8, !tbaa !25
  br label %findvararg.exit

.thread:                                          ; preds = %0
  %31 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 0
  %32 = load %struct.lua_TValue** %31, align 8, !tbaa !24
  %33 = getelementptr inbounds %struct.lua_TValue* %32, i64 1
  br label %58

; <label>:34                                      ; preds = %5
  %35 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 7
  %36 = bitcast %union.anon.2* %35 to %struct.lua_TValue**
  %37 = load %struct.lua_TValue** %36, align 8, !tbaa !136
  %38 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 0
  %39 = load %struct.lua_TValue** %38, align 8, !tbaa !24
  %40 = getelementptr inbounds %struct.lua_TValue* %39, i64 0, i32 0, i32 0
  %41 = load %union.GCObject** %40, align 8, !tbaa !25
  %42 = getelementptr inbounds %union.GCObject* %41, i64 0, i32 0, i32 5
  %43 = load %struct.global_State** %42, align 8
  %44 = bitcast %struct.global_State* %43 to %struct.Proto*
  %45 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 7, i32 0, i32 1
  %46 = load i32 (%struct.lua_State*)** %45, align 8
  %47 = getelementptr inbounds %struct.global_State* %43, i64 0, i32 3
  %48 = bitcast i64* %47 to i32**
  %49 = load i32** %48, align 8, !tbaa !83
  %50 = ptrtoint i32 (%struct.lua_State*)* %46 to i64
  %51 = ptrtoint i32* %49 to i64
  %52 = sub i64 %50, %51
  %53 = lshr exact i64 %52, 2
  %54 = trunc i64 %53 to i32
  %55 = add nsw i32 %54, -1
  %56 = tail call i8* bitcast (i8* (%struct.Proto.132*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %44, i32 %n, i32 %55) #3
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %77

; <label>:58                                      ; preds = %34, %.thread
  %base.02 = phi %struct.lua_TValue* [ %33, %.thread ], [ %37, %34 ]
  %59 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %60 = load %struct.CallInfo** %59, align 8, !tbaa !5
  %61 = icmp eq %struct.CallInfo* %60, %ci
  br i1 %61, label %62, label %64

; <label>:62                                      ; preds = %58
  %63 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  br label %68

; <label>:64                                      ; preds = %58
  %65 = getelementptr inbounds %struct.CallInfo* %ci, i64 0, i32 3
  %66 = load %struct.CallInfo** %65, align 8, !tbaa !138
  %67 = getelementptr inbounds %struct.CallInfo* %66, i64 0, i32 0
  br label %68

; <label>:68                                      ; preds = %64, %62
  %.in = phi %struct.lua_TValue** [ %63, %62 ], [ %67, %64 ]
  %69 = load %struct.lua_TValue** %.in, align 8
  %70 = ptrtoint %struct.lua_TValue* %69 to i64
  %71 = ptrtoint %struct.lua_TValue* %base.02 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 4
  %74 = sext i32 %n to i64
  %75 = icmp sge i64 %73, %74
  %76 = icmp sgt i32 %n, 0
  %or.cond = and i1 %75, %76
  br i1 %or.cond, label %77, label %findvararg.exit

; <label>:77                                      ; preds = %68, %34
  %base.03 = phi %struct.lua_TValue* [ %37, %34 ], [ %base.02, %68 ]
  %name.1 = phi i8* [ %56, %34 ], [ getelementptr inbounds ([13 x i8]* @.str23, i64 0, i64 0), %68 ]
  %78 = add nsw i32 %n, -1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds %struct.lua_TValue* %base.03, i64 %79
  store %struct.lua_TValue* %80, %struct.lua_TValue** %pos, align 8, !tbaa !25
  br label %findvararg.exit

findvararg.exit:                                  ; preds = %77, %68, %29, %7
  %.0 = phi i8* [ %name.1, %77 ], [ null, %68 ], [ getelementptr inbounds ([10 x i8]* @.str2413, i64 0, i64 0), %29 ], [ null, %7 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @getobjname(%struct.Proto* %p, i32 %lastpc, i32 %reg, i8** %name) #0 {
  %1 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 4
  br label %tailrecurse

tailrecurse:                                      ; preds = %63, %0
  %lastpc.tr = phi i32 [ %lastpc, %0 ], [ %setreg.1.i, %63 ]
  %reg.tr = phi i32 [ %reg, %0 ], [ %64, %63 ]
  %2 = add nsw i32 %reg.tr, 1
  %3 = tail call i8* bitcast (i8* (%struct.Proto.132*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %p, i32 %2, i32 %lastpc.tr) #3
  store i8* %3, i8** %name, align 8, !tbaa !25
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %kname.exit5

; <label>:5                                       ; preds = %tailrecurse
  %6 = icmp sgt i32 %lastpc.tr, 0
  br i1 %6, label %.lr.ph.i, label %kname.exit5

.lr.ph.i:                                         ; preds = %5
  %7 = load i32** %1, align 8, !tbaa !83
  br label %8

; <label>:8                                       ; preds = %56, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %56 ]
  %setreg.09.i = phi i32 [ -1, %.lr.ph.i ], [ %setreg.1.i, %56 ]
  %jmptarget.08.i = phi i32 [ 0, %.lr.ph.i ], [ %jmptarget.1.i, %56 ]
  %9 = getelementptr inbounds i32* %7, i64 %indvars.iv.i
  %10 = load i32* %9, align 4, !tbaa !1
  %11 = and i32 %10, 63
  %12 = lshr i32 %10, 6
  %13 = and i32 %12, 255
  switch i32 %11, label %46 [
    i32 4, label %14
    i32 34, label %23
    i32 29, label %29
    i32 30, label %29
    i32 23, label %34
    i32 27, label %41
  ]

; <label>:14                                      ; preds = %8
  %15 = icmp sgt i32 %13, %reg.tr
  br i1 %15, label %56, label %16

; <label>:16                                      ; preds = %14
  %17 = lshr i32 %10, 23
  %18 = add nsw i32 %13, %17
  %19 = icmp slt i32 %18, %reg.tr
  br i1 %19, label %56, label %20

; <label>:20                                      ; preds = %16
  %21 = trunc i64 %indvars.iv.i to i32
  %22 = icmp slt i32 %21, %jmptarget.08.i
  %.pc.i.i = select i1 %22, i32 -1, i32 %21
  br label %56

; <label>:23                                      ; preds = %8
  %24 = add nsw i32 %13, 2
  %25 = icmp sgt i32 %24, %reg.tr
  br i1 %25, label %56, label %26

; <label>:26                                      ; preds = %23
  %27 = trunc i64 %indvars.iv.i to i32
  %28 = icmp slt i32 %27, %jmptarget.08.i
  %.pc.i7.i = select i1 %28, i32 -1, i32 %27
  br label %56

; <label>:29                                      ; preds = %8, %8
  %30 = icmp sgt i32 %13, %reg.tr
  br i1 %30, label %56, label %31

; <label>:31                                      ; preds = %29
  %32 = trunc i64 %indvars.iv.i to i32
  %33 = icmp slt i32 %32, %jmptarget.08.i
  %.pc.i6.i = select i1 %33, i32 -1, i32 %32
  br label %56

; <label>:34                                      ; preds = %8
  %35 = lshr i32 %10, 14
  %36 = add i64 %indvars.iv.i, 4294836226
  %37 = trunc i64 %36 to i32
  %38 = add i32 %35, %37
  %39 = trunc i64 %indvars.iv.i to i32
  %notlhs.i = icmp slt i32 %39, %38
  %notrhs.i = icmp sle i32 %38, %lastpc.tr
  %or.cond.not.i = and i1 %notrhs.i, %notlhs.i
  %40 = icmp sgt i32 %38, %jmptarget.08.i
  %or.cond2.i = and i1 %or.cond.not.i, %40
  %.jmptarget.0.i = select i1 %or.cond2.i, i32 %38, i32 %jmptarget.08.i
  br label %56

; <label>:41                                      ; preds = %8
  %42 = icmp eq i32 %13, %reg.tr
  br i1 %42, label %43, label %56

; <label>:43                                      ; preds = %41
  %44 = trunc i64 %indvars.iv.i to i32
  %45 = icmp slt i32 %44, %jmptarget.08.i
  %.pc.i5.i = select i1 %45, i32 -1, i32 %44
  br label %56

; <label>:46                                      ; preds = %8
  %47 = zext i32 %11 to i64
  %48 = getelementptr inbounds [40 x i8]* @luaP_opmodes, i64 0, i64 %47
  %49 = load i8* %48, align 1, !tbaa !86
  %50 = and i8 %49, 64
  %51 = icmp ne i8 %50, 0
  %52 = icmp eq i32 %13, %reg.tr
  %or.cond3.i = and i1 %51, %52
  br i1 %or.cond3.i, label %53, label %56

; <label>:53                                      ; preds = %46
  %54 = trunc i64 %indvars.iv.i to i32
  %55 = icmp slt i32 %54, %jmptarget.08.i
  %.pc.i4.i = select i1 %55, i32 -1, i32 %54
  br label %56

; <label>:56                                      ; preds = %53, %46, %43, %41, %34, %31, %29, %26, %23, %20, %16, %14
  %jmptarget.1.i = phi i32 [ %jmptarget.08.i, %53 ], [ %jmptarget.08.i, %46 ], [ %jmptarget.08.i, %43 ], [ %jmptarget.08.i, %41 ], [ %jmptarget.08.i, %31 ], [ %jmptarget.08.i, %29 ], [ %jmptarget.08.i, %26 ], [ %jmptarget.08.i, %23 ], [ %jmptarget.08.i, %20 ], [ %jmptarget.08.i, %16 ], [ %jmptarget.08.i, %14 ], [ %.jmptarget.0.i, %34 ]
  %setreg.1.i = phi i32 [ %.pc.i4.i, %53 ], [ %setreg.09.i, %46 ], [ %.pc.i5.i, %43 ], [ %setreg.09.i, %41 ], [ %.pc.i6.i, %31 ], [ %setreg.09.i, %29 ], [ %.pc.i7.i, %26 ], [ %setreg.09.i, %23 ], [ %.pc.i.i, %20 ], [ %setreg.09.i, %16 ], [ %setreg.09.i, %14 ], [ %setreg.09.i, %34 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %lastpc.tr
  br i1 %exitcond, label %findsetreg.exit, label %8

findsetreg.exit:                                  ; preds = %56
  %57 = icmp eq i32 %setreg.1.i, -1
  br i1 %57, label %kname.exit5, label %58

; <label>:58                                      ; preds = %findsetreg.exit
  %59 = sext i32 %setreg.1.i to i64
  %60 = getelementptr inbounds i32* %7, i64 %59
  %61 = load i32* %60, align 4, !tbaa !1
  %62 = and i32 %61, 63
  switch i32 %62, label %kname.exit5 [
    i32 0, label %63
    i32 6, label %68
    i32 7, label %68
    i32 5, label %114
    i32 12, label %147
    i32 1, label %125
    i32 2, label %127
  ]

; <label>:63                                      ; preds = %58
  %64 = lshr i32 %61, 23
  %65 = lshr i32 %61, 6
  %66 = and i32 %65, 255
  %67 = icmp ult i32 %64, %66
  br i1 %67, label %tailrecurse, label %kname.exit5

; <label>:68                                      ; preds = %58, %58
  %69 = lshr i32 %61, 14
  %70 = and i32 %69, 511
  %71 = lshr i32 %61, 23
  %72 = icmp eq i32 %62, 7
  br i1 %72, label %73, label %76

; <label>:73                                      ; preds = %68
  %74 = add nsw i32 %71, 1
  %75 = tail call i8* bitcast (i8* (%struct.Proto.132*, i32, i32)* @luaF_getlocalname to i8* (%struct.Proto*, i32, i32)*)(%struct.Proto* %p, i32 %74, i32 %setreg.1.i) #3
  br label %upvalname.exit4

; <label>:76                                      ; preds = %68
  %77 = zext i32 %71 to i64
  %78 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 8
  %79 = load %struct.Upvaldesc** %78, align 8, !tbaa !76
  %80 = getelementptr inbounds %struct.Upvaldesc* %79, i64 %77, i32 0
  %81 = load %union.TString** %80, align 8, !tbaa !77
  %82 = icmp eq %union.TString* %81, null
  br i1 %82, label %upvalname.exit4, label %83

; <label>:83                                      ; preds = %76
  %84 = getelementptr inbounds %union.TString* %81, i64 1
  %85 = bitcast %union.TString* %84 to i8*
  br label %upvalname.exit4

upvalname.exit4:                                  ; preds = %83, %76, %73
  %86 = phi i8* [ %75, %73 ], [ %85, %83 ], [ getelementptr inbounds ([2 x i8]* @.str14, i64 0, i64 0), %76 ]
  %87 = and i32 %69, 256
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %103, label %89

; <label>:89                                      ; preds = %upvalname.exit4
  %90 = and i32 %69, 255
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 3
  %93 = load %struct.lua_TValue** %92, align 8, !tbaa !109
  %94 = getelementptr inbounds %struct.lua_TValue* %93, i64 %91, i32 1
  %95 = load i32* %94, align 4, !tbaa !15
  %96 = and i32 %95, 15
  %97 = icmp eq i32 %96, 4
  br i1 %97, label %98, label %109

; <label>:98                                      ; preds = %89
  %99 = getelementptr inbounds %struct.lua_TValue* %93, i64 %91, i32 0, i32 0
  %100 = load %union.GCObject** %99, align 8, !tbaa !25
  %101 = getelementptr inbounds %union.GCObject* %100, i64 0, i32 0, i32 5
  %102 = bitcast %struct.global_State** %101 to i8*
  store i8* %102, i8** %name, align 8, !tbaa !25
  br label %kname.exit

; <label>:103                                     ; preds = %upvalname.exit4
  %104 = tail call fastcc i8* @getobjname(%struct.Proto* %p, i32 %setreg.1.i, i32 %70, i8** %name) #3
  %105 = icmp eq i8* %104, null
  br i1 %105, label %109, label %106

; <label>:106                                     ; preds = %103
  %107 = load i8* %104, align 1, !tbaa !86
  %108 = icmp eq i8 %107, 99
  br i1 %108, label %kname.exit, label %109

; <label>:109                                     ; preds = %106, %103, %89
  store i8* getelementptr inbounds ([2 x i8]* @.str14, i64 0, i64 0), i8** %name, align 8, !tbaa !25
  br label %kname.exit

kname.exit:                                       ; preds = %109, %106, %98
  %110 = icmp eq i8* %86, null
  br i1 %110, label %kname.exit5, label %111

; <label>:111                                     ; preds = %kname.exit
  %112 = tail call i32 @strcmp(i8* %86, i8* getelementptr inbounds ([5 x i8]* @.str8, i64 0, i64 0)) #3
  %113 = icmp eq i32 %112, 0
  %phitmp = select i1 %113, i8* getelementptr inbounds ([7 x i8]* @.str9, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str10, i64 0, i64 0)
  br label %kname.exit5

; <label>:114                                     ; preds = %58
  %115 = lshr i32 %61, 23
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 8
  %118 = load %struct.Upvaldesc** %117, align 8, !tbaa !76
  %119 = getelementptr inbounds %struct.Upvaldesc* %118, i64 %116, i32 0
  %120 = load %union.TString** %119, align 8, !tbaa !77
  %121 = icmp eq %union.TString* %120, null
  br i1 %121, label %upvalname.exit, label %122

; <label>:122                                     ; preds = %114
  %123 = getelementptr inbounds %union.TString* %120, i64 1
  %124 = bitcast %union.TString* %123 to i8*
  br label %upvalname.exit

upvalname.exit:                                   ; preds = %122, %114
  %.0.i = phi i8* [ %124, %122 ], [ getelementptr inbounds ([2 x i8]* @.str14, i64 0, i64 0), %114 ]
  store i8* %.0.i, i8** %name, align 8, !tbaa !25
  br label %kname.exit5

; <label>:125                                     ; preds = %58
  %126 = lshr i32 %61, 14
  br label %133

; <label>:127                                     ; preds = %58
  %128 = add nsw i32 %setreg.1.i, 1
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32* %7, i64 %129
  %131 = load i32* %130, align 4, !tbaa !1
  %132 = lshr i32 %131, 6
  br label %133

; <label>:133                                     ; preds = %127, %125
  %134 = phi i32 [ %126, %125 ], [ %132, %127 ]
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 3
  %137 = load %struct.lua_TValue** %136, align 8, !tbaa !109
  %138 = getelementptr inbounds %struct.lua_TValue* %137, i64 %135, i32 1
  %139 = load i32* %138, align 4, !tbaa !15
  %140 = and i32 %139, 15
  %141 = icmp eq i32 %140, 4
  br i1 %141, label %142, label %kname.exit5

; <label>:142                                     ; preds = %133
  %143 = getelementptr inbounds %struct.lua_TValue* %137, i64 %135, i32 0, i32 0
  %144 = load %union.GCObject** %143, align 8, !tbaa !25
  %145 = getelementptr inbounds %union.GCObject* %144, i64 0, i32 0, i32 5
  %146 = bitcast %struct.global_State** %145 to i8*
  store i8* %146, i8** %name, align 8, !tbaa !25
  br label %kname.exit5

; <label>:147                                     ; preds = %58
  %148 = lshr i32 %61, 14
  %149 = and i32 %148, 256
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %165, label %151

; <label>:151                                     ; preds = %147
  %152 = and i32 %148, 255
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 3
  %155 = load %struct.lua_TValue** %154, align 8, !tbaa !109
  %156 = getelementptr inbounds %struct.lua_TValue* %155, i64 %153, i32 1
  %157 = load i32* %156, align 4, !tbaa !15
  %158 = and i32 %157, 15
  %159 = icmp eq i32 %158, 4
  br i1 %159, label %160, label %172

; <label>:160                                     ; preds = %151
  %161 = getelementptr inbounds %struct.lua_TValue* %155, i64 %153, i32 0, i32 0
  %162 = load %union.GCObject** %161, align 8, !tbaa !25
  %163 = getelementptr inbounds %union.GCObject* %162, i64 0, i32 0, i32 5
  %164 = bitcast %struct.global_State** %163 to i8*
  store i8* %164, i8** %name, align 8, !tbaa !25
  br label %kname.exit5

; <label>:165                                     ; preds = %147
  %166 = and i32 %148, 511
  %167 = tail call fastcc i8* @getobjname(%struct.Proto* %p, i32 %setreg.1.i, i32 %166, i8** %name) #3
  %168 = icmp eq i8* %167, null
  br i1 %168, label %172, label %169

; <label>:169                                     ; preds = %165
  %170 = load i8* %167, align 1, !tbaa !86
  %171 = icmp eq i8 %170, 99
  br i1 %171, label %kname.exit5, label %172

; <label>:172                                     ; preds = %169, %165, %151
  store i8* getelementptr inbounds ([2 x i8]* @.str14, i64 0, i64 0), i8** %name, align 8, !tbaa !25
  br label %kname.exit5

kname.exit5:                                      ; preds = %172, %169, %160, %142, %133, %upvalname.exit, %111, %kname.exit, %63, %58, %findsetreg.exit, %5, %tailrecurse
  %.0 = phi i8* [ getelementptr inbounds ([9 x i8]* @.str12, i64 0, i64 0), %142 ], [ getelementptr inbounds ([8 x i8]* @.str11, i64 0, i64 0), %upvalname.exit ], [ getelementptr inbounds ([6 x i8]* @.str10, i64 0, i64 0), %kname.exit ], [ %phitmp, %111 ], [ null, %133 ], [ getelementptr inbounds ([7 x i8]* @.str1311, i64 0, i64 0), %160 ], [ getelementptr inbounds ([7 x i8]* @.str1311, i64 0, i64 0), %169 ], [ getelementptr inbounds ([7 x i8]* @.str1311, i64 0, i64 0), %172 ], [ null, %5 ], [ null, %63 ], [ null, %findsetreg.exit ], [ null, %58 ], [ getelementptr inbounds ([6 x i8]* @.str7, i64 0, i64 0), %tailrecurse ]
  ret i8* %.0
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaD_throw(%struct.lua_State* %L, i32 %errcode) #4 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 20
  %2 = load %struct.lua_longjmp** %1, align 8, !tbaa !139
  %3 = icmp eq %struct.lua_longjmp* %2, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_longjmp* %2, i64 0, i32 2
  store volatile i32 %errcode, i32* %5, align 4, !tbaa !140
  %6 = load %struct.lua_longjmp** %1, align 8, !tbaa !139
  %7 = getelementptr inbounds %struct.lua_longjmp* %6, i64 0, i32 1, i64 0
  tail call void @_longjmp(i32* %7, i32 1) #13
  unreachable

; <label>:8                                       ; preds = %0
  %9 = trunc i32 %errcode to i8
  %10 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 3
  store i8 %9, i8* %10, align 1, !tbaa !62
  %11 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %12 = load %struct.global_State** %11, align 8, !tbaa !17
  %13 = getelementptr inbounds %struct.global_State* %12, i64 0, i32 30
  %14 = load %struct.lua_State** %13, align 8, !tbaa !40
  %15 = getelementptr inbounds %struct.lua_State* %14, i64 0, i32 20
  %16 = load %struct.lua_longjmp** %15, align 8, !tbaa !139
  %17 = icmp eq %struct.lua_longjmp* %16, null
  br i1 %17, label %34, label %18

; <label>:18                                      ; preds = %8
  %19 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %20 = load %struct.lua_TValue** %19, align 8, !tbaa !12
  %21 = getelementptr inbounds %struct.lua_TValue* %20, i64 -1
  %22 = getelementptr inbounds %struct.lua_State* %14, i64 0, i32 4
  %23 = load %struct.lua_TValue** %22, align 8, !tbaa !12
  %24 = getelementptr inbounds %struct.lua_TValue* %23, i64 1
  store %struct.lua_TValue* %24, %struct.lua_TValue** %22, align 8, !tbaa !12
  %25 = bitcast %struct.lua_TValue* %21 to i64*
  %26 = load i64* %25, align 8
  %27 = getelementptr inbounds %struct.lua_TValue* %23, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %26 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %27, align 8
  %28 = getelementptr inbounds %struct.lua_TValue* %20, i64 -1, i32 1
  %29 = load i32* %28, align 4, !tbaa !15
  %30 = getelementptr inbounds %struct.lua_TValue* %23, i64 0, i32 1
  store i32 %29, i32* %30, align 4, !tbaa !15
  %31 = load %struct.global_State** %11, align 8, !tbaa !17
  %32 = getelementptr inbounds %struct.global_State* %31, i64 0, i32 30
  %33 = load %struct.lua_State** %32, align 8, !tbaa !40
  tail call void @luaD_throw(%struct.lua_State* %33, i32 %errcode) #14
  unreachable

; <label>:34                                      ; preds = %8
  %35 = getelementptr inbounds %struct.global_State* %12, i64 0, i32 29
  %36 = load i32 (%struct.lua_State*)** %35, align 8, !tbaa !18
  %37 = icmp eq i32 (%struct.lua_State*)* %36, null
  br i1 %37, label %40, label %38

; <label>:38                                      ; preds = %34
  %39 = tail call i32 %36(%struct.lua_State* %L) #3
  br label %40

; <label>:40                                      ; preds = %38, %34
  tail call void @abort() #13
  unreachable
}

; Function Attrs: noreturn
declare void @_longjmp(i32*, i32) #6

; Function Attrs: noreturn
declare void @abort() #6

; Function Attrs: nounwind ssp uwtable
define i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nocapture %f, i8* %ud) #0 {
  %lj = alloca %struct.lua_longjmp, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 12
  %2 = load i16* %1, align 2, !tbaa !142
  %3 = bitcast %struct.lua_longjmp* %lj to i8*
  call void @llvm.lifetime.start(i64 160, i8* %3) #3
  %4 = getelementptr inbounds %struct.lua_longjmp* %lj, i64 0, i32 2
  store volatile i32 0, i32* %4, align 4, !tbaa !140
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 20
  %6 = load %struct.lua_longjmp** %5, align 8, !tbaa !139
  %7 = getelementptr inbounds %struct.lua_longjmp* %lj, i64 0, i32 0
  store %struct.lua_longjmp* %6, %struct.lua_longjmp** %7, align 8, !tbaa !143
  store %struct.lua_longjmp* %lj, %struct.lua_longjmp** %5, align 8, !tbaa !139
  %8 = getelementptr inbounds %struct.lua_longjmp* %lj, i64 0, i32 1, i64 0
  %9 = call i32 @_setjmp(i32* %8) #15
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  call void %f(%struct.lua_State* %L, i8* %ud) #3
  br label %12

; <label>:12                                      ; preds = %11, %0
  %13 = load %struct.lua_longjmp** %7, align 8, !tbaa !143
  store %struct.lua_longjmp* %13, %struct.lua_longjmp** %5, align 8, !tbaa !139
  store i16 %2, i16* %1, align 2, !tbaa !142
  %14 = load volatile i32* %4, align 4, !tbaa !140
  call void @llvm.lifetime.end(i64 160, i8* %3) #3
  ret i32 %14
}

; Function Attrs: returns_twice
declare i32 @_setjmp(i32*) #7

; Function Attrs: nounwind ssp uwtable
define void @luaD_reallocstack(%struct.lua_State* %L, i32 %newsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 10
  %4 = load i32* %3, align 4, !tbaa !144
  %5 = add nsw i32 %newsize, 1
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  tail call void @luaM_toobig(%struct.lua_State* %L) #13
  unreachable

; <label>:8                                       ; preds = %0
  %9 = bitcast %struct.lua_TValue* %2 to i8*
  %10 = sext i32 %4 to i64
  %11 = shl nsw i64 %10, 4
  %12 = sext i32 %newsize to i64
  %13 = shl nsw i64 %12, 4
  %14 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %9, i64 %11, i64 %13) #3
  %15 = bitcast i8* %14 to %struct.lua_TValue*
  store %struct.lua_TValue* %15, %struct.lua_TValue** %1, align 8, !tbaa !13
  %16 = icmp slt i32 %4, %newsize
  br i1 %16, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %8
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ %10, %8 ]
  %17 = getelementptr inbounds %struct.lua_TValue* %15, i64 %indvars.iv, i32 1
  store i32 0, i32* %17, align 4, !tbaa !15
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %18 = trunc i64 %indvars.iv.next to i32
  %19 = icmp slt i32 %18, %newsize
  br i1 %19, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %8
  store i32 %newsize, i32* %3, align 4, !tbaa !144
  %.sum = add i64 %12, -5
  %20 = getelementptr inbounds %struct.lua_TValue* %15, i64 %.sum
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  store %struct.lua_TValue* %20, %struct.lua_TValue** %21, align 8, !tbaa !11
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %23 = load %struct.lua_TValue** %22, align 8, !tbaa !12
  %24 = ptrtoint %struct.lua_TValue* %23 to i64
  %25 = ptrtoint %struct.lua_TValue* %2 to i64
  %26 = sub i64 %24, %25
  %27 = ashr exact i64 %26, 4
  %28 = getelementptr inbounds %struct.lua_TValue* %15, i64 %27
  store %struct.lua_TValue* %28, %struct.lua_TValue** %22, align 8, !tbaa !12
  %29 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 18
  %up.03.i = load %union.GCObject** %29, align 8
  %30 = icmp eq %union.GCObject* %up.03.i, null
  br i1 %30, label %._crit_edge7.i, label %.lr.ph6.i

.lr.ph6.i:                                        ; preds = %.lr.ph6.i, %._crit_edge
  %up.04.i = phi %union.GCObject* [ %up.0.i, %.lr.ph6.i ], [ %up.03.i, %._crit_edge ]
  %31 = getelementptr inbounds %union.GCObject* %up.04.i, i64 0, i32 0, i32 4
  %32 = load %struct.lua_TValue** %31, align 8, !tbaa !75
  %33 = ptrtoint %struct.lua_TValue* %32 to i64
  %34 = sub i64 %33, %25
  %35 = ashr exact i64 %34, 4
  %36 = getelementptr inbounds %struct.lua_TValue* %15, i64 %35
  store %struct.lua_TValue* %36, %struct.lua_TValue** %31, align 8, !tbaa !75
  %37 = getelementptr inbounds %union.GCObject* %up.04.i, i64 0, i32 0, i32 0
  %up.0.i = load %union.GCObject** %37, align 8
  %38 = icmp eq %union.GCObject* %up.0.i, null
  br i1 %38, label %._crit_edge7.i, label %.lr.ph6.i

._crit_edge7.i:                                   ; preds = %.lr.ph6.i, %._crit_edge
  %39 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %ci.01.i = load %struct.CallInfo** %39, align 8
  %40 = icmp eq %struct.CallInfo* %ci.01.i, null
  br i1 %40, label %correctstack.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %65, %._crit_edge7.i
  %ci.02.i = phi %struct.CallInfo* [ %ci.0.i, %65 ], [ %ci.01.i, %._crit_edge7.i ]
  %41 = getelementptr inbounds %struct.CallInfo* %ci.02.i, i64 0, i32 1
  %42 = load %struct.lua_TValue** %41, align 8, !tbaa !14
  %43 = ptrtoint %struct.lua_TValue* %42 to i64
  %44 = sub i64 %43, %25
  %45 = ashr exact i64 %44, 4
  %46 = getelementptr inbounds %struct.lua_TValue* %15, i64 %45
  store %struct.lua_TValue* %46, %struct.lua_TValue** %41, align 8, !tbaa !14
  %47 = getelementptr inbounds %struct.CallInfo* %ci.02.i, i64 0, i32 0
  %48 = load %struct.lua_TValue** %47, align 8, !tbaa !24
  %49 = ptrtoint %struct.lua_TValue* %48 to i64
  %50 = sub i64 %49, %25
  %51 = ashr exact i64 %50, 4
  %52 = getelementptr inbounds %struct.lua_TValue* %15, i64 %51
  store %struct.lua_TValue* %52, %struct.lua_TValue** %47, align 8, !tbaa !24
  %53 = getelementptr inbounds %struct.CallInfo* %ci.02.i, i64 0, i32 5
  %54 = load i8* %53, align 1, !tbaa !46
  %55 = and i8 %54, 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %65, label %57

; <label>:57                                      ; preds = %.lr.ph.i
  %58 = getelementptr inbounds %struct.CallInfo* %ci.02.i, i64 0, i32 7
  %59 = bitcast %union.anon.2* %58 to %struct.lua_TValue**
  %60 = load %struct.lua_TValue** %59, align 8, !tbaa !136
  %61 = ptrtoint %struct.lua_TValue* %60 to i64
  %62 = sub i64 %61, %25
  %63 = ashr exact i64 %62, 4
  %64 = getelementptr inbounds %struct.lua_TValue* %15, i64 %63
  store %struct.lua_TValue* %64, %struct.lua_TValue** %59, align 8, !tbaa !136
  br label %65

; <label>:65                                      ; preds = %57, %.lr.ph.i
  %66 = getelementptr inbounds %struct.CallInfo* %ci.02.i, i64 0, i32 2
  %ci.0.i = load %struct.CallInfo** %66, align 8
  %67 = icmp eq %struct.CallInfo* %ci.0.i, null
  br i1 %67, label %correctstack.exit, label %.lr.ph.i

correctstack.exit:                                ; preds = %65, %._crit_edge7.i
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaD_growstack(%struct.lua_State* %L, i32 %n) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 10
  %2 = load i32* %1, align 4, !tbaa !144
  %3 = icmp sgt i32 %2, 1000000
  br i1 %3, label %4, label %5

; <label>:4                                       ; preds = %0
  tail call void @luaD_throw(%struct.lua_State* %L, i32 6) #14
  unreachable

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %7 = load %struct.lua_TValue** %6, align 8, !tbaa !12
  %8 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %9 = load %struct.lua_TValue** %8, align 8, !tbaa !13
  %10 = ptrtoint %struct.lua_TValue* %7 to i64
  %11 = ptrtoint %struct.lua_TValue* %9 to i64
  %12 = sub i64 %10, %11
  %13 = lshr exact i64 %12, 4
  %14 = trunc i64 %13 to i32
  %15 = add i32 %n, 5
  %16 = add i32 %15, %14
  %17 = shl nsw i32 %2, 1
  %18 = icmp sgt i32 %17, 1000000
  %. = select i1 %18, i32 1000000, i32 %17
  %19 = icmp slt i32 %., %16
  %.. = select i1 %19, i32 %16, i32 %.
  %20 = icmp sgt i32 %.., 1000000
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %5
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 1000200)
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8]* @.str25, i64 0, i64 0)) #13
  unreachable

; <label>:22                                      ; preds = %5
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %..)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaD_shrinkstack(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %ci.01.i = load %struct.CallInfo** %3, align 8
  %4 = icmp eq %struct.CallInfo* %ci.01.i, null
  br i1 %4, label %stackinuse.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %0
  %ci.03.i = phi %struct.CallInfo* [ %ci.0.i, %.lr.ph.i ], [ %ci.01.i, %0 ]
  %lim.02.i = phi %struct.lua_TValue* [ %.lim.0.i, %.lr.ph.i ], [ %2, %0 ]
  %5 = getelementptr inbounds %struct.CallInfo* %ci.03.i, i64 0, i32 1
  %6 = load %struct.lua_TValue** %5, align 8, !tbaa !14
  %7 = icmp ult %struct.lua_TValue* %lim.02.i, %6
  %.lim.0.i = select i1 %7, %struct.lua_TValue* %6, %struct.lua_TValue* %lim.02.i
  %8 = getelementptr inbounds %struct.CallInfo* %ci.03.i, i64 0, i32 2
  %ci.0.i = load %struct.CallInfo** %8, align 8
  %9 = icmp eq %struct.CallInfo* %ci.0.i, null
  br i1 %9, label %stackinuse.exit, label %.lr.ph.i

stackinuse.exit:                                  ; preds = %.lr.ph.i, %0
  %lim.0.lcssa.i = phi %struct.lua_TValue* [ %2, %0 ], [ %.lim.0.i, %.lr.ph.i ]
  %10 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %11 = load %struct.lua_TValue** %10, align 8, !tbaa !13
  %12 = ptrtoint %struct.lua_TValue* %lim.0.lcssa.i to i64
  %13 = ptrtoint %struct.lua_TValue* %11 to i64
  %14 = sub i64 %12, %13
  %15 = lshr exact i64 %14, 4
  %16 = trunc i64 %15 to i32
  %17 = add nsw i32 %16, 1
  %18 = sdiv i32 %17, 8
  %19 = add i32 %18, 10
  %20 = add i32 %19, %17
  %21 = icmp sgt i32 %20, 1000000
  %. = select i1 %21, i32 1000000, i32 %20
  %22 = icmp sgt i32 %16, 999999
  br i1 %22, label %28, label %23

; <label>:23                                      ; preds = %stackinuse.exit
  %24 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 10
  %25 = load i32* %24, align 4, !tbaa !144
  %26 = icmp slt i32 %., %25
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %23
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %.)
  br label %28

; <label>:28                                      ; preds = %27, %23, %stackinuse.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaD_hook(%struct.lua_State* %L, i32 %event, i32 %line) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 17
  %2 = load void (%struct.lua_State*, %struct.lua_Debug*)** %1, align 8, !tbaa !112
  %3 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %2, null
  br i1 %3, label %46, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %6 = load i8* %5, align 1, !tbaa !56
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %46, label %8

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %10 = load %struct.CallInfo** %9, align 8, !tbaa !5
  %11 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %12 = load %struct.lua_TValue** %11, align 8, !tbaa !12
  %13 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %14 = load %struct.lua_TValue** %13, align 8, !tbaa !13
  %15 = ptrtoint %struct.lua_TValue* %12 to i64
  %16 = ptrtoint %struct.lua_TValue* %14 to i64
  %17 = sub i64 %15, %16
  %18 = getelementptr inbounds %struct.CallInfo* %10, i64 0, i32 1
  %19 = load %struct.lua_TValue** %18, align 8, !tbaa !14
  %20 = ptrtoint %struct.lua_TValue* %19 to i64
  %21 = sub i64 %20, %16
  %22 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %22) #3
  %23 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 0
  store i32 %event, i32* %23, align 8, !tbaa !145
  %24 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 5
  store i32 %line, i32* %24, align 8, !tbaa !126
  %25 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 13
  store %struct.CallInfo* %10, %struct.CallInfo** %25, align 8, !tbaa !116
  %26 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  %27 = load %struct.lua_TValue** %26, align 8, !tbaa !11
  %28 = ptrtoint %struct.lua_TValue* %27 to i64
  %29 = sub i64 %28, %15
  %30 = icmp slt i64 %29, 336
  br i1 %30, label %31, label %32

; <label>:31                                      ; preds = %8
  call void @luaD_growstack(%struct.lua_State* %L, i32 20)
  %.pre = load %struct.lua_TValue** %11, align 8, !tbaa !12
  br label %32

; <label>:32                                      ; preds = %31, %8
  %33 = phi %struct.lua_TValue* [ %12, %8 ], [ %.pre, %31 ]
  %34 = getelementptr inbounds %struct.lua_TValue* %33, i64 20
  store %struct.lua_TValue* %34, %struct.lua_TValue** %18, align 8, !tbaa !14
  store i8 0, i8* %5, align 1, !tbaa !56
  %35 = getelementptr inbounds %struct.CallInfo* %10, i64 0, i32 5
  %36 = load i8* %35, align 1, !tbaa !46
  %37 = or i8 %36, 2
  store i8 %37, i8* %35, align 1, !tbaa !46
  call void %2(%struct.lua_State* %L, %struct.lua_Debug* %ar) #3
  store i8 1, i8* %5, align 1, !tbaa !56
  %38 = load %struct.lua_TValue** %13, align 8, !tbaa !13
  %39 = bitcast %struct.lua_TValue* %38 to i8*
  %40 = getelementptr inbounds i8* %39, i64 %21
  %41 = bitcast i8* %40 to %struct.lua_TValue*
  store %struct.lua_TValue* %41, %struct.lua_TValue** %18, align 8, !tbaa !14
  %42 = getelementptr inbounds i8* %39, i64 %17
  %43 = bitcast i8* %42 to %struct.lua_TValue*
  store %struct.lua_TValue* %43, %struct.lua_TValue** %11, align 8, !tbaa !12
  %44 = load i8* %35, align 1, !tbaa !46
  %45 = and i8 %44, -3
  store i8 %45, i8* %35, align 1, !tbaa !46
  call void @llvm.lifetime.end(i64 128, i8* %22) #3
  br label %46

; <label>:46                                      ; preds = %32, %4, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 %nresults) #0 {
  %ar.i.i = alloca %struct.lua_Debug, align 8
  %ar.i = alloca %struct.lua_Debug, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %3 = ptrtoint %struct.lua_TValue* %func to i64
  %4 = ptrtoint %struct.lua_TValue* %2 to i64
  %5 = sub i64 %3, %4
  %6 = getelementptr inbounds %struct.lua_TValue* %func, i64 0, i32 1
  %7 = load i32* %6, align 4, !tbaa !15
  %8 = and i32 %7, 63
  switch i32 %8, label %294 [
    i32 22, label %9
    i32 38, label %12
    i32 6, label %108
  ]

; <label>:9                                       ; preds = %0
  %10 = bitcast %struct.lua_TValue* %func to i32 (%struct.lua_State*)**
  %11 = load i32 (%struct.lua_State*)** %10, align 8, !tbaa !25
  br label %18

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.lua_TValue* %func, i64 0, i32 0, i32 0
  %14 = load %union.GCObject** %13, align 8, !tbaa !25
  %15 = getelementptr inbounds %union.GCObject* %14, i64 0, i32 0, i32 5
  %16 = load %struct.global_State** %15, align 8
  %17 = bitcast %struct.global_State* %16 to i32 (%struct.lua_State*)*
  br label %18

; <label>:18                                      ; preds = %12, %9
  %f.0 = phi i32 (%struct.lua_State*)* [ %17, %12 ], [ %11, %9 ]
  %19 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  %20 = load %struct.lua_TValue** %19, align 8, !tbaa !11
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %22 = load %struct.lua_TValue** %21, align 8, !tbaa !12
  %23 = ptrtoint %struct.lua_TValue* %20 to i64
  %24 = ptrtoint %struct.lua_TValue* %22 to i64
  %25 = sub i64 %23, %24
  %26 = icmp slt i64 %25, 336
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %18
  call void @luaD_growstack(%struct.lua_State* %L, i32 20)
  br label %28

; <label>:28                                      ; preds = %27, %18
  %29 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %30 = load %struct.CallInfo** %29, align 8, !tbaa !5
  %31 = getelementptr inbounds %struct.CallInfo* %30, i64 0, i32 3
  %32 = load %struct.CallInfo** %31, align 8, !tbaa !138
  %33 = icmp eq %struct.CallInfo* %32, null
  br i1 %33, label %34, label %36

; <label>:34                                      ; preds = %28
  %35 = call %struct.CallInfo* bitcast (%struct.CallInfo.225* (%struct.lua_State.228*)* @luaE_extendCI to %struct.CallInfo* (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %36

; <label>:36                                      ; preds = %34, %28
  %37 = phi %struct.CallInfo* [ %35, %34 ], [ %32, %28 ]
  store %struct.CallInfo* %37, %struct.CallInfo** %29, align 8, !tbaa !5
  %38 = trunc i32 %nresults to i16
  %39 = getelementptr inbounds %struct.CallInfo* %37, i64 0, i32 4
  store i16 %38, i16* %39, align 2, !tbaa !146
  %40 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %41 = bitcast %struct.lua_TValue* %40 to i8*
  %42 = getelementptr inbounds i8* %41, i64 %5
  %43 = bitcast i8* %42 to %struct.lua_TValue*
  %44 = getelementptr inbounds %struct.CallInfo* %37, i64 0, i32 0
  store %struct.lua_TValue* %43, %struct.lua_TValue** %44, align 8, !tbaa !24
  %45 = load %struct.lua_TValue** %21, align 8, !tbaa !12
  %46 = getelementptr inbounds %struct.lua_TValue* %45, i64 20
  %47 = getelementptr inbounds %struct.CallInfo* %37, i64 0, i32 1
  store %struct.lua_TValue* %46, %struct.lua_TValue** %47, align 8, !tbaa !14
  %48 = getelementptr inbounds %struct.CallInfo* %37, i64 0, i32 5
  store i8 0, i8* %48, align 1, !tbaa !46
  %49 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %50 = load %struct.global_State** %49, align 8, !tbaa !17
  %51 = getelementptr inbounds %struct.global_State* %50, i64 0, i32 3
  %52 = load i64* %51, align 8, !tbaa !33
  %53 = icmp sgt i64 %52, 0
  br i1 %53, label %54, label %55

; <label>:54                                      ; preds = %36
  call void @luaC_step(%struct.lua_State* %L) #3
  br label %55

; <label>:55                                      ; preds = %54, %36
  %56 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 13
  %57 = load i8* %56, align 1, !tbaa !115
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %luaD_hook.exit, label %60

; <label>:60                                      ; preds = %55
  %61 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 17
  %62 = load void (%struct.lua_State*, %struct.lua_Debug*)** %61, align 8, !tbaa !112
  %63 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %62, null
  br i1 %63, label %luaD_hook.exit, label %64

; <label>:64                                      ; preds = %60
  %65 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %66 = load i8* %65, align 1, !tbaa !56
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %luaD_hook.exit, label %68

; <label>:68                                      ; preds = %64
  %69 = load %struct.CallInfo** %29, align 8, !tbaa !5
  %70 = load %struct.lua_TValue** %21, align 8, !tbaa !12
  %71 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %72 = ptrtoint %struct.lua_TValue* %70 to i64
  %73 = ptrtoint %struct.lua_TValue* %71 to i64
  %74 = sub i64 %72, %73
  %75 = getelementptr inbounds %struct.CallInfo* %69, i64 0, i32 1
  %76 = load %struct.lua_TValue** %75, align 8, !tbaa !14
  %77 = ptrtoint %struct.lua_TValue* %76 to i64
  %78 = sub i64 %77, %73
  %79 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 128, i8* %79) #3
  %80 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 0
  store i32 0, i32* %80, align 8, !tbaa !145
  %81 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 5
  store i32 -1, i32* %81, align 8, !tbaa !126
  %82 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 13
  store %struct.CallInfo* %69, %struct.CallInfo** %82, align 8, !tbaa !116
  %83 = load %struct.lua_TValue** %19, align 8, !tbaa !11
  %84 = ptrtoint %struct.lua_TValue* %83 to i64
  %85 = sub i64 %84, %72
  %86 = icmp slt i64 %85, 336
  br i1 %86, label %87, label %88

; <label>:87                                      ; preds = %68
  call void @luaD_growstack(%struct.lua_State* %L, i32 20) #3
  %.pre.i = load %struct.lua_TValue** %21, align 8, !tbaa !12
  br label %88

; <label>:88                                      ; preds = %87, %68
  %89 = phi %struct.lua_TValue* [ %70, %68 ], [ %.pre.i, %87 ]
  %90 = getelementptr inbounds %struct.lua_TValue* %89, i64 20
  store %struct.lua_TValue* %90, %struct.lua_TValue** %75, align 8, !tbaa !14
  store i8 0, i8* %65, align 1, !tbaa !56
  %91 = getelementptr inbounds %struct.CallInfo* %69, i64 0, i32 5
  %92 = load i8* %91, align 1, !tbaa !46
  %93 = or i8 %92, 2
  store i8 %93, i8* %91, align 1, !tbaa !46
  call void %62(%struct.lua_State* %L, %struct.lua_Debug* %ar.i) #3
  store i8 1, i8* %65, align 1, !tbaa !56
  %94 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %95 = bitcast %struct.lua_TValue* %94 to i8*
  %96 = getelementptr inbounds i8* %95, i64 %78
  %97 = bitcast i8* %96 to %struct.lua_TValue*
  store %struct.lua_TValue* %97, %struct.lua_TValue** %75, align 8, !tbaa !14
  %98 = getelementptr inbounds i8* %95, i64 %74
  %99 = bitcast i8* %98 to %struct.lua_TValue*
  store %struct.lua_TValue* %99, %struct.lua_TValue** %21, align 8, !tbaa !12
  %100 = load i8* %91, align 1, !tbaa !46
  %101 = and i8 %100, -3
  store i8 %101, i8* %91, align 1, !tbaa !46
  call void @llvm.lifetime.end(i64 128, i8* %79) #3
  br label %luaD_hook.exit

luaD_hook.exit:                                   ; preds = %88, %64, %60, %55
  %102 = call i32 %f.0(%struct.lua_State* %L) #3
  %103 = load %struct.lua_TValue** %21, align 8, !tbaa !12
  %104 = sext i32 %102 to i64
  %105 = sub i64 0, %104
  %106 = getelementptr inbounds %struct.lua_TValue* %103, i64 %105
  %107 = call i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %106)
  br label %337

; <label>:108                                     ; preds = %0
  %109 = getelementptr inbounds %struct.lua_TValue* %func, i64 0, i32 0, i32 0
  %110 = load %union.GCObject** %109, align 8, !tbaa !25
  %111 = getelementptr inbounds %union.GCObject* %110, i64 0, i32 0, i32 5
  %112 = load %struct.global_State** %111, align 8
  %113 = bitcast %struct.global_State* %112 to %struct.Proto*
  %114 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %115 = load %struct.lua_TValue** %114, align 8, !tbaa !12
  %116 = ptrtoint %struct.lua_TValue* %115 to i64
  %117 = sub i64 %116, %3
  %118 = lshr exact i64 %117, 4
  %119 = trunc i64 %118 to i32
  %120 = add nsw i32 %119, -1
  %121 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  %122 = load %struct.lua_TValue** %121, align 8, !tbaa !11
  %123 = ptrtoint %struct.lua_TValue* %122 to i64
  %124 = sub i64 %123, %116
  %125 = ashr exact i64 %124, 4
  %126 = getelementptr inbounds %struct.Proto* %113, i64 0, i32 22
  %127 = load i8* %126, align 1, !tbaa !88
  %128 = zext i8 %127 to i64
  %129 = icmp sgt i64 %125, %128
  br i1 %129, label %.preheader, label %130

; <label>:130                                     ; preds = %108
  %131 = zext i8 %127 to i32
  call void @luaD_growstack(%struct.lua_State* %L, i32 %131)
  br label %.preheader

.preheader:                                       ; preds = %130, %108
  %132 = getelementptr inbounds %struct.global_State* %112, i64 0, i32 17
  %133 = bitcast %union.GCObject*** %132 to i8*
  %134 = load i8* %133, align 1, !tbaa !131
  %135 = zext i8 %134 to i32
  %136 = icmp sgt i32 %119, %135
  br i1 %136, label %147, label %.lr.ph

.lr.ph:                                           ; preds = %.preheader
  %.promoted = load %struct.lua_TValue** %114, align 8, !tbaa !12
  %137 = icmp sgt i32 %135, %119
  %smax = select i1 %137, i32 %135, i32 %119
  %138 = sub i32 %smax, %119
  %139 = zext i32 %138 to i64
  %140 = add i64 %139, 1
  br label %141

; <label>:141                                     ; preds = %141, %.lr.ph
  %142 = phi %struct.lua_TValue* [ %.promoted, %.lr.ph ], [ %143, %141 ]
  %n.012 = phi i32 [ %120, %.lr.ph ], [ %145, %141 ]
  %143 = getelementptr inbounds %struct.lua_TValue* %142, i64 1
  %144 = getelementptr inbounds %struct.lua_TValue* %142, i64 0, i32 1
  store i32 0, i32* %144, align 4, !tbaa !15
  %145 = add nsw i32 %n.012, 1
  %146 = icmp slt i32 %145, %135
  br i1 %146, label %141, label %._crit_edge

._crit_edge:                                      ; preds = %141
  %scevgep = getelementptr %struct.lua_TValue* %.promoted, i64 %140
  store %struct.lua_TValue* %scevgep, %struct.lua_TValue** %114, align 8, !tbaa !12
  br label %147

; <label>:147                                     ; preds = %._crit_edge, %.preheader
  %n.0.lcssa = phi i32 [ %smax, %._crit_edge ], [ %120, %.preheader ]
  %148 = getelementptr inbounds %struct.Proto* %113, i64 0, i32 21
  %149 = load i8* %148, align 1, !tbaa !130
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %151, label %156

; <label>:151                                     ; preds = %147
  %152 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %153 = bitcast %struct.lua_TValue* %152 to i8*
  %.sum = add i64 %5, 16
  %154 = getelementptr inbounds i8* %153, i64 %.sum
  %155 = bitcast i8* %154 to %struct.lua_TValue*
  br label %193

; <label>:156                                     ; preds = %147
  %157 = load %struct.lua_TValue** %121, align 8, !tbaa !11
  %158 = load %struct.lua_TValue** %114, align 8, !tbaa !12
  %159 = ptrtoint %struct.lua_TValue* %157 to i64
  %160 = ptrtoint %struct.lua_TValue* %158 to i64
  %161 = sub i64 %159, %160
  %162 = ashr exact i64 %161, 4
  %163 = load i8* %126, align 1, !tbaa !88
  %164 = zext i8 %163 to i64
  %165 = icmp sgt i64 %162, %164
  br i1 %165, label %168, label %166

; <label>:166                                     ; preds = %156
  %167 = zext i8 %163 to i32
  call void @luaD_growstack(%struct.lua_State* %L, i32 %167) #3
  %.pre.i2 = load %struct.lua_TValue** %114, align 8, !tbaa !12
  br label %168

; <label>:168                                     ; preds = %166, %156
  %169 = phi %struct.lua_TValue* [ %158, %156 ], [ %.pre.i2, %166 ]
  %170 = sext i32 %n.0.lcssa to i64
  %171 = icmp eq i8 %134, 0
  br i1 %171, label %adjust_varargs.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %168
  %.sum.i9 = sub i64 0, %170
  %172 = getelementptr inbounds %struct.lua_TValue* %169, i64 %.sum.i9
  %173 = getelementptr inbounds %struct.lua_TValue* %169, i64 1
  store %struct.lua_TValue* %173, %struct.lua_TValue** %114, align 8, !tbaa !12
  %174 = bitcast %struct.lua_TValue* %172 to i64*
  %175 = load i64* %174, align 8
  %176 = getelementptr inbounds %struct.lua_TValue* %169, i64 0, i32 0, i32 0
  %.c.i10 = inttoptr i64 %175 to %union.GCObject*
  store %union.GCObject* %.c.i10, %union.GCObject** %176, align 8
  %177 = getelementptr inbounds %struct.lua_TValue* %169, i64 %.sum.i9, i32 1
  %178 = load i32* %177, align 4, !tbaa !15
  %179 = getelementptr inbounds %struct.lua_TValue* %169, i64 0, i32 1
  store i32 %178, i32* %179, align 4, !tbaa !15
  store i32 0, i32* %177, align 4, !tbaa !15
  %180 = icmp ugt i8 %134, 1
  br i1 %180, label %._crit_edge2.i, label %adjust_varargs.exit

._crit_edge2.i:                                   ; preds = %._crit_edge2.i, %.lr.ph.i.preheader
  %indvars.iv.next.i11 = phi i64 [ %indvars.iv.next.i, %._crit_edge2.i ], [ 1, %.lr.ph.i.preheader ]
  %.pre3.i = load %struct.lua_TValue** %114, align 8, !tbaa !12
  %.sum.i = sub i64 %indvars.iv.next.i11, %170
  %181 = getelementptr inbounds %struct.lua_TValue* %169, i64 %.sum.i
  %182 = getelementptr inbounds %struct.lua_TValue* %.pre3.i, i64 1
  store %struct.lua_TValue* %182, %struct.lua_TValue** %114, align 8, !tbaa !12
  %183 = bitcast %struct.lua_TValue* %181 to i64*
  %184 = load i64* %183, align 8
  %185 = getelementptr inbounds %struct.lua_TValue* %.pre3.i, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %184 to %union.GCObject*
  store %union.GCObject* %.c.i, %union.GCObject** %185, align 8
  %186 = getelementptr inbounds %struct.lua_TValue* %169, i64 %.sum.i, i32 1
  %187 = load i32* %186, align 4, !tbaa !15
  %188 = getelementptr inbounds %struct.lua_TValue* %.pre3.i, i64 0, i32 1
  store i32 %187, i32* %188, align 4, !tbaa !15
  store i32 0, i32* %186, align 4, !tbaa !15
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.next.i11, 1
  %189 = trunc i64 %indvars.iv.next.i to i32
  %190 = icmp slt i32 %189, %135
  br i1 %190, label %._crit_edge2.i, label %adjust_varargs.exit

adjust_varargs.exit:                              ; preds = %._crit_edge2.i, %.lr.ph.i.preheader, %168
  %191 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %192 = bitcast %struct.lua_TValue* %191 to i8*
  br label %193

; <label>:193                                     ; preds = %adjust_varargs.exit, %151
  %.pn = phi i8* [ %192, %adjust_varargs.exit ], [ %153, %151 ]
  %base.0 = phi %struct.lua_TValue* [ %169, %adjust_varargs.exit ], [ %155, %151 ]
  %.01.in = getelementptr inbounds i8* %.pn, i64 %5
  %.01 = bitcast i8* %.01.in to %struct.lua_TValue*
  %194 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %195 = load %struct.CallInfo** %194, align 8, !tbaa !5
  %196 = getelementptr inbounds %struct.CallInfo* %195, i64 0, i32 3
  %197 = load %struct.CallInfo** %196, align 8, !tbaa !138
  %198 = icmp eq %struct.CallInfo* %197, null
  br i1 %198, label %199, label %201

; <label>:199                                     ; preds = %193
  %200 = call %struct.CallInfo* bitcast (%struct.CallInfo.225* (%struct.lua_State.228*)* @luaE_extendCI to %struct.CallInfo* (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %201

; <label>:201                                     ; preds = %199, %193
  %202 = phi %struct.CallInfo* [ %200, %199 ], [ %197, %193 ]
  store %struct.CallInfo* %202, %struct.CallInfo** %194, align 8, !tbaa !5
  %203 = trunc i32 %nresults to i16
  %204 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 4
  store i16 %203, i16* %204, align 2, !tbaa !146
  %205 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 0
  store %struct.lua_TValue* %.01, %struct.lua_TValue** %205, align 8, !tbaa !24
  %206 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 7
  %207 = bitcast %union.anon.2* %206 to %struct.lua_TValue**
  store %struct.lua_TValue* %base.0, %struct.lua_TValue** %207, align 8, !tbaa !136
  %208 = load i8* %126, align 1, !tbaa !88
  %209 = zext i8 %208 to i64
  %210 = getelementptr inbounds %struct.lua_TValue* %base.0, i64 %209
  %211 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 1
  store %struct.lua_TValue* %210, %struct.lua_TValue** %211, align 8, !tbaa !14
  %212 = getelementptr inbounds %struct.global_State* %112, i64 0, i32 3
  %213 = bitcast i64* %212 to i32**
  %214 = load i32** %213, align 8, !tbaa !83
  %215 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 7, i32 0, i32 1
  %.c = bitcast i32* %214 to i32 (%struct.lua_State*)*
  store i32 (%struct.lua_State*)* %.c, i32 (%struct.lua_State*)** %215, align 8, !tbaa !147
  %216 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 5
  store i8 1, i8* %216, align 1, !tbaa !46
  store %struct.lua_TValue* %210, %struct.lua_TValue** %114, align 8, !tbaa !12
  %217 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %218 = load %struct.global_State** %217, align 8, !tbaa !17
  %219 = getelementptr inbounds %struct.global_State* %218, i64 0, i32 3
  %220 = load i64* %219, align 8, !tbaa !33
  %221 = icmp sgt i64 %220, 0
  br i1 %221, label %222, label %223

; <label>:222                                     ; preds = %201
  call void @luaC_step(%struct.lua_State* %L) #3
  br label %223

; <label>:223                                     ; preds = %222, %201
  %224 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 13
  %225 = load i8* %224, align 1, !tbaa !115
  %226 = and i8 %225, 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %337, label %228

; <label>:228                                     ; preds = %223
  %229 = load i32 (%struct.lua_State*)** %215, align 8
  %230 = bitcast i32 (%struct.lua_State*)* %229 to i32*
  %231 = getelementptr inbounds i32* %230, i64 1
  %.c.i3 = bitcast i32* %231 to i32 (%struct.lua_State*)*
  store i32 (%struct.lua_State*)* %.c.i3, i32 (%struct.lua_State*)** %215, align 8, !tbaa !147
  %232 = getelementptr inbounds %struct.CallInfo* %202, i64 0, i32 2
  %233 = load %struct.CallInfo** %232, align 8, !tbaa !133
  %234 = getelementptr inbounds %struct.CallInfo* %233, i64 0, i32 5
  %235 = load i8* %234, align 1, !tbaa !46
  %236 = and i8 %235, 1
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %249, label %238

; <label>:238                                     ; preds = %228
  %239 = getelementptr inbounds %struct.CallInfo* %233, i64 0, i32 7, i32 0, i32 1
  %240 = load i32 (%struct.lua_State*)** %239, align 8
  %241 = bitcast i32 (%struct.lua_State*)* %240 to i32*
  %242 = getelementptr inbounds i32* %241, i64 -1
  %243 = load i32* %242, align 4, !tbaa !1
  %244 = and i32 %243, 63
  %245 = icmp eq i32 %244, 30
  br i1 %245, label %246, label %249

; <label>:246                                     ; preds = %238
  %247 = load i8* %216, align 1, !tbaa !46
  %248 = or i8 %247, 64
  store i8 %248, i8* %216, align 1, !tbaa !46
  br label %249

; <label>:249                                     ; preds = %246, %238, %228
  %hook.0.i = phi i32 [ 4, %246 ], [ 0, %238 ], [ 0, %228 ]
  %250 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 17
  %251 = load void (%struct.lua_State*, %struct.lua_Debug*)** %250, align 8, !tbaa !112
  %252 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %251, null
  br i1 %252, label %callhook.exit, label %253

; <label>:253                                     ; preds = %249
  %254 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %255 = load i8* %254, align 1, !tbaa !56
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %callhook.exit, label %257

; <label>:257                                     ; preds = %253
  %258 = load %struct.CallInfo** %194, align 8, !tbaa !5
  %259 = load %struct.lua_TValue** %114, align 8, !tbaa !12
  %260 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %261 = ptrtoint %struct.lua_TValue* %259 to i64
  %262 = ptrtoint %struct.lua_TValue* %260 to i64
  %263 = sub i64 %261, %262
  %264 = getelementptr inbounds %struct.CallInfo* %258, i64 0, i32 1
  %265 = load %struct.lua_TValue** %264, align 8, !tbaa !14
  %266 = ptrtoint %struct.lua_TValue* %265 to i64
  %267 = sub i64 %266, %262
  %268 = bitcast %struct.lua_Debug* %ar.i.i to i8*
  call void @llvm.lifetime.start(i64 128, i8* %268) #3
  %269 = getelementptr inbounds %struct.lua_Debug* %ar.i.i, i64 0, i32 0
  store i32 %hook.0.i, i32* %269, align 8, !tbaa !145
  %270 = getelementptr inbounds %struct.lua_Debug* %ar.i.i, i64 0, i32 5
  store i32 -1, i32* %270, align 8, !tbaa !126
  %271 = getelementptr inbounds %struct.lua_Debug* %ar.i.i, i64 0, i32 13
  store %struct.CallInfo* %258, %struct.CallInfo** %271, align 8, !tbaa !116
  %272 = load %struct.lua_TValue** %121, align 8, !tbaa !11
  %273 = ptrtoint %struct.lua_TValue* %272 to i64
  %274 = sub i64 %273, %261
  %275 = icmp slt i64 %274, 336
  br i1 %275, label %276, label %277

; <label>:276                                     ; preds = %257
  call void @luaD_growstack(%struct.lua_State* %L, i32 20) #3
  %.pre.i.i = load %struct.lua_TValue** %114, align 8, !tbaa !12
  br label %277

; <label>:277                                     ; preds = %276, %257
  %278 = phi %struct.lua_TValue* [ %259, %257 ], [ %.pre.i.i, %276 ]
  %279 = getelementptr inbounds %struct.lua_TValue* %278, i64 20
  store %struct.lua_TValue* %279, %struct.lua_TValue** %264, align 8, !tbaa !14
  store i8 0, i8* %254, align 1, !tbaa !56
  %280 = getelementptr inbounds %struct.CallInfo* %258, i64 0, i32 5
  %281 = load i8* %280, align 1, !tbaa !46
  %282 = or i8 %281, 2
  store i8 %282, i8* %280, align 1, !tbaa !46
  call void %251(%struct.lua_State* %L, %struct.lua_Debug* %ar.i.i) #3
  store i8 1, i8* %254, align 1, !tbaa !56
  %283 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %284 = bitcast %struct.lua_TValue* %283 to i8*
  %285 = getelementptr inbounds i8* %284, i64 %267
  %286 = bitcast i8* %285 to %struct.lua_TValue*
  store %struct.lua_TValue* %286, %struct.lua_TValue** %264, align 8, !tbaa !14
  %287 = getelementptr inbounds i8* %284, i64 %263
  %288 = bitcast i8* %287 to %struct.lua_TValue*
  store %struct.lua_TValue* %288, %struct.lua_TValue** %114, align 8, !tbaa !12
  %289 = load i8* %280, align 1, !tbaa !46
  %290 = and i8 %289, -3
  store i8 %290, i8* %280, align 1, !tbaa !46
  call void @llvm.lifetime.end(i64 128, i8* %268) #3
  %.pre.i4 = load i32 (%struct.lua_State*)** %215, align 8
  br label %callhook.exit

callhook.exit:                                    ; preds = %277, %253, %249
  %291 = phi i32 (%struct.lua_State*)* [ %.c.i3, %249 ], [ %.c.i3, %253 ], [ %.pre.i4, %277 ]
  %292 = bitcast i32 (%struct.lua_State*)* %291 to i32*
  %293 = getelementptr inbounds i32* %292, i64 -1
  %.c1.i = bitcast i32* %293 to i32 (%struct.lua_State*)*
  store i32 (%struct.lua_State*)* %.c1.i, i32 (%struct.lua_State*)** %215, align 8, !tbaa !147
  br label %337

; <label>:294                                     ; preds = %0
  %295 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 16) #3
  %296 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %297 = ptrtoint %struct.lua_TValue* %296 to i64
  %298 = sub i64 %3, %297
  %299 = getelementptr inbounds %struct.lua_TValue* %295, i64 0, i32 1
  %300 = load i32* %299, align 4, !tbaa !15
  %301 = and i32 %300, 15
  %302 = icmp eq i32 %301, 6
  br i1 %302, label %304, label %303

; <label>:303                                     ; preds = %294
  call void @luaG_typeerror(%struct.lua_State* %L, %struct.lua_TValue* %func, i8* getelementptr inbounds ([5 x i8]* @.str1135, i64 0, i64 0)) #13
  unreachable

; <label>:304                                     ; preds = %294
  %305 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %306 = load %struct.lua_TValue** %305, align 8, !tbaa !12
  %307 = icmp ugt %struct.lua_TValue* %306, %func
  br i1 %307, label %.lr.ph.i6, label %316

.lr.ph.i6:                                        ; preds = %.lr.ph.i6, %304
  %p.03.i = phi %struct.lua_TValue* [ %308, %.lr.ph.i6 ], [ %306, %304 ]
  %308 = getelementptr inbounds %struct.lua_TValue* %p.03.i, i64 -1
  %309 = bitcast %struct.lua_TValue* %308 to i64*
  %310 = load i64* %309, align 8
  %311 = getelementptr inbounds %struct.lua_TValue* %p.03.i, i64 0, i32 0, i32 0
  %.c.i5 = inttoptr i64 %310 to %union.GCObject*
  store %union.GCObject* %.c.i5, %union.GCObject** %311, align 8
  %312 = getelementptr inbounds %struct.lua_TValue* %p.03.i, i64 -1, i32 1
  %313 = load i32* %312, align 4, !tbaa !15
  %314 = getelementptr inbounds %struct.lua_TValue* %p.03.i, i64 0, i32 1
  store i32 %313, i32* %314, align 4, !tbaa !15
  %315 = icmp ugt %struct.lua_TValue* %308, %func
  br i1 %315, label %.lr.ph.i6, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %.lr.ph.i6
  %.pre.i7 = load %struct.lua_TValue** %305, align 8, !tbaa !12
  br label %316

; <label>:316                                     ; preds = %._crit_edge.i, %304
  %317 = phi %struct.lua_TValue* [ %.pre.i7, %._crit_edge.i ], [ %306, %304 ]
  %318 = getelementptr inbounds %struct.lua_TValue* %317, i64 1
  store %struct.lua_TValue* %318, %struct.lua_TValue** %305, align 8, !tbaa !12
  %319 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  %320 = load %struct.lua_TValue** %319, align 8, !tbaa !11
  %321 = ptrtoint %struct.lua_TValue* %320 to i64
  %322 = ptrtoint %struct.lua_TValue* %318 to i64
  %323 = sub i64 %321, %322
  %324 = icmp slt i64 %323, 16
  br i1 %324, label %325, label %tryfuncTM.exit

; <label>:325                                     ; preds = %316
  call void @luaD_growstack(%struct.lua_State* %L, i32 0) #3
  br label %tryfuncTM.exit

tryfuncTM.exit:                                   ; preds = %325, %316
  %326 = load %struct.lua_TValue** %1, align 8, !tbaa !13
  %327 = bitcast %struct.lua_TValue* %326 to i8*
  %328 = getelementptr inbounds i8* %327, i64 %298
  %329 = bitcast i8* %328 to %struct.lua_TValue*
  %330 = bitcast %struct.lua_TValue* %295 to i64*
  %331 = bitcast i8* %328 to i64*
  %332 = load i64* %330, align 8
  store i64 %332, i64* %331, align 8
  %333 = load i32* %299, align 4, !tbaa !15
  %.sum.i8 = add i64 %298, 8
  %334 = getelementptr inbounds i8* %327, i64 %.sum.i8
  %335 = bitcast i8* %334 to i32*
  store i32 %333, i32* %335, align 4, !tbaa !15
  %336 = call i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %329, i32 %nresults)
  br label %337

; <label>:337                                     ; preds = %tryfuncTM.exit, %callhook.exit, %223, %luaD_hook.exit
  %.0 = phi i32 [ %336, %tryfuncTM.exit ], [ 1, %luaD_hook.exit ], [ 0, %223 ], [ 0, %callhook.exit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %firstResult) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 13
  %4 = load i8* %3, align 1, !tbaa !115
  %5 = zext i8 %4 to i32
  %6 = and i32 %5, 6
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %._crit_edge, label %8

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 2
  %.pre = load %struct.CallInfo** %.phi.trans.insert, align 8, !tbaa !133
  br label %68

; <label>:8                                       ; preds = %0
  %9 = and i32 %5, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %61, label %11

; <label>:11                                      ; preds = %8
  %12 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %13 = load %struct.lua_TValue** %12, align 8, !tbaa !13
  %14 = ptrtoint %struct.lua_TValue* %firstResult to i64
  %15 = ptrtoint %struct.lua_TValue* %13 to i64
  %16 = sub i64 %14, %15
  %17 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 17
  %18 = load void (%struct.lua_State*, %struct.lua_Debug*)** %17, align 8, !tbaa !112
  %19 = icmp eq void (%struct.lua_State*, %struct.lua_Debug*)* %18, null
  br i1 %19, label %luaD_hook.exit, label %20

; <label>:20                                      ; preds = %11
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %22 = load i8* %21, align 1, !tbaa !56
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %luaD_hook.exit, label %24

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %26 = load %struct.lua_TValue** %25, align 8, !tbaa !12
  %27 = ptrtoint %struct.lua_TValue* %26 to i64
  %28 = sub i64 %27, %15
  %29 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 1
  %30 = load %struct.lua_TValue** %29, align 8, !tbaa !14
  %31 = ptrtoint %struct.lua_TValue* %30 to i64
  %32 = sub i64 %31, %15
  %33 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 128, i8* %33) #3
  %34 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 0
  store i32 1, i32* %34, align 8, !tbaa !145
  %35 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 5
  store i32 -1, i32* %35, align 8, !tbaa !126
  %36 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 13
  store %struct.CallInfo* %2, %struct.CallInfo** %36, align 8, !tbaa !116
  %37 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 8
  %38 = load %struct.lua_TValue** %37, align 8, !tbaa !11
  %39 = ptrtoint %struct.lua_TValue* %38 to i64
  %40 = sub i64 %39, %27
  %41 = icmp slt i64 %40, 336
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %24
  call void @luaD_growstack(%struct.lua_State* %L, i32 20) #3
  %.pre.i = load %struct.lua_TValue** %25, align 8, !tbaa !12
  br label %43

; <label>:43                                      ; preds = %42, %24
  %44 = phi %struct.lua_TValue* [ %26, %24 ], [ %.pre.i, %42 ]
  %45 = getelementptr inbounds %struct.lua_TValue* %44, i64 20
  store %struct.lua_TValue* %45, %struct.lua_TValue** %29, align 8, !tbaa !14
  store i8 0, i8* %21, align 1, !tbaa !56
  %46 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 5
  %47 = load i8* %46, align 1, !tbaa !46
  %48 = or i8 %47, 2
  store i8 %48, i8* %46, align 1, !tbaa !46
  call void %18(%struct.lua_State* %L, %struct.lua_Debug* %ar.i) #3
  store i8 1, i8* %21, align 1, !tbaa !56
  %49 = load %struct.lua_TValue** %12, align 8, !tbaa !13
  %50 = bitcast %struct.lua_TValue* %49 to i8*
  %51 = getelementptr inbounds i8* %50, i64 %32
  %52 = bitcast i8* %51 to %struct.lua_TValue*
  store %struct.lua_TValue* %52, %struct.lua_TValue** %29, align 8, !tbaa !14
  %53 = getelementptr inbounds i8* %50, i64 %28
  %54 = bitcast i8* %53 to %struct.lua_TValue*
  store %struct.lua_TValue* %54, %struct.lua_TValue** %25, align 8, !tbaa !12
  %55 = load i8* %46, align 1, !tbaa !46
  %56 = and i8 %55, -3
  store i8 %56, i8* %46, align 1, !tbaa !46
  call void @llvm.lifetime.end(i64 128, i8* %33) #3
  br label %luaD_hook.exit

luaD_hook.exit:                                   ; preds = %43, %20, %11
  %57 = phi %struct.lua_TValue* [ %13, %11 ], [ %13, %20 ], [ %49, %43 ]
  %58 = bitcast %struct.lua_TValue* %57 to i8*
  %59 = getelementptr inbounds i8* %58, i64 %16
  %60 = bitcast i8* %59 to %struct.lua_TValue*
  br label %61

; <label>:61                                      ; preds = %luaD_hook.exit, %8
  %.0 = phi %struct.lua_TValue* [ %60, %luaD_hook.exit ], [ %firstResult, %8 ]
  %62 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 2
  %63 = load %struct.CallInfo** %62, align 8, !tbaa !133
  %64 = getelementptr inbounds %struct.CallInfo* %63, i64 0, i32 7, i32 0, i32 1
  %65 = load i32 (%struct.lua_State*)** %64, align 8
  %66 = bitcast i32 (%struct.lua_State*)* %65 to i32*
  %67 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 7
  store i32* %66, i32** %67, align 8, !tbaa !111
  br label %68

; <label>:68                                      ; preds = %61, %._crit_edge
  %69 = phi %struct.CallInfo* [ %63, %61 ], [ %.pre, %._crit_edge ]
  %.1 = phi %struct.lua_TValue* [ %.0, %61 ], [ %firstResult, %._crit_edge ]
  %70 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %71 = load %struct.lua_TValue** %70, align 8, !tbaa !24
  %72 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 4
  %73 = load i16* %72, align 2, !tbaa !146
  %74 = sext i16 %73 to i32
  store %struct.CallInfo* %69, %struct.CallInfo** %1, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %76 = icmp eq i16 %73, 0
  br i1 %76, label %.critedge.preheader.thread, label %.lr.ph6

.critedge.preheader:                              ; preds = %.lr.ph6
  %77 = icmp sgt i32 %i.03, 0
  br i1 %77, label %.lr.ph, label %.critedge.preheader.thread

.lr.ph:                                           ; preds = %.critedge.preheader
  %78 = add i32 %i.03, -1
  %79 = zext i32 %78 to i64
  %80 = add i64 %79, 1
  br label %.critedge

.lr.ph6:                                          ; preds = %83, %68
  %.25 = phi %struct.lua_TValue* [ %84, %83 ], [ %.1, %68 ]
  %res.04 = phi %struct.lua_TValue* [ %85, %83 ], [ %71, %68 ]
  %i.03 = phi i32 [ %92, %83 ], [ %74, %68 ]
  %81 = load %struct.lua_TValue** %75, align 8, !tbaa !12
  %82 = icmp ult %struct.lua_TValue* %.25, %81
  br i1 %82, label %83, label %.critedge.preheader

; <label>:83                                      ; preds = %.lr.ph6
  %84 = getelementptr inbounds %struct.lua_TValue* %.25, i64 1
  %85 = getelementptr inbounds %struct.lua_TValue* %res.04, i64 1
  %86 = bitcast %struct.lua_TValue* %.25 to i64*
  %87 = load i64* %86, align 8
  %88 = getelementptr inbounds %struct.lua_TValue* %res.04, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %87 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %88, align 8
  %89 = getelementptr inbounds %struct.lua_TValue* %.25, i64 0, i32 1
  %90 = load i32* %89, align 4, !tbaa !15
  %91 = getelementptr inbounds %struct.lua_TValue* %res.04, i64 0, i32 1
  store i32 %90, i32* %91, align 4, !tbaa !15
  %92 = add nsw i32 %i.03, -1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %.critedge.preheader.thread, label %.lr.ph6

.critedge:                                        ; preds = %.critedge, %.lr.ph
  %res.12 = phi %struct.lua_TValue* [ %res.04, %.lr.ph ], [ %95, %.critedge ]
  %i.11 = phi i32 [ %i.03, %.lr.ph ], [ %94, %.critedge ]
  %94 = add nsw i32 %i.11, -1
  %95 = getelementptr inbounds %struct.lua_TValue* %res.12, i64 1
  %96 = getelementptr inbounds %struct.lua_TValue* %res.12, i64 0, i32 1
  store i32 0, i32* %96, align 4, !tbaa !15
  %97 = icmp sgt i32 %94, 0
  br i1 %97, label %.critedge, label %.critedge._crit_edge

.critedge._crit_edge:                             ; preds = %.critedge
  %scevgep = getelementptr %struct.lua_TValue* %res.04, i64 %80
  br label %.critedge.preheader.thread

.critedge.preheader.thread:                       ; preds = %.critedge._crit_edge, %83, %.critedge.preheader, %68
  %res.1.lcssa = phi %struct.lua_TValue* [ %scevgep, %.critedge._crit_edge ], [ %res.04, %.critedge.preheader ], [ %71, %68 ], [ %85, %83 ]
  store %struct.lua_TValue* %res.1.lcssa, %struct.lua_TValue** %75, align 8, !tbaa !12
  %98 = add nsw i32 %74, 1
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 %nResults, i32 %allowyield) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 12
  %2 = load i16* %1, align 2, !tbaa !142
  %3 = add i16 %2, 1
  store i16 %3, i16* %1, align 2, !tbaa !142
  %4 = icmp ugt i16 %3, 199
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = icmp eq i16 %3, 200
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %5
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str126, i64 0, i64 0)) #13
  unreachable

; <label>:8                                       ; preds = %5
  %9 = icmp ugt i16 %3, 224
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %8
  tail call void @luaD_throw(%struct.lua_State* %L, i32 6) #14
  unreachable

; <label>:11                                      ; preds = %8, %0
  %12 = icmp ne i32 %allowyield, 0
  br i1 %12, label %17, label %13

; <label>:13                                      ; preds = %11
  %14 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %15 = load i16* %14, align 2, !tbaa !50
  %16 = add i16 %15, 1
  store i16 %16, i16* %14, align 2, !tbaa !50
  br label %17

; <label>:17                                      ; preds = %13, %11
  %18 = tail call i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %func, i32 %nResults)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %17
  tail call void bitcast (void (%struct.lua_State.228*)* @luaV_execute to void (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %21

; <label>:21                                      ; preds = %20, %17
  br i1 %12, label %26, label %22

; <label>:22                                      ; preds = %21
  %23 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %24 = load i16* %23, align 2, !tbaa !50
  %25 = add i16 %24, -1
  store i16 %25, i16* %23, align 2, !tbaa !50
  br label %26

; <label>:26                                      ; preds = %22, %21
  %27 = load i16* %1, align 2, !tbaa !142
  %28 = add i16 %27, -1
  store i16 %28, i16* %1, align 2, !tbaa !142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_resume(%struct.lua_State* %L, %struct.lua_State* readonly %from, i32 %nargs) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %2 = load i16* %1, align 2, !tbaa !50
  %3 = icmp eq %struct.lua_State* %from, null
  br i1 %3, label %8, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_State* %from, i64 0, i32 12
  %6 = load i16* %5, align 2, !tbaa !142
  %7 = add i16 %6, 1
  br label %8

; <label>:8                                       ; preds = %4, %0
  %9 = phi i16 [ %7, %4 ], [ 1, %0 ]
  %10 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 12
  store i16 %9, i16* %10, align 2, !tbaa !142
  store i16 0, i16* %1, align 2, !tbaa !50
  %11 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %12 = load %struct.lua_TValue** %11, align 8, !tbaa !12
  %13 = sext i32 %nargs to i64
  %14 = sub i64 0, %13
  %15 = getelementptr inbounds %struct.lua_TValue* %12, i64 %14
  %16 = bitcast %struct.lua_TValue* %15 to i8*
  %17 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* @resume, i8* %16)
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %.critedge, label %.preheader

.preheader:                                       ; preds = %8
  %status.0.cmp10 = icmp ugt i32 %17, 1
  br i1 %status.0.cmp10, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %.preheader
  %19 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %20 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %22 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 21
  %23 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 10
  %24 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  br label %25

; <label>:25                                      ; preds = %99, %.lr.ph
  %status.011 = phi i32 [ %17, %.lr.ph ], [ %106, %99 ]
  %ci.01.i.i = load %struct.CallInfo** %19, align 8
  %26 = icmp eq %struct.CallInfo* %ci.01.i.i, null
  br i1 %26, label %.loopexit, label %.lr.ph.i.i

; <label>:27                                      ; preds = %.lr.ph.i.i
  %28 = getelementptr inbounds %struct.CallInfo* %ci.02.i.i, i64 0, i32 2
  %ci.0.i.i = load %struct.CallInfo** %28, align 8
  %29 = icmp eq %struct.CallInfo* %ci.0.i.i, null
  br i1 %29, label %.loopexit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %27, %25
  %ci.02.i.i = phi %struct.CallInfo* [ %ci.0.i.i, %27 ], [ %ci.01.i.i, %25 ]
  %30 = getelementptr inbounds %struct.CallInfo* %ci.02.i.i, i64 0, i32 5
  %31 = load i8* %30, align 1, !tbaa !46
  %32 = and i8 %31, 16
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %27, label %34

; <label>:34                                      ; preds = %.lr.ph.i.i
  %35 = load %struct.lua_TValue** %20, align 8, !tbaa !13
  %36 = bitcast %struct.lua_TValue* %35 to i8*
  %37 = getelementptr inbounds %struct.CallInfo* %ci.02.i.i, i64 0, i32 6
  %38 = load i64* %37, align 8, !tbaa !55
  %39 = getelementptr inbounds i8* %36, i64 %38
  %40 = bitcast i8* %39 to %struct.lua_TValue*
  tail call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %40) #3
  switch i32 %status.011, label %63 [
    i32 4, label %41
    i32 6, label %53
  ]

; <label>:41                                      ; preds = %34
  %42 = load %struct.global_State** %24, align 8, !tbaa !17
  %43 = getelementptr inbounds %struct.global_State* %42, i64 0, i32 32
  %44 = load %union.TString** %43, align 8, !tbaa !148
  %45 = bitcast %union.TString* %44 to %union.GCObject*
  %46 = bitcast i8* %39 to %union.GCObject**
  store %union.GCObject* %45, %union.GCObject** %46, align 8, !tbaa !25
  %47 = getelementptr inbounds %union.TString* %44, i64 0, i32 0, i32 1
  %48 = load i8* %47, align 1, !tbaa !38
  %49 = zext i8 %48 to i32
  %50 = or i32 %49, 64
  %.sum4.i = add i64 %38, 8
  %51 = getelementptr inbounds i8* %36, i64 %.sum4.i
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 4, !tbaa !15
  br label %seterrorobj.exit.i

; <label>:53                                      ; preds = %34
  %54 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString* (%struct.lua_State*, i8*, i64)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8]* @.str832, i64 0, i64 0), i64 23) #3
  %55 = bitcast %union.TString* %54 to %union.GCObject*
  %56 = bitcast i8* %39 to %union.GCObject**
  store %union.GCObject* %55, %union.GCObject** %56, align 8, !tbaa !25
  %57 = getelementptr inbounds %union.TString* %54, i64 0, i32 0, i32 1
  %58 = load i8* %57, align 1, !tbaa !38
  %59 = zext i8 %58 to i32
  %60 = or i32 %59, 64
  %.sum.i = add i64 %38, 8
  %61 = getelementptr inbounds i8* %36, i64 %.sum.i
  %62 = bitcast i8* %61 to i32*
  store i32 %60, i32* %62, align 4, !tbaa !15
  br label %seterrorobj.exit.i

; <label>:63                                      ; preds = %34
  %64 = load %struct.lua_TValue** %11, align 8, !tbaa !12
  %65 = getelementptr inbounds %struct.lua_TValue* %64, i64 -1
  %66 = bitcast %struct.lua_TValue* %65 to i64*
  %67 = load i64* %66, align 8
  %68 = bitcast i8* %39 to %union.GCObject**
  %.c.i.i = inttoptr i64 %67 to %union.GCObject*
  store %union.GCObject* %.c.i.i, %union.GCObject** %68, align 8
  %69 = getelementptr inbounds %struct.lua_TValue* %64, i64 -1, i32 1
  %70 = load i32* %69, align 4, !tbaa !15
  %.sum5.i = add i64 %38, 8
  %71 = getelementptr inbounds i8* %36, i64 %.sum5.i
  %72 = bitcast i8* %71 to i32*
  store i32 %70, i32* %72, align 4, !tbaa !15
  br label %seterrorobj.exit.i

seterrorobj.exit.i:                               ; preds = %63, %53, %41
  %.sum3.i = add i64 %38, 16
  %73 = getelementptr inbounds i8* %36, i64 %.sum3.i
  %74 = bitcast i8* %73 to %struct.lua_TValue*
  store %struct.lua_TValue* %74, %struct.lua_TValue** %11, align 8, !tbaa !12
  store %struct.CallInfo* %ci.02.i.i, %struct.CallInfo** %19, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.CallInfo* %ci.02.i.i, i64 0, i32 7, i32 0, i32 3
  %76 = load i8* %75, align 1, !tbaa !57
  store i8 %76, i8* %21, align 1, !tbaa !56
  store i16 0, i16* %1, align 2, !tbaa !50
  %77 = icmp eq %struct.CallInfo* %ci.02.i.i, null
  br i1 %77, label %stackinuse.exit.i.i, label %.lr.ph.i.i.i

.lr.ph.i.i.i:                                     ; preds = %.lr.ph.i.i.i, %seterrorobj.exit.i
  %ci.03.i.i.i = phi %struct.CallInfo* [ %ci.0.i.i.i, %.lr.ph.i.i.i ], [ %ci.02.i.i, %seterrorobj.exit.i ]
  %lim.02.i.i.i = phi %struct.lua_TValue* [ %.lim.0.i.i.i, %.lr.ph.i.i.i ], [ %74, %seterrorobj.exit.i ]
  %78 = getelementptr inbounds %struct.CallInfo* %ci.03.i.i.i, i64 0, i32 1
  %79 = load %struct.lua_TValue** %78, align 8, !tbaa !14
  %80 = icmp ult %struct.lua_TValue* %lim.02.i.i.i, %79
  %.lim.0.i.i.i = select i1 %80, %struct.lua_TValue* %79, %struct.lua_TValue* %lim.02.i.i.i
  %81 = getelementptr inbounds %struct.CallInfo* %ci.03.i.i.i, i64 0, i32 2
  %ci.0.i.i.i = load %struct.CallInfo** %81, align 8
  %82 = icmp eq %struct.CallInfo* %ci.0.i.i.i, null
  br i1 %82, label %stackinuse.exit.i.i, label %.lr.ph.i.i.i

stackinuse.exit.i.i:                              ; preds = %.lr.ph.i.i.i, %seterrorobj.exit.i
  %lim.0.lcssa.i.i.i = phi %struct.lua_TValue* [ %74, %seterrorobj.exit.i ], [ %.lim.0.i.i.i, %.lr.ph.i.i.i ]
  %83 = load %struct.lua_TValue** %20, align 8, !tbaa !13
  %84 = ptrtoint %struct.lua_TValue* %lim.0.lcssa.i.i.i to i64
  %85 = ptrtoint %struct.lua_TValue* %83 to i64
  %86 = sub i64 %84, %85
  %87 = lshr exact i64 %86, 4
  %88 = trunc i64 %87 to i32
  %89 = add nsw i32 %88, 1
  %90 = sdiv i32 %89, 8
  %91 = add i32 %90, 10
  %92 = add i32 %91, %89
  %93 = icmp sgt i32 %92, 1000000
  %..i.i = select i1 %93, i32 1000000, i32 %92
  %94 = icmp sgt i32 %88, 999999
  br i1 %94, label %99, label %95

; <label>:95                                      ; preds = %stackinuse.exit.i.i
  %96 = load i32* %23, align 4, !tbaa !144
  %97 = icmp slt i32 %..i.i, %96
  br i1 %97, label %98, label %99

; <label>:98                                      ; preds = %95
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %..i.i) #3
  br label %99

; <label>:99                                      ; preds = %98, %95, %stackinuse.exit.i.i
  %100 = getelementptr inbounds %struct.CallInfo* %ci.02.i.i, i64 0, i32 7, i32 0, i32 2
  %101 = load i64* %100, align 8, !tbaa !59
  store i64 %101, i64* %22, align 8, !tbaa !58
  %102 = load i8* %30, align 1, !tbaa !46
  %103 = or i8 %102, 32
  store i8 %103, i8* %30, align 1, !tbaa !46
  %104 = trunc i32 %status.011 to i8
  %105 = getelementptr inbounds %struct.CallInfo* %ci.02.i.i, i64 0, i32 7, i32 0, i32 4
  store i8 %104, i8* %105, align 1, !tbaa !49
  %106 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* @unroll, i8* null)
  %status.0.cmp = icmp ugt i32 %106, 1
  br i1 %status.0.cmp, label %25, label %.critedge

.loopexit:                                        ; preds = %27, %25
  %107 = trunc i32 %status.011 to i8
  %108 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 3
  store i8 %107, i8* %108, align 1, !tbaa !62
  %109 = load %struct.lua_TValue** %11, align 8, !tbaa !12
  switch i32 %status.011, label %130 [
    i32 4, label %110
    i32 6, label %121
  ]

; <label>:110                                     ; preds = %.loopexit
  %111 = load %struct.global_State** %24, align 8, !tbaa !17
  %112 = getelementptr inbounds %struct.global_State* %111, i64 0, i32 32
  %113 = load %union.TString** %112, align 8, !tbaa !148
  %114 = bitcast %union.TString* %113 to %union.GCObject*
  %115 = getelementptr inbounds %struct.lua_TValue* %109, i64 0, i32 0, i32 0
  store %union.GCObject* %114, %union.GCObject** %115, align 8, !tbaa !25
  %116 = getelementptr inbounds %union.TString* %113, i64 0, i32 0, i32 1
  %117 = load i8* %116, align 1, !tbaa !38
  %118 = zext i8 %117 to i32
  %119 = or i32 %118, 64
  %120 = getelementptr inbounds %struct.lua_TValue* %109, i64 0, i32 1
  store i32 %119, i32* %120, align 4, !tbaa !15
  br label %seterrorobj.exit

; <label>:121                                     ; preds = %.loopexit
  %122 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString* (%struct.lua_State*, i8*, i64)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8]* @.str832, i64 0, i64 0), i64 23) #3
  %123 = bitcast %union.TString* %122 to %union.GCObject*
  %124 = getelementptr inbounds %struct.lua_TValue* %109, i64 0, i32 0, i32 0
  store %union.GCObject* %123, %union.GCObject** %124, align 8, !tbaa !25
  %125 = getelementptr inbounds %union.TString* %122, i64 0, i32 0, i32 1
  %126 = load i8* %125, align 1, !tbaa !38
  %127 = zext i8 %126 to i32
  %128 = or i32 %127, 64
  %129 = getelementptr inbounds %struct.lua_TValue* %109, i64 0, i32 1
  store i32 %128, i32* %129, align 4, !tbaa !15
  br label %seterrorobj.exit

; <label>:130                                     ; preds = %.loopexit
  %131 = getelementptr inbounds %struct.lua_TValue* %109, i64 -1
  %132 = bitcast %struct.lua_TValue* %131 to i64*
  %133 = load i64* %132, align 8
  %134 = getelementptr inbounds %struct.lua_TValue* %109, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %133 to %union.GCObject*
  store %union.GCObject* %.c.i, %union.GCObject** %134, align 8
  %135 = getelementptr inbounds %struct.lua_TValue* %109, i64 -1, i32 1
  %136 = load i32* %135, align 4, !tbaa !15
  %137 = getelementptr inbounds %struct.lua_TValue* %109, i64 0, i32 1
  store i32 %136, i32* %137, align 4, !tbaa !15
  br label %seterrorobj.exit

seterrorobj.exit:                                 ; preds = %130, %121, %110
  %138 = getelementptr inbounds %struct.lua_TValue* %109, i64 1
  store %struct.lua_TValue* %138, %struct.lua_TValue** %11, align 8, !tbaa !12
  %139 = load %struct.CallInfo** %19, align 8, !tbaa !5
  %140 = getelementptr inbounds %struct.CallInfo* %139, i64 0, i32 1
  store %struct.lua_TValue* %138, %struct.lua_TValue** %140, align 8, !tbaa !14
  br label %.critedge

.critedge:                                        ; preds = %seterrorobj.exit, %99, %.preheader, %8
  %status.1 = phi i32 [ %status.011, %seterrorobj.exit ], [ 2, %8 ], [ %17, %.preheader ], [ %106, %99 ]
  store i16 %2, i16* %1, align 2, !tbaa !50
  %141 = load i16* %10, align 2, !tbaa !142
  %142 = add i16 %141, -1
  store i16 %142, i16* %10, align 2, !tbaa !142
  ret i32 %status.1
}

; Function Attrs: nounwind ssp uwtable
define i32 @lua_yieldk(%struct.lua_State* %L, i32 %nresults, i32 %ctx, i32 (%struct.lua_State*)* %k) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %4 = load i16* %3, align 2, !tbaa !50
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %14, label %6

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %8 = load %struct.global_State** %7, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.global_State* %8, i64 0, i32 30
  %10 = load %struct.lua_State** %9, align 8, !tbaa !40
  %11 = icmp eq %struct.lua_State* %10, %L
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %6
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([42 x i8]* @.str227, i64 0, i64 0)) #13
  unreachable

; <label>:13                                      ; preds = %6
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([42 x i8]* @.str328, i64 0, i64 0)) #13
  unreachable

; <label>:14                                      ; preds = %0
  %15 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 3
  store i8 1, i8* %15, align 1, !tbaa !62
  %16 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 0
  %17 = load %struct.lua_TValue** %16, align 8, !tbaa !24
  %18 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %19 = load %struct.lua_TValue** %18, align 8, !tbaa !13
  %20 = ptrtoint %struct.lua_TValue* %17 to i64
  %21 = ptrtoint %struct.lua_TValue* %19 to i64
  %22 = sub i64 %20, %21
  %23 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 6
  store i64 %22, i64* %23, align 8, !tbaa !55
  %24 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 5
  %25 = load i8* %24, align 1, !tbaa !46
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %38

; <label>:28                                      ; preds = %14
  %29 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 7, i32 0, i32 1
  store i32 (%struct.lua_State*)* %k, i32 (%struct.lua_State*)** %29, align 8, !tbaa !51
  %30 = icmp eq i32 (%struct.lua_State*)* %k, null
  br i1 %30, label %33, label %31

; <label>:31                                      ; preds = %28
  %32 = getelementptr inbounds %struct.CallInfo* %2, i64 0, i32 7, i32 0, i32 0
  store i32 %ctx, i32* %32, align 4, !tbaa !47
  br label %33

; <label>:33                                      ; preds = %31, %28
  %34 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %35 = load %struct.lua_TValue** %34, align 8, !tbaa !12
  %36 = sext i32 %nresults to i64
  %.sum = xor i64 %36, -1
  %37 = getelementptr inbounds %struct.lua_TValue* %35, i64 %.sum
  store %struct.lua_TValue* %37, %struct.lua_TValue** %16, align 8, !tbaa !24
  tail call void @luaD_throw(%struct.lua_State* %L, i32 1) #14
  unreachable

; <label>:38                                      ; preds = %14
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* nocapture %func, i8* %u, i64 %old_top, i64 %ef) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %4 = load i8* %3, align 1, !tbaa !56
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %6 = load i16* %5, align 2, !tbaa !50
  %7 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 21
  %8 = load i64* %7, align 8, !tbaa !58
  store i64 %ef, i64* %7, align 8, !tbaa !58
  %9 = tail call i32 @luaD_rawrunprotected(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* %func, i8* %u)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %luaD_shrinkstack.exit, label %11

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %13 = load %struct.lua_TValue** %12, align 8, !tbaa !13
  %14 = bitcast %struct.lua_TValue* %13 to i8*
  %15 = getelementptr inbounds i8* %14, i64 %old_top
  %16 = bitcast i8* %15 to %struct.lua_TValue*
  tail call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State*, %struct.lua_TValue*)*)(%struct.lua_State* %L, %struct.lua_TValue* %16) #3
  switch i32 %9, label %40 [
    i32 4, label %17
    i32 6, label %30
  ]

; <label>:17                                      ; preds = %11
  %18 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %19 = load %struct.global_State** %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.global_State* %19, i64 0, i32 32
  %21 = load %union.TString** %20, align 8, !tbaa !148
  %22 = bitcast %union.TString* %21 to %union.GCObject*
  %23 = bitcast i8* %15 to %union.GCObject**
  store %union.GCObject* %22, %union.GCObject** %23, align 8, !tbaa !25
  %24 = getelementptr inbounds %union.TString* %21, i64 0, i32 0, i32 1
  %25 = load i8* %24, align 1, !tbaa !38
  %26 = zext i8 %25 to i32
  %27 = or i32 %26, 64
  %.sum2 = add i64 %old_top, 8
  %28 = getelementptr inbounds i8* %14, i64 %.sum2
  %29 = bitcast i8* %28 to i32*
  store i32 %27, i32* %29, align 4, !tbaa !15
  br label %seterrorobj.exit

; <label>:30                                      ; preds = %11
  %31 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString* (%struct.lua_State*, i8*, i64)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([24 x i8]* @.str832, i64 0, i64 0), i64 23) #3
  %32 = bitcast %union.TString* %31 to %union.GCObject*
  %33 = bitcast i8* %15 to %union.GCObject**
  store %union.GCObject* %32, %union.GCObject** %33, align 8, !tbaa !25
  %34 = getelementptr inbounds %union.TString* %31, i64 0, i32 0, i32 1
  %35 = load i8* %34, align 1, !tbaa !38
  %36 = zext i8 %35 to i32
  %37 = or i32 %36, 64
  %.sum = add i64 %old_top, 8
  %38 = getelementptr inbounds i8* %14, i64 %.sum
  %39 = bitcast i8* %38 to i32*
  store i32 %37, i32* %39, align 4, !tbaa !15
  br label %seterrorobj.exit

; <label>:40                                      ; preds = %11
  %41 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %42 = load %struct.lua_TValue** %41, align 8, !tbaa !12
  %43 = getelementptr inbounds %struct.lua_TValue* %42, i64 -1
  %44 = bitcast %struct.lua_TValue* %43 to i64*
  %45 = load i64* %44, align 8
  %46 = bitcast i8* %15 to %union.GCObject**
  %.c.i = inttoptr i64 %45 to %union.GCObject*
  store %union.GCObject* %.c.i, %union.GCObject** %46, align 8
  %47 = getelementptr inbounds %struct.lua_TValue* %42, i64 -1, i32 1
  %48 = load i32* %47, align 4, !tbaa !15
  %.sum3 = add i64 %old_top, 8
  %49 = getelementptr inbounds i8* %14, i64 %.sum3
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 4, !tbaa !15
  br label %seterrorobj.exit

seterrorobj.exit:                                 ; preds = %40, %30, %17
  %.sum1 = add i64 %old_top, 16
  %51 = getelementptr inbounds i8* %14, i64 %.sum1
  %52 = bitcast i8* %51 to %struct.lua_TValue*
  %53 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  store %struct.lua_TValue* %52, %struct.lua_TValue** %53, align 8, !tbaa !12
  store %struct.CallInfo* %2, %struct.CallInfo** %1, align 8, !tbaa !5
  store i8 %4, i8* %3, align 1, !tbaa !56
  store i16 %6, i16* %5, align 2, !tbaa !50
  %54 = icmp eq %struct.CallInfo* %2, null
  br i1 %54, label %stackinuse.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %seterrorobj.exit
  %ci.03.i.i = phi %struct.CallInfo* [ %ci.0.i.i, %.lr.ph.i.i ], [ %2, %seterrorobj.exit ]
  %lim.02.i.i = phi %struct.lua_TValue* [ %.lim.0.i.i, %.lr.ph.i.i ], [ %52, %seterrorobj.exit ]
  %55 = getelementptr inbounds %struct.CallInfo* %ci.03.i.i, i64 0, i32 1
  %56 = load %struct.lua_TValue** %55, align 8, !tbaa !14
  %57 = icmp ult %struct.lua_TValue* %lim.02.i.i, %56
  %.lim.0.i.i = select i1 %57, %struct.lua_TValue* %56, %struct.lua_TValue* %lim.02.i.i
  %58 = getelementptr inbounds %struct.CallInfo* %ci.03.i.i, i64 0, i32 2
  %ci.0.i.i = load %struct.CallInfo** %58, align 8
  %59 = icmp eq %struct.CallInfo* %ci.0.i.i, null
  br i1 %59, label %stackinuse.exit.i, label %.lr.ph.i.i

stackinuse.exit.i:                                ; preds = %.lr.ph.i.i, %seterrorobj.exit
  %lim.0.lcssa.i.i = phi %struct.lua_TValue* [ %52, %seterrorobj.exit ], [ %.lim.0.i.i, %.lr.ph.i.i ]
  %60 = load %struct.lua_TValue** %12, align 8, !tbaa !13
  %61 = ptrtoint %struct.lua_TValue* %lim.0.lcssa.i.i to i64
  %62 = ptrtoint %struct.lua_TValue* %60 to i64
  %63 = sub i64 %61, %62
  %64 = lshr exact i64 %63, 4
  %65 = trunc i64 %64 to i32
  %66 = add nsw i32 %65, 1
  %67 = sdiv i32 %66, 8
  %68 = add i32 %67, 10
  %69 = add i32 %68, %66
  %70 = icmp sgt i32 %69, 1000000
  %..i = select i1 %70, i32 1000000, i32 %69
  %71 = icmp sgt i32 %65, 999999
  br i1 %71, label %luaD_shrinkstack.exit, label %72

; <label>:72                                      ; preds = %stackinuse.exit.i
  %73 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 10
  %74 = load i32* %73, align 4, !tbaa !144
  %75 = icmp slt i32 %..i, %74
  br i1 %75, label %76, label %luaD_shrinkstack.exit

; <label>:76                                      ; preds = %72
  tail call void @luaD_reallocstack(%struct.lua_State* %L, i32 %..i) #3
  br label %luaD_shrinkstack.exit

luaD_shrinkstack.exit:                            ; preds = %76, %72, %stackinuse.exit.i, %0
  store i64 %8, i64* %7, align 8, !tbaa !58
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaD_protectedparser(%struct.lua_State* %L, %struct.Zio* %z, i8* %name, i8* %mode) #0 {
  %p = alloca %struct.SParser, align 8
  %1 = bitcast %struct.SParser* %p to i8*
  call void @llvm.lifetime.start(i64 96, i8* %1) #3
  %2 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 11
  %3 = load i16* %2, align 2, !tbaa !50
  %4 = add i16 %3, 1
  store i16 %4, i16* %2, align 2, !tbaa !50
  %5 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 0
  store %struct.Zio* %z, %struct.Zio** %5, align 8, !tbaa !149
  %6 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 4
  store i8* %name, i8** %6, align 8, !tbaa !154
  %7 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 3
  store i8* %mode, i8** %7, align 8, !tbaa !155
  %8 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 2, i32 0, i32 2
  store i32 0, i32* %9, align 4, !tbaa !156
  %10 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 2, i32 1, i32 0
  store %struct.Labeldesc.77* null, %struct.Labeldesc.77** %10, align 8, !tbaa !157
  %11 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 2, i32 1, i32 2
  store i32 0, i32* %11, align 4, !tbaa !158
  %12 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 2, i32 2, i32 0
  store %struct.Labeldesc.77* null, %struct.Labeldesc.77** %12, align 8, !tbaa !159
  %13 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 2, i32 2, i32 2
  store i32 0, i32* %13, align 4, !tbaa !160
  %14 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 1, i32 0
  store i8* null, i8** %14, align 8, !tbaa !161
  %15 = getelementptr inbounds %struct.SParser* %p, i64 0, i32 1, i32 2
  %16 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %17 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 16, i32 8, i1 false)
  %18 = load %struct.lua_TValue** %16, align 8, !tbaa !12
  %19 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %20 = load %struct.lua_TValue** %19, align 8, !tbaa !13
  %21 = ptrtoint %struct.lua_TValue* %18 to i64
  %22 = ptrtoint %struct.lua_TValue* %20 to i64
  %23 = sub i64 %21, %22
  %24 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 21
  %25 = load i64* %24, align 8, !tbaa !58
  %26 = call i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* @f_parser, i8* %1, i64 %23, i64 %25)
  %27 = load i8** %14, align 8, !tbaa !161
  %28 = load i64* %15, align 8, !tbaa !162
  %29 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %27, i64 %28, i64 0) #3
  store i8* %29, i8** %14, align 8, !tbaa !161
  store i64 0, i64* %15, align 8, !tbaa !162
  %30 = load %struct.Vardesc** %8, align 8, !tbaa !163
  %31 = bitcast %struct.Vardesc* %30 to i8*
  %32 = load i32* %9, align 4, !tbaa !156
  %33 = sext i32 %32 to i64
  %34 = shl nsw i64 %33, 1
  %35 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %31, i64 %34, i64 0) #3
  %36 = load %struct.Labeldesc.77** %10, align 8, !tbaa !157
  %37 = bitcast %struct.Labeldesc.77* %36 to i8*
  %38 = load i32* %11, align 4, !tbaa !158
  %39 = sext i32 %38 to i64
  %40 = mul i64 %39, 24
  %41 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %37, i64 %40, i64 0) #3
  %42 = load %struct.Labeldesc.77** %12, align 8, !tbaa !159
  %43 = bitcast %struct.Labeldesc.77* %42 to i8*
  %44 = load i32* %13, align 4, !tbaa !160
  %45 = sext i32 %44 to i64
  %46 = mul i64 %45, 24
  %47 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %43, i64 %46, i64 0) #3
  %48 = load i16* %2, align 2, !tbaa !50
  %49 = add i16 %48, -1
  store i16 %49, i16* %2, align 2, !tbaa !50
  call void @llvm.lifetime.end(i64 96, i8* %1) #3
  ret i32 %26
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #3

; Function Attrs: nounwind ssp uwtable
define internal void @resume(%struct.lua_State* %L, i8* %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 12
  %2 = load i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %ud to %struct.lua_TValue*
  %4 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %5 = load %struct.CallInfo** %4, align 8, !tbaa !5
  %6 = icmp ugt i16 %2, 199
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  tail call fastcc void @resume_error(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str126, i64 0, i64 0), %struct.lua_TValue* %3) #14
  unreachable

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 3
  %10 = load i8* %9, align 1, !tbaa !62
  switch i8 %10, label %21 [
    i8 0, label %11
    i8 1, label %22
  ]

; <label>:11                                      ; preds = %8
  %12 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 22
  %13 = icmp eq %struct.CallInfo* %5, %12
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %11
  tail call fastcc void @resume_error(%struct.lua_State* %L, i8* getelementptr inbounds ([38 x i8]* @.str933, i64 0, i64 0), %struct.lua_TValue* %3) #14
  unreachable

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds i8* %ud, i64 -16
  %17 = bitcast i8* %16 to %struct.lua_TValue*
  %18 = tail call i32 @luaD_precall(%struct.lua_State* %L, %struct.lua_TValue* %17, i32 -1)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %52

; <label>:20                                      ; preds = %15
  tail call void bitcast (void (%struct.lua_State.228*)* @luaV_execute to void (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %52

; <label>:21                                      ; preds = %8
  tail call fastcc void @resume_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str1034, i64 0, i64 0), %struct.lua_TValue* %3) #14
  unreachable

; <label>:22                                      ; preds = %8
  store i8 0, i8* %9, align 1, !tbaa !62
  %23 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %24 = load %struct.lua_TValue** %23, align 8, !tbaa !13
  %25 = bitcast %struct.lua_TValue* %24 to i8*
  %26 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 6
  %27 = load i64* %26, align 8, !tbaa !55
  %28 = getelementptr inbounds i8* %25, i64 %27
  %29 = bitcast i8* %28 to %struct.lua_TValue*
  %30 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 0
  store %struct.lua_TValue* %29, %struct.lua_TValue** %30, align 8, !tbaa !24
  %31 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 5
  %32 = load i8* %31, align 1, !tbaa !46
  %33 = and i8 %32, 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

; <label>:35                                      ; preds = %22
  tail call void bitcast (void (%struct.lua_State.228*)* @luaV_execute to void (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %51

; <label>:36                                      ; preds = %22
  %37 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 7, i32 0, i32 1
  %38 = load i32 (%struct.lua_State*)** %37, align 8, !tbaa !51
  %39 = icmp eq i32 (%struct.lua_State*)* %38, null
  br i1 %39, label %49, label %40

; <label>:40                                      ; preds = %36
  %41 = getelementptr inbounds %struct.CallInfo* %5, i64 0, i32 7, i32 0, i32 4
  store i8 1, i8* %41, align 1, !tbaa !49
  %42 = or i8 %32, 8
  store i8 %42, i8* %31, align 1, !tbaa !46
  %43 = tail call i32 %38(%struct.lua_State* %L) #3
  %44 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %45 = load %struct.lua_TValue** %44, align 8, !tbaa !12
  %46 = sext i32 %43 to i64
  %47 = sub i64 0, %46
  %48 = getelementptr inbounds %struct.lua_TValue* %45, i64 %47
  br label %49

; <label>:49                                      ; preds = %40, %36
  %firstArg.0 = phi %struct.lua_TValue* [ %48, %40 ], [ %3, %36 ]
  %50 = tail call i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %firstArg.0)
  br label %51

; <label>:51                                      ; preds = %49, %35
  tail call void @unroll(%struct.lua_State* %L, i8* null)
  br label %52

; <label>:52                                      ; preds = %51, %20, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @unroll(%struct.lua_State* %L, i8* nocapture readnone %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 6
  %2 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 22
  %4 = icmp eq %struct.CallInfo* %2, %3
  br i1 %4, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %5 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %6 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 21
  br label %7

._crit_edge:                                      ; preds = %.backedge, %0
  ret void

; <label>:7                                       ; preds = %.backedge, %.lr.ph
  %8 = phi %struct.CallInfo* [ %2, %.lr.ph ], [ %47, %.backedge ]
  %9 = getelementptr inbounds %struct.CallInfo* %8, i64 0, i32 5
  %10 = load i8* %9, align 1, !tbaa !46
  %11 = and i8 %10, 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %46

; <label>:13                                      ; preds = %7
  %14 = and i8 %10, 16
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %13
  %17 = and i8 %10, -17
  store i8 %17, i8* %9, align 1, !tbaa !46
  %18 = getelementptr inbounds %struct.CallInfo* %8, i64 0, i32 7, i32 0, i32 2
  %19 = load i64* %18, align 8, !tbaa !59
  store i64 %19, i64* %6, align 8, !tbaa !58
  br label %20

; <label>:20                                      ; preds = %16, %13
  %21 = phi i8 [ %10, %13 ], [ %17, %16 ]
  %22 = getelementptr inbounds %struct.CallInfo* %8, i64 0, i32 4
  %23 = load i16* %22, align 2, !tbaa !146
  %24 = icmp eq i16 %23, -1
  br i1 %24, label %25, label %31

; <label>:25                                      ; preds = %20
  %26 = getelementptr inbounds %struct.CallInfo* %8, i64 0, i32 1
  %27 = load %struct.lua_TValue** %26, align 8, !tbaa !14
  %28 = load %struct.lua_TValue** %5, align 8, !tbaa !12
  %29 = icmp ult %struct.lua_TValue* %27, %28
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %25
  store %struct.lua_TValue* %28, %struct.lua_TValue** %26, align 8, !tbaa !14
  br label %31

; <label>:31                                      ; preds = %30, %25, %20
  %32 = and i8 %21, 32
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %finishCcall.exit

; <label>:34                                      ; preds = %31
  %35 = getelementptr inbounds %struct.CallInfo* %8, i64 0, i32 7, i32 0, i32 4
  store i8 1, i8* %35, align 1, !tbaa !49
  br label %finishCcall.exit

finishCcall.exit:                                 ; preds = %34, %31
  %36 = and i8 %21, -57
  %37 = or i8 %36, 8
  store i8 %37, i8* %9, align 1, !tbaa !46
  %38 = getelementptr inbounds %struct.CallInfo* %8, i64 0, i32 7, i32 0, i32 1
  %39 = load i32 (%struct.lua_State*)** %38, align 8, !tbaa !51
  %40 = tail call i32 %39(%struct.lua_State* %L) #3
  %41 = load %struct.lua_TValue** %5, align 8, !tbaa !12
  %42 = sext i32 %40 to i64
  %43 = sub i64 0, %42
  %44 = getelementptr inbounds %struct.lua_TValue* %41, i64 %43
  %45 = tail call i32 @luaD_poscall(%struct.lua_State* %L, %struct.lua_TValue* %44) #3
  br label %.backedge

; <label>:46                                      ; preds = %7
  tail call void bitcast (void (%struct.lua_State.228*)* @luaV_finishOp to void (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  tail call void bitcast (void (%struct.lua_State.228*)* @luaV_execute to void (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %.backedge

.backedge:                                        ; preds = %46, %finishCcall.exit
  %47 = load %struct.CallInfo** %1, align 8, !tbaa !5
  %48 = icmp eq %struct.CallInfo* %47, %3
  br i1 %48, label %._crit_edge, label %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @f_parser(%struct.lua_State* %L, i8* %ud) #0 {
  %1 = bitcast i8* %ud to %struct.Zio**
  %2 = load %struct.Zio** %1, align 8, !tbaa !149
  %3 = getelementptr inbounds %struct.Zio* %2, i64 0, i32 0
  %4 = load i64* %3, align 8, !tbaa !164
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8, !tbaa !164
  %6 = icmp eq i64 %4, 0
  br i1 %6, label %13, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.Zio* %2, i64 0, i32 1
  %9 = load i8** %8, align 8, !tbaa !166
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %8, align 8, !tbaa !166
  %11 = load i8* %9, align 1, !tbaa !86
  %12 = zext i8 %11 to i32
  br label %15

; <label>:13                                      ; preds = %0
  %14 = tail call i32 @luaZ_fill(%struct.Zio* %2) #3
  br label %15

; <label>:15                                      ; preds = %13, %7
  %16 = phi i32 [ %12, %7 ], [ %14, %13 ]
  %17 = icmp eq i32 %16, 27
  %18 = getelementptr inbounds i8* %ud, i64 80
  %19 = bitcast i8* %18 to i8**
  %20 = load i8** %19, align 8, !tbaa !155
  %21 = icmp eq i8* %20, null
  br i1 %17, label %22, label %35

; <label>:22                                      ; preds = %15
  br i1 %21, label %checkmode.exit, label %23

; <label>:23                                      ; preds = %22
  %24 = tail call i8* @strchr(i8* %20, i32 98) #3
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %checkmode.exit

; <label>:26                                      ; preds = %23
  %27 = tail call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([42 x i8]* @.str731, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str529, i64 0, i64 0), i8* %20) #3
  tail call void @luaD_throw(%struct.lua_State* %L, i32 3) #13
  unreachable

checkmode.exit:                                   ; preds = %23, %22
  %28 = load %struct.Zio** %1, align 8, !tbaa !149
  %29 = getelementptr inbounds i8* %ud, i64 8
  %30 = bitcast i8* %29 to %struct.Mbuffer*
  %31 = getelementptr inbounds i8* %ud, i64 88
  %32 = bitcast i8* %31 to i8**
  %33 = load i8** %32, align 8, !tbaa !154
  %34 = tail call %union.Closure* bitcast (%union.Closure.129* (%struct.lua_State.126*, %struct.Zio.375*, %struct.Mbuffer*, i8*)* @luaU_undump to %union.Closure* (%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, i8*)*)(%struct.lua_State* %L, %struct.Zio* %28, %struct.Mbuffer* %30, i8* %33) #3
  br label %50

; <label>:35                                      ; preds = %15
  br i1 %21, label %checkmode.exit1, label %36

; <label>:36                                      ; preds = %35
  %37 = tail call i8* @strchr(i8* %20, i32 116) #3
  %38 = icmp eq i8* %37, null
  br i1 %38, label %39, label %checkmode.exit1

; <label>:39                                      ; preds = %36
  %40 = tail call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([42 x i8]* @.str731, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str630, i64 0, i64 0), i8* %20) #3
  tail call void @luaD_throw(%struct.lua_State* %L, i32 3) #13
  unreachable

checkmode.exit1:                                  ; preds = %36, %35
  %41 = load %struct.Zio** %1, align 8, !tbaa !149
  %42 = getelementptr inbounds i8* %ud, i64 8
  %43 = bitcast i8* %42 to %struct.Mbuffer*
  %44 = getelementptr inbounds i8* %ud, i64 32
  %45 = bitcast i8* %44 to %struct.Dyndata.79*
  %46 = getelementptr inbounds i8* %ud, i64 88
  %47 = bitcast i8* %46 to i8**
  %48 = load i8** %47, align 8, !tbaa !154
  %49 = tail call %union.Closure* bitcast (%union.Closure.129* (%struct.lua_State.126*, %struct.Zio.254*, %struct.Mbuffer*, %struct.Dyndata.259*, i8*, i32)* @luaY_parser to %union.Closure* (%struct.lua_State*, %struct.Zio*, %struct.Mbuffer*, %struct.Dyndata.79*, i8*, i32)*)(%struct.lua_State* %L, %struct.Zio* %41, %struct.Mbuffer* %43, %struct.Dyndata.79* %45, i8* %48, i32 %16) #3
  br label %50

; <label>:50                                      ; preds = %checkmode.exit1, %checkmode.exit
  %cl.0 = phi %union.Closure* [ %34, %checkmode.exit ], [ %49, %checkmode.exit1 ]
  %51 = getelementptr inbounds %union.Closure* %cl.0, i64 0, i32 0, i32 3
  %52 = load i8* %51, align 1, !tbaa !60
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %50
  %54 = getelementptr inbounds %union.Closure* %cl.0, i64 0, i32 0, i32 6
  %55 = bitcast [1 x %struct.lua_TValue]* %54 to [1 x %struct.UpVal*]*
  %56 = getelementptr inbounds %union.Closure* %cl.0, i64 0, i32 0, i32 2
  %57 = bitcast %union.Closure* %cl.0 to %union.GCObject*
  br label %58

; <label>:58                                      ; preds = %71, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %71 ]
  %59 = tail call %struct.UpVal* bitcast (%struct.UpVal.112* (%struct.lua_State.126*)* @luaF_newupval to %struct.UpVal* (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  %60 = getelementptr inbounds [1 x %struct.UpVal*]* %55, i64 0, i64 %indvars.iv
  store %struct.UpVal* %59, %struct.UpVal** %60, align 8, !tbaa !25
  %61 = bitcast %struct.UpVal* %59 to %union.GCObject*
  %62 = getelementptr inbounds %struct.UpVal* %59, i64 0, i32 2
  %63 = load i8* %62, align 1, !tbaa !28
  %64 = and i8 %63, 3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %71, label %66

; <label>:66                                      ; preds = %58
  %67 = load i8* %56, align 1, !tbaa !28
  %68 = and i8 %67, 4
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %71, label %70

; <label>:70                                      ; preds = %66
  tail call void @luaC_barrier_(%struct.lua_State* %L, %union.GCObject* %57, %union.GCObject* %61) #3
  br label %71

; <label>:71                                      ; preds = %70, %66, %58
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %72 = load i8* %51, align 1, !tbaa !60
  %73 = zext i8 %72 to i32
  %74 = trunc i64 %indvars.iv.next to i32
  %75 = icmp slt i32 %74, %73
  br i1 %75, label %58, label %._crit_edge

._crit_edge:                                      ; preds = %71, %50
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @resume_error(%struct.lua_State* %L, i8* %msg, %struct.lua_TValue* %firstArg) #4 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  store %struct.lua_TValue* %firstArg, %struct.lua_TValue** %1, align 8, !tbaa !12
  %2 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %msg) #3
  %3 = bitcast %union.TString* %2 to %union.GCObject*
  %4 = getelementptr inbounds %struct.lua_TValue* %firstArg, i64 0, i32 0, i32 0
  store %union.GCObject* %3, %union.GCObject** %4, align 8, !tbaa !25
  %5 = getelementptr inbounds %union.TString* %2, i64 0, i32 0, i32 1
  %6 = load i8* %5, align 1, !tbaa !38
  %7 = zext i8 %6 to i32
  %8 = or i32 %7, 64
  %9 = getelementptr inbounds %struct.lua_TValue* %firstArg, i64 0, i32 1
  store i32 %8, i32* %9, align 4, !tbaa !15
  %10 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %11 = getelementptr inbounds %struct.lua_TValue* %10, i64 1
  store %struct.lua_TValue* %11, %struct.lua_TValue** %1, align 8, !tbaa !12
  tail call void @luaD_throw(%struct.lua_State* %L, i32 -1) #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaU_dump(%struct.lua_State* %L, %struct.Proto* nocapture readonly %f, i32 (%struct.lua_State*, i8*, i64, i8*)* %w, i8* %data, i32 %strip) #0 {
DumpHeader.exit:
  %h.i = alloca [18 x i8], align 16
  %D = alloca %struct.DumpState, align 8
  %0 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  store %struct.lua_State* %L, %struct.lua_State** %0, align 8, !tbaa !167
  %1 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  store i32 (%struct.lua_State*, i8*, i64, i8*)* %w, i32 (%struct.lua_State*, i8*, i64, i8*)** %1, align 8, !tbaa !169
  %2 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  store i8* %data, i8** %2, align 8, !tbaa !170
  %3 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 3
  store i32 %strip, i32* %3, align 8, !tbaa !171
  %4 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 4
  %5 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 18, i8* %5) #3
  call void @luaU_header(i8* %5) #3
  %6 = call i32 %w(%struct.lua_State* %L, i8* %5, i64 18, i8* %data) #3
  store i32 %6, i32* %4, align 4, !tbaa !172
  call void @llvm.lifetime.end(i64 18, i8* %5) #3
  call fastcc void @DumpFunction(%struct.Proto* %f, %struct.DumpState* %D)
  %7 = load i32* %4, align 4, !tbaa !172
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @DumpFunction(%struct.Proto* nocapture readonly %f, %struct.DumpState* %D) #0 {
  %1 = alloca i32, align 4
  %size.i.i14 = alloca i64, align 8
  %size1.i.i15 = alloca i64, align 8
  %2 = alloca double, align 8
  %x.i1.i16 = alloca i8, align 1
  %x.i.i17 = alloca i8, align 1
  %3 = alloca i32, align 4
  %x.i1.i = alloca i8, align 1
  %x.i.i = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %x.i4 = alloca i8, align 1
  %x.i2 = alloca i8, align 1
  %x.i = alloca i8, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %size.i8.i = alloca i64, align 8
  %size1.i9.i = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %size.i1.i = alloca i64, align 8
  %size1.i2.i = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %size.i.i = alloca i64, align 8
  %size1.i.i = alloca i64, align 8
  %13 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 17
  %14 = load i32* %13, align 4, !tbaa !123
  %15 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %15) #3
  store i32 %14, i32* %7, align 4, !tbaa !1
  %16 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 4
  %17 = load i32* %16, align 4, !tbaa !172
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %DumpInt.exit

; <label>:19                                      ; preds = %0
  %20 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %21 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %20, align 8, !tbaa !169
  %22 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %23 = load %struct.lua_State** %22, align 8, !tbaa !167
  %24 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %25 = load i8** %24, align 8, !tbaa !170
  %26 = call i32 %21(%struct.lua_State* %23, i8* %15, i64 4, i8* %25) #3
  store i32 %26, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit

DumpInt.exit:                                     ; preds = %19, %0
  %27 = phi i32 [ %17, %0 ], [ %26, %19 ]
  call void @llvm.lifetime.end(i64 4, i8* %15) #3
  %28 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 18
  %29 = load i32* %28, align 4, !tbaa !124
  %30 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %30) #3
  store i32 %29, i32* %6, align 4, !tbaa !1
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %32, label %DumpInt.exit1

; <label>:32                                      ; preds = %DumpInt.exit
  %33 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %34 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %33, align 8, !tbaa !169
  %35 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %36 = load %struct.lua_State** %35, align 8, !tbaa !167
  %37 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %38 = load i8** %37, align 8, !tbaa !170
  %39 = call i32 %34(%struct.lua_State* %36, i8* %30, i64 4, i8* %38) #3
  store i32 %39, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit1

DumpInt.exit1:                                    ; preds = %32, %DumpInt.exit
  %40 = phi i32 [ %27, %DumpInt.exit ], [ %39, %32 ]
  call void @llvm.lifetime.end(i64 4, i8* %30) #3
  %41 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 20
  %42 = load i8* %41, align 1, !tbaa !131
  call void @llvm.lifetime.start(i64 1, i8* %x.i) #3
  store i8 %42, i8* %x.i, align 1, !tbaa !86
  %43 = icmp eq i32 %40, 0
  br i1 %43, label %44, label %DumpChar.exit

; <label>:44                                      ; preds = %DumpInt.exit1
  %45 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %46 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %45, align 8, !tbaa !169
  %47 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %48 = load %struct.lua_State** %47, align 8, !tbaa !167
  %49 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %50 = load i8** %49, align 8, !tbaa !170
  %51 = call i32 %46(%struct.lua_State* %48, i8* %x.i, i64 1, i8* %50) #3
  store i32 %51, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit

DumpChar.exit:                                    ; preds = %44, %DumpInt.exit1
  %52 = phi i32 [ %40, %DumpInt.exit1 ], [ %51, %44 ]
  call void @llvm.lifetime.end(i64 1, i8* %x.i) #3
  %53 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 21
  %54 = load i8* %53, align 1, !tbaa !130
  call void @llvm.lifetime.start(i64 1, i8* %x.i2) #3
  store i8 %54, i8* %x.i2, align 1, !tbaa !86
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %56, label %DumpChar.exit3

; <label>:56                                      ; preds = %DumpChar.exit
  %57 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %58 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %57, align 8, !tbaa !169
  %59 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %60 = load %struct.lua_State** %59, align 8, !tbaa !167
  %61 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %62 = load i8** %61, align 8, !tbaa !170
  %63 = call i32 %58(%struct.lua_State* %60, i8* %x.i2, i64 1, i8* %62) #3
  store i32 %63, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit3

DumpChar.exit3:                                   ; preds = %56, %DumpChar.exit
  %64 = phi i32 [ %52, %DumpChar.exit ], [ %63, %56 ]
  call void @llvm.lifetime.end(i64 1, i8* %x.i2) #3
  %65 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 22
  %66 = load i8* %65, align 1, !tbaa !88
  call void @llvm.lifetime.start(i64 1, i8* %x.i4) #3
  store i8 %66, i8* %x.i4, align 1, !tbaa !86
  %67 = icmp eq i32 %64, 0
  br i1 %67, label %68, label %DumpChar.exit5

; <label>:68                                      ; preds = %DumpChar.exit3
  %69 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %70 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %69, align 8, !tbaa !169
  %71 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %72 = load %struct.lua_State** %71, align 8, !tbaa !167
  %73 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %74 = load i8** %73, align 8, !tbaa !170
  %75 = call i32 %70(%struct.lua_State* %72, i8* %x.i4, i64 1, i8* %74) #3
  store i32 %75, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit5

DumpChar.exit5:                                   ; preds = %68, %DumpChar.exit3
  %76 = phi i32 [ %64, %DumpChar.exit3 ], [ %75, %68 ]
  call void @llvm.lifetime.end(i64 1, i8* %x.i4) #3
  %77 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 4
  %78 = load i32** %77, align 8, !tbaa !83
  %79 = bitcast i32* %78 to i8*
  %80 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 13
  %81 = load i32* %80, align 4, !tbaa !106
  %82 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %82) #3
  store i32 %81, i32* %5, align 4, !tbaa !1
  %83 = icmp eq i32 %76, 0
  br i1 %83, label %DumpInt.exit.i, label %DumpVector.exit.thread

DumpInt.exit.i:                                   ; preds = %DumpChar.exit5
  %84 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %85 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %84, align 8, !tbaa !169
  %86 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %87 = load %struct.lua_State** %86, align 8, !tbaa !167
  %88 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %89 = load i8** %88, align 8, !tbaa !170
  %90 = call i32 %85(%struct.lua_State* %87, i8* %82, i64 4, i8* %89) #3
  store i32 %90, i32* %16, align 4, !tbaa !172
  call void @llvm.lifetime.end(i64 4, i8* %82) #3
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %DumpVector.exit, label %DumpVector.exit.thread

DumpVector.exit.thread:                           ; preds = %DumpInt.exit.i, %DumpChar.exit5
  %.ph = phi i32 [ %76, %DumpChar.exit5 ], [ %90, %DumpInt.exit.i ]
  %92 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 12
  %93 = load i32* %92, align 4, !tbaa !110
  %94 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %94) #3
  store i32 %93, i32* %3, align 4, !tbaa !1
  br label %DumpInt.exit.i18.preheader

DumpVector.exit:                                  ; preds = %DumpInt.exit.i
  %95 = sext i32 %81 to i64
  %96 = shl nsw i64 %95, 2
  %97 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %84, align 8, !tbaa !169
  %98 = load %struct.lua_State** %86, align 8, !tbaa !167
  %99 = load i8** %88, align 8, !tbaa !170
  %100 = call i32 %97(%struct.lua_State* %98, i8* %79, i64 %96, i8* %99) #3
  store i32 %100, i32* %16, align 4, !tbaa !172
  %101 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 12
  %102 = load i32* %101, align 4, !tbaa !110
  %103 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %103) #3
  store i32 %102, i32* %3, align 4, !tbaa !1
  %104 = icmp eq i32 %100, 0
  br i1 %104, label %105, label %DumpInt.exit.i18.preheader

; <label>:105                                     ; preds = %DumpVector.exit
  %106 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %107 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %106, align 8, !tbaa !169
  %108 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %109 = load %struct.lua_State** %108, align 8, !tbaa !167
  %110 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %111 = load i8** %110, align 8, !tbaa !170
  %112 = call i32 %107(%struct.lua_State* %109, i8* %103, i64 4, i8* %111) #3
  store i32 %112, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit.i18.preheader

DumpInt.exit.i18.preheader:                       ; preds = %105, %DumpVector.exit, %DumpVector.exit.thread
  %113 = phi i32 [ %102, %105 ], [ %102, %DumpVector.exit ], [ %93, %DumpVector.exit.thread ]
  %114 = phi i32 [ %112, %105 ], [ %100, %DumpVector.exit ], [ %.ph, %DumpVector.exit.thread ]
  %115 = icmp sgt i32 %113, 0
  br i1 %115, label %.lr.ph25, label %DumpInt.exit.i18._crit_edge

.lr.ph25:                                         ; preds = %DumpInt.exit.i18.preheader
  %116 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 3
  %117 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %118 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %119 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %120 = bitcast i64* %size.i.i14 to i8*
  %121 = bitcast i64* %size1.i.i15 to i8*
  %122 = bitcast double* %2 to i8*
  br label %123

; <label>:123                                     ; preds = %DumpChar.exit2.i20, %.lr.ph25
  %124 = phi i32 [ %114, %.lr.ph25 ], [ %188, %DumpChar.exit2.i20 ]
  %indvars.iv32 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next33, %DumpChar.exit2.i20 ]
  %125 = load %struct.lua_TValue** %116, align 8, !tbaa !109
  %126 = getelementptr inbounds %struct.lua_TValue* %125, i64 %indvars.iv32
  %127 = getelementptr inbounds %struct.lua_TValue* %125, i64 %indvars.iv32, i32 1
  %128 = load i32* %127, align 4, !tbaa !15
  call void @llvm.lifetime.start(i64 1, i8* %x.i.i17) #3
  %.tr = trunc i32 %128 to i8
  %129 = and i8 %.tr, 15
  store i8 %129, i8* %x.i.i17, align 1, !tbaa !86
  %130 = icmp eq i32 %124, 0
  br i1 %130, label %131, label %DumpChar.exit.i19

; <label>:131                                     ; preds = %123
  %132 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %117, align 8, !tbaa !169
  %133 = load %struct.lua_State** %118, align 8, !tbaa !167
  %134 = load i8** %119, align 8, !tbaa !170
  %135 = call i32 %132(%struct.lua_State* %133, i8* %x.i.i17, i64 1, i8* %134) #3
  store i32 %135, i32* %16, align 4, !tbaa !172
  %.pre36 = load i32* %127, align 4, !tbaa !15
  br label %DumpChar.exit.i19

DumpChar.exit.i19:                                ; preds = %131, %123
  %136 = phi i32 [ %.pre36, %131 ], [ %128, %123 ]
  %137 = phi i32 [ %135, %131 ], [ %124, %123 ]
  call void @llvm.lifetime.end(i64 1, i8* %x.i.i17) #3
  %138 = and i32 %136, 15
  switch i32 %138, label %DumpChar.exit2.i20 [
    i32 4, label %158
    i32 1, label %139
    i32 3, label %149
  ]

; <label>:139                                     ; preds = %DumpChar.exit.i19
  %140 = bitcast %struct.lua_TValue* %126 to i32*
  %141 = load i32* %140, align 4, !tbaa !1
  call void @llvm.lifetime.start(i64 1, i8* %x.i1.i16) #3
  %142 = trunc i32 %141 to i8
  store i8 %142, i8* %x.i1.i16, align 1, !tbaa !86
  %143 = icmp eq i32 %137, 0
  br i1 %143, label %144, label %DumpChar.exit2.i20

; <label>:144                                     ; preds = %139
  %145 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %117, align 8, !tbaa !169
  %146 = load %struct.lua_State** %118, align 8, !tbaa !167
  %147 = load i8** %119, align 8, !tbaa !170
  %148 = call i32 %145(%struct.lua_State* %146, i8* %x.i1.i16, i64 1, i8* %147) #3
  store i32 %148, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit2.i20

; <label>:149                                     ; preds = %DumpChar.exit.i19
  %150 = bitcast %struct.lua_TValue* %126 to double*
  %151 = load double* %150, align 8, !tbaa !30
  call void @llvm.lifetime.start(i64 8, i8* %122) #3
  store double %151, double* %2, align 8, !tbaa !30
  %152 = icmp eq i32 %137, 0
  br i1 %152, label %153, label %DumpChar.exit2.i20

; <label>:153                                     ; preds = %149
  %154 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %117, align 8, !tbaa !169
  %155 = load %struct.lua_State** %118, align 8, !tbaa !167
  %156 = load i8** %119, align 8, !tbaa !170
  %157 = call i32 %154(%struct.lua_State* %155, i8* %122, i64 8, i8* %156) #3
  store i32 %157, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit2.i20

; <label>:158                                     ; preds = %DumpChar.exit.i19
  %159 = getelementptr inbounds %struct.lua_TValue* %126, i64 0, i32 0, i32 0
  %160 = load %union.GCObject** %159, align 8, !tbaa !25
  call void @llvm.lifetime.start(i64 8, i8* %120) #3
  call void @llvm.lifetime.start(i64 8, i8* %121) #3
  %161 = icmp eq %union.GCObject* %160, null
  br i1 %161, label %162, label %169

; <label>:162                                     ; preds = %158
  store i64 0, i64* %size.i.i14, align 8, !tbaa !32
  %163 = icmp eq i32 %137, 0
  br i1 %163, label %164, label %DumpChar.exit2.i20

; <label>:164                                     ; preds = %162
  %165 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %117, align 8, !tbaa !169
  %166 = load %struct.lua_State** %118, align 8, !tbaa !167
  %167 = load i8** %119, align 8, !tbaa !170
  %168 = call i32 %165(%struct.lua_State* %166, i8* %120, i64 8, i8* %167) #3
  store i32 %168, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit2.i20

; <label>:169                                     ; preds = %158
  %170 = getelementptr inbounds %union.GCObject* %160, i64 0, i32 0, i32 4
  %171 = bitcast %struct.lua_TValue** %170 to i64*
  %172 = load i64* %171, align 8, !tbaa !34
  %173 = add i64 %172, 1
  store i64 %173, i64* %size1.i.i15, align 8, !tbaa !32
  %174 = icmp eq i32 %137, 0
  br i1 %174, label %DumpBlock.exit2.i.i21, label %DumpChar.exit2.i20

DumpBlock.exit2.i.i21:                            ; preds = %169
  %175 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %117, align 8, !tbaa !169
  %176 = load %struct.lua_State** %118, align 8, !tbaa !167
  %177 = load i8** %119, align 8, !tbaa !170
  %178 = call i32 %175(%struct.lua_State* %176, i8* %121, i64 8, i8* %177) #3
  store i32 %178, i32* %16, align 4, !tbaa !172
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %DumpChar.exit2.i20

; <label>:180                                     ; preds = %DumpBlock.exit2.i.i21
  %181 = getelementptr inbounds %union.GCObject* %160, i64 0, i32 0, i32 5
  %182 = load i64* %size1.i.i15, align 8, !tbaa !32
  %183 = bitcast %struct.global_State** %181 to i8*
  %184 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %117, align 8, !tbaa !169
  %185 = load %struct.lua_State** %118, align 8, !tbaa !167
  %186 = load i8** %119, align 8, !tbaa !170
  %187 = call i32 %184(%struct.lua_State* %185, i8* %183, i64 %182, i8* %186) #3
  store i32 %187, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit2.i20

DumpChar.exit2.i20:                               ; preds = %180, %DumpBlock.exit2.i.i21, %169, %164, %162, %153, %149, %144, %139, %DumpChar.exit.i19
  %188 = phi i32 [ %137, %162 ], [ %168, %164 ], [ %137, %169 ], [ %178, %DumpBlock.exit2.i.i21 ], [ %187, %180 ], [ %137, %149 ], [ %157, %153 ], [ %137, %139 ], [ %148, %144 ], [ %137, %DumpChar.exit.i19 ]
  %indvars.iv.next33 = add nuw nsw i64 %indvars.iv32, 1
  %lftr.wideiv34 = trunc i64 %indvars.iv.next33 to i32
  %exitcond35 = icmp eq i32 %lftr.wideiv34, %113
  br i1 %exitcond35, label %DumpInt.exit.i18._crit_edge, label %123

DumpInt.exit.i18._crit_edge:                      ; preds = %DumpChar.exit2.i20, %DumpInt.exit.i18.preheader
  %189 = phi i32 [ %114, %DumpInt.exit.i18.preheader ], [ %188, %DumpChar.exit2.i20 ]
  %190 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 15
  %191 = load i32* %190, align 4, !tbaa !173
  %192 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %192) #3
  store i32 %191, i32* %1, align 4, !tbaa !1
  %193 = icmp eq i32 %189, 0
  br i1 %193, label %194, label %DumpInt.exit3.i.preheader

; <label>:194                                     ; preds = %DumpInt.exit.i18._crit_edge
  %195 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %196 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %195, align 8, !tbaa !169
  %197 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %198 = load %struct.lua_State** %197, align 8, !tbaa !167
  %199 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %200 = load i8** %199, align 8, !tbaa !170
  %201 = call i32 %196(%struct.lua_State* %198, i8* %192, i64 4, i8* %200) #3
  store i32 %201, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit3.i.preheader

DumpInt.exit3.i.preheader:                        ; preds = %194, %DumpInt.exit.i18._crit_edge
  %202 = phi i32 [ %201, %194 ], [ %189, %DumpInt.exit.i18._crit_edge ]
  %203 = icmp sgt i32 %191, 0
  br i1 %203, label %.lr.ph, label %DumpConstants.exit

.lr.ph:                                           ; preds = %DumpInt.exit3.i.preheader
  %204 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 5
  br label %DumpInt.exit3.i

DumpInt.exit3.i:                                  ; preds = %DumpInt.exit3.i, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %DumpInt.exit3.i ]
  %205 = load %struct.Proto*** %204, align 8, !tbaa !174
  %206 = getelementptr inbounds %struct.Proto** %205, i64 %indvars.iv
  %207 = load %struct.Proto** %206, align 8, !tbaa !25
  call fastcc void @DumpFunction(%struct.Proto* %207, %struct.DumpState* %D) #3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv30 = trunc i64 %indvars.iv.next to i32
  %exitcond31 = icmp eq i32 %lftr.wideiv30, %191
  br i1 %exitcond31, label %DumpInt.exit3.i.DumpConstants.exit_crit_edge, label %DumpInt.exit3.i

DumpInt.exit3.i.DumpConstants.exit_crit_edge:     ; preds = %DumpInt.exit3.i
  %.pre = load i32* %16, align 4, !tbaa !172
  br label %DumpConstants.exit

DumpConstants.exit:                               ; preds = %DumpInt.exit3.i.DumpConstants.exit_crit_edge, %DumpInt.exit3.i.preheader
  %208 = phi i32 [ %.pre, %DumpInt.exit3.i.DumpConstants.exit_crit_edge ], [ %202, %DumpInt.exit3.i.preheader ]
  %209 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 11
  %210 = load i32* %209, align 4, !tbaa !73
  %211 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %211) #3
  store i32 %210, i32* %4, align 4, !tbaa !1
  %212 = icmp eq i32 %208, 0
  br i1 %212, label %213, label %DumpInt.exit.preheader.i6

; <label>:213                                     ; preds = %DumpConstants.exit
  %214 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %215 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %214, align 8, !tbaa !169
  %216 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %217 = load %struct.lua_State** %216, align 8, !tbaa !167
  %218 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %219 = load i8** %218, align 8, !tbaa !170
  %220 = call i32 %215(%struct.lua_State* %217, i8* %211, i64 4, i8* %219) #3
  store i32 %220, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit.preheader.i6

DumpInt.exit.preheader.i6:                        ; preds = %213, %DumpConstants.exit
  %221 = phi i32 [ %208, %DumpConstants.exit ], [ %220, %213 ]
  %222 = icmp sgt i32 %210, 0
  br i1 %222, label %.lr.ph.i7, label %DumpUpvalues.exit

.lr.ph.i7:                                        ; preds = %DumpInt.exit.preheader.i6
  %223 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 8
  %224 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %225 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %226 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  br label %227

; <label>:227                                     ; preds = %DumpChar.exit2.i, %.lr.ph.i7
  %228 = phi i32 [ %221, %.lr.ph.i7 ], [ %248, %DumpChar.exit2.i ]
  %indvars.iv.i8 = phi i64 [ 0, %.lr.ph.i7 ], [ %indvars.iv.next.i10, %DumpChar.exit2.i ]
  %229 = load %struct.Upvaldesc** %223, align 8, !tbaa !76
  %230 = getelementptr inbounds %struct.Upvaldesc* %229, i64 %indvars.iv.i8, i32 1
  %231 = load i8* %230, align 1, !tbaa !175
  call void @llvm.lifetime.start(i64 1, i8* %x.i.i) #3
  store i8 %231, i8* %x.i.i, align 1, !tbaa !86
  %232 = icmp eq i32 %228, 0
  br i1 %232, label %233, label %DumpChar.exit.i

; <label>:233                                     ; preds = %227
  %234 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %224, align 8, !tbaa !169
  %235 = load %struct.lua_State** %225, align 8, !tbaa !167
  %236 = load i8** %226, align 8, !tbaa !170
  %237 = call i32 %234(%struct.lua_State* %235, i8* %x.i.i, i64 1, i8* %236) #3
  store i32 %237, i32* %16, align 4, !tbaa !172
  %.pre.i9 = load %struct.Upvaldesc** %223, align 8, !tbaa !76
  br label %DumpChar.exit.i

DumpChar.exit.i:                                  ; preds = %233, %227
  %238 = phi i32 [ %228, %227 ], [ %237, %233 ]
  %239 = phi %struct.Upvaldesc* [ %229, %227 ], [ %.pre.i9, %233 ]
  call void @llvm.lifetime.end(i64 1, i8* %x.i.i) #3
  %240 = getelementptr inbounds %struct.Upvaldesc* %239, i64 %indvars.iv.i8, i32 2
  %241 = load i8* %240, align 1, !tbaa !176
  call void @llvm.lifetime.start(i64 1, i8* %x.i1.i) #3
  store i8 %241, i8* %x.i1.i, align 1, !tbaa !86
  %242 = icmp eq i32 %238, 0
  br i1 %242, label %243, label %DumpChar.exit2.i

; <label>:243                                     ; preds = %DumpChar.exit.i
  %244 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %224, align 8, !tbaa !169
  %245 = load %struct.lua_State** %225, align 8, !tbaa !167
  %246 = load i8** %226, align 8, !tbaa !170
  %247 = call i32 %244(%struct.lua_State* %245, i8* %x.i1.i, i64 1, i8* %246) #3
  store i32 %247, i32* %16, align 4, !tbaa !172
  br label %DumpChar.exit2.i

DumpChar.exit2.i:                                 ; preds = %243, %DumpChar.exit.i
  %248 = phi i32 [ %238, %DumpChar.exit.i ], [ %247, %243 ]
  call void @llvm.lifetime.end(i64 1, i8* %x.i1.i) #3
  %indvars.iv.next.i10 = add nuw nsw i64 %indvars.iv.i8, 1
  %lftr.wideiv28 = trunc i64 %indvars.iv.next.i10 to i32
  %exitcond29 = icmp eq i32 %lftr.wideiv28, %210
  br i1 %exitcond29, label %DumpUpvalues.exit, label %227

DumpUpvalues.exit:                                ; preds = %DumpChar.exit2.i, %DumpInt.exit.preheader.i6
  %249 = phi i32 [ %221, %DumpInt.exit.preheader.i6 ], [ %248, %DumpChar.exit2.i ]
  %250 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 3
  %251 = load i32* %250, align 4, !tbaa !171
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %255, label %.thread.i

.thread.i:                                        ; preds = %DumpUpvalues.exit
  %253 = bitcast i64* %size.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %253) #3
  %254 = bitcast i64* %size1.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %254) #3
  br label %261

; <label>:255                                     ; preds = %DumpUpvalues.exit
  %256 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 10
  %257 = load %union.TString** %256, align 8, !tbaa !122
  %258 = bitcast i64* %size.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %258) #3
  %259 = bitcast i64* %size1.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %259) #3
  %260 = icmp eq %union.TString* %257, null
  br i1 %260, label %261, label %273

; <label>:261                                     ; preds = %255, %.thread.i
  %262 = phi i8* [ %254, %.thread.i ], [ %259, %255 ]
  %263 = phi i8* [ %253, %.thread.i ], [ %258, %255 ]
  store i64 0, i64* %size.i.i, align 8, !tbaa !32
  %264 = icmp eq i32 %249, 0
  br i1 %264, label %265, label %DumpString.exit.i

; <label>:265                                     ; preds = %261
  %266 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %267 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %266, align 8, !tbaa !169
  %268 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %269 = load %struct.lua_State** %268, align 8, !tbaa !167
  %270 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %271 = load i8** %270, align 8, !tbaa !170
  %272 = call i32 %267(%struct.lua_State* %269, i8* %263, i64 8, i8* %271) #3
  store i32 %272, i32* %16, align 4, !tbaa !172
  br label %DumpString.exit.i

; <label>:273                                     ; preds = %255
  %274 = getelementptr inbounds %union.TString* %257, i64 0, i32 0, i32 5
  %275 = load i64* %274, align 8, !tbaa !34
  %276 = add i64 %275, 1
  store i64 %276, i64* %size1.i.i, align 8, !tbaa !32
  %277 = icmp eq i32 %249, 0
  br i1 %277, label %DumpBlock.exit2.i.i, label %DumpString.exit.i

DumpBlock.exit2.i.i:                              ; preds = %273
  %278 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %279 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %278, align 8, !tbaa !169
  %280 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %281 = load %struct.lua_State** %280, align 8, !tbaa !167
  %282 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %283 = load i8** %282, align 8, !tbaa !170
  %284 = call i32 %279(%struct.lua_State* %281, i8* %259, i64 8, i8* %283) #3
  store i32 %284, i32* %16, align 4, !tbaa !172
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %DumpString.exit.i

; <label>:286                                     ; preds = %DumpBlock.exit2.i.i
  %287 = getelementptr inbounds %union.TString* %257, i64 1
  %288 = load i64* %size1.i.i, align 8, !tbaa !32
  %289 = bitcast %union.TString* %287 to i8*
  %290 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %278, align 8, !tbaa !169
  %291 = load %struct.lua_State** %280, align 8, !tbaa !167
  %292 = load i8** %282, align 8, !tbaa !170
  %293 = call i32 %290(%struct.lua_State* %291, i8* %289, i64 %288, i8* %292) #3
  store i32 %293, i32* %16, align 4, !tbaa !172
  br label %DumpString.exit.i

DumpString.exit.i:                                ; preds = %286, %DumpBlock.exit2.i.i, %273, %265, %261
  %294 = phi i8* [ %262, %261 ], [ %262, %265 ], [ %259, %273 ], [ %259, %DumpBlock.exit2.i.i ], [ %259, %286 ]
  %295 = phi i8* [ %263, %261 ], [ %263, %265 ], [ %258, %273 ], [ %258, %DumpBlock.exit2.i.i ], [ %258, %286 ]
  call void @llvm.lifetime.end(i64 8, i8* %295) #3
  call void @llvm.lifetime.end(i64 8, i8* %294) #3
  %296 = load i32* %250, align 4, !tbaa !171
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %301

; <label>:298                                     ; preds = %DumpString.exit.i
  %299 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 14
  %300 = load i32* %299, align 4, !tbaa !107
  br label %301

; <label>:301                                     ; preds = %298, %DumpString.exit.i
  %302 = phi i32 [ %300, %298 ], [ 0, %DumpString.exit.i ]
  %303 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 6
  %304 = load i32** %303, align 8, !tbaa !105
  %305 = bitcast i32* %304 to i8*
  %306 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %306) #3
  store i32 %302, i32* %12, align 4, !tbaa !1
  %307 = load i32* %16, align 4, !tbaa !172
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %DumpInt.exit.i.i, label %DumpVector.exit.i

DumpInt.exit.i.i:                                 ; preds = %301
  %309 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %310 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %309, align 8, !tbaa !169
  %311 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %312 = load %struct.lua_State** %311, align 8, !tbaa !167
  %313 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %314 = load i8** %313, align 8, !tbaa !170
  %315 = call i32 %310(%struct.lua_State* %312, i8* %306, i64 4, i8* %314) #3
  store i32 %315, i32* %16, align 4, !tbaa !172
  call void @llvm.lifetime.end(i64 4, i8* %306) #3
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %DumpVector.exit.i

; <label>:317                                     ; preds = %DumpInt.exit.i.i
  %318 = sext i32 %302 to i64
  %319 = shl nsw i64 %318, 2
  %320 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %309, align 8, !tbaa !169
  %321 = load %struct.lua_State** %311, align 8, !tbaa !167
  %322 = load i8** %313, align 8, !tbaa !170
  %323 = call i32 %320(%struct.lua_State* %321, i8* %305, i64 %319, i8* %322) #3
  store i32 %323, i32* %16, align 4, !tbaa !172
  br label %DumpVector.exit.i

DumpVector.exit.i:                                ; preds = %317, %DumpInt.exit.i.i, %301
  %324 = phi i32 [ %307, %301 ], [ %315, %DumpInt.exit.i.i ], [ %323, %317 ]
  %325 = load i32* %250, align 4, !tbaa !171
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %330

; <label>:327                                     ; preds = %DumpVector.exit.i
  %328 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 16
  %329 = load i32* %328, align 4, !tbaa !177
  br label %330

; <label>:330                                     ; preds = %327, %DumpVector.exit.i
  %331 = phi i32 [ %329, %327 ], [ 0, %DumpVector.exit.i ]
  %332 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %332) #3
  store i32 %331, i32* %11, align 4, !tbaa !1
  %333 = icmp eq i32 %324, 0
  br i1 %333, label %334, label %DumpInt.exit.preheader.i

; <label>:334                                     ; preds = %330
  %335 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %336 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %335, align 8, !tbaa !169
  %337 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %338 = load %struct.lua_State** %337, align 8, !tbaa !167
  %339 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %340 = load i8** %339, align 8, !tbaa !170
  %341 = call i32 %336(%struct.lua_State* %338, i8* %332, i64 4, i8* %340) #3
  store i32 %341, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit.preheader.i

DumpInt.exit.preheader.i:                         ; preds = %334, %330
  %342 = phi i32 [ %324, %330 ], [ %341, %334 ]
  %343 = icmp sgt i32 %331, 0
  br i1 %343, label %.lr.ph14.i, label %DumpInt.exit._crit_edge.i

.lr.ph14.i:                                       ; preds = %DumpInt.exit.preheader.i
  %344 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 7
  %345 = bitcast i64* %size.i1.i to i8*
  %346 = bitcast i64* %size1.i2.i to i8*
  %347 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %348 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %349 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %350 = bitcast i32* %10 to i8*
  %351 = bitcast i32* %9 to i8*
  br label %352

; <label>:352                                     ; preds = %DumpInt.exit6.i, %.lr.ph14.i
  %353 = phi i32 [ %342, %.lr.ph14.i ], [ %403, %DumpInt.exit6.i ]
  %indvars.iv15.i = phi i64 [ 0, %.lr.ph14.i ], [ %indvars.iv.next16.i, %DumpInt.exit6.i ]
  %354 = load %struct.LocVar** %344, align 8, !tbaa !178
  %355 = getelementptr inbounds %struct.LocVar* %354, i64 %indvars.iv15.i, i32 0
  %356 = load %union.TString** %355, align 8, !tbaa !179
  call void @llvm.lifetime.start(i64 8, i8* %345) #3
  call void @llvm.lifetime.start(i64 8, i8* %346) #3
  %357 = icmp eq %union.TString* %356, null
  br i1 %357, label %358, label %365

; <label>:358                                     ; preds = %352
  store i64 0, i64* %size.i1.i, align 8, !tbaa !32
  %359 = icmp eq i32 %353, 0
  br i1 %359, label %360, label %DumpString.exit4.i

; <label>:360                                     ; preds = %358
  %361 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %347, align 8, !tbaa !169
  %362 = load %struct.lua_State** %348, align 8, !tbaa !167
  %363 = load i8** %349, align 8, !tbaa !170
  %364 = call i32 %361(%struct.lua_State* %362, i8* %345, i64 8, i8* %363) #3
  store i32 %364, i32* %16, align 4, !tbaa !172
  br label %DumpString.exit4.i

; <label>:365                                     ; preds = %352
  %366 = getelementptr inbounds %union.TString* %356, i64 0, i32 0, i32 5
  %367 = load i64* %366, align 8, !tbaa !34
  %368 = add i64 %367, 1
  store i64 %368, i64* %size1.i2.i, align 8, !tbaa !32
  %369 = icmp eq i32 %353, 0
  br i1 %369, label %DumpBlock.exit2.i3.i, label %DumpString.exit4.i

DumpBlock.exit2.i3.i:                             ; preds = %365
  %370 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %347, align 8, !tbaa !169
  %371 = load %struct.lua_State** %348, align 8, !tbaa !167
  %372 = load i8** %349, align 8, !tbaa !170
  %373 = call i32 %370(%struct.lua_State* %371, i8* %346, i64 8, i8* %372) #3
  store i32 %373, i32* %16, align 4, !tbaa !172
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %DumpString.exit4.i

; <label>:375                                     ; preds = %DumpBlock.exit2.i3.i
  %376 = getelementptr inbounds %union.TString* %356, i64 1
  %377 = load i64* %size1.i2.i, align 8, !tbaa !32
  %378 = bitcast %union.TString* %376 to i8*
  %379 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %347, align 8, !tbaa !169
  %380 = load %struct.lua_State** %348, align 8, !tbaa !167
  %381 = load i8** %349, align 8, !tbaa !170
  %382 = call i32 %379(%struct.lua_State* %380, i8* %378, i64 %377, i8* %381) #3
  store i32 %382, i32* %16, align 4, !tbaa !172
  br label %DumpString.exit4.i

DumpString.exit4.i:                               ; preds = %375, %DumpBlock.exit2.i3.i, %365, %360, %358
  %383 = phi i32 [ %353, %358 ], [ %364, %360 ], [ %353, %365 ], [ %373, %DumpBlock.exit2.i3.i ], [ %382, %375 ]
  call void @llvm.lifetime.end(i64 8, i8* %345) #3
  call void @llvm.lifetime.end(i64 8, i8* %346) #3
  %384 = load %struct.LocVar** %344, align 8, !tbaa !178
  %385 = getelementptr inbounds %struct.LocVar* %384, i64 %indvars.iv15.i, i32 1
  %386 = load i32* %385, align 4, !tbaa !181
  call void @llvm.lifetime.start(i64 4, i8* %350) #3
  store i32 %386, i32* %10, align 4, !tbaa !1
  %387 = icmp eq i32 %383, 0
  br i1 %387, label %388, label %DumpInt.exit5.i

; <label>:388                                     ; preds = %DumpString.exit4.i
  %389 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %347, align 8, !tbaa !169
  %390 = load %struct.lua_State** %348, align 8, !tbaa !167
  %391 = load i8** %349, align 8, !tbaa !170
  %392 = call i32 %389(%struct.lua_State* %390, i8* %350, i64 4, i8* %391) #3
  store i32 %392, i32* %16, align 4, !tbaa !172
  %.pre.i = load %struct.LocVar** %344, align 8, !tbaa !178
  br label %DumpInt.exit5.i

DumpInt.exit5.i:                                  ; preds = %388, %DumpString.exit4.i
  %393 = phi i32 [ %383, %DumpString.exit4.i ], [ %392, %388 ]
  %394 = phi %struct.LocVar* [ %384, %DumpString.exit4.i ], [ %.pre.i, %388 ]
  call void @llvm.lifetime.end(i64 4, i8* %350) #3
  %395 = getelementptr inbounds %struct.LocVar* %394, i64 %indvars.iv15.i, i32 2
  %396 = load i32* %395, align 4, !tbaa !182
  call void @llvm.lifetime.start(i64 4, i8* %351) #3
  store i32 %396, i32* %9, align 4, !tbaa !1
  %397 = icmp eq i32 %393, 0
  br i1 %397, label %398, label %DumpInt.exit6.i

; <label>:398                                     ; preds = %DumpInt.exit5.i
  %399 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %347, align 8, !tbaa !169
  %400 = load %struct.lua_State** %348, align 8, !tbaa !167
  %401 = load i8** %349, align 8, !tbaa !170
  %402 = call i32 %399(%struct.lua_State* %400, i8* %351, i64 4, i8* %401) #3
  store i32 %402, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit6.i

DumpInt.exit6.i:                                  ; preds = %398, %DumpInt.exit5.i
  %403 = phi i32 [ %393, %DumpInt.exit5.i ], [ %402, %398 ]
  call void @llvm.lifetime.end(i64 4, i8* %351) #3
  %indvars.iv.next16.i = add nuw nsw i64 %indvars.iv15.i, 1
  %lftr.wideiv26 = trunc i64 %indvars.iv.next16.i to i32
  %exitcond27 = icmp eq i32 %lftr.wideiv26, %331
  br i1 %exitcond27, label %DumpInt.exit._crit_edge.i, label %352

DumpInt.exit._crit_edge.i:                        ; preds = %DumpInt.exit6.i, %DumpInt.exit.preheader.i
  %404 = phi i32 [ %342, %DumpInt.exit.preheader.i ], [ %403, %DumpInt.exit6.i ]
  %405 = load i32* %250, align 4, !tbaa !171
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %409

; <label>:407                                     ; preds = %DumpInt.exit._crit_edge.i
  %408 = load i32* %209, align 4, !tbaa !73
  br label %409

; <label>:409                                     ; preds = %407, %DumpInt.exit._crit_edge.i
  %410 = phi i32 [ %408, %407 ], [ 0, %DumpInt.exit._crit_edge.i ]
  %411 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %411) #3
  store i32 %410, i32* %8, align 4, !tbaa !1
  %412 = icmp eq i32 %404, 0
  br i1 %412, label %413, label %DumpInt.exit7.preheader.i

; <label>:413                                     ; preds = %409
  %414 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %415 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %414, align 8, !tbaa !169
  %416 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %417 = load %struct.lua_State** %416, align 8, !tbaa !167
  %418 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  %419 = load i8** %418, align 8, !tbaa !170
  %420 = call i32 %415(%struct.lua_State* %417, i8* %411, i64 4, i8* %419) #3
  store i32 %420, i32* %16, align 4, !tbaa !172
  br label %DumpInt.exit7.preheader.i

DumpInt.exit7.preheader.i:                        ; preds = %413, %409
  %421 = phi i32 [ %404, %409 ], [ %420, %413 ]
  %422 = icmp sgt i32 %410, 0
  br i1 %422, label %.lr.ph.i, label %DumpDebug.exit

.lr.ph.i:                                         ; preds = %DumpInt.exit7.preheader.i
  %423 = getelementptr inbounds %struct.Proto* %f, i64 0, i32 8
  %424 = bitcast i64* %size.i8.i to i8*
  %425 = bitcast i64* %size1.i9.i to i8*
  %426 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 1
  %427 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 0
  %428 = getelementptr inbounds %struct.DumpState* %D, i64 0, i32 2
  br label %429

; <label>:429                                     ; preds = %DumpString.exit11.i, %.lr.ph.i
  %430 = phi i32 [ %421, %.lr.ph.i ], [ %460, %DumpString.exit11.i ]
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %DumpString.exit11.i ]
  %431 = load %struct.Upvaldesc** %423, align 8, !tbaa !76
  %432 = getelementptr inbounds %struct.Upvaldesc* %431, i64 %indvars.iv.i, i32 0
  %433 = load %union.TString** %432, align 8, !tbaa !77
  call void @llvm.lifetime.start(i64 8, i8* %424) #3
  call void @llvm.lifetime.start(i64 8, i8* %425) #3
  %434 = icmp eq %union.TString* %433, null
  br i1 %434, label %435, label %442

; <label>:435                                     ; preds = %429
  store i64 0, i64* %size.i8.i, align 8, !tbaa !32
  %436 = icmp eq i32 %430, 0
  br i1 %436, label %437, label %DumpString.exit11.i

; <label>:437                                     ; preds = %435
  %438 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %426, align 8, !tbaa !169
  %439 = load %struct.lua_State** %427, align 8, !tbaa !167
  %440 = load i8** %428, align 8, !tbaa !170
  %441 = call i32 %438(%struct.lua_State* %439, i8* %424, i64 8, i8* %440) #3
  store i32 %441, i32* %16, align 4, !tbaa !172
  br label %DumpString.exit11.i

; <label>:442                                     ; preds = %429
  %443 = getelementptr inbounds %union.TString* %433, i64 0, i32 0, i32 5
  %444 = load i64* %443, align 8, !tbaa !34
  %445 = add i64 %444, 1
  store i64 %445, i64* %size1.i9.i, align 8, !tbaa !32
  %446 = icmp eq i32 %430, 0
  br i1 %446, label %DumpBlock.exit2.i10.i, label %DumpString.exit11.i

DumpBlock.exit2.i10.i:                            ; preds = %442
  %447 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %426, align 8, !tbaa !169
  %448 = load %struct.lua_State** %427, align 8, !tbaa !167
  %449 = load i8** %428, align 8, !tbaa !170
  %450 = call i32 %447(%struct.lua_State* %448, i8* %425, i64 8, i8* %449) #3
  store i32 %450, i32* %16, align 4, !tbaa !172
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %DumpString.exit11.i

; <label>:452                                     ; preds = %DumpBlock.exit2.i10.i
  %453 = getelementptr inbounds %union.TString* %433, i64 1
  %454 = load i64* %size1.i9.i, align 8, !tbaa !32
  %455 = bitcast %union.TString* %453 to i8*
  %456 = load i32 (%struct.lua_State*, i8*, i64, i8*)** %426, align 8, !tbaa !169
  %457 = load %struct.lua_State** %427, align 8, !tbaa !167
  %458 = load i8** %428, align 8, !tbaa !170
  %459 = call i32 %456(%struct.lua_State* %457, i8* %455, i64 %454, i8* %458) #3
  store i32 %459, i32* %16, align 4, !tbaa !172
  br label %DumpString.exit11.i

DumpString.exit11.i:                              ; preds = %452, %DumpBlock.exit2.i10.i, %442, %437, %435
  %460 = phi i32 [ %430, %435 ], [ %441, %437 ], [ %430, %442 ], [ %450, %DumpBlock.exit2.i10.i ], [ %459, %452 ]
  call void @llvm.lifetime.end(i64 8, i8* %424) #3
  call void @llvm.lifetime.end(i64 8, i8* %425) #3
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %410
  br i1 %exitcond, label %DumpDebug.exit, label %429

DumpDebug.exit:                                   ; preds = %DumpString.exit11.i, %DumpInt.exit7.preheader.i
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %union.Closure.129* @luaF_newCclosure(%struct.lua_State.126* %L, i32 %n) #0 {
  %1 = shl i32 %n, 4
  %2 = add i32 %1, 32
  %3 = sext i32 %2 to i64
  %4 = tail call %union.GCObject.127* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.127* (%struct.lua_State.126*, i32, i64, %union.GCObject.127**, i32)*)(%struct.lua_State.126* %L, i32 38, i64 %3, %union.GCObject.127** null, i32 0) #3
  %5 = bitcast %union.GCObject.127* %4 to %union.Closure.129*
  %6 = trunc i32 %n to i8
  %7 = getelementptr inbounds %union.GCObject.127* %4, i64 0, i32 0, i32 3
  store i8 %6, i8* %7, align 1, !tbaa !26
  ret %union.Closure.129* %5
}

; Function Attrs: nounwind ssp uwtable
define %union.Closure.129* @luaF_newLclosure(%struct.lua_State.126* %L, i32 %n) #0 {
  %1 = shl i32 %n, 3
  %2 = add i32 %1, 32
  %3 = sext i32 %2 to i64
  %4 = tail call %union.GCObject.127* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.127* (%struct.lua_State.126*, i32, i64, %union.GCObject.127**, i32)*)(%struct.lua_State.126* %L, i32 6, i64 %3, %union.GCObject.127** null, i32 0) #3
  %5 = bitcast %union.GCObject.127* %4 to %union.Closure.129*
  %6 = getelementptr inbounds %union.GCObject.127* %4, i64 0, i32 0, i32 5
  store %struct.global_State.120* null, %struct.global_State.120** %6, align 8, !tbaa !183
  %7 = trunc i32 %n to i8
  %8 = getelementptr inbounds %union.GCObject.127* %4, i64 0, i32 0, i32 3
  store i8 %7, i8* %8, align 1, !tbaa !60
  %9 = icmp eq i32 %n, 0
  br i1 %9, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %10 = getelementptr inbounds %union.GCObject.127* %4, i64 0, i32 0, i32 6
  %11 = bitcast %struct.CallInfo.123** %10 to [1 x %struct.UpVal.112*]*
  %12 = sext i32 %n to i64
  %13 = add i32 %n, -1
  %14 = zext i32 %13 to i64
  %15 = add i64 %14, 1
  %end.idx = add i64 %14, 1
  %n.vec = and i64 %15, 8589934588
  %cmp.zero = icmp eq i64 %n.vec, 0
  %rev.ind.end = sub i64 %12, %n.vec
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %.lr.ph
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %.lr.ph ]
  %reverse.idx = sub i64 %12, %index
  %.sum = add i64 %reverse.idx, -2
  %16 = getelementptr [1 x %struct.UpVal.112*]* %11, i64 0, i64 %.sum
  %17 = bitcast %struct.UpVal.112** %16 to <2 x %struct.UpVal.112*>*
  store <2 x %struct.UpVal.112*> zeroinitializer, <2 x %struct.UpVal.112*>* %17, align 8
  %.sum3 = add i64 %reverse.idx, -4
  %18 = getelementptr [1 x %struct.UpVal.112*]* %11, i64 0, i64 %.sum3
  %19 = bitcast %struct.UpVal.112** %18 to <2 x %struct.UpVal.112*>*
  store <2 x %struct.UpVal.112*> zeroinitializer, <2 x %struct.UpVal.112*>* %19, align 8
  %index.next = add i64 %index, 4
  %20 = icmp eq i64 %index.next, %n.vec
  br i1 %20, label %middle.block, label %vector.body, !llvm.loop !184

middle.block:                                     ; preds = %vector.body, %.lr.ph
  %resume.val = phi i64 [ %12, %.lr.ph ], [ %rev.ind.end, %vector.body ]
  %new.indc.resume.val = phi i64 [ 0, %.lr.ph ], [ %n.vec, %vector.body ]
  %cmp.n = icmp eq i64 %end.idx, %new.indc.resume.val
  br i1 %cmp.n, label %._crit_edge, label %scalar.ph

scalar.ph:                                        ; preds = %scalar.ph, %middle.block
  %indvars.iv = phi i64 [ %indvars.iv.next, %scalar.ph ], [ %resume.val, %middle.block ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %21 = getelementptr inbounds [1 x %struct.UpVal.112*]* %11, i64 0, i64 %indvars.iv.next
  store %struct.UpVal.112* null, %struct.UpVal.112** %21, align 8, !tbaa !25
  %22 = trunc i64 %indvars.iv.next to i32
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %._crit_edge, label %scalar.ph, !llvm.loop !187

._crit_edge:                                      ; preds = %scalar.ph, %middle.block, %0
  ret %union.Closure.129* %5
}

; Function Attrs: nounwind ssp uwtable
define %struct.UpVal.112* @luaF_newupval(%struct.lua_State.126* %L) #0 {
  %1 = tail call %union.GCObject.127* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.127* (%struct.lua_State.126*, i32, i64, %union.GCObject.127**, i32)*)(%struct.lua_State.126* %L, i32 10, i64 40, %union.GCObject.127** null, i32 0) #3
  %2 = bitcast %union.GCObject.127* %1 to %struct.UpVal.112*
  %3 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 5
  %4 = bitcast %struct.global_State.120** %3 to %struct.lua_TValue.109*
  %5 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 4
  store %struct.lua_TValue.109* %4, %struct.lua_TValue.109** %5, align 8, !tbaa !75
  %6 = getelementptr inbounds %struct.global_State.120** %3, i64 1
  %7 = bitcast %struct.global_State.120** %6 to i32*
  store i32 0, i32* %7, align 4, !tbaa !15
  ret %struct.UpVal.112* %2
}

; Function Attrs: nounwind ssp uwtable
define %struct.UpVal.112* @luaF_findupval(%struct.lua_State.126* %L, %struct.lua_TValue.109* %level) #0 {
  %1 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 5
  %2 = load %struct.global_State.120** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 18
  %4 = load %union.GCObject.127** %3, align 8, !tbaa !25
  %5 = icmp eq %union.GCObject.127* %4, null
  br i1 %5, label %.critedge, label %.lr.ph

; <label>:6                                       ; preds = %13
  %7 = load %union.GCObject.127** %16, align 8, !tbaa !25
  %8 = icmp eq %union.GCObject.127* %7, null
  br i1 %8, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %6, %0
  %9 = phi %union.GCObject.127* [ %7, %6 ], [ %4, %0 ]
  %pp.05 = phi %union.GCObject.127** [ %16, %6 ], [ %3, %0 ]
  %10 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 4
  %11 = load %struct.lua_TValue.109** %10, align 8, !tbaa !75
  %12 = icmp ult %struct.lua_TValue.109* %11, %level
  br i1 %12, label %.critedge, label %13

; <label>:13                                      ; preds = %.lr.ph
  %14 = bitcast %union.GCObject.127* %9 to %struct.UpVal.112*
  %15 = icmp eq %struct.lua_TValue.109* %11, %level
  %16 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 0
  br i1 %15, label %17, label %6

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 2
  %19 = load i8* %18, align 1, !tbaa !28
  %20 = zext i8 %19 to i32
  %21 = xor i32 %20, 3
  %22 = getelementptr inbounds %struct.global_State.120* %2, i64 0, i32 9
  %23 = load i8* %22, align 1, !tbaa !188
  %24 = zext i8 %23 to i32
  %25 = xor i32 %24, 3
  %26 = and i32 %25, %21
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

; <label>:28                                      ; preds = %17
  %29 = trunc i32 %21 to i8
  store i8 %29, i8* %18, align 1, !tbaa !28
  br label %40

.critedge:                                        ; preds = %.lr.ph, %6, %0
  %pp.0.lcssa = phi %union.GCObject.127** [ %3, %0 ], [ %16, %6 ], [ %pp.05, %.lr.ph ]
  %30 = tail call %union.GCObject.127* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.127* (%struct.lua_State.126*, i32, i64, %union.GCObject.127**, i32)*)(%struct.lua_State.126* %L, i32 10, i64 40, %union.GCObject.127** %pp.0.lcssa, i32 0) #3
  %31 = bitcast %union.GCObject.127* %30 to %struct.UpVal.112*
  %32 = getelementptr inbounds %union.GCObject.127* %30, i64 0, i32 0, i32 4
  store %struct.lua_TValue.109* %level, %struct.lua_TValue.109** %32, align 8, !tbaa !75
  %33 = getelementptr inbounds %struct.global_State.120* %2, i64 0, i32 24
  %34 = getelementptr inbounds %union.GCObject.127* %30, i64 0, i32 0, i32 5
  %.c = bitcast %struct.UpVal.112* %33 to %struct.global_State.120*
  store %struct.global_State.120* %.c, %struct.global_State.120** %34, align 8, !tbaa !136
  %35 = getelementptr inbounds %struct.global_State.120* %2, i64 0, i32 24, i32 4, i32 0, i32 1
  %36 = bitcast i32* %35 to %struct.UpVal.112**
  %37 = load %struct.UpVal.112** %36, align 8, !tbaa !147
  %38 = getelementptr inbounds %struct.global_State.120** %34, i64 1
  %.c1 = bitcast %struct.UpVal.112* %37 to %struct.global_State.120*
  store %struct.global_State.120* %.c1, %struct.global_State.120** %38, align 8, !tbaa !147
  %39 = getelementptr inbounds %struct.UpVal.112* %37, i64 0, i32 4, i32 0, i32 0, i32 0
  store %union.GCObject.127* %30, %union.GCObject.127** %39, align 8, !tbaa !136
  store %struct.UpVal.112* %31, %struct.UpVal.112** %36, align 8, !tbaa !147
  br label %40

; <label>:40                                      ; preds = %.critedge, %28, %17
  %.0 = phi %struct.UpVal.112* [ %31, %.critedge ], [ %14, %17 ], [ %14, %28 ]
  ret %struct.UpVal.112* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaF_freeupval(%struct.lua_State.126* %L, %struct.UpVal.112* %uv) #0 {
  %1 = getelementptr inbounds %struct.UpVal.112* %uv, i64 0, i32 3
  %2 = load %struct.lua_TValue.109** %1, align 8, !tbaa !75
  %3 = getelementptr inbounds %struct.UpVal.112* %uv, i64 0, i32 4, i32 0
  %4 = icmp eq %struct.lua_TValue.109* %2, %3
  br i1 %4, label %16, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.UpVal.112* %uv, i64 0, i32 4
  %7 = bitcast %union.anon.111* %6 to %struct.UpVal.112**
  %8 = load %struct.UpVal.112** %7, align 8, !tbaa !136
  %9 = getelementptr inbounds %struct.UpVal.112* %uv, i64 0, i32 4, i32 0, i32 1
  %10 = bitcast i32* %9 to %struct.UpVal.112**
  %11 = load %struct.UpVal.112** %10, align 8, !tbaa !147
  %12 = getelementptr inbounds %struct.UpVal.112* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %.c.i = bitcast %struct.UpVal.112* %8 to %union.GCObject.127*
  store %union.GCObject.127* %.c.i, %union.GCObject.127** %12, align 8, !tbaa !136
  %13 = load %struct.UpVal.112** %7, align 8, !tbaa !136
  %14 = getelementptr inbounds %struct.UpVal.112* %13, i64 0, i32 4, i32 0, i32 1
  %15 = bitcast i32* %14 to %struct.UpVal.112**
  store %struct.UpVal.112* %11, %struct.UpVal.112** %15, align 8, !tbaa !147
  br label %16

; <label>:16                                      ; preds = %5, %0
  %17 = bitcast %struct.UpVal.112* %uv to i8*
  %18 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %17, i64 40, i64 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaF_close(%struct.lua_State.126* %L, %struct.lua_TValue.109* readnone %level) #0 {
  %1 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 5
  %2 = load %struct.global_State.120** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 18
  %4 = load %union.GCObject.127** %3, align 8, !tbaa !189
  %5 = icmp eq %union.GCObject.127* %4, null
  br i1 %5, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %6 = getelementptr inbounds %struct.global_State.120* %2, i64 0, i32 9
  %7 = getelementptr inbounds %struct.global_State.120* %2, i64 0, i32 14
  br label %8

; <label>:8                                       ; preds = %.backedge, %.lr.ph
  %9 = phi %union.GCObject.127* [ %4, %.lr.ph ], [ %54, %.backedge ]
  %10 = bitcast %union.GCObject.127* %9 to %struct.UpVal.112*
  %11 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 4
  %12 = load %struct.lua_TValue.109** %11, align 8, !tbaa !75
  %13 = icmp ult %struct.lua_TValue.109* %12, %level
  br i1 %13, label %.critedge, label %14

; <label>:14                                      ; preds = %8
  %15 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 0
  %16 = load %union.GCObject.127** %15, align 8, !tbaa !190
  store %union.GCObject.127* %16, %union.GCObject.127** %3, align 8, !tbaa !189
  %17 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 2
  %18 = load i8* %17, align 1, !tbaa !28
  %19 = zext i8 %18 to i32
  %20 = xor i32 %19, 3
  %21 = load i8* %6, align 1, !tbaa !188
  %22 = zext i8 %21 to i32
  %23 = xor i32 %22, 3
  %24 = and i32 %23, %20
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 5
  br i1 %25, label %27, label %39

; <label>:27                                      ; preds = %14
  %28 = bitcast %struct.global_State.120** %26 to %struct.lua_TValue.109*
  %29 = icmp eq %struct.lua_TValue.109* %12, %28
  br i1 %29, label %luaF_freeupval.exit, label %30

; <label>:30                                      ; preds = %27
  %31 = load %struct.global_State.120** %26, align 8
  %32 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 6
  %33 = load %struct.CallInfo.123** %32, align 8
  %34 = getelementptr inbounds %struct.CallInfo.123* %33, i64 0, i32 3
  %.c.i.i.c = bitcast %struct.global_State.120* %31 to %struct.CallInfo.123*
  store %struct.CallInfo.123* %.c.i.i.c, %struct.CallInfo.123** %34, align 8, !tbaa !136
  %35 = load %struct.global_State.120** %26, align 8
  %36 = getelementptr inbounds %struct.global_State.120* %35, i64 0, i32 4
  %.c1 = ptrtoint %struct.CallInfo.123* %33 to i64
  store i64 %.c1, i64* %36, align 8, !tbaa !147
  br label %luaF_freeupval.exit

luaF_freeupval.exit:                              ; preds = %30, %27
  %37 = bitcast %union.GCObject.127* %9 to i8*
  %38 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %37, i64 40, i64 0) #3
  br label %.backedge

; <label>:39                                      ; preds = %14
  %40 = load %struct.global_State.120** %26, align 8
  %41 = getelementptr inbounds %union.GCObject.127* %9, i64 0, i32 0, i32 6
  %42 = load %struct.CallInfo.123** %41, align 8
  %43 = getelementptr inbounds %struct.CallInfo.123* %42, i64 0, i32 3
  %.c.i.c = bitcast %struct.global_State.120* %40 to %struct.CallInfo.123*
  store %struct.CallInfo.123* %.c.i.c, %struct.CallInfo.123** %43, align 8, !tbaa !136
  %44 = load %struct.global_State.120** %26, align 8
  %45 = getelementptr inbounds %struct.global_State.120* %44, i64 0, i32 4
  %.c = ptrtoint %struct.CallInfo.123* %42 to i64
  store i64 %.c, i64* %45, align 8, !tbaa !147
  %46 = bitcast %struct.global_State.120** %26 to %struct.lua_TValue.109*
  %47 = bitcast %struct.lua_TValue.109* %12 to %struct.global_State.120**
  %48 = load %struct.global_State.120** %47, align 8
  store %struct.global_State.120* %48, %struct.global_State.120** %26, align 8
  %49 = getelementptr inbounds %struct.lua_TValue.109* %12, i64 0, i32 1
  %50 = load i32* %49, align 4, !tbaa !15
  %51 = getelementptr inbounds %struct.global_State.120** %26, i64 1
  %52 = bitcast %struct.global_State.120** %51 to i32*
  store i32 %50, i32* %52, align 4, !tbaa !15
  store %struct.lua_TValue.109* %46, %struct.lua_TValue.109** %11, align 8, !tbaa !75
  %53 = load %union.GCObject.127** %7, align 8, !tbaa !191
  store %union.GCObject.127* %53, %union.GCObject.127** %15, align 8, !tbaa !192
  store %union.GCObject.127* %9, %union.GCObject.127** %7, align 8, !tbaa !191
  tail call void bitcast (void (%struct.global_State*, %struct.UpVal*)* @luaC_checkupvalcolor to void (%struct.global_State.120*, %struct.UpVal.112*)*)(%struct.global_State.120* %2, %struct.UpVal.112* %10) #3
  br label %.backedge

.backedge:                                        ; preds = %39, %luaF_freeupval.exit
  %54 = load %union.GCObject.127** %3, align 8, !tbaa !189
  %55 = icmp eq %union.GCObject.127* %54, null
  br i1 %55, label %.critedge, label %8

.critedge:                                        ; preds = %.backedge, %8, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.Proto.132* @luaF_newproto(%struct.lua_State.126* %L) #0 {
  %1 = tail call %union.GCObject.127* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.127* (%struct.lua_State.126*, i32, i64, %union.GCObject.127**, i32)*)(%struct.lua_State.126* %L, i32 9, i64 128, %union.GCObject.127** null, i32 0) #3
  %2 = bitcast %union.GCObject.127* %1 to %struct.Proto.132*
  %3 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 4
  store %struct.lua_TValue.109* null, %struct.lua_TValue.109** %3, align 8, !tbaa !109
  %4 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 12
  store i32 0, i32* %4, align 4, !tbaa !110
  %5 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 18
  %6 = bitcast %union.GCObject.127** %5 to i32*
  store i32 0, i32* %6, align 4, !tbaa !173
  %7 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 5
  %8 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 10
  %9 = bitcast i32* %8 to %union.Closure.129**
  store %union.Closure.129* null, %union.Closure.129** %9, align 8, !tbaa !193
  %10 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 17
  %11 = bitcast void (%struct.lua_State.126*, %struct.lua_Debug.124*)** %10 to i32*
  store i32 0, i32* %11, align 4, !tbaa !106
  %12 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 14
  %13 = bitcast %struct.global_State.120** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* %13, i8 0, i64 24, i32 8, i1 false)
  store i32 0, i32* %12, align 4, !tbaa !107
  %14 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 16
  store i32 0, i32* %14, align 4, !tbaa !73
  %15 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 21
  %16 = bitcast i64* %15 to i8*
  store i8 0, i8* %16, align 1, !tbaa !131
  %17 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 21
  store i8 0, i8* %17, align 1, !tbaa !130
  %18 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 22
  store i8 0, i8* %18, align 1, !tbaa !88
  %19 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 8
  %20 = bitcast %struct.lua_TValue.109** %19 to <2 x %struct.lua_TValue.109*>*
  store <2 x %struct.lua_TValue.109*> zeroinitializer, <2 x %struct.lua_TValue.109*>* %20, align 8, !tbaa !25
  %21 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 16
  store i32 0, i32* %21, align 4, !tbaa !177
  %22 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 19
  %23 = bitcast %union.GCObject.127** %22 to i32*
  store i32 0, i32* %23, align 4, !tbaa !123
  %24 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 18
  store i32 0, i32* %24, align 4, !tbaa !124
  %25 = getelementptr inbounds %union.GCObject.127* %1, i64 0, i32 0, i32 13
  %26 = bitcast i8* %25 to %union.TString.115**
  store %union.TString.115* null, %union.TString.115** %26, align 8, !tbaa !122
  ret %struct.Proto.132* %2
}

; Function Attrs: nounwind ssp uwtable
define void @luaF_freeproto(%struct.lua_State.126* %L, %struct.Proto.132* %f) #0 {
  %1 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 4
  %2 = load i32** %1, align 8, !tbaa !83
  %3 = bitcast i32* %2 to i8*
  %4 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 13
  %5 = load i32* %4, align 4, !tbaa !106
  %6 = sext i32 %5 to i64
  %7 = shl nsw i64 %6, 2
  %8 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %3, i64 %7, i64 0) #3
  %9 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 5
  %10 = load %struct.Proto.132*** %9, align 8, !tbaa !174
  %11 = bitcast %struct.Proto.132** %10 to i8*
  %12 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 15
  %13 = load i32* %12, align 4, !tbaa !173
  %14 = sext i32 %13 to i64
  %15 = shl nsw i64 %14, 3
  %16 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %11, i64 %15, i64 0) #3
  %17 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 3
  %18 = load %struct.lua_TValue.109** %17, align 8, !tbaa !109
  %19 = bitcast %struct.lua_TValue.109* %18 to i8*
  %20 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 12
  %21 = load i32* %20, align 4, !tbaa !110
  %22 = sext i32 %21 to i64
  %23 = shl nsw i64 %22, 4
  %24 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %19, i64 %23, i64 0) #3
  %25 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 6
  %26 = load i32** %25, align 8, !tbaa !105
  %27 = bitcast i32* %26 to i8*
  %28 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 14
  %29 = load i32* %28, align 4, !tbaa !107
  %30 = sext i32 %29 to i64
  %31 = shl nsw i64 %30, 2
  %32 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %27, i64 %31, i64 0) #3
  %33 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 7
  %34 = load %struct.LocVar.130** %33, align 8, !tbaa !178
  %35 = bitcast %struct.LocVar.130* %34 to i8*
  %36 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 16
  %37 = load i32* %36, align 4, !tbaa !177
  %38 = sext i32 %37 to i64
  %39 = shl nsw i64 %38, 4
  %40 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %35, i64 %39, i64 0) #3
  %41 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 8
  %42 = load %struct.Upvaldesc.131** %41, align 8, !tbaa !76
  %43 = bitcast %struct.Upvaldesc.131* %42 to i8*
  %44 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 11
  %45 = load i32* %44, align 4, !tbaa !73
  %46 = sext i32 %45 to i64
  %47 = shl nsw i64 %46, 4
  %48 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %43, i64 %47, i64 0) #3
  %49 = bitcast %struct.Proto.132* %f to i8*
  %50 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %L, i8* %49, i64 128, i64 0) #3
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i8* @luaF_getlocalname(%struct.Proto.132* nocapture readonly %f, i32 %local_number, i32 %pc) #1 {
  %1 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 16
  %2 = load i32* %1, align 4, !tbaa !177
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %0
  %4 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 7
  %5 = load %struct.LocVar.130** %4, align 8, !tbaa !178
  br label %6

; <label>:6                                       ; preds = %22, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %22 ]
  %.013 = phi i32 [ %local_number, %.lr.ph ], [ %.1, %22 ]
  %7 = getelementptr inbounds %struct.LocVar.130* %5, i64 %indvars.iv, i32 1
  %8 = load i32* %7, align 4, !tbaa !181
  %9 = icmp sgt i32 %8, %pc
  br i1 %9, label %.critedge, label %10

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %struct.LocVar.130* %5, i64 %indvars.iv, i32 2
  %12 = load i32* %11, align 4, !tbaa !182
  %13 = icmp sgt i32 %12, %pc
  br i1 %13, label %14, label %22

; <label>:14                                      ; preds = %10
  %15 = add nsw i32 %.013, -1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %22

; <label>:17                                      ; preds = %14
  %18 = getelementptr inbounds %struct.LocVar.130* %5, i64 %indvars.iv, i32 0
  %19 = load %union.TString.115** %18, align 8, !tbaa !179
  %20 = getelementptr inbounds %union.TString.115* %19, i64 1
  %21 = bitcast %union.TString.115* %20 to i8*
  br label %.critedge

; <label>:22                                      ; preds = %14, %10
  %.1 = phi i32 [ %15, %14 ], [ %.013, %10 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = trunc i64 %indvars.iv.next to i32
  %24 = icmp slt i32 %23, %2
  br i1 %24, label %6, label %.critedge

.critedge:                                        ; preds = %22, %17, %6, %0
  %.0 = phi i8* [ %21, %17 ], [ null, %0 ], [ null, %22 ], [ null, %6 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_barrier_(%struct.lua_State* nocapture readonly %L, %union.GCObject* nocapture %o, %union.GCObject* %v) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %4 = load i8* %3, align 1, !tbaa !67
  %5 = icmp ult i8 %4, 2
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %v)
  br label %15

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 2
  %9 = load i8* %8, align 1, !tbaa !28
  %10 = and i8 %9, -72
  %11 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  %12 = load i8* %11, align 1, !tbaa !188
  %13 = and i8 %12, 3
  %14 = or i8 %13, %10
  store i8 %14, i8* %8, align 1, !tbaa !28
  br label %15

; <label>:15                                      ; preds = %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_barrierback_(%struct.lua_State* nocapture readonly %L, %union.GCObject* %o) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 2
  %4 = load i8* %3, align 1, !tbaa !28
  %5 = and i8 %4, -5
  store i8 %5, i8* %3, align 1, !tbaa !28
  %6 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 19
  %7 = load %union.GCObject** %6, align 8, !tbaa !194
  %8 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 8
  %.c = bitcast %union.GCObject* %7 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c, %struct.lua_TValue** %8, align 8, !tbaa !195
  store %union.GCObject* %o, %union.GCObject** %6, align 8, !tbaa !194
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_barrierproto_(%struct.lua_State* nocapture readonly %L, %struct.Proto* %p, %union.Closure* %c) #0 {
  %1 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 9
  %2 = load %union.Closure** %1, align 8, !tbaa !193
  %3 = icmp eq %union.Closure* %2, null
  br i1 %3, label %4, label %28

; <label>:4                                       ; preds = %0
  %5 = bitcast %union.Closure* %c to %union.GCObject*
  %6 = getelementptr inbounds %union.Closure* %c, i64 0, i32 0, i32 2
  %7 = load i8* %6, align 1, !tbaa !28
  %8 = and i8 %7, 3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %luaC_barrier_.exit, label %10

; <label>:10                                      ; preds = %4
  %11 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 2
  %12 = load i8* %11, align 1, !tbaa !28
  %13 = and i8 %12, 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %luaC_barrier_.exit, label %15

; <label>:15                                      ; preds = %10
  %16 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %17 = load %struct.global_State** %16, align 8, !tbaa !17
  %18 = getelementptr inbounds %struct.global_State* %17, i64 0, i32 10
  %19 = load i8* %18, align 1, !tbaa !67
  %20 = icmp ult i8 %19, 2
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %15
  tail call fastcc void @reallymarkobject(%struct.global_State* %17, %union.GCObject* %5) #3
  br label %luaC_barrier_.exit

; <label>:22                                      ; preds = %15
  %23 = and i8 %12, -72
  %24 = getelementptr inbounds %struct.global_State* %17, i64 0, i32 9
  %25 = load i8* %24, align 1, !tbaa !188
  %26 = and i8 %25, 3
  %27 = or i8 %26, %23
  store i8 %27, i8* %11, align 1, !tbaa !28
  br label %luaC_barrier_.exit

; <label>:28                                      ; preds = %0
  %29 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %30 = load %struct.global_State** %29, align 8, !tbaa !17
  %31 = bitcast %struct.Proto* %p to %union.GCObject*
  %32 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 2
  %33 = load i8* %32, align 1, !tbaa !28
  %34 = and i8 %33, -5
  store i8 %34, i8* %32, align 1, !tbaa !28
  %35 = getelementptr inbounds %struct.global_State* %30, i64 0, i32 19
  %36 = load %union.GCObject** %35, align 8, !tbaa !194
  %37 = getelementptr inbounds %struct.Proto* %p, i64 0, i32 19
  store %union.GCObject* %36, %union.GCObject** %37, align 8, !tbaa !196
  store %union.GCObject* %31, %union.GCObject** %35, align 8, !tbaa !194
  br label %luaC_barrier_.exit

luaC_barrier_.exit:                               ; preds = %28, %22, %21, %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_checkupvalcolor(%struct.global_State* %g, %struct.UpVal* nocapture %uv) #0 {
  %1 = getelementptr inbounds %struct.UpVal* %uv, i64 0, i32 2
  %2 = load i8* %1, align 1, !tbaa !28
  %3 = and i8 %2, 7
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %36

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 11
  %7 = load i8* %6, align 1, !tbaa !65
  %8 = icmp eq i8 %7, 2
  br i1 %8, label %13, label %9

; <label>:9                                       ; preds = %5
  %10 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 10
  %11 = load i8* %10, align 1, !tbaa !67
  %12 = icmp ult i8 %11, 2
  br i1 %12, label %13, label %30

; <label>:13                                      ; preds = %9, %5
  %14 = and i8 %2, -69
  %15 = or i8 %14, 4
  store i8 %15, i8* %1, align 1, !tbaa !28
  %16 = getelementptr inbounds %struct.UpVal* %uv, i64 0, i32 3
  %17 = load %struct.lua_TValue** %16, align 8, !tbaa !75
  %18 = getelementptr inbounds %struct.lua_TValue* %17, i64 0, i32 1
  %19 = load i32* %18, align 4, !tbaa !15
  %20 = and i32 %19, 64
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %36, label %22

; <label>:22                                      ; preds = %13
  %23 = getelementptr inbounds %struct.lua_TValue* %17, i64 0, i32 0, i32 0
  %24 = load %union.GCObject** %23, align 8, !tbaa !25
  %25 = getelementptr inbounds %union.GCObject* %24, i64 0, i32 0, i32 2
  %26 = load i8* %25, align 1, !tbaa !28
  %27 = and i8 %26, 3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %36, label %29

; <label>:29                                      ; preds = %22
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %24)
  br label %36

; <label>:30                                      ; preds = %9
  %31 = and i8 %2, -72
  %32 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 9
  %33 = load i8* %32, align 1, !tbaa !188
  %34 = and i8 %33, 3
  %35 = or i8 %34, %31
  store i8 %35, i8* %1, align 1, !tbaa !28
  br label %36

; <label>:36                                      ; preds = %30, %29, %22, %13, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %union.GCObject* @luaC_newobj(%struct.lua_State* %L, i32 %tt, i64 %sz, %union.GCObject** %list, i32 %offset) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = and i32 %tt, 15
  %4 = zext i32 %3 to i64
  %5 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 %4, i64 %sz) #3
  %6 = sext i32 %offset to i64
  %7 = getelementptr inbounds i8* %5, i64 %6
  %8 = bitcast i8* %7 to %union.GCObject*
  %9 = icmp eq %union.GCObject** %list, null
  %10 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 14
  %.list = select i1 %9, %union.GCObject** %10, %union.GCObject** %list
  %11 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  %12 = load i8* %11, align 1, !tbaa !188
  %13 = and i8 %12, 3
  %.sum = add i64 %6, 9
  %14 = getelementptr inbounds i8* %5, i64 %.sum
  store i8 %13, i8* %14, align 1, !tbaa !28
  %15 = trunc i32 %tt to i8
  %.sum1 = add i64 %6, 8
  %16 = getelementptr inbounds i8* %5, i64 %.sum1
  store i8 %15, i8* %16, align 1, !tbaa !197
  %17 = load %union.GCObject** %.list, align 8, !tbaa !25
  %18 = bitcast i8* %7 to %union.GCObject**
  store %union.GCObject* %17, %union.GCObject** %18, align 8, !tbaa !192
  store %union.GCObject* %8, %union.GCObject** %.list, align 8, !tbaa !25
  ret %union.GCObject* %8
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_checkfinalizer(%struct.lua_State* %L, %union.GCObject* %o, %struct.Table* %mt) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 2
  %4 = load i8* %3, align 1, !tbaa !28
  %5 = and i8 %4, 24
  %or.cond.not = icmp ne i8 %5, 0
  %6 = icmp eq %struct.Table* %mt, null
  %or.cond3 = or i1 %or.cond.not, %6
  br i1 %or.cond3, label %.critedge, label %7

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.Table* %mt, i64 0, i32 3
  %9 = load i8* %8, align 1, !tbaa !41
  %10 = and i8 %9, 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %.critedge

; <label>:12                                      ; preds = %7
  %13 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 33, i64 2
  %14 = load %union.TString** %13, align 8, !tbaa !25
  %15 = tail call %struct.lua_TValue* @luaT_gettm(%struct.Table* %mt, i32 2, %union.TString* %14) #3
  %phitmp = icmp eq %struct.lua_TValue* %15, null
  br i1 %phitmp, label %.critedge, label %16

; <label>:16                                      ; preds = %12
  %17 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 16
  %18 = load %union.GCObject*** %17, align 8, !tbaa !198
  %19 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 0
  %20 = icmp eq %union.GCObject** %18, %19
  br i1 %20, label %.preheader, label %23

.preheader:                                       ; preds = %.preheader, %16
  %21 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %18, i64 1) #3
  %22 = icmp eq %union.GCObject** %21, %18
  br i1 %22, label %.preheader, label %sweeptolive.exit

sweeptolive.exit:                                 ; preds = %.preheader
  store %union.GCObject** %21, %union.GCObject*** %17, align 8, !tbaa !198
  br label %23

; <label>:23                                      ; preds = %sweeptolive.exit, %16
  %24 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 14
  br label %25

; <label>:25                                      ; preds = %25, %23
  %p.0 = phi %union.GCObject** [ %24, %23 ], [ %28, %25 ]
  %26 = load %union.GCObject** %p.0, align 8, !tbaa !25
  %27 = icmp eq %union.GCObject* %26, %o
  %28 = getelementptr inbounds %union.GCObject* %26, i64 0, i32 0, i32 0
  br i1 %27, label %29, label %25

; <label>:29                                      ; preds = %25
  %30 = load %union.GCObject** %19, align 8, !tbaa !192
  store %union.GCObject* %30, %union.GCObject** %p.0, align 8, !tbaa !25
  %31 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 15
  %32 = load %union.GCObject** %31, align 8, !tbaa !199
  store %union.GCObject* %32, %union.GCObject** %19, align 8, !tbaa !192
  store %union.GCObject* %o, %union.GCObject** %31, align 8, !tbaa !199
  %33 = load i8* %3, align 1, !tbaa !28
  %34 = or i8 %33, 16
  store i8 %34, i8* %3, align 1, !tbaa !28
  %35 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %36 = load i8* %35, align 1, !tbaa !67
  %37 = icmp ult i8 %36, 2
  br i1 %37, label %44, label %38

; <label>:38                                      ; preds = %29
  %39 = and i8 %34, -72
  %40 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  %41 = load i8* %40, align 1, !tbaa !188
  %42 = and i8 %41, 3
  %43 = or i8 %42, %39
  store i8 %43, i8* %3, align 1, !tbaa !28
  br label %.critedge

; <label>:44                                      ; preds = %29
  %45 = and i8 %34, -65
  store i8 %45, i8* %3, align 1, !tbaa !28
  br label %.critedge

.critedge:                                        ; preds = %44, %38, %12, %7, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_changemode(%struct.lua_State* %L, i32 %mode) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 11
  %4 = load i8* %3, align 1, !tbaa !65
  %5 = zext i8 %4 to i32
  %6 = icmp eq i32 %5, %mode
  br i1 %6, label %luaC_runtilstate.exit2, label %7

; <label>:7                                       ; preds = %0
  %8 = icmp eq i32 %mode, 2
  br i1 %8, label %9, label %22

; <label>:9                                       ; preds = %7
  %10 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %11 = load i8* %10, align 1, !tbaa !67
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %luaC_runtilstate.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %9
  %13 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %14 = load i8* %10, align 1, !tbaa !67
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %luaC_runtilstate.exit, label %.lr.ph.i

luaC_runtilstate.exit:                            ; preds = %.lr.ph.i, %9
  %16 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %17 = load i64* %16, align 8, !tbaa !64
  %18 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %19 = load i64* %18, align 8, !tbaa !33
  %20 = add i64 %19, %17
  %21 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 5
  store i64 %20, i64* %21, align 8, !tbaa !66
  store i8 2, i8* %3, align 1, !tbaa !65
  br label %luaC_runtilstate.exit2

; <label>:22                                      ; preds = %7
  store i8 0, i8* %3, align 1, !tbaa !65
  %23 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  store i8 2, i8* %23, align 1, !tbaa !67
  %24 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 13
  store i32 0, i32* %24, align 4, !tbaa !200
  %25 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 15
  br label %26

; <label>:26                                      ; preds = %26, %22
  %27 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %25, i64 1) #3
  %28 = icmp eq %union.GCObject** %27, %25
  br i1 %28, label %26, label %sweeptolive.exit.i

sweeptolive.exit.i:                               ; preds = %26
  %29 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 17
  store %union.GCObject** %27, %union.GCObject*** %29, align 8, !tbaa !201
  %30 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 14
  br label %31

; <label>:31                                      ; preds = %31, %sweeptolive.exit.i
  %32 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %30, i64 1) #3
  %33 = icmp eq %union.GCObject** %32, %30
  br i1 %33, label %31, label %entersweep.exit

entersweep.exit:                                  ; preds = %31
  %34 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 16
  store %union.GCObject** %32, %union.GCObject*** %34, align 8, !tbaa !198
  %35 = load %struct.global_State** %1, align 8, !tbaa !17
  %36 = getelementptr inbounds %struct.global_State* %35, i64 0, i32 10
  %37 = load i8* %36, align 1, !tbaa !67
  %38 = zext i8 %37 to i32
  %39 = shl i32 1, %38
  %40 = and i32 %39, -29
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %.lr.ph.i1, label %luaC_runtilstate.exit2

.lr.ph.i1:                                        ; preds = %.lr.ph.i1, %entersweep.exit
  %42 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %43 = load i8* %36, align 1, !tbaa !67
  %44 = zext i8 %43 to i32
  %45 = shl i32 1, %44
  %46 = and i32 %45, -29
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %.lr.ph.i1, label %luaC_runtilstate.exit2

luaC_runtilstate.exit2:                           ; preds = %.lr.ph.i1, %entersweep.exit, %luaC_runtilstate.exit, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_runtilstate(%struct.lua_State* %L, i32 %statesmask) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %4 = load i8* %3, align 1, !tbaa !67
  %5 = zext i8 %4 to i32
  %6 = shl i32 1, %5
  %7 = and i32 %6, %statesmask
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %0
  %9 = tail call fastcc i64 @singlestep(%struct.lua_State* %L)
  %10 = load i8* %3, align 1, !tbaa !67
  %11 = zext i8 %10 to i32
  %12 = shl i32 1, %11
  %13 = and i32 %12, %statesmask
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_freeallobjects(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 23
  br label %4

; <label>:4                                       ; preds = %4, %0
  %lastnext.0.i = phi %union.GCObject** [ %3, %0 ], [ %7, %4 ]
  %5 = load %union.GCObject** %lastnext.0.i, align 8, !tbaa !25
  %6 = icmp eq %union.GCObject* %5, null
  %7 = getelementptr inbounds %union.GCObject* %5, i64 0, i32 0, i32 0
  br i1 %6, label %.preheader.i, label %4

.preheader.i:                                     ; preds = %4
  %8 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 15
  %9 = load %union.GCObject** %8, align 8, !tbaa !25
  %10 = icmp eq %union.GCObject* %9, null
  br i1 %10, label %separatetobefnz.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.preheader.i
  %11 = phi %union.GCObject* [ %18, %.lr.ph.i ], [ %9, %.preheader.i ]
  %lastnext.14.i = phi %union.GCObject** [ %15, %.lr.ph.i ], [ %lastnext.0.i, %.preheader.i ]
  %12 = getelementptr inbounds %union.GCObject* %11, i64 0, i32 0, i32 2
  %13 = load i8* %12, align 1, !tbaa !28
  %14 = or i8 %13, 8
  store i8 %14, i8* %12, align 1, !tbaa !28
  %15 = getelementptr inbounds %union.GCObject* %11, i64 0, i32 0, i32 0
  %16 = load %union.GCObject** %15, align 8, !tbaa !192
  store %union.GCObject* %16, %union.GCObject** %8, align 8, !tbaa !25
  %17 = load %union.GCObject** %lastnext.14.i, align 8, !tbaa !25
  store %union.GCObject* %17, %union.GCObject** %15, align 8, !tbaa !192
  store %union.GCObject* %11, %union.GCObject** %lastnext.14.i, align 8, !tbaa !25
  %18 = load %union.GCObject** %8, align 8, !tbaa !25
  %19 = icmp eq %union.GCObject* %18, null
  br i1 %19, label %separatetobefnz.exit.loopexit, label %.lr.ph.i

separatetobefnz.exit.loopexit:                    ; preds = %.lr.ph.i
  %.pre = load %struct.global_State** %1, align 8, !tbaa !17
  br label %separatetobefnz.exit

separatetobefnz.exit:                             ; preds = %separatetobefnz.exit.loopexit, %.preheader.i
  %20 = phi %struct.global_State* [ %.pre, %separatetobefnz.exit.loopexit ], [ %2, %.preheader.i ]
  %21 = getelementptr inbounds %struct.global_State* %20, i64 0, i32 23
  %22 = load %union.GCObject** %21, align 8, !tbaa !202
  %23 = icmp eq %union.GCObject* %22, null
  br i1 %23, label %callallpendingfinalizers.exit, label %.lr.ph.i1

.lr.ph.i1:                                        ; preds = %.lr.ph.i1, %separatetobefnz.exit
  %24 = phi %union.GCObject* [ %28, %.lr.ph.i1 ], [ %22, %separatetobefnz.exit ]
  %25 = getelementptr inbounds %union.GCObject* %24, i64 0, i32 0, i32 2
  %26 = load i8* %25, align 1, !tbaa !28
  %27 = and i8 %26, -65
  store i8 %27, i8* %25, align 1, !tbaa !28
  tail call fastcc void @GCTM(%struct.lua_State* %L, i32 0) #3
  %28 = load %union.GCObject** %21, align 8, !tbaa !202
  %29 = icmp eq %union.GCObject* %28, null
  br i1 %29, label %callallpendingfinalizers.exit, label %.lr.ph.i1

callallpendingfinalizers.exit:                    ; preds = %.lr.ph.i1, %separatetobefnz.exit
  %30 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  store i8 3, i8* %30, align 1, !tbaa !188
  %31 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 11
  store i8 0, i8* %31, align 1, !tbaa !65
  %32 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %8, i64 -3)
  %33 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 14
  %34 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %33, i64 -3)
  %35 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 6, i32 2
  %36 = load i32* %35, align 4, !tbaa !203
  %37 = icmp sgt i32 %36, 0
  br i1 %37, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %callallpendingfinalizers.exit
  %38 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 6, i32 0
  br label %39

; <label>:39                                      ; preds = %39, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %39 ]
  %40 = load %union.GCObject*** %38, align 8, !tbaa !204
  %41 = getelementptr inbounds %union.GCObject** %40, i64 %indvars.iv
  %42 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %41, i64 -3)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %43 = load i32* %35, align 4, !tbaa !203
  %44 = trunc i64 %indvars.iv.next to i32
  %45 = icmp slt i32 %44, %43
  br i1 %45, label %39, label %._crit_edge

._crit_edge:                                      ; preds = %39, %callallpendingfinalizers.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_forcestep(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 11
  %4 = load i8* %3, align 1, !tbaa !65
  %5 = icmp eq i8 %4, 2
  br i1 %5, label %6, label %50

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 5
  %8 = load i64* %7, align 8, !tbaa !66
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

; <label>:10                                      ; preds = %6
  tail call void @luaC_fullgc(%struct.lua_State* %L, i32 0) #3
  %11 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %12 = load i64* %11, align 8, !tbaa !64
  %13 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %14 = load i64* %13, align 8, !tbaa !33
  %15 = add i64 %14, %12
  store i64 %15, i64* %7, align 8, !tbaa !66
  br label %36

; <label>:16                                      ; preds = %6
  %17 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %18 = load i8* %17, align 1, !tbaa !67
  %19 = icmp eq i8 %18, 5
  br i1 %19, label %luaC_runtilstate.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %16
  %20 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %21 = load i8* %17, align 1, !tbaa !67
  %22 = icmp eq i8 %21, 5
  br i1 %22, label %luaC_runtilstate.exit.i, label %.lr.ph.i.i

luaC_runtilstate.exit.i:                          ; preds = %.lr.ph.i.i, %16
  store i8 0, i8* %17, align 1, !tbaa !67
  %23 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %24 = load i64* %23, align 8, !tbaa !64
  %25 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %26 = load i64* %25, align 8, !tbaa !33
  %27 = add i64 %26, %24
  %28 = udiv i64 %8, 100
  %29 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 27
  %30 = load i32* %29, align 4, !tbaa !69
  %31 = sext i32 %30 to i64
  %32 = mul i64 %31, %28
  %33 = icmp ugt i64 %27, %32
  br i1 %33, label %34, label %35

; <label>:34                                      ; preds = %luaC_runtilstate.exit.i
  store i64 0, i64* %7, align 8, !tbaa !66
  br label %36

; <label>:35                                      ; preds = %luaC_runtilstate.exit.i
  store i64 %8, i64* %7, align 8, !tbaa !66
  br label %36

; <label>:36                                      ; preds = %35, %34, %10
  %37 = phi i64 [ %26, %34 ], [ %26, %35 ], [ %14, %10 ]
  %38 = phi i64 [ %24, %34 ], [ %24, %35 ], [ %12, %10 ]
  %39 = add i64 %38, %37
  %40 = sdiv i64 %39, 100
  %41 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 26
  %42 = load i32* %41, align 4, !tbaa !68
  %43 = sext i32 %42 to i64
  %44 = sdiv i64 9223372036854775804, %40
  %45 = icmp slt i64 %43, %44
  br i1 %45, label %46, label %generationalcollection.exit

; <label>:46                                      ; preds = %36
  %47 = mul nsw i64 %43, %40
  br label %generationalcollection.exit

generationalcollection.exit:                      ; preds = %46, %36
  %48 = phi i64 [ %47, %46 ], [ 9223372036854775804, %36 ]
  %49 = sub i64 %39, %48
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 %49) #3
  %.pre = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  br label %incstep.exit.preheader

; <label>:50                                      ; preds = %0
  %51 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %52 = load i64* %51, align 8, !tbaa !33
  %53 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 28
  %54 = load i32* %53, align 4, !tbaa !70
  %55 = icmp slt i32 %54, 40
  %56 = sdiv i64 %52, 200
  %57 = add nsw i64 %56, 1
  %58 = sext i32 %54 to i64
  %59 = select i1 %55, i64 40, i64 %58
  %60 = sdiv i64 9223372036854775804, %59
  %61 = icmp slt i64 %57, %60
  br i1 %61, label %62, label %.preheader.i

; <label>:62                                      ; preds = %50
  %63 = mul nsw i64 %57, %59
  br label %.preheader.i

.preheader.i:                                     ; preds = %62, %50
  %debt.0.ph.i = phi i64 [ %63, %62 ], [ 9223372036854775804, %50 ]
  %64 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  br label %65

; <label>:65                                      ; preds = %71, %.preheader.i
  %debt.0.i = phi i64 [ %67, %71 ], [ %debt.0.ph.i, %.preheader.i ]
  %66 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %67 = sub i64 %debt.0.i, %66
  %68 = icmp sgt i64 %67, -2400
  %69 = load i8* %64, align 1, !tbaa !67
  %70 = icmp eq i8 %69, 5
  br i1 %68, label %71, label %.critedge.i

; <label>:71                                      ; preds = %65
  br i1 %70, label %.critedge.thread.i, label %65

.critedge.i:                                      ; preds = %65
  br i1 %70, label %.critedge.thread.i, label %88

.critedge.thread.i:                               ; preds = %.critedge.i, %71
  %72 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 5
  %73 = load i64* %72, align 8, !tbaa !66
  %74 = sdiv i64 %73, 100
  %75 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 26
  %76 = load i32* %75, align 4, !tbaa !68
  %77 = sext i32 %76 to i64
  %78 = sdiv i64 9223372036854775804, %74
  %79 = icmp slt i64 %77, %78
  br i1 %79, label %80, label %setpause.exit.i

; <label>:80                                      ; preds = %.critedge.thread.i
  %81 = mul nsw i64 %77, %74
  br label %setpause.exit.i

setpause.exit.i:                                  ; preds = %80, %.critedge.thread.i
  %82 = phi i64 [ %81, %80 ], [ 9223372036854775804, %.critedge.thread.i ]
  %83 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %84 = load i64* %83, align 8, !tbaa !64
  %85 = load i64* %51, align 8, !tbaa !33
  %86 = sub i64 %84, %82
  %87 = add i64 %86, %85
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 %87) #3
  br label %incstep.exit.preheader

; <label>:88                                      ; preds = %.critedge.i
  %89 = sdiv i64 %67, %59
  %90 = mul nsw i64 %89, 200
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 %90) #3
  br label %incstep.exit.preheader

incstep.exit.preheader:                           ; preds = %88, %setpause.exit.i, %generationalcollection.exit
  %.pre-phi = phi i8* [ %.pre, %generationalcollection.exit ], [ %64, %setpause.exit.i ], [ %64, %88 ]
  %91 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 23
  %92 = load %union.GCObject** %91, align 8, !tbaa !202
  %93 = icmp eq %union.GCObject* %92, null
  br i1 %93, label %.critedge, label %.lr.ph

.lr.ph:                                           ; preds = %.critedge1, %incstep.exit.preheader
  %i.03 = phi i32 [ %98, %.critedge1 ], [ 0, %incstep.exit.preheader ]
  %94 = icmp slt i32 %i.03, 4
  br i1 %94, label %.critedge1, label %95

; <label>:95                                      ; preds = %.lr.ph
  %96 = load i8* %.pre-phi, align 1, !tbaa !67
  %97 = icmp eq i8 %96, 5
  br i1 %97, label %.critedge1, label %.critedge

.critedge1:                                       ; preds = %95, %.lr.ph
  tail call fastcc void @GCTM(%struct.lua_State* %L, i32 1)
  %98 = add nsw i32 %i.03, 1
  %99 = load %union.GCObject** %91, align 8, !tbaa !202
  %100 = icmp eq %union.GCObject* %99, null
  br i1 %100, label %.critedge, label %.lr.ph

.critedge:                                        ; preds = %.critedge1, %95, %incstep.exit.preheader
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_step(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  %4 = load i8* %3, align 1, !tbaa !63
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  tail call void @luaC_forcestep(%struct.lua_State* %L)
  br label %8

; <label>:7                                       ; preds = %0
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 -2400) #3
  br label %8

; <label>:8                                       ; preds = %7, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaC_fullgc(%struct.lua_State* %L, i32 %isemergency) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 11
  %4 = load i8* %3, align 1, !tbaa !65
  %5 = icmp ne i32 %isemergency, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  store i8 1, i8* %3, align 1, !tbaa !65
  br label %callallpendingfinalizers.exit.thread

; <label>:7                                       ; preds = %0
  store i8 0, i8* %3, align 1, !tbaa !65
  %8 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 23
  %9 = load %union.GCObject** %8, align 8, !tbaa !202
  %10 = icmp eq %union.GCObject* %9, null
  br i1 %10, label %callallpendingfinalizers.exit.thread, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %7
  %11 = phi %union.GCObject* [ %15, %.lr.ph.i ], [ %9, %7 ]
  %12 = getelementptr inbounds %union.GCObject* %11, i64 0, i32 0, i32 2
  %13 = load i8* %12, align 1, !tbaa !28
  %14 = and i8 %13, -65
  store i8 %14, i8* %12, align 1, !tbaa !28
  tail call fastcc void @GCTM(%struct.lua_State* %L, i32 1) #3
  %15 = load %union.GCObject** %8, align 8, !tbaa !202
  %16 = icmp eq %union.GCObject* %15, null
  br i1 %16, label %callallpendingfinalizers.exit, label %.lr.ph.i

callallpendingfinalizers.exit:                    ; preds = %.lr.ph.i
  %.pr = load i8* %3, align 1, !tbaa !65
  %17 = icmp eq i8 %.pr, 2
  br i1 %17, label %21, label %callallpendingfinalizers.exit.thread

callallpendingfinalizers.exit.thread:             ; preds = %callallpendingfinalizers.exit, %7, %6
  %18 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %19 = load i8* %18, align 1, !tbaa !67
  %20 = icmp ult i8 %19, 2
  br i1 %20, label %21, label %35

; <label>:21                                      ; preds = %callallpendingfinalizers.exit.thread, %callallpendingfinalizers.exit
  %22 = load %struct.global_State** %1, align 8, !tbaa !17
  %23 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 10
  store i8 2, i8* %23, align 1, !tbaa !67
  %24 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 13
  store i32 0, i32* %24, align 4, !tbaa !200
  %25 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 15
  br label %26

; <label>:26                                      ; preds = %26, %21
  %27 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %25, i64 1) #3
  %28 = icmp eq %union.GCObject** %27, %25
  br i1 %28, label %26, label %sweeptolive.exit.i

sweeptolive.exit.i:                               ; preds = %26
  %29 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 17
  store %union.GCObject** %27, %union.GCObject*** %29, align 8, !tbaa !201
  %30 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 14
  br label %31

; <label>:31                                      ; preds = %31, %sweeptolive.exit.i
  %32 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %30, i64 1) #3
  %33 = icmp eq %union.GCObject** %32, %30
  br i1 %33, label %31, label %entersweep.exit

entersweep.exit:                                  ; preds = %31
  %34 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 16
  store %union.GCObject** %32, %union.GCObject*** %34, align 8, !tbaa !198
  br label %35

; <label>:35                                      ; preds = %entersweep.exit, %callallpendingfinalizers.exit.thread
  %36 = load %struct.global_State** %1, align 8, !tbaa !17
  %37 = getelementptr inbounds %struct.global_State* %36, i64 0, i32 10
  %38 = load i8* %37, align 1, !tbaa !67
  %39 = icmp eq i8 %38, 5
  br i1 %39, label %luaC_runtilstate.exit, label %.lr.ph.i1

.lr.ph.i1:                                        ; preds = %.lr.ph.i1, %35
  %40 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %41 = load i8* %37, align 1, !tbaa !67
  %42 = icmp eq i8 %41, 5
  br i1 %42, label %luaC_runtilstate.exit.loopexit, label %.lr.ph.i1

luaC_runtilstate.exit.loopexit:                   ; preds = %.lr.ph.i1
  %.pre = load %struct.global_State** %1, align 8, !tbaa !17
  %.phi.trans.insert = getelementptr inbounds %struct.global_State* %.pre, i64 0, i32 10
  %.pre12 = load i8* %.phi.trans.insert, align 1, !tbaa !67
  br label %luaC_runtilstate.exit

luaC_runtilstate.exit:                            ; preds = %luaC_runtilstate.exit.loopexit, %35
  %43 = phi i8 [ %.pre12, %luaC_runtilstate.exit.loopexit ], [ 5, %35 ]
  %44 = phi %struct.global_State* [ %.pre, %luaC_runtilstate.exit.loopexit ], [ %36, %35 ]
  %45 = getelementptr inbounds %struct.global_State* %44, i64 0, i32 10
  %46 = zext i8 %43 to i32
  %47 = shl i32 1, %46
  %48 = and i32 %47, -33
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %.lr.ph.i2, label %luaC_runtilstate.exit3

.lr.ph.i2:                                        ; preds = %.lr.ph.i2, %luaC_runtilstate.exit
  %50 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %51 = load i8* %45, align 1, !tbaa !67
  %52 = zext i8 %51 to i32
  %53 = shl i32 1, %52
  %54 = and i32 %53, -33
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %.lr.ph.i2, label %luaC_runtilstate.exit3.loopexit

luaC_runtilstate.exit3.loopexit:                  ; preds = %.lr.ph.i2
  %.pre13 = load %struct.global_State** %1, align 8, !tbaa !17
  %.phi.trans.insert14 = getelementptr inbounds %struct.global_State* %.pre13, i64 0, i32 10
  %.pre15 = load i8* %.phi.trans.insert14, align 1, !tbaa !67
  br label %luaC_runtilstate.exit3

luaC_runtilstate.exit3:                           ; preds = %luaC_runtilstate.exit3.loopexit, %luaC_runtilstate.exit
  %56 = phi i8 [ %.pre15, %luaC_runtilstate.exit3.loopexit ], [ %43, %luaC_runtilstate.exit ]
  %57 = phi %struct.global_State* [ %.pre13, %luaC_runtilstate.exit3.loopexit ], [ %44, %luaC_runtilstate.exit ]
  %58 = getelementptr inbounds %struct.global_State* %57, i64 0, i32 10
  %59 = icmp eq i8 %56, 5
  br i1 %59, label %luaC_runtilstate.exit5, label %.lr.ph.i4

.lr.ph.i4:                                        ; preds = %.lr.ph.i4, %luaC_runtilstate.exit3
  %60 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %61 = load i8* %58, align 1, !tbaa !67
  %62 = icmp eq i8 %61, 5
  br i1 %62, label %luaC_runtilstate.exit5, label %.lr.ph.i4

luaC_runtilstate.exit5:                           ; preds = %.lr.ph.i4, %luaC_runtilstate.exit3
  %63 = icmp eq i8 %4, 2
  br i1 %63, label %64, label %luaC_runtilstate.exit7

; <label>:64                                      ; preds = %luaC_runtilstate.exit5
  %65 = load %struct.global_State** %1, align 8, !tbaa !17
  %66 = getelementptr inbounds %struct.global_State* %65, i64 0, i32 10
  %67 = load i8* %66, align 1, !tbaa !67
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %luaC_runtilstate.exit7, label %.lr.ph.i6

.lr.ph.i6:                                        ; preds = %.lr.ph.i6, %64
  %69 = tail call fastcc i64 @singlestep(%struct.lua_State* %L) #3
  %70 = load i8* %66, align 1, !tbaa !67
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %luaC_runtilstate.exit7, label %.lr.ph.i6

luaC_runtilstate.exit7:                           ; preds = %.lr.ph.i6, %64, %luaC_runtilstate.exit5
  store i8 %4, i8* %3, align 1, !tbaa !65
  %72 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 2
  %73 = load i64* %72, align 8, !tbaa !64
  %74 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %75 = load i64* %74, align 8, !tbaa !33
  %76 = add i64 %75, %73
  %77 = sdiv i64 %76, 100
  %78 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 26
  %79 = load i32* %78, align 4, !tbaa !68
  %80 = sext i32 %79 to i64
  %81 = sdiv i64 9223372036854775804, %77
  %82 = icmp slt i64 %80, %81
  br i1 %82, label %83, label %setpause.exit

; <label>:83                                      ; preds = %luaC_runtilstate.exit7
  %84 = mul nsw i64 %80, %77
  br label %setpause.exit

setpause.exit:                                    ; preds = %83, %luaC_runtilstate.exit7
  %85 = phi i64 [ %84, %83 ], [ 9223372036854775804, %luaC_runtilstate.exit7 ]
  %86 = sub i64 %73, %85
  %87 = add i64 %86, %75
  tail call void bitcast (void (%struct.global_State.223*, i64)* @luaE_setdebt to void (%struct.global_State*, i64)*)(%struct.global_State* %2, i64 %87) #3
  br i1 %5, label %callallpendingfinalizers.exit9, label %88

; <label>:88                                      ; preds = %setpause.exit
  %89 = load %struct.global_State** %1, align 8, !tbaa !17
  %90 = getelementptr inbounds %struct.global_State* %89, i64 0, i32 23
  %91 = load %union.GCObject** %90, align 8, !tbaa !202
  %92 = icmp eq %union.GCObject* %91, null
  br i1 %92, label %callallpendingfinalizers.exit9, label %.lr.ph.i8

.lr.ph.i8:                                        ; preds = %.lr.ph.i8, %88
  %93 = phi %union.GCObject* [ %97, %.lr.ph.i8 ], [ %91, %88 ]
  %94 = getelementptr inbounds %union.GCObject* %93, i64 0, i32 0, i32 2
  %95 = load i8* %94, align 1, !tbaa !28
  %96 = and i8 %95, -65
  store i8 %96, i8* %94, align 1, !tbaa !28
  tail call fastcc void @GCTM(%struct.lua_State* %L, i32 1) #3
  %97 = load %union.GCObject** %90, align 8, !tbaa !202
  %98 = icmp eq %union.GCObject* %97, null
  br i1 %98, label %callallpendingfinalizers.exit9, label %.lr.ph.i8

callallpendingfinalizers.exit9:                   ; preds = %.lr.ph.i8, %88, %setpause.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %o) #0 {
  %1 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 2
  %2 = load i8* %1, align 1, !tbaa !28
  %3 = and i8 %2, -4
  store i8 %3, i8* %1, align 1, !tbaa !28
  %4 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 1
  %5 = load i8* %4, align 1, !tbaa !197
  %6 = zext i8 %5 to i32
  switch i32 %6, label %87 [
    i32 4, label %7
    i32 20, label %7
    i32 7, label %12
    i32 10, label %41
    i32 6, label %61
    i32 38, label %65
    i32 5, label %69
    i32 8, label %73
    i32 9, label %77
  ]

; <label>:7                                       ; preds = %0, %0
  %8 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 4
  %9 = bitcast %struct.lua_TValue** %8 to i64*
  %10 = load i64* %9, align 8, !tbaa !34
  %11 = add i64 %10, 25
  br label %81

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 4
  %14 = load %struct.lua_TValue** %13, align 8
  %15 = icmp eq %struct.lua_TValue* %14, null
  br i1 %15, label %24, label %16

; <label>:16                                      ; preds = %12
  %17 = bitcast %struct.lua_TValue* %14 to %struct.GCheader*
  %18 = getelementptr inbounds %struct.GCheader* %17, i64 0, i32 2
  %19 = load i8* %18, align 1, !tbaa !28
  %20 = and i8 %19, 3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %16
  %23 = bitcast %struct.lua_TValue* %14 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %23)
  br label %24

; <label>:24                                      ; preds = %22, %16, %12
  %25 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 5
  %26 = load %struct.global_State** %25, align 8
  %27 = icmp eq %struct.global_State* %26, null
  br i1 %27, label %36, label %28

; <label>:28                                      ; preds = %24
  %29 = bitcast %struct.global_State* %26 to %struct.GCheader*
  %30 = getelementptr inbounds %struct.GCheader* %29, i64 0, i32 2
  %31 = load i8* %30, align 1, !tbaa !28
  %32 = and i8 %31, 3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %36, label %34

; <label>:34                                      ; preds = %28
  %35 = bitcast %struct.global_State* %26 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %35)
  br label %36

; <label>:36                                      ; preds = %34, %28, %24
  %37 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 6
  %38 = bitcast %struct.CallInfo** %37 to i64*
  %39 = load i64* %38, align 8, !tbaa !36
  %40 = add i64 %39, 40
  br label %81

; <label>:41                                      ; preds = %0
  %42 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 4
  %43 = load %struct.lua_TValue** %42, align 8, !tbaa !75
  %44 = getelementptr inbounds %struct.lua_TValue* %43, i64 0, i32 1
  %45 = load i32* %44, align 4, !tbaa !15
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %56, label %48

; <label>:48                                      ; preds = %41
  %49 = getelementptr inbounds %struct.lua_TValue* %43, i64 0, i32 0, i32 0
  %50 = load %union.GCObject** %49, align 8, !tbaa !25
  %51 = getelementptr inbounds %union.GCObject* %50, i64 0, i32 0, i32 2
  %52 = load i8* %51, align 1, !tbaa !28
  %53 = and i8 %52, 3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %56, label %55

; <label>:55                                      ; preds = %48
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %50)
  %.pre = load %struct.lua_TValue** %42, align 8, !tbaa !75
  br label %56

; <label>:56                                      ; preds = %55, %48, %41
  %57 = phi %struct.lua_TValue* [ %43, %48 ], [ %43, %41 ], [ %.pre, %55 ]
  %58 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 5
  %59 = bitcast %struct.global_State** %58 to %struct.lua_TValue*
  %60 = icmp eq %struct.lua_TValue* %57, %59
  br i1 %60, label %81, label %87

; <label>:61                                      ; preds = %0
  %62 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 18
  %63 = load %union.GCObject** %62, align 8, !tbaa !205
  %64 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 4
  %.c3 = bitcast %union.GCObject* %63 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c3, %struct.lua_TValue** %64, align 8, !tbaa !206
  store %union.GCObject* %o, %union.GCObject** %62, align 8, !tbaa !205
  br label %87

; <label>:65                                      ; preds = %0
  %66 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 18
  %67 = load %union.GCObject** %66, align 8, !tbaa !205
  %68 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 4
  %.c2 = bitcast %union.GCObject* %67 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c2, %struct.lua_TValue** %68, align 8, !tbaa !207
  store %union.GCObject* %o, %union.GCObject** %66, align 8, !tbaa !205
  br label %87

; <label>:69                                      ; preds = %0
  %70 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 18
  %71 = load %union.GCObject** %70, align 8, !tbaa !25
  %72 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 8
  %.c1 = bitcast %union.GCObject* %71 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c1, %struct.lua_TValue** %72, align 8, !tbaa !195
  store %union.GCObject* %o, %union.GCObject** %70, align 8, !tbaa !25
  br label %87

; <label>:73                                      ; preds = %0
  %74 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 18
  %75 = load %union.GCObject** %74, align 8, !tbaa !205
  %76 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 19
  store %union.GCObject* %75, %union.GCObject** %76, align 8, !tbaa !208
  store %union.GCObject* %o, %union.GCObject** %74, align 8, !tbaa !205
  br label %87

; <label>:77                                      ; preds = %0
  %78 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 18
  %79 = load %union.GCObject** %78, align 8, !tbaa !205
  %80 = getelementptr inbounds %union.GCObject* %o, i64 0, i32 0, i32 20
  %.c = bitcast %union.GCObject* %79 to %struct.lua_longjmp*
  store %struct.lua_longjmp* %.c, %struct.lua_longjmp** %80, align 8, !tbaa !196
  store %union.GCObject* %o, %union.GCObject** %78, align 8, !tbaa !205
  br label %87

; <label>:81                                      ; preds = %56, %36, %7
  %size.0 = phi i64 [ %40, %36 ], [ %11, %7 ], [ 40, %56 ]
  %82 = load i8* %1, align 1, !tbaa !28
  %83 = or i8 %82, 4
  store i8 %83, i8* %1, align 1, !tbaa !28
  %84 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 4
  %85 = load i64* %84, align 8, !tbaa !209
  %86 = add i64 %85, %size.0
  store i64 %86, i64* %84, align 8, !tbaa !209
  br label %87

; <label>:87                                      ; preds = %81, %77, %73, %69, %65, %61, %56, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %p, i64 %count) #0 {
freeobj.exit.preheader:
  %0 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %1 = load %struct.global_State** %0, align 8, !tbaa !17
  %2 = getelementptr inbounds %struct.global_State* %1, i64 0, i32 9
  %3 = load i8* %2, align 1, !tbaa !188
  %4 = zext i8 %3 to i32
  %5 = xor i32 %4, 3
  %6 = getelementptr inbounds %struct.global_State* %1, i64 0, i32 11
  %7 = load i8* %6, align 1, !tbaa !65
  %8 = icmp eq i8 %7, 2
  %9 = and i8 %3, 3
  %. = select i1 %8, i8 -1, i8 -72
  %.14 = select i1 %8, i8 64, i8 %9
  %.15 = select i1 %8, i32 64, i32 0
  %10 = load %union.GCObject** %p, align 8, !tbaa !25
  %11 = icmp eq %union.GCObject* %10, null
  br i1 %11, label %.thread, label %.lr.ph

.lr.ph:                                           ; preds = %freeobj.exit.backedge, %freeobj.exit.preheader
  %12 = phi %union.GCObject* [ %94, %freeobj.exit.backedge ], [ %10, %freeobj.exit.preheader ]
  %.019 = phi %union.GCObject** [ %.01.be, %freeobj.exit.backedge ], [ %p, %freeobj.exit.preheader ]
  %.028 = phi i64 [ %13, %freeobj.exit.backedge ], [ %count, %freeobj.exit.preheader ]
  %13 = add i64 %.028, -1
  %14 = icmp eq i64 %.028, 0
  br i1 %14, label %.thread, label %15

; <label>:15                                      ; preds = %.lr.ph
  %16 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 2
  %17 = load i8* %16, align 1, !tbaa !28
  %18 = zext i8 %17 to i32
  %19 = xor i32 %18, 3
  %20 = and i32 %19, %5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %71

; <label>:22                                      ; preds = %15
  %23 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 0
  %24 = load %union.GCObject** %23, align 8, !tbaa !192
  store %union.GCObject* %24, %union.GCObject** %.019, align 8, !tbaa !25
  %25 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 1
  %26 = load i8* %25, align 1, !tbaa !197
  %27 = zext i8 %26 to i32
  switch i32 %27, label %freeobj.exit.backedge [
    i32 9, label %28
    i32 6, label %30
    i32 38, label %38
    i32 10, label %46
    i32 5, label %48
    i32 8, label %50
    i32 7, label %52
    i32 4, label %59
    i32 20, label %64
  ]

; <label>:28                                      ; preds = %22
  %29 = bitcast %union.GCObject* %12 to %struct.Proto*
  tail call void bitcast (void (%struct.lua_State.126*, %struct.Proto.132*)* @luaF_freeproto to void (%struct.lua_State*, %struct.Proto*)*)(%struct.lua_State* %L, %struct.Proto* %29) #3
  br label %freeobj.exit.backedge

; <label>:30                                      ; preds = %22
  %31 = bitcast %union.GCObject* %12 to i8*
  %32 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 3
  %33 = load i8* %32, align 1, !tbaa !60
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  %36 = add i64 %35, 32
  %37 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %31, i64 %36, i64 0) #3
  br label %freeobj.exit.backedge

; <label>:38                                      ; preds = %22
  %39 = bitcast %union.GCObject* %12 to i8*
  %40 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 3
  %41 = load i8* %40, align 1, !tbaa !26
  %42 = zext i8 %41 to i64
  %43 = shl nuw nsw i64 %42, 4
  %44 = add i64 %43, 32
  %45 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %39, i64 %44, i64 0) #3
  br label %freeobj.exit.backedge

; <label>:46                                      ; preds = %22
  %47 = bitcast %union.GCObject* %12 to %struct.UpVal*
  tail call void bitcast (void (%struct.lua_State.126*, %struct.UpVal.112*)* @luaF_freeupval to void (%struct.lua_State*, %struct.UpVal*)*)(%struct.lua_State* %L, %struct.UpVal* %47) #3
  br label %freeobj.exit.backedge

; <label>:48                                      ; preds = %22
  %49 = bitcast %union.GCObject* %12 to %struct.Table*
  tail call void @luaH_free(%struct.lua_State* %L, %struct.Table* %49) #3
  br label %freeobj.exit.backedge

; <label>:50                                      ; preds = %22
  %51 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0
  tail call void bitcast (void (%struct.lua_State.228*, %struct.lua_State.228*)* @luaE_freethread to void (%struct.lua_State*, %struct.lua_State*)*)(%struct.lua_State* %L, %struct.lua_State* %51) #3
  br label %freeobj.exit.backedge

; <label>:52                                      ; preds = %22
  %53 = bitcast %union.GCObject* %12 to i8*
  %54 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 6
  %55 = bitcast %struct.CallInfo** %54 to i64*
  %56 = load i64* %55, align 8, !tbaa !36
  %57 = add i64 %56, 40
  %58 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %53, i64 %57, i64 0) #3
  br label %freeobj.exit.backedge

; <label>:59                                      ; preds = %22
  %60 = load %struct.global_State** %0, align 8, !tbaa !17
  %61 = getelementptr inbounds %struct.global_State* %60, i64 0, i32 6, i32 1
  %62 = load i32* %61, align 4, !tbaa !210
  %63 = add i32 %62, -1
  store i32 %63, i32* %61, align 4, !tbaa !210
  br label %64

; <label>:64                                      ; preds = %59, %22
  %65 = bitcast %union.GCObject* %12 to i8*
  %66 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 4
  %67 = bitcast %struct.lua_TValue** %66 to i64*
  %68 = load i64* %67, align 8, !tbaa !34
  %69 = add i64 %68, 25
  %70 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %65, i64 %69, i64 0) #3
  br label %freeobj.exit.backedge

; <label>:71                                      ; preds = %15
  %72 = and i32 %18, %.15
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %.loopexit3

; <label>:74                                      ; preds = %71
  %75 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 1
  %76 = load i8* %75, align 1, !tbaa !197
  %77 = icmp eq i8 %76, 8
  br i1 %77, label %78, label %sweepthread.exit

; <label>:78                                      ; preds = %74
  %79 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0
  %80 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 9
  %81 = load %struct.lua_TValue** %80, align 8, !tbaa !13
  %82 = icmp eq %struct.lua_TValue* %81, null
  br i1 %82, label %sweepthread.exit, label %83

; <label>:83                                      ; preds = %78
  %84 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 18
  %85 = tail call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %84, i64 -3) #3
  tail call void bitcast (void (%struct.lua_State.228*)* @luaE_freeCI to void (%struct.lua_State*)*)(%struct.lua_State* %79) #3
  %86 = load %struct.global_State** %0, align 8, !tbaa !17
  %87 = getelementptr inbounds %struct.global_State* %86, i64 0, i32 11
  %88 = load i8* %87, align 1, !tbaa !65
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %sweepthread.exit, label %90

; <label>:90                                      ; preds = %83
  tail call void @luaD_shrinkstack(%struct.lua_State* %79) #3
  br label %sweepthread.exit

sweepthread.exit:                                 ; preds = %90, %83, %78, %74
  %91 = and i8 %17, %.
  %92 = or i8 %91, %.14
  store i8 %92, i8* %16, align 1, !tbaa !28
  %93 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 0
  br label %freeobj.exit.backedge

freeobj.exit.backedge:                            ; preds = %sweepthread.exit, %64, %52, %50, %48, %46, %38, %30, %28, %22
  %.01.be = phi %union.GCObject** [ %93, %sweepthread.exit ], [ %.019, %22 ], [ %.019, %28 ], [ %.019, %30 ], [ %.019, %38 ], [ %.019, %46 ], [ %.019, %48 ], [ %.019, %50 ], [ %.019, %52 ], [ %.019, %64 ]
  %94 = load %union.GCObject** %.01.be, align 8, !tbaa !25
  %95 = icmp eq %union.GCObject* %94, null
  br i1 %95, label %.thread, label %.lr.ph

.thread:                                          ; preds = %freeobj.exit.backedge, %.lr.ph, %freeobj.exit.preheader
  %.016 = phi %union.GCObject** [ %p, %freeobj.exit.preheader ], [ %.019, %.lr.ph ], [ %.01.be, %freeobj.exit.backedge ]
  %96 = phi %union.GCObject* [ null, %freeobj.exit.preheader ], [ %12, %.lr.ph ], [ null, %freeobj.exit.backedge ]
  %97 = icmp eq %union.GCObject* %96, null
  %98 = select i1 %97, %union.GCObject** null, %union.GCObject** %.016
  br label %.loopexit3

.loopexit3:                                       ; preds = %.thread, %71
  %.0 = phi %union.GCObject** [ %98, %.thread ], [ null, %71 ]
  ret %union.GCObject** %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @singlestep(%struct.lua_State* %L) #0 {
  %mt = alloca %union.GCObject*, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %4 = load i8* %3, align 1, !tbaa !67
  %5 = zext i8 %4 to i32
  switch i32 %5, label %397 [
    i32 5, label %9
    i32 0, label %54
    i32 2, label %.preheader
    i32 3, label %361
    i32 4, label %368
  ]

.preheader:                                       ; preds = %0
  %6 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 13
  %7 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 6, i32 2
  %8 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 6, i32 0
  br label %341

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 6, i32 2
  %11 = load i32* %10, align 4, !tbaa !203
  %12 = sext i32 %11 to i64
  %13 = shl nsw i64 %12, 3
  %14 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 4
  store i64 %13, i64* %14, align 8, !tbaa !209
  %15 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 18
  %16 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 30
  %17 = bitcast %union.GCObject** %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 40, i32 8, i1 false) #3
  %18 = load %struct.lua_State** %16, align 8, !tbaa !40
  %19 = icmp eq %struct.lua_State* %18, null
  br i1 %19, label %27, label %20

; <label>:20                                      ; preds = %9
  %21 = getelementptr inbounds %struct.lua_State* %18, i64 0, i32 2
  %22 = load i8* %21, align 1, !tbaa !28
  %23 = and i8 %22, 3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

; <label>:25                                      ; preds = %20
  %26 = bitcast %struct.lua_State* %18 to %union.GCObject*
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %26) #3
  br label %27

; <label>:27                                      ; preds = %25, %20, %9
  %28 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 7, i32 1
  %29 = load i32* %28, align 4, !tbaa !15
  %30 = and i32 %29, 64
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %40, label %32

; <label>:32                                      ; preds = %27
  %33 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 7, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %union.GCObject* %34, i64 0, i32 0, i32 2
  %36 = load i8* %35, align 1, !tbaa !28
  %37 = and i8 %36, 3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

; <label>:39                                      ; preds = %32
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %34) #3
  br label %40

; <label>:40                                      ; preds = %39, %32, %27
  call fastcc void @markmt(%struct.global_State* %2) #3
  %41 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 23
  %o.01.i.i = load %union.GCObject** %41, align 8
  %42 = icmp eq %union.GCObject* %o.01.i.i, null
  br i1 %42, label %restartcollection.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %40
  %43 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  br label %44

; <label>:44                                      ; preds = %44, %.lr.ph.i.i
  %o.02.i.i = phi %union.GCObject* [ %o.01.i.i, %.lr.ph.i.i ], [ %o.0.i.i, %44 ]
  %45 = getelementptr inbounds %union.GCObject* %o.02.i.i, i64 0, i32 0, i32 2
  %46 = load i8* %45, align 1, !tbaa !28
  %47 = and i8 %46, -72
  %48 = load i8* %43, align 1, !tbaa !188
  %49 = and i8 %48, 3
  %50 = or i8 %49, %47
  store i8 %50, i8* %45, align 1, !tbaa !28
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %o.02.i.i) #3
  %51 = getelementptr inbounds %union.GCObject* %o.02.i.i, i64 0, i32 0, i32 0
  %o.0.i.i = load %union.GCObject** %51, align 8
  %52 = icmp eq %union.GCObject* %o.0.i.i, null
  br i1 %52, label %restartcollection.exit, label %44

restartcollection.exit:                           ; preds = %44, %40
  store i8 0, i8* %3, align 1, !tbaa !67
  %53 = load i64* %14, align 8, !tbaa !209
  br label %397

; <label>:54                                      ; preds = %0
  %55 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 18
  %56 = load %union.GCObject** %55, align 8, !tbaa !205
  %57 = icmp eq %union.GCObject* %56, null
  br i1 %57, label %63, label %58

; <label>:58                                      ; preds = %54
  %59 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 4
  %60 = load i64* %59, align 8, !tbaa !209
  call fastcc void @propagatemark(%struct.global_State* %2)
  %61 = load i64* %59, align 8, !tbaa !209
  %62 = sub i64 %61, %60
  br label %397

; <label>:63                                      ; preds = %54
  store i8 1, i8* %3, align 1, !tbaa !67
  %64 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 4
  %65 = load i64* %64, align 8, !tbaa !209
  %66 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 5
  store i64 %65, i64* %66, align 8, !tbaa !66
  %67 = icmp eq %struct.lua_State* %L, null
  br i1 %67, label %75, label %68

; <label>:68                                      ; preds = %63
  %69 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 2
  %70 = load i8* %69, align 1, !tbaa !28
  %71 = and i8 %70, 3
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %75, label %73

; <label>:73                                      ; preds = %68
  %74 = bitcast %struct.lua_State* %L to %union.GCObject*
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %74) #3
  br label %75

; <label>:75                                      ; preds = %73, %68, %63
  %76 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 7, i32 1
  %77 = load i32* %76, align 4, !tbaa !15
  %78 = and i32 %77, 64
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %88, label %80

; <label>:80                                      ; preds = %75
  %81 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 7, i32 0, i32 0
  %82 = load %union.GCObject** %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %union.GCObject* %82, i64 0, i32 0, i32 2
  %84 = load i8* %83, align 1, !tbaa !28
  %85 = and i8 %84, 3
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %88, label %87

; <label>:87                                      ; preds = %80
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %82) #3
  br label %88

; <label>:88                                      ; preds = %87, %80, %75
  call fastcc void @markmt(%struct.global_State* %2) #3
  %89 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 24
  %90 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 24, i32 4, i32 0, i32 1
  %uv.0.in1.i.i = bitcast i32* %90 to %struct.UpVal**
  %uv.02.i.i = load %struct.UpVal** %uv.0.in1.i.i, align 8
  %91 = icmp eq %struct.UpVal* %uv.02.i.i, %89
  br i1 %91, label %remarkupvals.exit.i, label %.lr.ph.i.i1

.lr.ph.i.i1:                                      ; preds = %111, %88
  %uv.03.i.i = phi %struct.UpVal* [ %uv.0.i.i, %111 ], [ %uv.02.i.i, %88 ]
  %92 = getelementptr inbounds %struct.UpVal* %uv.03.i.i, i64 0, i32 2
  %93 = load i8* %92, align 1, !tbaa !28
  %94 = and i8 %93, 7
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %111

; <label>:96                                      ; preds = %.lr.ph.i.i1
  %97 = getelementptr inbounds %struct.UpVal* %uv.03.i.i, i64 0, i32 3
  %98 = load %struct.lua_TValue** %97, align 8, !tbaa !75
  %99 = getelementptr inbounds %struct.lua_TValue* %98, i64 0, i32 1
  %100 = load i32* %99, align 4, !tbaa !15
  %101 = and i32 %100, 64
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %111, label %103

; <label>:103                                     ; preds = %96
  %104 = getelementptr inbounds %struct.lua_TValue* %98, i64 0, i32 0, i32 0
  %105 = load %union.GCObject** %104, align 8, !tbaa !25
  %106 = getelementptr inbounds %union.GCObject* %105, i64 0, i32 0, i32 2
  %107 = load i8* %106, align 1, !tbaa !28
  %108 = and i8 %107, 3
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %111, label %110

; <label>:110                                     ; preds = %103
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %105) #3
  br label %111

; <label>:111                                     ; preds = %110, %103, %96, %.lr.ph.i.i1
  %112 = getelementptr inbounds %struct.UpVal* %uv.03.i.i, i64 0, i32 4, i32 0, i32 1
  %uv.0.in.i.i = bitcast i32* %112 to %struct.UpVal**
  %uv.0.i.i = load %struct.UpVal** %uv.0.in.i.i, align 8
  %113 = icmp eq %struct.UpVal* %uv.0.i.i, %89
  br i1 %113, label %remarkupvals.exit.i, label %.lr.ph.i.i1

remarkupvals.exit.i:                              ; preds = %111, %88
  %114 = load %union.GCObject** %55, align 8, !tbaa !205
  %115 = icmp eq %union.GCObject* %114, null
  br i1 %115, label %propagateall.exit.i.i, label %.lr.ph.i1.i

.lr.ph.i1.i:                                      ; preds = %.lr.ph.i1.i, %remarkupvals.exit.i
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %116 = load %union.GCObject** %55, align 8, !tbaa !205
  %117 = icmp eq %union.GCObject* %116, null
  br i1 %117, label %propagateall.exit.i.i, label %.lr.ph.i1.i

propagateall.exit.i.i:                            ; preds = %.lr.ph.i1.i, %remarkupvals.exit.i
  %118 = load i64* %64, align 8, !tbaa !209
  %119 = sub i64 %118, %65
  %120 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 20
  %121 = load %union.GCObject** %120, align 8, !tbaa !211
  %122 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 19
  %123 = load %union.GCObject** %122, align 8, !tbaa !194
  %124 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 21
  %125 = load %union.GCObject** %124, align 8, !tbaa !212
  %126 = bitcast %union.GCObject** %122 to i8*
  call void @llvm.memset.p0i8.i64(i8* %126, i8 0, i64 24, i32 8, i1 false) #3
  store %union.GCObject* %123, %union.GCObject** %55, align 8, !tbaa !205
  %127 = icmp eq %union.GCObject* %123, null
  br i1 %127, label %propagatelist.exit.i.i, label %.lr.ph.i.i.i.i

.lr.ph.i.i.i.i:                                   ; preds = %.lr.ph.i.i.i.i, %propagateall.exit.i.i
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %128 = load %union.GCObject** %55, align 8, !tbaa !205
  %129 = icmp eq %union.GCObject* %128, null
  br i1 %129, label %propagatelist.exit.i.i, label %.lr.ph.i.i.i.i

propagatelist.exit.i.i:                           ; preds = %.lr.ph.i.i.i.i, %propagateall.exit.i.i
  store %union.GCObject* %121, %union.GCObject** %55, align 8, !tbaa !205
  %130 = icmp eq %union.GCObject* %121, null
  br i1 %130, label %propagatelist.exit2.i.i, label %.lr.ph.i.i1.i.i

.lr.ph.i.i1.i.i:                                  ; preds = %.lr.ph.i.i1.i.i, %propagatelist.exit.i.i
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %131 = load %union.GCObject** %55, align 8, !tbaa !205
  %132 = icmp eq %union.GCObject* %131, null
  br i1 %132, label %propagatelist.exit2.i.i, label %.lr.ph.i.i1.i.i

propagatelist.exit2.i.i:                          ; preds = %.lr.ph.i.i1.i.i, %propagatelist.exit.i.i
  store %union.GCObject* %125, %union.GCObject** %55, align 8, !tbaa !205
  %133 = icmp eq %union.GCObject* %125, null
  br i1 %133, label %retraversegrays.exit.i, label %.lr.ph.i.i3.i.i

.lr.ph.i.i3.i.i:                                  ; preds = %.lr.ph.i.i3.i.i, %propagatelist.exit2.i.i
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %134 = load %union.GCObject** %55, align 8, !tbaa !205
  %135 = icmp eq %union.GCObject* %134, null
  br i1 %135, label %retraversegrays.exit.i, label %.lr.ph.i.i3.i.i

retraversegrays.exit.i:                           ; preds = %.lr.ph.i.i3.i.i, %propagatelist.exit2.i.i
  %136 = load i64* %64, align 8, !tbaa !209
  br label %137

; <label>:137                                     ; preds = %152, %retraversegrays.exit.i
  %138 = load %union.GCObject** %124, align 8, !tbaa !212
  store %union.GCObject* null, %union.GCObject** %124, align 8, !tbaa !212
  br label %propagateall.exit.outer.i.i

propagateall.exit.outer.i.i:                      ; preds = %.lr.ph.i.i3.i, %147, %137
  %changed.0.ph.i.i = phi i32 [ 0, %137 ], [ 1, %.lr.ph.i.i3.i ], [ 1, %147 ]
  %next.0.ph.i.i = phi %union.GCObject* [ %138, %137 ], [ %144, %.lr.ph.i.i3.i ], [ %144, %147 ]
  br label %propagateall.exit.i2.i

propagateall.exit.i2.i:                           ; preds = %140, %propagateall.exit.outer.i.i
  %next.0.i.i = phi %union.GCObject* [ %144, %140 ], [ %next.0.ph.i.i, %propagateall.exit.outer.i.i ]
  %139 = icmp eq %union.GCObject* %next.0.i.i, null
  br i1 %139, label %152, label %140

; <label>:140                                     ; preds = %propagateall.exit.i2.i
  %141 = bitcast %union.GCObject* %next.0.i.i to %struct.Table*
  %142 = getelementptr inbounds %union.GCObject* %next.0.i.i, i64 0, i32 0, i32 8
  %143 = load %struct.lua_TValue** %142, align 8
  %144 = bitcast %struct.lua_TValue* %143 to %union.GCObject*
  %145 = call fastcc i32 @traverseephemeron(%struct.global_State* %2, %struct.Table* %141) #3
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %propagateall.exit.i2.i, label %147

; <label>:147                                     ; preds = %140
  %148 = load %union.GCObject** %55, align 8, !tbaa !205
  %149 = icmp eq %union.GCObject* %148, null
  br i1 %149, label %propagateall.exit.outer.i.i, label %.lr.ph.i.i3.i

.lr.ph.i.i3.i:                                    ; preds = %.lr.ph.i.i3.i, %147
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %150 = load %union.GCObject** %55, align 8, !tbaa !205
  %151 = icmp eq %union.GCObject* %150, null
  br i1 %151, label %propagateall.exit.outer.i.i, label %.lr.ph.i.i3.i

; <label>:152                                     ; preds = %propagateall.exit.i2.i
  %153 = icmp eq i32 %changed.0.ph.i.i, 0
  br i1 %153, label %convergeephemerons.exit.i, label %137

convergeephemerons.exit.i:                        ; preds = %152
  %154 = load %union.GCObject** %120, align 8, !tbaa !211
  call fastcc void @clearvalues(%struct.global_State* %2, %union.GCObject* %154, %union.GCObject* null) #3
  %155 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 22
  %156 = load %union.GCObject** %155, align 8, !tbaa !213
  call fastcc void @clearvalues(%struct.global_State* %2, %union.GCObject* %156, %union.GCObject* null) #3
  %157 = load %union.GCObject** %120, align 8, !tbaa !211
  %158 = load %union.GCObject** %155, align 8, !tbaa !213
  %159 = load i64* %64, align 8, !tbaa !209
  %160 = load %struct.global_State** %1, align 8, !tbaa !17
  %161 = getelementptr inbounds %struct.global_State* %160, i64 0, i32 23
  br label %162

; <label>:162                                     ; preds = %162, %convergeephemerons.exit.i
  %lastnext.0.i.i = phi %union.GCObject** [ %161, %convergeephemerons.exit.i ], [ %165, %162 ]
  %163 = load %union.GCObject** %lastnext.0.i.i, align 8, !tbaa !25
  %164 = icmp eq %union.GCObject* %163, null
  %165 = getelementptr inbounds %union.GCObject* %163, i64 0, i32 0, i32 0
  br i1 %164, label %.preheader.i.i, label %162

.preheader.i.i:                                   ; preds = %162
  %166 = sub i64 %119, %136
  %167 = add i64 %166, %159
  %168 = getelementptr inbounds %struct.global_State* %160, i64 0, i32 15
  %169 = load %union.GCObject** %168, align 8, !tbaa !25
  %170 = icmp eq %union.GCObject* %169, null
  br i1 %170, label %separatetobefnz.exit.i, label %.lr.ph.i4.i

; <label>:171                                     ; preds = %181, %.lr.ph.i4.i
  %172 = phi %union.GCObject* [ %180, %.lr.ph.i4.i ], [ %186, %181 ]
  %lastnext.14.i.i = phi %union.GCObject** [ %lastnext.1.ph6.i.i, %.lr.ph.i4.i ], [ %183, %181 ]
  %173 = getelementptr inbounds %union.GCObject* %172, i64 0, i32 0, i32 2
  %174 = load i8* %173, align 1, !tbaa !28
  %175 = and i8 %174, 3
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %.outer.i.i, label %181

.outer.i.i:                                       ; preds = %171
  %177 = getelementptr inbounds %union.GCObject* %172, i64 0, i32 0, i32 0
  %178 = load %union.GCObject** %177, align 8, !tbaa !25
  %179 = icmp eq %union.GCObject* %178, null
  br i1 %179, label %separatetobefnz.exit.i, label %.lr.ph.i4.i

.lr.ph.i4.i:                                      ; preds = %.outer.i.i, %.preheader.i.i
  %180 = phi %union.GCObject* [ %178, %.outer.i.i ], [ %169, %.preheader.i.i ]
  %lastnext.1.ph6.i.i = phi %union.GCObject** [ %lastnext.14.i.i, %.outer.i.i ], [ %lastnext.0.i.i, %.preheader.i.i ]
  %p.0.ph5.i.i = phi %union.GCObject** [ %177, %.outer.i.i ], [ %168, %.preheader.i.i ]
  br label %171

; <label>:181                                     ; preds = %171
  %182 = or i8 %174, 8
  store i8 %182, i8* %173, align 1, !tbaa !28
  %183 = getelementptr inbounds %union.GCObject* %172, i64 0, i32 0, i32 0
  %184 = load %union.GCObject** %183, align 8, !tbaa !192
  store %union.GCObject* %184, %union.GCObject** %p.0.ph5.i.i, align 8, !tbaa !25
  %185 = load %union.GCObject** %lastnext.14.i.i, align 8, !tbaa !25
  store %union.GCObject* %185, %union.GCObject** %183, align 8, !tbaa !192
  store %union.GCObject* %172, %union.GCObject** %lastnext.14.i.i, align 8, !tbaa !25
  %186 = load %union.GCObject** %p.0.ph5.i.i, align 8, !tbaa !25
  %187 = icmp eq %union.GCObject* %186, null
  br i1 %187, label %separatetobefnz.exit.i, label %171

separatetobefnz.exit.i:                           ; preds = %181, %.outer.i.i, %.preheader.i.i
  %188 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 23
  %o.01.i.i2 = load %union.GCObject** %188, align 8
  %189 = icmp eq %union.GCObject* %o.01.i.i2, null
  br i1 %189, label %markbeingfnz.exit.i, label %.lr.ph.i5.i

.lr.ph.i5.i:                                      ; preds = %separatetobefnz.exit.i
  %190 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  br label %191

; <label>:191                                     ; preds = %191, %.lr.ph.i5.i
  %o.02.i.i3 = phi %union.GCObject* [ %o.01.i.i2, %.lr.ph.i5.i ], [ %o.0.i.i4, %191 ]
  %192 = getelementptr inbounds %union.GCObject* %o.02.i.i3, i64 0, i32 0, i32 2
  %193 = load i8* %192, align 1, !tbaa !28
  %194 = and i8 %193, -72
  %195 = load i8* %190, align 1, !tbaa !188
  %196 = and i8 %195, 3
  %197 = or i8 %196, %194
  store i8 %197, i8* %192, align 1, !tbaa !28
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %o.02.i.i3) #3
  %198 = getelementptr inbounds %union.GCObject* %o.02.i.i3, i64 0, i32 0, i32 0
  %o.0.i.i4 = load %union.GCObject** %198, align 8
  %199 = icmp eq %union.GCObject* %o.0.i.i4, null
  br i1 %199, label %markbeingfnz.exit.i, label %191

markbeingfnz.exit.i:                              ; preds = %191, %separatetobefnz.exit.i
  %200 = load %union.GCObject** %55, align 8, !tbaa !205
  %201 = icmp eq %union.GCObject* %200, null
  br i1 %201, label %propagateall.exit7.i, label %.lr.ph.i6.i

.lr.ph.i6.i:                                      ; preds = %.lr.ph.i6.i, %markbeingfnz.exit.i
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %202 = load %union.GCObject** %55, align 8, !tbaa !205
  %203 = icmp eq %union.GCObject* %202, null
  br i1 %203, label %propagateall.exit7.i, label %.lr.ph.i6.i

propagateall.exit7.i:                             ; preds = %.lr.ph.i6.i, %markbeingfnz.exit.i
  %204 = load i64* %64, align 8, !tbaa !209
  br label %205

; <label>:205                                     ; preds = %220, %propagateall.exit7.i
  %206 = load %union.GCObject** %124, align 8, !tbaa !212
  store %union.GCObject* null, %union.GCObject** %124, align 8, !tbaa !212
  br label %propagateall.exit.outer.i10.i

propagateall.exit.outer.i10.i:                    ; preds = %.lr.ph.i.i13.i, %215, %205
  %changed.0.ph.i8.i = phi i32 [ 0, %205 ], [ 1, %.lr.ph.i.i13.i ], [ 1, %215 ]
  %next.0.ph.i9.i = phi %union.GCObject* [ %206, %205 ], [ %212, %.lr.ph.i.i13.i ], [ %212, %215 ]
  br label %propagateall.exit.i12.i

propagateall.exit.i12.i:                          ; preds = %208, %propagateall.exit.outer.i10.i
  %next.0.i11.i = phi %union.GCObject* [ %212, %208 ], [ %next.0.ph.i9.i, %propagateall.exit.outer.i10.i ]
  %207 = icmp eq %union.GCObject* %next.0.i11.i, null
  br i1 %207, label %220, label %208

; <label>:208                                     ; preds = %propagateall.exit.i12.i
  %209 = bitcast %union.GCObject* %next.0.i11.i to %struct.Table*
  %210 = getelementptr inbounds %union.GCObject* %next.0.i11.i, i64 0, i32 0, i32 8
  %211 = load %struct.lua_TValue** %210, align 8
  %212 = bitcast %struct.lua_TValue* %211 to %union.GCObject*
  %213 = call fastcc i32 @traverseephemeron(%struct.global_State* %2, %struct.Table* %209) #3
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %propagateall.exit.i12.i, label %215

; <label>:215                                     ; preds = %208
  %216 = load %union.GCObject** %55, align 8, !tbaa !205
  %217 = icmp eq %union.GCObject* %216, null
  br i1 %217, label %propagateall.exit.outer.i10.i, label %.lr.ph.i.i13.i

.lr.ph.i.i13.i:                                   ; preds = %.lr.ph.i.i13.i, %215
  call fastcc void @propagatemark(%struct.global_State* %2) #3
  %218 = load %union.GCObject** %55, align 8, !tbaa !205
  %219 = icmp eq %union.GCObject* %218, null
  br i1 %219, label %propagateall.exit.outer.i10.i, label %.lr.ph.i.i13.i

; <label>:220                                     ; preds = %propagateall.exit.i12.i
  %221 = icmp eq i32 %changed.0.ph.i8.i, 0
  br i1 %221, label %convergeephemerons.exit14.i, label %205

convergeephemerons.exit14.i:                      ; preds = %220
  %222 = sub i64 %167, %204
  %223 = load %union.GCObject** %124, align 8, !tbaa !212
  %224 = icmp eq %union.GCObject* %223, null
  br i1 %224, label %clearkeys.exit.i, label %.lr.ph4.i.i

.lr.ph4.i.i:                                      ; preds = %._crit_edge.i.i, %convergeephemerons.exit14.i
  %.02.i.i = phi %union.GCObject* [ %266, %._crit_edge.i.i ], [ %223, %convergeephemerons.exit14.i ]
  %225 = bitcast %union.GCObject* %.02.i.i to %struct.Table*
  %226 = getelementptr inbounds %struct.Table* %225, i64 0, i32 4
  %227 = load i8* %226, align 1, !tbaa !214
  %228 = zext i8 %227 to i32
  %229 = shl i32 1, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds %union.GCObject* %.02.i.i, i64 0, i32 0, i32 6
  %232 = load %struct.CallInfo** %231, align 8
  %233 = bitcast %struct.CallInfo* %232 to %struct.Node*
  %234 = getelementptr inbounds %struct.Node* %233, i64 %230
  %235 = icmp ult %struct.Node* %233, %234
  br i1 %235, label %.lr.ph.i15.i, label %._crit_edge.i.i

.lr.ph.i15.i:                                     ; preds = %removeentry.exit.i.i, %.lr.ph4.i.i
  %n.01.i.i = phi %struct.Node* [ %262, %removeentry.exit.i.i ], [ %233, %.lr.ph4.i.i ]
  %236 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 0, i32 1
  %237 = load i32* %236, align 4, !tbaa !15
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %removeentry.exit.i.i, label %239

; <label>:239                                     ; preds = %.lr.ph.i15.i
  %240 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 1, i32 0, i32 1
  %241 = load i32* %240, align 4, !tbaa !15
  %242 = and i32 %241, 64
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %removeentry.exit.i.i, label %244

; <label>:244                                     ; preds = %239
  %245 = and i32 %241, 15
  %246 = icmp eq i32 %245, 4
  %247 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %248 = load %union.GCObject** %247, align 8, !tbaa !25
  br i1 %246, label %249, label %iscleared.exit.i.i

; <label>:249                                     ; preds = %244
  %250 = icmp eq %union.GCObject* %248, null
  br i1 %250, label %removeentry.exit.i.i, label %251

; <label>:251                                     ; preds = %249
  %252 = getelementptr inbounds %union.GCObject* %248, i64 0, i32 0, i32 2
  %253 = load i8* %252, align 1, !tbaa !28
  %254 = and i8 %253, 3
  %255 = icmp eq i8 %254, 0
  br i1 %255, label %removeentry.exit.i.i, label %256

; <label>:256                                     ; preds = %251
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %248) #3
  br label %removeentry.exit.i.i

iscleared.exit.i.i:                               ; preds = %244
  %257 = getelementptr inbounds %union.GCObject* %248, i64 0, i32 0, i32 2
  %258 = load i8* %257, align 1, !tbaa !28
  %259 = and i8 %258, 3
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %removeentry.exit.i.i, label %261

; <label>:261                                     ; preds = %iscleared.exit.i.i
  store i32 0, i32* %236, align 4, !tbaa !15
  store i32 11, i32* %240, align 4, !tbaa !15
  br label %removeentry.exit.i.i

removeentry.exit.i.i:                             ; preds = %261, %iscleared.exit.i.i, %256, %251, %249, %239, %.lr.ph.i15.i
  %262 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 1
  %263 = icmp ult %struct.Node* %262, %234
  br i1 %263, label %.lr.ph.i15.i, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %removeentry.exit.i.i, %.lr.ph4.i.i
  %264 = getelementptr inbounds %union.GCObject* %.02.i.i, i64 0, i32 0, i32 8
  %265 = load %struct.lua_TValue** %264, align 8
  %266 = bitcast %struct.lua_TValue* %265 to %union.GCObject*
  %267 = icmp eq %struct.lua_TValue* %265, null
  br i1 %267, label %clearkeys.exit.i, label %.lr.ph4.i.i

clearkeys.exit.i:                                 ; preds = %._crit_edge.i.i, %convergeephemerons.exit14.i
  %268 = load %union.GCObject** %155, align 8, !tbaa !213
  %269 = icmp eq %union.GCObject* %268, null
  br i1 %269, label %atomic.exit, label %.lr.ph4.i17.i

.lr.ph4.i17.i:                                    ; preds = %._crit_edge.i22.i, %clearkeys.exit.i
  %.02.i16.i = phi %union.GCObject* [ %311, %._crit_edge.i22.i ], [ %268, %clearkeys.exit.i ]
  %270 = bitcast %union.GCObject* %.02.i16.i to %struct.Table*
  %271 = getelementptr inbounds %struct.Table* %270, i64 0, i32 4
  %272 = load i8* %271, align 1, !tbaa !214
  %273 = zext i8 %272 to i32
  %274 = shl i32 1, %273
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds %union.GCObject* %.02.i16.i, i64 0, i32 0, i32 6
  %277 = load %struct.CallInfo** %276, align 8
  %278 = bitcast %struct.CallInfo* %277 to %struct.Node*
  %279 = getelementptr inbounds %struct.Node* %278, i64 %275
  %280 = icmp ult %struct.Node* %278, %279
  br i1 %280, label %.lr.ph.i19.i, label %._crit_edge.i22.i

.lr.ph.i19.i:                                     ; preds = %removeentry.exit.i21.i, %.lr.ph4.i17.i
  %n.01.i18.i = phi %struct.Node* [ %307, %removeentry.exit.i21.i ], [ %278, %.lr.ph4.i17.i ]
  %281 = getelementptr inbounds %struct.Node* %n.01.i18.i, i64 0, i32 0, i32 1
  %282 = load i32* %281, align 4, !tbaa !15
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %removeentry.exit.i21.i, label %284

; <label>:284                                     ; preds = %.lr.ph.i19.i
  %285 = getelementptr inbounds %struct.Node* %n.01.i18.i, i64 0, i32 1, i32 0, i32 1
  %286 = load i32* %285, align 4, !tbaa !15
  %287 = and i32 %286, 64
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %removeentry.exit.i21.i, label %289

; <label>:289                                     ; preds = %284
  %290 = and i32 %286, 15
  %291 = icmp eq i32 %290, 4
  %292 = getelementptr inbounds %struct.Node* %n.01.i18.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %293 = load %union.GCObject** %292, align 8, !tbaa !25
  br i1 %291, label %294, label %iscleared.exit.i20.i

; <label>:294                                     ; preds = %289
  %295 = icmp eq %union.GCObject* %293, null
  br i1 %295, label %removeentry.exit.i21.i, label %296

; <label>:296                                     ; preds = %294
  %297 = getelementptr inbounds %union.GCObject* %293, i64 0, i32 0, i32 2
  %298 = load i8* %297, align 1, !tbaa !28
  %299 = and i8 %298, 3
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %removeentry.exit.i21.i, label %301

; <label>:301                                     ; preds = %296
  call fastcc void @reallymarkobject(%struct.global_State* %2, %union.GCObject* %293) #3
  br label %removeentry.exit.i21.i

iscleared.exit.i20.i:                             ; preds = %289
  %302 = getelementptr inbounds %union.GCObject* %293, i64 0, i32 0, i32 2
  %303 = load i8* %302, align 1, !tbaa !28
  %304 = and i8 %303, 3
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %removeentry.exit.i21.i, label %306

; <label>:306                                     ; preds = %iscleared.exit.i20.i
  store i32 0, i32* %281, align 4, !tbaa !15
  store i32 11, i32* %285, align 4, !tbaa !15
  br label %removeentry.exit.i21.i

removeentry.exit.i21.i:                           ; preds = %306, %iscleared.exit.i20.i, %301, %296, %294, %284, %.lr.ph.i19.i
  %307 = getelementptr inbounds %struct.Node* %n.01.i18.i, i64 1
  %308 = icmp ult %struct.Node* %307, %279
  br i1 %308, label %.lr.ph.i19.i, label %._crit_edge.i22.i

._crit_edge.i22.i:                                ; preds = %removeentry.exit.i21.i, %.lr.ph4.i17.i
  %309 = getelementptr inbounds %union.GCObject* %.02.i16.i, i64 0, i32 0, i32 8
  %310 = load %struct.lua_TValue** %309, align 8
  %311 = bitcast %struct.lua_TValue* %310 to %union.GCObject*
  %312 = icmp eq %struct.lua_TValue* %310, null
  br i1 %312, label %atomic.exit, label %.lr.ph4.i17.i

atomic.exit:                                      ; preds = %._crit_edge.i22.i, %clearkeys.exit.i
  %313 = load %union.GCObject** %120, align 8, !tbaa !211
  call fastcc void @clearvalues(%struct.global_State* %2, %union.GCObject* %313, %union.GCObject* %157) #3
  %314 = load %union.GCObject** %155, align 8, !tbaa !213
  call fastcc void @clearvalues(%struct.global_State* %2, %union.GCObject* %314, %union.GCObject* %158) #3
  %315 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  %316 = load i8* %315, align 1, !tbaa !188
  %317 = xor i8 %316, 3
  store i8 %317, i8* %315, align 1, !tbaa !188
  %318 = load i64* %64, align 8, !tbaa !209
  %319 = add i64 %222, %318
  %320 = load i64* %66, align 8, !tbaa !66
  %321 = add i64 %320, %319
  store i64 %321, i64* %66, align 8, !tbaa !66
  %322 = load %struct.global_State** %1, align 8, !tbaa !17
  %323 = getelementptr inbounds %struct.global_State* %322, i64 0, i32 10
  store i8 2, i8* %323, align 1, !tbaa !67
  %324 = getelementptr inbounds %struct.global_State* %322, i64 0, i32 13
  store i32 0, i32* %324, align 4, !tbaa !200
  %325 = getelementptr inbounds %struct.global_State* %322, i64 0, i32 15
  br label %326

; <label>:326                                     ; preds = %326, %atomic.exit
  %i.0.i.i = phi i32 [ 0, %atomic.exit ], [ %327, %326 ]
  %327 = add nsw i32 %i.0.i.i, 1
  %328 = call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %325, i64 1) #3
  %329 = icmp eq %union.GCObject** %328, %325
  br i1 %329, label %326, label %sweeptolive.exit.i

sweeptolive.exit.i:                               ; preds = %326
  %330 = getelementptr inbounds %struct.global_State* %322, i64 0, i32 17
  store %union.GCObject** %328, %union.GCObject*** %330, align 8, !tbaa !201
  %331 = getelementptr inbounds %struct.global_State* %322, i64 0, i32 14
  br label %332

; <label>:332                                     ; preds = %332, %sweeptolive.exit.i
  %i.0.i1.i = phi i32 [ 0, %sweeptolive.exit.i ], [ %333, %332 ]
  %333 = add nsw i32 %i.0.i1.i, 1
  %334 = call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %331, i64 1) #3
  %335 = icmp eq %union.GCObject** %334, %331
  br i1 %335, label %332, label %entersweep.exit

entersweep.exit:                                  ; preds = %332
  %336 = add nsw i32 %333, %327
  %337 = getelementptr inbounds %struct.global_State* %322, i64 0, i32 16
  store %union.GCObject** %334, %union.GCObject*** %337, align 8, !tbaa !198
  %338 = sext i32 %336 to i64
  %339 = mul i64 %338, 7
  %340 = add i64 %339, %319
  br label %397

; <label>:341                                     ; preds = %346, %.preheader
  %i.016 = phi i32 [ 0, %.preheader ], [ %351, %346 ]
  %342 = load i32* %6, align 4, !tbaa !200
  %343 = add nsw i32 %342, %i.016
  %344 = load i32* %7, align 4, !tbaa !203
  %345 = icmp slt i32 %343, %344
  br i1 %345, label %346, label %.critedge

; <label>:346                                     ; preds = %341
  %347 = sext i32 %343 to i64
  %348 = load %union.GCObject*** %8, align 8, !tbaa !204
  %349 = getelementptr inbounds %union.GCObject** %348, i64 %347
  %350 = call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %349, i64 -3)
  %351 = add nsw i32 %i.016, 1
  %352 = icmp slt i32 %351, 85
  br i1 %352, label %341, label %..critedge_crit_edge

..critedge_crit_edge:                             ; preds = %346
  %.pre = load i32* %6, align 4, !tbaa !200
  %.pre25 = load i32* %7, align 4, !tbaa !203
  br label %.critedge

.critedge:                                        ; preds = %..critedge_crit_edge, %341
  %353 = phi i32 [ %.pre25, %..critedge_crit_edge ], [ %344, %341 ]
  %354 = phi i32 [ %.pre, %..critedge_crit_edge ], [ %342, %341 ]
  %i.0.lcssa = phi i32 [ %351, %..critedge_crit_edge ], [ %i.016, %341 ]
  %355 = add nsw i32 %354, %i.0.lcssa
  store i32 %355, i32* %6, align 4, !tbaa !200
  %356 = icmp slt i32 %355, %353
  br i1 %356, label %358, label %357

; <label>:357                                     ; preds = %.critedge
  store i8 3, i8* %3, align 1, !tbaa !67
  br label %358

; <label>:358                                     ; preds = %357, %.critedge
  %359 = sext i32 %i.0.lcssa to i64
  %360 = mul i64 %359, 7
  br label %397

; <label>:361                                     ; preds = %0
  %362 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 17
  %363 = load %union.GCObject*** %362, align 8, !tbaa !201
  %364 = icmp eq %union.GCObject** %363, null
  br i1 %364, label %367, label %365

; <label>:365                                     ; preds = %361
  %366 = call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %363, i64 85)
  store %union.GCObject** %366, %union.GCObject*** %362, align 8, !tbaa !201
  br label %397

; <label>:367                                     ; preds = %361
  store i8 4, i8* %3, align 1, !tbaa !67
  br label %397

; <label>:368                                     ; preds = %0
  %369 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 16
  %370 = load %union.GCObject*** %369, align 8, !tbaa !198
  %371 = icmp eq %union.GCObject** %370, null
  br i1 %371, label %374, label %372

; <label>:372                                     ; preds = %368
  %373 = call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %370, i64 85)
  store %union.GCObject** %373, %union.GCObject*** %369, align 8, !tbaa !198
  br label %397

; <label>:374                                     ; preds = %368
  %375 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 30
  %376 = load %struct.lua_State** %375, align 8, !tbaa !40
  %377 = bitcast %struct.lua_State* %376 to %union.GCObject*
  store %union.GCObject* %377, %union.GCObject** %mt, align 8, !tbaa !25
  %378 = call fastcc %union.GCObject** @sweeplist(%struct.lua_State* %L, %union.GCObject** %mt, i64 1)
  %379 = load %struct.global_State** %1, align 8, !tbaa !17
  %380 = getelementptr inbounds %struct.global_State* %379, i64 0, i32 11
  %381 = load i8* %380, align 1, !tbaa !65
  %382 = icmp eq i8 %381, 1
  br i1 %382, label %checkSizes.exit, label %383

; <label>:383                                     ; preds = %374
  %384 = getelementptr inbounds %struct.global_State* %379, i64 0, i32 6, i32 2
  %385 = load i32* %384, align 4, !tbaa !203
  %386 = sdiv i32 %385, 2
  %387 = getelementptr inbounds %struct.global_State* %379, i64 0, i32 6, i32 1
  %388 = load i32* %387, align 4, !tbaa !210
  %389 = icmp ult i32 %388, %386
  br i1 %389, label %390, label %391

; <label>:390                                     ; preds = %383
  call void bitcast (void (%struct.lua_State.228*, i32)* @luaS_resize to void (%struct.lua_State*, i32)*)(%struct.lua_State* %L, i32 %386) #3
  br label %391

; <label>:391                                     ; preds = %390, %383
  %392 = getelementptr inbounds %struct.global_State* %379, i64 0, i32 25, i32 0
  %393 = load i8** %392, align 8, !tbaa !161
  %394 = getelementptr inbounds %struct.global_State* %379, i64 0, i32 25, i32 2
  %395 = load i64* %394, align 8, !tbaa !162
  %396 = call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %393, i64 %395, i64 0) #3
  store i8* %396, i8** %392, align 8, !tbaa !161
  store i64 0, i64* %394, align 8, !tbaa !162
  br label %checkSizes.exit

checkSizes.exit:                                  ; preds = %391, %374
  store i8 5, i8* %3, align 1, !tbaa !67
  br label %397

; <label>:397                                     ; preds = %checkSizes.exit, %372, %367, %365, %358, %entersweep.exit, %58, %restartcollection.exit, %0
  %.0 = phi i64 [ 595, %372 ], [ 7, %checkSizes.exit ], [ 595, %365 ], [ 0, %367 ], [ %360, %358 ], [ %62, %58 ], [ %340, %entersweep.exit ], [ %53, %restartcollection.exit ], [ 0, %0 ]
  ret i64 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @GCTM(%struct.lua_State* %L, i32 %propagateerrors) #0 {
  %v = alloca %struct.lua_TValue, align 8
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 23
  %4 = load %union.GCObject** %3, align 8, !tbaa !202
  %5 = getelementptr inbounds %union.GCObject* %4, i64 0, i32 0, i32 0
  %6 = load %union.GCObject** %5, align 8, !tbaa !192
  store %union.GCObject* %6, %union.GCObject** %3, align 8, !tbaa !202
  %7 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 14
  %8 = load %union.GCObject** %7, align 8, !tbaa !191
  store %union.GCObject* %8, %union.GCObject** %5, align 8, !tbaa !192
  store %union.GCObject* %4, %union.GCObject** %7, align 8, !tbaa !191
  %9 = getelementptr inbounds %union.GCObject* %4, i64 0, i32 0, i32 2
  %10 = load i8* %9, align 1, !tbaa !28
  %11 = and i8 %10, -17
  store i8 %11, i8* %9, align 1, !tbaa !28
  %12 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 10
  %13 = load i8* %12, align 1, !tbaa !67
  %14 = icmp ult i8 %13, 2
  br i1 %14, label %udata2finalize.exit, label %15

; <label>:15                                      ; preds = %0
  %16 = and i8 %10, -88
  %17 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 9
  %18 = load i8* %17, align 1, !tbaa !188
  %19 = and i8 %18, 3
  %20 = or i8 %19, %16
  store i8 %20, i8* %9, align 1, !tbaa !28
  br label %udata2finalize.exit

udata2finalize.exit:                              ; preds = %15, %0
  %21 = getelementptr inbounds %struct.lua_TValue* %v, i64 0, i32 0, i32 0
  store %union.GCObject* %4, %union.GCObject** %21, align 8, !tbaa !25
  %22 = getelementptr inbounds %union.GCObject* %4, i64 0, i32 0, i32 1
  %23 = load i8* %22, align 1, !tbaa !197
  %24 = zext i8 %23 to i32
  %25 = or i32 %24, 64
  %26 = getelementptr inbounds %struct.lua_TValue* %v, i64 0, i32 1
  store i32 %25, i32* %26, align 8, !tbaa !15
  %27 = call %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* %L, %struct.lua_TValue* %v, i32 2) #3
  %28 = icmp eq %struct.lua_TValue* %27, null
  br i1 %28, label %79, label %29

; <label>:29                                      ; preds = %udata2finalize.exit
  %30 = getelementptr inbounds %struct.lua_TValue* %27, i64 0, i32 1
  %31 = load i32* %30, align 4, !tbaa !15
  %32 = and i32 %31, 15
  %33 = icmp eq i32 %32, 6
  br i1 %33, label %34, label %79

; <label>:34                                      ; preds = %29
  %35 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 14
  %36 = load i8* %35, align 1, !tbaa !56
  %37 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  %38 = load i8* %37, align 1, !tbaa !63
  store i8 0, i8* %35, align 1, !tbaa !56
  store i8 0, i8* %37, align 1, !tbaa !63
  %39 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %40 = load %struct.lua_TValue** %39, align 8, !tbaa !12
  %41 = bitcast %struct.lua_TValue* %27 to i64*
  %42 = load i64* %41, align 8
  %43 = getelementptr inbounds %struct.lua_TValue* %40, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %42 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %43, align 8
  %44 = load i32* %30, align 4, !tbaa !15
  %45 = getelementptr inbounds %struct.lua_TValue* %40, i64 0, i32 1
  store i32 %44, i32* %45, align 4, !tbaa !15
  %46 = load %struct.lua_TValue** %39, align 8, !tbaa !12
  %47 = bitcast %struct.lua_TValue* %v to i64*
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %struct.lua_TValue* %46, i64 1, i32 0, i32 0
  %.c4 = inttoptr i64 %48 to %union.GCObject*
  store %union.GCObject* %.c4, %union.GCObject** %49, align 8
  %50 = load i32* %26, align 8, !tbaa !15
  %51 = getelementptr inbounds %struct.lua_TValue* %46, i64 1, i32 1
  store i32 %50, i32* %51, align 4, !tbaa !15
  %52 = load %struct.lua_TValue** %39, align 8, !tbaa !12
  %53 = getelementptr inbounds %struct.lua_TValue* %52, i64 2
  store %struct.lua_TValue* %53, %struct.lua_TValue** %39, align 8, !tbaa !12
  %54 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 9
  %55 = load %struct.lua_TValue** %54, align 8, !tbaa !13
  %56 = ptrtoint %struct.lua_TValue* %52 to i64
  %57 = ptrtoint %struct.lua_TValue* %55 to i64
  %58 = sub i64 %56, %57
  %59 = call i32 @luaD_pcall(%struct.lua_State* %L, void (%struct.lua_State*, i8*)* @dothecall, i8* null, i64 %58, i64 0) #3
  store i8 %36, i8* %35, align 1, !tbaa !56
  store i8 %38, i8* %37, align 1, !tbaa !63
  %60 = icmp ne i32 %59, 0
  %61 = icmp ne i32 %propagateerrors, 0
  %or.cond = and i1 %60, %61
  br i1 %or.cond, label %62, label %79

; <label>:62                                      ; preds = %34
  %63 = icmp eq i32 %59, 2
  br i1 %63, label %64, label %78

; <label>:64                                      ; preds = %62
  %65 = load %struct.lua_TValue** %39, align 8, !tbaa !12
  %66 = getelementptr inbounds %struct.lua_TValue* %65, i64 -1, i32 1
  %67 = load i32* %66, align 4, !tbaa !15
  %68 = and i32 %67, 15
  %69 = icmp eq i32 %68, 4
  br i1 %69, label %70, label %75

; <label>:70                                      ; preds = %64
  %71 = getelementptr inbounds %struct.lua_TValue* %65, i64 -1, i32 0, i32 0
  %72 = load %union.GCObject** %71, align 8, !tbaa !25
  %73 = getelementptr inbounds %union.GCObject* %72, i64 0, i32 0, i32 5
  %74 = bitcast %struct.global_State** %73 to i8*
  br label %75

; <label>:75                                      ; preds = %70, %64
  %76 = phi i8* [ %74, %70 ], [ getelementptr inbounds ([11 x i8]* @.str58, i64 0, i64 0), %64 ]
  %77 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str159, i64 0, i64 0), i8* %76) #3
  br label %78

; <label>:78                                      ; preds = %75, %62
  %status.0 = phi i32 [ 5, %75 ], [ %59, %62 ]
  call void @luaD_throw(%struct.lua_State* %L, i32 %status.0) #13
  unreachable

; <label>:79                                      ; preds = %34, %29, %udata2finalize.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @markmt(%struct.global_State* %g) #0 {
  %1 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 0
  %2 = load %struct.Table** %1, align 8, !tbaa !25
  %3 = icmp eq %struct.Table* %2, null
  br i1 %3, label %11, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.Table* %2, i64 0, i32 2
  %6 = load i8* %5, align 1, !tbaa !28
  %7 = and i8 %6, 3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

; <label>:9                                       ; preds = %4
  %10 = bitcast %struct.Table* %2 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %10)
  br label %11

; <label>:11                                      ; preds = %9, %4, %0
  %12 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 1
  %13 = load %struct.Table** %12, align 8, !tbaa !25
  %14 = icmp eq %struct.Table* %13, null
  br i1 %14, label %22, label %15

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct.Table* %13, i64 0, i32 2
  %17 = load i8* %16, align 1, !tbaa !28
  %18 = and i8 %17, 3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

; <label>:20                                      ; preds = %15
  %21 = bitcast %struct.Table* %13 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %21)
  br label %22

; <label>:22                                      ; preds = %20, %15, %11
  %23 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 2
  %24 = load %struct.Table** %23, align 8, !tbaa !25
  %25 = icmp eq %struct.Table* %24, null
  br i1 %25, label %33, label %26

; <label>:26                                      ; preds = %22
  %27 = getelementptr inbounds %struct.Table* %24, i64 0, i32 2
  %28 = load i8* %27, align 1, !tbaa !28
  %29 = and i8 %28, 3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %31

; <label>:31                                      ; preds = %26
  %32 = bitcast %struct.Table* %24 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %32)
  br label %33

; <label>:33                                      ; preds = %31, %26, %22
  %34 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 3
  %35 = load %struct.Table** %34, align 8, !tbaa !25
  %36 = icmp eq %struct.Table* %35, null
  br i1 %36, label %44, label %37

; <label>:37                                      ; preds = %33
  %38 = getelementptr inbounds %struct.Table* %35, i64 0, i32 2
  %39 = load i8* %38, align 1, !tbaa !28
  %40 = and i8 %39, 3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

; <label>:42                                      ; preds = %37
  %43 = bitcast %struct.Table* %35 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %43)
  br label %44

; <label>:44                                      ; preds = %42, %37, %33
  %45 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 4
  %46 = load %struct.Table** %45, align 8, !tbaa !25
  %47 = icmp eq %struct.Table* %46, null
  br i1 %47, label %55, label %48

; <label>:48                                      ; preds = %44
  %49 = getelementptr inbounds %struct.Table* %46, i64 0, i32 2
  %50 = load i8* %49, align 1, !tbaa !28
  %51 = and i8 %50, 3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

; <label>:53                                      ; preds = %48
  %54 = bitcast %struct.Table* %46 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %54)
  br label %55

; <label>:55                                      ; preds = %53, %48, %44
  %56 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 5
  %57 = load %struct.Table** %56, align 8, !tbaa !25
  %58 = icmp eq %struct.Table* %57, null
  br i1 %58, label %66, label %59

; <label>:59                                      ; preds = %55
  %60 = getelementptr inbounds %struct.Table* %57, i64 0, i32 2
  %61 = load i8* %60, align 1, !tbaa !28
  %62 = and i8 %61, 3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

; <label>:64                                      ; preds = %59
  %65 = bitcast %struct.Table* %57 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %65)
  br label %66

; <label>:66                                      ; preds = %64, %59, %55
  %67 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 6
  %68 = load %struct.Table** %67, align 8, !tbaa !25
  %69 = icmp eq %struct.Table* %68, null
  br i1 %69, label %77, label %70

; <label>:70                                      ; preds = %66
  %71 = getelementptr inbounds %struct.Table* %68, i64 0, i32 2
  %72 = load i8* %71, align 1, !tbaa !28
  %73 = and i8 %72, 3
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

; <label>:75                                      ; preds = %70
  %76 = bitcast %struct.Table* %68 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %76)
  br label %77

; <label>:77                                      ; preds = %75, %70, %66
  %78 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 7
  %79 = load %struct.Table** %78, align 8, !tbaa !25
  %80 = icmp eq %struct.Table* %79, null
  br i1 %80, label %88, label %81

; <label>:81                                      ; preds = %77
  %82 = getelementptr inbounds %struct.Table* %79, i64 0, i32 2
  %83 = load i8* %82, align 1, !tbaa !28
  %84 = and i8 %83, 3
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %88, label %86

; <label>:86                                      ; preds = %81
  %87 = bitcast %struct.Table* %79 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %87)
  br label %88

; <label>:88                                      ; preds = %86, %81, %77
  %89 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 34, i64 8
  %90 = load %struct.Table** %89, align 8, !tbaa !25
  %91 = icmp eq %struct.Table* %90, null
  br i1 %91, label %99, label %92

; <label>:92                                      ; preds = %88
  %93 = getelementptr inbounds %struct.Table* %90, i64 0, i32 2
  %94 = load i8* %93, align 1, !tbaa !28
  %95 = and i8 %94, 3
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %99, label %97

; <label>:97                                      ; preds = %92
  %98 = bitcast %struct.Table* %90 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %98)
  br label %99

; <label>:99                                      ; preds = %97, %92, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @propagatemark(%struct.global_State* %g) #0 {
  %1 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 18
  %2 = load %union.GCObject** %1, align 8, !tbaa !205
  %3 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 2
  %4 = load i8* %3, align 1, !tbaa !28
  %5 = or i8 %4, 4
  store i8 %5, i8* %3, align 1, !tbaa !28
  %6 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 1
  %7 = load i8* %6, align 1, !tbaa !197
  %8 = zext i8 %7 to i32
  switch i32 %8, label %483 [
    i32 5, label %9
    i32 6, label %222
    i32 38, label %261
    i32 8, label %291
    i32 9, label %349
  ]

; <label>:9                                       ; preds = %0
  %10 = bitcast %union.GCObject* %2 to %struct.Table*
  %11 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 8
  %12 = load %struct.lua_TValue** %11, align 8
  %13 = bitcast %struct.lua_TValue* %12 to %union.GCObject*
  store %union.GCObject* %13, %union.GCObject** %1, align 8, !tbaa !205
  %14 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 4
  %15 = load %struct.lua_TValue** %14, align 8
  %16 = bitcast %struct.lua_TValue* %15 to %struct.Table*
  %17 = icmp eq %struct.lua_TValue* %15, null
  br i1 %17, label %.thread5.i, label %18

; <label>:18                                      ; preds = %9
  %19 = getelementptr inbounds %struct.Table* %16, i64 0, i32 3
  %20 = load i8* %19, align 1, !tbaa !41
  %21 = and i8 %20, 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %.thread.i

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 33, i64 3
  %25 = load %union.TString** %24, align 8, !tbaa !25
  %26 = tail call %struct.lua_TValue* @luaT_gettm(%struct.Table* %16, i32 3, %union.TString* %25) #3
  %27 = load %struct.lua_TValue** %14, align 8
  %.pr.pre.i = bitcast %struct.lua_TValue* %27 to %struct.Table*
  %28 = icmp eq %struct.lua_TValue* %27, null
  br i1 %28, label %35, label %.thread.i

.thread.i:                                        ; preds = %23, %18
  %.ph8.i = phi %struct.lua_TValue* [ %26, %23 ], [ null, %18 ]
  %.pr7.i = phi %struct.Table* [ %.pr.pre.i, %23 ], [ %16, %18 ]
  %29 = getelementptr inbounds %struct.Table* %.pr7.i, i64 0, i32 2
  %30 = load i8* %29, align 1, !tbaa !28
  %31 = and i8 %30, 3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

; <label>:33                                      ; preds = %.thread.i
  %34 = bitcast %struct.Table* %.pr7.i to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %34) #3
  br label %35

; <label>:35                                      ; preds = %33, %.thread.i, %23
  %.ph9.i = phi %struct.lua_TValue* [ %.ph8.i, %.thread.i ], [ %26, %23 ], [ %.ph8.i, %33 ]
  %36 = icmp eq %struct.lua_TValue* %.ph9.i, null
  br i1 %36, label %.thread5.i, label %37

; <label>:37                                      ; preds = %35
  %38 = getelementptr inbounds %struct.lua_TValue* %.ph9.i, i64 0, i32 1
  %39 = load i32* %38, align 4, !tbaa !15
  %40 = and i32 %39, 15
  %41 = icmp eq i32 %40, 4
  br i1 %41, label %42, label %.thread5.i

; <label>:42                                      ; preds = %37
  %43 = getelementptr inbounds %struct.lua_TValue* %.ph9.i, i64 0, i32 0, i32 0
  %44 = load %union.GCObject** %43, align 8, !tbaa !25
  %45 = getelementptr inbounds %union.GCObject* %44, i64 0, i32 0, i32 5
  %46 = bitcast %struct.global_State** %45 to i8*
  %47 = tail call i8* @strchr(i8* %46, i32 107) #3
  %48 = tail call i8* @strchr(i8* %46, i32 118) #3
  %49 = icmp ne i8* %47, null
  %50 = icmp ne i8* %48, null
  %or.cond.i = or i1 %49, %50
  br i1 %or.cond.i, label %.critedge.i, label %.thread5.i

.critedge.i:                                      ; preds = %42
  %51 = load i8* %3, align 1, !tbaa !28
  %52 = and i8 %51, -5
  store i8 %52, i8* %3, align 1, !tbaa !28
  br i1 %49, label %126, label %53

; <label>:53                                      ; preds = %.critedge.i
  %54 = getelementptr inbounds %struct.Table* %10, i64 0, i32 4
  %55 = load i8* %54, align 1, !tbaa !214
  %56 = zext i8 %55 to i32
  %57 = shl i32 1, %56
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 6
  %60 = load %struct.CallInfo** %59, align 8
  %61 = bitcast %struct.CallInfo* %60 to %struct.Node*
  %62 = getelementptr inbounds %struct.Node* %61, i64 %58
  %63 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 9
  %64 = bitcast %struct.lua_TValue** %63 to i32*
  %65 = load i32* %64, align 4, !tbaa !215
  %66 = icmp sgt i32 %65, 0
  %67 = zext i1 %66 to i32
  %68 = icmp eq i8 %55, 31
  br i1 %68, label %._crit_edge.i.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %removeentry.exit.i.i, %53
  %hasclears.04.i.i = phi i32 [ %hasclears.1.i.i, %removeentry.exit.i.i ], [ %67, %53 ]
  %n.02.i.i = phi %struct.Node* [ %117, %removeentry.exit.i.i ], [ %61, %53 ]
  %69 = getelementptr inbounds %struct.Node* %n.02.i.i, i64 0, i32 0, i32 1
  %70 = load i32* %69, align 4, !tbaa !15
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %struct.Node* %n.02.i.i, i64 0, i32 1, i32 0, i32 1
  %73 = load i32* %72, align 4, !tbaa !15
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %71, label %76, label %85

; <label>:76                                      ; preds = %.lr.ph.i.i
  br i1 %75, label %removeentry.exit.i.i, label %77

; <label>:77                                      ; preds = %76
  %78 = getelementptr inbounds %struct.Node* %n.02.i.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %union.GCObject** %78, align 8, !tbaa !25
  %80 = getelementptr inbounds %union.GCObject* %79, i64 0, i32 0, i32 2
  %81 = load i8* %80, align 1, !tbaa !28
  %82 = and i8 %81, 3
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %removeentry.exit.i.i, label %84

; <label>:84                                      ; preds = %77
  store i32 11, i32* %72, align 4, !tbaa !15
  br label %removeentry.exit.i.i

; <label>:85                                      ; preds = %.lr.ph.i.i
  br i1 %75, label %94, label %86

; <label>:86                                      ; preds = %85
  %87 = getelementptr inbounds %struct.Node* %n.02.i.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %union.GCObject** %87, align 8, !tbaa !25
  %89 = getelementptr inbounds %union.GCObject* %88, i64 0, i32 0, i32 2
  %90 = load i8* %89, align 1, !tbaa !28
  %91 = and i8 %90, 3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %94, label %93

; <label>:93                                      ; preds = %86
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %88) #3
  br label %94

; <label>:94                                      ; preds = %93, %86, %85
  %95 = icmp eq i32 %hasclears.04.i.i, 0
  br i1 %95, label %96, label %removeentry.exit.i.i

; <label>:96                                      ; preds = %94
  %97 = load i32* %69, align 4, !tbaa !15
  %98 = and i32 %97, 64
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %removeentry.exit.i.i, label %100

; <label>:100                                     ; preds = %96
  %101 = and i32 %97, 15
  %102 = icmp eq i32 %101, 4
  %103 = getelementptr inbounds %struct.Node* %n.02.i.i, i64 0, i32 0, i32 0, i32 0
  %104 = load %union.GCObject** %103, align 8, !tbaa !25
  br i1 %102, label %105, label %113

; <label>:105                                     ; preds = %100
  %106 = icmp eq %union.GCObject* %104, null
  br i1 %106, label %removeentry.exit.i.i, label %107

; <label>:107                                     ; preds = %105
  %108 = getelementptr inbounds %union.GCObject* %104, i64 0, i32 0, i32 2
  %109 = load i8* %108, align 1, !tbaa !28
  %110 = and i8 %109, 3
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %removeentry.exit.i.i, label %112

; <label>:112                                     ; preds = %107
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %104) #3
  br label %removeentry.exit.i.i

; <label>:113                                     ; preds = %100
  %114 = getelementptr inbounds %union.GCObject* %104, i64 0, i32 0, i32 2
  %115 = load i8* %114, align 1, !tbaa !28
  %116 = and i8 %115, 3
  %not.phitmp.i.i = icmp ne i8 %116, 0
  %phitmp1.i.i = zext i1 %not.phitmp.i.i to i32
  br label %removeentry.exit.i.i

removeentry.exit.i.i:                             ; preds = %113, %112, %107, %105, %96, %94, %84, %77, %76
  %hasclears.1.i.i = phi i32 [ %hasclears.04.i.i, %94 ], [ %hasclears.04.i.i, %76 ], [ %hasclears.04.i.i, %77 ], [ %hasclears.04.i.i, %84 ], [ %phitmp1.i.i, %113 ], [ 0, %96 ], [ 0, %107 ], [ 0, %105 ], [ 0, %112 ]
  %117 = getelementptr inbounds %struct.Node* %n.02.i.i, i64 1
  %118 = icmp ult %struct.Node* %117, %62
  br i1 %118, label %.lr.ph.i.i, label %._crit_edge.i.i

._crit_edge.i.i:                                  ; preds = %removeentry.exit.i.i, %53
  %hasclears.0.lcssa.i.i = phi i32 [ %67, %53 ], [ %hasclears.1.i.i, %removeentry.exit.i.i ]
  %119 = icmp eq i32 %hasclears.0.lcssa.i.i, 0
  br i1 %119, label %123, label %120

; <label>:120                                     ; preds = %._crit_edge.i.i
  %121 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 20
  %122 = load %union.GCObject** %121, align 8, !tbaa !25
  %.c = bitcast %union.GCObject* %122 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c, %struct.lua_TValue** %11, align 8, !tbaa !195
  store %union.GCObject* %2, %union.GCObject** %121, align 8, !tbaa !25
  br label %traversetable.exit

; <label>:123                                     ; preds = %._crit_edge.i.i
  %124 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 19
  %125 = load %union.GCObject** %124, align 8, !tbaa !25
  %.c17 = bitcast %union.GCObject* %125 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c17, %struct.lua_TValue** %11, align 8, !tbaa !195
  store %union.GCObject* %2, %union.GCObject** %124, align 8, !tbaa !25
  br label %traversetable.exit

; <label>:126                                     ; preds = %.critedge.i
  br i1 %50, label %129, label %127

; <label>:127                                     ; preds = %126
  %128 = tail call fastcc i32 @traverseephemeron(%struct.global_State* %g, %struct.Table* %10) #3
  br label %traversetable.exit

; <label>:129                                     ; preds = %126
  %130 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 22
  %131 = load %union.GCObject** %130, align 8, !tbaa !25
  %.c18 = bitcast %union.GCObject* %131 to %struct.lua_TValue*
  store %struct.lua_TValue* %.c18, %struct.lua_TValue** %11, align 8, !tbaa !195
  store %union.GCObject* %2, %union.GCObject** %130, align 8, !tbaa !25
  br label %traversetable.exit

.thread5.i:                                       ; preds = %42, %37, %35, %9
  %132 = getelementptr inbounds %struct.Table* %10, i64 0, i32 4
  %133 = load i8* %132, align 1, !tbaa !214
  %134 = zext i8 %133 to i32
  %135 = shl i32 1, %134
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 6
  %138 = load %struct.CallInfo** %137, align 8
  %139 = bitcast %struct.CallInfo* %138 to %struct.Node*
  %140 = getelementptr inbounds %struct.Node* %139, i64 %136
  %141 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 9
  %142 = bitcast %struct.lua_TValue** %141 to i32*
  %143 = load i32* %142, align 4, !tbaa !215
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %.lr.ph5.i.i, label %167

.lr.ph5.i.i:                                      ; preds = %.thread5.i
  %145 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 5
  br label %146

; <label>:146                                     ; preds = %162, %.lr.ph5.i.i
  %147 = phi i32 [ %143, %.lr.ph5.i.i ], [ %163, %162 ]
  %indvars.iv.i.i = phi i64 [ 0, %.lr.ph5.i.i ], [ %indvars.iv.next.i.i, %162 ]
  %148 = load %struct.global_State** %145, align 8
  %149 = bitcast %struct.global_State* %148 to %struct.lua_TValue*
  %150 = getelementptr inbounds %struct.lua_TValue* %149, i64 %indvars.iv.i.i, i32 1
  %151 = load i32* %150, align 4, !tbaa !15
  %152 = and i32 %151, 64
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %162, label %154

; <label>:154                                     ; preds = %146
  %155 = getelementptr inbounds %struct.lua_TValue* %149, i64 %indvars.iv.i.i, i32 0, i32 0
  %156 = load %union.GCObject** %155, align 8, !tbaa !25
  %157 = getelementptr inbounds %union.GCObject* %156, i64 0, i32 0, i32 2
  %158 = load i8* %157, align 1, !tbaa !28
  %159 = and i8 %158, 3
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %162, label %161

; <label>:161                                     ; preds = %154
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %156) #3
  %.pre8.i.i = load i32* %142, align 4, !tbaa !215
  br label %162

; <label>:162                                     ; preds = %161, %154, %146
  %163 = phi i32 [ %147, %154 ], [ %147, %146 ], [ %.pre8.i.i, %161 ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %164 = trunc i64 %indvars.iv.next.i.i to i32
  %165 = icmp slt i32 %164, %163
  br i1 %165, label %146, label %._crit_edge6.i.i

._crit_edge6.i.i:                                 ; preds = %162
  %166 = load %struct.CallInfo** %137, align 8
  %.pre.i.i = bitcast %struct.CallInfo* %166 to %struct.Node*
  br label %167

; <label>:167                                     ; preds = %._crit_edge6.i.i, %.thread5.i
  %168 = phi %struct.Node* [ %.pre.i.i, %._crit_edge6.i.i ], [ %139, %.thread5.i ]
  %169 = icmp ult %struct.Node* %168, %140
  br i1 %169, label %.lr.ph.i2.i, label %traversetable.exit

.lr.ph.i2.i:                                      ; preds = %removeentry.exit.i3.i, %167
  %n.01.i.i = phi %struct.Node* [ %207, %removeentry.exit.i3.i ], [ %168, %167 ]
  %170 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 0, i32 1
  %171 = load i32* %170, align 4, !tbaa !15
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 1, i32 0, i32 1
  %174 = load i32* %173, align 4, !tbaa !15
  %175 = and i32 %174, 64
  %176 = icmp eq i32 %175, 0
  br i1 %172, label %177, label %186

; <label>:177                                     ; preds = %.lr.ph.i2.i
  br i1 %176, label %removeentry.exit.i3.i, label %178

; <label>:178                                     ; preds = %177
  %179 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %180 = load %union.GCObject** %179, align 8, !tbaa !25
  %181 = getelementptr inbounds %union.GCObject* %180, i64 0, i32 0, i32 2
  %182 = load i8* %181, align 1, !tbaa !28
  %183 = and i8 %182, 3
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %removeentry.exit.i3.i, label %185

; <label>:185                                     ; preds = %178
  store i32 11, i32* %173, align 4, !tbaa !15
  br label %removeentry.exit.i3.i

; <label>:186                                     ; preds = %.lr.ph.i2.i
  br i1 %176, label %195, label %187

; <label>:187                                     ; preds = %186
  %188 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %189 = load %union.GCObject** %188, align 8, !tbaa !25
  %190 = getelementptr inbounds %union.GCObject* %189, i64 0, i32 0, i32 2
  %191 = load i8* %190, align 1, !tbaa !28
  %192 = and i8 %191, 3
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %195, label %194

; <label>:194                                     ; preds = %187
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %189) #3
  %.pre7.i.i = load i32* %170, align 4, !tbaa !15
  br label %195

; <label>:195                                     ; preds = %194, %187, %186
  %196 = phi i32 [ %171, %187 ], [ %171, %186 ], [ %.pre7.i.i, %194 ]
  %197 = and i32 %196, 64
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %removeentry.exit.i3.i, label %199

; <label>:199                                     ; preds = %195
  %200 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 0, i32 0, i32 0, i32 0
  %201 = load %union.GCObject** %200, align 8, !tbaa !25
  %202 = getelementptr inbounds %union.GCObject* %201, i64 0, i32 0, i32 2
  %203 = load i8* %202, align 1, !tbaa !28
  %204 = and i8 %203, 3
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %removeentry.exit.i3.i, label %206

; <label>:206                                     ; preds = %199
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %201) #3
  br label %removeentry.exit.i3.i

removeentry.exit.i3.i:                            ; preds = %206, %199, %195, %185, %178, %177
  %207 = getelementptr inbounds %struct.Node* %n.01.i.i, i64 1
  %208 = icmp ult %struct.Node* %207, %140
  br i1 %208, label %.lr.ph.i2.i, label %traversetable.exit

traversetable.exit:                               ; preds = %removeentry.exit.i3.i, %167, %129, %127, %123, %120
  %209 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 9
  %210 = bitcast %struct.lua_TValue** %209 to i32*
  %211 = load i32* %210, align 4, !tbaa !215
  %212 = sext i32 %211 to i64
  %213 = shl nsw i64 %212, 4
  %214 = add i64 %213, 64
  %215 = getelementptr inbounds %struct.Table* %10, i64 0, i32 4
  %216 = load i8* %215, align 1, !tbaa !214
  %217 = zext i8 %216 to i32
  %218 = shl i32 1, %217
  %219 = sext i32 %218 to i64
  %220 = mul i64 %219, 40
  %221 = add i64 %214, %220
  br label %traversestack.exit

; <label>:222                                     ; preds = %0
  %223 = bitcast %union.GCObject* %2 to %struct.LClosure*
  %224 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 4
  %225 = load %struct.lua_TValue** %224, align 8
  %226 = bitcast %struct.lua_TValue* %225 to %union.GCObject*
  store %union.GCObject* %226, %union.GCObject** %1, align 8, !tbaa !205
  %227 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 5
  %228 = load %struct.global_State** %227, align 8
  %229 = icmp eq %struct.global_State* %228, null
  br i1 %229, label %.preheader.i, label %230

; <label>:230                                     ; preds = %222
  %231 = bitcast %struct.global_State* %228 to %struct.Proto*
  %232 = getelementptr inbounds %struct.Proto* %231, i64 0, i32 2
  %233 = load i8* %232, align 1, !tbaa !28
  %234 = and i8 %233, 3
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %.preheader.i, label %236

; <label>:236                                     ; preds = %230
  %237 = bitcast %struct.global_State* %228 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %237) #3
  br label %.preheader.i

.preheader.i:                                     ; preds = %236, %230, %222
  %238 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 3
  %239 = load i8* %238, align 1, !tbaa !60
  %240 = zext i8 %239 to i32
  %241 = icmp eq i8 %239, 0
  br i1 %241, label %traverseLclosure.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %253, %.preheader.i
  %242 = phi i8 [ %254, %253 ], [ %239, %.preheader.i ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %253 ], [ 0, %.preheader.i ]
  %243 = getelementptr inbounds %struct.LClosure* %223, i64 0, i32 6, i64 %indvars.iv.i
  %244 = load %struct.UpVal** %243, align 8, !tbaa !25
  %245 = icmp eq %struct.UpVal* %244, null
  br i1 %245, label %253, label %246

; <label>:246                                     ; preds = %.lr.ph.i
  %247 = getelementptr inbounds %struct.UpVal* %244, i64 0, i32 2
  %248 = load i8* %247, align 1, !tbaa !28
  %249 = and i8 %248, 3
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %253, label %251

; <label>:251                                     ; preds = %246
  %252 = bitcast %struct.UpVal* %244 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %252) #3
  %.pre.i = load i8* %238, align 1, !tbaa !60
  br label %253

; <label>:253                                     ; preds = %251, %246, %.lr.ph.i
  %254 = phi i8 [ %242, %246 ], [ %242, %.lr.ph.i ], [ %.pre.i, %251 ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %255 = zext i8 %254 to i32
  %256 = trunc i64 %indvars.iv.next.i to i32
  %257 = icmp slt i32 %256, %255
  br i1 %257, label %.lr.ph.i, label %traverseLclosure.exit

traverseLclosure.exit:                            ; preds = %253, %.preheader.i
  %.lcssa.i = phi i32 [ %240, %.preheader.i ], [ %255, %253 ]
  %258 = shl nuw nsw i32 %.lcssa.i, 3
  %259 = add i32 %258, 32
  %260 = zext i32 %259 to i64
  br label %traversestack.exit

; <label>:261                                     ; preds = %0
  %262 = bitcast %union.GCObject* %2 to %struct.CClosure*
  %263 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 4
  %264 = load %struct.lua_TValue** %263, align 8
  %265 = bitcast %struct.lua_TValue* %264 to %union.GCObject*
  store %union.GCObject* %265, %union.GCObject** %1, align 8, !tbaa !205
  %266 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 3
  %267 = load i8* %266, align 1, !tbaa !26
  %268 = zext i8 %267 to i32
  %269 = icmp eq i8 %267, 0
  br i1 %269, label %traverseCclosure.exit, label %.lr.ph.i3

.lr.ph.i3:                                        ; preds = %283, %261
  %270 = phi i8 [ %284, %283 ], [ %267, %261 ]
  %indvars.iv.i2 = phi i64 [ %indvars.iv.next.i5, %283 ], [ 0, %261 ]
  %271 = getelementptr inbounds %struct.CClosure* %262, i64 0, i32 6, i64 %indvars.iv.i2, i32 1
  %272 = load i32* %271, align 4, !tbaa !15
  %273 = and i32 %272, 64
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %283, label %275

; <label>:275                                     ; preds = %.lr.ph.i3
  %276 = getelementptr inbounds %struct.CClosure* %262, i64 0, i32 6, i64 %indvars.iv.i2, i32 0, i32 0
  %277 = load %union.GCObject** %276, align 8, !tbaa !25
  %278 = getelementptr inbounds %union.GCObject* %277, i64 0, i32 0, i32 2
  %279 = load i8* %278, align 1, !tbaa !28
  %280 = and i8 %279, 3
  %281 = icmp eq i8 %280, 0
  br i1 %281, label %283, label %282

; <label>:282                                     ; preds = %275
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %277) #3
  %.pre.i4 = load i8* %266, align 1, !tbaa !26
  br label %283

; <label>:283                                     ; preds = %282, %275, %.lr.ph.i3
  %284 = phi i8 [ %270, %275 ], [ %270, %.lr.ph.i3 ], [ %.pre.i4, %282 ]
  %indvars.iv.next.i5 = add nuw nsw i64 %indvars.iv.i2, 1
  %285 = zext i8 %284 to i32
  %286 = trunc i64 %indvars.iv.next.i5 to i32
  %287 = icmp slt i32 %286, %285
  br i1 %287, label %.lr.ph.i3, label %traverseCclosure.exit

traverseCclosure.exit:                            ; preds = %283, %261
  %.lcssa.i6 = phi i32 [ %268, %261 ], [ %285, %283 ]
  %288 = shl nuw nsw i32 %.lcssa.i6, 4
  %289 = add i32 %288, 32
  %290 = zext i32 %289 to i64
  br label %traversestack.exit

; <label>:291                                     ; preds = %0
  %292 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 19
  %293 = load %union.GCObject** %292, align 8, !tbaa !208
  store %union.GCObject* %293, %union.GCObject** %1, align 8, !tbaa !205
  %294 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 19
  %295 = load %union.GCObject** %294, align 8, !tbaa !194
  store %union.GCObject* %295, %union.GCObject** %292, align 8, !tbaa !208
  store %union.GCObject* %2, %union.GCObject** %294, align 8, !tbaa !194
  %296 = and i8 %4, -5
  store i8 %296, i8* %3, align 1, !tbaa !28
  %297 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 9
  %298 = load %struct.lua_TValue** %297, align 8, !tbaa !13
  %299 = icmp eq %struct.lua_TValue* %298, null
  br i1 %299, label %traversestack.exit, label %.preheader.i7

.preheader.i7:                                    ; preds = %291
  %300 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 4
  %301 = load %struct.lua_TValue** %300, align 8, !tbaa !12
  %302 = icmp ult %struct.lua_TValue* %298, %301
  br i1 %302, label %.lr.ph7.i, label %._crit_edge.i

.lr.ph7.i:                                        ; preds = %316, %.preheader.i7
  %303 = phi %struct.lua_TValue* [ %317, %316 ], [ %301, %.preheader.i7 ]
  %o.06.i = phi %struct.lua_TValue* [ %318, %316 ], [ %298, %.preheader.i7 ]
  %304 = getelementptr inbounds %struct.lua_TValue* %o.06.i, i64 0, i32 1
  %305 = load i32* %304, align 4, !tbaa !15
  %306 = and i32 %305, 64
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %316, label %308

; <label>:308                                     ; preds = %.lr.ph7.i
  %309 = getelementptr inbounds %struct.lua_TValue* %o.06.i, i64 0, i32 0, i32 0
  %310 = load %union.GCObject** %309, align 8, !tbaa !25
  %311 = getelementptr inbounds %union.GCObject* %310, i64 0, i32 0, i32 2
  %312 = load i8* %311, align 1, !tbaa !28
  %313 = and i8 %312, 3
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %316, label %315

; <label>:315                                     ; preds = %308
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %310) #3
  %.pre10.i = load %struct.lua_TValue** %300, align 8, !tbaa !12
  br label %316

; <label>:316                                     ; preds = %315, %308, %.lr.ph7.i
  %317 = phi %struct.lua_TValue* [ %303, %308 ], [ %303, %.lr.ph7.i ], [ %.pre10.i, %315 ]
  %318 = getelementptr inbounds %struct.lua_TValue* %o.06.i, i64 1
  %319 = icmp ult %struct.lua_TValue* %318, %317
  br i1 %319, label %.lr.ph7.i, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %316, %.preheader.i7
  %o.0.lcssa.i = phi %struct.lua_TValue* [ %298, %.preheader.i7 ], [ %318, %316 ]
  %320 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 10
  %321 = load i8* %320, align 1, !tbaa !67
  %322 = icmp eq i8 %321, 1
  br i1 %322, label %323, label %333

; <label>:323                                     ; preds = %._crit_edge.i
  %324 = load %struct.lua_TValue** %297, align 8, !tbaa !13
  %325 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 10
  %326 = load i32* %325, align 4, !tbaa !144
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds %struct.lua_TValue* %324, i64 %327
  %329 = icmp ult %struct.lua_TValue* %o.0.lcssa.i, %328
  br i1 %329, label %.lr.ph.i8, label %.loopexit.i

.lr.ph.i8:                                        ; preds = %.lr.ph.i8, %323
  %o.11.i = phi %struct.lua_TValue* [ %331, %.lr.ph.i8 ], [ %o.0.lcssa.i, %323 ]
  %330 = getelementptr inbounds %struct.lua_TValue* %o.11.i, i64 0, i32 1
  store i32 0, i32* %330, align 4, !tbaa !15
  %331 = getelementptr inbounds %struct.lua_TValue* %o.11.i, i64 1
  %332 = icmp ult %struct.lua_TValue* %331, %328
  br i1 %332, label %.lr.ph.i8, label %.loopexit.i

; <label>:333                                     ; preds = %._crit_edge.i
  %334 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 22
  %335 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 6
  %336 = load %struct.CallInfo** %335, align 8, !tbaa !5
  %337 = icmp eq %struct.CallInfo* %334, %336
  br i1 %337, label %.loopexit2.i, label %.lr.ph5.i

.lr.ph5.i:                                        ; preds = %.lr.ph5.i, %333
  %ci.04.i = phi %struct.CallInfo* [ %340, %.lr.ph5.i ], [ %334, %333 ]
  %n.03.i = phi i32 [ %338, %.lr.ph5.i ], [ 0, %333 ]
  %338 = add nsw i32 %n.03.i, 1
  %339 = getelementptr inbounds %struct.CallInfo* %ci.04.i, i64 0, i32 3
  %340 = load %struct.CallInfo** %339, align 8, !tbaa !138
  %341 = icmp eq %struct.CallInfo* %340, %336
  br i1 %341, label %.loopexit2.i, label %.lr.ph5.i

.loopexit2.i:                                     ; preds = %.lr.ph5.i, %333
  %n.0.lcssa.i = phi i32 [ 0, %333 ], [ %338, %.lr.ph5.i ]
  %.phi.trans.insert.i = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 10
  %.pre.i9 = load i32* %.phi.trans.insert.i, align 4, !tbaa !144
  br label %.loopexit.i

.loopexit.i:                                      ; preds = %.loopexit2.i, %.lr.ph.i8, %323
  %342 = phi i32 [ %.pre.i9, %.loopexit2.i ], [ %326, %323 ], [ %326, %.lr.ph.i8 ]
  %n.1.i = phi i32 [ %n.0.lcssa.i, %.loopexit2.i ], [ 0, %323 ], [ 0, %.lr.ph.i8 ]
  %343 = sext i32 %342 to i64
  %344 = shl nsw i64 %343, 4
  %345 = sext i32 %n.1.i to i64
  %346 = mul i64 %345, 80
  %347 = add i64 %344, 208
  %348 = add i64 %347, %346
  br label %traversestack.exit

; <label>:349                                     ; preds = %0
  %350 = bitcast %union.GCObject* %2 to %struct.Proto*
  %351 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 20
  %352 = load %struct.lua_longjmp** %351, align 8
  %353 = bitcast %struct.lua_longjmp* %352 to %union.GCObject*
  store %union.GCObject* %353, %union.GCObject** %1, align 8, !tbaa !205
  %354 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 10
  %355 = bitcast i32* %354 to %union.Closure**
  %356 = load %union.Closure** %355, align 8, !tbaa !193
  %357 = icmp eq %union.Closure* %356, null
  br i1 %357, label %364, label %358

; <label>:358                                     ; preds = %349
  %359 = getelementptr inbounds %union.Closure* %356, i64 0, i32 0, i32 2
  %360 = load i8* %359, align 1, !tbaa !28
  %361 = and i8 %360, 3
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %364, label %363

; <label>:363                                     ; preds = %358
  store %union.Closure* null, %union.Closure** %355, align 8, !tbaa !193
  br label %364

; <label>:364                                     ; preds = %363, %358, %349
  %365 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 13
  %366 = bitcast i8* %365 to %union.TString**
  %367 = load %union.TString** %366, align 8, !tbaa !122
  %368 = icmp eq %union.TString* %367, null
  br i1 %368, label %.preheader16.i, label %369

; <label>:369                                     ; preds = %364
  %370 = getelementptr inbounds %union.TString* %367, i64 0, i32 0, i32 2
  %371 = load i8* %370, align 1, !tbaa !28
  %372 = and i8 %371, 3
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %.preheader16.i, label %374

; <label>:374                                     ; preds = %369
  %375 = bitcast %union.TString* %367 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %375) #3
  br label %.preheader16.i

.preheader16.i:                                   ; preds = %374, %369, %364
  %376 = getelementptr inbounds %struct.Proto* %350, i64 0, i32 12
  %377 = load i32* %376, align 4, !tbaa !110
  %378 = icmp sgt i32 %377, 0
  br i1 %378, label %.lr.ph19.i, label %.preheader11.i

.lr.ph19.i:                                       ; preds = %.preheader16.i
  %379 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 4
  br label %384

.preheader11.i:                                   ; preds = %399, %.preheader16.i
  %380 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 16
  %381 = load i32* %380, align 4, !tbaa !73
  %382 = icmp sgt i32 %381, 0
  br i1 %382, label %.lr.ph14.i, label %.preheader6.i

.lr.ph14.i:                                       ; preds = %.preheader11.i
  %383 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 9
  br label %408

; <label>:384                                     ; preds = %399, %.lr.ph19.i
  %385 = phi i32 [ %377, %.lr.ph19.i ], [ %400, %399 ]
  %indvars.iv26.i = phi i64 [ 0, %.lr.ph19.i ], [ %indvars.iv.next27.i, %399 ]
  %386 = load %struct.lua_TValue** %379, align 8, !tbaa !109
  %387 = getelementptr inbounds %struct.lua_TValue* %386, i64 %indvars.iv26.i, i32 1
  %388 = load i32* %387, align 4, !tbaa !15
  %389 = and i32 %388, 64
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %399, label %391

; <label>:391                                     ; preds = %384
  %392 = getelementptr inbounds %struct.lua_TValue* %386, i64 %indvars.iv26.i, i32 0, i32 0
  %393 = load %union.GCObject** %392, align 8, !tbaa !25
  %394 = getelementptr inbounds %union.GCObject* %393, i64 0, i32 0, i32 2
  %395 = load i8* %394, align 1, !tbaa !28
  %396 = and i8 %395, 3
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %399, label %398

; <label>:398                                     ; preds = %391
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %393) #3
  %.pre31.i = load i32* %376, align 4, !tbaa !110
  br label %399

; <label>:399                                     ; preds = %398, %391, %384
  %400 = phi i32 [ %385, %391 ], [ %385, %384 ], [ %.pre31.i, %398 ]
  %indvars.iv.next27.i = add nuw nsw i64 %indvars.iv26.i, 1
  %401 = trunc i64 %indvars.iv.next27.i to i32
  %402 = icmp slt i32 %401, %400
  br i1 %402, label %384, label %.preheader11.i

.preheader6.i:                                    ; preds = %422, %.preheader11.i
  %403 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 18
  %404 = bitcast %union.GCObject** %403 to i32*
  %405 = load i32* %404, align 4, !tbaa !173
  %406 = icmp sgt i32 %405, 0
  br i1 %406, label %.lr.ph9.i, label %.preheader.i10

.lr.ph9.i:                                        ; preds = %.preheader6.i
  %407 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 6
  br label %431

; <label>:408                                     ; preds = %422, %.lr.ph14.i
  %409 = phi i32 [ %381, %.lr.ph14.i ], [ %423, %422 ]
  %indvars.iv24.i = phi i64 [ 0, %.lr.ph14.i ], [ %indvars.iv.next25.i, %422 ]
  %410 = load %struct.lua_TValue** %383, align 8
  %411 = bitcast %struct.lua_TValue* %410 to %struct.Upvaldesc*
  %412 = getelementptr inbounds %struct.Upvaldesc* %411, i64 %indvars.iv24.i, i32 0
  %413 = load %union.TString** %412, align 8, !tbaa !77
  %414 = icmp eq %union.TString* %413, null
  br i1 %414, label %422, label %415

; <label>:415                                     ; preds = %408
  %416 = getelementptr inbounds %union.TString* %413, i64 0, i32 0, i32 2
  %417 = load i8* %416, align 1, !tbaa !28
  %418 = and i8 %417, 3
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %422, label %420

; <label>:420                                     ; preds = %415
  %421 = bitcast %union.TString* %413 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %421) #3
  %.pre30.i = load i32* %380, align 4, !tbaa !73
  br label %422

; <label>:422                                     ; preds = %420, %415, %408
  %423 = phi i32 [ %409, %415 ], [ %409, %408 ], [ %.pre30.i, %420 ]
  %indvars.iv.next25.i = add nuw nsw i64 %indvars.iv24.i, 1
  %424 = trunc i64 %indvars.iv.next25.i to i32
  %425 = icmp slt i32 %424, %423
  br i1 %425, label %408, label %.preheader6.i

.preheader.i10:                                   ; preds = %445, %.preheader6.i
  %426 = phi i32 [ %405, %.preheader6.i ], [ %446, %445 ]
  %427 = getelementptr inbounds %struct.Proto* %350, i64 0, i32 16
  %428 = load i32* %427, align 4, !tbaa !177
  %429 = icmp sgt i32 %428, 0
  br i1 %429, label %.lr.ph.i11, label %traverseproto.exit

.lr.ph.i11:                                       ; preds = %.preheader.i10
  %430 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 8
  br label %449

; <label>:431                                     ; preds = %445, %.lr.ph9.i
  %432 = phi i32 [ %405, %.lr.ph9.i ], [ %446, %445 ]
  %indvars.iv22.i = phi i64 [ 0, %.lr.ph9.i ], [ %indvars.iv.next23.i, %445 ]
  %433 = load %struct.CallInfo** %407, align 8
  %434 = bitcast %struct.CallInfo* %433 to %struct.Proto**
  %435 = getelementptr inbounds %struct.Proto** %434, i64 %indvars.iv22.i
  %436 = load %struct.Proto** %435, align 8, !tbaa !25
  %437 = icmp eq %struct.Proto* %436, null
  br i1 %437, label %445, label %438

; <label>:438                                     ; preds = %431
  %439 = getelementptr inbounds %struct.Proto* %436, i64 0, i32 2
  %440 = load i8* %439, align 1, !tbaa !28
  %441 = and i8 %440, 3
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %445, label %443

; <label>:443                                     ; preds = %438
  %444 = bitcast %struct.Proto* %436 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %444) #3
  %.pre29.i = load i32* %404, align 4, !tbaa !173
  br label %445

; <label>:445                                     ; preds = %443, %438, %431
  %446 = phi i32 [ %432, %438 ], [ %432, %431 ], [ %.pre29.i, %443 ]
  %indvars.iv.next23.i = add nuw nsw i64 %indvars.iv22.i, 1
  %447 = trunc i64 %indvars.iv.next23.i to i32
  %448 = icmp slt i32 %447, %446
  br i1 %448, label %431, label %.preheader.i10

; <label>:449                                     ; preds = %463, %.lr.ph.i11
  %450 = phi i32 [ %428, %.lr.ph.i11 ], [ %464, %463 ]
  %indvars.iv.i12 = phi i64 [ 0, %.lr.ph.i11 ], [ %indvars.iv.next.i13, %463 ]
  %451 = load %struct.lua_TValue** %430, align 8
  %452 = bitcast %struct.lua_TValue* %451 to %struct.LocVar*
  %453 = getelementptr inbounds %struct.LocVar* %452, i64 %indvars.iv.i12, i32 0
  %454 = load %union.TString** %453, align 8, !tbaa !179
  %455 = icmp eq %union.TString* %454, null
  br i1 %455, label %463, label %456

; <label>:456                                     ; preds = %449
  %457 = getelementptr inbounds %union.TString* %454, i64 0, i32 0, i32 2
  %458 = load i8* %457, align 1, !tbaa !28
  %459 = and i8 %458, 3
  %460 = icmp eq i8 %459, 0
  br i1 %460, label %463, label %461

; <label>:461                                     ; preds = %456
  %462 = bitcast %union.TString* %454 to %union.GCObject*
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %462) #3
  %.pre28.i = load i32* %427, align 4, !tbaa !177
  br label %463

; <label>:463                                     ; preds = %461, %456, %449
  %464 = phi i32 [ %450, %456 ], [ %450, %449 ], [ %.pre28.i, %461 ]
  %indvars.iv.next.i13 = add nuw nsw i64 %indvars.iv.i12, 1
  %465 = trunc i64 %indvars.iv.next.i13 to i32
  %466 = icmp slt i32 %465, %464
  br i1 %466, label %449, label %._crit_edge.i15

._crit_edge.i15:                                  ; preds = %463
  %.pre.i14 = load i32* %404, align 4, !tbaa !173
  br label %traverseproto.exit

traverseproto.exit:                               ; preds = %._crit_edge.i15, %.preheader.i10
  %467 = phi i32 [ %.pre.i14, %._crit_edge.i15 ], [ %426, %.preheader.i10 ]
  %.lcssa.i16 = phi i32 [ %464, %._crit_edge.i15 ], [ %428, %.preheader.i10 ]
  %468 = getelementptr inbounds %union.GCObject* %2, i64 0, i32 0, i32 17
  %469 = bitcast void (%struct.lua_State*, %struct.lua_Debug*)** %468 to i32*
  %470 = load i32* %469, align 4, !tbaa !106
  %471 = shl i32 %467, 3
  %472 = load i32* %376, align 4, !tbaa !110
  %473 = getelementptr inbounds %struct.Proto* %350, i64 0, i32 14
  %474 = load i32* %473, align 4, !tbaa !107
  %475 = load i32* %380, align 4, !tbaa !73
  %tmp.i = add i32 %472, %.lcssa.i16
  %tmp1.i = add i32 %tmp.i, %475
  %tmp2.i = shl i32 %tmp1.i, 4
  %tmp3.i = add i32 %474, %470
  %tmp4.i = shl i32 %tmp3.i, 2
  %476 = add i32 %471, 128
  %477 = add i32 %476, %tmp4.i
  %478 = add i32 %477, %tmp2.i
  %479 = sext i32 %478 to i64
  br label %traversestack.exit

traversestack.exit:                               ; preds = %traverseproto.exit, %.loopexit.i, %291, %traverseCclosure.exit, %traverseLclosure.exit, %traversetable.exit
  %size.0 = phi i64 [ %479, %traverseproto.exit ], [ %290, %traverseCclosure.exit ], [ %260, %traverseLclosure.exit ], [ %221, %traversetable.exit ], [ %348, %.loopexit.i ], [ 1, %291 ]
  %480 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 4
  %481 = load i64* %480, align 8, !tbaa !209
  %482 = add i64 %481, %size.0
  store i64 %482, i64* %480, align 8, !tbaa !209
  br label %483

; <label>:483                                     ; preds = %traversestack.exit, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @traverseephemeron(%struct.global_State* %g, %struct.Table* %h) #0 {
  %1 = getelementptr inbounds %struct.Table* %h, i64 0, i32 4
  %2 = load i8* %1, align 1, !tbaa !214
  %3 = zext i8 %2 to i32
  %4 = shl i32 1, %3
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.Table* %h, i64 0, i32 7
  %7 = load %struct.Node** %6, align 8, !tbaa !216
  %8 = getelementptr inbounds %struct.Node* %7, i64 %5
  %9 = getelementptr inbounds %struct.Table* %h, i64 0, i32 10
  %10 = load i32* %9, align 4, !tbaa !215
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %.lr.ph14, label %32

.lr.ph14:                                         ; preds = %0
  %12 = getelementptr inbounds %struct.Table* %h, i64 0, i32 6
  br label %13

; <label>:13                                      ; preds = %28, %.lr.ph14
  %14 = phi i32 [ %10, %.lr.ph14 ], [ %29, %28 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph14 ], [ %indvars.iv.next, %28 ]
  %marked.011 = phi i32 [ 0, %.lr.ph14 ], [ %marked.1, %28 ]
  %15 = load %struct.lua_TValue** %12, align 8, !tbaa !217
  %16 = getelementptr inbounds %struct.lua_TValue* %15, i64 %indvars.iv, i32 1
  %17 = load i32* %16, align 4, !tbaa !15
  %18 = and i32 %17, 64
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

; <label>:20                                      ; preds = %13
  %21 = getelementptr inbounds %struct.lua_TValue* %15, i64 %indvars.iv, i32 0, i32 0
  %22 = load %union.GCObject** %21, align 8, !tbaa !25
  %23 = getelementptr inbounds %union.GCObject* %22, i64 0, i32 0, i32 2
  %24 = load i8* %23, align 1, !tbaa !28
  %25 = and i8 %24, 3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %28, label %27

; <label>:27                                      ; preds = %20
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %22)
  %.pre18 = load i32* %9, align 4, !tbaa !215
  br label %28

; <label>:28                                      ; preds = %27, %20, %13
  %29 = phi i32 [ %.pre18, %27 ], [ %14, %20 ], [ %14, %13 ]
  %marked.1 = phi i32 [ 1, %27 ], [ %marked.011, %20 ], [ %marked.011, %13 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %30 = trunc i64 %indvars.iv.next to i32
  %31 = icmp slt i32 %30, %29
  br i1 %31, label %13, label %._crit_edge15

._crit_edge15:                                    ; preds = %28
  %.pre = load %struct.Node** %6, align 8, !tbaa !216
  br label %32

; <label>:32                                      ; preds = %._crit_edge15, %0
  %33 = phi %struct.Node* [ %.pre, %._crit_edge15 ], [ %7, %0 ]
  %marked.0.lcssa = phi i32 [ %marked.1, %._crit_edge15 ], [ 0, %0 ]
  %34 = icmp ult %struct.Node* %33, %8
  br i1 %34, label %.lr.ph, label %.thread

.lr.ph:                                           ; preds = %removeentry.exit, %32
  %marked.27 = phi i32 [ %marked.3, %removeentry.exit ], [ %marked.0.lcssa, %32 ]
  %n.05 = phi %struct.Node* [ %91, %removeentry.exit ], [ %33, %32 ]
  %prop.03 = phi i32 [ %prop.1, %removeentry.exit ], [ 0, %32 ]
  %hasclears.01 = phi i32 [ %hasclears.1, %removeentry.exit ], [ 0, %32 ]
  %35 = getelementptr inbounds %struct.Node* %n.05, i64 0, i32 0, i32 1
  %36 = load i32* %35, align 4, !tbaa !15
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %struct.Node* %n.05, i64 0, i32 1, i32 0, i32 1
  %39 = load i32* %38, align 4, !tbaa !15
  %40 = and i32 %39, 64
  %41 = icmp eq i32 %40, 0
  br i1 %37, label %42, label %51

; <label>:42                                      ; preds = %.lr.ph
  br i1 %41, label %removeentry.exit, label %43

; <label>:43                                      ; preds = %42
  %44 = getelementptr inbounds %struct.Node* %n.05, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %union.GCObject** %44, align 8, !tbaa !25
  %46 = getelementptr inbounds %union.GCObject* %45, i64 0, i32 0, i32 2
  %47 = load i8* %46, align 1, !tbaa !28
  %48 = and i8 %47, 3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %removeentry.exit, label %50

; <label>:50                                      ; preds = %43
  store i32 11, i32* %38, align 4, !tbaa !15
  br label %removeentry.exit

; <label>:51                                      ; preds = %.lr.ph
  br i1 %41, label %iscleared.exit.thread, label %52

; <label>:52                                      ; preds = %51
  %53 = and i32 %39, 15
  %54 = icmp eq i32 %53, 4
  %55 = getelementptr inbounds %struct.Node* %n.05, i64 0, i32 1, i32 0, i32 0, i32 0
  %56 = load %union.GCObject** %55, align 8, !tbaa !25
  br i1 %54, label %57, label %iscleared.exit

; <label>:57                                      ; preds = %52
  %58 = icmp eq %union.GCObject* %56, null
  br i1 %58, label %iscleared.exit.thread, label %59

; <label>:59                                      ; preds = %57
  %60 = getelementptr inbounds %union.GCObject* %56, i64 0, i32 0, i32 2
  %61 = load i8* %60, align 1, !tbaa !28
  %62 = and i8 %61, 3
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %iscleared.exit.thread, label %64

; <label>:64                                      ; preds = %59
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %56) #3
  %.pre17 = load i32* %35, align 4, !tbaa !15
  br label %iscleared.exit.thread

iscleared.exit.thread:                            ; preds = %64, %59, %57, %51
  %65 = phi i32 [ %36, %51 ], [ %36, %59 ], [ %36, %57 ], [ %.pre17, %64 ]
  %66 = and i32 %65, 64
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %removeentry.exit, label %83

iscleared.exit:                                   ; preds = %52
  %68 = getelementptr inbounds %union.GCObject* %56, i64 0, i32 0, i32 2
  %69 = load i8* %68, align 1, !tbaa !28
  %70 = and i8 %69, 3
  %71 = icmp eq i8 %70, 0
  %72 = and i32 %36, 64
  %73 = icmp eq i32 %72, 0
  br i1 %71, label %82, label %74

; <label>:74                                      ; preds = %iscleared.exit
  br i1 %73, label %removeentry.exit, label %75

; <label>:75                                      ; preds = %74
  %76 = getelementptr inbounds %struct.Node* %n.05, i64 0, i32 0, i32 0, i32 0
  %77 = load %union.GCObject** %76, align 8, !tbaa !25
  %78 = getelementptr inbounds %union.GCObject* %77, i64 0, i32 0, i32 2
  %79 = load i8* %78, align 1, !tbaa !28
  %80 = and i8 %79, 3
  %81 = icmp eq i8 %80, 0
  %prop.0. = select i1 %81, i32 %prop.03, i32 1
  br label %removeentry.exit

; <label>:82                                      ; preds = %iscleared.exit
  br i1 %73, label %removeentry.exit, label %83

; <label>:83                                      ; preds = %82, %iscleared.exit.thread
  %84 = getelementptr inbounds %struct.Node* %n.05, i64 0, i32 0, i32 0, i32 0
  %85 = load %union.GCObject** %84, align 8, !tbaa !25
  %86 = getelementptr inbounds %union.GCObject* %85, i64 0, i32 0, i32 2
  %87 = load i8* %86, align 1, !tbaa !28
  %88 = and i8 %87, 3
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %removeentry.exit, label %90

; <label>:90                                      ; preds = %83
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %85)
  br label %removeentry.exit

removeentry.exit:                                 ; preds = %90, %83, %82, %75, %74, %iscleared.exit.thread, %50, %43, %42
  %hasclears.1 = phi i32 [ 1, %74 ], [ %hasclears.01, %90 ], [ %hasclears.01, %83 ], [ %hasclears.01, %82 ], [ 1, %75 ], [ %hasclears.01, %42 ], [ %hasclears.01, %43 ], [ %hasclears.01, %50 ], [ %hasclears.01, %iscleared.exit.thread ]
  %prop.1 = phi i32 [ %prop.03, %74 ], [ %prop.03, %90 ], [ %prop.03, %83 ], [ %prop.03, %82 ], [ %prop.0., %75 ], [ %prop.03, %42 ], [ %prop.03, %43 ], [ %prop.03, %50 ], [ %prop.03, %iscleared.exit.thread ]
  %marked.3 = phi i32 [ %marked.27, %74 ], [ 1, %90 ], [ %marked.27, %83 ], [ %marked.27, %82 ], [ %marked.27, %75 ], [ %marked.27, %42 ], [ %marked.27, %43 ], [ %marked.27, %50 ], [ %marked.27, %iscleared.exit.thread ]
  %91 = getelementptr inbounds %struct.Node* %n.05, i64 1
  %92 = icmp ult %struct.Node* %91, %8
  br i1 %92, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %removeentry.exit
  %93 = icmp eq i32 %prop.1, 0
  br i1 %93, label %99, label %94

; <label>:94                                      ; preds = %._crit_edge
  %95 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 21
  %96 = load %union.GCObject** %95, align 8, !tbaa !25
  %97 = getelementptr inbounds %struct.Table* %h, i64 0, i32 9
  store %union.GCObject* %96, %union.GCObject** %97, align 8, !tbaa !195
  %98 = bitcast %struct.Table* %h to %union.GCObject*
  store %union.GCObject* %98, %union.GCObject** %95, align 8, !tbaa !25
  br label %110

; <label>:99                                      ; preds = %._crit_edge
  %100 = icmp eq i32 %hasclears.1, 0
  br i1 %100, label %.thread, label %101

; <label>:101                                     ; preds = %99
  %102 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 22
  %103 = load %union.GCObject** %102, align 8, !tbaa !25
  %104 = getelementptr inbounds %struct.Table* %h, i64 0, i32 9
  store %union.GCObject* %103, %union.GCObject** %104, align 8, !tbaa !195
  %105 = bitcast %struct.Table* %h to %union.GCObject*
  store %union.GCObject* %105, %union.GCObject** %102, align 8, !tbaa !25
  br label %110

.thread:                                          ; preds = %99, %32
  %marked.2.lcssa2022 = phi i32 [ %marked.3, %99 ], [ %marked.0.lcssa, %32 ]
  %106 = getelementptr inbounds %struct.global_State* %g, i64 0, i32 19
  %107 = load %union.GCObject** %106, align 8, !tbaa !25
  %108 = getelementptr inbounds %struct.Table* %h, i64 0, i32 9
  store %union.GCObject* %107, %union.GCObject** %108, align 8, !tbaa !195
  %109 = bitcast %struct.Table* %h to %union.GCObject*
  store %union.GCObject* %109, %union.GCObject** %106, align 8, !tbaa !25
  br label %110

; <label>:110                                     ; preds = %.thread, %101, %94
  %marked.2.lcssa19 = phi i32 [ %marked.3, %101 ], [ %marked.2.lcssa2022, %.thread ], [ %marked.3, %94 ]
  ret i32 %marked.2.lcssa19
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @clearvalues(%struct.global_State* %g, %union.GCObject* readonly %l, %union.GCObject* readnone %f) #0 {
  %1 = icmp eq %union.GCObject* %l, %f
  br i1 %1, label %._crit_edge11, label %.lr.ph10

.lr.ph10:                                         ; preds = %._crit_edge7, %0
  %.08 = phi %union.GCObject* [ %88, %._crit_edge7 ], [ %l, %0 ]
  %2 = bitcast %union.GCObject* %.08 to %struct.Table*
  %3 = getelementptr inbounds %struct.Table* %2, i64 0, i32 4
  %4 = load i8* %3, align 1, !tbaa !214
  %5 = zext i8 %4 to i32
  %6 = shl i32 1, %5
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %union.GCObject* %.08, i64 0, i32 0, i32 6
  %9 = load %struct.CallInfo** %8, align 8
  %10 = bitcast %struct.CallInfo* %9 to %struct.Node*
  %11 = getelementptr inbounds %struct.Node* %10, i64 %7
  %12 = getelementptr inbounds %union.GCObject* %.08, i64 0, i32 0, i32 9
  %13 = bitcast %struct.lua_TValue** %12 to i32*
  %14 = load i32* %13, align 4, !tbaa !215
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %.lr.ph, label %46

.lr.ph:                                           ; preds = %.lr.ph10
  %16 = getelementptr inbounds %union.GCObject* %.08, i64 0, i32 0, i32 5
  br label %17

; <label>:17                                      ; preds = %iscleared.exit.thread, %.lr.ph
  %18 = phi i32 [ %14, %.lr.ph ], [ %43, %iscleared.exit.thread ]
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %iscleared.exit.thread ]
  %19 = load %struct.global_State** %16, align 8
  %20 = bitcast %struct.global_State* %19 to %struct.lua_TValue*
  %21 = getelementptr inbounds %struct.lua_TValue* %20, i64 %indvars.iv, i32 1
  %22 = load i32* %21, align 4, !tbaa !15
  %23 = and i32 %22, 64
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %iscleared.exit.thread, label %25

; <label>:25                                      ; preds = %17
  %26 = and i32 %22, 15
  %27 = icmp eq i32 %26, 4
  %28 = getelementptr inbounds %struct.lua_TValue* %20, i64 %indvars.iv, i32 0, i32 0
  %29 = load %union.GCObject** %28, align 8, !tbaa !25
  br i1 %27, label %30, label %iscleared.exit

; <label>:30                                      ; preds = %25
  %31 = icmp eq %union.GCObject* %29, null
  br i1 %31, label %iscleared.exit.thread, label %32

; <label>:32                                      ; preds = %30
  %33 = getelementptr inbounds %union.GCObject* %29, i64 0, i32 0, i32 2
  %34 = load i8* %33, align 1, !tbaa !28
  %35 = and i8 %34, 3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %iscleared.exit.thread, label %37

; <label>:37                                      ; preds = %32
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %29) #3
  %.pre12 = load i32* %13, align 4, !tbaa !215
  br label %iscleared.exit.thread

iscleared.exit:                                   ; preds = %25
  %38 = getelementptr inbounds %union.GCObject* %29, i64 0, i32 0, i32 2
  %39 = load i8* %38, align 1, !tbaa !28
  %40 = and i8 %39, 3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %iscleared.exit.thread, label %42

; <label>:42                                      ; preds = %iscleared.exit
  store i32 0, i32* %21, align 4, !tbaa !15
  br label %iscleared.exit.thread

iscleared.exit.thread:                            ; preds = %42, %iscleared.exit, %37, %32, %30, %17
  %43 = phi i32 [ %.pre12, %37 ], [ %18, %30 ], [ %18, %32 ], [ %18, %17 ], [ %18, %iscleared.exit ], [ %18, %42 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %44 = trunc i64 %indvars.iv.next to i32
  %45 = icmp slt i32 %44, %43
  br i1 %45, label %17, label %._crit_edge

._crit_edge:                                      ; preds = %iscleared.exit.thread
  %.pre = load %struct.CallInfo** %8, align 8
  br label %46

; <label>:46                                      ; preds = %._crit_edge, %.lr.ph10
  %47 = phi %struct.CallInfo* [ %.pre, %._crit_edge ], [ %9, %.lr.ph10 ]
  %48 = bitcast %struct.CallInfo* %47 to %struct.Node*
  %49 = icmp ult %struct.Node* %48, %11
  br i1 %49, label %.lr.ph6, label %._crit_edge7

.lr.ph6:                                          ; preds = %removeentry.exit, %46
  %n.04 = phi %struct.Node* [ %84, %removeentry.exit ], [ %48, %46 ]
  %50 = getelementptr inbounds %struct.Node* %n.04, i64 0, i32 0, i32 1
  %51 = load i32* %50, align 4, !tbaa !15
  %52 = and i32 %51, 64
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %removeentry.exit, label %54

; <label>:54                                      ; preds = %.lr.ph6
  %55 = and i32 %51, 15
  %56 = icmp eq i32 %55, 4
  %57 = getelementptr inbounds %struct.Node* %n.04, i64 0, i32 0, i32 0, i32 0
  %58 = load %union.GCObject** %57, align 8, !tbaa !25
  br i1 %56, label %59, label %iscleared.exit2

; <label>:59                                      ; preds = %54
  %60 = icmp eq %union.GCObject* %58, null
  br i1 %60, label %removeentry.exit, label %61

; <label>:61                                      ; preds = %59
  %62 = getelementptr inbounds %union.GCObject* %58, i64 0, i32 0, i32 2
  %63 = load i8* %62, align 1, !tbaa !28
  %64 = and i8 %63, 3
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %removeentry.exit, label %66

; <label>:66                                      ; preds = %61
  tail call fastcc void @reallymarkobject(%struct.global_State* %g, %union.GCObject* %58) #3
  br label %removeentry.exit

iscleared.exit2:                                  ; preds = %54
  %67 = getelementptr inbounds %union.GCObject* %58, i64 0, i32 0, i32 2
  %68 = load i8* %67, align 1, !tbaa !28
  %69 = and i8 %68, 3
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %removeentry.exit, label %71

; <label>:71                                      ; preds = %iscleared.exit2
  store i32 0, i32* %50, align 4, !tbaa !15
  %72 = getelementptr inbounds %struct.Node* %n.04, i64 0, i32 1, i32 0, i32 1
  %73 = load i32* %72, align 4, !tbaa !15
  %74 = and i32 %73, 64
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %removeentry.exit, label %76

; <label>:76                                      ; preds = %71
  %77 = getelementptr inbounds %struct.Node* %n.04, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %union.GCObject** %77, align 8, !tbaa !25
  %79 = getelementptr inbounds %union.GCObject* %78, i64 0, i32 0, i32 2
  %80 = load i8* %79, align 1, !tbaa !28
  %81 = and i8 %80, 3
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %removeentry.exit, label %83

; <label>:83                                      ; preds = %76
  store i32 11, i32* %72, align 4, !tbaa !15
  br label %removeentry.exit

removeentry.exit:                                 ; preds = %83, %76, %71, %iscleared.exit2, %66, %61, %59, %.lr.ph6
  %84 = getelementptr inbounds %struct.Node* %n.04, i64 1
  %85 = icmp ult %struct.Node* %84, %11
  br i1 %85, label %.lr.ph6, label %._crit_edge7

._crit_edge7:                                     ; preds = %removeentry.exit, %46
  %86 = getelementptr inbounds %union.GCObject* %.08, i64 0, i32 0, i32 8
  %87 = load %struct.lua_TValue** %86, align 8
  %88 = bitcast %struct.lua_TValue* %87 to %union.GCObject*
  %89 = icmp eq %union.GCObject* %88, %f
  br i1 %89, label %._crit_edge11, label %.lr.ph10

._crit_edge11:                                    ; preds = %._crit_edge7, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @dothecall(%struct.lua_State* %L, i8* nocapture readnone %ud) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 4
  %2 = load %struct.lua_TValue** %1, align 8, !tbaa !12
  %3 = getelementptr inbounds %struct.lua_TValue* %2, i64 -2
  tail call void @luaD_call(%struct.lua_State* %L, %struct.lua_TValue* %3, i32 0, i32 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaX_init(%struct.lua_State* %L) #0 {
  br label %1

; <label>:1                                       ; preds = %1, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %1 ]
  %2 = getelementptr inbounds [33 x i8*]* @luaX_tokens, i64 0, i64 %indvars.iv
  %3 = load i8** %2, align 8, !tbaa !25
  %4 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %3) #3
  %5 = getelementptr inbounds %union.TString* %4, i64 0, i32 0, i32 2
  %6 = load i8* %5, align 1, !tbaa !218
  %7 = or i8 %6, 32
  store i8 %7, i8* %5, align 1, !tbaa !218
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = getelementptr inbounds %union.TString* %4, i64 0, i32 0, i32 3
  %9 = trunc i64 %indvars.iv.next to i8
  store i8 %9, i8* %8, align 1, !tbaa !219
  %exitcond = icmp eq i64 %indvars.iv.next, 22
  br i1 %exitcond, label %10, label %1

; <label>:10                                      ; preds = %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaX_token2str(%struct.LexState.194* nocapture readonly %ls, i32 %token) #0 {
  %1 = icmp slt i32 %token, 257
  br i1 %1, label %2, label %15

; <label>:2                                       ; preds = %0
  %3 = add nsw i32 %token, 1
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %4
  %6 = load i8* %5, align 1, !tbaa !86
  %7 = and i8 %6, 4
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 6
  %10 = load %struct.lua_State** %9, align 8, !tbaa !89
  br i1 %8, label %13, label %11

; <label>:11                                      ; preds = %2
  %12 = tail call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %10, i8* getelementptr inbounds ([5 x i8]* @.str78, i64 0, i64 0), i32 %token) #3
  br label %25

; <label>:13                                      ; preds = %2
  %14 = tail call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %10, i8* getelementptr inbounds ([9 x i8]* @.str179, i64 0, i64 0), i32 %token) #3
  br label %25

; <label>:15                                      ; preds = %0
  %16 = add nsw i32 %token, -257
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds [33 x i8*]* @luaX_tokens, i64 0, i64 %17
  %19 = load i8** %18, align 8, !tbaa !25
  %20 = icmp slt i32 %token, 286
  br i1 %20, label %21, label %25

; <label>:21                                      ; preds = %15
  %22 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 6
  %23 = load %struct.lua_State** %22, align 8, !tbaa !89
  %24 = tail call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %23, i8* getelementptr inbounds ([5 x i8]* @.str280, i64 0, i64 0), i8* %19) #3
  br label %25

; <label>:25                                      ; preds = %21, %15, %13, %11
  %.0 = phi i8* [ %24, %21 ], [ %12, %11 ], [ %14, %13 ], [ %19, %15 ]
  ret i8* %.0
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaX_syntaxerror(%struct.LexState.194* nocapture readonly %ls, i8* %msg) #4 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 3, i32 0
  %2 = load i32* %1, align 4, !tbaa !220
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* %msg, i32 %2) #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define %union.TString* @luaX_newstring(%struct.LexState.194* nocapture readonly %ls, i8* %str, i64 %l) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 6
  %2 = load %struct.lua_State** %1, align 8, !tbaa !89
  %3 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString* (%struct.lua_State*, i8*, i64)*)(%struct.lua_State* %2, i8* %str, i64 %l) #3
  %4 = getelementptr inbounds %struct.lua_State* %2, i64 0, i32 4
  %5 = load %struct.lua_TValue** %4, align 8, !tbaa !12
  %6 = getelementptr inbounds %struct.lua_TValue* %5, i64 1
  store %struct.lua_TValue* %6, %struct.lua_TValue** %4, align 8, !tbaa !12
  %7 = bitcast %union.TString* %3 to %union.GCObject*
  %8 = getelementptr inbounds %struct.lua_TValue* %5, i64 0, i32 0, i32 0
  store %union.GCObject* %7, %union.GCObject** %8, align 8, !tbaa !25
  %9 = getelementptr inbounds %union.TString* %3, i64 0, i32 0, i32 1
  %10 = load i8* %9, align 1, !tbaa !38
  %11 = zext i8 %10 to i32
  %12 = or i32 %11, 64
  %13 = getelementptr inbounds %struct.lua_TValue* %5, i64 0, i32 1
  store i32 %12, i32* %13, align 4, !tbaa !15
  %14 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 5
  %15 = load %struct.FuncState.187** %14, align 8, !tbaa !221
  %16 = getelementptr inbounds %struct.FuncState.187* %15, i64 0, i32 1
  %17 = load %struct.Table** %16, align 8, !tbaa !102
  %18 = load %struct.lua_TValue** %4, align 8, !tbaa !12
  %19 = getelementptr inbounds %struct.lua_TValue* %18, i64 -1
  %20 = tail call %struct.lua_TValue* @luaH_set(%struct.lua_State* %2, %struct.Table* %17, %struct.lua_TValue* %19) #3
  %21 = getelementptr inbounds %struct.lua_TValue* %20, i64 0, i32 1
  %22 = load i32* %21, align 4, !tbaa !15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %32

; <label>:24                                      ; preds = %0
  %25 = bitcast %struct.lua_TValue* %20 to i32*
  store i32 1, i32* %25, align 4, !tbaa !1
  store i32 1, i32* %21, align 4, !tbaa !15
  %26 = getelementptr inbounds %struct.lua_State* %2, i64 0, i32 5
  %27 = load %struct.global_State** %26, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.global_State* %27, i64 0, i32 3
  %29 = load i64* %28, align 8, !tbaa !33
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %36

; <label>:31                                      ; preds = %24
  tail call void @luaC_step(%struct.lua_State* %2) #3
  br label %36

; <label>:32                                      ; preds = %0
  %33 = getelementptr inbounds %struct.lua_TValue* %20, i64 1, i32 0, i32 0
  %34 = load %union.GCObject** %33, align 8, !tbaa !25
  %35 = bitcast %union.GCObject* %34 to %union.TString*
  br label %36

; <label>:36                                      ; preds = %32, %31, %24
  %ts.0 = phi %union.TString* [ %3, %31 ], [ %3, %24 ], [ %35, %32 ]
  %37 = load %struct.lua_TValue** %4, align 8, !tbaa !12
  %38 = getelementptr inbounds %struct.lua_TValue* %37, i64 -1
  store %struct.lua_TValue* %38, %struct.lua_TValue** %4, align 8, !tbaa !12
  ret %union.TString* %ts.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaX_setinput(%struct.lua_State* %L, %struct.LexState.194* nocapture %ls, %struct.Zio* %z, %union.TString* %source, i32 %firstchar) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 12
  store i8 46, i8* %1, align 1, !tbaa !222
  %2 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 6
  store %struct.lua_State* %L, %struct.lua_State** %2, align 8, !tbaa !89
  %3 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 0
  store i32 %firstchar, i32* %3, align 4, !tbaa !223
  %4 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 4, i32 0
  store i32 286, i32* %4, align 4, !tbaa !224
  %5 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 7
  store %struct.Zio* %z, %struct.Zio** %5, align 8, !tbaa !225
  %6 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 5
  store %struct.FuncState.187* null, %struct.FuncState.187** %6, align 8, !tbaa !221
  %7 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 1
  store i32 1, i32* %7, align 4, !tbaa !226
  %8 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 2
  store i32 1, i32* %8, align 4, !tbaa !108
  %9 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 10
  store %union.TString* %source, %union.TString** %9, align 8, !tbaa !227
  %10 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str381, i64 0, i64 0)) #3
  %11 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 11
  store %union.TString* %10, %union.TString** %11, align 8, !tbaa !228
  %12 = getelementptr inbounds %union.TString* %10, i64 0, i32 0, i32 2
  %13 = load i8* %12, align 1, !tbaa !218
  %14 = or i8 %13, 32
  store i8 %14, i8* %12, align 1, !tbaa !218
  %15 = load %struct.lua_State** %2, align 8, !tbaa !89
  %16 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %17 = load %struct.Mbuffer** %16, align 8, !tbaa !229
  %18 = getelementptr inbounds %struct.Mbuffer* %17, i64 0, i32 0
  %19 = load i8** %18, align 8, !tbaa !161
  %20 = getelementptr inbounds %struct.Mbuffer* %17, i64 0, i32 2
  %21 = load i64* %20, align 8, !tbaa !162
  %22 = tail call i8* @luaM_realloc_(%struct.lua_State* %15, i8* %19, i64 %21, i64 32) #3
  %23 = load %struct.Mbuffer** %16, align 8, !tbaa !229
  %24 = getelementptr inbounds %struct.Mbuffer* %23, i64 0, i32 0
  store i8* %22, i8** %24, align 8, !tbaa !161
  %25 = getelementptr inbounds %struct.Mbuffer* %23, i64 0, i32 2
  store i64 32, i64* %25, align 8, !tbaa !162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaX_next(%struct.LexState.194* %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !226
  %3 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 2
  store i32 %2, i32* %3, align 4, !tbaa !108
  %4 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 4
  %5 = getelementptr inbounds %struct.Token* %4, i64 0, i32 0
  %6 = load i32* %5, align 4, !tbaa !224
  %7 = icmp eq i32 %6, 286
  br i1 %7, label %12, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 3
  %10 = bitcast %struct.Token* %9 to i8*
  %11 = bitcast %struct.Token* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false), !tbaa.struct !230
  store i32 286, i32* %5, align 4, !tbaa !224
  br label %16

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 3, i32 1
  %14 = tail call fastcc i32 @llex(%struct.LexState.194* %ls, %union.SemInfo* %13)
  %15 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 3, i32 0
  store i32 %14, i32* %15, align 4, !tbaa !220
  br label %16

; <label>:16                                      ; preds = %12, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaX_lookahead(%struct.LexState.194* %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 4, i32 1
  %2 = tail call fastcc i32 @llex(%struct.LexState.194* %ls, %union.SemInfo* %1)
  %3 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 4, i32 0
  store i32 %2, i32* %3, align 4, !tbaa !224
  ret i32 %2
}

declare %struct.lconv* @localeconv() #8

; Function Attrs: nounwind readonly
declare i8* @memchr(i8*, i32, i64) #9

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @lexerror(%struct.LexState.194* nocapture readonly %ls, i8* %msg, i32 %token) #4 {
  %buff = alloca [60 x i8], align 16
  %1 = getelementptr inbounds [60 x i8]* %buff, i64 0, i64 0
  call void @llvm.lifetime.start(i64 60, i8* %1) #3
  %2 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 10
  %3 = load %union.TString** %2, align 8, !tbaa !227
  %4 = getelementptr inbounds %union.TString* %3, i64 1
  %5 = bitcast %union.TString* %4 to i8*
  call void @luaO_chunkid(i8* %1, i8* %5, i64 60) #3
  %6 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 6
  %7 = load %struct.lua_State** %6, align 8, !tbaa !89
  %8 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 1
  %9 = load i32* %8, align 4, !tbaa !226
  %10 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %7, i8* getelementptr inbounds ([10 x i8]* @.str1997, i64 0, i64 0), i8* %1, i32 %9, i8* %msg) #3
  %11 = icmp eq i32 %token, 0
  br i1 %11, label %43, label %12

; <label>:12                                      ; preds = %0
  %13 = load %struct.lua_State** %6, align 8, !tbaa !89
  %.off.i = add i32 %token, -287
  %switch.i = icmp ult i32 %.off.i, 3
  br i1 %switch.i, label %14, label %21

; <label>:14                                      ; preds = %12
  call fastcc void @save(%struct.LexState.194* %ls, i32 0) #3
  %15 = load %struct.lua_State** %6, align 8, !tbaa !89
  %16 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %17 = load %struct.Mbuffer** %16, align 8, !tbaa !229
  %18 = getelementptr inbounds %struct.Mbuffer* %17, i64 0, i32 0
  %19 = load i8** %18, align 8, !tbaa !161
  %20 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %15, i8* getelementptr inbounds ([5 x i8]* @.str280, i64 0, i64 0), i8* %19) #3
  br label %txtToken.exit

; <label>:21                                      ; preds = %12
  %22 = icmp slt i32 %token, 257
  br i1 %22, label %23, label %34

; <label>:23                                      ; preds = %21
  %24 = add nsw i32 %token, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %25
  %27 = load i8* %26, align 1, !tbaa !86
  %28 = and i8 %27, 4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

; <label>:30                                      ; preds = %23
  %31 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([5 x i8]* @.str78, i64 0, i64 0), i32 %token) #3
  br label %txtToken.exit

; <label>:32                                      ; preds = %23
  %33 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([9 x i8]* @.str179, i64 0, i64 0), i32 %token) #3
  br label %txtToken.exit

; <label>:34                                      ; preds = %21
  %35 = add nsw i32 %token, -257
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [33 x i8*]* @luaX_tokens, i64 0, i64 %36
  %38 = load i8** %37, align 8, !tbaa !25
  %39 = icmp slt i32 %token, 286
  br i1 %39, label %40, label %txtToken.exit

; <label>:40                                      ; preds = %34
  %41 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([5 x i8]* @.str280, i64 0, i64 0), i8* %38) #3
  br label %txtToken.exit

txtToken.exit:                                    ; preds = %40, %34, %32, %30, %14
  %.0.i = phi i8* [ %20, %14 ], [ %41, %40 ], [ %31, %30 ], [ %33, %32 ], [ %38, %34 ]
  %42 = call i8* (%struct.lua_State*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State*, i8*, ...)*)(%struct.lua_State* %13, i8* getelementptr inbounds ([11 x i8]* @.str2098, i64 0, i64 0), i8* %10, i8* %.0.i) #3
  br label %43

; <label>:43                                      ; preds = %txtToken.exit, %0
  %44 = load %struct.lua_State** %6, align 8, !tbaa !89
  call void @luaD_throw(%struct.lua_State* %44, i32 3) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @llex(%struct.LexState.194* %ls, %union.SemInfo* %seminfo) #0 {
  %c.i.i = alloca [3 x i32], align 4
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %2 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %3 = getelementptr inbounds %struct.Mbuffer* %2, i64 0, i32 1
  store i64 0, i64* %3, align 8, !tbaa !231
  %4 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 0
  %5 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 7
  br label %.critedgethread-pre-split

.critedgethread-pre-split:                        ; preds = %.preheader15, %.preheader15, %.preheader15, %62, %7, %0
  %.pr60 = load i32* %4, align 4, !tbaa !223
  br label %.critedge

.critedge:                                        ; preds = %21, %.critedgethread-pre-split
  %6 = phi i32 [ %.pr60, %.critedgethread-pre-split ], [ %22, %21 ]
  switch i32 %6, label %691 [
    i32 10, label %7
    i32 13, label %7
    i32 32, label %.critedge._crit_edge56
    i32 12, label %.critedge._crit_edge56
    i32 9, label %.critedge._crit_edge56
    i32 11, label %.critedge._crit_edge56
    i32 45, label %23
    i32 91, label %82
    i32 61, label %89
    i32 60, label %122
    i32 62, label %155
    i32 126, label %188
    i32 58, label %221
    i32 34, label %254
    i32 39, label %254
    i32 46, label %474
    i32 48, label %thread-pre-split6
    i32 49, label %thread-pre-split6
    i32 50, label %thread-pre-split6
    i32 51, label %thread-pre-split6
    i32 52, label %thread-pre-split6
    i32 53, label %thread-pre-split6
    i32 54, label %thread-pre-split6
    i32 55, label %thread-pre-split6
    i32 56, label %thread-pre-split6
    i32 57, label %thread-pre-split6
    i32 -1, label %read_numeral.exit
  ]

; <label>:7                                       ; preds = %.critedge, %.critedge
  tail call fastcc void @inclinenumber(%struct.LexState.194* %ls)
  br label %.critedgethread-pre-split

.critedge._crit_edge56:                           ; preds = %.critedge, %.critedge, %.critedge, %.critedge
  %8 = load %struct.Zio** %5, align 8
  %9 = getelementptr inbounds %struct.Zio* %8, i64 0, i32 0
  %10 = load i64* %9, align 8, !tbaa !164
  %11 = add i64 %10, -1
  store i64 %11, i64* %9, align 8, !tbaa !164
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %19, label %13

; <label>:13                                      ; preds = %.critedge._crit_edge56
  %14 = getelementptr inbounds %struct.Zio* %8, i64 0, i32 1
  %15 = load i8** %14, align 8, !tbaa !166
  %16 = getelementptr inbounds i8* %15, i64 1
  store i8* %16, i8** %14, align 8, !tbaa !166
  %17 = load i8* %15, align 1, !tbaa !86
  %18 = zext i8 %17 to i32
  br label %21

; <label>:19                                      ; preds = %.critedge._crit_edge56
  %20 = tail call i32 @luaZ_fill(%struct.Zio* %8) #3
  br label %21

; <label>:21                                      ; preds = %19, %13
  %22 = phi i32 [ %18, %13 ], [ %20, %19 ]
  store i32 %22, i32* %4, align 4, !tbaa !223
  br label %.critedge

; <label>:23                                      ; preds = %.critedge
  %24 = load %struct.Zio** %5, align 8, !tbaa !225
  %25 = getelementptr inbounds %struct.Zio* %24, i64 0, i32 0
  %26 = load i64* %25, align 8, !tbaa !164
  %27 = add i64 %26, -1
  store i64 %27, i64* %25, align 8, !tbaa !164
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %35, label %29

; <label>:29                                      ; preds = %23
  %30 = getelementptr inbounds %struct.Zio* %24, i64 0, i32 1
  %31 = load i8** %30, align 8, !tbaa !166
  %32 = getelementptr inbounds i8* %31, i64 1
  store i8* %32, i8** %30, align 8, !tbaa !166
  %33 = load i8* %31, align 1, !tbaa !86
  %34 = zext i8 %33 to i32
  br label %37

; <label>:35                                      ; preds = %23
  %36 = tail call i32 @luaZ_fill(%struct.Zio* %24) #3
  br label %37

; <label>:37                                      ; preds = %35, %29
  %38 = phi i32 [ %34, %29 ], [ %36, %35 ]
  store i32 %38, i32* %4, align 4, !tbaa !223
  %39 = icmp eq i32 %38, 45
  br i1 %39, label %40, label %read_numeral.exit

; <label>:40                                      ; preds = %37
  %41 = load %struct.Zio** %5, align 8, !tbaa !225
  %42 = getelementptr inbounds %struct.Zio* %41, i64 0, i32 0
  %43 = load i64* %42, align 8, !tbaa !164
  %44 = add i64 %43, -1
  store i64 %44, i64* %42, align 8, !tbaa !164
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %52, label %46

; <label>:46                                      ; preds = %40
  %47 = getelementptr inbounds %struct.Zio* %41, i64 0, i32 1
  %48 = load i8** %47, align 8, !tbaa !166
  %49 = getelementptr inbounds i8* %48, i64 1
  store i8* %49, i8** %47, align 8, !tbaa !166
  %50 = load i8* %48, align 1, !tbaa !86
  %51 = zext i8 %50 to i32
  br label %54

; <label>:52                                      ; preds = %40
  %53 = tail call i32 @luaZ_fill(%struct.Zio* %41) #3
  br label %54

; <label>:54                                      ; preds = %52, %46
  %55 = phi i32 [ %51, %46 ], [ %53, %52 ]
  store i32 %55, i32* %4, align 4, !tbaa !223
  %56 = icmp eq i32 %55, 91
  br i1 %56, label %57, label %.preheader15

; <label>:57                                      ; preds = %54
  %58 = tail call fastcc i32 @skip_sep(%struct.LexState.194* %ls)
  %59 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %60 = getelementptr inbounds %struct.Mbuffer* %59, i64 0, i32 1
  store i64 0, i64* %60, align 8, !tbaa !231
  %61 = icmp sgt i32 %58, -1
  br i1 %61, label %62, label %thread-pre-split

; <label>:62                                      ; preds = %57
  tail call fastcc void @read_long_string(%struct.LexState.194* %ls, %union.SemInfo* null, i32 %58)
  %63 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %64 = getelementptr inbounds %struct.Mbuffer* %63, i64 0, i32 1
  store i64 0, i64* %64, align 8, !tbaa !231
  br label %.critedgethread-pre-split

thread-pre-split:                                 ; preds = %57
  %.pr = load i32* %4, align 4, !tbaa !223
  br label %.preheader15

.preheader15:                                     ; preds = %80, %thread-pre-split, %54
  %65 = phi i32 [ %81, %80 ], [ %.pr, %thread-pre-split ], [ %55, %54 ]
  switch i32 %65, label %66 [
    i32 10, label %.critedgethread-pre-split
    i32 13, label %.critedgethread-pre-split
    i32 -1, label %.critedgethread-pre-split
  ]

; <label>:66                                      ; preds = %.preheader15
  %67 = load %struct.Zio** %5, align 8, !tbaa !225
  %68 = getelementptr inbounds %struct.Zio* %67, i64 0, i32 0
  %69 = load i64* %68, align 8, !tbaa !164
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8, !tbaa !164
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %78, label %72

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds %struct.Zio* %67, i64 0, i32 1
  %74 = load i8** %73, align 8, !tbaa !166
  %75 = getelementptr inbounds i8* %74, i64 1
  store i8* %75, i8** %73, align 8, !tbaa !166
  %76 = load i8* %74, align 1, !tbaa !86
  %77 = zext i8 %76 to i32
  br label %80

; <label>:78                                      ; preds = %66
  %79 = tail call i32 @luaZ_fill(%struct.Zio* %67) #3
  br label %80

; <label>:80                                      ; preds = %78, %72
  %81 = phi i32 [ %77, %72 ], [ %79, %78 ]
  store i32 %81, i32* %4, align 4, !tbaa !223
  br label %.preheader15

; <label>:82                                      ; preds = %.critedge
  %83 = tail call fastcc i32 @skip_sep(%struct.LexState.194* %ls)
  %84 = icmp sgt i32 %83, -1
  br i1 %84, label %85, label %86

; <label>:85                                      ; preds = %82
  tail call fastcc void @read_long_string(%struct.LexState.194* %ls, %union.SemInfo* %seminfo, i32 %83)
  br label %read_numeral.exit

; <label>:86                                      ; preds = %82
  %87 = icmp eq i32 %83, -1
  br i1 %87, label %read_numeral.exit, label %88

; <label>:88                                      ; preds = %86
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* getelementptr inbounds ([30 x i8]* @.str482, i64 0, i64 0), i32 289) #14
  unreachable

; <label>:89                                      ; preds = %.critedge
  %90 = load %struct.Zio** %5, align 8, !tbaa !225
  %91 = getelementptr inbounds %struct.Zio* %90, i64 0, i32 0
  %92 = load i64* %91, align 8, !tbaa !164
  %93 = add i64 %92, -1
  store i64 %93, i64* %91, align 8, !tbaa !164
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %101, label %95

; <label>:95                                      ; preds = %89
  %96 = getelementptr inbounds %struct.Zio* %90, i64 0, i32 1
  %97 = load i8** %96, align 8, !tbaa !166
  %98 = getelementptr inbounds i8* %97, i64 1
  store i8* %98, i8** %96, align 8, !tbaa !166
  %99 = load i8* %97, align 1, !tbaa !86
  %100 = zext i8 %99 to i32
  br label %103

; <label>:101                                     ; preds = %89
  %102 = tail call i32 @luaZ_fill(%struct.Zio* %90) #3
  br label %103

; <label>:103                                     ; preds = %101, %95
  %104 = phi i32 [ %100, %95 ], [ %102, %101 ]
  store i32 %104, i32* %4, align 4, !tbaa !223
  %105 = icmp eq i32 %104, 61
  br i1 %105, label %106, label %read_numeral.exit

; <label>:106                                     ; preds = %103
  %107 = load %struct.Zio** %5, align 8, !tbaa !225
  %108 = getelementptr inbounds %struct.Zio* %107, i64 0, i32 0
  %109 = load i64* %108, align 8, !tbaa !164
  %110 = add i64 %109, -1
  store i64 %110, i64* %108, align 8, !tbaa !164
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %118, label %112

; <label>:112                                     ; preds = %106
  %113 = getelementptr inbounds %struct.Zio* %107, i64 0, i32 1
  %114 = load i8** %113, align 8, !tbaa !166
  %115 = getelementptr inbounds i8* %114, i64 1
  store i8* %115, i8** %113, align 8, !tbaa !166
  %116 = load i8* %114, align 1, !tbaa !86
  %117 = zext i8 %116 to i32
  br label %120

; <label>:118                                     ; preds = %106
  %119 = tail call i32 @luaZ_fill(%struct.Zio* %107) #3
  br label %120

; <label>:120                                     ; preds = %118, %112
  %121 = phi i32 [ %117, %112 ], [ %119, %118 ]
  store i32 %121, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

; <label>:122                                     ; preds = %.critedge
  %123 = load %struct.Zio** %5, align 8, !tbaa !225
  %124 = getelementptr inbounds %struct.Zio* %123, i64 0, i32 0
  %125 = load i64* %124, align 8, !tbaa !164
  %126 = add i64 %125, -1
  store i64 %126, i64* %124, align 8, !tbaa !164
  %127 = icmp eq i64 %125, 0
  br i1 %127, label %134, label %128

; <label>:128                                     ; preds = %122
  %129 = getelementptr inbounds %struct.Zio* %123, i64 0, i32 1
  %130 = load i8** %129, align 8, !tbaa !166
  %131 = getelementptr inbounds i8* %130, i64 1
  store i8* %131, i8** %129, align 8, !tbaa !166
  %132 = load i8* %130, align 1, !tbaa !86
  %133 = zext i8 %132 to i32
  br label %136

; <label>:134                                     ; preds = %122
  %135 = tail call i32 @luaZ_fill(%struct.Zio* %123) #3
  br label %136

; <label>:136                                     ; preds = %134, %128
  %137 = phi i32 [ %133, %128 ], [ %135, %134 ]
  store i32 %137, i32* %4, align 4, !tbaa !223
  %138 = icmp eq i32 %137, 61
  br i1 %138, label %139, label %read_numeral.exit

; <label>:139                                     ; preds = %136
  %140 = load %struct.Zio** %5, align 8, !tbaa !225
  %141 = getelementptr inbounds %struct.Zio* %140, i64 0, i32 0
  %142 = load i64* %141, align 8, !tbaa !164
  %143 = add i64 %142, -1
  store i64 %143, i64* %141, align 8, !tbaa !164
  %144 = icmp eq i64 %142, 0
  br i1 %144, label %151, label %145

; <label>:145                                     ; preds = %139
  %146 = getelementptr inbounds %struct.Zio* %140, i64 0, i32 1
  %147 = load i8** %146, align 8, !tbaa !166
  %148 = getelementptr inbounds i8* %147, i64 1
  store i8* %148, i8** %146, align 8, !tbaa !166
  %149 = load i8* %147, align 1, !tbaa !86
  %150 = zext i8 %149 to i32
  br label %153

; <label>:151                                     ; preds = %139
  %152 = tail call i32 @luaZ_fill(%struct.Zio* %140) #3
  br label %153

; <label>:153                                     ; preds = %151, %145
  %154 = phi i32 [ %150, %145 ], [ %152, %151 ]
  store i32 %154, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

; <label>:155                                     ; preds = %.critedge
  %156 = load %struct.Zio** %5, align 8, !tbaa !225
  %157 = getelementptr inbounds %struct.Zio* %156, i64 0, i32 0
  %158 = load i64* %157, align 8, !tbaa !164
  %159 = add i64 %158, -1
  store i64 %159, i64* %157, align 8, !tbaa !164
  %160 = icmp eq i64 %158, 0
  br i1 %160, label %167, label %161

; <label>:161                                     ; preds = %155
  %162 = getelementptr inbounds %struct.Zio* %156, i64 0, i32 1
  %163 = load i8** %162, align 8, !tbaa !166
  %164 = getelementptr inbounds i8* %163, i64 1
  store i8* %164, i8** %162, align 8, !tbaa !166
  %165 = load i8* %163, align 1, !tbaa !86
  %166 = zext i8 %165 to i32
  br label %169

; <label>:167                                     ; preds = %155
  %168 = tail call i32 @luaZ_fill(%struct.Zio* %156) #3
  br label %169

; <label>:169                                     ; preds = %167, %161
  %170 = phi i32 [ %166, %161 ], [ %168, %167 ]
  store i32 %170, i32* %4, align 4, !tbaa !223
  %171 = icmp eq i32 %170, 61
  br i1 %171, label %172, label %read_numeral.exit

; <label>:172                                     ; preds = %169
  %173 = load %struct.Zio** %5, align 8, !tbaa !225
  %174 = getelementptr inbounds %struct.Zio* %173, i64 0, i32 0
  %175 = load i64* %174, align 8, !tbaa !164
  %176 = add i64 %175, -1
  store i64 %176, i64* %174, align 8, !tbaa !164
  %177 = icmp eq i64 %175, 0
  br i1 %177, label %184, label %178

; <label>:178                                     ; preds = %172
  %179 = getelementptr inbounds %struct.Zio* %173, i64 0, i32 1
  %180 = load i8** %179, align 8, !tbaa !166
  %181 = getelementptr inbounds i8* %180, i64 1
  store i8* %181, i8** %179, align 8, !tbaa !166
  %182 = load i8* %180, align 1, !tbaa !86
  %183 = zext i8 %182 to i32
  br label %186

; <label>:184                                     ; preds = %172
  %185 = tail call i32 @luaZ_fill(%struct.Zio* %173) #3
  br label %186

; <label>:186                                     ; preds = %184, %178
  %187 = phi i32 [ %183, %178 ], [ %185, %184 ]
  store i32 %187, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

; <label>:188                                     ; preds = %.critedge
  %189 = load %struct.Zio** %5, align 8, !tbaa !225
  %190 = getelementptr inbounds %struct.Zio* %189, i64 0, i32 0
  %191 = load i64* %190, align 8, !tbaa !164
  %192 = add i64 %191, -1
  store i64 %192, i64* %190, align 8, !tbaa !164
  %193 = icmp eq i64 %191, 0
  br i1 %193, label %200, label %194

; <label>:194                                     ; preds = %188
  %195 = getelementptr inbounds %struct.Zio* %189, i64 0, i32 1
  %196 = load i8** %195, align 8, !tbaa !166
  %197 = getelementptr inbounds i8* %196, i64 1
  store i8* %197, i8** %195, align 8, !tbaa !166
  %198 = load i8* %196, align 1, !tbaa !86
  %199 = zext i8 %198 to i32
  br label %202

; <label>:200                                     ; preds = %188
  %201 = tail call i32 @luaZ_fill(%struct.Zio* %189) #3
  br label %202

; <label>:202                                     ; preds = %200, %194
  %203 = phi i32 [ %199, %194 ], [ %201, %200 ]
  store i32 %203, i32* %4, align 4, !tbaa !223
  %204 = icmp eq i32 %203, 61
  br i1 %204, label %205, label %read_numeral.exit

; <label>:205                                     ; preds = %202
  %206 = load %struct.Zio** %5, align 8, !tbaa !225
  %207 = getelementptr inbounds %struct.Zio* %206, i64 0, i32 0
  %208 = load i64* %207, align 8, !tbaa !164
  %209 = add i64 %208, -1
  store i64 %209, i64* %207, align 8, !tbaa !164
  %210 = icmp eq i64 %208, 0
  br i1 %210, label %217, label %211

; <label>:211                                     ; preds = %205
  %212 = getelementptr inbounds %struct.Zio* %206, i64 0, i32 1
  %213 = load i8** %212, align 8, !tbaa !166
  %214 = getelementptr inbounds i8* %213, i64 1
  store i8* %214, i8** %212, align 8, !tbaa !166
  %215 = load i8* %213, align 1, !tbaa !86
  %216 = zext i8 %215 to i32
  br label %219

; <label>:217                                     ; preds = %205
  %218 = tail call i32 @luaZ_fill(%struct.Zio* %206) #3
  br label %219

; <label>:219                                     ; preds = %217, %211
  %220 = phi i32 [ %216, %211 ], [ %218, %217 ]
  store i32 %220, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

; <label>:221                                     ; preds = %.critedge
  %222 = load %struct.Zio** %5, align 8, !tbaa !225
  %223 = getelementptr inbounds %struct.Zio* %222, i64 0, i32 0
  %224 = load i64* %223, align 8, !tbaa !164
  %225 = add i64 %224, -1
  store i64 %225, i64* %223, align 8, !tbaa !164
  %226 = icmp eq i64 %224, 0
  br i1 %226, label %233, label %227

; <label>:227                                     ; preds = %221
  %228 = getelementptr inbounds %struct.Zio* %222, i64 0, i32 1
  %229 = load i8** %228, align 8, !tbaa !166
  %230 = getelementptr inbounds i8* %229, i64 1
  store i8* %230, i8** %228, align 8, !tbaa !166
  %231 = load i8* %229, align 1, !tbaa !86
  %232 = zext i8 %231 to i32
  br label %235

; <label>:233                                     ; preds = %221
  %234 = tail call i32 @luaZ_fill(%struct.Zio* %222) #3
  br label %235

; <label>:235                                     ; preds = %233, %227
  %236 = phi i32 [ %232, %227 ], [ %234, %233 ]
  store i32 %236, i32* %4, align 4, !tbaa !223
  %237 = icmp eq i32 %236, 58
  br i1 %237, label %238, label %read_numeral.exit

; <label>:238                                     ; preds = %235
  %239 = load %struct.Zio** %5, align 8, !tbaa !225
  %240 = getelementptr inbounds %struct.Zio* %239, i64 0, i32 0
  %241 = load i64* %240, align 8, !tbaa !164
  %242 = add i64 %241, -1
  store i64 %242, i64* %240, align 8, !tbaa !164
  %243 = icmp eq i64 %241, 0
  br i1 %243, label %250, label %244

; <label>:244                                     ; preds = %238
  %245 = getelementptr inbounds %struct.Zio* %239, i64 0, i32 1
  %246 = load i8** %245, align 8, !tbaa !166
  %247 = getelementptr inbounds i8* %246, i64 1
  store i8* %247, i8** %245, align 8, !tbaa !166
  %248 = load i8* %246, align 1, !tbaa !86
  %249 = zext i8 %248 to i32
  br label %252

; <label>:250                                     ; preds = %238
  %251 = tail call i32 @luaZ_fill(%struct.Zio* %239) #3
  br label %252

; <label>:252                                     ; preds = %250, %244
  %253 = phi i32 [ %249, %244 ], [ %251, %250 ]
  store i32 %253, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

; <label>:254                                     ; preds = %.critedge, %.critedge
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %6) #3
  %255 = load %struct.Zio** %5, align 8, !tbaa !225
  %256 = getelementptr inbounds %struct.Zio* %255, i64 0, i32 0
  %257 = load i64* %256, align 8, !tbaa !164
  %258 = add i64 %257, -1
  store i64 %258, i64* %256, align 8, !tbaa !164
  %259 = icmp eq i64 %257, 0
  br i1 %259, label %266, label %260

; <label>:260                                     ; preds = %254
  %261 = getelementptr inbounds %struct.Zio* %255, i64 0, i32 1
  %262 = load i8** %261, align 8, !tbaa !166
  %263 = getelementptr inbounds i8* %262, i64 1
  store i8* %263, i8** %261, align 8, !tbaa !166
  %264 = load i8* %262, align 1, !tbaa !86
  %265 = zext i8 %264 to i32
  br label %268

; <label>:266                                     ; preds = %254
  %267 = tail call i32 @luaZ_fill(%struct.Zio* %255) #3
  br label %268

; <label>:268                                     ; preds = %266, %260
  %269 = phi i32 [ %265, %260 ], [ %267, %266 ]
  store i32 %269, i32* %4, align 4, !tbaa !223
  %270 = icmp eq i32 %269, %6
  br i1 %270, label %._crit_edge.i, label %.lr.ph15.i

.lr.ph15.i:                                       ; preds = %268
  %271 = bitcast [3 x i32]* %c.i.i to i8*
  %272 = getelementptr inbounds [3 x i32]* %c.i.i, i64 0, i64 0
  br label %273

; <label>:273                                     ; preds = %.backedge6.i, %.lr.ph15.i
  %274 = phi i32 [ %269, %.lr.ph15.i ], [ %.be7.i, %.backedge6.i ]
  switch i32 %274, label %435 [
    i32 -1, label %275
    i32 10, label %276
    i32 13, label %276
    i32 92, label %277
  ]

; <label>:275                                     ; preds = %273
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* getelementptr inbounds ([18 x i8]* @.str1290, i64 0, i64 0), i32 286) #13
  unreachable

; <label>:276                                     ; preds = %273, %273
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* getelementptr inbounds ([18 x i8]* @.str1290, i64 0, i64 0), i32 289) #13
  unreachable

; <label>:277                                     ; preds = %273
  %278 = load %struct.Zio** %5, align 8, !tbaa !225
  %279 = getelementptr inbounds %struct.Zio* %278, i64 0, i32 0
  %280 = load i64* %279, align 8, !tbaa !164
  %281 = add i64 %280, -1
  store i64 %281, i64* %279, align 8, !tbaa !164
  %282 = icmp eq i64 %280, 0
  br i1 %282, label %289, label %283

; <label>:283                                     ; preds = %277
  %284 = getelementptr inbounds %struct.Zio* %278, i64 0, i32 1
  %285 = load i8** %284, align 8, !tbaa !166
  %286 = getelementptr inbounds i8* %285, i64 1
  store i8* %286, i8** %284, align 8, !tbaa !166
  %287 = load i8* %285, align 1, !tbaa !86
  %288 = zext i8 %287 to i32
  br label %291

; <label>:289                                     ; preds = %277
  %290 = tail call i32 @luaZ_fill(%struct.Zio* %278) #3
  br label %291

; <label>:291                                     ; preds = %289, %283
  %292 = phi i32 [ %288, %283 ], [ %290, %289 ]
  store i32 %292, i32* %4, align 4, !tbaa !223
  switch i32 %292, label %381 [
    i32 97, label %readhexaesc.exit.i
    i32 98, label %294
    i32 102, label %295
    i32 110, label %296
    i32 114, label %297
    i32 116, label %298
    i32 118, label %299
    i32 120, label %300
    i32 10, label %333
    i32 13, label %333
    i32 92, label %334
    i32 34, label %334
    i32 39, label %334
    i32 -1, label %.backedge6.i
    i32 122, label %335
  ]

.backedge6.i:                                     ; preds = %449, %readdecesc.exit.i, %.backedge.i, %349, %291
  %.be7.i = phi i32 [ %450, %449 ], [ -1, %291 ], [ %.pr.pre.i, %readdecesc.exit.i ], [ %350, %349 ], [ %.be.i, %.backedge.i ]
  %293 = icmp eq i32 %.be7.i, %6
  br i1 %293, label %._crit_edge.i, label %273

; <label>:294                                     ; preds = %291
  br label %readhexaesc.exit.i

; <label>:295                                     ; preds = %291
  br label %readhexaesc.exit.i

; <label>:296                                     ; preds = %291
  br label %readhexaesc.exit.i

; <label>:297                                     ; preds = %291
  br label %readhexaesc.exit.i

; <label>:298                                     ; preds = %291
  br label %readhexaesc.exit.i

; <label>:299                                     ; preds = %291
  br label %readhexaesc.exit.i

; <label>:300                                     ; preds = %291
  call void @llvm.lifetime.start(i64 12, i8* %271) #3
  store i32 120, i32* %272, align 4, !tbaa !1
  br label %301

; <label>:301                                     ; preds = %327, %300
  %indvars.iv.i.i = phi i64 [ 1, %300 ], [ %indvars.iv.next.i.i, %327 ]
  %r.04.i.i = phi i32 [ 0, %300 ], [ %330, %327 ]
  %302 = load %struct.Zio** %5, align 8, !tbaa !225
  %303 = getelementptr inbounds %struct.Zio* %302, i64 0, i32 0
  %304 = load i64* %303, align 8, !tbaa !164
  %305 = add i64 %304, -1
  store i64 %305, i64* %303, align 8, !tbaa !164
  %306 = icmp eq i64 %304, 0
  br i1 %306, label %313, label %307

; <label>:307                                     ; preds = %301
  %308 = getelementptr inbounds %struct.Zio* %302, i64 0, i32 1
  %309 = load i8** %308, align 8, !tbaa !166
  %310 = getelementptr inbounds i8* %309, i64 1
  store i8* %310, i8** %308, align 8, !tbaa !166
  %311 = load i8* %309, align 1, !tbaa !86
  %312 = zext i8 %311 to i32
  br label %315

; <label>:313                                     ; preds = %301
  %314 = tail call i32 @luaZ_fill(%struct.Zio* %302) #3
  br label %315

; <label>:315                                     ; preds = %313, %307
  %316 = phi i32 [ %312, %307 ], [ %314, %313 ]
  store i32 %316, i32* %4, align 4, !tbaa !223
  %317 = getelementptr inbounds [3 x i32]* %c.i.i, i64 0, i64 %indvars.iv.i.i
  store i32 %316, i32* %317, align 4, !tbaa !1
  %318 = add nsw i32 %316, 1
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %319
  %321 = load i8* %320, align 1, !tbaa !86
  %322 = and i8 %321, 16
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %324, label %327

; <label>:324                                     ; preds = %315
  %325 = trunc i64 %indvars.iv.i.i to i32
  %326 = add nsw i32 %325, 1
  call fastcc void @escerror(%struct.LexState.194* %ls, i32* %272, i32 %326, i8* getelementptr inbounds ([27 x i8]* @.str1593, i64 0, i64 0)) #3
  unreachable

; <label>:327                                     ; preds = %315
  %328 = shl i32 %r.04.i.i, 4
  %329 = tail call i32 @luaO_hexavalue(i32 %316) #3
  %330 = add nsw i32 %329, %328
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %331 = trunc i64 %indvars.iv.next.i.i to i32
  %332 = icmp slt i32 %331, 3
  br i1 %332, label %301, label %readhexaesc.exit.i

; <label>:333                                     ; preds = %291, %291
  tail call fastcc void @inclinenumber(%struct.LexState.194* %ls) #3
  br label %readdecesc.exit.i

; <label>:334                                     ; preds = %291, %291, %291
  br label %readhexaesc.exit.i

; <label>:335                                     ; preds = %291
  %336 = load %struct.Zio** %5, align 8, !tbaa !225
  %337 = getelementptr inbounds %struct.Zio* %336, i64 0, i32 0
  %338 = load i64* %337, align 8, !tbaa !164
  %339 = add i64 %338, -1
  store i64 %339, i64* %337, align 8, !tbaa !164
  %340 = icmp eq i64 %338, 0
  br i1 %340, label %347, label %341

; <label>:341                                     ; preds = %335
  %342 = getelementptr inbounds %struct.Zio* %336, i64 0, i32 1
  %343 = load i8** %342, align 8, !tbaa !166
  %344 = getelementptr inbounds i8* %343, i64 1
  store i8* %344, i8** %342, align 8, !tbaa !166
  %345 = load i8* %343, align 1, !tbaa !86
  %346 = zext i8 %345 to i32
  br label %349

; <label>:347                                     ; preds = %335
  %348 = tail call i32 @luaZ_fill(%struct.Zio* %336) #3
  br label %349

; <label>:349                                     ; preds = %347, %341
  %350 = phi i32 [ %346, %341 ], [ %348, %347 ]
  store i32 %350, i32* %4, align 4, !tbaa !223
  %351 = add nsw i32 %350, 1
  %352 = sext i32 %351 to i64
  %353 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %352
  %354 = load i8* %353, align 1, !tbaa !86
  %355 = and i8 %354, 8
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %.backedge6.i, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.backedge.i, %349
  %357 = phi i32 [ %.be.i, %.backedge.i ], [ %350, %349 ]
  switch i32 %357, label %359 [
    i32 10, label %358
    i32 13, label %358
  ]

; <label>:358                                     ; preds = %.lr.ph.i, %.lr.ph.i
  tail call fastcc void @inclinenumber(%struct.LexState.194* %ls) #3
  %.pr4.i = load i32* %4, align 4, !tbaa !223
  br label %.backedge.i

; <label>:359                                     ; preds = %.lr.ph.i
  %360 = load %struct.Zio** %5, align 8, !tbaa !225
  %361 = getelementptr inbounds %struct.Zio* %360, i64 0, i32 0
  %362 = load i64* %361, align 8, !tbaa !164
  %363 = add i64 %362, -1
  store i64 %363, i64* %361, align 8, !tbaa !164
  %364 = icmp eq i64 %362, 0
  br i1 %364, label %371, label %365

; <label>:365                                     ; preds = %359
  %366 = getelementptr inbounds %struct.Zio* %360, i64 0, i32 1
  %367 = load i8** %366, align 8, !tbaa !166
  %368 = getelementptr inbounds i8* %367, i64 1
  store i8* %368, i8** %366, align 8, !tbaa !166
  %369 = load i8* %367, align 1, !tbaa !86
  %370 = zext i8 %369 to i32
  br label %373

; <label>:371                                     ; preds = %359
  %372 = tail call i32 @luaZ_fill(%struct.Zio* %360) #3
  br label %373

; <label>:373                                     ; preds = %371, %365
  %374 = phi i32 [ %370, %365 ], [ %372, %371 ]
  store i32 %374, i32* %4, align 4, !tbaa !223
  br label %.backedge.i

.backedge.i:                                      ; preds = %373, %358
  %.be.i = phi i32 [ %.pr4.i, %358 ], [ %374, %373 ]
  %375 = add nsw i32 %.be.i, 1
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %376
  %378 = load i8* %377, align 1, !tbaa !86
  %379 = and i8 %378, 8
  %380 = icmp eq i8 %379, 0
  br i1 %380, label %.backedge6.i, label %.lr.ph.i

; <label>:381                                     ; preds = %291
  %382 = add nsw i32 %292, 1
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %383
  %385 = load i8* %384, align 1, !tbaa !86
  %386 = and i8 %385, 2
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %388, label %.lr.ph

; <label>:388                                     ; preds = %381
  tail call fastcc void @escerror(%struct.LexState.194* %ls, i32* %4, i32 1, i8* getelementptr inbounds ([24 x i8]* @.str1391, i64 0, i64 0)) #3
  unreachable

; <label>:389                                     ; preds = %414
  %phitmp.i = add i32 %i.01.i.i13, 1
  %390 = add nsw i32 %415, 1
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %391
  %393 = load i8* %392, align 1, !tbaa !86
  %394 = and i8 %393, 2
  %395 = icmp eq i8 %394, 0
  br i1 %395, label %.critedge.i.i, label %.lr.ph

.lr.ph:                                           ; preds = %389, %381
  %i.01.i.i13 = phi i32 [ %phitmp.i, %389 ], [ 1, %381 ]
  %r.02.i.i12 = phi i32 [ %400, %389 ], [ 0, %381 ]
  %indvars.iv.i2.i11 = phi i64 [ %indvars.iv.next.i3.i, %389 ], [ 0, %381 ]
  %396 = phi i32 [ %415, %389 ], [ %292, %381 ]
  %397 = getelementptr inbounds [3 x i32]* %c.i.i, i64 0, i64 %indvars.iv.i2.i11
  store i32 %396, i32* %397, align 4, !tbaa !1
  %398 = mul nsw i32 %r.02.i.i12, 10
  %399 = add i32 %396, -48
  %400 = add i32 %399, %398
  %401 = load %struct.Zio** %5, align 8, !tbaa !225
  %402 = getelementptr inbounds %struct.Zio* %401, i64 0, i32 0
  %403 = load i64* %402, align 8, !tbaa !164
  %404 = add i64 %403, -1
  store i64 %404, i64* %402, align 8, !tbaa !164
  %405 = icmp eq i64 %403, 0
  br i1 %405, label %412, label %406

; <label>:406                                     ; preds = %.lr.ph
  %407 = getelementptr inbounds %struct.Zio* %401, i64 0, i32 1
  %408 = load i8** %407, align 8, !tbaa !166
  %409 = getelementptr inbounds i8* %408, i64 1
  store i8* %409, i8** %407, align 8, !tbaa !166
  %410 = load i8* %408, align 1, !tbaa !86
  %411 = zext i8 %410 to i32
  br label %414

; <label>:412                                     ; preds = %.lr.ph
  %413 = tail call i32 @luaZ_fill(%struct.Zio* %401) #3
  br label %414

; <label>:414                                     ; preds = %412, %406
  %415 = phi i32 [ %411, %406 ], [ %413, %412 ]
  store i32 %415, i32* %4, align 4, !tbaa !223
  %indvars.iv.next.i3.i = add nuw nsw i64 %indvars.iv.i2.i11, 1
  %416 = trunc i64 %indvars.iv.next.i3.i to i32
  %417 = icmp slt i32 %416, 3
  br i1 %417, label %389, label %.critedge.i.i

.critedge.i.i:                                    ; preds = %414, %389
  %i.0.lcssa.i.i = phi i32 [ %i.01.i.i13, %414 ], [ %416, %389 ]
  %418 = icmp sgt i32 %400, 255
  br i1 %418, label %419, label %readdecesc.exit.i

; <label>:419                                     ; preds = %.critedge.i.i
  call fastcc void @escerror(%struct.LexState.194* %ls, i32* %272, i32 %i.0.lcssa.i.i, i8* getelementptr inbounds ([25 x i8]* @.str1492, i64 0, i64 0)) #3
  unreachable

readhexaesc.exit.i:                               ; preds = %334, %327, %299, %298, %297, %296, %295, %294, %291
  %c.0.i = phi i32 [ %292, %334 ], [ 11, %299 ], [ 9, %298 ], [ 13, %297 ], [ 10, %296 ], [ 12, %295 ], [ 8, %294 ], [ 7, %291 ], [ %330, %327 ]
  %420 = load %struct.Zio** %5, align 8, !tbaa !225
  %421 = getelementptr inbounds %struct.Zio* %420, i64 0, i32 0
  %422 = load i64* %421, align 8, !tbaa !164
  %423 = add i64 %422, -1
  store i64 %423, i64* %421, align 8, !tbaa !164
  %424 = icmp eq i64 %422, 0
  br i1 %424, label %431, label %425

; <label>:425                                     ; preds = %readhexaesc.exit.i
  %426 = getelementptr inbounds %struct.Zio* %420, i64 0, i32 1
  %427 = load i8** %426, align 8, !tbaa !166
  %428 = getelementptr inbounds i8* %427, i64 1
  store i8* %428, i8** %426, align 8, !tbaa !166
  %429 = load i8* %427, align 1, !tbaa !86
  %430 = zext i8 %429 to i32
  br label %433

; <label>:431                                     ; preds = %readhexaesc.exit.i
  %432 = tail call i32 @luaZ_fill(%struct.Zio* %420) #3
  br label %433

; <label>:433                                     ; preds = %431, %425
  %434 = phi i32 [ %430, %425 ], [ %432, %431 ]
  store i32 %434, i32* %4, align 4, !tbaa !223
  br label %readdecesc.exit.i

readdecesc.exit.i:                                ; preds = %433, %.critedge.i.i, %333
  %c.1.i = phi i32 [ %c.0.i, %433 ], [ 10, %333 ], [ %400, %.critedge.i.i ]
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %c.1.i) #3
  %.pr.pre.i = load i32* %4, align 4, !tbaa !223
  br label %.backedge6.i

; <label>:435                                     ; preds = %273
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %274) #3
  %436 = load %struct.Zio** %5, align 8, !tbaa !225
  %437 = getelementptr inbounds %struct.Zio* %436, i64 0, i32 0
  %438 = load i64* %437, align 8, !tbaa !164
  %439 = add i64 %438, -1
  store i64 %439, i64* %437, align 8, !tbaa !164
  %440 = icmp eq i64 %438, 0
  br i1 %440, label %447, label %441

; <label>:441                                     ; preds = %435
  %442 = getelementptr inbounds %struct.Zio* %436, i64 0, i32 1
  %443 = load i8** %442, align 8, !tbaa !166
  %444 = getelementptr inbounds i8* %443, i64 1
  store i8* %444, i8** %442, align 8, !tbaa !166
  %445 = load i8* %443, align 1, !tbaa !86
  %446 = zext i8 %445 to i32
  br label %449

; <label>:447                                     ; preds = %435
  %448 = tail call i32 @luaZ_fill(%struct.Zio* %436) #3
  br label %449

; <label>:449                                     ; preds = %447, %441
  %450 = phi i32 [ %446, %441 ], [ %448, %447 ]
  store i32 %450, i32* %4, align 4, !tbaa !223
  br label %.backedge6.i

._crit_edge.i:                                    ; preds = %.backedge6.i, %268
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %6) #3
  %451 = load %struct.Zio** %5, align 8, !tbaa !225
  %452 = getelementptr inbounds %struct.Zio* %451, i64 0, i32 0
  %453 = load i64* %452, align 8, !tbaa !164
  %454 = add i64 %453, -1
  store i64 %454, i64* %452, align 8, !tbaa !164
  %455 = icmp eq i64 %453, 0
  br i1 %455, label %462, label %456

; <label>:456                                     ; preds = %._crit_edge.i
  %457 = getelementptr inbounds %struct.Zio* %451, i64 0, i32 1
  %458 = load i8** %457, align 8, !tbaa !166
  %459 = getelementptr inbounds i8* %458, i64 1
  store i8* %459, i8** %457, align 8, !tbaa !166
  %460 = load i8* %458, align 1, !tbaa !86
  %461 = zext i8 %460 to i32
  br label %read_string.exit

; <label>:462                                     ; preds = %._crit_edge.i
  %463 = tail call i32 @luaZ_fill(%struct.Zio* %451) #3
  br label %read_string.exit

read_string.exit:                                 ; preds = %462, %456
  %464 = phi i32 [ %461, %456 ], [ %463, %462 ]
  store i32 %464, i32* %4, align 4, !tbaa !223
  %465 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %466 = getelementptr inbounds %struct.Mbuffer* %465, i64 0, i32 0
  %467 = load i8** %466, align 8, !tbaa !161
  %468 = getelementptr inbounds i8* %467, i64 1
  %469 = getelementptr inbounds %struct.Mbuffer* %465, i64 0, i32 1
  %470 = load i64* %469, align 8, !tbaa !231
  %471 = add i64 %470, -2
  %472 = tail call %union.TString* @luaX_newstring(%struct.LexState.194* %ls, i8* %468, i64 %471) #3
  %473 = bitcast %union.SemInfo* %seminfo to %union.TString**
  store %union.TString* %472, %union.TString** %473, align 8, !tbaa !25
  br label %read_numeral.exit

; <label>:474                                     ; preds = %.critedge
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 46)
  %475 = load %struct.Zio** %5, align 8, !tbaa !225
  %476 = getelementptr inbounds %struct.Zio* %475, i64 0, i32 0
  %477 = load i64* %476, align 8, !tbaa !164
  %478 = add i64 %477, -1
  store i64 %478, i64* %476, align 8, !tbaa !164
  %479 = icmp eq i64 %477, 0
  br i1 %479, label %486, label %480

; <label>:480                                     ; preds = %474
  %481 = getelementptr inbounds %struct.Zio* %475, i64 0, i32 1
  %482 = load i8** %481, align 8, !tbaa !166
  %483 = getelementptr inbounds i8* %482, i64 1
  store i8* %483, i8** %481, align 8, !tbaa !166
  %484 = load i8* %482, align 1, !tbaa !86
  %485 = zext i8 %484 to i32
  br label %488

; <label>:486                                     ; preds = %474
  %487 = tail call i32 @luaZ_fill(%struct.Zio* %475) #3
  br label %488

; <label>:488                                     ; preds = %486, %480
  %.pr7 = phi i32 [ %485, %480 ], [ %487, %486 ]
  store i32 %.pr7, i32* %4, align 4, !tbaa !223
  %489 = icmp eq i32 %.pr7, 0
  br i1 %489, label %527, label %490

; <label>:490                                     ; preds = %488
  %memchr = tail call i8* @memchr(i8* getelementptr inbounds ([2 x i8]* @.str583, i64 0, i64 0), i32 %.pr7, i64 2)
  %491 = icmp eq i8* %memchr, null
  br i1 %491, label %527, label %492

; <label>:492                                     ; preds = %490
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %.pr7) #3
  %493 = load %struct.Zio** %5, align 8, !tbaa !225
  %494 = getelementptr inbounds %struct.Zio* %493, i64 0, i32 0
  %495 = load i64* %494, align 8, !tbaa !164
  %496 = add i64 %495, -1
  store i64 %496, i64* %494, align 8, !tbaa !164
  %497 = icmp eq i64 %495, 0
  br i1 %497, label %504, label %498

; <label>:498                                     ; preds = %492
  %499 = getelementptr inbounds %struct.Zio* %493, i64 0, i32 1
  %500 = load i8** %499, align 8, !tbaa !166
  %501 = getelementptr inbounds i8* %500, i64 1
  store i8* %501, i8** %499, align 8, !tbaa !166
  %502 = load i8* %500, align 1, !tbaa !86
  %503 = zext i8 %502 to i32
  br label %506

; <label>:504                                     ; preds = %492
  %505 = tail call i32 @luaZ_fill(%struct.Zio* %493) #3
  br label %506

; <label>:506                                     ; preds = %504, %498
  %507 = phi i32 [ %503, %498 ], [ %505, %504 ]
  store i32 %507, i32* %4, align 4, !tbaa !223
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %read_numeral.exit, label %509

; <label>:509                                     ; preds = %506
  %memchr8 = tail call i8* @memchr(i8* getelementptr inbounds ([2 x i8]* @.str583, i64 0, i64 0), i32 %507, i64 2)
  %510 = icmp eq i8* %memchr8, null
  br i1 %510, label %read_numeral.exit, label %511

; <label>:511                                     ; preds = %509
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %507) #3
  %512 = load %struct.Zio** %5, align 8, !tbaa !225
  %513 = getelementptr inbounds %struct.Zio* %512, i64 0, i32 0
  %514 = load i64* %513, align 8, !tbaa !164
  %515 = add i64 %514, -1
  store i64 %515, i64* %513, align 8, !tbaa !164
  %516 = icmp eq i64 %514, 0
  br i1 %516, label %523, label %517

; <label>:517                                     ; preds = %511
  %518 = getelementptr inbounds %struct.Zio* %512, i64 0, i32 1
  %519 = load i8** %518, align 8, !tbaa !166
  %520 = getelementptr inbounds i8* %519, i64 1
  store i8* %520, i8** %518, align 8, !tbaa !166
  %521 = load i8* %519, align 1, !tbaa !86
  %522 = zext i8 %521 to i32
  br label %525

; <label>:523                                     ; preds = %511
  %524 = tail call i32 @luaZ_fill(%struct.Zio* %512) #3
  br label %525

; <label>:525                                     ; preds = %523, %517
  %526 = phi i32 [ %522, %517 ], [ %524, %523 ]
  store i32 %526, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

; <label>:527                                     ; preds = %490, %488
  %528 = add nsw i32 %.pr7, 1
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %529
  %531 = load i8* %530, align 1, !tbaa !86
  %532 = and i8 %531, 2
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %read_numeral.exit, label %thread-pre-split6

thread-pre-split6:                                ; preds = %527, %.critedge, %.critedge, %.critedge, %.critedge, %.critedge, %.critedge, %.critedge, %.critedge, %.critedge, %.critedge
  %534 = phi i32 [ %.pr7, %527 ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ], [ %6, %.critedge ]
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %534) #3
  %535 = load %struct.Zio** %5, align 8, !tbaa !225
  %536 = getelementptr inbounds %struct.Zio* %535, i64 0, i32 0
  %537 = load i64* %536, align 8, !tbaa !164
  %538 = add i64 %537, -1
  store i64 %538, i64* %536, align 8, !tbaa !164
  %539 = icmp eq i64 %537, 0
  br i1 %539, label %546, label %540

; <label>:540                                     ; preds = %thread-pre-split6
  %541 = getelementptr inbounds %struct.Zio* %535, i64 0, i32 1
  %542 = load i8** %541, align 8, !tbaa !166
  %543 = getelementptr inbounds i8* %542, i64 1
  store i8* %543, i8** %541, align 8, !tbaa !166
  %544 = load i8* %542, align 1, !tbaa !86
  %545 = zext i8 %544 to i32
  br label %548

; <label>:546                                     ; preds = %thread-pre-split6
  %547 = tail call i32 @luaZ_fill(%struct.Zio* %535) #3
  br label %548

; <label>:548                                     ; preds = %546, %540
  %549 = phi i32 [ %545, %540 ], [ %547, %546 ]
  store i32 %549, i32* %4, align 4, !tbaa !223
  %550 = icmp eq i32 %534, 48
  br i1 %550, label %551, label %.preheader.i

; <label>:551                                     ; preds = %548
  %552 = icmp eq i32 %549, 0
  br i1 %552, label %.preheader.i, label %553

; <label>:553                                     ; preds = %551
  %memchr6.i = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8]* @.str785, i64 0, i64 0), i32 %549, i64 3) #3
  %554 = icmp eq i8* %memchr6.i, null
  br i1 %554, label %.preheader.i, label %555

; <label>:555                                     ; preds = %553
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %549) #3
  %556 = load %struct.Zio** %5, align 8, !tbaa !225
  %557 = getelementptr inbounds %struct.Zio* %556, i64 0, i32 0
  %558 = load i64* %557, align 8, !tbaa !164
  %559 = add i64 %558, -1
  store i64 %559, i64* %557, align 8, !tbaa !164
  %560 = icmp eq i64 %558, 0
  br i1 %560, label %567, label %561

; <label>:561                                     ; preds = %555
  %562 = getelementptr inbounds %struct.Zio* %556, i64 0, i32 1
  %563 = load i8** %562, align 8, !tbaa !166
  %564 = getelementptr inbounds i8* %563, i64 1
  store i8* %564, i8** %562, align 8, !tbaa !166
  %565 = load i8* %563, align 1, !tbaa !86
  %566 = zext i8 %565 to i32
  br label %569

; <label>:567                                     ; preds = %555
  %568 = tail call i32 @luaZ_fill(%struct.Zio* %556) #3
  br label %569

; <label>:569                                     ; preds = %567, %561
  %570 = phi i32 [ %566, %561 ], [ %568, %567 ]
  store i32 %570, i32* %4, align 4, !tbaa !223
  br label %.preheader.i

.preheader.i:                                     ; preds = %569, %553, %551, %548
  %.ph.i = phi i32 [ %549, %548 ], [ %570, %569 ], [ %549, %553 ], [ 0, %551 ]
  %expo.0.ph.i = phi i8* [ getelementptr inbounds ([3 x i8]* @.str684, i64 0, i64 0), %548 ], [ getelementptr inbounds ([3 x i8]* @.str886, i64 0, i64 0), %569 ], [ getelementptr inbounds ([3 x i8]* @.str684, i64 0, i64 0), %553 ], [ getelementptr inbounds ([3 x i8]* @.str684, i64 0, i64 0), %551 ]
  br label %571

; <label>:571                                     ; preds = %633, %.preheader.i
  %572 = phi i32 [ %634, %633 ], [ %.ph.i, %.preheader.i ]
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %check_next.exit4.i, label %574

; <label>:574                                     ; preds = %571
  %memchr.i = tail call i8* @memchr(i8* %expo.0.ph.i, i32 %572, i64 3) #3
  %575 = icmp eq i8* %memchr.i, null
  br i1 %575, label %check_next.exit4.i, label %576

; <label>:576                                     ; preds = %574
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %572) #3
  %577 = load %struct.Zio** %5, align 8, !tbaa !225
  %578 = getelementptr inbounds %struct.Zio* %577, i64 0, i32 0
  %579 = load i64* %578, align 8, !tbaa !164
  %580 = add i64 %579, -1
  store i64 %580, i64* %578, align 8, !tbaa !164
  %581 = icmp eq i64 %579, 0
  br i1 %581, label %588, label %582

; <label>:582                                     ; preds = %576
  %583 = getelementptr inbounds %struct.Zio* %577, i64 0, i32 1
  %584 = load i8** %583, align 8, !tbaa !166
  %585 = getelementptr inbounds i8* %584, i64 1
  store i8* %585, i8** %583, align 8, !tbaa !166
  %586 = load i8* %584, align 1, !tbaa !86
  %587 = zext i8 %586 to i32
  br label %590

; <label>:588                                     ; preds = %576
  %589 = tail call i32 @luaZ_fill(%struct.Zio* %577) #3
  br label %590

; <label>:590                                     ; preds = %588, %582
  %591 = phi i32 [ %587, %582 ], [ %589, %588 ]
  store i32 %591, i32* %4, align 4, !tbaa !223
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %check_next.exit4.i, label %593

; <label>:593                                     ; preds = %590
  %memchr5.i = tail call i8* @memchr(i8* getelementptr inbounds ([3 x i8]* @.str987, i64 0, i64 0), i32 %591, i64 3) #3
  %594 = icmp eq i8* %memchr5.i, null
  br i1 %594, label %check_next.exit4.i, label %595

; <label>:595                                     ; preds = %593
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %591) #3
  %596 = load %struct.Zio** %5, align 8, !tbaa !225
  %597 = getelementptr inbounds %struct.Zio* %596, i64 0, i32 0
  %598 = load i64* %597, align 8, !tbaa !164
  %599 = add i64 %598, -1
  store i64 %599, i64* %597, align 8, !tbaa !164
  %600 = icmp eq i64 %598, 0
  br i1 %600, label %607, label %601

; <label>:601                                     ; preds = %595
  %602 = getelementptr inbounds %struct.Zio* %596, i64 0, i32 1
  %603 = load i8** %602, align 8, !tbaa !166
  %604 = getelementptr inbounds i8* %603, i64 1
  store i8* %604, i8** %602, align 8, !tbaa !166
  %605 = load i8* %603, align 1, !tbaa !86
  %606 = zext i8 %605 to i32
  br label %609

; <label>:607                                     ; preds = %595
  %608 = tail call i32 @luaZ_fill(%struct.Zio* %596) #3
  br label %609

; <label>:609                                     ; preds = %607, %601
  %610 = phi i32 [ %606, %601 ], [ %608, %607 ]
  store i32 %610, i32* %4, align 4, !tbaa !223
  br label %check_next.exit4.i

check_next.exit4.i:                               ; preds = %609, %593, %590, %574, %571
  %611 = phi i32 [ 0, %571 ], [ %572, %574 ], [ %610, %609 ], [ %591, %593 ], [ 0, %590 ]
  %612 = add nsw i32 %611, 1
  %613 = sext i32 %612 to i64
  %614 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %613
  %615 = load i8* %614, align 1, !tbaa !86
  %616 = and i8 %615, 16
  %617 = icmp ne i8 %616, 0
  %618 = icmp eq i32 %611, 46
  %or.cond.i = or i1 %617, %618
  br i1 %or.cond.i, label %619, label %635

; <label>:619                                     ; preds = %check_next.exit4.i
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %611) #3
  %620 = load %struct.Zio** %5, align 8, !tbaa !225
  %621 = getelementptr inbounds %struct.Zio* %620, i64 0, i32 0
  %622 = load i64* %621, align 8, !tbaa !164
  %623 = add i64 %622, -1
  store i64 %623, i64* %621, align 8, !tbaa !164
  %624 = icmp eq i64 %622, 0
  br i1 %624, label %631, label %625

; <label>:625                                     ; preds = %619
  %626 = getelementptr inbounds %struct.Zio* %620, i64 0, i32 1
  %627 = load i8** %626, align 8, !tbaa !166
  %628 = getelementptr inbounds i8* %627, i64 1
  store i8* %628, i8** %626, align 8, !tbaa !166
  %629 = load i8* %627, align 1, !tbaa !86
  %630 = zext i8 %629 to i32
  br label %633

; <label>:631                                     ; preds = %619
  %632 = tail call i32 @luaZ_fill(%struct.Zio* %620) #3
  br label %633

; <label>:633                                     ; preds = %631, %625
  %634 = phi i32 [ %630, %625 ], [ %632, %631 ]
  store i32 %634, i32* %4, align 4, !tbaa !223
  br label %571

; <label>:635                                     ; preds = %check_next.exit4.i
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 0) #3
  %636 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 12
  %637 = load i8* %636, align 1, !tbaa !222
  %638 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %639 = getelementptr inbounds %struct.Mbuffer* %638, i64 0, i32 1
  %640 = load i64* %639, align 8, !tbaa !231
  %641 = getelementptr inbounds %struct.Mbuffer* %638, i64 0, i32 0
  %642 = load i8** %641, align 8, !tbaa !161
  %643 = icmp eq i64 %640, 0
  br i1 %643, label %buffreplace.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.backedge.i.i, %635
  %.in.i.i = phi i64 [ %644, %.backedge.i.i ], [ %640, %635 ]
  %644 = add i64 %.in.i.i, -1
  %645 = getelementptr inbounds i8* %642, i64 %644
  %646 = load i8* %645, align 1, !tbaa !86
  %647 = icmp eq i8 %646, 46
  br i1 %647, label %648, label %.backedge.i.i

; <label>:648                                     ; preds = %.lr.ph.i.i
  store i8 %637, i8* %645, align 1, !tbaa !86
  br label %.backedge.i.i

.backedge.i.i:                                    ; preds = %648, %.lr.ph.i.i
  %649 = icmp eq i64 %644, 0
  br i1 %649, label %buffreplace.exit.loopexit.i, label %.lr.ph.i.i

buffreplace.exit.loopexit.i:                      ; preds = %.backedge.i.i
  %.pre.i = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %.phi.trans.insert.i = getelementptr inbounds %struct.Mbuffer* %.pre.i, i64 0, i32 0
  %.pre8.i = load i8** %.phi.trans.insert.i, align 8, !tbaa !161
  %.phi.trans.insert9.i = getelementptr inbounds %struct.Mbuffer* %.pre.i, i64 0, i32 1
  %.pre10.i = load i64* %.phi.trans.insert9.i, align 8, !tbaa !231
  %phitmp.i5 = add i64 %.pre10.i, -1
  br label %buffreplace.exit.i

buffreplace.exit.i:                               ; preds = %buffreplace.exit.loopexit.i, %635
  %650 = phi i64 [ %phitmp.i5, %buffreplace.exit.loopexit.i ], [ -1, %635 ]
  %651 = phi i8* [ %.pre8.i, %buffreplace.exit.loopexit.i ], [ %642, %635 ]
  %652 = getelementptr inbounds %union.SemInfo* %seminfo, i64 0, i32 0
  %653 = tail call i32 @luaO_str2d(i8* %651, i64 %650, double* %652) #3
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %read_numeral.exit

; <label>:655                                     ; preds = %buffreplace.exit.i
  %656 = load i8* %636, align 1, !tbaa !222
  %657 = tail call %struct.lconv* @localeconv() #3
  %658 = getelementptr inbounds %struct.lconv* %657, i64 0, i32 0
  %659 = load i8** %658, align 8, !tbaa !232
  %660 = load i8* %659, align 1, !tbaa !86
  store i8 %660, i8* %636, align 1, !tbaa !222
  %661 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %662 = getelementptr inbounds %struct.Mbuffer* %661, i64 0, i32 1
  %663 = load i64* %662, align 8, !tbaa !231
  %664 = getelementptr inbounds %struct.Mbuffer* %661, i64 0, i32 0
  %665 = load i8** %664, align 8, !tbaa !161
  %666 = icmp eq i64 %663, 0
  br i1 %666, label %buffreplace.exit.i.i, label %.lr.ph.i.i.i

.lr.ph.i.i.i:                                     ; preds = %.backedge.i.i.i, %655
  %.in.i.i.i = phi i64 [ %667, %.backedge.i.i.i ], [ %663, %655 ]
  %667 = add i64 %.in.i.i.i, -1
  %668 = getelementptr inbounds i8* %665, i64 %667
  %669 = load i8* %668, align 1, !tbaa !86
  %670 = icmp eq i8 %669, %656
  br i1 %670, label %671, label %.backedge.i.i.i

; <label>:671                                     ; preds = %.lr.ph.i.i.i
  store i8 %660, i8* %668, align 1, !tbaa !86
  br label %.backedge.i.i.i

.backedge.i.i.i:                                  ; preds = %671, %.lr.ph.i.i.i
  %672 = icmp eq i64 %667, 0
  br i1 %672, label %buffreplace.exit.loopexit.i.i, label %.lr.ph.i.i.i

buffreplace.exit.loopexit.i.i:                    ; preds = %.backedge.i.i.i
  %.pre.i.i = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Mbuffer* %.pre.i.i, i64 0, i32 0
  %.pre5.i.i = load i8** %.phi.trans.insert.i.i, align 8, !tbaa !161
  %.phi.trans.insert6.i.i = getelementptr inbounds %struct.Mbuffer* %.pre.i.i, i64 0, i32 1
  %.pre7.i.i = load i64* %.phi.trans.insert6.i.i, align 8, !tbaa !231
  %phitmp.i.i = add i64 %.pre7.i.i, -1
  br label %buffreplace.exit.i.i

buffreplace.exit.i.i:                             ; preds = %buffreplace.exit.loopexit.i.i, %655
  %673 = phi i64 [ %phitmp.i.i, %buffreplace.exit.loopexit.i.i ], [ -1, %655 ]
  %674 = phi i8* [ %.pre5.i.i, %buffreplace.exit.loopexit.i.i ], [ %665, %655 ]
  %675 = tail call i32 @luaO_str2d(i8* %674, i64 %673, double* %652) #3
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %read_numeral.exit

; <label>:677                                     ; preds = %buffreplace.exit.i.i
  %678 = load i8* %636, align 1, !tbaa !222
  %679 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %680 = getelementptr inbounds %struct.Mbuffer* %679, i64 0, i32 1
  %681 = load i64* %680, align 8, !tbaa !231
  %682 = getelementptr inbounds %struct.Mbuffer* %679, i64 0, i32 0
  %683 = load i8** %682, align 8, !tbaa !161
  %684 = icmp eq i64 %681, 0
  br i1 %684, label %buffreplace.exit4.i.i, label %.lr.ph.i2.i.i

.lr.ph.i2.i.i:                                    ; preds = %.backedge.i3.i.i, %677
  %.in.i1.i.i = phi i64 [ %685, %.backedge.i3.i.i ], [ %681, %677 ]
  %685 = add i64 %.in.i1.i.i, -1
  %686 = getelementptr inbounds i8* %683, i64 %685
  %687 = load i8* %686, align 1, !tbaa !86
  %688 = icmp eq i8 %687, %678
  br i1 %688, label %689, label %.backedge.i3.i.i

; <label>:689                                     ; preds = %.lr.ph.i2.i.i
  store i8 46, i8* %686, align 1, !tbaa !86
  br label %.backedge.i3.i.i

.backedge.i3.i.i:                                 ; preds = %689, %.lr.ph.i2.i.i
  %690 = icmp eq i64 %685, 0
  br i1 %690, label %buffreplace.exit4.i.i, label %.lr.ph.i2.i.i

buffreplace.exit4.i.i:                            ; preds = %.backedge.i3.i.i, %677
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* getelementptr inbounds ([17 x i8]* @.str1088, i64 0, i64 0), i32 287) #13
  unreachable

; <label>:691                                     ; preds = %.critedge
  %692 = add nsw i32 %6, 1
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %693
  %695 = load i8* %694, align 1, !tbaa !86
  %696 = and i8 %695, 1
  %697 = icmp eq i8 %696, 0
  br i1 %697, label %738, label %.preheader

.preheader:                                       ; preds = %712, %691
  %698 = phi i32 [ %713, %712 ], [ %6, %691 ]
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %698)
  %699 = load %struct.Zio** %5, align 8, !tbaa !225
  %700 = getelementptr inbounds %struct.Zio* %699, i64 0, i32 0
  %701 = load i64* %700, align 8, !tbaa !164
  %702 = add i64 %701, -1
  store i64 %702, i64* %700, align 8, !tbaa !164
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %710, label %704

; <label>:704                                     ; preds = %.preheader
  %705 = getelementptr inbounds %struct.Zio* %699, i64 0, i32 1
  %706 = load i8** %705, align 8, !tbaa !166
  %707 = getelementptr inbounds i8* %706, i64 1
  store i8* %707, i8** %705, align 8, !tbaa !166
  %708 = load i8* %706, align 1, !tbaa !86
  %709 = zext i8 %708 to i32
  br label %712

; <label>:710                                     ; preds = %.preheader
  %711 = tail call i32 @luaZ_fill(%struct.Zio* %699) #3
  br label %712

; <label>:712                                     ; preds = %710, %704
  %713 = phi i32 [ %709, %704 ], [ %711, %710 ]
  store i32 %713, i32* %4, align 4, !tbaa !223
  %714 = add nsw i32 %713, 1
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %715
  %717 = load i8* %716, align 1, !tbaa !86
  %718 = and i8 %717, 3
  %719 = icmp eq i8 %718, 0
  br i1 %719, label %720, label %.preheader

; <label>:720                                     ; preds = %712
  %721 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %722 = getelementptr inbounds %struct.Mbuffer* %721, i64 0, i32 0
  %723 = load i8** %722, align 8, !tbaa !161
  %724 = getelementptr inbounds %struct.Mbuffer* %721, i64 0, i32 1
  %725 = load i64* %724, align 8, !tbaa !231
  %726 = tail call %union.TString* @luaX_newstring(%struct.LexState.194* %ls, i8* %723, i64 %725)
  %727 = bitcast %union.SemInfo* %seminfo to %union.TString**
  store %union.TString* %726, %union.TString** %727, align 8, !tbaa !25
  %728 = getelementptr inbounds %union.TString* %726, i64 0, i32 0, i32 1
  %729 = load i8* %728, align 1, !tbaa !38
  %730 = icmp eq i8 %729, 4
  br i1 %730, label %731, label %read_numeral.exit

; <label>:731                                     ; preds = %720
  %732 = getelementptr inbounds %union.TString* %726, i64 0, i32 0, i32 3
  %733 = load i8* %732, align 1, !tbaa !219
  %734 = icmp eq i8 %733, 0
  br i1 %734, label %read_numeral.exit, label %735

; <label>:735                                     ; preds = %731
  %736 = zext i8 %733 to i32
  %737 = or i32 %736, 256
  br label %read_numeral.exit

; <label>:738                                     ; preds = %691
  %739 = load %struct.Zio** %5, align 8, !tbaa !225
  %740 = getelementptr inbounds %struct.Zio* %739, i64 0, i32 0
  %741 = load i64* %740, align 8, !tbaa !164
  %742 = add i64 %741, -1
  store i64 %742, i64* %740, align 8, !tbaa !164
  %743 = icmp eq i64 %741, 0
  br i1 %743, label %750, label %744

; <label>:744                                     ; preds = %738
  %745 = getelementptr inbounds %struct.Zio* %739, i64 0, i32 1
  %746 = load i8** %745, align 8, !tbaa !166
  %747 = getelementptr inbounds i8* %746, i64 1
  store i8* %747, i8** %745, align 8, !tbaa !166
  %748 = load i8* %746, align 1, !tbaa !86
  %749 = zext i8 %748 to i32
  br label %752

; <label>:750                                     ; preds = %738
  %751 = tail call i32 @luaZ_fill(%struct.Zio* %739) #3
  br label %752

; <label>:752                                     ; preds = %750, %744
  %753 = phi i32 [ %749, %744 ], [ %751, %750 ]
  store i32 %753, i32* %4, align 4, !tbaa !223
  br label %read_numeral.exit

read_numeral.exit:                                ; preds = %752, %735, %731, %720, %buffreplace.exit.i.i, %buffreplace.exit.i, %527, %525, %509, %506, %read_string.exit, %252, %235, %219, %202, %186, %169, %153, %136, %120, %103, %86, %85, %37, %.critedge
  %.0 = phi i32 [ %737, %735 ], [ %6, %752 ], [ 289, %read_string.exit ], [ 285, %252 ], [ 284, %219 ], [ 282, %186 ], [ 283, %153 ], [ 281, %120 ], [ 289, %85 ], [ 91, %86 ], [ 61, %103 ], [ 60, %136 ], [ 62, %169 ], [ 126, %202 ], [ 58, %235 ], [ 46, %527 ], [ 288, %731 ], [ 288, %720 ], [ 287, %buffreplace.exit.i ], [ 287, %buffreplace.exit.i.i ], [ 280, %525 ], [ 279, %509 ], [ 279, %506 ], [ 286, %.critedge ], [ 45, %37 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @save(%struct.LexState.194* nocapture readonly %ls, i32 %c) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %2 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %3 = getelementptr inbounds %struct.Mbuffer* %2, i64 0, i32 1
  %4 = load i64* %3, align 8, !tbaa !231
  %5 = add i64 %4, 1
  %6 = getelementptr inbounds %struct.Mbuffer* %2, i64 0, i32 2
  %7 = load i64* %6, align 8, !tbaa !162
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.Mbuffer* %2, i64 0, i32 0
  %.pre1 = load i8** %.phi.trans.insert, align 8, !tbaa !161
  br label %22

; <label>:9                                       ; preds = %0
  %10 = icmp ugt i64 %7, 9223372036854775805
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %9
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* getelementptr inbounds ([25 x i8]* @.str1189, i64 0, i64 0), i32 0) #14
  unreachable

; <label>:12                                      ; preds = %9
  %13 = shl i64 %7, 1
  %14 = icmp eq i64 %13, -2
  %15 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 6
  %16 = load %struct.lua_State** %15, align 8, !tbaa !89
  br i1 %14, label %17, label %18

; <label>:17                                      ; preds = %12
  tail call void @luaM_toobig(%struct.lua_State* %16) #13
  unreachable

; <label>:18                                      ; preds = %12
  %19 = getelementptr inbounds %struct.Mbuffer* %2, i64 0, i32 0
  %20 = load i8** %19, align 8, !tbaa !161
  %21 = tail call i8* @luaM_realloc_(%struct.lua_State* %16, i8* %20, i64 %7, i64 %13) #3
  store i8* %21, i8** %19, align 8, !tbaa !161
  store i64 %13, i64* %6, align 8, !tbaa !162
  %.pre = load i64* %3, align 8, !tbaa !231
  br label %22

; <label>:22                                      ; preds = %18, %._crit_edge
  %23 = phi i8* [ %21, %18 ], [ %.pre1, %._crit_edge ]
  %24 = phi i64 [ %.pre, %18 ], [ %4, %._crit_edge ]
  %25 = trunc i32 %c to i8
  %26 = add i64 %24, 1
  store i64 %26, i64* %3, align 8, !tbaa !231
  %27 = getelementptr inbounds i8* %23, i64 %24
  store i8 %25, i8* %27, align 1, !tbaa !86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @inclinenumber(%struct.LexState.194* nocapture %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !223
  %3 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 7
  %4 = load %struct.Zio** %3, align 8, !tbaa !225
  %5 = getelementptr inbounds %struct.Zio* %4, i64 0, i32 0
  %6 = load i64* %5, align 8, !tbaa !164
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8, !tbaa !164
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %15, label %9

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.Zio* %4, i64 0, i32 1
  %11 = load i8** %10, align 8, !tbaa !166
  %12 = getelementptr inbounds i8* %11, i64 1
  store i8* %12, i8** %10, align 8, !tbaa !166
  %13 = load i8* %11, align 1, !tbaa !86
  %14 = zext i8 %13 to i32
  br label %17

; <label>:15                                      ; preds = %0
  %16 = tail call i32 @luaZ_fill(%struct.Zio* %4) #3
  br label %17

; <label>:17                                      ; preds = %15, %9
  %18 = phi i32 [ %14, %9 ], [ %16, %15 ]
  store i32 %18, i32* %1, align 4, !tbaa !223
  switch i32 %18, label %37 [
    i32 10, label %19
    i32 13, label %19
  ]

; <label>:19                                      ; preds = %17, %17
  %20 = icmp eq i32 %18, %2
  br i1 %20, label %37, label %21

; <label>:21                                      ; preds = %19
  %22 = load %struct.Zio** %3, align 8, !tbaa !225
  %23 = getelementptr inbounds %struct.Zio* %22, i64 0, i32 0
  %24 = load i64* %23, align 8, !tbaa !164
  %25 = add i64 %24, -1
  store i64 %25, i64* %23, align 8, !tbaa !164
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %33, label %27

; <label>:27                                      ; preds = %21
  %28 = getelementptr inbounds %struct.Zio* %22, i64 0, i32 1
  %29 = load i8** %28, align 8, !tbaa !166
  %30 = getelementptr inbounds i8* %29, i64 1
  store i8* %30, i8** %28, align 8, !tbaa !166
  %31 = load i8* %29, align 1, !tbaa !86
  %32 = zext i8 %31 to i32
  br label %35

; <label>:33                                      ; preds = %21
  %34 = tail call i32 @luaZ_fill(%struct.Zio* %22) #3
  br label %35

; <label>:35                                      ; preds = %33, %27
  %36 = phi i32 [ %32, %27 ], [ %34, %33 ]
  store i32 %36, i32* %1, align 4, !tbaa !223
  br label %37

; <label>:37                                      ; preds = %35, %19, %17
  %38 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 1
  %39 = load i32* %38, align 4, !tbaa !226
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 4, !tbaa !226
  %41 = icmp sgt i32 %39, 2147483643
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %37
  tail call void @luaX_syntaxerror(%struct.LexState.194* %ls, i8* getelementptr inbounds ([25 x i8]* @.str1896, i64 0, i64 0)) #14
  unreachable

; <label>:43                                      ; preds = %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @skip_sep(%struct.LexState.194* nocapture %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !223
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %2)
  %3 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 7
  %4 = load %struct.Zio** %3, align 8, !tbaa !225
  %5 = getelementptr inbounds %struct.Zio* %4, i64 0, i32 0
  %6 = load i64* %5, align 8, !tbaa !164
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8, !tbaa !164
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %15, label %9

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.Zio* %4, i64 0, i32 1
  %11 = load i8** %10, align 8, !tbaa !166
  %12 = getelementptr inbounds i8* %11, i64 1
  store i8* %12, i8** %10, align 8, !tbaa !166
  %13 = load i8* %11, align 1, !tbaa !86
  %14 = zext i8 %13 to i32
  br label %17

; <label>:15                                      ; preds = %0
  %16 = tail call i32 @luaZ_fill(%struct.Zio* %4) #3
  br label %17

; <label>:17                                      ; preds = %15, %9
  %18 = phi i32 [ %14, %9 ], [ %16, %15 ]
  store i32 %18, i32* %1, align 4, !tbaa !223
  %19 = icmp eq i32 %18, 61
  br i1 %19, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %33, %17
  %count.01 = phi i32 [ %35, %33 ], [ 0, %17 ]
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 61)
  %20 = load %struct.Zio** %3, align 8, !tbaa !225
  %21 = getelementptr inbounds %struct.Zio* %20, i64 0, i32 0
  %22 = load i64* %21, align 8, !tbaa !164
  %23 = add i64 %22, -1
  store i64 %23, i64* %21, align 8, !tbaa !164
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

; <label>:25                                      ; preds = %.lr.ph
  %26 = getelementptr inbounds %struct.Zio* %20, i64 0, i32 1
  %27 = load i8** %26, align 8, !tbaa !166
  %28 = getelementptr inbounds i8* %27, i64 1
  store i8* %28, i8** %26, align 8, !tbaa !166
  %29 = load i8* %27, align 1, !tbaa !86
  %30 = zext i8 %29 to i32
  br label %33

; <label>:31                                      ; preds = %.lr.ph
  %32 = tail call i32 @luaZ_fill(%struct.Zio* %20) #3
  br label %33

; <label>:33                                      ; preds = %31, %25
  %34 = phi i32 [ %30, %25 ], [ %32, %31 ]
  store i32 %34, i32* %1, align 4, !tbaa !223
  %35 = add nsw i32 %count.01, 1
  %36 = icmp eq i32 %34, 61
  br i1 %36, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %33, %17
  %count.0.lcssa = phi i32 [ 0, %17 ], [ %35, %33 ]
  %.lcssa = phi i32 [ %18, %17 ], [ %34, %33 ]
  %not. = icmp ne i32 %.lcssa, %2
  %37 = sext i1 %not. to i32
  %count.0. = xor i32 %37, %count.0.lcssa
  ret i32 %count.0.
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @read_long_string(%struct.LexState.194* nocapture %ls, %union.SemInfo* %seminfo, i32 %sep) #0 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !223
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %2)
  %3 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 7
  %4 = load %struct.Zio** %3, align 8, !tbaa !225
  %5 = getelementptr inbounds %struct.Zio* %4, i64 0, i32 0
  %6 = load i64* %5, align 8, !tbaa !164
  %7 = add i64 %6, -1
  store i64 %7, i64* %5, align 8, !tbaa !164
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %15, label %9

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.Zio* %4, i64 0, i32 1
  %11 = load i8** %10, align 8, !tbaa !166
  %12 = getelementptr inbounds i8* %11, i64 1
  store i8* %12, i8** %10, align 8, !tbaa !166
  %13 = load i8* %11, align 1, !tbaa !86
  %14 = zext i8 %13 to i32
  br label %17

; <label>:15                                      ; preds = %0
  %16 = tail call i32 @luaZ_fill(%struct.Zio* %4) #3
  br label %17

; <label>:17                                      ; preds = %15, %9
  %18 = phi i32 [ %14, %9 ], [ %16, %15 ]
  store i32 %18, i32* %1, align 4, !tbaa !223
  switch i32 %18, label %.preheader [
    i32 10, label %19
    i32 13, label %19
  ]

; <label>:19                                      ; preds = %17, %17
  tail call fastcc void @inclinenumber(%struct.LexState.194* %ls)
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %47, %46, %26, %19
  %.pr = load i32* %1, align 4, !tbaa !223
  br label %.preheader

.preheader:                                       ; preds = %thread-pre-split, %17
  %.ph = phi i32 [ %.pr, %thread-pre-split ], [ %18, %17 ]
  %20 = icmp eq %union.SemInfo* %seminfo, null
  br label %21

; <label>:21                                      ; preds = %.backedge, %.preheader
  %22 = phi i32 [ %.ph, %.preheader ], [ %storemerge, %.backedge ]
  switch i32 %22, label %51 [
    i32 -1, label %23
    i32 93, label %26
    i32 10, label %46
    i32 13, label %46
  ]

; <label>:23                                      ; preds = %21
  %24 = icmp ne %union.SemInfo* %seminfo, null
  %25 = select i1 %24, i8* getelementptr inbounds ([23 x i8]* @.str1694, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8]* @.str1795, i64 0, i64 0)
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* %25, i32 286) #14
  unreachable

; <label>:26                                      ; preds = %21
  %27 = tail call fastcc i32 @skip_sep(%struct.LexState.194* %ls)
  %28 = icmp eq i32 %27, %sep
  br i1 %28, label %29, label %thread-pre-split

; <label>:29                                      ; preds = %26
  %30 = load i32* %1, align 4, !tbaa !223
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %30)
  %31 = load %struct.Zio** %3, align 8, !tbaa !225
  %32 = getelementptr inbounds %struct.Zio* %31, i64 0, i32 0
  %33 = load i64* %32, align 8, !tbaa !164
  %34 = add i64 %33, -1
  store i64 %34, i64* %32, align 8, !tbaa !164
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %42, label %36

; <label>:36                                      ; preds = %29
  %37 = getelementptr inbounds %struct.Zio* %31, i64 0, i32 1
  %38 = load i8** %37, align 8, !tbaa !166
  %39 = getelementptr inbounds i8* %38, i64 1
  store i8* %39, i8** %37, align 8, !tbaa !166
  %40 = load i8* %38, align 1, !tbaa !86
  %41 = zext i8 %40 to i32
  br label %44

; <label>:42                                      ; preds = %29
  %43 = tail call i32 @luaZ_fill(%struct.Zio* %31) #3
  br label %44

; <label>:44                                      ; preds = %42, %36
  %45 = phi i32 [ %41, %36 ], [ %43, %42 ]
  store i32 %45, i32* %1, align 4, !tbaa !223
  br i1 %20, label %95, label %80

; <label>:46                                      ; preds = %21, %21
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 10)
  tail call fastcc void @inclinenumber(%struct.LexState.194* %ls)
  br i1 %20, label %47, label %thread-pre-split

; <label>:47                                      ; preds = %46
  %48 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %49 = load %struct.Mbuffer** %48, align 8, !tbaa !229
  %50 = getelementptr inbounds %struct.Mbuffer* %49, i64 0, i32 1
  store i64 0, i64* %50, align 8, !tbaa !231
  br label %thread-pre-split

; <label>:51                                      ; preds = %21
  br i1 %20, label %66, label %52

; <label>:52                                      ; preds = %51
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %22)
  %53 = load %struct.Zio** %3, align 8, !tbaa !225
  %54 = getelementptr inbounds %struct.Zio* %53, i64 0, i32 0
  %55 = load i64* %54, align 8, !tbaa !164
  %56 = add i64 %55, -1
  store i64 %56, i64* %54, align 8, !tbaa !164
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %64, label %58

; <label>:58                                      ; preds = %52
  %59 = getelementptr inbounds %struct.Zio* %53, i64 0, i32 1
  %60 = load i8** %59, align 8, !tbaa !166
  %61 = getelementptr inbounds i8* %60, i64 1
  store i8* %61, i8** %59, align 8, !tbaa !166
  %62 = load i8* %60, align 1, !tbaa !86
  %63 = zext i8 %62 to i32
  br label %.backedge

; <label>:64                                      ; preds = %52
  %65 = tail call i32 @luaZ_fill(%struct.Zio* %53) #3
  br label %.backedge

.backedge:                                        ; preds = %78, %72, %64, %58
  %storemerge = phi i32 [ %63, %58 ], [ %65, %64 ], [ %77, %72 ], [ %79, %78 ]
  store i32 %storemerge, i32* %1, align 4, !tbaa !223
  br label %21

; <label>:66                                      ; preds = %51
  %67 = load %struct.Zio** %3, align 8, !tbaa !225
  %68 = getelementptr inbounds %struct.Zio* %67, i64 0, i32 0
  %69 = load i64* %68, align 8, !tbaa !164
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8, !tbaa !164
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %78, label %72

; <label>:72                                      ; preds = %66
  %73 = getelementptr inbounds %struct.Zio* %67, i64 0, i32 1
  %74 = load i8** %73, align 8, !tbaa !166
  %75 = getelementptr inbounds i8* %74, i64 1
  store i8* %75, i8** %73, align 8, !tbaa !166
  %76 = load i8* %74, align 1, !tbaa !86
  %77 = zext i8 %76 to i32
  br label %.backedge

; <label>:78                                      ; preds = %66
  %79 = tail call i32 @luaZ_fill(%struct.Zio* %67) #3
  br label %.backedge

; <label>:80                                      ; preds = %44
  %81 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %82 = load %struct.Mbuffer** %81, align 8, !tbaa !229
  %83 = getelementptr inbounds %struct.Mbuffer* %82, i64 0, i32 0
  %84 = load i8** %83, align 8, !tbaa !161
  %85 = add nsw i32 %sep, 2
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8* %84, i64 %86
  %88 = getelementptr inbounds %struct.Mbuffer* %82, i64 0, i32 1
  %89 = load i64* %88, align 8, !tbaa !231
  %90 = shl nsw i32 %85, 1
  %91 = sext i32 %90 to i64
  %92 = sub i64 %89, %91
  %93 = tail call %union.TString* @luaX_newstring(%struct.LexState.194* %ls, i8* %87, i64 %92)
  %94 = bitcast %union.SemInfo* %seminfo to %union.TString**
  store %union.TString* %93, %union.TString** %94, align 8, !tbaa !25
  br label %95

; <label>:95                                      ; preds = %80, %44
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @escerror(%struct.LexState.194* nocapture readonly %ls, i32* nocapture readonly %c, i32 %n, i8* %msg) #4 {
  %1 = getelementptr inbounds %struct.LexState.194* %ls, i64 0, i32 8
  %2 = load %struct.Mbuffer** %1, align 8, !tbaa !229
  %3 = getelementptr inbounds %struct.Mbuffer* %2, i64 0, i32 1
  store i64 0, i64* %3, align 8, !tbaa !231
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 92)
  %4 = icmp sgt i32 %n, 0
  br i1 %4, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %8, %0
  %indvars.iv = phi i64 [ %indvars.iv.next, %8 ], [ 0, %0 ]
  %5 = getelementptr inbounds i32* %c, i64 %indvars.iv
  %6 = load i32* %5, align 4, !tbaa !1
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.critedge, label %8

; <label>:8                                       ; preds = %.lr.ph
  tail call fastcc void @save(%struct.LexState.194* %ls, i32 %6)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %9 = trunc i64 %indvars.iv.next to i32
  %10 = icmp slt i32 %9, %n
  br i1 %10, label %.lr.ph, label %.critedge

.critedge:                                        ; preds = %8, %.lr.ph, %0
  tail call fastcc void @lexerror(%struct.LexState.194* %ls, i8* %msg, i32 289) #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaM_growaux_(%struct.lua_State* %L, i8* %block, i32* nocapture %size, i64 %size_elems, i32 %limit, i8* %what) #0 {
  %1 = load i32* %size, align 4, !tbaa !1
  %2 = sdiv i32 %limit, 2
  %3 = icmp slt i32 %1, %2
  br i1 %3, label %7, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp slt i32 %1, %limit
  br i1 %5, label %10, label %6

; <label>:6                                       ; preds = %4
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([26 x i8]* @.str109, i64 0, i64 0), i8* %what, i32 %limit) #13
  unreachable

; <label>:7                                       ; preds = %0
  %8 = shl nsw i32 %1, 1
  %9 = icmp slt i32 %8, 4
  %. = select i1 %9, i32 4, i32 %8
  br label %10

; <label>:10                                      ; preds = %7, %4
  %newsize.0 = phi i32 [ %., %7 ], [ %limit, %4 ]
  %11 = add nsw i32 %newsize.0, 1
  %12 = sext i32 %11 to i64
  %13 = udiv i64 -3, %size_elems
  %14 = icmp ugt i64 %12, %13
  br i1 %14, label %15, label %16

; <label>:15                                      ; preds = %10
  tail call void @luaM_toobig(%struct.lua_State* %L) #14
  unreachable

; <label>:16                                      ; preds = %10
  %17 = sext i32 %1 to i64
  %18 = mul i64 %17, %size_elems
  %19 = sext i32 %newsize.0 to i64
  %20 = mul i64 %19, %size_elems
  %21 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %22 = load %struct.global_State** %21, align 8, !tbaa !17
  %23 = icmp ne i8* %block, null
  %24 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 0
  %25 = load i8* (i8*, i8*, i64, i64)** %24, align 8, !tbaa !72
  %26 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 1
  %27 = load i8** %26, align 8, !tbaa !71
  %28 = tail call i8* %25(i8* %27, i8* %block, i64 %18, i64 %20) #3
  %29 = icmp eq i8* %28, null
  %30 = icmp ne i64 %20, 0
  %or.cond.i = and i1 %29, %30
  br i1 %or.cond.i, label %31, label %luaM_realloc_.exit

; <label>:31                                      ; preds = %16
  %32 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 12
  %33 = load i8* %32, align 1, !tbaa !63
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %.thread.i, label %35

; <label>:35                                      ; preds = %31
  tail call void @luaC_fullgc(%struct.lua_State* %L, i32 1) #3
  %36 = load i8* (i8*, i8*, i64, i64)** %24, align 8, !tbaa !72
  %37 = load i8** %26, align 8, !tbaa !71
  %38 = tail call i8* %36(i8* %37, i8* %block, i64 %18, i64 %20) #3
  %39 = icmp eq i8* %38, null
  br i1 %39, label %.thread.i, label %luaM_realloc_.exit

.thread.i:                                        ; preds = %35, %31
  tail call void @luaD_throw(%struct.lua_State* %L, i32 4) #13
  unreachable

luaM_realloc_.exit:                               ; preds = %35, %16
  %newblock.1.i = phi i8* [ %38, %35 ], [ %28, %16 ]
  %40 = getelementptr inbounds %struct.global_State* %22, i64 0, i32 3
  %41 = load i64* %40, align 8, !tbaa !33
  %osize.op.i = sub i64 0, %18
  %.neg.i = select i1 %23, i64 %osize.op.i, i64 0
  %42 = add i64 %.neg.i, %20
  %43 = add i64 %42, %41
  store i64 %43, i64* %40, align 8, !tbaa !33
  store i32 %newsize.0, i32* %size, align 4, !tbaa !1
  ret i8* %newblock.1.i
}

; Function Attrs: noreturn nounwind ssp uwtable
define void @luaM_toobig(%struct.lua_State* %L) #4 {
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([39 x i8]* @.str1110, i64 0, i64 0)) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaM_realloc_(%struct.lua_State* %L, i8* %block, i64 %osize, i64 %nsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %2 = load %struct.global_State** %1, align 8, !tbaa !17
  %3 = icmp ne i8* %block, null
  %4 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 0
  %5 = load i8* (i8*, i8*, i64, i64)** %4, align 8, !tbaa !72
  %6 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 1
  %7 = load i8** %6, align 8, !tbaa !71
  %8 = tail call i8* %5(i8* %7, i8* %block, i64 %osize, i64 %nsize) #3
  %9 = icmp eq i8* %8, null
  %10 = icmp ne i64 %nsize, 0
  %or.cond = and i1 %9, %10
  br i1 %or.cond, label %11, label %20

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 12
  %13 = load i8* %12, align 1, !tbaa !63
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %.thread, label %15

; <label>:15                                      ; preds = %11
  tail call void @luaC_fullgc(%struct.lua_State* %L, i32 1) #3
  %16 = load i8* (i8*, i8*, i64, i64)** %4, align 8, !tbaa !72
  %17 = load i8** %6, align 8, !tbaa !71
  %18 = tail call i8* %16(i8* %17, i8* %block, i64 %osize, i64 %nsize) #3
  %19 = icmp eq i8* %18, null
  br i1 %19, label %.thread, label %20

.thread:                                          ; preds = %15, %11
  tail call void @luaD_throw(%struct.lua_State* %L, i32 4) #13
  unreachable

; <label>:20                                      ; preds = %15, %0
  %newblock.1 = phi i8* [ %18, %15 ], [ %8, %0 ]
  %21 = getelementptr inbounds %struct.global_State* %2, i64 0, i32 3
  %22 = load i64* %21, align 8, !tbaa !33
  %osize.op = sub i64 0, %osize
  %.neg = select i1 %3, i64 %osize.op, i64 0
  %23 = add i64 %.neg, %nsize
  %24 = add i64 %23, %22
  store i64 %24, i64* %21, align 8, !tbaa !33
  ret i8* %newblock.1
}

; Function Attrs: nounwind readnone ssp uwtable
define i32 @luaO_int2fb(i32 %x) #2 {
  %1 = icmp ult i32 %x, 8
  br i1 %1, label %9, label %.preheader

.preheader:                                       ; preds = %0
  %2 = icmp ugt i32 %x, 15
  br i1 %2, label %.lr.ph, label %6

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %e.03 = phi i32 [ %phitmp, %.lr.ph ], [ 1, %.preheader ]
  %.02 = phi i32 [ %4, %.lr.ph ], [ %x, %.preheader ]
  %3 = add i32 %.02, 1
  %4 = lshr i32 %3, 1
  %phitmp = add i32 %e.03, 1
  %5 = icmp ugt i32 %3, 31
  br i1 %5, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %phitmp5 = shl i32 %phitmp, 3
  br label %6

; <label>:6                                       ; preds = %._crit_edge, %.preheader
  %e.0.lcssa = phi i32 [ %phitmp5, %._crit_edge ], [ 8, %.preheader ]
  %.0.lcssa = phi i32 [ %4, %._crit_edge ], [ %x, %.preheader ]
  %7 = add nsw i32 %.0.lcssa, -8
  %8 = or i32 %e.0.lcssa, %7
  br label %9

; <label>:9                                       ; preds = %6, %0
  %.01 = phi i32 [ %8, %6 ], [ %x, %0 ]
  ret i32 %.01
}

; Function Attrs: nounwind readnone ssp uwtable
define i32 @luaO_fb2int(i32 %x) #2 {
  %1 = lshr i32 %x, 3
  %2 = and i32 %1, 31
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = and i32 %x, 7
  %6 = or i32 %5, 8
  %7 = add nsw i32 %2, -1
  %8 = shl i32 %6, %7
  br label %9

; <label>:9                                       ; preds = %4, %0
  %.0 = phi i32 [ %8, %4 ], [ %x, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind readnone ssp uwtable
define i32 @luaO_ceillog2(i32 %x) #2 {
  %1 = add i32 %x, -1
  %2 = icmp ugt i32 %1, 255
  br i1 %2, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %0
  %l.02 = phi i32 [ %3, %.lr.ph ], [ 0, %0 ]
  %.01 = phi i32 [ %4, %.lr.ph ], [ %1, %0 ]
  %3 = add nsw i32 %l.02, 8
  %4 = lshr i32 %.01, 8
  %5 = icmp ugt i32 %.01, 65535
  br i1 %5, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %l.0.lcssa = phi i32 [ 0, %0 ], [ %3, %.lr.ph ]
  %.0.lcssa = phi i32 [ %1, %0 ], [ %4, %.lr.ph ]
  %6 = zext i32 %.0.lcssa to i64
  %7 = getelementptr inbounds [256 x i8]* @luaO_ceillog2.log_2, i64 0, i64 %6
  %8 = load i8* %7, align 1, !tbaa !86
  %9 = zext i8 %8 to i32
  %10 = add nsw i32 %9, %l.0.lcssa
  ret i32 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define double @luaO_arith(i32 %op, double %v1, double %v2) #1 {
  switch i32 %op, label %18 [
    i32 0, label %1
    i32 1, label %3
    i32 2, label %5
    i32 3, label %7
    i32 4, label %9
    i32 5, label %14
    i32 6, label %16
  ]

; <label>:1                                       ; preds = %0
  %2 = fadd double %v1, %v2
  br label %18

; <label>:3                                       ; preds = %0
  %4 = fsub double %v1, %v2
  br label %18

; <label>:5                                       ; preds = %0
  %6 = fmul double %v1, %v2
  br label %18

; <label>:7                                       ; preds = %0
  %8 = fdiv double %v1, %v2
  br label %18

; <label>:9                                       ; preds = %0
  %10 = fdiv double %v1, %v2
  %11 = tail call double @floor(double %10) #11
  %12 = fmul double %11, %v2
  %13 = fsub double %v1, %12
  br label %18

; <label>:14                                      ; preds = %0
  %15 = tail call double @llvm.pow.f64(double %v1, double %v2)
  br label %18

; <label>:16                                      ; preds = %0
  %17 = fsub double -0.000000e+00, %v1
  br label %18

; <label>:18                                      ; preds = %16, %14, %9, %7, %5, %3, %1, %0
  %.0 = phi double [ %17, %16 ], [ %15, %14 ], [ %13, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ], [ %2, %1 ], [ 0.000000e+00, %0 ]
  ret double %.0
}

; Function Attrs: nounwind readnone
declare double @floor(double) #10

; Function Attrs: nounwind readnone
declare double @llvm.pow.f64(double, double) #11

; Function Attrs: nounwind readnone ssp uwtable
define i32 @luaO_hexavalue(i32 %c) #2 {
  %1 = add nsw i32 %c, 1
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %2
  %4 = load i8* %3, align 1, !tbaa !86
  %5 = and i8 %4, 2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %0
  %8 = add nsw i32 %c, -48
  br label %12

; <label>:9                                       ; preds = %0
  %10 = or i32 %c, 32
  %11 = add nsw i32 %10, -87
  br label %12

; <label>:12                                      ; preds = %9, %7
  %.0 = phi i32 [ %8, %7 ], [ %11, %9 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaO_str2d(i8* %s, i64 %len, double* nocapture %result) #0 {
  %endptr = alloca i8*, align 8
  %1 = call i8* @strpbrk(i8* %s, i8* getelementptr inbounds ([3 x i8]* @.str119, i64 0, i64 0)) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %26

; <label>:3                                       ; preds = %0
  %4 = call double @"\01_strtod"(i8* %s, i8** %endptr) #3
  store double %4, double* %result, align 8, !tbaa !30
  %5 = load i8** %endptr, align 8, !tbaa !25
  %6 = icmp eq i8* %5, %s
  br i1 %6, label %26, label %.preheader

.preheader:                                       ; preds = %3
  %7 = load i8* %5, align 1, !tbaa !86
  %8 = zext i8 %7 to i64
  %9 = add i64 %8, 1
  %10 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %9
  %11 = load i8* %10, align 1, !tbaa !86
  %12 = and i8 %11, 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %14 = phi i8* [ %15, %.lr.ph ], [ %5, %.preheader ]
  %15 = getelementptr inbounds i8* %14, i64 1
  store i8* %15, i8** %endptr, align 8, !tbaa !25
  %16 = load i8* %15, align 1, !tbaa !86
  %17 = zext i8 %16 to i64
  %18 = add i64 %17, 1
  %19 = getelementptr inbounds [257 x i8]* @luai_ctype_, i64 0, i64 %18
  %20 = load i8* %19, align 1, !tbaa !86
  %21 = and i8 %20, 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %.preheader
  %.lcssa = phi i8* [ %5, %.preheader ], [ %15, %.lr.ph ]
  %23 = getelementptr inbounds i8* %s, i64 %len
  %24 = icmp eq i8* %.lcssa, %23
  %25 = zext i1 %24 to i32
  br label %26

; <label>:26                                      ; preds = %._crit_edge, %3, %0
  %.0 = phi i32 [ %25, %._crit_edge ], [ 0, %0 ], [ 0, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly
declare i8* @strpbrk(i8*, i8* nocapture) #5

declare double @"\01_strtod"(i8*, i8**) #8

; Function Attrs: nounwind ssp uwtable
define i8* @luaO_pushvfstring(%struct.lua_State.228* %L, i8* %fmt, %struct.__va_list_tag* nocapture %argp) #0 {
  %buff = alloca i8, align 1
  %buff2 = alloca [40 x i8], align 16
  %1 = call i8* @strchr(i8* %fmt, i32 37) #3
  %2 = icmp eq i8* %1, null
  %3 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 8
  %4 = load %struct.lua_TValue.215** %3, align 8, !tbaa !11
  %5 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %6 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %7 = ptrtoint %struct.lua_TValue.215* %4 to i64
  %8 = ptrtoint %struct.lua_TValue.215* %6 to i64
  %9 = sub i64 %7, %8
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %10 = getelementptr inbounds %struct.__va_list_tag* %argp, i64 0, i32 0
  %11 = getelementptr inbounds %struct.__va_list_tag* %argp, i64 0, i32 3
  %12 = getelementptr inbounds %struct.__va_list_tag* %argp, i64 0, i32 2
  %13 = getelementptr inbounds %struct.__va_list_tag* %argp, i64 0, i32 1
  %14 = getelementptr inbounds [40 x i8]* %buff2, i64 0, i64 0
  br label %15

; <label>:15                                      ; preds = %164, %.lr.ph
  %16 = phi %struct.lua_TValue.215* [ %6, %.lr.ph ], [ %170, %164 ]
  %17 = phi i64 [ %9, %.lr.ph ], [ %173, %164 ]
  %18 = phi i8* [ %1, %.lr.ph ], [ %167, %164 ]
  %.014 = phi i8* [ %fmt, %.lr.ph ], [ %166, %164 ]
  %n.013 = phi i32 [ 0, %.lr.ph ], [ %165, %164 ]
  %19 = icmp slt i64 %17, 48
  br i1 %19, label %20, label %21

; <label>:20                                      ; preds = %15
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.228*, i32)*)(%struct.lua_State.228* %L, i32 2) #3
  %.pre22 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %21

; <label>:21                                      ; preds = %20, %15
  %22 = phi %struct.lua_TValue.215* [ %16, %15 ], [ %.pre22, %20 ]
  %23 = ptrtoint i8* %18 to i64
  %24 = ptrtoint i8* %.014 to i64
  %25 = sub i64 %23, %24
  %26 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 1
  store %struct.lua_TValue.215* %26, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %27 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %.014, i64 %25) #3
  %28 = bitcast %union.TString.219* %27 to %union.GCObject.229*
  %29 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 0, i32 0, i32 0
  store %union.GCObject.229* %28, %union.GCObject.229** %29, align 8, !tbaa !25
  %30 = getelementptr inbounds %union.TString.219* %27, i64 0, i32 0, i32 1
  %31 = load i8* %30, align 1, !tbaa !38
  %32 = zext i8 %31 to i32
  %33 = or i32 %32, 64
  %34 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 0, i32 1
  store i32 %33, i32* %34, align 4, !tbaa !15
  %35 = getelementptr inbounds i8* %18, i64 1
  %36 = load i8* %35, align 1, !tbaa !86
  %37 = sext i8 %36 to i32
  switch i32 %37, label %163 [
    i32 115, label %38
    i32 99, label %64
    i32 100, label %89
    i32 102, label %108
    i32 112, label %126
    i32 37, label %152
  ]

; <label>:38                                      ; preds = %21
  %39 = load i32* %10, align 4
  %40 = icmp ult i32 %39, 41
  br i1 %40, label %41, label %46

; <label>:41                                      ; preds = %38
  %42 = load i8** %11, align 8
  %43 = sext i32 %39 to i64
  %44 = getelementptr i8* %42, i64 %43
  %45 = add i32 %39, 8
  store i32 %45, i32* %10, align 4
  br label %49

; <label>:46                                      ; preds = %38
  %47 = load i8** %12, align 8
  %48 = getelementptr i8* %47, i64 8
  store i8* %48, i8** %12, align 8
  br label %49

; <label>:49                                      ; preds = %46, %41
  %.in6 = phi i8* [ %44, %41 ], [ %47, %46 ]
  %50 = bitcast i8* %.in6 to i8**
  %51 = load i8** %50, align 8
  %52 = icmp eq i8* %51, null
  %. = select i1 %52, i8* getelementptr inbounds ([7 x i8]* @.str2120, i64 0, i64 0), i8* %51
  %53 = call i64 @strlen(i8* %.) #3
  %54 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %55 = getelementptr inbounds %struct.lua_TValue.215* %54, i64 1
  store %struct.lua_TValue.215* %55, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %56 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %., i64 %53) #3
  %57 = bitcast %union.TString.219* %56 to %union.GCObject.229*
  %58 = getelementptr inbounds %struct.lua_TValue.215* %54, i64 0, i32 0, i32 0
  store %union.GCObject.229* %57, %union.GCObject.229** %58, align 8, !tbaa !25
  %59 = getelementptr inbounds %union.TString.219* %56, i64 0, i32 0, i32 1
  %60 = load i8* %59, align 1, !tbaa !38
  %61 = zext i8 %60 to i32
  %62 = or i32 %61, 64
  %63 = getelementptr inbounds %struct.lua_TValue.215* %54, i64 0, i32 1
  store i32 %62, i32* %63, align 4, !tbaa !15
  br label %164

; <label>:64                                      ; preds = %21
  %65 = load i32* %10, align 4
  %66 = icmp ult i32 %65, 41
  br i1 %66, label %67, label %72

; <label>:67                                      ; preds = %64
  %68 = load i8** %11, align 8
  %69 = sext i32 %65 to i64
  %70 = getelementptr i8* %68, i64 %69
  %71 = add i32 %65, 8
  store i32 %71, i32* %10, align 4
  br label %75

; <label>:72                                      ; preds = %64
  %73 = load i8** %12, align 8
  %74 = getelementptr i8* %73, i64 8
  store i8* %74, i8** %12, align 8
  br label %75

; <label>:75                                      ; preds = %72, %67
  %.in5 = phi i8* [ %70, %67 ], [ %73, %72 ]
  %76 = bitcast i8* %.in5 to i32*
  %77 = load i32* %76, align 4
  %78 = trunc i32 %77 to i8
  store i8 %78, i8* %buff, align 1, !tbaa !86
  %79 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %80 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 1
  store %struct.lua_TValue.215* %80, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %81 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %buff, i64 1) #3
  %82 = bitcast %union.TString.219* %81 to %union.GCObject.229*
  %83 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 0, i32 0, i32 0
  store %union.GCObject.229* %82, %union.GCObject.229** %83, align 8, !tbaa !25
  %84 = getelementptr inbounds %union.TString.219* %81, i64 0, i32 0, i32 1
  %85 = load i8* %84, align 1, !tbaa !38
  %86 = zext i8 %85 to i32
  %87 = or i32 %86, 64
  %88 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 0, i32 1
  store i32 %87, i32* %88, align 4, !tbaa !15
  br label %164

; <label>:89                                      ; preds = %21
  %90 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %91 = getelementptr inbounds %struct.lua_TValue.215* %90, i64 1
  store %struct.lua_TValue.215* %91, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %92 = load i32* %10, align 4
  %93 = icmp ult i32 %92, 41
  br i1 %93, label %94, label %99

; <label>:94                                      ; preds = %89
  %95 = load i8** %11, align 8
  %96 = sext i32 %92 to i64
  %97 = getelementptr i8* %95, i64 %96
  %98 = add i32 %92, 8
  store i32 %98, i32* %10, align 4
  br label %102

; <label>:99                                      ; preds = %89
  %100 = load i8** %12, align 8
  %101 = getelementptr i8* %100, i64 8
  store i8* %101, i8** %12, align 8
  br label %102

; <label>:102                                     ; preds = %99, %94
  %.in4 = phi i8* [ %97, %94 ], [ %100, %99 ]
  %103 = bitcast i8* %.in4 to i32*
  %104 = load i32* %103, align 4
  %105 = sitofp i32 %104 to double
  %106 = bitcast %struct.lua_TValue.215* %90 to double*
  store double %105, double* %106, align 8, !tbaa !30
  %107 = getelementptr inbounds %struct.lua_TValue.215* %90, i64 0, i32 1
  store i32 3, i32* %107, align 4, !tbaa !15
  br label %164

; <label>:108                                     ; preds = %21
  %109 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %110 = getelementptr inbounds %struct.lua_TValue.215* %109, i64 1
  store %struct.lua_TValue.215* %110, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %111 = load i32* %13, align 4
  %112 = icmp ult i32 %111, 161
  br i1 %112, label %113, label %118

; <label>:113                                     ; preds = %108
  %114 = load i8** %11, align 8
  %115 = sext i32 %111 to i64
  %116 = getelementptr i8* %114, i64 %115
  %117 = add i32 %111, 16
  store i32 %117, i32* %13, align 4
  br label %121

; <label>:118                                     ; preds = %108
  %119 = load i8** %12, align 8
  %120 = getelementptr i8* %119, i64 8
  store i8* %120, i8** %12, align 8
  br label %121

; <label>:121                                     ; preds = %118, %113
  %.in3 = phi i8* [ %116, %113 ], [ %119, %118 ]
  %122 = bitcast i8* %.in3 to double*
  %123 = load double* %122, align 8
  %124 = bitcast %struct.lua_TValue.215* %109 to double*
  store double %123, double* %124, align 8, !tbaa !30
  %125 = getelementptr inbounds %struct.lua_TValue.215* %109, i64 0, i32 1
  store i32 3, i32* %125, align 4, !tbaa !15
  br label %164

; <label>:126                                     ; preds = %21
  call void @llvm.lifetime.start(i64 40, i8* %14) #3
  %127 = load i32* %10, align 4
  %128 = icmp ult i32 %127, 41
  br i1 %128, label %129, label %134

; <label>:129                                     ; preds = %126
  %130 = load i8** %11, align 8
  %131 = sext i32 %127 to i64
  %132 = getelementptr i8* %130, i64 %131
  %133 = add i32 %127, 8
  store i32 %133, i32* %10, align 4
  br label %137

; <label>:134                                     ; preds = %126
  %135 = load i8** %12, align 8
  %136 = getelementptr i8* %135, i64 8
  store i8* %136, i8** %12, align 8
  br label %137

; <label>:137                                     ; preds = %134, %129
  %.in = phi i8* [ %132, %129 ], [ %135, %134 ]
  %138 = bitcast i8* %.in to i8**
  %139 = load i8** %138, align 8
  %140 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %14, i32 0, i64 40, i8* getelementptr inbounds ([3 x i8]* @.str3121, i64 0, i64 0), i8* %139) #3
  %141 = sext i32 %140 to i64
  %142 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %143 = getelementptr inbounds %struct.lua_TValue.215* %142, i64 1
  store %struct.lua_TValue.215* %143, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %144 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %14, i64 %141) #3
  %145 = bitcast %union.TString.219* %144 to %union.GCObject.229*
  %146 = getelementptr inbounds %struct.lua_TValue.215* %142, i64 0, i32 0, i32 0
  store %union.GCObject.229* %145, %union.GCObject.229** %146, align 8, !tbaa !25
  %147 = getelementptr inbounds %union.TString.219* %144, i64 0, i32 0, i32 1
  %148 = load i8* %147, align 1, !tbaa !38
  %149 = zext i8 %148 to i32
  %150 = or i32 %149, 64
  %151 = getelementptr inbounds %struct.lua_TValue.215* %142, i64 0, i32 1
  store i32 %150, i32* %151, align 4, !tbaa !15
  call void @llvm.lifetime.end(i64 40, i8* %14) #3
  br label %164

; <label>:152                                     ; preds = %21
  %153 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %154 = getelementptr inbounds %struct.lua_TValue.215* %153, i64 1
  store %struct.lua_TValue.215* %154, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %155 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* getelementptr inbounds ([2 x i8]* @.str4122, i64 0, i64 0), i64 1) #3
  %156 = bitcast %union.TString.219* %155 to %union.GCObject.229*
  %157 = getelementptr inbounds %struct.lua_TValue.215* %153, i64 0, i32 0, i32 0
  store %union.GCObject.229* %156, %union.GCObject.229** %157, align 8, !tbaa !25
  %158 = getelementptr inbounds %union.TString.219* %155, i64 0, i32 0, i32 1
  %159 = load i8* %158, align 1, !tbaa !38
  %160 = zext i8 %159 to i32
  %161 = or i32 %160, 64
  %162 = getelementptr inbounds %struct.lua_TValue.215* %153, i64 0, i32 1
  store i32 %161, i32* %162, align 4, !tbaa !15
  br label %164

; <label>:163                                     ; preds = %21
  call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([43 x i8]* @.str5123, i64 0, i64 0), i32 %37) #13
  unreachable

; <label>:164                                     ; preds = %152, %137, %121, %102, %75, %49
  %165 = add nsw i32 %n.013, 2
  %166 = getelementptr inbounds i8* %18, i64 2
  %167 = call i8* @strchr(i8* %166, i32 37) #3
  %168 = icmp eq i8* %167, null
  %169 = load %struct.lua_TValue.215** %3, align 8, !tbaa !11
  %170 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %171 = ptrtoint %struct.lua_TValue.215* %169 to i64
  %172 = ptrtoint %struct.lua_TValue.215* %170 to i64
  %173 = sub i64 %171, %172
  br i1 %168, label %._crit_edge, label %15

._crit_edge:                                      ; preds = %164, %0
  %174 = phi %struct.lua_TValue.215* [ %6, %0 ], [ %170, %164 ]
  %.lcssa10 = phi i64 [ %9, %0 ], [ %173, %164 ]
  %.0.lcssa = phi i8* [ %fmt, %0 ], [ %166, %164 ]
  %n.0.lcssa = phi i32 [ 0, %0 ], [ %165, %164 ]
  %175 = icmp slt i64 %.lcssa10, 32
  br i1 %175, label %176, label %177

; <label>:176                                     ; preds = %._crit_edge
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.228*, i32)*)(%struct.lua_State.228* %L, i32 1) #3
  %.pre = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %177

; <label>:177                                     ; preds = %176, %._crit_edge
  %178 = phi %struct.lua_TValue.215* [ %174, %._crit_edge ], [ %.pre, %176 ]
  %179 = call i64 @strlen(i8* %.0.lcssa) #3
  %180 = getelementptr inbounds %struct.lua_TValue.215* %178, i64 1
  store %struct.lua_TValue.215* %180, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %181 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %.0.lcssa, i64 %179) #3
  %182 = bitcast %union.TString.219* %181 to %union.GCObject.229*
  %183 = getelementptr inbounds %struct.lua_TValue.215* %178, i64 0, i32 0, i32 0
  store %union.GCObject.229* %182, %union.GCObject.229** %183, align 8, !tbaa !25
  %184 = getelementptr inbounds %union.TString.219* %181, i64 0, i32 0, i32 1
  %185 = load i8* %184, align 1, !tbaa !38
  %186 = zext i8 %185 to i32
  %187 = or i32 %186, 64
  %188 = getelementptr inbounds %struct.lua_TValue.215* %178, i64 0, i32 1
  store i32 %187, i32* %188, align 4, !tbaa !15
  %189 = icmp sgt i32 %n.0.lcssa, 0
  br i1 %189, label %190, label %192

; <label>:190                                     ; preds = %177
  %191 = or i32 %n.0.lcssa, 1
  call void @luaV_concat(%struct.lua_State.228* %L, i32 %191) #3
  br label %192

; <label>:192                                     ; preds = %190, %177
  %193 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %194 = getelementptr inbounds %struct.lua_TValue.215* %193, i64 -1, i32 0, i32 0
  %195 = load %union.GCObject.229** %194, align 8, !tbaa !25
  %196 = getelementptr inbounds %union.GCObject.229* %195, i64 0, i32 0, i32 5
  %197 = bitcast %struct.global_State.223** %196 to i8*
  ret i8* %197
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8* nocapture) #5

declare i32 @__sprintf_chk(i8*, i32, i64, i8*, ...) #8

; Function Attrs: nounwind ssp uwtable
define i8* @luaO_pushfstring(%struct.lua_State.228* %L, i8* %fmt, ...) #0 {
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  %2 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.va_start(i8* %2)
  %3 = call i8* @luaO_pushvfstring(%struct.lua_State.228* %L, i8* %fmt, %struct.__va_list_tag* %1)
  call void @llvm.va_end(i8* %2)
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define void @luaO_chunkid(i8* %out, i8* %source, i64 %bufflen) #0 {
  %1 = tail call i64 @strlen(i8* %source) #3
  %2 = load i8* %source, align 1, !tbaa !86
  switch i8 %2, label %28 [
    i8 61, label %3
    i8 64, label %14
  ]

; <label>:3                                       ; preds = %0
  %4 = icmp ugt i64 %1, %bufflen
  %5 = getelementptr inbounds i8* %source, i64 1
  br i1 %4, label %9, label %6

; <label>:6                                       ; preds = %3
  %7 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %out, i1 false)
  %8 = tail call i8* @__memcpy_chk(i8* %out, i8* %5, i64 %1, i64 %7) #3
  br label %54

; <label>:9                                       ; preds = %3
  %10 = add i64 %bufflen, -1
  %11 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %out, i1 false)
  %12 = tail call i8* @__memcpy_chk(i8* %out, i8* %5, i64 %10, i64 %11) #3
  %13 = getelementptr inbounds i8* %out, i64 %10
  store i8 0, i8* %13, align 1, !tbaa !86
  br label %54

; <label>:14                                      ; preds = %0
  %15 = icmp ugt i64 %1, %bufflen
  br i1 %15, label %20, label %16

; <label>:16                                      ; preds = %14
  %17 = getelementptr inbounds i8* %source, i64 1
  %18 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %out, i1 false)
  %19 = tail call i8* @__memcpy_chk(i8* %out, i8* %17, i64 %1, i64 %18) #3
  br label %54

; <label>:20                                      ; preds = %14
  %21 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %out, i1 false)
  %22 = tail call i8* @__memcpy_chk(i8* %out, i8* getelementptr inbounds ([4 x i8]* @.str6124, i64 0, i64 0), i64 3, i64 %21) #3
  %23 = getelementptr inbounds i8* %out, i64 3
  %24 = add i64 %bufflen, -3
  %.sum4 = sub i64 4, %bufflen
  %.sum5 = add i64 %.sum4, %1
  %25 = getelementptr inbounds i8* %source, i64 %.sum5
  %26 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %23, i1 false)
  %27 = tail call i8* @__memcpy_chk(i8* %23, i8* %25, i64 %24, i64 %26) #3
  br label %54

; <label>:28                                      ; preds = %0
  %29 = tail call i8* @strchr(i8* %source, i32 10) #3
  %30 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %out, i1 false)
  %31 = tail call i8* @__memcpy_chk(i8* %out, i8* getelementptr inbounds ([10 x i8]* @.str7125, i64 0, i64 0), i64 9, i64 %30) #3
  %32 = getelementptr inbounds i8* %out, i64 9
  %33 = add i64 %bufflen, -15
  %34 = icmp ult i64 %1, %33
  %35 = icmp eq i8* %29, null
  %or.cond = and i1 %34, %35
  br i1 %or.cond, label %36, label %39

; <label>:36                                      ; preds = %28
  %37 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %32, i1 false)
  %38 = tail call i8* @__memcpy_chk(i8* %32, i8* %source, i64 %1, i64 %37) #3
  %.sum3 = add i64 %1, 9
  br label %51

; <label>:39                                      ; preds = %28
  br i1 %35, label %44, label %40

; <label>:40                                      ; preds = %39
  %41 = ptrtoint i8* %29 to i64
  %42 = ptrtoint i8* %source to i64
  %43 = sub i64 %41, %42
  br label %44

; <label>:44                                      ; preds = %40, %39
  %l.0 = phi i64 [ %43, %40 ], [ %1, %39 ]
  %45 = icmp ugt i64 %l.0, %33
  %.l.0 = select i1 %45, i64 %33, i64 %l.0
  %46 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %32, i1 false)
  %47 = tail call i8* @__memcpy_chk(i8* %32, i8* %source, i64 %.l.0, i64 %46) #3
  %.sum = add i64 %.l.0, 9
  %48 = getelementptr inbounds i8* %out, i64 %.sum
  %49 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %48, i1 false)
  %50 = tail call i8* @__memcpy_chk(i8* %48, i8* getelementptr inbounds ([4 x i8]* @.str6124, i64 0, i64 0), i64 3, i64 %49) #3
  %.sum2 = add i64 %.l.0, 12
  br label %51

; <label>:51                                      ; preds = %44, %36
  %.sum3.pn = phi i64 [ %.sum3, %36 ], [ %.sum2, %44 ]
  %.0 = getelementptr inbounds i8* %out, i64 %.sum3.pn
  %52 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %.0, i1 false)
  %53 = tail call i8* @__memcpy_chk(i8* %.0, i8* getelementptr inbounds ([3 x i8]* @.str8126, i64 0, i64 0), i64 3, i64 %52) #3
  br label %54

; <label>:54                                      ; preds = %51, %20, %16, %9, %6
  ret void
}

; Function Attrs: nounwind
declare i8* @__memcpy_chk(i8*, i8*, i64, i64) #12

; Function Attrs: nounwind readnone
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1) #11

; Function Attrs: nounwind ssp uwtable
define %union.Closure.129* @luaY_parser(%struct.lua_State.126* %L, %struct.Zio.254* %z, %struct.Mbuffer* %buff, %struct.Dyndata.259* %dyd, i8* %name, i32 %firstchar) #0 {
  %bl.i = alloca %struct.BlockCnt, align 8
  %v.i = alloca %struct.expdesc, align 8
  %lexstate = alloca %struct.LexState.267, align 8
  %funcstate = alloca %struct.FuncState.266, align 8
  %1 = bitcast %struct.LexState.267* %lexstate to i8*
  call void @llvm.lifetime.start(i64 112, i8* %1) #3
  %2 = bitcast %struct.FuncState.266* %funcstate to i8*
  call void @llvm.lifetime.start(i64 72, i8* %2) #3
  %3 = call %union.Closure.129* @luaF_newLclosure(%struct.lua_State.126* %L, i32 1) #3
  %4 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 4
  %5 = load %struct.lua_TValue.109** %4, align 8, !tbaa !12
  %6 = bitcast %union.Closure.129* %3 to %union.GCObject.127*
  %7 = getelementptr inbounds %struct.lua_TValue.109* %5, i64 0, i32 0, i32 0
  store %union.GCObject.127* %6, %union.GCObject.127** %7, align 8, !tbaa !25
  %8 = getelementptr inbounds %struct.lua_TValue.109* %5, i64 0, i32 1
  store i32 70, i32* %8, align 4, !tbaa !15
  %9 = load %struct.lua_TValue.109** %4, align 8, !tbaa !12
  %10 = getelementptr inbounds %struct.lua_TValue.109* %9, i64 1
  store %struct.lua_TValue.109* %10, %struct.lua_TValue.109** %4, align 8, !tbaa !12
  %11 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 8
  %12 = load %struct.lua_TValue.109** %11, align 8, !tbaa !11
  %13 = ptrtoint %struct.lua_TValue.109* %12 to i64
  %14 = ptrtoint %struct.lua_TValue.109* %10 to i64
  %15 = sub i64 %13, %14
  %16 = icmp slt i64 %15, 16
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %0
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.126*, i32)*)(%struct.lua_State.126* %L, i32 0) #3
  br label %18

; <label>:18                                      ; preds = %17, %0
  %19 = call %struct.Proto.132* @luaF_newproto(%struct.lua_State.126* %L) #3
  %20 = getelementptr inbounds %union.Closure.129* %3, i64 0, i32 0, i32 5
  %.c = bitcast %struct.Proto.132* %19 to i32 (%struct.lua_State.126*)*
  store i32 (%struct.lua_State.126*)* %.c, i32 (%struct.lua_State.126*)** %20, align 8, !tbaa !183
  %21 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 0
  store %struct.Proto.132* %19, %struct.Proto.132** %21, align 8, !tbaa !82
  %22 = call %union.TString.115* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString.115* (%struct.lua_State.126*, i8*)*)(%struct.lua_State.126* %L, i8* %name) #3
  %23 = getelementptr inbounds %struct.Proto.132* %19, i64 0, i32 10
  store %union.TString.115* %22, %union.TString.115** %23, align 8, !tbaa !122
  %24 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 8
  store %struct.Mbuffer* %buff, %struct.Mbuffer** %24, align 8, !tbaa !229
  %25 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 9
  store %struct.Dyndata.259* %dyd, %struct.Dyndata.259** %25, align 8, !tbaa !234
  %26 = getelementptr inbounds %struct.Dyndata.259* %dyd, i64 0, i32 2, i32 1
  store i32 0, i32* %26, align 4, !tbaa !235
  %27 = getelementptr inbounds %struct.Dyndata.259* %dyd, i64 0, i32 1, i32 1
  store i32 0, i32* %27, align 4, !tbaa !236
  %28 = getelementptr inbounds %struct.Dyndata.259* %dyd, i64 0, i32 0, i32 1
  store i32 0, i32* %28, align 4, !tbaa !237
  call void bitcast (void (%struct.lua_State*, %struct.LexState.194*, %struct.Zio*, %union.TString*, i32)* @luaX_setinput to void (%struct.lua_State.126*, %struct.LexState.267*, %struct.Zio.254*, %union.TString.115*, i32)*)(%struct.lua_State.126* %L, %struct.LexState.267* %lexstate, %struct.Zio.254* %z, %union.TString.115* %22, i32 %firstchar) #3
  %29 = bitcast %struct.BlockCnt* %bl.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %29) #3
  %30 = bitcast %struct.expdesc* %v.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %30) #3
  %31 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 6
  %32 = load %struct.lua_State.126** %31, align 8, !tbaa !89
  %33 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 5
  %34 = load %struct.FuncState.266** %33, align 8, !tbaa !221
  %35 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 2
  store %struct.FuncState.266* %34, %struct.FuncState.266** %35, align 8, !tbaa !238
  %36 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 3
  store %struct.LexState.267* %lexstate, %struct.LexState.267** %36, align 8, !tbaa !85
  store %struct.FuncState.266* %funcstate, %struct.FuncState.266** %33, align 8, !tbaa !221
  %37 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 5
  store i32 0, i32* %37, align 8, !tbaa !79
  %38 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 6
  store i32 0, i32* %38, align 4, !tbaa !81
  %39 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 7
  store i32 -1, i32* %39, align 8, !tbaa !84
  %40 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 8
  store i32 0, i32* %40, align 4, !tbaa !101
  %41 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 9
  store i32 0, i32* %41, align 8, !tbaa !239
  %42 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 11
  %43 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 12
  %44 = bitcast i16* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* %44, i8 0, i64 5, i32 8, i1 false) #3
  %45 = load %struct.Dyndata.259** %25, align 8, !tbaa !234
  %46 = getelementptr inbounds %struct.Dyndata.259* %45, i64 0, i32 0, i32 1
  %47 = load i32* %46, align 4, !tbaa !237
  %48 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 10
  store i32 %47, i32* %48, align 4, !tbaa !240
  %49 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 4
  store %struct.BlockCnt* null, %struct.BlockCnt** %49, align 8, !tbaa !241
  %50 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 10
  %51 = load %union.TString.115** %50, align 8, !tbaa !227
  store %union.TString.115* %51, %union.TString.115** %23, align 8, !tbaa !122
  %52 = getelementptr inbounds %struct.Proto.132* %19, i64 0, i32 22
  store i8 2, i8* %52, align 1, !tbaa !88
  %53 = call %struct.Table.119* bitcast (%struct.Table* (%struct.lua_State*)* @luaH_new to %struct.Table.119* (%struct.lua_State.126*)*)(%struct.lua_State.126* %32) #3
  %54 = getelementptr inbounds %struct.FuncState.266* %funcstate, i64 0, i32 1
  store %struct.Table.119* %53, %struct.Table.119** %54, align 8, !tbaa !102
  %55 = getelementptr inbounds %struct.lua_State.126* %32, i64 0, i32 4
  %56 = load %struct.lua_TValue.109** %55, align 8, !tbaa !12
  %57 = bitcast %struct.Table.119* %53 to %union.GCObject.127*
  %58 = getelementptr inbounds %struct.lua_TValue.109* %56, i64 0, i32 0, i32 0
  store %union.GCObject.127* %57, %union.GCObject.127** %58, align 8, !tbaa !25
  %59 = getelementptr inbounds %struct.lua_TValue.109* %56, i64 0, i32 1
  store i32 69, i32* %59, align 4, !tbaa !15
  %60 = load %struct.lua_TValue.109** %55, align 8, !tbaa !12
  %61 = getelementptr inbounds %struct.lua_TValue.109* %60, i64 1
  store %struct.lua_TValue.109* %61, %struct.lua_TValue.109** %55, align 8, !tbaa !12
  %62 = getelementptr inbounds %struct.lua_State.126* %32, i64 0, i32 8
  %63 = load %struct.lua_TValue.109** %62, align 8, !tbaa !11
  %64 = ptrtoint %struct.lua_TValue.109* %63 to i64
  %65 = ptrtoint %struct.lua_TValue.109* %61 to i64
  %66 = sub i64 %64, %65
  %67 = icmp slt i64 %66, 16
  br i1 %67, label %68, label %open_func.exit

; <label>:68                                      ; preds = %18
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.126*, i32)*)(%struct.lua_State.126* %32, i32 0) #3
  br label %open_func.exit

open_func.exit:                                   ; preds = %68, %18
  %69 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 5
  store i8 0, i8* %69, align 2, !tbaa !242
  %70 = load i8* %43, align 2, !tbaa !96
  %71 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 3
  store i8 %70, i8* %71, align 4, !tbaa !244
  %72 = load %struct.LexState.267** %36, align 8, !tbaa !85
  %73 = getelementptr inbounds %struct.LexState.267* %72, i64 0, i32 9
  %74 = load %struct.Dyndata.259** %73, align 8, !tbaa !234
  %75 = getelementptr inbounds %struct.Dyndata.259* %74, i64 0, i32 2, i32 1
  %76 = load i32* %75, align 4, !tbaa !235
  %77 = trunc i32 %76 to i16
  %78 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 1
  store i16 %77, i16* %78, align 8, !tbaa !245
  %79 = getelementptr inbounds %struct.Dyndata.259* %74, i64 0, i32 1, i32 1
  %80 = load i32* %79, align 4, !tbaa !236
  %81 = trunc i32 %80 to i16
  %82 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 2
  store i16 %81, i16* %82, align 2, !tbaa !246
  %83 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 4
  store i8 0, i8* %83, align 1, !tbaa !247
  %84 = load %struct.BlockCnt** %49, align 8, !tbaa !241
  %85 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 0
  store %struct.BlockCnt* %84, %struct.BlockCnt** %85, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i, %struct.BlockCnt** %49, align 8, !tbaa !241
  %86 = load %struct.Proto.132** %21, align 8, !tbaa !82
  %87 = getelementptr inbounds %struct.Proto.132* %86, i64 0, i32 21
  store i8 1, i8* %87, align 1, !tbaa !130
  %88 = getelementptr inbounds %struct.expdesc* %v.i, i64 0, i32 2
  store i32 -1, i32* %88, align 8, !tbaa !99
  %89 = getelementptr inbounds %struct.expdesc* %v.i, i64 0, i32 3
  store i32 -1, i32* %89, align 4, !tbaa !100
  %90 = getelementptr inbounds %struct.expdesc* %v.i, i64 0, i32 0
  store i32 7, i32* %90, align 8, !tbaa !92
  %91 = getelementptr inbounds %struct.expdesc* %v.i, i64 0, i32 1
  %92 = bitcast %union.anon.7* %91 to i32*
  store i32 0, i32* %92, align 8, !tbaa !1
  %93 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 11
  %94 = load %union.TString.115** %93, align 8, !tbaa !228
  %95 = call fastcc i32 @newupvalue(%struct.FuncState.266* %funcstate, %union.TString.115* %94, %struct.expdesc* %v.i) #3
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %lexstate) #3
  %96 = getelementptr inbounds %struct.LexState.267* %lexstate, i64 0, i32 3, i32 0
  br label %97

; <label>:97                                      ; preds = %99, %open_func.exit
  %98 = load i32* %96, align 8, !tbaa !220
  switch i32 %98, label %99 [
    i32 260, label %statlist.exit.i
    i32 261, label %statlist.exit.i
    i32 262, label %statlist.exit.i
    i32 286, label %statlist.exit.i
    i32 277, label %statlist.exit.i
  ]

; <label>:99                                      ; preds = %97
  %100 = icmp eq i32 %98, 274
  call fastcc void @statement(%struct.LexState.267* %lexstate) #3
  br i1 %100, label %statlist.exitthread-pre-split.i, label %97

statlist.exitthread-pre-split.i:                  ; preds = %99
  %.pr.i = load i32* %96, align 8, !tbaa !220
  br label %statlist.exit.i

statlist.exit.i:                                  ; preds = %statlist.exitthread-pre-split.i, %97, %97, %97, %97, %97
  %101 = phi i32 [ %.pr.i, %statlist.exitthread-pre-split.i ], [ %98, %97 ], [ %98, %97 ], [ %98, %97 ], [ %98, %97 ], [ %98, %97 ]
  %102 = icmp eq i32 %101, 286
  br i1 %102, label %mainfunc.exit, label %103

; <label>:103                                     ; preds = %statlist.exit.i
  call fastcc void @error_expected(%struct.LexState.267* %lexstate, i32 286) #13
  unreachable

mainfunc.exit:                                    ; preds = %statlist.exit.i
  call fastcc void @close_func(%struct.LexState.267* %lexstate) #3
  call void @llvm.lifetime.end(i64 16, i8* %29) #3
  call void @llvm.lifetime.end(i64 24, i8* %30) #3
  call void @llvm.lifetime.end(i64 72, i8* %2) #3
  call void @llvm.lifetime.end(i64 112, i8* %1) #3
  ret %union.Closure.129* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @newupvalue(%struct.FuncState.266* nocapture %fs, %union.TString.115* %name, %struct.expdesc* nocapture readonly %v) #0 {
  %1 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 0
  %2 = load %struct.Proto.132** %1, align 8, !tbaa !82
  %3 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 11
  %4 = load i32* %3, align 4, !tbaa !73
  %5 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 13
  %6 = load i8* %5, align 1, !tbaa !249
  %7 = zext i8 %6 to i32
  %8 = add nsw i32 %7, 1
  %9 = icmp ugt i32 %8, 255
  br i1 %9, label %10, label %checklimit.exit

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 3
  %12 = load %struct.LexState.267** %11, align 8, !tbaa !85
  %13 = getelementptr inbounds %struct.LexState.267* %12, i64 0, i32 6
  %14 = load %struct.lua_State.126** %13, align 8, !tbaa !89
  %15 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 17
  %16 = load i32* %15, align 4, !tbaa !123
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %10
  %19 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %14, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %16) #3
  br label %20

; <label>:20                                      ; preds = %18, %10
  %21 = phi i8* [ %19, %18 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %10 ]
  %22 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %14, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str28209, i64 0, i64 0), i32 255, i8* %21) #3
  %23 = load %struct.LexState.267** %11, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %23, i8* %22) #13
  unreachable

checklimit.exit:                                  ; preds = %0
  %24 = icmp slt i32 %7, %4
  br i1 %24, label %.preheader, label %25

; <label>:25                                      ; preds = %checklimit.exit
  %26 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 3
  %27 = load %struct.LexState.267** %26, align 8, !tbaa !85
  %28 = getelementptr inbounds %struct.LexState.267* %27, i64 0, i32 6
  %29 = load %struct.lua_State.126** %28, align 8, !tbaa !89
  %30 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 8
  %31 = load %struct.Upvaldesc.131** %30, align 8, !tbaa !76
  %32 = bitcast %struct.Upvaldesc.131* %31 to i8*
  %33 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %29, i8* %32, i32* %3, i64 16, i32 255, i8* getelementptr inbounds ([9 x i8]* @.str28209, i64 0, i64 0)) #3
  %34 = bitcast i8* %33 to %struct.Upvaldesc.131*
  store %struct.Upvaldesc.131* %34, %struct.Upvaldesc.131** %30, align 8, !tbaa !76
  %.pre = load i32* %3, align 4, !tbaa !73
  br label %.preheader

.preheader:                                       ; preds = %25, %checklimit.exit
  %35 = phi i32 [ %.pre, %25 ], [ %4, %checklimit.exit ]
  %36 = icmp slt i32 %4, %35
  %37 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 8
  %38 = load %struct.Upvaldesc.131** %37, align 8, !tbaa !76
  br i1 %36, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.preheader
  %39 = sext i32 %4 to i64
  br label %40

; <label>:40                                      ; preds = %40, %.lr.ph
  %indvars.iv = phi i64 [ %39, %.lr.ph ], [ %indvars.iv.next, %40 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %41 = getelementptr inbounds %struct.Upvaldesc.131* %38, i64 %indvars.iv, i32 0
  store %union.TString.115* null, %union.TString.115** %41, align 8, !tbaa !77
  %42 = trunc i64 %indvars.iv.next to i32
  %43 = icmp slt i32 %42, %35
  br i1 %43, label %40, label %._crit_edge

._crit_edge:                                      ; preds = %40, %.preheader
  %44 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  %45 = load i32* %44, align 4, !tbaa !92
  %46 = icmp eq i32 %45, 7
  %47 = zext i1 %46 to i8
  %48 = load i8* %5, align 1, !tbaa !249
  %49 = zext i8 %48 to i64
  %50 = getelementptr inbounds %struct.Upvaldesc.131* %38, i64 %49, i32 1
  store i8 %47, i8* %50, align 1, !tbaa !175
  %51 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %52 = bitcast %union.anon.7* %51 to i32*
  %53 = load i32* %52, align 4, !tbaa !1
  %54 = trunc i32 %53 to i8
  %55 = getelementptr inbounds %struct.Upvaldesc.131* %38, i64 %49, i32 2
  store i8 %54, i8* %55, align 1, !tbaa !176
  %56 = getelementptr inbounds %struct.Upvaldesc.131* %38, i64 %49, i32 0
  store %union.TString.115* %name, %union.TString.115** %56, align 8, !tbaa !77
  %57 = bitcast %union.TString.115* %name to %union.GCObject.127*
  %58 = getelementptr inbounds %union.TString.115* %name, i64 0, i32 0, i32 2
  %59 = load i8* %58, align 1, !tbaa !28
  %60 = and i8 %59, 3
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %73, label %62

; <label>:62                                      ; preds = %._crit_edge
  %63 = getelementptr inbounds %struct.Proto.132* %2, i64 0, i32 2
  %64 = load i8* %63, align 1, !tbaa !28
  %65 = and i8 %64, 4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %73, label %67

; <label>:67                                      ; preds = %62
  %68 = bitcast %struct.Proto.132* %2 to %union.GCObject.127*
  %69 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 3
  %70 = load %struct.LexState.267** %69, align 8, !tbaa !85
  %71 = getelementptr inbounds %struct.LexState.267* %70, i64 0, i32 6
  %72 = load %struct.lua_State.126** %71, align 8, !tbaa !89
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrier_ to void (%struct.lua_State.126*, %union.GCObject.127*, %union.GCObject.127*)*)(%struct.lua_State.126* %72, %union.GCObject.127* %68, %union.GCObject.127* %57) #3
  %.pre3 = load i8* %5, align 1, !tbaa !249
  br label %73

; <label>:73                                      ; preds = %67, %62, %._crit_edge
  %74 = phi i8 [ %48, %62 ], [ %48, %._crit_edge ], [ %.pre3, %67 ]
  %75 = add i8 %74, 1
  store i8 %75, i8* %5, align 1, !tbaa !249
  %76 = zext i8 %74 to i32
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @statement(%struct.LexState.267* %ls) #0 {
  %e.i39 = alloca %struct.expdesc, align 8
  %e.i38 = alloca %struct.expdesc, align 8
  %e.i37 = alloca %struct.expdesc, align 8
  %v.i34 = alloca %struct.LHS_assign, align 8
  %e.i26 = alloca %struct.expdesc, align 8
  %e.i = alloca %struct.expdesc, align 8
  %b.i12 = alloca %struct.expdesc, align 8
  %v.i = alloca %struct.expdesc, align 8
  %b.i = alloca %struct.expdesc, align 8
  %v.i.i8 = alloca %struct.expdesc, align 8
  %bl1.i = alloca %struct.BlockCnt, align 8
  %bl2.i = alloca %struct.BlockCnt, align 8
  %e.i.i = alloca %struct.expdesc, align 8
  %bl.i6 = alloca %struct.BlockCnt, align 8
  %bl.i5 = alloca %struct.BlockCnt, align 8
  %v.i.i = alloca %struct.expdesc, align 8
  %bl.i.i1 = alloca %struct.BlockCnt, align 8
  %bl.i = alloca %struct.BlockCnt, align 8
  %bl.i.i = alloca %struct.BlockCnt, align 8
  %escapelist.i = alloca i32, align 4
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !226
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %4 = load %struct.lua_State.126** %3, align 8, !tbaa !89
  %5 = getelementptr inbounds %struct.lua_State.126* %4, i64 0, i32 12
  %6 = load i16* %5, align 2, !tbaa !142
  %7 = add i16 %6, 1
  store i16 %7, i16* %5, align 2, !tbaa !142
  %8 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %9 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %10 = icmp ugt i16 %7, 200
  br i1 %10, label %11, label %enterlevel.exit

; <label>:11                                      ; preds = %0
  %12 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 3
  %13 = load %struct.LexState.267** %12, align 8, !tbaa !85
  %14 = getelementptr inbounds %struct.LexState.267* %13, i64 0, i32 6
  %15 = load %struct.lua_State.126** %14, align 8, !tbaa !89
  %16 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 0
  %17 = load %struct.Proto.132** %16, align 8, !tbaa !82
  %18 = getelementptr inbounds %struct.Proto.132* %17, i64 0, i32 17
  %19 = load i32* %18, align 4, !tbaa !123
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

; <label>:21                                      ; preds = %11
  %22 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %15, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %19) #3
  br label %23

; <label>:23                                      ; preds = %21, %11
  %24 = phi i8* [ %22, %21 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %11 ]
  %25 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %15, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str7188, i64 0, i64 0), i32 200, i8* %24) #3
  %26 = load %struct.LexState.267** %12, align 8, !tbaa !85
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %26, i8* %25) #13
  unreachable

enterlevel.exit:                                  ; preds = %0
  %27 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %28 = load i32* %27, align 4, !tbaa !220
  switch i32 %28, label %574 [
    i32 59, label %29
    i32 267, label %30
    i32 278, label %63
    i32 259, label %125
    i32 264, label %152
    i32 273, label %244
    i32 265, label %292
    i32 269, label %301
    i32 285, label %419
    i32 274, label %524
    i32 258, label %572
    i32 266, label %572
  ]

; <label>:29                                      ; preds = %enterlevel.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %labelstat.exit

; <label>:30                                      ; preds = %enterlevel.exit
  %31 = bitcast i32* %escapelist.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %31) #3
  store i32 -1, i32* %escapelist.i, align 4, !tbaa !1
  call fastcc void @test_then_block(%struct.LexState.267* %ls, i32* %escapelist.i) #3
  br label %32

; <label>:32                                      ; preds = %34, %30
  %33 = load i32* %27, align 4, !tbaa !220
  switch i32 %33, label %ifstat.exit [
    i32 261, label %34
    i32 260, label %35
  ]

; <label>:34                                      ; preds = %32
  call fastcc void @test_then_block(%struct.LexState.267* %ls, i32* %escapelist.i) #3
  br label %32

; <label>:35                                      ; preds = %32
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %36 = bitcast %struct.BlockCnt* %bl.i.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %36) #3
  %37 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %38 = getelementptr inbounds %struct.BlockCnt* %bl.i.i, i64 0, i32 5
  store i8 0, i8* %38, align 2, !tbaa !242
  %39 = getelementptr inbounds %struct.FuncState.266* %37, i64 0, i32 12
  %40 = load i8* %39, align 1, !tbaa !96
  %41 = getelementptr inbounds %struct.BlockCnt* %bl.i.i, i64 0, i32 3
  store i8 %40, i8* %41, align 4, !tbaa !244
  %42 = getelementptr inbounds %struct.FuncState.266* %37, i64 0, i32 3
  %43 = load %struct.LexState.267** %42, align 8, !tbaa !85
  %44 = getelementptr inbounds %struct.LexState.267* %43, i64 0, i32 9
  %45 = load %struct.Dyndata.259** %44, align 8, !tbaa !234
  %46 = getelementptr inbounds %struct.Dyndata.259* %45, i64 0, i32 2, i32 1
  %47 = load i32* %46, align 4, !tbaa !235
  %48 = trunc i32 %47 to i16
  %49 = getelementptr inbounds %struct.BlockCnt* %bl.i.i, i64 0, i32 1
  store i16 %48, i16* %49, align 8, !tbaa !245
  %50 = getelementptr inbounds %struct.Dyndata.259* %45, i64 0, i32 1, i32 1
  %51 = load i32* %50, align 4, !tbaa !236
  %52 = trunc i32 %51 to i16
  %53 = getelementptr inbounds %struct.BlockCnt* %bl.i.i, i64 0, i32 2
  store i16 %52, i16* %53, align 2, !tbaa !246
  %54 = getelementptr inbounds %struct.BlockCnt* %bl.i.i, i64 0, i32 4
  store i8 0, i8* %54, align 1, !tbaa !247
  %55 = getelementptr inbounds %struct.FuncState.266* %37, i64 0, i32 4
  %56 = load %struct.BlockCnt** %55, align 8, !tbaa !241
  %57 = getelementptr inbounds %struct.BlockCnt* %bl.i.i, i64 0, i32 0
  store %struct.BlockCnt* %56, %struct.BlockCnt** %57, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i.i, %struct.BlockCnt** %55, align 8, !tbaa !241
  br label %58

; <label>:58                                      ; preds = %60, %35
  %59 = load i32* %27, align 4, !tbaa !220
  switch i32 %59, label %60 [
    i32 260, label %block.exit.i
    i32 261, label %block.exit.i
    i32 262, label %block.exit.i
    i32 286, label %block.exit.i
    i32 277, label %block.exit.i
  ]

; <label>:60                                      ; preds = %58
  %61 = icmp eq i32 %59, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %61, label %block.exit.i, label %58

block.exit.i:                                     ; preds = %60, %58, %58, %58, %58, %58
  call fastcc void @leaveblock(%struct.FuncState.266* %37) #3
  call void @llvm.lifetime.end(i64 16, i8* %36) #3
  br label %ifstat.exit

ifstat.exit:                                      ; preds = %block.exit.i, %32
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 262, i32 267, i32 %2) #3
  %62 = load i32* %escapelist.i, align 4, !tbaa !1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %9, i32 %62) #3
  call void @llvm.lifetime.end(i64 4, i8* %31) #3
  br label %labelstat.exit

; <label>:63                                      ; preds = %enterlevel.exit
  %64 = bitcast %struct.BlockCnt* %bl.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %64) #3
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %65 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_getlabel to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %9) #3
  %66 = bitcast %struct.expdesc* %v.i.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %66) #3
  %67 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v.i.i, i32 0) #3
  %68 = getelementptr inbounds %struct.expdesc* %v.i.i, i64 0, i32 0
  %69 = load i32* %68, align 8, !tbaa !92
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %cond.exit.i

; <label>:71                                      ; preds = %63
  store i32 3, i32* %68, align 8, !tbaa !92
  br label %cond.exit.i

cond.exit.i:                                      ; preds = %71, %63
  %72 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiftrue to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %72, %struct.expdesc* %v.i.i) #3
  %73 = getelementptr inbounds %struct.expdesc* %v.i.i, i64 0, i32 3
  %74 = load i32* %73, align 4, !tbaa !100
  call void @llvm.lifetime.end(i64 24, i8* %66) #3
  %75 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 5
  store i8 1, i8* %75, align 2, !tbaa !242
  %76 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 12
  %77 = load i8* %76, align 1, !tbaa !96
  %78 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 3
  store i8 %77, i8* %78, align 4, !tbaa !244
  %79 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 3
  %80 = load %struct.LexState.267** %79, align 8, !tbaa !85
  %81 = getelementptr inbounds %struct.LexState.267* %80, i64 0, i32 9
  %82 = load %struct.Dyndata.259** %81, align 8, !tbaa !234
  %83 = getelementptr inbounds %struct.Dyndata.259* %82, i64 0, i32 2, i32 1
  %84 = load i32* %83, align 4, !tbaa !235
  %85 = trunc i32 %84 to i16
  %86 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 1
  store i16 %85, i16* %86, align 8, !tbaa !245
  %87 = getelementptr inbounds %struct.Dyndata.259* %82, i64 0, i32 1, i32 1
  %88 = load i32* %87, align 4, !tbaa !236
  %89 = trunc i32 %88 to i16
  %90 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 2
  store i16 %89, i16* %90, align 2, !tbaa !246
  %91 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 4
  store i8 0, i8* %91, align 1, !tbaa !247
  %92 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 4
  %93 = load %struct.BlockCnt** %92, align 8, !tbaa !241
  %94 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 0
  store %struct.BlockCnt* %93, %struct.BlockCnt** %94, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i, %struct.BlockCnt** %92, align 8, !tbaa !241
  %95 = load i32* %27, align 4, !tbaa !220
  %96 = icmp eq i32 %95, 259
  br i1 %96, label %checknext.exit.i, label %97

; <label>:97                                      ; preds = %cond.exit.i
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 259) #13
  unreachable

checknext.exit.i:                                 ; preds = %cond.exit.i
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %98 = bitcast %struct.BlockCnt* %bl.i.i1 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %98) #3
  %99 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %100 = getelementptr inbounds %struct.BlockCnt* %bl.i.i1, i64 0, i32 5
  store i8 0, i8* %100, align 2, !tbaa !242
  %101 = getelementptr inbounds %struct.FuncState.266* %99, i64 0, i32 12
  %102 = load i8* %101, align 1, !tbaa !96
  %103 = getelementptr inbounds %struct.BlockCnt* %bl.i.i1, i64 0, i32 3
  store i8 %102, i8* %103, align 4, !tbaa !244
  %104 = getelementptr inbounds %struct.FuncState.266* %99, i64 0, i32 3
  %105 = load %struct.LexState.267** %104, align 8, !tbaa !85
  %106 = getelementptr inbounds %struct.LexState.267* %105, i64 0, i32 9
  %107 = load %struct.Dyndata.259** %106, align 8, !tbaa !234
  %108 = getelementptr inbounds %struct.Dyndata.259* %107, i64 0, i32 2, i32 1
  %109 = load i32* %108, align 4, !tbaa !235
  %110 = trunc i32 %109 to i16
  %111 = getelementptr inbounds %struct.BlockCnt* %bl.i.i1, i64 0, i32 1
  store i16 %110, i16* %111, align 8, !tbaa !245
  %112 = getelementptr inbounds %struct.Dyndata.259* %107, i64 0, i32 1, i32 1
  %113 = load i32* %112, align 4, !tbaa !236
  %114 = trunc i32 %113 to i16
  %115 = getelementptr inbounds %struct.BlockCnt* %bl.i.i1, i64 0, i32 2
  store i16 %114, i16* %115, align 2, !tbaa !246
  %116 = getelementptr inbounds %struct.BlockCnt* %bl.i.i1, i64 0, i32 4
  store i8 0, i8* %116, align 1, !tbaa !247
  %117 = getelementptr inbounds %struct.FuncState.266* %99, i64 0, i32 4
  %118 = load %struct.BlockCnt** %117, align 8, !tbaa !241
  %119 = getelementptr inbounds %struct.BlockCnt* %bl.i.i1, i64 0, i32 0
  store %struct.BlockCnt* %118, %struct.BlockCnt** %119, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i.i1, %struct.BlockCnt** %117, align 8, !tbaa !241
  br label %120

; <label>:120                                     ; preds = %122, %checknext.exit.i
  %121 = load i32* %27, align 4, !tbaa !220
  switch i32 %121, label %122 [
    i32 260, label %whilestat.exit
    i32 261, label %whilestat.exit
    i32 262, label %whilestat.exit
    i32 286, label %whilestat.exit
    i32 277, label %whilestat.exit
  ]

; <label>:122                                     ; preds = %120
  %123 = icmp eq i32 %121, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %123, label %whilestat.exit, label %120

whilestat.exit:                                   ; preds = %122, %120, %120, %120, %120, %120
  call fastcc void @leaveblock(%struct.FuncState.266* %99) #3
  call void @llvm.lifetime.end(i64 16, i8* %98) #3
  %124 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %9) #3
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %9, i32 %124, i32 %65) #3
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 262, i32 278, i32 %2) #3
  call fastcc void @leaveblock(%struct.FuncState.266* %9) #3
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %9, i32 %74) #3
  call void @llvm.lifetime.end(i64 16, i8* %64) #3
  br label %labelstat.exit

; <label>:125                                     ; preds = %enterlevel.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %126 = bitcast %struct.BlockCnt* %bl.i5 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %126) #3
  %127 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %128 = getelementptr inbounds %struct.BlockCnt* %bl.i5, i64 0, i32 5
  store i8 0, i8* %128, align 2, !tbaa !242
  %129 = getelementptr inbounds %struct.FuncState.266* %127, i64 0, i32 12
  %130 = load i8* %129, align 1, !tbaa !96
  %131 = getelementptr inbounds %struct.BlockCnt* %bl.i5, i64 0, i32 3
  store i8 %130, i8* %131, align 4, !tbaa !244
  %132 = getelementptr inbounds %struct.FuncState.266* %127, i64 0, i32 3
  %133 = load %struct.LexState.267** %132, align 8, !tbaa !85
  %134 = getelementptr inbounds %struct.LexState.267* %133, i64 0, i32 9
  %135 = load %struct.Dyndata.259** %134, align 8, !tbaa !234
  %136 = getelementptr inbounds %struct.Dyndata.259* %135, i64 0, i32 2, i32 1
  %137 = load i32* %136, align 4, !tbaa !235
  %138 = trunc i32 %137 to i16
  %139 = getelementptr inbounds %struct.BlockCnt* %bl.i5, i64 0, i32 1
  store i16 %138, i16* %139, align 8, !tbaa !245
  %140 = getelementptr inbounds %struct.Dyndata.259* %135, i64 0, i32 1, i32 1
  %141 = load i32* %140, align 4, !tbaa !236
  %142 = trunc i32 %141 to i16
  %143 = getelementptr inbounds %struct.BlockCnt* %bl.i5, i64 0, i32 2
  store i16 %142, i16* %143, align 2, !tbaa !246
  %144 = getelementptr inbounds %struct.BlockCnt* %bl.i5, i64 0, i32 4
  store i8 0, i8* %144, align 1, !tbaa !247
  %145 = getelementptr inbounds %struct.FuncState.266* %127, i64 0, i32 4
  %146 = load %struct.BlockCnt** %145, align 8, !tbaa !241
  %147 = getelementptr inbounds %struct.BlockCnt* %bl.i5, i64 0, i32 0
  store %struct.BlockCnt* %146, %struct.BlockCnt** %147, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i5, %struct.BlockCnt** %145, align 8, !tbaa !241
  br label %148

; <label>:148                                     ; preds = %150, %125
  %149 = load i32* %27, align 4, !tbaa !220
  switch i32 %149, label %150 [
    i32 260, label %block.exit
    i32 261, label %block.exit
    i32 262, label %block.exit
    i32 286, label %block.exit
    i32 277, label %block.exit
  ]

; <label>:150                                     ; preds = %148
  %151 = icmp eq i32 %149, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %151, label %block.exit, label %148

block.exit:                                       ; preds = %150, %148, %148, %148, %148, %148
  call fastcc void @leaveblock(%struct.FuncState.266* %127) #3
  call void @llvm.lifetime.end(i64 16, i8* %126) #3
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 262, i32 259, i32 %2)
  br label %labelstat.exit

; <label>:152                                     ; preds = %enterlevel.exit
  %153 = bitcast %struct.BlockCnt* %bl.i6 to i8*
  call void @llvm.lifetime.start(i64 16, i8* %153) #3
  %154 = getelementptr inbounds %struct.BlockCnt* %bl.i6, i64 0, i32 5
  store i8 1, i8* %154, align 2, !tbaa !242
  %155 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 12
  %156 = load i8* %155, align 1, !tbaa !96
  %157 = getelementptr inbounds %struct.BlockCnt* %bl.i6, i64 0, i32 3
  store i8 %156, i8* %157, align 4, !tbaa !244
  %158 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 3
  %159 = load %struct.LexState.267** %158, align 8, !tbaa !85
  %160 = getelementptr inbounds %struct.LexState.267* %159, i64 0, i32 9
  %161 = load %struct.Dyndata.259** %160, align 8, !tbaa !234
  %162 = getelementptr inbounds %struct.Dyndata.259* %161, i64 0, i32 2, i32 1
  %163 = load i32* %162, align 4, !tbaa !235
  %164 = trunc i32 %163 to i16
  %165 = getelementptr inbounds %struct.BlockCnt* %bl.i6, i64 0, i32 1
  store i16 %164, i16* %165, align 8, !tbaa !245
  %166 = getelementptr inbounds %struct.Dyndata.259* %161, i64 0, i32 1, i32 1
  %167 = load i32* %166, align 4, !tbaa !236
  %168 = trunc i32 %167 to i16
  %169 = getelementptr inbounds %struct.BlockCnt* %bl.i6, i64 0, i32 2
  store i16 %168, i16* %169, align 2, !tbaa !246
  %170 = getelementptr inbounds %struct.BlockCnt* %bl.i6, i64 0, i32 4
  store i8 0, i8* %170, align 1, !tbaa !247
  %171 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 4
  %172 = load %struct.BlockCnt** %171, align 8, !tbaa !241
  %173 = getelementptr inbounds %struct.BlockCnt* %bl.i6, i64 0, i32 0
  store %struct.BlockCnt* %172, %struct.BlockCnt** %173, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i6, %struct.BlockCnt** %171, align 8, !tbaa !241
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %174 = load i32* %27, align 4, !tbaa !220
  %175 = icmp eq i32 %174, 288
  br i1 %175, label %str_checkname.exit.i, label %176

; <label>:176                                     ; preds = %152
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit.i:                             ; preds = %152
  %177 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %178 = bitcast %union.SemInfo* %177 to %union.TString.115**
  %179 = load %union.TString.115** %178, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %180 = load i32* %27, align 4, !tbaa !220
  switch i32 %180, label %243 [
    i32 61, label %181
    i32 44, label %212
    i32 268, label %212
  ]

; <label>:181                                     ; preds = %str_checkname.exit.i
  %182 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %183 = getelementptr inbounds %struct.FuncState.266* %182, i64 0, i32 14
  %184 = load i8* %183, align 1, !tbaa !87
  %185 = zext i8 %184 to i32
  %186 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([12 x i8]* @.str24205, i64 0, i64 0), i64 11) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %186) #3
  %187 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([12 x i8]* @.str25206, i64 0, i64 0), i64 11) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %187) #3
  %188 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([11 x i8]* @.str26207, i64 0, i64 0), i64 10) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %188) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %179) #3
  %189 = load i32* %27, align 4, !tbaa !220
  %190 = icmp eq i32 %189, 61
  br i1 %190, label %checknext.exit.i.i, label %191

; <label>:191                                     ; preds = %181
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 61) #13
  unreachable

checknext.exit.i.i:                               ; preds = %181
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %192 = bitcast %struct.expdesc* %e.i37 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %192) #3
  %193 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i37, i32 0) #3
  %194 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %194, %struct.expdesc* %e.i37) #3
  call void @llvm.lifetime.end(i64 24, i8* %192) #3
  %195 = load i32* %27, align 4, !tbaa !220
  %196 = icmp eq i32 %195, 44
  br i1 %196, label %checknext.exit1.i.i, label %197

; <label>:197                                     ; preds = %checknext.exit.i.i
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 44) #13
  unreachable

checknext.exit1.i.i:                              ; preds = %checknext.exit.i.i
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %198 = bitcast %struct.expdesc* %e.i38 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %198) #3
  %199 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i38, i32 0) #3
  %200 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %200, %struct.expdesc* %e.i38) #3
  call void @llvm.lifetime.end(i64 24, i8* %198) #3
  %201 = load i32* %27, align 4, !tbaa !220
  %202 = icmp eq i32 %201, 44
  br i1 %202, label %203, label %207

; <label>:203                                     ; preds = %checknext.exit1.i.i
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %204 = bitcast %struct.expdesc* %e.i39 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %204) #3
  %205 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i39, i32 0) #3
  %206 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %206, %struct.expdesc* %e.i39) #3
  call void @llvm.lifetime.end(i64 24, i8* %204) #3
  br label %fornum.exit.i

; <label>:207                                     ; preds = %checknext.exit1.i.i
  %208 = load i8* %183, align 1, !tbaa !87
  %209 = zext i8 %208 to i32
  %210 = call i32 bitcast (i32 (%struct.FuncState*, double)* @luaK_numberK to i32 (%struct.FuncState.266*, double)*)(%struct.FuncState.266* %182, double 1.000000e+00) #3
  %211 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32)* @luaK_codek to i32 (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %182, i32 %209, i32 %210) #3
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %182, i32 1) #3
  br label %fornum.exit.i

fornum.exit.i:                                    ; preds = %207, %203
  call fastcc void @forbody(%struct.LexState.267* %ls, i32 %185, i32 %2, i32 1, i32 1) #3
  br label %forstat.exit

; <label>:212                                     ; preds = %str_checkname.exit.i, %str_checkname.exit.i
  %213 = bitcast %struct.expdesc* %e.i.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %213) #3
  %214 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %215 = getelementptr inbounds %struct.FuncState.266* %214, i64 0, i32 14
  %216 = load i8* %215, align 1, !tbaa !87
  %217 = zext i8 %216 to i32
  %218 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([16 x i8]* @.str21202, i64 0, i64 0), i64 15) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %218) #3
  %219 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([12 x i8]* @.str22203, i64 0, i64 0), i64 11) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %219) #3
  %220 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([14 x i8]* @.str23204, i64 0, i64 0), i64 13) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %220) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %179) #3
  %221 = load i32* %27, align 4, !tbaa !220
  %222 = icmp eq i32 %221, 44
  br i1 %222, label %.lr.ph51, label %230

.lr.ph51:                                         ; preds = %str_checkname.exit.i.i, %212
  %nvars.0.i.i50 = phi i32 [ %227, %str_checkname.exit.i.i ], [ 4, %212 ]
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %223 = load i32* %27, align 4, !tbaa !220
  %224 = icmp eq i32 %223, 288
  br i1 %224, label %str_checkname.exit.i.i, label %225

; <label>:225                                     ; preds = %.lr.ph51
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit.i.i:                           ; preds = %.lr.ph51
  %226 = load %union.TString.115** %178, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %226) #3
  %227 = add nsw i32 %nvars.0.i.i50, 1
  %228 = load i32* %27, align 4, !tbaa !220
  %229 = icmp eq i32 %228, 44
  br i1 %229, label %.lr.ph51, label %._crit_edge

._crit_edge:                                      ; preds = %str_checkname.exit.i.i
  %phitmp67 = add i32 %nvars.0.i.i50, -2
  br label %230

; <label>:230                                     ; preds = %._crit_edge, %212
  %231 = phi i32 [ %228, %._crit_edge ], [ %221, %212 ]
  %nvars.0.i.i.lcssa = phi i32 [ %phitmp67, %._crit_edge ], [ 1, %212 ]
  %232 = icmp eq i32 %231, 268
  br i1 %232, label %forlist.exit.i, label %233

; <label>:233                                     ; preds = %230
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 268) #13
  unreachable

forlist.exit.i:                                   ; preds = %230
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %234 = load i32* %1, align 4, !tbaa !226
  %235 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i.i, i32 0) #3
  %236 = load i32* %27, align 4, !tbaa !220
  %237 = icmp eq i32 %236, 44
  br i1 %237, label %.lr.ph, label %explist.exit

.lr.ph:                                           ; preds = %.lr.ph, %forlist.exit.i
  %n.0.i48 = phi i32 [ %240, %.lr.ph ], [ 1, %forlist.exit.i ]
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %238 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %238, %struct.expdesc* %e.i.i) #3
  %239 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i.i, i32 0) #3
  %240 = add nsw i32 %n.0.i48, 1
  %241 = load i32* %27, align 4, !tbaa !220
  %242 = icmp eq i32 %241, 44
  br i1 %242, label %.lr.ph, label %explist.exit

explist.exit:                                     ; preds = %.lr.ph, %forlist.exit.i
  %n.0.i.lcssa = phi i32 [ 1, %forlist.exit.i ], [ %240, %.lr.ph ]
  call fastcc void @adjust_assign(%struct.LexState.267* %ls, i32 3, i32 %n.0.i.lcssa, %struct.expdesc* %e.i.i) #3
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_checkstack to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %214, i32 3) #3
  call fastcc void @forbody(%struct.LexState.267* %ls, i32 %217, i32 %234, i32 %nvars.0.i.i.lcssa, i32 0) #3
  call void @llvm.lifetime.end(i64 24, i8* %213) #3
  br label %forstat.exit

; <label>:243                                     ; preds = %str_checkname.exit.i
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([21 x i8]* @.str20201, i64 0, i64 0)) #13
  unreachable

forstat.exit:                                     ; preds = %explist.exit, %fornum.exit.i
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 262, i32 264, i32 %2) #3
  call fastcc void @leaveblock(%struct.FuncState.266* %9) #3
  call void @llvm.lifetime.end(i64 16, i8* %153) #3
  br label %labelstat.exit

; <label>:244                                     ; preds = %enterlevel.exit
  %245 = bitcast %struct.BlockCnt* %bl1.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %245) #3
  %246 = bitcast %struct.BlockCnt* %bl2.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %246) #3
  %247 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_getlabel to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %9) #3
  %248 = getelementptr inbounds %struct.BlockCnt* %bl1.i, i64 0, i32 5
  store i8 1, i8* %248, align 2, !tbaa !242
  %249 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 12
  %250 = load i8* %249, align 1, !tbaa !96
  %251 = getelementptr inbounds %struct.BlockCnt* %bl1.i, i64 0, i32 3
  store i8 %250, i8* %251, align 4, !tbaa !244
  %252 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 3
  %253 = load %struct.LexState.267** %252, align 8, !tbaa !85
  %254 = getelementptr inbounds %struct.LexState.267* %253, i64 0, i32 9
  %255 = load %struct.Dyndata.259** %254, align 8, !tbaa !234
  %256 = getelementptr inbounds %struct.Dyndata.259* %255, i64 0, i32 2, i32 1
  %257 = load i32* %256, align 4, !tbaa !235
  %258 = trunc i32 %257 to i16
  %259 = getelementptr inbounds %struct.BlockCnt* %bl1.i, i64 0, i32 1
  store i16 %258, i16* %259, align 8, !tbaa !245
  %260 = getelementptr inbounds %struct.Dyndata.259* %255, i64 0, i32 1, i32 1
  %261 = load i32* %260, align 4, !tbaa !236
  %262 = trunc i32 %261 to i16
  %263 = getelementptr inbounds %struct.BlockCnt* %bl1.i, i64 0, i32 2
  store i16 %262, i16* %263, align 2, !tbaa !246
  %264 = getelementptr inbounds %struct.BlockCnt* %bl1.i, i64 0, i32 4
  store i8 0, i8* %264, align 1, !tbaa !247
  %265 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 4
  %266 = load %struct.BlockCnt** %265, align 8, !tbaa !241
  %267 = getelementptr inbounds %struct.BlockCnt* %bl1.i, i64 0, i32 0
  store %struct.BlockCnt* %266, %struct.BlockCnt** %267, align 8, !tbaa !248
  %268 = getelementptr inbounds %struct.BlockCnt* %bl2.i, i64 0, i32 5
  store i8 0, i8* %268, align 2, !tbaa !242
  %269 = getelementptr inbounds %struct.BlockCnt* %bl2.i, i64 0, i32 3
  store i8 %250, i8* %269, align 4, !tbaa !244
  %270 = getelementptr inbounds %struct.BlockCnt* %bl2.i, i64 0, i32 1
  store i16 %258, i16* %270, align 8, !tbaa !245
  %271 = getelementptr inbounds %struct.BlockCnt* %bl2.i, i64 0, i32 2
  store i16 %262, i16* %271, align 2, !tbaa !246
  %272 = getelementptr inbounds %struct.BlockCnt* %bl2.i, i64 0, i32 4
  store i8 0, i8* %272, align 1, !tbaa !247
  %273 = getelementptr inbounds %struct.BlockCnt* %bl2.i, i64 0, i32 0
  store %struct.BlockCnt* %bl1.i, %struct.BlockCnt** %273, align 8, !tbaa !248
  store %struct.BlockCnt* %bl2.i, %struct.BlockCnt** %265, align 8, !tbaa !241
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %274

; <label>:274                                     ; preds = %276, %244
  %275 = load i32* %27, align 4, !tbaa !220
  switch i32 %275, label %276 [
    i32 260, label %statlist.exit.i
    i32 261, label %statlist.exit.i
    i32 262, label %statlist.exit.i
    i32 286, label %statlist.exit.i
    i32 277, label %statlist.exit.i
  ]

; <label>:276                                     ; preds = %274
  %277 = icmp eq i32 %275, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %277, label %statlist.exit.i, label %274

statlist.exit.i:                                  ; preds = %276, %274, %274, %274, %274, %274
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 277, i32 273, i32 %2) #3
  %278 = bitcast %struct.expdesc* %v.i.i8 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %278) #3
  %279 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v.i.i8, i32 0) #3
  %280 = getelementptr inbounds %struct.expdesc* %v.i.i8, i64 0, i32 0
  %281 = load i32* %280, align 8, !tbaa !92
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %283, label %cond.exit.i11

; <label>:283                                     ; preds = %statlist.exit.i
  store i32 3, i32* %280, align 8, !tbaa !92
  br label %cond.exit.i11

cond.exit.i11:                                    ; preds = %283, %statlist.exit.i
  %284 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiftrue to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %284, %struct.expdesc* %v.i.i8) #3
  %285 = getelementptr inbounds %struct.expdesc* %v.i.i8, i64 0, i32 3
  %286 = load i32* %285, align 4, !tbaa !100
  call void @llvm.lifetime.end(i64 24, i8* %278) #3
  %287 = load i8* %272, align 1, !tbaa !247
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %repeatstat.exit, label %289

; <label>:289                                     ; preds = %cond.exit.i11
  %290 = load i8* %269, align 4, !tbaa !244
  %291 = zext i8 %290 to i32
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchclose to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %9, i32 %286, i32 %291) #3
  br label %repeatstat.exit

repeatstat.exit:                                  ; preds = %289, %cond.exit.i11
  call fastcc void @leaveblock(%struct.FuncState.266* %9) #3
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %9, i32 %286, i32 %247) #3
  call fastcc void @leaveblock(%struct.FuncState.266* %9) #3
  call void @llvm.lifetime.end(i64 16, i8* %245) #3
  call void @llvm.lifetime.end(i64 16, i8* %246) #3
  br label %labelstat.exit

; <label>:292                                     ; preds = %enterlevel.exit
  %293 = bitcast %struct.expdesc* %v.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %293) #3
  %294 = bitcast %struct.expdesc* %b.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %294) #3
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  call fastcc void @singlevar(%struct.LexState.267* %ls, %struct.expdesc* %v.i) #3
  br label %295

; <label>:295                                     ; preds = %297, %292
  %296 = load i32* %27, align 4, !tbaa !220
  switch i32 %296, label %funcstat.exit [
    i32 46, label %297
    i32 58, label %298
  ]

; <label>:297                                     ; preds = %295
  call fastcc void @fieldsel(%struct.LexState.267* %ls, %struct.expdesc* %v.i) #3
  br label %295

; <label>:298                                     ; preds = %295
  call fastcc void @fieldsel(%struct.LexState.267* %ls, %struct.expdesc* %v.i) #3
  br label %funcstat.exit

funcstat.exit:                                    ; preds = %298, %295
  %ismethod.0.i.i = phi i32 [ 1, %298 ], [ 0, %295 ]
  call fastcc void @body(%struct.LexState.267* %ls, %struct.expdesc* %b.i, i32 %ismethod.0.i.i, i32 %2) #3
  %299 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %299, %struct.expdesc* %v.i, %struct.expdesc* %b.i) #3
  %300 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %300, i32 %2) #3
  call void @llvm.lifetime.end(i64 24, i8* %293) #3
  call void @llvm.lifetime.end(i64 24, i8* %294) #3
  br label %labelstat.exit

; <label>:301                                     ; preds = %enterlevel.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %302 = load i32* %27, align 4, !tbaa !220
  %303 = icmp eq i32 %302, 265
  br i1 %303, label %304, label %365

; <label>:304                                     ; preds = %301
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %305 = bitcast %struct.expdesc* %b.i12 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %305) #3
  %306 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %307 = load i32* %27, align 4, !tbaa !220
  %308 = icmp eq i32 %307, 288
  br i1 %308, label %str_checkname.exit.i13, label %309

; <label>:309                                     ; preds = %304
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit.i13:                           ; preds = %304
  %310 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %311 = bitcast %union.SemInfo* %310 to %union.TString.115**
  %312 = load %union.TString.115** %311, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %312) #3
  %313 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %314 = getelementptr inbounds %struct.FuncState.266* %313, i64 0, i32 12
  %315 = load i8* %314, align 1, !tbaa !96
  %316 = zext i8 %315 to i32
  %317 = add nsw i32 %316, 1
  %318 = trunc i32 %317 to i8
  store i8 %318, i8* %314, align 1, !tbaa !96
  %319 = getelementptr inbounds %struct.FuncState.266* %313, i64 0, i32 5
  %320 = load i32* %319, align 4, !tbaa !79
  %321 = and i32 %317, 255
  %322 = getelementptr inbounds %struct.FuncState.266* %313, i64 0, i32 10
  %323 = load i32* %322, align 4, !tbaa !240
  %324 = getelementptr inbounds %struct.FuncState.266* %313, i64 0, i32 3
  %325 = load %struct.LexState.267** %324, align 8, !tbaa !85
  %326 = getelementptr inbounds %struct.LexState.267* %325, i64 0, i32 9
  %327 = load %struct.Dyndata.259** %326, align 8, !tbaa !234
  %328 = getelementptr inbounds %struct.Dyndata.259* %327, i64 0, i32 0, i32 0
  %329 = load %struct.Vardesc** %328, align 8, !tbaa !250
  %330 = getelementptr inbounds %struct.FuncState.266* %313, i64 0, i32 0
  %331 = load %struct.Proto.132** %330, align 8, !tbaa !82
  %332 = getelementptr inbounds %struct.Proto.132* %331, i64 0, i32 7
  %333 = load %struct.LocVar.130** %332, align 8, !tbaa !178
  %334 = add i32 %321, %323
  %335 = add i32 %334, -1
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.Vardesc* %329, i64 %336, i32 0
  %338 = load i16* %337, align 2, !tbaa !251
  %339 = sext i16 %338 to i64
  %340 = getelementptr inbounds %struct.LocVar.130* %333, i64 %339, i32 1
  store i32 %320, i32* %340, align 4, !tbaa !181
  %341 = load i32* %1, align 4, !tbaa !226
  call fastcc void @body(%struct.LexState.267* %ls, %struct.expdesc* %b.i12, i32 0, i32 %341) #3
  %342 = getelementptr inbounds %struct.FuncState.266* %306, i64 0, i32 5
  %343 = load i32* %342, align 4, !tbaa !79
  %344 = getelementptr inbounds %struct.expdesc* %b.i12, i64 0, i32 1
  %345 = bitcast %union.anon.7* %344 to i32*
  %346 = load i32* %345, align 8, !tbaa !1
  %347 = getelementptr inbounds %struct.FuncState.266* %306, i64 0, i32 10
  %348 = load i32* %347, align 4, !tbaa !240
  %349 = add nsw i32 %348, %346
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds %struct.FuncState.266* %306, i64 0, i32 3
  %352 = load %struct.LexState.267** %351, align 8, !tbaa !85
  %353 = getelementptr inbounds %struct.LexState.267* %352, i64 0, i32 9
  %354 = load %struct.Dyndata.259** %353, align 8, !tbaa !234
  %355 = getelementptr inbounds %struct.Dyndata.259* %354, i64 0, i32 0, i32 0
  %356 = load %struct.Vardesc** %355, align 8, !tbaa !250
  %357 = getelementptr inbounds %struct.Vardesc* %356, i64 %350, i32 0
  %358 = load i16* %357, align 2, !tbaa !251
  %359 = sext i16 %358 to i64
  %360 = getelementptr inbounds %struct.FuncState.266* %306, i64 0, i32 0
  %361 = load %struct.Proto.132** %360, align 8, !tbaa !82
  %362 = getelementptr inbounds %struct.Proto.132* %361, i64 0, i32 7
  %363 = load %struct.LocVar.130** %362, align 8, !tbaa !178
  %364 = getelementptr inbounds %struct.LocVar.130* %363, i64 %359, i32 1
  store i32 %343, i32* %364, align 4, !tbaa !181
  call void @llvm.lifetime.end(i64 24, i8* %305) #3
  br label %labelstat.exit

; <label>:365                                     ; preds = %301
  %366 = bitcast %struct.expdesc* %e.i to i8*
  call void @llvm.lifetime.start(i64 24, i8* %366) #3
  %367 = icmp eq i32 %302, 288
  br i1 %367, label %str_checkname.exit.i14.lr.ph, label %._crit_edge59

str_checkname.exit.i14.lr.ph:                     ; preds = %365
  %368 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %369 = bitcast %union.SemInfo* %368 to %union.TString.115**
  br label %str_checkname.exit.i14

._crit_edge59:                                    ; preds = %testnext.exit.i16, %365
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit.i14:                           ; preds = %testnext.exit.i16, %str_checkname.exit.i14.lr.ph
  %nvars.0.i58 = phi i32 [ 1, %str_checkname.exit.i14.lr.ph ], [ %phitmp, %testnext.exit.i16 ]
  %370 = load %union.TString.115** %369, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %370) #3
  %371 = load i32* %27, align 4, !tbaa !220
  switch i32 %371, label %383 [
    i32 44, label %testnext.exit.i16
    i32 61, label %374
  ]

testnext.exit.i16:                                ; preds = %str_checkname.exit.i14
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %phitmp = add i32 %nvars.0.i58, 1
  %372 = load i32* %27, align 4, !tbaa !220
  %373 = icmp eq i32 %372, 288
  br i1 %373, label %str_checkname.exit.i14, label %._crit_edge59

; <label>:374                                     ; preds = %str_checkname.exit.i14
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %375 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i, i32 0) #3
  %376 = load i32* %27, align 4, !tbaa !220
  %377 = icmp eq i32 %376, 44
  br i1 %377, label %.lr.ph55, label %explist.exit.i

.lr.ph55:                                         ; preds = %.lr.ph55, %374
  %n.0.i.i53 = phi i32 [ %380, %.lr.ph55 ], [ 1, %374 ]
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %378 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %378, %struct.expdesc* %e.i) #3
  %379 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i, i32 0) #3
  %380 = add nsw i32 %n.0.i.i53, 1
  %381 = load i32* %27, align 4, !tbaa !220
  %382 = icmp eq i32 %381, 44
  br i1 %382, label %.lr.ph55, label %explist.exit.i

; <label>:383                                     ; preds = %str_checkname.exit.i14
  %384 = getelementptr inbounds %struct.expdesc* %e.i, i64 0, i32 0
  store i32 0, i32* %384, align 8, !tbaa !92
  br label %explist.exit.i

explist.exit.i:                                   ; preds = %383, %.lr.ph55, %374
  %nexps.0.i = phi i32 [ 0, %383 ], [ 1, %374 ], [ %380, %.lr.ph55 ]
  call fastcc void @adjust_assign(%struct.LexState.267* %ls, i32 %nvars.0.i58, i32 %nexps.0.i, %struct.expdesc* %e.i) #3
  %385 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %386 = getelementptr inbounds %struct.FuncState.266* %385, i64 0, i32 12
  %387 = load i8* %386, align 1, !tbaa !96
  %388 = zext i8 %387 to i32
  %389 = add nsw i32 %388, %nvars.0.i58
  %390 = trunc i32 %389 to i8
  store i8 %390, i8* %386, align 1, !tbaa !96
  %391 = icmp eq i32 %nvars.0.i58, 0
  br i1 %391, label %labelstat.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %explist.exit.i
  %392 = getelementptr inbounds %struct.FuncState.266* %385, i64 0, i32 5
  %393 = load i32* %392, align 4, !tbaa !79
  %394 = and i32 %389, 255
  %395 = getelementptr inbounds %struct.FuncState.266* %385, i64 0, i32 10
  %396 = load i32* %395, align 4, !tbaa !240
  %397 = getelementptr inbounds %struct.FuncState.266* %385, i64 0, i32 3
  %398 = load %struct.LexState.267** %397, align 8, !tbaa !85
  %399 = getelementptr inbounds %struct.LexState.267* %398, i64 0, i32 9
  %400 = load %struct.Dyndata.259** %399, align 8, !tbaa !234
  %401 = getelementptr inbounds %struct.Dyndata.259* %400, i64 0, i32 0, i32 0
  %402 = load %struct.Vardesc** %401, align 8, !tbaa !250
  %403 = getelementptr inbounds %struct.FuncState.266* %385, i64 0, i32 0
  %404 = load %struct.Proto.132** %403, align 8, !tbaa !82
  %405 = getelementptr inbounds %struct.Proto.132* %404, i64 0, i32 7
  %406 = load %struct.LocVar.130** %405, align 8, !tbaa !178
  %407 = sext i32 %nvars.0.i58 to i64
  %408 = add i32 %396, %394
  br label %409

; <label>:409                                     ; preds = %409, %.lr.ph.i.i
  %indvars.iv.i.i19 = phi i64 [ %407, %.lr.ph.i.i ], [ %indvars.iv.next.i.i20, %409 ]
  %410 = trunc i64 %indvars.iv.i.i19 to i32
  %411 = sub i32 %408, %410
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds %struct.Vardesc* %402, i64 %412, i32 0
  %414 = load i16* %413, align 2, !tbaa !251
  %415 = sext i16 %414 to i64
  %416 = getelementptr inbounds %struct.LocVar.130* %406, i64 %415, i32 1
  store i32 %393, i32* %416, align 4, !tbaa !181
  %indvars.iv.next.i.i20 = add nsw i64 %indvars.iv.i.i19, -1
  %417 = trunc i64 %indvars.iv.next.i.i20 to i32
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %labelstat.exit, label %409

; <label>:419                                     ; preds = %enterlevel.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %420 = load i32* %27, align 4, !tbaa !220
  %421 = icmp eq i32 %420, 288
  br i1 %421, label %str_checkname.exit, label %422

; <label>:422                                     ; preds = %419
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit:                               ; preds = %419
  %423 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %424 = bitcast %union.SemInfo* %423 to %union.TString.115**
  %425 = load %union.TString.115** %424, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %426 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %427 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 9
  %428 = load %struct.Dyndata.259** %427, align 8, !tbaa !234
  %429 = getelementptr inbounds %struct.Dyndata.259* %428, i64 0, i32 2
  %430 = getelementptr inbounds %struct.FuncState.266* %426, i64 0, i32 4
  %431 = load %struct.BlockCnt** %430, align 8, !tbaa !241
  %432 = getelementptr inbounds %struct.BlockCnt* %431, i64 0, i32 1
  %433 = load i16* %432, align 2, !tbaa !245
  %434 = sext i16 %433 to i32
  %435 = getelementptr inbounds %struct.Dyndata.259* %428, i64 0, i32 2, i32 1
  %436 = load i32* %435, align 4, !tbaa !253
  %437 = icmp slt i32 %434, %436
  br i1 %437, label %.lr.ph.i.i21, label %checkrepeated.exit.i

.lr.ph.i.i21:                                     ; preds = %str_checkname.exit
  %438 = getelementptr inbounds %struct.Labellist.258* %429, i64 0, i32 0
  %439 = sext i16 %433 to i64
  br label %444

; <label>:440                                     ; preds = %444
  %441 = load i32* %435, align 4, !tbaa !253
  %442 = trunc i64 %indvars.iv.next.i.i23 to i32
  %443 = icmp slt i32 %442, %441
  br i1 %443, label %444, label %checkrepeated.exit.i

; <label>:444                                     ; preds = %440, %.lr.ph.i.i21
  %indvars.iv.i.i22 = phi i64 [ %439, %.lr.ph.i.i21 ], [ %indvars.iv.next.i.i23, %440 ]
  %445 = load %struct.Labeldesc.257** %438, align 8, !tbaa !254
  %446 = getelementptr inbounds %struct.Labeldesc.257* %445, i64 %indvars.iv.i.i22, i32 0
  %447 = load %union.TString.115** %446, align 8, !tbaa !255
  %448 = call i32 bitcast (i32 (%union.TString.219*, %union.TString.219*)* @luaS_eqstr to i32 (%union.TString.115*, %union.TString.115*)*)(%union.TString.115* %425, %union.TString.115* %447) #3
  %449 = icmp eq i32 %448, 0
  %indvars.iv.next.i.i23 = add nsw i64 %indvars.iv.i.i22, 1
  br i1 %449, label %440, label %450

; <label>:450                                     ; preds = %444
  %451 = getelementptr inbounds %struct.FuncState.266* %426, i64 0, i32 3
  %452 = load %struct.LexState.267** %451, align 8, !tbaa !85
  %453 = getelementptr inbounds %struct.LexState.267* %452, i64 0, i32 6
  %454 = load %struct.lua_State.126** %453, align 8, !tbaa !89
  %455 = getelementptr inbounds %union.TString.115* %425, i64 1
  %456 = load %struct.Labeldesc.257** %438, align 8, !tbaa !254
  %457 = getelementptr inbounds %struct.Labeldesc.257* %456, i64 %indvars.iv.i.i22, i32 2
  %458 = load i32* %457, align 4, !tbaa !257
  %459 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %454, i8* getelementptr inbounds ([38 x i8]* @.str19200, i64 0, i64 0), %union.TString.115* %455, i32 %458) #3
  %460 = load %struct.LexState.267** %451, align 8, !tbaa !85
  call fastcc void @semerror(%struct.LexState.267* %460, i8* %459) #13
  unreachable

checkrepeated.exit.i:                             ; preds = %440, %str_checkname.exit
  %461 = load i32* %27, align 4, !tbaa !220
  %462 = icmp eq i32 %461, 285
  br i1 %462, label %checknext.exit.i24, label %463

; <label>:463                                     ; preds = %checkrepeated.exit.i
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 285) #13
  unreachable

checknext.exit.i24:                               ; preds = %checkrepeated.exit.i
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %464 = getelementptr inbounds %struct.FuncState.266* %426, i64 0, i32 5
  %465 = load i32* %464, align 4, !tbaa !79
  %466 = load i32* %435, align 4, !tbaa !253
  %467 = getelementptr inbounds %struct.Dyndata.259* %428, i64 0, i32 2, i32 2
  %468 = load i32* %467, align 4, !tbaa !258
  %469 = icmp slt i32 %466, %468
  br i1 %469, label %._crit_edge.i.i, label %470

._crit_edge.i.i:                                  ; preds = %checknext.exit.i24
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Labellist.258* %429, i64 0, i32 0
  %.pre.i.i = load %struct.Labeldesc.257** %.phi.trans.insert.i.i, align 8, !tbaa !254
  br label %newlabelentry.exit.i

; <label>:470                                     ; preds = %checknext.exit.i24
  %471 = load %struct.lua_State.126** %3, align 8, !tbaa !89
  %472 = getelementptr inbounds %struct.Labellist.258* %429, i64 0, i32 0
  %473 = load %struct.Labeldesc.257** %472, align 8, !tbaa !254
  %474 = bitcast %struct.Labeldesc.257* %473 to i8*
  %475 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %471, i8* %474, i32* %467, i64 24, i32 32767, i8* getelementptr inbounds ([13 x i8]* @.str4185, i64 0, i64 0)) #3
  %476 = bitcast i8* %475 to %struct.Labeldesc.257*
  store %struct.Labeldesc.257* %476, %struct.Labeldesc.257** %472, align 8, !tbaa !254
  %.pre1.i.i = load i32* %435, align 4, !tbaa !253
  br label %newlabelentry.exit.i

newlabelentry.exit.i:                             ; preds = %470, %._crit_edge.i.i
  %477 = phi i32 [ %466, %._crit_edge.i.i ], [ %.pre1.i.i, %470 ]
  %478 = phi %struct.Labeldesc.257* [ %.pre.i.i, %._crit_edge.i.i ], [ %476, %470 ]
  %479 = sext i32 %466 to i64
  %480 = getelementptr inbounds %struct.Labeldesc.257* %478, i64 %479, i32 0
  store %union.TString.115* %425, %union.TString.115** %480, align 8, !tbaa !255
  %481 = getelementptr inbounds %struct.Labeldesc.257* %478, i64 %479, i32 2
  store i32 %2, i32* %481, align 4, !tbaa !257
  %482 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %483 = getelementptr inbounds %struct.FuncState.266* %482, i64 0, i32 12
  %484 = load i8* %483, align 1, !tbaa !96
  %485 = getelementptr inbounds %struct.Labeldesc.257* %478, i64 %479, i32 3
  store i8 %484, i8* %485, align 1, !tbaa !259
  %486 = getelementptr inbounds %struct.Labeldesc.257* %478, i64 %479, i32 1
  store i32 %465, i32* %486, align 4, !tbaa !260
  %487 = add nsw i32 %477, 1
  store i32 %487, i32* %435, align 4, !tbaa !253
  br label %488

; <label>:488                                     ; preds = %.critedge.i.i, %newlabelentry.exit.i
  %489 = load i32* %27, align 4, !tbaa !220
  switch i32 %489, label %block_follow.exit.i.thread.loopexit [
    i32 59, label %.critedge.i.i
    i32 285, label %.critedge.i.i
    i32 260, label %._crit_edge77
    i32 261, label %._crit_edge77
    i32 262, label %._crit_edge77
    i32 286, label %._crit_edge77
  ]

.critedge.i.i:                                    ; preds = %488, %488
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br label %488

._crit_edge77:                                    ; preds = %488, %488, %488, %488
  %.in = getelementptr inbounds %struct.Labellist.258* %429, i64 0, i32 0
  %490 = load %struct.Labeldesc.257** %.in, align 8
  %491 = load %struct.BlockCnt** %430, align 8, !tbaa !241
  %492 = getelementptr inbounds %struct.BlockCnt* %491, i64 0, i32 3
  %493 = load i8* %492, align 1, !tbaa !244
  %494 = getelementptr inbounds %struct.Labeldesc.257* %490, i64 %479, i32 3
  store i8 %493, i8* %494, align 1, !tbaa !259
  br label %block_follow.exit.i.thread

block_follow.exit.i.thread.loopexit:              ; preds = %488
  %.phi.trans.insert = getelementptr inbounds %struct.Labellist.258* %429, i64 0, i32 0
  %.pre = load %struct.Labeldesc.257** %.phi.trans.insert, align 8, !tbaa !254
  br label %block_follow.exit.i.thread

block_follow.exit.i.thread:                       ; preds = %block_follow.exit.i.thread.loopexit, %._crit_edge77
  %495 = phi %struct.Labeldesc.257* [ %.pre, %block_follow.exit.i.thread.loopexit ], [ %490, %._crit_edge77 ]
  %496 = getelementptr inbounds %struct.Labeldesc.257* %495, i64 %479
  %497 = load %struct.Dyndata.259** %427, align 8, !tbaa !234
  %498 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %499 = getelementptr inbounds %struct.FuncState.266* %498, i64 0, i32 4
  %500 = load %struct.BlockCnt** %499, align 8, !tbaa !241
  %501 = getelementptr inbounds %struct.BlockCnt* %500, i64 0, i32 2
  %502 = load i16* %501, align 2, !tbaa !246
  %503 = sext i16 %502 to i32
  %504 = getelementptr inbounds %struct.Dyndata.259* %497, i64 0, i32 1, i32 1
  %505 = load i32* %504, align 4, !tbaa !253
  %506 = icmp slt i32 %503, %505
  br i1 %506, label %.lr.ph.lr.ph.i.i, label %labelstat.exit

.lr.ph.lr.ph.i.i:                                 ; preds = %block_follow.exit.i.thread
  %507 = getelementptr inbounds %struct.Dyndata.259* %497, i64 0, i32 1, i32 0
  %508 = getelementptr inbounds %struct.Labeldesc.257* %496, i64 0, i32 0
  %509 = sext i16 %502 to i64
  br label %.lr.ph.i2.i

.lr.ph.i2.i:                                      ; preds = %.outer.i.i, %.lr.ph.lr.ph.i.i
  %indvars.iv.i1.i = phi i64 [ %509, %.lr.ph.lr.ph.i.i ], [ %indvars.iv.next.i3.i, %.outer.i.i ]
  %510 = trunc i64 %indvars.iv.i1.i to i32
  br label %511

; <label>:511                                     ; preds = %518, %.lr.ph.i2.i
  %512 = load %struct.Labeldesc.257** %507, align 8, !tbaa !254
  %513 = getelementptr inbounds %struct.Labeldesc.257* %512, i64 %indvars.iv.i1.i, i32 0
  %514 = load %union.TString.115** %513, align 8, !tbaa !255
  %515 = load %union.TString.115** %508, align 8, !tbaa !255
  %516 = call i32 bitcast (i32 (%union.TString.219*, %union.TString.219*)* @luaS_eqstr to i32 (%union.TString.115*, %union.TString.115*)*)(%union.TString.115* %514, %union.TString.115* %515) #3
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %.outer.i.i, label %518

; <label>:518                                     ; preds = %511
  call fastcc void @closegoto(%struct.LexState.267* %ls, i32 %510, %struct.Labeldesc.257* %496) #3
  %519 = load i32* %504, align 4, !tbaa !253
  %520 = icmp slt i32 %510, %519
  br i1 %520, label %511, label %labelstat.exit

.outer.i.i:                                       ; preds = %511
  %indvars.iv.next.i3.i = add nsw i64 %indvars.iv.i1.i, 1
  %521 = load i32* %504, align 4, !tbaa !253
  %522 = trunc i64 %indvars.iv.next.i3.i to i32
  %523 = icmp slt i32 %522, %521
  br i1 %523, label %.lr.ph.i2.i, label %labelstat.exit

; <label>:524                                     ; preds = %enterlevel.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %525 = bitcast %struct.expdesc* %e.i26 to i8*
  call void @llvm.lifetime.start(i64 24, i8* %525) #3
  %526 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %527 = load i32* %27, align 4, !tbaa !220
  switch i32 %527, label %528 [
    i32 260, label %block_follow.exit.i28.thread46
    i32 261, label %block_follow.exit.i28.thread46
    i32 262, label %block_follow.exit.i28.thread46
    i32 286, label %block_follow.exit.i28.thread46
    i32 277, label %block_follow.exit.i28.thread46
    i32 59, label %block_follow.exit.i28.thread46
  ]

; <label>:528                                     ; preds = %524
  %529 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i26, i32 0) #3
  %530 = load i32* %27, align 4, !tbaa !220
  %531 = icmp eq i32 %530, 44
  br i1 %531, label %.lr.ph65, label %explist.exit.i32

.lr.ph65:                                         ; preds = %.lr.ph65, %528
  %n.0.i.i2963 = phi i32 [ %534, %.lr.ph65 ], [ 1, %528 ]
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %532 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %532, %struct.expdesc* %e.i26) #3
  %533 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e.i26, i32 0) #3
  %534 = add nsw i32 %n.0.i.i2963, 1
  %535 = load i32* %27, align 4, !tbaa !220
  %536 = icmp eq i32 %535, 44
  br i1 %536, label %.lr.ph65, label %explist.exit.i32

explist.exit.i32:                                 ; preds = %.lr.ph65, %528
  %n.0.i.i29.lcssa = phi i32 [ 1, %528 ], [ %534, %.lr.ph65 ]
  %537 = getelementptr inbounds %struct.expdesc* %e.i26, i64 0, i32 0
  %538 = load i32* %537, align 8, !tbaa !92
  %539 = and i32 %538, -2
  %switch.i = icmp eq i32 %539, 12
  br i1 %switch.i, label %540, label %561

; <label>:540                                     ; preds = %explist.exit.i32
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.266*, %struct.expdesc*, i32)*)(%struct.FuncState.266* %526, %struct.expdesc* %e.i26, i32 -1) #3
  %541 = load i32* %537, align 8, !tbaa !92
  %542 = icmp eq i32 %541, 12
  %543 = icmp eq i32 %n.0.i.i29.lcssa, 1
  %or.cond.i = and i1 %542, %543
  br i1 %or.cond.i, label %544, label %557

; <label>:544                                     ; preds = %540
  %545 = getelementptr inbounds %struct.expdesc* %e.i26, i64 0, i32 1
  %546 = bitcast %union.anon.7* %545 to i32*
  %547 = load i32* %546, align 8, !tbaa !1
  %548 = sext i32 %547 to i64
  %549 = getelementptr inbounds %struct.FuncState.266* %526, i64 0, i32 0
  %550 = load %struct.Proto.132** %549, align 8, !tbaa !82
  %551 = getelementptr inbounds %struct.Proto.132* %550, i64 0, i32 4
  %552 = load i32** %551, align 8, !tbaa !83
  %553 = getelementptr inbounds i32* %552, i64 %548
  %554 = load i32* %553, align 4, !tbaa !1
  %555 = and i32 %554, -64
  %556 = or i32 %555, 30
  store i32 %556, i32* %553, align 4, !tbaa !1
  br label %557

; <label>:557                                     ; preds = %544, %540
  %558 = getelementptr inbounds %struct.FuncState.266* %526, i64 0, i32 12
  %559 = load i8* %558, align 1, !tbaa !96
  %560 = zext i8 %559 to i32
  br label %block_follow.exit.i28.thread46

; <label>:561                                     ; preds = %explist.exit.i32
  %562 = icmp eq i32 %n.0.i.i29.lcssa, 1
  br i1 %562, label %563, label %565

; <label>:563                                     ; preds = %561
  %564 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2anyreg to i32 (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %526, %struct.expdesc* %e.i26) #3
  br label %block_follow.exit.i28.thread46

; <label>:565                                     ; preds = %561
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %526, %struct.expdesc* %e.i26) #3
  %566 = getelementptr inbounds %struct.FuncState.266* %526, i64 0, i32 12
  %567 = load i8* %566, align 1, !tbaa !96
  %568 = zext i8 %567 to i32
  br label %block_follow.exit.i28.thread46

block_follow.exit.i28.thread46:                   ; preds = %565, %563, %557, %524, %524, %524, %524, %524, %524
  %first.0.i = phi i32 [ %560, %557 ], [ %564, %563 ], [ %568, %565 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ]
  %nret.0.i = phi i32 [ -1, %557 ], [ 1, %563 ], [ %n.0.i.i29.lcssa, %565 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ], [ 0, %524 ]
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_ret to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %526, i32 %first.0.i, i32 %nret.0.i) #3
  %569 = load i32* %27, align 4, !tbaa !220
  %570 = icmp eq i32 %569, 59
  br i1 %570, label %571, label %labelstat.exit

; <label>:571                                     ; preds = %block_follow.exit.i28.thread46
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %labelstat.exit

; <label>:572                                     ; preds = %enterlevel.exit, %enterlevel.exit
  %573 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %9) #3
  call fastcc void @gotostat(%struct.LexState.267* %ls, i32 %573)
  br label %labelstat.exit

; <label>:574                                     ; preds = %enterlevel.exit
  %575 = bitcast %struct.LHS_assign* %v.i34 to i8*
  call void @llvm.lifetime.start(i64 32, i8* %575) #3
  %576 = getelementptr inbounds %struct.LHS_assign* %v.i34, i64 0, i32 1
  call fastcc void @suffixedexp(%struct.LexState.267* %ls, %struct.expdesc* %576) #3
  %577 = load i32* %27, align 4, !tbaa !220
  switch i32 %577, label %580 [
    i32 61, label %578
    i32 44, label %578
  ]

; <label>:578                                     ; preds = %574, %574
  %579 = getelementptr inbounds %struct.LHS_assign* %v.i34, i64 0, i32 0
  store %struct.LHS_assign* null, %struct.LHS_assign** %579, align 8, !tbaa !261
  call fastcc void @assignment(%struct.LexState.267* %ls, %struct.LHS_assign* %v.i34, i32 1) #3
  br label %labelstat.exit

; <label>:580                                     ; preds = %574
  %581 = getelementptr inbounds %struct.expdesc* %576, i64 0, i32 0
  %582 = load i32* %581, align 8, !tbaa !263
  %583 = icmp eq i32 %582, 12
  br i1 %583, label %585, label %584

; <label>:584                                     ; preds = %580
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([13 x i8]* @.str6187, i64 0, i64 0)) #13
  unreachable

; <label>:585                                     ; preds = %580
  %586 = getelementptr inbounds %struct.LHS_assign* %v.i34, i64 0, i32 1, i32 1
  %587 = bitcast %union.anon.7* %586 to i32*
  %588 = load i32* %587, align 8, !tbaa !1
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds %struct.FuncState.266* %9, i64 0, i32 0
  %591 = load %struct.Proto.132** %590, align 8, !tbaa !82
  %592 = getelementptr inbounds %struct.Proto.132* %591, i64 0, i32 4
  %593 = load i32** %592, align 8, !tbaa !83
  %594 = getelementptr inbounds i32* %593, i64 %589
  %595 = load i32* %594, align 4, !tbaa !1
  %596 = and i32 %595, -8372225
  %597 = or i32 %596, 16384
  store i32 %597, i32* %594, align 4, !tbaa !1
  br label %labelstat.exit

labelstat.exit:                                   ; preds = %585, %578, %572, %571, %block_follow.exit.i28.thread46, %.outer.i.i, %518, %block_follow.exit.i.thread, %409, %explist.exit.i, %str_checkname.exit.i13, %funcstat.exit, %repeatstat.exit, %forstat.exit, %block.exit, %whilestat.exit, %ifstat.exit, %29
  %598 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %599 = getelementptr inbounds %struct.FuncState.266* %598, i64 0, i32 12
  %600 = load i8* %599, align 1, !tbaa !96
  %601 = getelementptr inbounds %struct.FuncState.266* %598, i64 0, i32 14
  store i8 %600, i8* %601, align 1, !tbaa !87
  %602 = load %struct.lua_State.126** %3, align 8, !tbaa !89
  %603 = getelementptr inbounds %struct.lua_State.126* %602, i64 0, i32 12
  %604 = load i16* %603, align 2, !tbaa !142
  %605 = add i16 %604, -1
  store i16 %605, i16* %603, align 2, !tbaa !142
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @error_expected(%struct.LexState.267* %ls, i32 %token) #4 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.126** %1, align 8, !tbaa !89
  %3 = tail call i8* bitcast (i8* (%struct.LexState.194*, i32)* @luaX_token2str to i8* (%struct.LexState.267*, i32)*)(%struct.LexState.267* %ls, i32 %token) #3
  %4 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %2, i8* getelementptr inbounds ([12 x i8]* @.str5186, i64 0, i64 0), i8* %3) #3
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* %4) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @close_func(%struct.LexState.267* %ls) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.126** %1, align 8, !tbaa !89
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %4 = load %struct.FuncState.266** %3, align 8, !tbaa !221
  %5 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 0
  %6 = load %struct.Proto.132** %5, align 8, !tbaa !82
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_ret to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %4, i32 0, i32 0) #3
  tail call fastcc void @leaveblock(%struct.FuncState.266* %4)
  %7 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 5
  %8 = load i32* %7, align 4, !tbaa !79
  %9 = add nsw i32 %8, 1
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11                                      ; preds = %0
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #13
  unreachable

; <label>:12                                      ; preds = %0
  %13 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 4
  %14 = load i32** %13, align 8, !tbaa !83
  %15 = bitcast i32* %14 to i8*
  %16 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 13
  %17 = load i32* %16, align 4, !tbaa !106
  %18 = sext i32 %17 to i64
  %19 = shl nsw i64 %18, 2
  %20 = sext i32 %8 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %2, i8* %15, i64 %19, i64 %21) #3
  %23 = bitcast i8* %22 to i32*
  store i32* %23, i32** %13, align 8, !tbaa !83
  %24 = load i32* %7, align 4, !tbaa !79
  store i32 %24, i32* %16, align 4, !tbaa !106
  %25 = add nsw i32 %24, 1
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %28

; <label>:27                                      ; preds = %12
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #13
  unreachable

; <label>:28                                      ; preds = %12
  %29 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 6
  %30 = load i32** %29, align 8, !tbaa !105
  %31 = bitcast i32* %30 to i8*
  %32 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 14
  %33 = load i32* %32, align 4, !tbaa !107
  %34 = sext i32 %33 to i64
  %35 = shl nsw i64 %34, 2
  %36 = sext i32 %24 to i64
  %37 = shl nsw i64 %36, 2
  %38 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %2, i8* %31, i64 %35, i64 %37) #3
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %29, align 8, !tbaa !105
  %40 = load i32* %7, align 4, !tbaa !79
  store i32 %40, i32* %32, align 4, !tbaa !107
  %41 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 8
  %42 = load i32* %41, align 4, !tbaa !101
  %43 = add nsw i32 %42, 1
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %46

; <label>:45                                      ; preds = %28
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #13
  unreachable

; <label>:46                                      ; preds = %28
  %47 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 3
  %48 = load %struct.lua_TValue.109** %47, align 8, !tbaa !109
  %49 = bitcast %struct.lua_TValue.109* %48 to i8*
  %50 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 12
  %51 = load i32* %50, align 4, !tbaa !110
  %52 = sext i32 %51 to i64
  %53 = shl nsw i64 %52, 4
  %54 = sext i32 %42 to i64
  %55 = shl nsw i64 %54, 4
  %56 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %2, i8* %49, i64 %53, i64 %55) #3
  %57 = bitcast i8* %56 to %struct.lua_TValue.109*
  store %struct.lua_TValue.109* %57, %struct.lua_TValue.109** %47, align 8, !tbaa !109
  %58 = load i32* %41, align 4, !tbaa !101
  store i32 %58, i32* %50, align 4, !tbaa !110
  %59 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 9
  %60 = load i32* %59, align 4, !tbaa !239
  %61 = add nsw i32 %60, 1
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %46
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #13
  unreachable

; <label>:64                                      ; preds = %46
  %65 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 5
  %66 = load %struct.Proto.132*** %65, align 8, !tbaa !174
  %67 = bitcast %struct.Proto.132** %66 to i8*
  %68 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 15
  %69 = load i32* %68, align 4, !tbaa !173
  %70 = sext i32 %69 to i64
  %71 = shl nsw i64 %70, 3
  %72 = sext i32 %60 to i64
  %73 = shl nsw i64 %72, 3
  %74 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %2, i8* %67, i64 %71, i64 %73) #3
  %75 = bitcast i8* %74 to %struct.Proto.132**
  store %struct.Proto.132** %75, %struct.Proto.132*** %65, align 8, !tbaa !174
  %76 = load i32* %59, align 4, !tbaa !239
  store i32 %76, i32* %68, align 4, !tbaa !173
  %77 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 11
  %78 = load i16* %77, align 2, !tbaa !264
  %79 = sext i16 %78 to i64
  %80 = add i64 %79, 1
  %81 = icmp ugt i64 %80, 1152921504606846975
  br i1 %81, label %82, label %83

; <label>:82                                      ; preds = %64
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #13
  unreachable

; <label>:83                                      ; preds = %64
  %84 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 7
  %85 = load %struct.LocVar.130** %84, align 8, !tbaa !178
  %86 = bitcast %struct.LocVar.130* %85 to i8*
  %87 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 16
  %88 = load i32* %87, align 4, !tbaa !177
  %89 = sext i32 %88 to i64
  %90 = shl nsw i64 %89, 4
  %91 = shl nsw i64 %79, 4
  %92 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %2, i8* %86, i64 %90, i64 %91) #3
  %93 = bitcast i8* %92 to %struct.LocVar.130*
  store %struct.LocVar.130* %93, %struct.LocVar.130** %84, align 8, !tbaa !178
  %94 = load i16* %77, align 2, !tbaa !264
  %95 = sext i16 %94 to i32
  store i32 %95, i32* %87, align 4, !tbaa !177
  %96 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 13
  %97 = load i8* %96, align 1, !tbaa !249
  %98 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 8
  %99 = load %struct.Upvaldesc.131** %98, align 8, !tbaa !76
  %100 = bitcast %struct.Upvaldesc.131* %99 to i8*
  %101 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 11
  %102 = load i32* %101, align 4, !tbaa !73
  %103 = sext i32 %102 to i64
  %104 = shl nsw i64 %103, 4
  %105 = zext i8 %97 to i64
  %106 = shl nuw nsw i64 %105, 4
  %107 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %2, i8* %100, i64 %104, i64 %106) #3
  %108 = bitcast i8* %107 to %struct.Upvaldesc.131*
  store %struct.Upvaldesc.131* %108, %struct.Upvaldesc.131** %98, align 8, !tbaa !76
  %109 = load i8* %96, align 1, !tbaa !249
  %110 = zext i8 %109 to i32
  store i32 %110, i32* %101, align 4, !tbaa !73
  %111 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 2
  %112 = load %struct.FuncState.266** %111, align 8, !tbaa !238
  store %struct.FuncState.266* %112, %struct.FuncState.266** %3, align 8, !tbaa !221
  %113 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %114 = load i32* %113, align 4, !tbaa !220
  %115 = and i32 %114, -2
  %switch.i = icmp eq i32 %115, 288
  br i1 %switch.i, label %116, label %anchor_token.exit

; <label>:116                                     ; preds = %83
  %117 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %118 = bitcast %union.SemInfo* %117 to %union.TString.115**
  %119 = load %union.TString.115** %118, align 8, !tbaa !25
  %120 = getelementptr inbounds %union.TString.115* %119, i64 1
  %121 = bitcast %union.TString.115* %120 to i8*
  %122 = getelementptr inbounds %union.TString.115* %119, i64 0, i32 0, i32 5
  %123 = load i64* %122, align 8, !tbaa !34
  %124 = tail call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* %121, i64 %123) #3
  br label %anchor_token.exit

anchor_token.exit:                                ; preds = %116, %83
  %125 = getelementptr inbounds %struct.lua_State.126* %2, i64 0, i32 4
  %126 = load %struct.lua_TValue.109** %125, align 8, !tbaa !12
  %127 = getelementptr inbounds %struct.lua_TValue.109* %126, i64 -1
  store %struct.lua_TValue.109* %127, %struct.lua_TValue.109** %125, align 8, !tbaa !12
  %128 = getelementptr inbounds %struct.lua_State.126* %2, i64 0, i32 5
  %129 = load %struct.global_State.120** %128, align 8, !tbaa !17
  %130 = getelementptr inbounds %struct.global_State.120* %129, i64 0, i32 3
  %131 = load i64* %130, align 8, !tbaa !33
  %132 = icmp sgt i64 %131, 0
  br i1 %132, label %133, label %134

; <label>:133                                     ; preds = %anchor_token.exit
  tail call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #3
  br label %134

; <label>:134                                     ; preds = %133, %anchor_token.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @test_then_block(%struct.LexState.267* %ls, i32* %escapelist) #0 {
  %bl = alloca %struct.BlockCnt, align 8
  %v = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %3 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 0) #3
  %4 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %5 = load i32* %4, align 4, !tbaa !220
  %6 = icmp eq i32 %5, 275
  br i1 %6, label %checknext.exit, label %7

; <label>:7                                       ; preds = %0
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 275) #13
  unreachable

checknext.exit:                                   ; preds = %0
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %8 = load i32* %4, align 4, !tbaa !220
  switch i32 %8, label %38 [
    i32 266, label %9
    i32 258, label %9
  ]

; <label>:9                                       ; preds = %checknext.exit, %checknext.exit
  %10 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiffalse to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %10, %struct.expdesc* %v) #3
  %11 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 5
  store i8 0, i8* %11, align 2, !tbaa !242
  %12 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 12
  %13 = load i8* %12, align 1, !tbaa !96
  %14 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 3
  store i8 %13, i8* %14, align 4, !tbaa !244
  %15 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 3
  %16 = load %struct.LexState.267** %15, align 8, !tbaa !85
  %17 = getelementptr inbounds %struct.LexState.267* %16, i64 0, i32 9
  %18 = load %struct.Dyndata.259** %17, align 8, !tbaa !234
  %19 = getelementptr inbounds %struct.Dyndata.259* %18, i64 0, i32 2, i32 1
  %20 = load i32* %19, align 4, !tbaa !235
  %21 = trunc i32 %20 to i16
  %22 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 1
  store i16 %21, i16* %22, align 8, !tbaa !245
  %23 = getelementptr inbounds %struct.Dyndata.259* %18, i64 0, i32 1, i32 1
  %24 = load i32* %23, align 4, !tbaa !236
  %25 = trunc i32 %24 to i16
  %26 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 2
  store i16 %25, i16* %26, align 2, !tbaa !246
  %27 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 4
  store i8 0, i8* %27, align 1, !tbaa !247
  %28 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 4
  %29 = load %struct.BlockCnt** %28, align 8, !tbaa !241
  %30 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 0
  store %struct.BlockCnt* %29, %struct.BlockCnt** %30, align 8, !tbaa !248
  store %struct.BlockCnt* %bl, %struct.BlockCnt** %28, align 8, !tbaa !241
  %31 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  %32 = load i32* %31, align 8, !tbaa !99
  call fastcc void @gotostat(%struct.LexState.267* %ls, i32 %32)
  br label %33

; <label>:33                                      ; preds = %.critedge.i, %9
  %34 = load i32* %4, align 4, !tbaa !220
  switch i32 %34, label %36 [
    i32 59, label %.critedge.i
    i32 285, label %.critedge.i
    i32 260, label %35
    i32 261, label %35
    i32 262, label %35
    i32 286, label %35
  ]

.critedge.i:                                      ; preds = %33, %33
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br label %33

; <label>:35                                      ; preds = %33, %33, %33, %33
  call fastcc void @leaveblock(%struct.FuncState.266* %2)
  br label %72

; <label>:36                                      ; preds = %33
  %37 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %2) #3
  br label %62

; <label>:38                                      ; preds = %checknext.exit
  %39 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_goiftrue to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %39, %struct.expdesc* %v) #3
  %40 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 5
  store i8 0, i8* %40, align 2, !tbaa !242
  %41 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 12
  %42 = load i8* %41, align 1, !tbaa !96
  %43 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 3
  store i8 %42, i8* %43, align 4, !tbaa !244
  %44 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 3
  %45 = load %struct.LexState.267** %44, align 8, !tbaa !85
  %46 = getelementptr inbounds %struct.LexState.267* %45, i64 0, i32 9
  %47 = load %struct.Dyndata.259** %46, align 8, !tbaa !234
  %48 = getelementptr inbounds %struct.Dyndata.259* %47, i64 0, i32 2, i32 1
  %49 = load i32* %48, align 4, !tbaa !235
  %50 = trunc i32 %49 to i16
  %51 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 1
  store i16 %50, i16* %51, align 8, !tbaa !245
  %52 = getelementptr inbounds %struct.Dyndata.259* %47, i64 0, i32 1, i32 1
  %53 = load i32* %52, align 4, !tbaa !236
  %54 = trunc i32 %53 to i16
  %55 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 2
  store i16 %54, i16* %55, align 2, !tbaa !246
  %56 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 4
  store i8 0, i8* %56, align 1, !tbaa !247
  %57 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 4
  %58 = load %struct.BlockCnt** %57, align 8, !tbaa !241
  %59 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 0
  store %struct.BlockCnt* %58, %struct.BlockCnt** %59, align 8, !tbaa !248
  store %struct.BlockCnt* %bl, %struct.BlockCnt** %57, align 8, !tbaa !241
  %60 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  %61 = load i32* %60, align 4, !tbaa !100
  br label %62

; <label>:62                                      ; preds = %38, %36
  %jf.0 = phi i32 [ %37, %36 ], [ %61, %38 ]
  br label %63

; <label>:63                                      ; preds = %65, %62
  %64 = load i32* %4, align 4, !tbaa !220
  switch i32 %64, label %65 [
    i32 260, label %statlist.exit
    i32 261, label %statlist.exit
    i32 262, label %statlist.exit
    i32 286, label %statlist.exit
    i32 277, label %statlist.exit
  ]

; <label>:65                                      ; preds = %63
  %66 = icmp eq i32 %64, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %66, label %statlist.exit, label %63

statlist.exit:                                    ; preds = %65, %63, %63, %63, %63, %63
  call fastcc void @leaveblock(%struct.FuncState.266* %2)
  %67 = load i32* %4, align 4, !tbaa !220
  %68 = and i32 %67, -2
  %switch = icmp eq i32 %68, 260
  br i1 %switch, label %69, label %71

; <label>:69                                      ; preds = %statlist.exit
  %70 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %2) #3
  call void bitcast (void (%struct.FuncState*, i32*, i32)* @luaK_concat to void (%struct.FuncState.266*, i32*, i32)*)(%struct.FuncState.266* %2, i32* %escapelist, i32 %70) #3
  br label %71

; <label>:71                                      ; preds = %69, %statlist.exit
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %2, i32 %jf.0) #3
  br label %72

; <label>:72                                      ; preds = %71, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @leaveblock(%struct.FuncState.266* %fs) #0 {
  %1 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 4
  %2 = load %struct.BlockCnt** %1, align 8, !tbaa !241
  %3 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 3
  %4 = load %struct.LexState.267** %3, align 8, !tbaa !85
  %5 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 0
  %6 = load %struct.BlockCnt** %5, align 8, !tbaa !248
  %7 = icmp eq %struct.BlockCnt* %6, null
  br i1 %7, label %17, label %8

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 4
  %10 = load i8* %9, align 1, !tbaa !247
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

; <label>:12                                      ; preds = %8
  %13 = tail call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %fs) #3
  %14 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 3
  %15 = load i8* %14, align 1, !tbaa !244
  %16 = zext i8 %15 to i32
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchclose to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %fs, i32 %13, i32 %16) #3
  tail call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %fs, i32 %13) #3
  br label %17

; <label>:17                                      ; preds = %12, %8, %0
  %18 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 5
  %19 = load i8* %18, align 1, !tbaa !242
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %breaklabel.exit, label %21

; <label>:21                                      ; preds = %17
  %22 = getelementptr inbounds %struct.LexState.267* %4, i64 0, i32 6
  %23 = load %struct.lua_State.126** %22, align 8, !tbaa !89
  %24 = tail call %union.TString.115* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString.115* (%struct.lua_State.126*, i8*)*)(%struct.lua_State.126* %23, i8* getelementptr inbounds ([6 x i8]* @.str3184, i64 0, i64 0)) #3
  %25 = getelementptr inbounds %struct.LexState.267* %4, i64 0, i32 9
  %26 = load %struct.Dyndata.259** %25, align 8, !tbaa !234
  %27 = getelementptr inbounds %struct.Dyndata.259* %26, i64 0, i32 2
  %28 = getelementptr inbounds %struct.LexState.267* %4, i64 0, i32 5
  %29 = load %struct.FuncState.266** %28, align 8, !tbaa !221
  %30 = getelementptr inbounds %struct.FuncState.266* %29, i64 0, i32 5
  %31 = load i32* %30, align 4, !tbaa !79
  %32 = getelementptr inbounds %struct.Dyndata.259* %26, i64 0, i32 2, i32 1
  %33 = load i32* %32, align 4, !tbaa !253
  %34 = getelementptr inbounds %struct.Dyndata.259* %26, i64 0, i32 2, i32 2
  %35 = load i32* %34, align 4, !tbaa !258
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %._crit_edge.i.i, label %37

._crit_edge.i.i:                                  ; preds = %21
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.Labellist.258* %27, i64 0, i32 0
  %.pre.i.i = load %struct.Labeldesc.257** %.phi.trans.insert.i.i, align 8, !tbaa !254
  br label %newlabelentry.exit.i

; <label>:37                                      ; preds = %21
  %38 = load %struct.lua_State.126** %22, align 8, !tbaa !89
  %39 = getelementptr inbounds %struct.Labellist.258* %27, i64 0, i32 0
  %40 = load %struct.Labeldesc.257** %39, align 8, !tbaa !254
  %41 = bitcast %struct.Labeldesc.257* %40 to i8*
  %42 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %38, i8* %41, i32* %34, i64 24, i32 32767, i8* getelementptr inbounds ([13 x i8]* @.str4185, i64 0, i64 0)) #3
  %43 = bitcast i8* %42 to %struct.Labeldesc.257*
  store %struct.Labeldesc.257* %43, %struct.Labeldesc.257** %39, align 8, !tbaa !254
  %.pre1.i.i = load i32* %32, align 4, !tbaa !253
  %.pre.i = load %struct.FuncState.266** %28, align 8, !tbaa !221
  %.pre3.i = load %struct.Dyndata.259** %25, align 8, !tbaa !234
  br label %newlabelentry.exit.i

newlabelentry.exit.i:                             ; preds = %37, %._crit_edge.i.i
  %44 = phi %struct.Dyndata.259* [ %26, %._crit_edge.i.i ], [ %.pre3.i, %37 ]
  %45 = phi %struct.FuncState.266* [ %29, %._crit_edge.i.i ], [ %.pre.i, %37 ]
  %46 = phi i32 [ %33, %._crit_edge.i.i ], [ %.pre1.i.i, %37 ]
  %47 = phi %struct.Labeldesc.257* [ %.pre.i.i, %._crit_edge.i.i ], [ %43, %37 ]
  %48 = sext i32 %33 to i64
  %49 = getelementptr inbounds %struct.Labeldesc.257* %47, i64 %48, i32 0
  store %union.TString.115* %24, %union.TString.115** %49, align 8, !tbaa !255
  %50 = getelementptr inbounds %struct.Labeldesc.257* %47, i64 %48, i32 2
  store i32 0, i32* %50, align 4, !tbaa !257
  %51 = getelementptr inbounds %struct.FuncState.266* %45, i64 0, i32 12
  %52 = load i8* %51, align 1, !tbaa !96
  %53 = getelementptr inbounds %struct.Labeldesc.257* %47, i64 %48, i32 3
  store i8 %52, i8* %53, align 1, !tbaa !259
  %54 = getelementptr inbounds %struct.Labeldesc.257* %47, i64 %48, i32 1
  store i32 %31, i32* %54, align 4, !tbaa !260
  %55 = add nsw i32 %46, 1
  store i32 %55, i32* %32, align 4, !tbaa !253
  %56 = getelementptr inbounds %struct.Dyndata.259* %44, i64 0, i32 2, i32 0
  %57 = load %struct.Labeldesc.257** %56, align 8, !tbaa !265
  %58 = getelementptr inbounds %struct.Labeldesc.257* %57, i64 %48
  %59 = getelementptr inbounds %struct.FuncState.266* %45, i64 0, i32 4
  %60 = load %struct.BlockCnt** %59, align 8, !tbaa !241
  %61 = getelementptr inbounds %struct.BlockCnt* %60, i64 0, i32 2
  %62 = load i16* %61, align 2, !tbaa !246
  %63 = sext i16 %62 to i32
  %64 = getelementptr inbounds %struct.Dyndata.259* %44, i64 0, i32 1, i32 1
  %65 = load i32* %64, align 4, !tbaa !253
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %.lr.ph.lr.ph.i.i, label %breaklabel.exit

.lr.ph.lr.ph.i.i:                                 ; preds = %newlabelentry.exit.i
  %67 = getelementptr inbounds %struct.Dyndata.259* %44, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %struct.Labeldesc.257* %58, i64 0, i32 0
  %69 = sext i16 %62 to i64
  br label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.outer.i.i, %.lr.ph.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %69, %.lr.ph.lr.ph.i.i ], [ %indvars.iv.next.i.i, %.outer.i.i ]
  %70 = trunc i64 %indvars.iv.i.i to i32
  br label %71

; <label>:71                                      ; preds = %78, %.lr.ph.i.i
  %72 = load %struct.Labeldesc.257** %67, align 8, !tbaa !254
  %73 = getelementptr inbounds %struct.Labeldesc.257* %72, i64 %indvars.iv.i.i, i32 0
  %74 = load %union.TString.115** %73, align 8, !tbaa !255
  %75 = load %union.TString.115** %68, align 8, !tbaa !255
  %76 = tail call i32 bitcast (i32 (%union.TString.219*, %union.TString.219*)* @luaS_eqstr to i32 (%union.TString.115*, %union.TString.115*)*)(%union.TString.115* %74, %union.TString.115* %75) #3
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %.outer.i.i, label %78

; <label>:78                                      ; preds = %71
  tail call fastcc void @closegoto(%struct.LexState.267* %4, i32 %70, %struct.Labeldesc.257* %58) #3
  %79 = load i32* %64, align 4, !tbaa !253
  %80 = icmp slt i32 %70, %79
  br i1 %80, label %71, label %breaklabel.exit

.outer.i.i:                                       ; preds = %71
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  %81 = load i32* %64, align 4, !tbaa !253
  %82 = trunc i64 %indvars.iv.next.i.i to i32
  %83 = icmp slt i32 %82, %81
  br i1 %83, label %.lr.ph.i.i, label %breaklabel.exit

breaklabel.exit:                                  ; preds = %.outer.i.i, %78, %newlabelentry.exit.i, %17
  %84 = load %struct.BlockCnt** %5, align 8, !tbaa !248
  store %struct.BlockCnt* %84, %struct.BlockCnt** %1, align 8, !tbaa !241
  %85 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 3
  %86 = load i8* %85, align 1, !tbaa !244
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 12
  %89 = load i8* %88, align 1, !tbaa !96
  %90 = zext i8 %89 to i32
  %91 = load %struct.LexState.267** %3, align 8, !tbaa !85
  %92 = getelementptr inbounds %struct.LexState.267* %91, i64 0, i32 9
  %93 = load %struct.Dyndata.259** %92, align 8, !tbaa !234
  %94 = getelementptr inbounds %struct.Dyndata.259* %93, i64 0, i32 0, i32 1
  %95 = load i32* %94, align 4, !tbaa !237
  %96 = sub i32 %87, %90
  %97 = add i32 %96, %95
  store i32 %97, i32* %94, align 4, !tbaa !237
  %98 = icmp ult i8 %86, %89
  br i1 %98, label %.lr.ph.i, label %removevars.exit

.lr.ph.i:                                         ; preds = %breaklabel.exit
  %99 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 5
  %100 = load i32* %99, align 4, !tbaa !79
  %101 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 10
  %102 = load i32* %101, align 4, !tbaa !240
  %103 = getelementptr inbounds %struct.Dyndata.259* %93, i64 0, i32 0, i32 0
  %104 = load %struct.Vardesc** %103, align 8, !tbaa !250
  %105 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 0
  %106 = load %struct.Proto.132** %105, align 8, !tbaa !82
  %107 = getelementptr inbounds %struct.Proto.132* %106, i64 0, i32 7
  %108 = load %struct.LocVar.130** %107, align 8, !tbaa !178
  br label %109

; <label>:109                                     ; preds = %109, %.lr.ph.i
  %110 = phi i8 [ %89, %.lr.ph.i ], [ %111, %109 ]
  %111 = add i8 %110, -1
  %112 = zext i8 %111 to i32
  %113 = add nsw i32 %112, %102
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.Vardesc* %104, i64 %114, i32 0
  %116 = load i16* %115, align 2, !tbaa !251
  %117 = sext i16 %116 to i64
  %118 = getelementptr inbounds %struct.LocVar.130* %108, i64 %117, i32 2
  store i32 %100, i32* %118, align 4, !tbaa !182
  %119 = icmp ugt i8 %111, %86
  br i1 %119, label %109, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %109
  store i8 %86, i8* %88, align 1, !tbaa !96
  br label %removevars.exit

removevars.exit:                                  ; preds = %._crit_edge.i, %breaklabel.exit
  %120 = phi i8 [ %89, %breaklabel.exit ], [ %86, %._crit_edge.i ]
  %121 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 14
  store i8 %120, i8* %121, align 1, !tbaa !87
  %122 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 1
  %123 = load i16* %122, align 2, !tbaa !245
  %124 = sext i16 %123 to i32
  %125 = getelementptr inbounds %struct.LexState.267* %4, i64 0, i32 9
  %126 = load %struct.Dyndata.259** %125, align 8, !tbaa !234
  %127 = getelementptr inbounds %struct.Dyndata.259* %126, i64 0, i32 2, i32 1
  store i32 %124, i32* %127, align 4, !tbaa !235
  %128 = icmp eq %struct.BlockCnt* %84, null
  %129 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 2
  %130 = load i16* %129, align 2, !tbaa !246
  %131 = sext i16 %130 to i32
  br i1 %128, label %161, label %132

; <label>:132                                     ; preds = %removevars.exit
  %133 = getelementptr inbounds %struct.Dyndata.259* %93, i64 0, i32 1, i32 1
  %134 = load i32* %133, align 4, !tbaa !253
  %135 = icmp slt i32 %131, %134
  br i1 %135, label %.lr.ph.i1, label %movegotosout.exit

.lr.ph.i1:                                        ; preds = %132
  %136 = getelementptr inbounds %struct.Dyndata.259* %93, i64 0, i32 1, i32 0
  %137 = getelementptr inbounds %struct.BlockCnt* %2, i64 0, i32 4
  br label %138

; <label>:138                                     ; preds = %._crit_edge, %.lr.ph.i1
  %139 = phi i8 [ %86, %.lr.ph.i1 ], [ %.pre, %._crit_edge ]
  %i.01.i = phi i32 [ %131, %.lr.ph.i1 ], [ %.i.0.i, %._crit_edge ]
  %140 = sext i32 %i.01.i to i64
  %141 = load %struct.Labeldesc.257** %136, align 8, !tbaa !254
  %142 = getelementptr inbounds %struct.Labeldesc.257* %141, i64 %140, i32 3
  %143 = load i8* %142, align 1, !tbaa !259
  %144 = zext i8 %139 to i32
  %145 = icmp ugt i8 %143, %139
  br i1 %145, label %146, label %154

; <label>:146                                     ; preds = %138
  %147 = load i8* %137, align 1, !tbaa !247
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %152, label %149

; <label>:149                                     ; preds = %146
  %150 = getelementptr inbounds %struct.Labeldesc.257* %141, i64 %140, i32 1
  %151 = load i32* %150, align 4, !tbaa !260
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchclose to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %fs, i32 %151, i32 %144) #3
  %.pre.i2 = load i8* %85, align 1, !tbaa !244
  br label %152

; <label>:152                                     ; preds = %149, %146
  %153 = phi i8 [ %139, %146 ], [ %.pre.i2, %149 ]
  store i8 %153, i8* %142, align 1, !tbaa !259
  br label %154

; <label>:154                                     ; preds = %152, %138
  %155 = load %struct.LexState.267** %3, align 8, !tbaa !85
  %156 = tail call fastcc i32 @findlabel(%struct.LexState.267* %155, i32 %i.01.i) #3
  %157 = icmp eq i32 %156, 0
  %158 = zext i1 %157 to i32
  %.i.0.i = add nsw i32 %158, %i.01.i
  %159 = load i32* %133, align 4, !tbaa !253
  %160 = icmp slt i32 %.i.0.i, %159
  br i1 %160, label %._crit_edge, label %movegotosout.exit

._crit_edge:                                      ; preds = %154
  %.pre = load i8* %85, align 1, !tbaa !244
  br label %138

; <label>:161                                     ; preds = %removevars.exit
  %162 = getelementptr inbounds %struct.Dyndata.259* %126, i64 0, i32 1, i32 1
  %163 = load i32* %162, align 4, !tbaa !236
  %164 = icmp slt i32 %131, %163
  br i1 %164, label %165, label %movegotosout.exit

; <label>:165                                     ; preds = %161
  %166 = sext i16 %130 to i64
  %167 = getelementptr inbounds %struct.Dyndata.259* %126, i64 0, i32 1, i32 0
  %168 = load %struct.Labeldesc.257** %167, align 8, !tbaa !266
  %169 = getelementptr inbounds %struct.Labeldesc.257* %168, i64 %166, i32 0
  %170 = load %union.TString.115** %169, align 8, !tbaa !255
  %171 = getelementptr inbounds %union.TString.115* %170, i64 0, i32 0, i32 1
  %172 = load i8* %171, align 1, !tbaa !38
  %173 = icmp eq i8 %172, 4
  br i1 %173, label %174, label %178

; <label>:174                                     ; preds = %165
  %175 = getelementptr inbounds %union.TString.115* %170, i64 0, i32 0, i32 3
  %176 = load i8* %175, align 1, !tbaa !219
  %177 = icmp ne i8 %176, 0
  %phitmp.i = select i1 %177, i8* getelementptr inbounds ([34 x i8]* @.str181, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8]* @.str1182, i64 0, i64 0)
  br label %178

; <label>:178                                     ; preds = %174, %165
  %179 = phi i8* [ getelementptr inbounds ([44 x i8]* @.str1182, i64 0, i64 0), %165 ], [ %phitmp.i, %174 ]
  %180 = getelementptr inbounds %struct.LexState.267* %4, i64 0, i32 6
  %181 = load %struct.lua_State.126** %180, align 8, !tbaa !89
  %182 = getelementptr inbounds %union.TString.115* %170, i64 1
  %183 = getelementptr inbounds %struct.Labeldesc.257* %168, i64 %166, i32 2
  %184 = load i32* %183, align 4, !tbaa !257
  %185 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %181, i8* %179, %union.TString.115* %182, i32 %184) #3
  tail call fastcc void @semerror(%struct.LexState.267* %4, i8* %185) #13
  unreachable

movegotosout.exit:                                ; preds = %161, %154, %132
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @check_match(%struct.LexState.267* %ls, i32 %what, i32 %who, i32 %where) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %2 = load i32* %1, align 4, !tbaa !220
  %3 = icmp eq i32 %2, %what
  br i1 %3, label %15, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %6 = load i32* %5, align 4, !tbaa !226
  %7 = icmp eq i32 %6, %where
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %4
  tail call fastcc void @error_expected(%struct.LexState.267* %ls, i32 %what) #14
  unreachable

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %11 = load %struct.lua_State.126** %10, align 8, !tbaa !89
  %12 = tail call i8* bitcast (i8* (%struct.LexState.194*, i32)* @luaX_token2str to i8* (%struct.LexState.267*, i32)*)(%struct.LexState.267* %ls, i32 %what) #3
  %13 = tail call i8* bitcast (i8* (%struct.LexState.194*, i32)* @luaX_token2str to i8* (%struct.LexState.267*, i32)*)(%struct.LexState.267* %ls, i32 %who) #3
  %14 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %11, i8* getelementptr inbounds ([37 x i8]* @.str27208, i64 0, i64 0), i8* %12, i8* %13, i32 %where) #3
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* %14) #13
  unreachable

; <label>:15                                      ; preds = %0
  tail call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 %limit) #0 {
  %v2 = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.126** %1, align 8, !tbaa !89
  %3 = getelementptr inbounds %struct.lua_State.126* %2, i64 0, i32 12
  %4 = load i16* %3, align 2, !tbaa !142
  %5 = add i16 %4, 1
  store i16 %5, i16* %3, align 2, !tbaa !142
  %6 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %7 = load %struct.FuncState.266** %6, align 8, !tbaa !221
  %8 = icmp ugt i16 %5, 200
  br i1 %8, label %9, label %enterlevel.exit

; <label>:9                                       ; preds = %0
  %10 = getelementptr inbounds %struct.FuncState.266* %7, i64 0, i32 3
  %11 = load %struct.LexState.267** %10, align 8, !tbaa !85
  %12 = getelementptr inbounds %struct.LexState.267* %11, i64 0, i32 6
  %13 = load %struct.lua_State.126** %12, align 8, !tbaa !89
  %14 = getelementptr inbounds %struct.FuncState.266* %7, i64 0, i32 0
  %15 = load %struct.Proto.132** %14, align 8, !tbaa !82
  %16 = getelementptr inbounds %struct.Proto.132* %15, i64 0, i32 17
  %17 = load i32* %16, align 4, !tbaa !123
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

; <label>:19                                      ; preds = %9
  %20 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %13, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %17) #3
  br label %21

; <label>:21                                      ; preds = %19, %9
  %22 = phi i8* [ %20, %19 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %9 ]
  %23 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %13, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str7188, i64 0, i64 0), i32 200, i8* %22) #3
  %24 = load %struct.LexState.267** %10, align 8, !tbaa !85
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %24, i8* %23) #13
  unreachable

enterlevel.exit:                                  ; preds = %0
  %25 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %26 = load i32* %25, align 4, !tbaa !220
  switch i32 %26, label %89 [
    i32 271, label %29
    i32 45, label %27
    i32 35, label %28
    i32 287, label %34
    i32 289, label %43
    i32 270, label %53
    i32 276, label %59
    i32 263, label %65
    i32 280, label %71
    i32 123, label %85
    i32 265, label %86
  ]

; <label>:27                                      ; preds = %enterlevel.exit
  br label %29

; <label>:28                                      ; preds = %enterlevel.exit
  br label %29

; <label>:29                                      ; preds = %28, %27, %enterlevel.exit
  %.0.i2.ph = phi i32 [ 2, %28 ], [ 0, %27 ], [ 1, %enterlevel.exit ]
  %30 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %31 = load i32* %30, align 4, !tbaa !226
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %32 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 8)
  %33 = load %struct.FuncState.266** %6, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, i32, %struct.expdesc*, i32)* @luaK_prefix to void (%struct.FuncState.266*, i32, %struct.expdesc*, i32)*)(%struct.FuncState.266* %33, i32 %.0.i2.ph, %struct.expdesc* %v, i32 %31) #3
  br label %simpleexp.exit

; <label>:34                                      ; preds = %enterlevel.exit
  %35 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %35, align 4, !tbaa !99
  %36 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %36, align 4, !tbaa !100
  %37 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  store i32 5, i32* %37, align 4, !tbaa !92
  %38 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %39 = bitcast %union.anon.7* %38 to i32*
  store i32 0, i32* %39, align 4, !tbaa !1
  %40 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1, i32 0
  %41 = load double* %40, align 8, !tbaa !30
  %42 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1, i32 0
  store double %41, double* %42, align 8, !tbaa !30
  br label %90

; <label>:43                                      ; preds = %enterlevel.exit
  %44 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %45 = bitcast %union.SemInfo* %44 to %union.TString.115**
  %46 = load %union.TString.115** %45, align 8, !tbaa !25
  %47 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString.7*)* @luaK_stringK to i32 (%struct.FuncState.266*, %union.TString.115*)*)(%struct.FuncState.266* %7, %union.TString.115* %46) #3
  %48 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %48, align 4, !tbaa !99
  %49 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %49, align 4, !tbaa !100
  %50 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  store i32 4, i32* %50, align 4, !tbaa !92
  %51 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %52 = bitcast %union.anon.7* %51 to i32*
  store i32 %47, i32* %52, align 4, !tbaa !1
  br label %90

; <label>:53                                      ; preds = %enterlevel.exit
  %54 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %54, align 4, !tbaa !99
  %55 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %55, align 4, !tbaa !100
  %56 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  store i32 1, i32* %56, align 4, !tbaa !92
  %57 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %58 = bitcast %union.anon.7* %57 to i32*
  store i32 0, i32* %58, align 4, !tbaa !1
  br label %90

; <label>:59                                      ; preds = %enterlevel.exit
  %60 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %60, align 4, !tbaa !99
  %61 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %61, align 4, !tbaa !100
  %62 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  store i32 2, i32* %62, align 4, !tbaa !92
  %63 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %64 = bitcast %union.anon.7* %63 to i32*
  store i32 0, i32* %64, align 4, !tbaa !1
  br label %90

; <label>:65                                      ; preds = %enterlevel.exit
  %66 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %66, align 4, !tbaa !99
  %67 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %67, align 4, !tbaa !100
  %68 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  store i32 3, i32* %68, align 4, !tbaa !92
  %69 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %70 = bitcast %union.anon.7* %69 to i32*
  store i32 0, i32* %70, align 4, !tbaa !1
  br label %90

; <label>:71                                      ; preds = %enterlevel.exit
  %72 = getelementptr inbounds %struct.FuncState.266* %7, i64 0, i32 0
  %73 = load %struct.Proto.132** %72, align 8, !tbaa !82
  %74 = getelementptr inbounds %struct.Proto.132* %73, i64 0, i32 21
  %75 = load i8* %74, align 1, !tbaa !130
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %78

; <label>:77                                      ; preds = %71
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([43 x i8]* @.str8189, i64 0, i64 0)) #13
  unreachable

; <label>:78                                      ; preds = %71
  %79 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.266*, i32, i32, i32, i32)*)(%struct.FuncState.266* %7, i32 38, i32 0, i32 1, i32 0) #3
  %80 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 2
  store i32 -1, i32* %80, align 4, !tbaa !99
  %81 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 3
  store i32 -1, i32* %81, align 4, !tbaa !100
  %82 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 0
  store i32 13, i32* %82, align 4, !tbaa !92
  %83 = getelementptr inbounds %struct.expdesc* %v, i64 0, i32 1
  %84 = bitcast %union.anon.7* %83 to i32*
  store i32 %79, i32* %84, align 4, !tbaa !1
  br label %90

; <label>:85                                      ; preds = %enterlevel.exit
  call fastcc void @constructor(%struct.LexState.267* %ls, %struct.expdesc* %v) #3
  br label %simpleexp.exit

; <label>:86                                      ; preds = %enterlevel.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %87 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %88 = load i32* %87, align 4, !tbaa !226
  call fastcc void @body(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 0, i32 %88) #3
  br label %simpleexp.exit

; <label>:89                                      ; preds = %enterlevel.exit
  call fastcc void @suffixedexp(%struct.LexState.267* %ls, %struct.expdesc* %v) #3
  br label %simpleexp.exit

; <label>:90                                      ; preds = %78, %65, %59, %53, %43, %34
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %simpleexp.exit

simpleexp.exit:                                   ; preds = %90, %89, %86, %85, %29
  %91 = load i32* %25, align 4, !tbaa !220
  switch i32 %91, label %.critedge [
    i32 43, label %.lr.ph
    i32 45, label %92
    i32 42, label %93
    i32 47, label %94
    i32 37, label %95
    i32 94, label %96
    i32 279, label %97
    i32 284, label %98
    i32 281, label %99
    i32 60, label %100
    i32 283, label %101
    i32 62, label %102
    i32 282, label %103
    i32 257, label %104
    i32 272, label %105
  ]

; <label>:92                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:93                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:94                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:95                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:96                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:97                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:98                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:99                                      ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:100                                     ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:101                                     ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:102                                     ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:103                                     ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:104                                     ; preds = %simpleexp.exit
  br label %.lr.ph

; <label>:105                                     ; preds = %simpleexp.exit
  br label %.lr.ph

.lr.ph:                                           ; preds = %105, %104, %103, %102, %101, %100, %99, %98, %97, %96, %95, %94, %93, %92, %simpleexp.exit
  %op.0.ph.ph = phi i32 [ 14, %105 ], [ 13, %104 ], [ 12, %103 ], [ 11, %102 ], [ 9, %101 ], [ 8, %100 ], [ 7, %99 ], [ 10, %98 ], [ 6, %97 ], [ 5, %96 ], [ 4, %95 ], [ 3, %94 ], [ 2, %93 ], [ 1, %92 ], [ 0, %simpleexp.exit ]
  %106 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  br label %107

; <label>:107                                     ; preds = %getbinopr.exit, %.lr.ph
  %op.04 = phi i32 [ %op.0.ph.ph, %.lr.ph ], [ %118, %getbinopr.exit ]
  %108 = zext i32 %op.04 to i64
  %109 = getelementptr inbounds [15 x %struct.anon.9]* @priority, i64 0, i64 %108, i32 0
  %110 = load i8* %109, align 2, !tbaa !267
  %111 = zext i8 %110 to i32
  %112 = icmp sgt i32 %111, %limit
  br i1 %112, label %getbinopr.exit, label %.critedge

getbinopr.exit:                                   ; preds = %107
  %113 = load i32* %106, align 4, !tbaa !226
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %114 = load %struct.FuncState.266** %6, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, i32, %struct.expdesc*)* @luaK_infix to void (%struct.FuncState.266*, i32, %struct.expdesc*)*)(%struct.FuncState.266* %114, i32 %op.04, %struct.expdesc* %v) #3
  %115 = getelementptr inbounds [15 x %struct.anon.9]* @priority, i64 0, i64 %108, i32 1
  %116 = load i8* %115, align 1, !tbaa !269
  %117 = zext i8 %116 to i32
  %118 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v2, i32 %117)
  %119 = load %struct.FuncState.266** %6, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, i32, %struct.expdesc*, %struct.expdesc*, i32)* @luaK_posfix to void (%struct.FuncState.266*, i32, %struct.expdesc*, %struct.expdesc*, i32)*)(%struct.FuncState.266* %119, i32 %op.04, %struct.expdesc* %v, %struct.expdesc* %v2, i32 %113) #3
  %120 = icmp eq i32 %118, 15
  br i1 %120, label %.critedge, label %107

.critedge:                                        ; preds = %getbinopr.exit, %107, %simpleexp.exit
  %op.0.lcssa = phi i32 [ 15, %simpleexp.exit ], [ 15, %getbinopr.exit ], [ %op.04, %107 ]
  %121 = load %struct.lua_State.126** %1, align 8, !tbaa !89
  %122 = getelementptr inbounds %struct.lua_State.126* %121, i64 0, i32 12
  %123 = load i16* %122, align 2, !tbaa !142
  %124 = add i16 %123, -1
  store i16 %124, i16* %122, align 2, !tbaa !142
  ret i32 %op.0.lcssa
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @new_localvar(%struct.LexState.267* nocapture readonly %ls, %union.TString.115* %name) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 9
  %4 = load %struct.Dyndata.259** %3, align 8, !tbaa !234
  %5 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 0
  %6 = load %struct.Proto.132** %5, align 8, !tbaa !82
  %7 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 16
  %8 = load i32* %7, align 4, !tbaa !177
  %9 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 11
  %10 = load i16* %9, align 2, !tbaa !264
  %11 = sext i16 %10 to i32
  %12 = icmp slt i32 %11, %8
  br i1 %12, label %..preheader.i_crit_edge, label %13

..preheader.i_crit_edge:                          ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 7
  %.pre = load %struct.LocVar.130** %.phi.trans.insert, align 8, !tbaa !178
  br label %.preheader.i

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %15 = load %struct.lua_State.126** %14, align 8, !tbaa !89
  %16 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 7
  %17 = load %struct.LocVar.130** %16, align 8, !tbaa !178
  %18 = bitcast %struct.LocVar.130* %17 to i8*
  %19 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %15, i8* %18, i32* %7, i64 16, i32 32767, i8* getelementptr inbounds ([16 x i8]* @.str11192, i64 0, i64 0)) #3
  %20 = bitcast i8* %19 to %struct.LocVar.130*
  store %struct.LocVar.130* %20, %struct.LocVar.130** %16, align 8, !tbaa !178
  %.pre.i = load i32* %7, align 4, !tbaa !177
  br label %.preheader.i

.preheader.i:                                     ; preds = %13, %..preheader.i_crit_edge
  %21 = phi %struct.LocVar.130* [ %20, %13 ], [ %.pre, %..preheader.i_crit_edge ]
  %22 = phi i32 [ %.pre.i, %13 ], [ %8, %..preheader.i_crit_edge ]
  %23 = icmp slt i32 %8, %22
  br i1 %23, label %.lr.ph.i, label %._crit_edge.i

.lr.ph.i:                                         ; preds = %.preheader.i
  %24 = sext i32 %8 to i64
  br label %25

; <label>:25                                      ; preds = %25, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %24, %.lr.ph.i ], [ %indvars.iv.next.i, %25 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %26 = getelementptr inbounds %struct.LocVar.130* %21, i64 %indvars.iv.i, i32 0
  store %union.TString.115* null, %union.TString.115** %26, align 8, !tbaa !179
  %27 = trunc i64 %indvars.iv.next.i to i32
  %28 = icmp slt i32 %27, %22
  br i1 %28, label %25, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %25, %.preheader.i
  %29 = load i16* %9, align 2, !tbaa !264
  %30 = sext i16 %29 to i64
  %31 = getelementptr inbounds %struct.LocVar.130* %21, i64 %30, i32 0
  store %union.TString.115* %name, %union.TString.115** %31, align 8, !tbaa !179
  %32 = bitcast %union.TString.115* %name to %union.GCObject.127*
  %33 = getelementptr inbounds %union.TString.115* %name, i64 0, i32 0, i32 2
  %34 = load i8* %33, align 1, !tbaa !28
  %35 = and i8 %34, 3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %registerlocalvar.exit, label %37

; <label>:37                                      ; preds = %._crit_edge.i
  %38 = getelementptr inbounds %struct.Proto.132* %6, i64 0, i32 2
  %39 = load i8* %38, align 1, !tbaa !28
  %40 = and i8 %39, 4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %registerlocalvar.exit, label %42

; <label>:42                                      ; preds = %37
  %43 = bitcast %struct.Proto.132* %6 to %union.GCObject.127*
  %44 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %45 = load %struct.lua_State.126** %44, align 8, !tbaa !89
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrier_ to void (%struct.lua_State.126*, %union.GCObject.127*, %union.GCObject.127*)*)(%struct.lua_State.126* %45, %union.GCObject.127* %43, %union.GCObject.127* %32) #3
  %.pre3.i = load i16* %9, align 2, !tbaa !264
  br label %registerlocalvar.exit

registerlocalvar.exit:                            ; preds = %42, %37, %._crit_edge.i
  %46 = phi i16 [ %29, %37 ], [ %29, %._crit_edge.i ], [ %.pre3.i, %42 ]
  %47 = add i16 %46, 1
  store i16 %47, i16* %9, align 2, !tbaa !264
  %48 = getelementptr inbounds %struct.Dyndata.259* %4, i64 0, i32 0, i32 1
  %49 = load i32* %48, align 4, !tbaa !237
  %50 = add nsw i32 %49, 1
  %51 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 10
  %52 = load i32* %51, align 4, !tbaa !240
  %53 = sub i32 %50, %52
  %54 = icmp sgt i32 %53, 200
  br i1 %54, label %55, label %checklimit.exit

; <label>:55                                      ; preds = %registerlocalvar.exit
  %56 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 3
  %57 = load %struct.LexState.267** %56, align 8, !tbaa !85
  %58 = getelementptr inbounds %struct.LexState.267* %57, i64 0, i32 6
  %59 = load %struct.lua_State.126** %58, align 8, !tbaa !89
  %60 = load %struct.Proto.132** %5, align 8, !tbaa !82
  %61 = getelementptr inbounds %struct.Proto.132* %60, i64 0, i32 17
  %62 = load i32* %61, align 4, !tbaa !123
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %66, label %64

; <label>:64                                      ; preds = %55
  %65 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %59, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %62) #3
  br label %66

; <label>:66                                      ; preds = %64, %55
  %67 = phi i8* [ %65, %64 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %55 ]
  %68 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %59, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8]* @.str11192, i64 0, i64 0), i32 200, i8* %67) #3
  %69 = load %struct.LexState.267** %56, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %69, i8* %68) #13
  unreachable

checklimit.exit:                                  ; preds = %registerlocalvar.exit
  %70 = add nsw i32 %49, 2
  %71 = getelementptr inbounds %struct.Dyndata.259* %4, i64 0, i32 0, i32 2
  %72 = load i32* %71, align 4, !tbaa !270
  %73 = icmp sgt i32 %70, %72
  br i1 %73, label %74, label %checklimit.exit._crit_edge

checklimit.exit._crit_edge:                       ; preds = %checklimit.exit
  %.phi.trans.insert2 = getelementptr inbounds %struct.Dyndata.259* %4, i64 0, i32 0, i32 0
  %.pre3 = load %struct.Vardesc** %.phi.trans.insert2, align 8, !tbaa !250
  br label %82

; <label>:74                                      ; preds = %checklimit.exit
  %75 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %76 = load %struct.lua_State.126** %75, align 8, !tbaa !89
  %77 = getelementptr inbounds %struct.Dyndata.259* %4, i64 0, i32 0, i32 0
  %78 = load %struct.Vardesc** %77, align 8, !tbaa !250
  %79 = bitcast %struct.Vardesc* %78 to i8*
  %80 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %76, i8* %79, i32* %71, i64 2, i32 2147483645, i8* getelementptr inbounds ([16 x i8]* @.str11192, i64 0, i64 0)) #3
  %81 = bitcast i8* %80 to %struct.Vardesc*
  store %struct.Vardesc* %81, %struct.Vardesc** %77, align 8, !tbaa !250
  %.pre1 = load i32* %48, align 4, !tbaa !237
  br label %82

; <label>:82                                      ; preds = %74, %checklimit.exit._crit_edge
  %83 = phi %struct.Vardesc* [ %81, %74 ], [ %.pre3, %checklimit.exit._crit_edge ]
  %84 = phi i32 [ %.pre1, %74 ], [ %49, %checklimit.exit._crit_edge ]
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %48, align 4, !tbaa !237
  %86 = sext i32 %84 to i64
  %87 = getelementptr inbounds %struct.Vardesc* %83, i64 %86, i32 0
  store i16 %46, i16* %87, align 2, !tbaa !251
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @forbody(%struct.LexState.267* %ls, i32 %base, i32 %line, i32 %nvars, i32 %isnum) #0 {
adjustlocalvars.exit6:
  %bl.i = alloca %struct.BlockCnt, align 8
  %bl = alloca %struct.BlockCnt, align 8
  %0 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %1 = load %struct.FuncState.266** %0, align 8, !tbaa !221
  %2 = getelementptr inbounds %struct.FuncState.266* %1, i64 0, i32 12
  %3 = load i8* %2, align 1, !tbaa !96
  %4 = zext i8 %3 to i32
  %5 = add nsw i32 %4, 3
  %6 = trunc i32 %5 to i8
  store i8 %6, i8* %2, align 1, !tbaa !96
  %7 = getelementptr inbounds %struct.FuncState.266* %1, i64 0, i32 5
  %8 = load i32* %7, align 4, !tbaa !79
  %9 = and i32 %5, 255
  %10 = getelementptr inbounds %struct.FuncState.266* %1, i64 0, i32 10
  %11 = load i32* %10, align 4, !tbaa !240
  %12 = getelementptr inbounds %struct.FuncState.266* %1, i64 0, i32 3
  %13 = load %struct.LexState.267** %12, align 8, !tbaa !85
  %14 = getelementptr inbounds %struct.LexState.267* %13, i64 0, i32 9
  %15 = load %struct.Dyndata.259** %14, align 8, !tbaa !234
  %16 = getelementptr inbounds %struct.Dyndata.259* %15, i64 0, i32 0, i32 0
  %17 = load %struct.Vardesc** %16, align 8, !tbaa !250
  %18 = getelementptr inbounds %struct.FuncState.266* %1, i64 0, i32 0
  %19 = load %struct.Proto.132** %18, align 8, !tbaa !82
  %20 = getelementptr inbounds %struct.Proto.132* %19, i64 0, i32 7
  %21 = load %struct.LocVar.130** %20, align 8, !tbaa !178
  %22 = add i32 %9, %11
  %23 = add i32 %22, -3
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.Vardesc* %17, i64 %24, i32 0
  %26 = load i16* %25, align 2, !tbaa !251
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds %struct.LocVar.130* %21, i64 %27, i32 1
  store i32 %8, i32* %28, align 4, !tbaa !181
  %29 = add i32 %22, -2
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.Vardesc* %17, i64 %30, i32 0
  %32 = load i16* %31, align 2, !tbaa !251
  %33 = sext i16 %32 to i64
  %34 = getelementptr inbounds %struct.LocVar.130* %21, i64 %33, i32 1
  store i32 %8, i32* %34, align 4, !tbaa !181
  %35 = add i32 %22, -1
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %struct.Vardesc* %17, i64 %36, i32 0
  %38 = load i16* %37, align 2, !tbaa !251
  %39 = sext i16 %38 to i64
  %40 = getelementptr inbounds %struct.LocVar.130* %21, i64 %39, i32 1
  store i32 %8, i32* %40, align 4, !tbaa !181
  %41 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %42 = load i32* %41, align 4, !tbaa !220
  %43 = icmp eq i32 %42, 259
  br i1 %43, label %checknext.exit, label %44

; <label>:44                                      ; preds = %adjustlocalvars.exit6
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 259) #13
  unreachable

checknext.exit:                                   ; preds = %adjustlocalvars.exit6
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %45 = icmp ne i32 %isnum, 0
  br i1 %45, label %46, label %48

; <label>:46                                      ; preds = %checknext.exit
  %47 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %1, i32 33, i32 %base, i32 131070) #3
  br label %50

; <label>:48                                      ; preds = %checknext.exit
  %49 = call i32 bitcast (i32 (%struct.FuncState*)* @luaK_jump to i32 (%struct.FuncState.266*)*)(%struct.FuncState.266* %1) #3
  br label %50

; <label>:50                                      ; preds = %48, %46
  %51 = phi i32 [ %47, %46 ], [ %49, %48 ]
  %52 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 5
  store i8 0, i8* %52, align 2, !tbaa !242
  %53 = load i8* %2, align 1, !tbaa !96
  %54 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 3
  store i8 %53, i8* %54, align 4, !tbaa !244
  %55 = load %struct.LexState.267** %12, align 8, !tbaa !85
  %56 = getelementptr inbounds %struct.LexState.267* %55, i64 0, i32 9
  %57 = load %struct.Dyndata.259** %56, align 8, !tbaa !234
  %58 = getelementptr inbounds %struct.Dyndata.259* %57, i64 0, i32 2, i32 1
  %59 = load i32* %58, align 4, !tbaa !235
  %60 = trunc i32 %59 to i16
  %61 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 1
  store i16 %60, i16* %61, align 8, !tbaa !245
  %62 = getelementptr inbounds %struct.Dyndata.259* %57, i64 0, i32 1, i32 1
  %63 = load i32* %62, align 4, !tbaa !236
  %64 = trunc i32 %63 to i16
  %65 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 2
  store i16 %64, i16* %65, align 2, !tbaa !246
  %66 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 4
  store i8 0, i8* %66, align 1, !tbaa !247
  %67 = getelementptr inbounds %struct.FuncState.266* %1, i64 0, i32 4
  %68 = load %struct.BlockCnt** %67, align 8, !tbaa !241
  %69 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 0
  store %struct.BlockCnt* %68, %struct.BlockCnt** %69, align 8, !tbaa !248
  store %struct.BlockCnt* %bl, %struct.BlockCnt** %67, align 8, !tbaa !241
  %70 = load %struct.FuncState.266** %0, align 8, !tbaa !221
  %71 = getelementptr inbounds %struct.FuncState.266* %70, i64 0, i32 12
  %72 = load i8* %71, align 1, !tbaa !96
  %73 = zext i8 %72 to i32
  %74 = add nsw i32 %73, %nvars
  %75 = trunc i32 %74 to i8
  store i8 %75, i8* %71, align 1, !tbaa !96
  %76 = icmp eq i32 %nvars, 0
  br i1 %76, label %adjustlocalvars.exit3, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %50
  %77 = getelementptr inbounds %struct.FuncState.266* %70, i64 0, i32 5
  %78 = load i32* %77, align 4, !tbaa !79
  %79 = and i32 %74, 255
  %80 = getelementptr inbounds %struct.FuncState.266* %70, i64 0, i32 10
  %81 = load i32* %80, align 4, !tbaa !240
  %82 = getelementptr inbounds %struct.FuncState.266* %70, i64 0, i32 3
  %83 = load %struct.LexState.267** %82, align 8, !tbaa !85
  %84 = getelementptr inbounds %struct.LexState.267* %83, i64 0, i32 9
  %85 = load %struct.Dyndata.259** %84, align 8, !tbaa !234
  %86 = getelementptr inbounds %struct.Dyndata.259* %85, i64 0, i32 0, i32 0
  %87 = load %struct.Vardesc** %86, align 8, !tbaa !250
  %88 = getelementptr inbounds %struct.FuncState.266* %70, i64 0, i32 0
  %89 = load %struct.Proto.132** %88, align 8, !tbaa !82
  %90 = getelementptr inbounds %struct.Proto.132* %89, i64 0, i32 7
  %91 = load %struct.LocVar.130** %90, align 8, !tbaa !178
  %92 = sext i32 %nvars to i64
  %93 = add i32 %81, %79
  br label %94

; <label>:94                                      ; preds = %94, %.lr.ph.i
  %indvars.iv.i1 = phi i64 [ %92, %.lr.ph.i ], [ %indvars.iv.next.i2, %94 ]
  %95 = trunc i64 %indvars.iv.i1 to i32
  %96 = sub i32 %93, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.Vardesc* %87, i64 %97, i32 0
  %99 = load i16* %98, align 2, !tbaa !251
  %100 = sext i16 %99 to i64
  %101 = getelementptr inbounds %struct.LocVar.130* %91, i64 %100, i32 1
  store i32 %78, i32* %101, align 4, !tbaa !181
  %indvars.iv.next.i2 = add nsw i64 %indvars.iv.i1, -1
  %102 = trunc i64 %indvars.iv.next.i2 to i32
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %adjustlocalvars.exit3, label %94

adjustlocalvars.exit3:                            ; preds = %94, %50
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %1, i32 %nvars) #3
  %104 = bitcast %struct.BlockCnt* %bl.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %104) #3
  %105 = load %struct.FuncState.266** %0, align 8, !tbaa !221
  %106 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 5
  store i8 0, i8* %106, align 2, !tbaa !242
  %107 = getelementptr inbounds %struct.FuncState.266* %105, i64 0, i32 12
  %108 = load i8* %107, align 1, !tbaa !96
  %109 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 3
  store i8 %108, i8* %109, align 4, !tbaa !244
  %110 = getelementptr inbounds %struct.FuncState.266* %105, i64 0, i32 3
  %111 = load %struct.LexState.267** %110, align 8, !tbaa !85
  %112 = getelementptr inbounds %struct.LexState.267* %111, i64 0, i32 9
  %113 = load %struct.Dyndata.259** %112, align 8, !tbaa !234
  %114 = getelementptr inbounds %struct.Dyndata.259* %113, i64 0, i32 2, i32 1
  %115 = load i32* %114, align 4, !tbaa !235
  %116 = trunc i32 %115 to i16
  %117 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 1
  store i16 %116, i16* %117, align 8, !tbaa !245
  %118 = getelementptr inbounds %struct.Dyndata.259* %113, i64 0, i32 1, i32 1
  %119 = load i32* %118, align 4, !tbaa !236
  %120 = trunc i32 %119 to i16
  %121 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 2
  store i16 %120, i16* %121, align 2, !tbaa !246
  %122 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 4
  store i8 0, i8* %122, align 1, !tbaa !247
  %123 = getelementptr inbounds %struct.FuncState.266* %105, i64 0, i32 4
  %124 = load %struct.BlockCnt** %123, align 8, !tbaa !241
  %125 = getelementptr inbounds %struct.BlockCnt* %bl.i, i64 0, i32 0
  store %struct.BlockCnt* %124, %struct.BlockCnt** %125, align 8, !tbaa !248
  store %struct.BlockCnt* %bl.i, %struct.BlockCnt** %123, align 8, !tbaa !241
  br label %126

; <label>:126                                     ; preds = %128, %adjustlocalvars.exit3
  %127 = load i32* %41, align 4, !tbaa !220
  switch i32 %127, label %128 [
    i32 260, label %block.exit
    i32 261, label %block.exit
    i32 262, label %block.exit
    i32 286, label %block.exit
    i32 277, label %block.exit
  ]

; <label>:128                                     ; preds = %126
  %129 = icmp eq i32 %127, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %129, label %block.exit, label %126

block.exit:                                       ; preds = %128, %126, %126, %126, %126, %126
  call fastcc void @leaveblock(%struct.FuncState.266* %105) #3
  call void @llvm.lifetime.end(i64 16, i8* %104) #3
  call fastcc void @leaveblock(%struct.FuncState.266* %1)
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_patchtohere to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %1, i32 %51) #3
  br i1 %45, label %130, label %132

; <label>:130                                     ; preds = %block.exit
  %131 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %1, i32 32, i32 %base, i32 131070) #3
  br label %136

; <label>:132                                     ; preds = %block.exit
  %133 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.266*, i32, i32, i32, i32)*)(%struct.FuncState.266* %1, i32 34, i32 %base, i32 0, i32 %nvars) #3
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %1, i32 %line) #3
  %134 = add nsw i32 %base, 2
  %135 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %1, i32 35, i32 %134, i32 131070) #3
  br label %136

; <label>:136                                     ; preds = %132, %130
  %endfor.0 = phi i32 [ %131, %130 ], [ %135, %132 ]
  %137 = add nsw i32 %51, 1
  call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %1, i32 %endfor.0, i32 %137) #3
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %1, i32 %line) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @adjust_assign(%struct.LexState.267* nocapture readonly %ls, i32 %nvars, i32 %nexps, %struct.expdesc* %e) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = sub nsw i32 %nvars, %nexps
  %4 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  %5 = load i32* %4, align 4, !tbaa !92
  switch i32 %5, label %12 [
    i32 12, label %6
    i32 13, label %6
    i32 0, label %13
  ]

; <label>:6                                       ; preds = %0, %0
  %7 = add nsw i32 %3, 1
  %8 = icmp slt i32 %7, 0
  %. = select i1 %8, i32 0, i32 %7
  tail call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.266*, %struct.expdesc*, i32)*)(%struct.FuncState.266* %2, %struct.expdesc* %e, i32 %.) #3
  %9 = icmp sgt i32 %., 1
  br i1 %9, label %10, label %19

; <label>:10                                      ; preds = %6
  %11 = add nsw i32 %., -1
  tail call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %2, i32 %11) #3
  br label %19

; <label>:12                                      ; preds = %0
  tail call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %e) #3
  br label %13

; <label>:13                                      ; preds = %12, %0
  %14 = icmp sgt i32 %3, 0
  br i1 %14, label %15, label %19

; <label>:15                                      ; preds = %13
  %16 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 14
  %17 = load i8* %16, align 1, !tbaa !87
  %18 = zext i8 %17 to i32
  tail call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %2, i32 %3) #3
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_nil to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %2, i32 %18, i32 %3) #3
  br label %19

; <label>:19                                      ; preds = %15, %13, %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @singlevar(%struct.LexState.267* %ls, %struct.expdesc* %var) #0 {
  %key = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %2 = load i32* %1, align 4, !tbaa !220
  %3 = icmp eq i32 %2, 288
  br i1 %3, label %str_checkname.exit, label %4

; <label>:4                                       ; preds = %0
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit:                               ; preds = %0
  %5 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %6 = bitcast %union.SemInfo* %5 to %union.TString.115**
  %7 = load %union.TString.115** %6, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %8 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %9 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %10 = call fastcc i32 @singlevaraux(%struct.FuncState.266* %9, %union.TString.115* %7, %struct.expdesc* %var, i32 1)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %23

; <label>:12                                      ; preds = %str_checkname.exit
  %13 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 11
  %14 = load %union.TString.115** %13, align 8, !tbaa !228
  %15 = call fastcc i32 @singlevaraux(%struct.FuncState.266* %9, %union.TString.115* %14, %struct.expdesc* %var, i32 1)
  %16 = load %struct.FuncState.266** %8, align 8, !tbaa !221
  %17 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString.7*)* @luaK_stringK to i32 (%struct.FuncState.266*, %union.TString.115*)*)(%struct.FuncState.266* %16, %union.TString.115* %7) #3
  %18 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 2
  store i32 -1, i32* %18, align 8, !tbaa !99
  %19 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 3
  store i32 -1, i32* %19, align 4, !tbaa !100
  %20 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 0
  store i32 4, i32* %20, align 8, !tbaa !92
  %21 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 1
  %22 = bitcast %union.anon.7* %21 to i32*
  store i32 %17, i32* %22, align 8, !tbaa !1
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_indexed to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %9, %struct.expdesc* %var, %struct.expdesc* %key) #3
  br label %23

; <label>:23                                      ; preds = %12, %str_checkname.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @fieldsel(%struct.LexState.267* %ls, %struct.expdesc* %v) #0 {
  %key = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2anyregup to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %v) #3
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %4 = load i32* %3, align 4, !tbaa !220
  %5 = icmp eq i32 %4, 288
  br i1 %5, label %checkname.exit, label %6

; <label>:6                                       ; preds = %0
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

checkname.exit:                                   ; preds = %0
  %7 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %8 = bitcast %union.SemInfo* %7 to %union.TString.115**
  %9 = load %union.TString.115** %8, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %10 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %11 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString.7*)* @luaK_stringK to i32 (%struct.FuncState.266*, %union.TString.115*)*)(%struct.FuncState.266* %10, %union.TString.115* %9) #3
  %12 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 2
  store i32 -1, i32* %12, align 8, !tbaa !99
  %13 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 3
  store i32 -1, i32* %13, align 4, !tbaa !100
  %14 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 0
  store i32 4, i32* %14, align 8, !tbaa !92
  %15 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 1
  %16 = bitcast %union.anon.7* %15 to i32*
  store i32 %11, i32* %16, align 8, !tbaa !1
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_indexed to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %v, %struct.expdesc* %key) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @body(%struct.LexState.267* %ls, %struct.expdesc* %e, i32 %ismethod, i32 %line) #0 {
  %new_fs = alloca %struct.FuncState.266, align 8
  %bl = alloca %struct.BlockCnt, align 8
  %1 = bitcast %struct.FuncState.266* %new_fs to i8*
  call void @llvm.lifetime.start(i64 72, i8* %1) #3
  %2 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %3 = load %struct.lua_State.126** %2, align 8, !tbaa !89
  %4 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %5 = load %struct.FuncState.266** %4, align 8, !tbaa !221
  %6 = getelementptr inbounds %struct.FuncState.266* %5, i64 0, i32 0
  %7 = load %struct.Proto.132** %6, align 8, !tbaa !82
  %8 = getelementptr inbounds %struct.FuncState.266* %5, i64 0, i32 9
  %9 = load i32* %8, align 4, !tbaa !239
  %10 = getelementptr inbounds %struct.Proto.132* %7, i64 0, i32 15
  %11 = load i32* %10, align 4, !tbaa !173
  %12 = icmp slt i32 %9, %11
  %.pre3.i = getelementptr inbounds %struct.Proto.132* %7, i64 0, i32 5
  br i1 %12, label %.loopexit.i, label %13

; <label>:13                                      ; preds = %0
  %14 = load %struct.Proto.132*** %.pre3.i, align 8, !tbaa !174
  %15 = bitcast %struct.Proto.132** %14 to i8*
  %16 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %3, i8* %15, i32* %10, i64 8, i32 262143, i8* getelementptr inbounds ([10 x i8]* @.str12193, i64 0, i64 0)) #3
  %17 = bitcast i8* %16 to %struct.Proto.132**
  store %struct.Proto.132** %17, %struct.Proto.132*** %.pre3.i, align 8, !tbaa !174
  %18 = load i32* %10, align 4, !tbaa !173
  %19 = icmp slt i32 %11, %18
  br i1 %19, label %.lr.ph.i, label %.loopexit.i

.lr.ph.i:                                         ; preds = %13
  %20 = sext i32 %11 to i64
  %indvars.iv.next.i10 = add nsw i64 %20, 1
  %21 = getelementptr inbounds %struct.Proto.132** %17, i64 %20
  store %struct.Proto.132* null, %struct.Proto.132** %21, align 8, !tbaa !25
  %22 = trunc i64 %indvars.iv.next.i10 to i32
  %23 = icmp slt i32 %22, %18
  br i1 %23, label %._crit_edge.i, label %.loopexit.i

._crit_edge.i:                                    ; preds = %._crit_edge.i, %.lr.ph.i
  %indvars.iv.next.i11 = phi i64 [ %indvars.iv.next.i, %._crit_edge.i ], [ %indvars.iv.next.i10, %.lr.ph.i ]
  %.pre.i = load %struct.Proto.132*** %.pre3.i, align 8, !tbaa !174
  %indvars.iv.next.i = add nsw i64 %indvars.iv.next.i11, 1
  %24 = getelementptr inbounds %struct.Proto.132** %.pre.i, i64 %indvars.iv.next.i11
  store %struct.Proto.132* null, %struct.Proto.132** %24, align 8, !tbaa !25
  %25 = trunc i64 %indvars.iv.next.i to i32
  %26 = icmp slt i32 %25, %18
  br i1 %26, label %._crit_edge.i, label %.loopexit.i

.loopexit.i:                                      ; preds = %._crit_edge.i, %.lr.ph.i, %13, %0
  %27 = call %struct.Proto.132* @luaF_newproto(%struct.lua_State.126* %3) #3
  %28 = load i32* %8, align 4, !tbaa !239
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %8, align 4, !tbaa !239
  %30 = sext i32 %28 to i64
  %31 = load %struct.Proto.132*** %.pre3.i, align 8, !tbaa !174
  %32 = getelementptr inbounds %struct.Proto.132** %31, i64 %30
  store %struct.Proto.132* %27, %struct.Proto.132** %32, align 8, !tbaa !25
  %33 = bitcast %struct.Proto.132* %27 to %union.GCObject.127*
  %34 = getelementptr inbounds %struct.Proto.132* %27, i64 0, i32 2
  %35 = load i8* %34, align 1, !tbaa !28
  %36 = and i8 %35, 3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %addprototype.exit, label %38

; <label>:38                                      ; preds = %.loopexit.i
  %39 = getelementptr inbounds %struct.Proto.132* %7, i64 0, i32 2
  %40 = load i8* %39, align 1, !tbaa !28
  %41 = and i8 %40, 4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %addprototype.exit, label %43

; <label>:43                                      ; preds = %38
  %44 = bitcast %struct.Proto.132* %7 to %union.GCObject.127*
  call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrier_ to void (%struct.lua_State.126*, %union.GCObject.127*, %union.GCObject.127*)*)(%struct.lua_State.126* %3, %union.GCObject.127* %44, %union.GCObject.127* %33) #3
  br label %addprototype.exit

addprototype.exit:                                ; preds = %43, %38, %.loopexit.i
  %45 = getelementptr inbounds %struct.FuncState.266* %new_fs, i64 0, i32 0
  store %struct.Proto.132* %27, %struct.Proto.132** %45, align 8, !tbaa !82
  %46 = getelementptr inbounds %struct.Proto.132* %27, i64 0, i32 17
  store i32 %line, i32* %46, align 4, !tbaa !123
  call fastcc void @open_func(%struct.LexState.267* %ls, %struct.FuncState.266* %new_fs, %struct.BlockCnt* %bl)
  %47 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %48 = load i32* %47, align 4, !tbaa !220
  %49 = icmp eq i32 %48, 40
  br i1 %49, label %checknext.exit, label %50

; <label>:50                                      ; preds = %addprototype.exit
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 40) #13
  unreachable

checknext.exit:                                   ; preds = %addprototype.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %51 = icmp eq i32 %ismethod, 0
  br i1 %51, label %checknext.exit.adjustlocalvars.exit_crit_edge, label %adjustlocalvars.exit.loopexit14

checknext.exit.adjustlocalvars.exit_crit_edge:    ; preds = %checknext.exit
  %.pre = load %struct.FuncState.266** %4, align 8, !tbaa !221
  %.phi.trans.insert = getelementptr inbounds %struct.FuncState.266* %.pre, i64 0, i32 0
  %.pre15 = load %struct.Proto.132** %.phi.trans.insert, align 8, !tbaa !82
  br label %adjustlocalvars.exit

adjustlocalvars.exit.loopexit14:                  ; preds = %checknext.exit
  %52 = call %union.TString.115* bitcast (%union.TString* (%struct.LexState.194*, i8*, i64)* @luaX_newstring to %union.TString.115* (%struct.LexState.267*, i8*, i64)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([5 x i8]* @.str9190, i64 0, i64 0), i64 4) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %52) #3
  %53 = load %struct.FuncState.266** %4, align 8, !tbaa !221
  %54 = getelementptr inbounds %struct.FuncState.266* %53, i64 0, i32 12
  %55 = load i8* %54, align 1, !tbaa !96
  %56 = zext i8 %55 to i32
  %57 = add nsw i32 %56, 1
  %58 = trunc i32 %57 to i8
  store i8 %58, i8* %54, align 1, !tbaa !96
  %59 = getelementptr inbounds %struct.FuncState.266* %53, i64 0, i32 5
  %60 = load i32* %59, align 4, !tbaa !79
  %61 = and i32 %57, 255
  %62 = getelementptr inbounds %struct.FuncState.266* %53, i64 0, i32 10
  %63 = load i32* %62, align 4, !tbaa !240
  %64 = getelementptr inbounds %struct.FuncState.266* %53, i64 0, i32 3
  %65 = load %struct.LexState.267** %64, align 8, !tbaa !85
  %66 = getelementptr inbounds %struct.LexState.267* %65, i64 0, i32 9
  %67 = load %struct.Dyndata.259** %66, align 8, !tbaa !234
  %68 = getelementptr inbounds %struct.Dyndata.259* %67, i64 0, i32 0, i32 0
  %69 = load %struct.Vardesc** %68, align 8, !tbaa !250
  %70 = getelementptr inbounds %struct.FuncState.266* %53, i64 0, i32 0
  %71 = load %struct.Proto.132** %70, align 8, !tbaa !82
  %72 = getelementptr inbounds %struct.Proto.132* %71, i64 0, i32 7
  %73 = load %struct.LocVar.130** %72, align 8, !tbaa !178
  %74 = add i32 %61, %63
  %75 = add i32 %74, -1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.Vardesc* %69, i64 %76, i32 0
  %78 = load i16* %77, align 2, !tbaa !251
  %79 = sext i16 %78 to i64
  %80 = getelementptr inbounds %struct.LocVar.130* %73, i64 %79, i32 1
  store i32 %60, i32* %80, align 4, !tbaa !181
  br label %adjustlocalvars.exit

adjustlocalvars.exit:                             ; preds = %adjustlocalvars.exit.loopexit14, %checknext.exit.adjustlocalvars.exit_crit_edge
  %81 = phi %struct.Proto.132* [ %.pre15, %checknext.exit.adjustlocalvars.exit_crit_edge ], [ %71, %adjustlocalvars.exit.loopexit14 ]
  %82 = phi %struct.FuncState.266* [ %.pre, %checknext.exit.adjustlocalvars.exit_crit_edge ], [ %53, %adjustlocalvars.exit.loopexit14 ]
  %83 = getelementptr inbounds %struct.Proto.132* %81, i64 0, i32 21
  store i8 0, i8* %83, align 1, !tbaa !130
  %84 = load i32* %47, align 4, !tbaa !220
  %85 = icmp eq i32 %84, 41
  br i1 %85, label %.critedge.i, label %.preheader.i

.preheader.i:                                     ; preds = %adjustlocalvars.exit
  %86 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %87 = bitcast %union.SemInfo* %86 to %union.TString.115**
  br label %88

thread-pre-split.i:                               ; preds = %95
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %.pr.i = load i32* %47, align 4, !tbaa !220
  br label %88

; <label>:88                                      ; preds = %thread-pre-split.i, %.preheader.i
  %89 = phi i32 [ %.pr.i, %thread-pre-split.i ], [ %84, %.preheader.i ]
  %nparams.0.i = phi i32 [ %93, %thread-pre-split.i ], [ 0, %.preheader.i ]
  switch i32 %89, label %90 [
    i32 288, label %91
    i32 280, label %.thread.i
  ]

.thread.i:                                        ; preds = %88
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  store i8 1, i8* %83, align 1, !tbaa !130
  br label %.critedge.i

; <label>:90                                      ; preds = %88
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([25 x i8]* @.str10191, i64 0, i64 0)) #13
  unreachable

; <label>:91                                      ; preds = %88
  %92 = load %union.TString.115** %87, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  call fastcc void @new_localvar(%struct.LexState.267* %ls, %union.TString.115* %92) #3
  %93 = add nsw i32 %nparams.0.i, 1
  %.pr1.i = load i8* %83, align 1, !tbaa !130
  %94 = icmp eq i8 %.pr1.i, 0
  br i1 %94, label %95, label %.critedge.i

; <label>:95                                      ; preds = %91
  %96 = load i32* %47, align 4, !tbaa !220
  %97 = icmp eq i32 %96, 44
  br i1 %97, label %thread-pre-split.i, label %.critedge.i

.critedge.i:                                      ; preds = %95, %91, %.thread.i, %adjustlocalvars.exit
  %nparams.2.i = phi i32 [ 0, %adjustlocalvars.exit ], [ %nparams.0.i, %.thread.i ], [ %93, %91 ], [ %93, %95 ]
  %98 = load %struct.FuncState.266** %4, align 8, !tbaa !221
  %99 = getelementptr inbounds %struct.FuncState.266* %98, i64 0, i32 12
  %100 = load i8* %99, align 1, !tbaa !96
  %101 = zext i8 %100 to i32
  %102 = add nsw i32 %101, %nparams.2.i
  %103 = trunc i32 %102 to i8
  store i8 %103, i8* %99, align 1, !tbaa !96
  %104 = icmp eq i32 %nparams.2.i, 0
  br i1 %104, label %parlist.exit, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.critedge.i
  %105 = getelementptr inbounds %struct.FuncState.266* %98, i64 0, i32 5
  %106 = load i32* %105, align 4, !tbaa !79
  %107 = and i32 %102, 255
  %108 = getelementptr inbounds %struct.FuncState.266* %98, i64 0, i32 10
  %109 = load i32* %108, align 4, !tbaa !240
  %110 = getelementptr inbounds %struct.FuncState.266* %98, i64 0, i32 3
  %111 = load %struct.LexState.267** %110, align 8, !tbaa !85
  %112 = getelementptr inbounds %struct.LexState.267* %111, i64 0, i32 9
  %113 = load %struct.Dyndata.259** %112, align 8, !tbaa !234
  %114 = getelementptr inbounds %struct.Dyndata.259* %113, i64 0, i32 0, i32 0
  %115 = load %struct.Vardesc** %114, align 8, !tbaa !250
  %116 = getelementptr inbounds %struct.FuncState.266* %98, i64 0, i32 0
  %117 = load %struct.Proto.132** %116, align 8, !tbaa !82
  %118 = getelementptr inbounds %struct.Proto.132* %117, i64 0, i32 7
  %119 = load %struct.LocVar.130** %118, align 8, !tbaa !178
  %120 = sext i32 %nparams.2.i to i64
  %121 = add i32 %109, %107
  br label %122

; <label>:122                                     ; preds = %122, %.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ %120, %.lr.ph.i.i ], [ %indvars.iv.next.i.i, %122 ]
  %123 = trunc i64 %indvars.iv.i.i to i32
  %124 = sub i32 %121, %123
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %struct.Vardesc* %115, i64 %125, i32 0
  %127 = load i16* %126, align 2, !tbaa !251
  %128 = sext i16 %127 to i64
  %129 = getelementptr inbounds %struct.LocVar.130* %119, i64 %128, i32 1
  store i32 %106, i32* %129, align 4, !tbaa !181
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, -1
  %130 = trunc i64 %indvars.iv.next.i.i to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %parlist.exit, label %122

parlist.exit:                                     ; preds = %122, %.critedge.i
  %132 = getelementptr inbounds %struct.FuncState.266* %82, i64 0, i32 12
  %133 = load i8* %132, align 1, !tbaa !96
  %134 = getelementptr inbounds %struct.Proto.132* %81, i64 0, i32 20
  store i8 %133, i8* %134, align 1, !tbaa !131
  %135 = zext i8 %133 to i32
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %82, i32 %135) #3
  %136 = load i32* %47, align 4, !tbaa !220
  %137 = icmp eq i32 %136, 41
  br i1 %137, label %checknext.exit5, label %138

; <label>:138                                     ; preds = %parlist.exit
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 41) #13
  unreachable

checknext.exit5:                                  ; preds = %parlist.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %139

; <label>:139                                     ; preds = %141, %checknext.exit5
  %140 = load i32* %47, align 4, !tbaa !220
  switch i32 %140, label %141 [
    i32 260, label %statlist.exit
    i32 261, label %statlist.exit
    i32 262, label %statlist.exit
    i32 286, label %statlist.exit
    i32 277, label %statlist.exit
  ]

; <label>:141                                     ; preds = %139
  %142 = icmp eq i32 %140, 274
  call fastcc void @statement(%struct.LexState.267* %ls) #3
  br i1 %142, label %statlist.exit, label %139

statlist.exit:                                    ; preds = %141, %139, %139, %139, %139, %139
  %143 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %144 = load i32* %143, align 4, !tbaa !226
  %145 = load %struct.Proto.132** %45, align 8, !tbaa !82
  %146 = getelementptr inbounds %struct.Proto.132* %145, i64 0, i32 18
  store i32 %144, i32* %146, align 4, !tbaa !124
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 262, i32 265, i32 %line)
  %147 = load %struct.FuncState.266** %4, align 8, !tbaa !221
  %148 = getelementptr inbounds %struct.FuncState.266* %147, i64 0, i32 2
  %149 = load %struct.FuncState.266** %148, align 8, !tbaa !238
  %150 = getelementptr inbounds %struct.FuncState.266* %149, i64 0, i32 9
  %151 = load i32* %150, align 4, !tbaa !239
  %152 = add nsw i32 %151, -1
  %153 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32)* @luaK_codeABx to i32 (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %149, i32 37, i32 0, i32 %152) #3
  %154 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  store i32 -1, i32* %154, align 4, !tbaa !99
  %155 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  store i32 -1, i32* %155, align 4, !tbaa !100
  %156 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  store i32 11, i32* %156, align 4, !tbaa !92
  %157 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %158 = bitcast %union.anon.7* %157 to i32*
  store i32 %153, i32* %158, align 4, !tbaa !1
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %149, %struct.expdesc* %e) #3
  call fastcc void @close_func(%struct.LexState.267* %ls)
  call void @llvm.lifetime.end(i64 72, i8* %1) #3
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @semerror(%struct.LexState.267* %ls, i8* %msg) #4 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  store i32 0, i32* %1, align 4, !tbaa !220
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* %msg) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @closegoto(%struct.LexState.267* %ls, i32 %g, %struct.Labeldesc.257* nocapture readonly %label) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 9
  %4 = load %struct.Dyndata.259** %3, align 8, !tbaa !234
  %5 = sext i32 %g to i64
  %6 = getelementptr inbounds %struct.Dyndata.259* %4, i64 0, i32 1, i32 0
  %7 = load %struct.Labeldesc.257** %6, align 8, !tbaa !254
  %8 = getelementptr inbounds %struct.Labeldesc.257* %7, i64 %5, i32 3
  %9 = load i8* %8, align 1, !tbaa !259
  %10 = getelementptr inbounds %struct.Labeldesc.257* %label, i64 0, i32 3
  %11 = load i8* %10, align 1, !tbaa !259
  %12 = icmp ult i8 %9, %11
  br i1 %12, label %13, label %43

; <label>:13                                      ; preds = %0
  %14 = zext i8 %9 to i32
  %15 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 10
  %16 = load i32* %15, align 4, !tbaa !240
  %17 = add nsw i32 %16, %14
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 3
  %20 = load %struct.LexState.267** %19, align 8, !tbaa !85
  %21 = getelementptr inbounds %struct.LexState.267* %20, i64 0, i32 9
  %22 = load %struct.Dyndata.259** %21, align 8, !tbaa !234
  %23 = getelementptr inbounds %struct.Dyndata.259* %22, i64 0, i32 0, i32 0
  %24 = load %struct.Vardesc** %23, align 8, !tbaa !250
  %25 = getelementptr inbounds %struct.Vardesc* %24, i64 %18, i32 0
  %26 = load i16* %25, align 2, !tbaa !251
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 0
  %29 = load %struct.Proto.132** %28, align 8, !tbaa !82
  %30 = getelementptr inbounds %struct.Proto.132* %29, i64 0, i32 7
  %31 = load %struct.LocVar.130** %30, align 8, !tbaa !178
  %32 = getelementptr inbounds %struct.LocVar.130* %31, i64 %27, i32 0
  %33 = load %union.TString.115** %32, align 8, !tbaa !179
  %34 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %35 = load %struct.lua_State.126** %34, align 8, !tbaa !89
  %36 = getelementptr inbounds %struct.Labeldesc.257* %7, i64 %5, i32 0
  %37 = load %union.TString.115** %36, align 8, !tbaa !255
  %38 = getelementptr inbounds %union.TString.115* %37, i64 1
  %39 = getelementptr inbounds %struct.Labeldesc.257* %7, i64 %5, i32 2
  %40 = load i32* %39, align 4, !tbaa !257
  %41 = getelementptr inbounds %union.TString.115* %33, i64 1
  %42 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %35, i8* getelementptr inbounds ([56 x i8]* @.str2183, i64 0, i64 0), %union.TString.115* %38, i32 %40, %union.TString.115* %41) #3
  tail call fastcc void @semerror(%struct.LexState.267* %ls, i8* %42) #14
  unreachable

; <label>:43                                      ; preds = %0
  %44 = getelementptr inbounds %struct.Labeldesc.257* %7, i64 %5, i32 1
  %45 = load i32* %44, align 4, !tbaa !260
  %46 = getelementptr inbounds %struct.Labeldesc.257* %label, i64 0, i32 1
  %47 = load i32* %46, align 4, !tbaa !260
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchlist to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %2, i32 %45, i32 %47) #3
  %48 = getelementptr inbounds %struct.Dyndata.259* %4, i64 0, i32 1, i32 1
  %49 = load i32* %48, align 4, !tbaa !253
  %50 = add nsw i32 %49, -1
  %51 = icmp sgt i32 %50, %g
  br i1 %51, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %43
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ %5, %43 ]
  %52 = load %struct.Labeldesc.257** %6, align 8, !tbaa !254
  %53 = getelementptr inbounds %struct.Labeldesc.257* %52, i64 %indvars.iv
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %54 = getelementptr inbounds %struct.Labeldesc.257* %52, i64 %indvars.iv.next
  %55 = bitcast %struct.Labeldesc.257* %53 to i8*
  %56 = bitcast %struct.Labeldesc.257* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 24, i32 8, i1 false), !tbaa.struct !271
  %57 = load i32* %48, align 4, !tbaa !253
  %58 = add nsw i32 %57, -1
  %59 = trunc i64 %indvars.iv.next to i32
  %60 = icmp slt i32 %59, %58
  br i1 %60, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %43
  %.lcssa1 = phi i32 [ %50, %43 ], [ %58, %.lr.ph ]
  store i32 %.lcssa1, i32* %48, align 4, !tbaa !253
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @gotostat(%struct.LexState.267* %ls, i32 %pc) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !226
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %4 = load i32* %3, align 4, !tbaa !220
  %5 = icmp eq i32 %4, 266
  tail call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br i1 %5, label %6, label %13

; <label>:6                                       ; preds = %0
  %7 = load i32* %3, align 4, !tbaa !220
  %8 = icmp eq i32 %7, 288
  br i1 %8, label %str_checkname.exit, label %9

; <label>:9                                       ; preds = %6
  tail call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

str_checkname.exit:                               ; preds = %6
  %10 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %11 = bitcast %union.SemInfo* %10 to %union.TString.115**
  %12 = load %union.TString.115** %11, align 8, !tbaa !25
  tail call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %17

; <label>:13                                      ; preds = %0
  %14 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %15 = load %struct.lua_State.126** %14, align 8, !tbaa !89
  %16 = tail call %union.TString.115* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString.115* (%struct.lua_State.126*, i8*)*)(%struct.lua_State.126* %15, i8* getelementptr inbounds ([6 x i8]* @.str3184, i64 0, i64 0)) #3
  br label %17

; <label>:17                                      ; preds = %13, %str_checkname.exit
  %label.0 = phi %union.TString.115* [ %12, %str_checkname.exit ], [ %16, %13 ]
  %18 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 9
  %19 = load %struct.Dyndata.259** %18, align 8, !tbaa !234
  %20 = getelementptr inbounds %struct.Dyndata.259* %19, i64 0, i32 1
  %21 = getelementptr inbounds %struct.Dyndata.259* %19, i64 0, i32 1, i32 1
  %22 = load i32* %21, align 4, !tbaa !253
  %23 = getelementptr inbounds %struct.Dyndata.259* %19, i64 0, i32 1, i32 2
  %24 = load i32* %23, align 4, !tbaa !258
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %._crit_edge.i, label %26

._crit_edge.i:                                    ; preds = %17
  %.phi.trans.insert.i = getelementptr inbounds %struct.Labellist.258* %20, i64 0, i32 0
  %.pre.i = load %struct.Labeldesc.257** %.phi.trans.insert.i, align 8, !tbaa !254
  br label %newlabelentry.exit

; <label>:26                                      ; preds = %17
  %27 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %28 = load %struct.lua_State.126** %27, align 8, !tbaa !89
  %29 = getelementptr inbounds %struct.Labellist.258* %20, i64 0, i32 0
  %30 = load %struct.Labeldesc.257** %29, align 8, !tbaa !254
  %31 = bitcast %struct.Labeldesc.257* %30 to i8*
  %32 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i32*, i64, i32, i8*)* @luaM_growaux_ to i8* (%struct.lua_State.126*, i8*, i32*, i64, i32, i8*)*)(%struct.lua_State.126* %28, i8* %31, i32* %23, i64 24, i32 32767, i8* getelementptr inbounds ([13 x i8]* @.str4185, i64 0, i64 0)) #3
  %33 = bitcast i8* %32 to %struct.Labeldesc.257*
  store %struct.Labeldesc.257* %33, %struct.Labeldesc.257** %29, align 8, !tbaa !254
  %.pre1.i = load i32* %21, align 4, !tbaa !253
  br label %newlabelentry.exit

newlabelentry.exit:                               ; preds = %26, %._crit_edge.i
  %34 = phi i32 [ %22, %._crit_edge.i ], [ %.pre1.i, %26 ]
  %35 = phi %struct.Labeldesc.257* [ %.pre.i, %._crit_edge.i ], [ %33, %26 ]
  %36 = sext i32 %22 to i64
  %37 = getelementptr inbounds %struct.Labeldesc.257* %35, i64 %36, i32 0
  store %union.TString.115* %label.0, %union.TString.115** %37, align 8, !tbaa !255
  %38 = getelementptr inbounds %struct.Labeldesc.257* %35, i64 %36, i32 2
  store i32 %2, i32* %38, align 4, !tbaa !257
  %39 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %40 = load %struct.FuncState.266** %39, align 8, !tbaa !221
  %41 = getelementptr inbounds %struct.FuncState.266* %40, i64 0, i32 12
  %42 = load i8* %41, align 1, !tbaa !96
  %43 = getelementptr inbounds %struct.Labeldesc.257* %35, i64 %36, i32 3
  store i8 %42, i8* %43, align 1, !tbaa !259
  %44 = getelementptr inbounds %struct.Labeldesc.257* %35, i64 %36, i32 1
  store i32 %pc, i32* %44, align 4, !tbaa !260
  %45 = add nsw i32 %34, 1
  store i32 %45, i32* %21, align 4, !tbaa !253
  %46 = tail call fastcc i32 @findlabel(%struct.LexState.267* %ls, i32 %22)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @suffixedexp(%struct.LexState.267* %ls, %struct.expdesc* %v) #0 {
  %key = alloca %struct.expdesc, align 8
  %key1 = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %4 = load i32* %3, align 4, !tbaa !226
  %5 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %6 = load i32* %5, align 4, !tbaa !220
  switch i32 %6, label %18 [
    i32 40, label %7
    i32 288, label %10
  ]

; <label>:7                                       ; preds = %0
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %8 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 0) #3
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 41, i32 40, i32 %4) #3
  %9 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_dischargevars to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %9, %struct.expdesc* %v) #3
  br label %primaryexp.exit.preheader

; <label>:10                                      ; preds = %0
  call fastcc void @singlevar(%struct.LexState.267* %ls, %struct.expdesc* %v) #3
  br label %primaryexp.exit.preheader

primaryexp.exit.preheader:                        ; preds = %10, %7
  %11 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %12 = bitcast %union.SemInfo* %11 to %union.TString.115**
  %13 = getelementptr inbounds %struct.expdesc* %key1, i64 0, i32 2
  %14 = getelementptr inbounds %struct.expdesc* %key1, i64 0, i32 3
  %15 = getelementptr inbounds %struct.expdesc* %key1, i64 0, i32 0
  %16 = getelementptr inbounds %struct.expdesc* %key1, i64 0, i32 1
  %17 = bitcast %union.anon.7* %16 to i32*
  br label %primaryexp.exit

; <label>:18                                      ; preds = %0
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([18 x i8]* @.str18199, i64 0, i64 0)) #13
  unreachable

primaryexp.exit:                                  ; preds = %34, %checkname.exit, %yindex.exit, %20, %primaryexp.exit.preheader
  %19 = load i32* %5, align 4, !tbaa !220
  switch i32 %19, label %35 [
    i32 46, label %20
    i32 91, label %21
    i32 58, label %27
    i32 40, label %34
    i32 289, label %34
    i32 123, label %34
  ]

; <label>:20                                      ; preds = %primaryexp.exit
  call fastcc void @fieldsel(%struct.LexState.267* %ls, %struct.expdesc* %v)
  br label %primaryexp.exit

; <label>:21                                      ; preds = %primaryexp.exit
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2anyregup to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %v) #3
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %22 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %key, i32 0) #3
  %23 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2val to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %23, %struct.expdesc* %key) #3
  %24 = load i32* %5, align 4, !tbaa !220
  %25 = icmp eq i32 %24, 93
  br i1 %25, label %yindex.exit, label %26

; <label>:26                                      ; preds = %21
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 93) #13
  unreachable

yindex.exit:                                      ; preds = %21
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_indexed to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %v, %struct.expdesc* %key) #3
  br label %primaryexp.exit

; <label>:27                                      ; preds = %primaryexp.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %28 = load i32* %5, align 4, !tbaa !220
  %29 = icmp eq i32 %28, 288
  br i1 %29, label %checkname.exit, label %30

; <label>:30                                      ; preds = %27
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 288) #13
  unreachable

checkname.exit:                                   ; preds = %27
  %31 = load %union.TString.115** %12, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %32 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %33 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString.7*)* @luaK_stringK to i32 (%struct.FuncState.266*, %union.TString.115*)*)(%struct.FuncState.266* %32, %union.TString.115* %31) #3
  store i32 -1, i32* %13, align 8, !tbaa !99
  store i32 -1, i32* %14, align 4, !tbaa !100
  store i32 4, i32* %15, align 8, !tbaa !92
  store i32 %33, i32* %17, align 8, !tbaa !1
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_self to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %v, %struct.expdesc* %key1) #3
  call fastcc void @funcargs(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 %4)
  br label %primaryexp.exit

; <label>:34                                      ; preds = %primaryexp.exit, %primaryexp.exit, %primaryexp.exit
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %v) #3
  call fastcc void @funcargs(%struct.LexState.267* %ls, %struct.expdesc* %v, i32 %4)
  br label %primaryexp.exit

; <label>:35                                      ; preds = %primaryexp.exit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @assignment(%struct.LexState.267* %ls, %struct.LHS_assign* %lh, i32 %nvars) #0 {
  %e = alloca %struct.expdesc, align 8
  %nv = alloca %struct.LHS_assign, align 8
  %1 = getelementptr inbounds %struct.LHS_assign* %lh, i64 0, i32 1
  %2 = getelementptr inbounds %struct.expdesc* %1, i64 0, i32 0
  %3 = load i32* %2, align 4, !tbaa !263
  %.off = add i32 %3, -7
  %4 = icmp ult i32 %.off, 3
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %0
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([13 x i8]* @.str6187, i64 0, i64 0)) #13
  unreachable

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %8 = load i32* %7, align 4, !tbaa !220
  switch i32 %8, label %84 [
    i32 44, label %9
    i32 61, label %checknext.exit
  ]

; <label>:9                                       ; preds = %6
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %10 = getelementptr inbounds %struct.LHS_assign* %nv, i64 0, i32 0
  store %struct.LHS_assign* %lh, %struct.LHS_assign** %10, align 8, !tbaa !261
  %11 = getelementptr inbounds %struct.LHS_assign* %nv, i64 0, i32 1
  call fastcc void @suffixedexp(%struct.LexState.267* %ls, %struct.expdesc* %11)
  %12 = getelementptr inbounds %struct.expdesc* %11, i64 0, i32 0
  %13 = load i32* %12, align 8, !tbaa !263
  %14 = icmp eq i32 %13, 9
  %.pre = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  br i1 %14, label %check_conflict.exit, label %15

; <label>:15                                      ; preds = %9
  %16 = load %struct.FuncState.266** %.pre, align 8, !tbaa !221
  %17 = getelementptr inbounds %struct.FuncState.266* %16, i64 0, i32 14
  %18 = load i8* %17, align 1, !tbaa !87
  %19 = zext i8 %18 to i32
  %20 = icmp eq %struct.LHS_assign* %lh, null
  br i1 %20, label %check_conflict.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %15
  %21 = getelementptr inbounds %struct.LHS_assign* %nv, i64 0, i32 1, i32 1
  %22 = bitcast %union.anon.7* %21 to i32*
  %23 = zext i8 %18 to i16
  %24 = icmp eq i32 %13, 7
  br label %25

; <label>:25                                      ; preds = %50, %.lr.ph.i
  %.02.i = phi %struct.LHS_assign* [ %lh, %.lr.ph.i ], [ %52, %50 ]
  %conflict.01.i = phi i32 [ 0, %.lr.ph.i ], [ %conflict.2.i, %50 ]
  %26 = getelementptr inbounds %struct.LHS_assign* %.02.i, i64 0, i32 1, i32 0
  %27 = load i32* %26, align 4, !tbaa !263
  %28 = icmp eq i32 %27, 9
  br i1 %28, label %29, label %50

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds %struct.LHS_assign* %.02.i, i64 0, i32 1, i32 1
  %31 = bitcast %union.anon.7* %30 to %struct.anon.8*
  %32 = getelementptr inbounds %struct.anon.8* %31, i64 0, i32 2
  %33 = load i8* %32, align 1, !tbaa !97
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %34, %13
  br i1 %35, label %36, label %thread-pre-split.i

; <label>:36                                      ; preds = %29
  %37 = getelementptr inbounds %struct.anon.8* %31, i64 0, i32 1
  %38 = load i8* %37, align 1, !tbaa !98
  %39 = zext i8 %38 to i32
  %40 = load i32* %22, align 8, !tbaa !1
  %41 = icmp eq i32 %39, %40
  br i1 %41, label %42, label %thread-pre-split.i

; <label>:42                                      ; preds = %36
  store i8 7, i8* %32, align 1, !tbaa !97
  store i8 %18, i8* %37, align 1, !tbaa !98
  br label %thread-pre-split.i

thread-pre-split.i:                               ; preds = %42, %36, %29
  %conflict.1.i = phi i32 [ %conflict.01.i, %29 ], [ 1, %42 ], [ %conflict.01.i, %36 ]
  br i1 %24, label %43, label %50

; <label>:43                                      ; preds = %thread-pre-split.i
  %44 = bitcast %union.anon.7* %30 to i16*
  %45 = load i16* %44, align 2, !tbaa !94
  %46 = sext i16 %45 to i32
  %47 = load i32* %22, align 8, !tbaa !1
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %50

; <label>:49                                      ; preds = %43
  store i16 %23, i16* %44, align 2, !tbaa !94
  br label %50

; <label>:50                                      ; preds = %49, %43, %thread-pre-split.i, %25
  %conflict.2.i = phi i32 [ 1, %49 ], [ %conflict.1.i, %43 ], [ %conflict.1.i, %thread-pre-split.i ], [ %conflict.01.i, %25 ]
  %51 = getelementptr inbounds %struct.LHS_assign* %.02.i, i64 0, i32 0
  %52 = load %struct.LHS_assign** %51, align 8, !tbaa !261
  %53 = icmp eq %struct.LHS_assign* %52, null
  br i1 %53, label %._crit_edge.i, label %25

._crit_edge.i:                                    ; preds = %50
  %54 = icmp eq i32 %conflict.2.i, 0
  br i1 %54, label %check_conflict.exit, label %55

; <label>:55                                      ; preds = %._crit_edge.i
  %56 = select i1 %24, i32 0, i32 5
  %57 = load i32* %22, align 8, !tbaa !1
  %58 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.266*, i32, i32, i32, i32)*)(%struct.FuncState.266* %16, i32 %56, i32 %19, i32 %57, i32 0) #3
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_reserveregs to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %16, i32 1) #3
  br label %check_conflict.exit

check_conflict.exit:                              ; preds = %55, %._crit_edge.i, %15, %9
  %59 = load %struct.FuncState.266** %.pre, align 8, !tbaa !221
  %60 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %61 = load %struct.lua_State.126** %60, align 8, !tbaa !89
  %62 = getelementptr inbounds %struct.lua_State.126* %61, i64 0, i32 12
  %63 = load i16* %62, align 2, !tbaa !142
  %64 = zext i16 %63 to i32
  %65 = add nsw i32 %64, %nvars
  %66 = icmp sgt i32 %65, 200
  br i1 %66, label %67, label %checklimit.exit

; <label>:67                                      ; preds = %check_conflict.exit
  %68 = getelementptr inbounds %struct.FuncState.266* %59, i64 0, i32 3
  %69 = load %struct.LexState.267** %68, align 8, !tbaa !85
  %70 = getelementptr inbounds %struct.LexState.267* %69, i64 0, i32 6
  %71 = load %struct.lua_State.126** %70, align 8, !tbaa !89
  %72 = getelementptr inbounds %struct.FuncState.266* %59, i64 0, i32 0
  %73 = load %struct.Proto.132** %72, align 8, !tbaa !82
  %74 = getelementptr inbounds %struct.Proto.132* %73, i64 0, i32 17
  %75 = load i32* %74, align 4, !tbaa !123
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %79, label %77

; <label>:77                                      ; preds = %67
  %78 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %71, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %75) #3
  br label %79

; <label>:79                                      ; preds = %77, %67
  %80 = phi i8* [ %78, %77 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %67 ]
  %81 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %71, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str7188, i64 0, i64 0), i32 200, i8* %80) #3
  %82 = load %struct.LexState.267** %68, align 8, !tbaa !85
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %82, i8* %81) #13
  unreachable

checklimit.exit:                                  ; preds = %check_conflict.exit
  %83 = add nsw i32 %nvars, 1
  call fastcc void @assignment(%struct.LexState.267* %ls, %struct.LHS_assign* %nv, i32 %83)
  br label %._crit_edge

; <label>:84                                      ; preds = %6
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 61) #13
  unreachable

checknext.exit:                                   ; preds = %6
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %85 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e, i32 0) #3
  %86 = load i32* %7, align 4, !tbaa !220
  %87 = icmp eq i32 %86, 44
  br i1 %87, label %.lr.ph, label %explist.exit

.lr.ph:                                           ; preds = %checknext.exit
  %88 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  br label %89

; <label>:89                                      ; preds = %89, %.lr.ph
  %n.0.i1 = phi i32 [ 1, %.lr.ph ], [ %92, %89 ]
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %90 = load %struct.FuncState.266** %88, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %90, %struct.expdesc* %e) #3
  %91 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %e, i32 0) #3
  %92 = add nsw i32 %n.0.i1, 1
  %93 = load i32* %7, align 4, !tbaa !220
  %94 = icmp eq i32 %93, 44
  br i1 %94, label %89, label %explist.exit

explist.exit:                                     ; preds = %89, %checknext.exit
  %n.0.i.lcssa = phi i32 [ 1, %checknext.exit ], [ %92, %89 ]
  %95 = icmp eq i32 %n.0.i.lcssa, %nvars
  br i1 %95, label %107, label %96

; <label>:96                                      ; preds = %explist.exit
  call fastcc void @adjust_assign(%struct.LexState.267* %ls, i32 %nvars, i32 %n.0.i.lcssa, %struct.expdesc* %e)
  %97 = icmp sgt i32 %n.0.i.lcssa, %nvars
  %98 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  br i1 %97, label %99, label %._crit_edge

; <label>:99                                      ; preds = %96
  %100 = load %struct.FuncState.266** %98, align 8, !tbaa !221
  %101 = getelementptr inbounds %struct.FuncState.266* %100, i64 0, i32 14
  %102 = load i8* %101, align 1, !tbaa !87
  %103 = zext i8 %102 to i32
  %104 = sub i32 %nvars, %n.0.i.lcssa
  %105 = add i32 %104, %103
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %101, align 1, !tbaa !87
  br label %._crit_edge

; <label>:107                                     ; preds = %explist.exit
  %108 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %109 = load %struct.FuncState.266** %108, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_setoneret to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %109, %struct.expdesc* %e) #3
  %110 = load %struct.FuncState.266** %108, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %110, %struct.expdesc* %1, %struct.expdesc* %e) #3
  br label %121

._crit_edge:                                      ; preds = %99, %96, %checklimit.exit
  %.pre-phi3 = phi %struct.FuncState.266** [ %98, %99 ], [ %.pre, %checklimit.exit ], [ %98, %96 ]
  %111 = load %struct.FuncState.266** %.pre-phi3, align 8, !tbaa !221
  %112 = getelementptr inbounds %struct.FuncState.266* %111, i64 0, i32 14
  %113 = load i8* %112, align 1, !tbaa !87
  %114 = zext i8 %113 to i32
  %115 = add nsw i32 %114, -1
  %116 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 2
  store i32 -1, i32* %116, align 8, !tbaa !99
  %117 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 3
  store i32 -1, i32* %117, align 4, !tbaa !100
  %118 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 0
  store i32 6, i32* %118, align 8, !tbaa !92
  %119 = getelementptr inbounds %struct.expdesc* %e, i64 0, i32 1
  %120 = bitcast %union.anon.7* %119 to i32*
  store i32 %115, i32* %120, align 8, !tbaa !1
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, %struct.expdesc*)* @luaK_storevar to void (%struct.FuncState.266*, %struct.expdesc*, %struct.expdesc*)*)(%struct.FuncState.266* %111, %struct.expdesc* %1, %struct.expdesc* %e) #3
  br label %121

; <label>:121                                     ; preds = %._crit_edge, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @findlabel(%struct.LexState.267* %ls, i32 %g) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 4
  %4 = load %struct.BlockCnt** %3, align 8, !tbaa !241
  %5 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 9
  %6 = load %struct.Dyndata.259** %5, align 8, !tbaa !234
  %7 = sext i32 %g to i64
  %8 = getelementptr inbounds %struct.Dyndata.259* %6, i64 0, i32 1, i32 0
  %9 = load %struct.Labeldesc.257** %8, align 8, !tbaa !266
  %10 = getelementptr inbounds %struct.BlockCnt* %4, i64 0, i32 1
  %11 = load i16* %10, align 2, !tbaa !245
  %12 = sext i16 %11 to i32
  %13 = getelementptr inbounds %struct.Dyndata.259* %6, i64 0, i32 2, i32 1
  %14 = load i32* %13, align 4, !tbaa !235
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %0
  %16 = getelementptr inbounds %struct.Dyndata.259* %6, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %struct.Labeldesc.257* %9, i64 %7, i32 0
  %18 = sext i16 %11 to i64
  br label %23

; <label>:19                                      ; preds = %23
  %20 = load i32* %13, align 4, !tbaa !235
  %21 = trunc i64 %indvars.iv.next to i32
  %22 = icmp slt i32 %21, %20
  br i1 %22, label %23, label %.loopexit

; <label>:23                                      ; preds = %19, %.lr.ph
  %indvars.iv = phi i64 [ %18, %.lr.ph ], [ %indvars.iv.next, %19 ]
  %24 = load %struct.Labeldesc.257** %16, align 8, !tbaa !265
  %25 = getelementptr inbounds %struct.Labeldesc.257* %24, i64 %indvars.iv
  %26 = getelementptr inbounds %struct.Labeldesc.257* %25, i64 0, i32 0
  %27 = load %union.TString.115** %26, align 8, !tbaa !255
  %28 = load %union.TString.115** %17, align 8, !tbaa !255
  %29 = tail call i32 bitcast (i32 (%union.TString.219*, %union.TString.219*)* @luaS_eqstr to i32 (%union.TString.115*, %union.TString.115*)*)(%union.TString.115* %27, %union.TString.115* %28) #3
  %30 = icmp eq i32 %29, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  br i1 %30, label %19, label %31

; <label>:31                                      ; preds = %23
  %32 = getelementptr inbounds %struct.Labeldesc.257* %9, i64 %7, i32 3
  %33 = load i8* %32, align 1, !tbaa !259
  %34 = getelementptr inbounds %struct.Labeldesc.257* %24, i64 %indvars.iv, i32 3
  %35 = load i8* %34, align 1, !tbaa !259
  %36 = icmp ugt i8 %33, %35
  br i1 %36, label %37, label %51

; <label>:37                                      ; preds = %31
  %38 = getelementptr inbounds %struct.BlockCnt* %4, i64 0, i32 4
  %39 = load i8* %38, align 1, !tbaa !247
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %46

; <label>:41                                      ; preds = %37
  %42 = load i32* %13, align 4, !tbaa !235
  %43 = load i16* %10, align 2, !tbaa !245
  %44 = sext i16 %43 to i32
  %45 = icmp sgt i32 %42, %44
  br i1 %45, label %46, label %51

; <label>:46                                      ; preds = %41, %37
  %47 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %48 = getelementptr inbounds %struct.Labeldesc.257* %9, i64 %7, i32 1
  %49 = load i32* %48, align 4, !tbaa !260
  %50 = zext i8 %35 to i32
  tail call void bitcast (void (%struct.FuncState*, i32, i32)* @luaK_patchclose to void (%struct.FuncState.266*, i32, i32)*)(%struct.FuncState.266* %47, i32 %49, i32 %50) #3
  br label %51

; <label>:51                                      ; preds = %46, %41, %31
  tail call fastcc void @closegoto(%struct.LexState.267* %ls, i32 %g, %struct.Labeldesc.257* %25)
  br label %.loopexit

.loopexit:                                        ; preds = %51, %19, %0
  %.0 = phi i32 [ 1, %51 ], [ 0, %0 ], [ 0, %19 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @constructor(%struct.LexState.267* %ls, %struct.expdesc* %t) #0 {
  %cc = alloca %struct.ConsControl, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 1
  %4 = load i32* %3, align 4, !tbaa !226
  %5 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.266*, i32, i32, i32, i32)*)(%struct.FuncState.266* %2, i32 11, i32 0, i32 0, i32 0) #3
  %6 = bitcast %struct.ConsControl* %cc to i8*
  call void @llvm.lifetime.start(i64 48, i8* %6) #3
  %7 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 4
  store i32 0, i32* %7, align 8, !tbaa !272
  %8 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 2
  store i32 0, i32* %8, align 8, !tbaa !274
  %9 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 3
  store i32 0, i32* %9, align 4, !tbaa !275
  %10 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 1
  store %struct.expdesc* %t, %struct.expdesc** %10, align 8, !tbaa !276
  %11 = getelementptr inbounds %struct.expdesc* %t, i64 0, i32 2
  store i32 -1, i32* %11, align 4, !tbaa !99
  %12 = getelementptr inbounds %struct.expdesc* %t, i64 0, i32 3
  store i32 -1, i32* %12, align 4, !tbaa !100
  %13 = getelementptr inbounds %struct.expdesc* %t, i64 0, i32 0
  store i32 11, i32* %13, align 4, !tbaa !92
  %14 = getelementptr inbounds %struct.expdesc* %t, i64 0, i32 1
  %15 = bitcast %union.anon.7* %14 to i32*
  store i32 %5, i32* %15, align 4, !tbaa !1
  %16 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 0
  %17 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 0, i32 2
  store i32 -1, i32* %17, align 8, !tbaa !99
  %18 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 0, i32 3
  store i32 -1, i32* %18, align 4, !tbaa !100
  %19 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 0, i32 0
  store i32 0, i32* %19, align 8, !tbaa !92
  %20 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 0, i32 1
  %21 = bitcast %union.anon.7* %20 to i32*
  store i32 0, i32* %21, align 8, !tbaa !1
  %22 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %22, %struct.expdesc* %t) #3
  %23 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %24 = load i32* %23, align 4, !tbaa !220
  %25 = icmp eq i32 %24, 123
  br i1 %25, label %checknext.exit, label %26

; <label>:26                                      ; preds = %0
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 123) #13
  unreachable

checknext.exit:                                   ; preds = %0
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %27 = load i32* %23, align 4, !tbaa !220
  %28 = icmp eq i32 %27, 125
  br i1 %28, label %testnext.exit.thread, label %closelistfield.exit

; <label>:29                                      ; preds = %.critedge.backedge._crit_edge
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %16) #3
  store i32 0, i32* %19, align 8, !tbaa !277
  %30 = load i32* %7, align 8, !tbaa !272
  %31 = icmp eq i32 %30, 50
  br i1 %31, label %32, label %closelistfield.exit

; <label>:32                                      ; preds = %29
  %33 = load %struct.expdesc** %10, align 8, !tbaa !276
  %34 = getelementptr inbounds %struct.expdesc* %33, i64 0, i32 1
  %35 = bitcast %union.anon.7* %34 to i32*
  %36 = load i32* %35, align 4, !tbaa !1
  %37 = load i32* %9, align 4, !tbaa !275
  call void bitcast (void (%struct.FuncState*, i32, i32, i32)* @luaK_setlist to void (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %2, i32 %36, i32 %37, i32 50) #3
  store i32 0, i32* %7, align 8, !tbaa !272
  br label %closelistfield.exit

closelistfield.exit:                              ; preds = %.critedge.backedge._crit_edge, %32, %29, %checknext.exit
  %38 = load i32* %23, align 4, !tbaa !220
  switch i32 %38, label %45 [
    i32 288, label %39
    i32 91, label %44
  ]

; <label>:39                                      ; preds = %closelistfield.exit
  %40 = call i32 bitcast (i32 (%struct.LexState.194*)* @luaX_lookahead to i32 (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %41 = icmp eq i32 %40, 61
  br i1 %41, label %43, label %42

; <label>:42                                      ; preds = %39
  call fastcc void @listfield(%struct.LexState.267* %ls, %struct.ConsControl* %cc) #3
  br label %field.exit

; <label>:43                                      ; preds = %39
  call fastcc void @recfield(%struct.LexState.267* %ls, %struct.ConsControl* %cc) #3
  br label %field.exit

; <label>:44                                      ; preds = %closelistfield.exit
  call fastcc void @recfield(%struct.LexState.267* %ls, %struct.ConsControl* %cc) #3
  br label %field.exit

; <label>:45                                      ; preds = %closelistfield.exit
  call fastcc void @listfield(%struct.LexState.267* %ls, %struct.ConsControl* %cc) #3
  br label %field.exit

field.exit:                                       ; preds = %45, %44, %43, %42
  %46 = load i32* %23, align 4, !tbaa !220
  switch i32 %46, label %testnext.exit.thread [
    i32 44, label %testnext.exit2
    i32 59, label %testnext.exit
  ]

testnext.exit2:                                   ; preds = %field.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %.critedge.backedge

.critedge.backedge:                               ; preds = %testnext.exit, %testnext.exit2
  %47 = load i32* %23, align 4, !tbaa !220
  %48 = icmp eq i32 %47, 125
  br i1 %48, label %testnext.exit.thread, label %.critedge.backedge._crit_edge

.critedge.backedge._crit_edge:                    ; preds = %.critedge.backedge
  %.pre = load i32* %19, align 8, !tbaa !277
  %phitmp = icmp eq i32 %.pre, 0
  br i1 %phitmp, label %closelistfield.exit, label %29

testnext.exit:                                    ; preds = %field.exit
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %.critedge.backedge

testnext.exit.thread:                             ; preds = %.critedge.backedge, %field.exit, %checknext.exit
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 125, i32 123, i32 %4)
  %49 = load i32* %7, align 8, !tbaa !272
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %lastlistfield.exit, label %51

; <label>:51                                      ; preds = %testnext.exit.thread
  %52 = load i32* %19, align 8, !tbaa !277
  switch i32 %52, label %61 [
    i32 12, label %53
    i32 13, label %53
    i32 0, label %62
  ]

; <label>:53                                      ; preds = %51, %51
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.266*, %struct.expdesc*, i32)*)(%struct.FuncState.266* %2, %struct.expdesc* %16, i32 -1) #3
  %54 = load %struct.expdesc** %10, align 8, !tbaa !276
  %55 = getelementptr inbounds %struct.expdesc* %54, i64 0, i32 1
  %56 = bitcast %union.anon.7* %55 to i32*
  %57 = load i32* %56, align 4, !tbaa !1
  %58 = load i32* %9, align 4, !tbaa !275
  call void bitcast (void (%struct.FuncState*, i32, i32, i32)* @luaK_setlist to void (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %2, i32 %57, i32 %58, i32 -1) #3
  %59 = load i32* %9, align 4, !tbaa !275
  %60 = add nsw i32 %59, -1
  store i32 %60, i32* %9, align 4, !tbaa !275
  br label %lastlistfield.exit

; <label>:61                                      ; preds = %51
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %16) #3
  %.pre.i = load i32* %7, align 8, !tbaa !272
  br label %62

; <label>:62                                      ; preds = %61, %51
  %63 = phi i32 [ %49, %51 ], [ %.pre.i, %61 ]
  %64 = load %struct.expdesc** %10, align 8, !tbaa !276
  %65 = getelementptr inbounds %struct.expdesc* %64, i64 0, i32 1
  %66 = bitcast %union.anon.7* %65 to i32*
  %67 = load i32* %66, align 4, !tbaa !1
  %68 = load i32* %9, align 4, !tbaa !275
  call void bitcast (void (%struct.FuncState*, i32, i32, i32)* @luaK_setlist to void (%struct.FuncState.266*, i32, i32, i32)*)(%struct.FuncState.266* %2, i32 %67, i32 %68, i32 %63) #3
  br label %lastlistfield.exit

lastlistfield.exit:                               ; preds = %62, %53, %testnext.exit.thread
  %69 = sext i32 %5 to i64
  %70 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 0
  %71 = load %struct.Proto.132** %70, align 8, !tbaa !82
  %72 = getelementptr inbounds %struct.Proto.132* %71, i64 0, i32 4
  %73 = load i32** %72, align 8, !tbaa !83
  %74 = getelementptr inbounds i32* %73, i64 %69
  %75 = load i32* %74, align 4, !tbaa !1
  %76 = and i32 %75, 8388607
  %77 = load i32* %9, align 4, !tbaa !275
  %78 = call i32 @luaO_int2fb(i32 %77) #3
  %79 = shl i32 %78, 23
  %80 = or i32 %79, %76
  %81 = load %struct.Proto.132** %70, align 8, !tbaa !82
  %82 = getelementptr inbounds %struct.Proto.132* %81, i64 0, i32 4
  %83 = load i32** %82, align 8, !tbaa !83
  %84 = getelementptr inbounds i32* %83, i64 %69
  store i32 %80, i32* %84, align 4, !tbaa !1
  %85 = and i32 %80, -8372225
  %86 = load i32* %8, align 8, !tbaa !274
  %87 = call i32 @luaO_int2fb(i32 %86) #3
  %88 = shl i32 %87, 14
  %89 = and i32 %88, 8372224
  %90 = or i32 %89, %85
  %91 = load %struct.Proto.132** %70, align 8, !tbaa !82
  %92 = getelementptr inbounds %struct.Proto.132* %91, i64 0, i32 4
  %93 = load i32** %92, align 8, !tbaa !83
  %94 = getelementptr inbounds i32* %93, i64 %69
  store i32 %90, i32* %94, align 4, !tbaa !1
  call void @llvm.lifetime.end(i64 48, i8* %6) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @singlevaraux(%struct.FuncState.266* %fs, %union.TString.115* %n, %struct.expdesc* nocapture %var, i32 %base) #0 {
  %1 = icmp eq %struct.FuncState.266* %fs, null
  br i1 %1, label %74, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 12
  %4 = load i8* %3, align 1, !tbaa !96
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 10
  %7 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 3
  %8 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 0
  br label %9

; <label>:9                                       ; preds = %11, %2
  %i.0.in.i = phi i32 [ %5, %2 ], [ %i.0.i, %11 ]
  %i.0.i = add nsw i32 %i.0.in.i, -1
  %10 = icmp sgt i32 %i.0.in.i, 0
  br i1 %10, label %11, label %searchvar.exit.thread

; <label>:11                                      ; preds = %9
  %12 = load i32* %6, align 4, !tbaa !240
  %13 = add nsw i32 %12, %i.0.i
  %14 = sext i32 %13 to i64
  %15 = load %struct.LexState.267** %7, align 8, !tbaa !85
  %16 = getelementptr inbounds %struct.LexState.267* %15, i64 0, i32 9
  %17 = load %struct.Dyndata.259** %16, align 8, !tbaa !234
  %18 = getelementptr inbounds %struct.Dyndata.259* %17, i64 0, i32 0, i32 0
  %19 = load %struct.Vardesc** %18, align 8, !tbaa !250
  %20 = getelementptr inbounds %struct.Vardesc* %19, i64 %14, i32 0
  %21 = load i16* %20, align 2, !tbaa !251
  %22 = sext i16 %21 to i64
  %23 = load %struct.Proto.132** %8, align 8, !tbaa !82
  %24 = getelementptr inbounds %struct.Proto.132* %23, i64 0, i32 7
  %25 = load %struct.LocVar.130** %24, align 8, !tbaa !178
  %26 = getelementptr inbounds %struct.LocVar.130* %25, i64 %22, i32 0
  %27 = load %union.TString.115** %26, align 8, !tbaa !179
  %28 = tail call i32 bitcast (i32 (%union.TString.219*, %union.TString.219*)* @luaS_eqstr to i32 (%union.TString.115*, %union.TString.115*)*)(%union.TString.115* %n, %union.TString.115* %27) #3
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %9, label %searchvar.exit

searchvar.exit:                                   ; preds = %11
  %30 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 2
  store i32 -1, i32* %30, align 4, !tbaa !99
  %31 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 3
  store i32 -1, i32* %31, align 4, !tbaa !100
  %32 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 0
  store i32 7, i32* %32, align 4, !tbaa !92
  %33 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 1
  %34 = bitcast %union.anon.7* %33 to i32*
  store i32 %i.0.i, i32* %34, align 4, !tbaa !1
  %35 = icmp eq i32 %base, 0
  br i1 %35, label %36, label %74

; <label>:36                                      ; preds = %searchvar.exit
  %37 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 4
  br label %38

; <label>:38                                      ; preds = %38, %36
  %bl.0.in.i = phi %struct.BlockCnt** [ %37, %36 ], [ %43, %38 ]
  %bl.0.i = load %struct.BlockCnt** %bl.0.in.i, align 8
  %39 = getelementptr inbounds %struct.BlockCnt* %bl.0.i, i64 0, i32 3
  %40 = load i8* %39, align 1, !tbaa !244
  %41 = zext i8 %40 to i32
  %42 = icmp sgt i32 %41, %i.0.i
  %43 = getelementptr inbounds %struct.BlockCnt* %bl.0.i, i64 0, i32 0
  br i1 %42, label %38, label %markupval.exit

markupval.exit:                                   ; preds = %38
  %44 = getelementptr inbounds %struct.BlockCnt* %bl.0.i, i64 0, i32 4
  store i8 1, i8* %44, align 1, !tbaa !247
  br label %74

searchvar.exit.thread:                            ; preds = %9
  %45 = load %struct.Proto.132** %8, align 8, !tbaa !82
  %46 = getelementptr inbounds %struct.Proto.132* %45, i64 0, i32 8
  %47 = load %struct.Upvaldesc.131** %46, align 8, !tbaa !76
  %48 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 13
  %49 = load i8* %48, align 1, !tbaa !249
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %searchupvalue.exit.thread, label %.lr.ph.i

; <label>:51                                      ; preds = %.lr.ph.i
  %52 = load i8* %48, align 1, !tbaa !249
  %53 = zext i8 %52 to i32
  %54 = trunc i64 %indvars.iv.next.i to i32
  %55 = icmp slt i32 %54, %53
  br i1 %55, label %.lr.ph.i, label %searchupvalue.exit.thread

.lr.ph.i:                                         ; preds = %51, %searchvar.exit.thread
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %51 ], [ 0, %searchvar.exit.thread ]
  %56 = getelementptr inbounds %struct.Upvaldesc.131* %47, i64 %indvars.iv.i, i32 0
  %57 = load %union.TString.115** %56, align 8, !tbaa !77
  %58 = tail call i32 bitcast (i32 (%union.TString.219*, %union.TString.219*)* @luaS_eqstr to i32 (%union.TString.115*, %union.TString.115*)*)(%union.TString.115* %57, %union.TString.115* %n) #3
  %59 = icmp eq i32 %58, 0
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %59, label %51, label %searchupvalue.exit

searchupvalue.exit:                               ; preds = %.lr.ph.i
  %60 = trunc i64 %indvars.iv.i to i32
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %searchupvalue.exit.thread, label %68

searchupvalue.exit.thread:                        ; preds = %searchupvalue.exit, %51, %searchvar.exit.thread
  %62 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 2
  %63 = load %struct.FuncState.266** %62, align 8, !tbaa !238
  %64 = tail call fastcc i32 @singlevaraux(%struct.FuncState.266* %63, %union.TString.115* %n, %struct.expdesc* %var, i32 0)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %74, label %66

; <label>:66                                      ; preds = %searchupvalue.exit.thread
  %67 = tail call fastcc i32 @newupvalue(%struct.FuncState.266* %fs, %union.TString.115* %n, %struct.expdesc* %var)
  br label %68

; <label>:68                                      ; preds = %66, %searchupvalue.exit
  %idx.0 = phi i32 [ %67, %66 ], [ %60, %searchupvalue.exit ]
  %69 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 2
  store i32 -1, i32* %69, align 4, !tbaa !99
  %70 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 3
  store i32 -1, i32* %70, align 4, !tbaa !100
  %71 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 0
  store i32 8, i32* %71, align 4, !tbaa !92
  %72 = getelementptr inbounds %struct.expdesc* %var, i64 0, i32 1
  %73 = bitcast %union.anon.7* %72 to i32*
  store i32 %idx.0, i32* %73, align 4, !tbaa !1
  br label %74

; <label>:74                                      ; preds = %68, %searchupvalue.exit.thread, %markupval.exit, %searchvar.exit, %0
  %.0 = phi i32 [ 8, %68 ], [ 0, %0 ], [ 7, %searchvar.exit ], [ 7, %markupval.exit ], [ 0, %searchupvalue.exit.thread ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @open_func(%struct.LexState.267* %ls, %struct.FuncState.266* %fs, %struct.BlockCnt* %bl) #0 {
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 6
  %2 = load %struct.lua_State.126** %1, align 8, !tbaa !89
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %4 = load %struct.FuncState.266** %3, align 8, !tbaa !221
  %5 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 2
  store %struct.FuncState.266* %4, %struct.FuncState.266** %5, align 8, !tbaa !238
  %6 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 3
  store %struct.LexState.267* %ls, %struct.LexState.267** %6, align 8, !tbaa !85
  store %struct.FuncState.266* %fs, %struct.FuncState.266** %3, align 8, !tbaa !221
  %7 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 5
  store i32 0, i32* %7, align 4, !tbaa !79
  %8 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 6
  store i32 0, i32* %8, align 4, !tbaa !81
  %9 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 7
  store i32 -1, i32* %9, align 4, !tbaa !84
  %10 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 8
  store i32 0, i32* %10, align 4, !tbaa !101
  %11 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 9
  store i32 0, i32* %11, align 4, !tbaa !239
  %12 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 11
  %13 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 12
  %14 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 9
  %15 = bitcast i16* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 5, i32 2, i1 false)
  %16 = load %struct.Dyndata.259** %14, align 8, !tbaa !234
  %17 = getelementptr inbounds %struct.Dyndata.259* %16, i64 0, i32 0, i32 1
  %18 = load i32* %17, align 4, !tbaa !237
  %19 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 10
  store i32 %18, i32* %19, align 4, !tbaa !240
  %20 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 4
  store %struct.BlockCnt* null, %struct.BlockCnt** %20, align 8, !tbaa !241
  %21 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 0
  %22 = load %struct.Proto.132** %21, align 8, !tbaa !82
  %23 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 10
  %24 = load %union.TString.115** %23, align 8, !tbaa !227
  %25 = getelementptr inbounds %struct.Proto.132* %22, i64 0, i32 10
  store %union.TString.115* %24, %union.TString.115** %25, align 8, !tbaa !122
  %26 = getelementptr inbounds %struct.Proto.132* %22, i64 0, i32 22
  store i8 2, i8* %26, align 1, !tbaa !88
  %27 = tail call %struct.Table.119* bitcast (%struct.Table* (%struct.lua_State*)* @luaH_new to %struct.Table.119* (%struct.lua_State.126*)*)(%struct.lua_State.126* %2) #3
  %28 = getelementptr inbounds %struct.FuncState.266* %fs, i64 0, i32 1
  store %struct.Table.119* %27, %struct.Table.119** %28, align 8, !tbaa !102
  %29 = getelementptr inbounds %struct.lua_State.126* %2, i64 0, i32 4
  %30 = load %struct.lua_TValue.109** %29, align 8, !tbaa !12
  %31 = bitcast %struct.Table.119* %27 to %union.GCObject.127*
  %32 = getelementptr inbounds %struct.lua_TValue.109* %30, i64 0, i32 0, i32 0
  store %union.GCObject.127* %31, %union.GCObject.127** %32, align 8, !tbaa !25
  %33 = getelementptr inbounds %struct.lua_TValue.109* %30, i64 0, i32 1
  store i32 69, i32* %33, align 4, !tbaa !15
  %34 = load %struct.lua_TValue.109** %29, align 8, !tbaa !12
  %35 = getelementptr inbounds %struct.lua_TValue.109* %34, i64 1
  store %struct.lua_TValue.109* %35, %struct.lua_TValue.109** %29, align 8, !tbaa !12
  %36 = getelementptr inbounds %struct.lua_State.126* %2, i64 0, i32 8
  %37 = load %struct.lua_TValue.109** %36, align 8, !tbaa !11
  %38 = ptrtoint %struct.lua_TValue.109* %37 to i64
  %39 = ptrtoint %struct.lua_TValue.109* %35 to i64
  %40 = sub i64 %38, %39
  %41 = icmp slt i64 %40, 16
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %0
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.126*, i32)*)(%struct.lua_State.126* %2, i32 0) #3
  br label %43

; <label>:43                                      ; preds = %42, %0
  %44 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 5
  store i8 0, i8* %44, align 1, !tbaa !242
  %45 = load i8* %13, align 1, !tbaa !96
  %46 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 3
  store i8 %45, i8* %46, align 1, !tbaa !244
  %47 = load %struct.LexState.267** %6, align 8, !tbaa !85
  %48 = getelementptr inbounds %struct.LexState.267* %47, i64 0, i32 9
  %49 = load %struct.Dyndata.259** %48, align 8, !tbaa !234
  %50 = getelementptr inbounds %struct.Dyndata.259* %49, i64 0, i32 2, i32 1
  %51 = load i32* %50, align 4, !tbaa !235
  %52 = trunc i32 %51 to i16
  %53 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 1
  store i16 %52, i16* %53, align 2, !tbaa !245
  %54 = getelementptr inbounds %struct.Dyndata.259* %49, i64 0, i32 1, i32 1
  %55 = load i32* %54, align 4, !tbaa !236
  %56 = trunc i32 %55 to i16
  %57 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 2
  store i16 %56, i16* %57, align 2, !tbaa !246
  %58 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 4
  store i8 0, i8* %58, align 1, !tbaa !247
  %59 = load %struct.BlockCnt** %20, align 8, !tbaa !241
  %60 = getelementptr inbounds %struct.BlockCnt* %bl, i64 0, i32 0
  store %struct.BlockCnt* %59, %struct.BlockCnt** %60, align 8, !tbaa !248
  store %struct.BlockCnt* %bl, %struct.BlockCnt** %20, align 8, !tbaa !241
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @funcargs(%struct.LexState.267* %ls, %struct.expdesc* nocapture %f, i32 %line) #0 {
  %args = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %4 = load i32* %3, align 4, !tbaa !220
  switch i32 %4, label %30 [
    i32 40, label %5
    i32 123, label %19
    i32 289, label %20
  ]

; <label>:5                                       ; preds = %0
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %6 = load i32* %3, align 4, !tbaa !220
  %7 = icmp eq i32 %6, 41
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %5
  %9 = getelementptr inbounds %struct.expdesc* %args, i64 0, i32 0
  store i32 0, i32* %9, align 8, !tbaa !92
  br label %18

; <label>:10                                      ; preds = %5
  %11 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %args, i32 0) #3
  %12 = load i32* %3, align 4, !tbaa !220
  %13 = icmp eq i32 %12, 44
  br i1 %13, label %.lr.ph, label %explist.exit

.lr.ph:                                           ; preds = %.lr.ph, %10
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %14 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %14, %struct.expdesc* %args) #3
  %15 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %args, i32 0) #3
  %16 = load i32* %3, align 4, !tbaa !220
  %17 = icmp eq i32 %16, 44
  br i1 %17, label %.lr.ph, label %explist.exit

explist.exit:                                     ; preds = %.lr.ph, %10
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*, i32)* @luaK_setreturns to void (%struct.FuncState.266*, %struct.expdesc*, i32)*)(%struct.FuncState.266* %2, %struct.expdesc* %args, i32 -1) #3
  br label %18

; <label>:18                                      ; preds = %explist.exit, %8
  call fastcc void @check_match(%struct.LexState.267* %ls, i32 41, i32 40, i32 %line)
  br label %31

; <label>:19                                      ; preds = %0
  call fastcc void @constructor(%struct.LexState.267* %ls, %struct.expdesc* %args)
  br label %31

; <label>:20                                      ; preds = %0
  %21 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %22 = bitcast %union.SemInfo* %21 to %union.TString.115**
  %23 = load %union.TString.115** %22, align 8, !tbaa !25
  %24 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString.7*)* @luaK_stringK to i32 (%struct.FuncState.266*, %union.TString.115*)*)(%struct.FuncState.266* %2, %union.TString.115* %23) #3
  %25 = getelementptr inbounds %struct.expdesc* %args, i64 0, i32 2
  store i32 -1, i32* %25, align 8, !tbaa !99
  %26 = getelementptr inbounds %struct.expdesc* %args, i64 0, i32 3
  store i32 -1, i32* %26, align 4, !tbaa !100
  %27 = getelementptr inbounds %struct.expdesc* %args, i64 0, i32 0
  store i32 4, i32* %27, align 8, !tbaa !92
  %28 = getelementptr inbounds %struct.expdesc* %args, i64 0, i32 1
  %29 = bitcast %union.anon.7* %28 to i32*
  store i32 %24, i32* %29, align 8, !tbaa !1
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  br label %31

; <label>:30                                      ; preds = %0
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %ls, i8* getelementptr inbounds ([28 x i8]* @.str17198, i64 0, i64 0)) #13
  unreachable

; <label>:31                                      ; preds = %20, %19, %18
  %32 = getelementptr inbounds %struct.expdesc* %f, i64 0, i32 1
  %33 = bitcast %union.anon.7* %32 to i32*
  %34 = load i32* %33, align 4, !tbaa !1
  %35 = getelementptr inbounds %struct.expdesc* %args, i64 0, i32 0
  %36 = load i32* %35, align 8, !tbaa !92
  switch i32 %36, label %37 [
    i32 12, label %42
    i32 13, label %42
    i32 0, label %38
  ]

; <label>:37                                      ; preds = %31
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2nextreg to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %args) #3
  br label %38

; <label>:38                                      ; preds = %37, %31
  %39 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 14
  %40 = load i8* %39, align 1, !tbaa !87
  %41 = zext i8 %40 to i32
  %phitmp = sub i32 %41, %34
  br label %42

; <label>:42                                      ; preds = %38, %31, %31
  %nparams.0 = phi i32 [ %phitmp, %38 ], [ 0, %31 ], [ 0, %31 ]
  %43 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.266*, i32, i32, i32, i32)*)(%struct.FuncState.266* %2, i32 29, i32 %34, i32 %nparams.0, i32 2) #3
  %44 = getelementptr inbounds %struct.expdesc* %f, i64 0, i32 2
  store i32 -1, i32* %44, align 4, !tbaa !99
  %45 = getelementptr inbounds %struct.expdesc* %f, i64 0, i32 3
  store i32 -1, i32* %45, align 4, !tbaa !100
  %46 = getelementptr inbounds %struct.expdesc* %f, i64 0, i32 0
  store i32 12, i32* %46, align 4, !tbaa !92
  store i32 %43, i32* %33, align 4, !tbaa !1
  call void bitcast (void (%struct.FuncState*, i32)* @luaK_fixline to void (%struct.FuncState.266*, i32)*)(%struct.FuncState.266* %2, i32 %line) #3
  %47 = add nsw i32 %34, 1
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 14
  store i8 %48, i8* %49, align 1, !tbaa !87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @listfield(%struct.LexState.267* %ls, %struct.ConsControl* %cc) #0 {
  %1 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 0
  %2 = tail call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %1, i32 0) #3
  %3 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %4 = load %struct.FuncState.266** %3, align 8, !tbaa !221
  %5 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 3
  %6 = load i32* %5, align 4, !tbaa !275
  %7 = icmp sgt i32 %6, 2147483645
  br i1 %7, label %8, label %checklimit.exit

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 3
  %10 = load %struct.LexState.267** %9, align 8, !tbaa !85
  %11 = getelementptr inbounds %struct.LexState.267* %10, i64 0, i32 6
  %12 = load %struct.lua_State.126** %11, align 8, !tbaa !89
  %13 = getelementptr inbounds %struct.FuncState.266* %4, i64 0, i32 0
  %14 = load %struct.Proto.132** %13, align 8, !tbaa !82
  %15 = getelementptr inbounds %struct.Proto.132* %14, i64 0, i32 17
  %16 = load i32* %15, align 4, !tbaa !123
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

; <label>:18                                      ; preds = %8
  %19 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %12, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %16) #3
  br label %20

; <label>:20                                      ; preds = %18, %8
  %21 = phi i8* [ %19, %18 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %8 ]
  %22 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %12, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8]* @.str13194, i64 0, i64 0), i32 2147483645, i8* %21) #3
  %23 = load %struct.LexState.267** %9, align 8, !tbaa !85
  tail call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %23, i8* %22) #13
  unreachable

checklimit.exit:                                  ; preds = %0
  %24 = add nsw i32 %6, 1
  store i32 %24, i32* %5, align 4, !tbaa !275
  %25 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 4
  %26 = load i32* %25, align 4, !tbaa !272
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 4, !tbaa !272
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @recfield(%struct.LexState.267* %ls, %struct.ConsControl* nocapture %cc) #0 {
  %key = alloca %struct.expdesc, align 8
  %val = alloca %struct.expdesc, align 8
  %1 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 5
  %2 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %3 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 14
  %4 = load i8* %3, align 1, !tbaa !87
  %5 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 0
  %6 = load i32* %5, align 4, !tbaa !220
  %7 = icmp eq i32 %6, 288
  br i1 %7, label %8, label %38

; <label>:8                                       ; preds = %0
  %9 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 2
  %10 = load i32* %9, align 4, !tbaa !274
  %11 = icmp sgt i32 %10, 2147483645
  br i1 %11, label %12, label %checkname.exit

; <label>:12                                      ; preds = %8
  %13 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 3
  %14 = load %struct.LexState.267** %13, align 8, !tbaa !85
  %15 = getelementptr inbounds %struct.LexState.267* %14, i64 0, i32 6
  %16 = load %struct.lua_State.126** %15, align 8, !tbaa !89
  %17 = getelementptr inbounds %struct.FuncState.266* %2, i64 0, i32 0
  %18 = load %struct.Proto.132** %17, align 8, !tbaa !82
  %19 = getelementptr inbounds %struct.Proto.132* %18, i64 0, i32 17
  %20 = load i32* %19, align 4, !tbaa !123
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %12
  %23 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %16, i8* getelementptr inbounds ([20 x i8]* @.str15196, i64 0, i64 0), i32 %20) #3
  br label %24

; <label>:24                                      ; preds = %22, %12
  %25 = phi i8* [ %23, %22 ], [ getelementptr inbounds ([14 x i8]* @.str14195, i64 0, i64 0), %12 ]
  %26 = call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %16, i8* getelementptr inbounds ([32 x i8]* @.str16197, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8]* @.str13194, i64 0, i64 0), i32 2147483645, i8* %25) #3
  %27 = load %struct.LexState.267** %13, align 8, !tbaa !85
  call void bitcast (void (%struct.LexState.194*, i8*)* @luaX_syntaxerror to void (%struct.LexState.267*, i8*)*)(%struct.LexState.267* %27, i8* %26) #13
  unreachable

checkname.exit:                                   ; preds = %8
  %28 = getelementptr inbounds %struct.LexState.267* %ls, i64 0, i32 3, i32 1
  %29 = bitcast %union.SemInfo* %28 to %union.TString.115**
  %30 = load %union.TString.115** %29, align 8, !tbaa !25
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %31 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  %32 = call i32 bitcast (i32 (%struct.FuncState*, %union.TString.7*)* @luaK_stringK to i32 (%struct.FuncState.266*, %union.TString.115*)*)(%struct.FuncState.266* %31, %union.TString.115* %30) #3
  %33 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 2
  store i32 -1, i32* %33, align 8, !tbaa !99
  %34 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 3
  store i32 -1, i32* %34, align 4, !tbaa !100
  %35 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 0
  store i32 4, i32* %35, align 8, !tbaa !92
  %36 = getelementptr inbounds %struct.expdesc* %key, i64 0, i32 1
  %37 = bitcast %union.anon.7* %36 to i32*
  store i32 %32, i32* %37, align 8, !tbaa !1
  br label %44

; <label>:38                                      ; preds = %0
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %39 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %key, i32 0) #3
  %40 = load %struct.FuncState.266** %1, align 8, !tbaa !221
  call void bitcast (void (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2val to void (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %40, %struct.expdesc* %key) #3
  %41 = load i32* %5, align 4, !tbaa !220
  %42 = icmp eq i32 %41, 93
  br i1 %42, label %yindex.exit, label %43

; <label>:43                                      ; preds = %38
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 93) #13
  unreachable

yindex.exit:                                      ; preds = %38
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %.pre = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 2
  br label %44

; <label>:44                                      ; preds = %yindex.exit, %checkname.exit
  %.pre-phi = phi i32* [ %.pre, %yindex.exit ], [ %9, %checkname.exit ]
  %45 = load i32* %.pre-phi, align 4, !tbaa !274
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %.pre-phi, align 4, !tbaa !274
  %47 = load i32* %5, align 4, !tbaa !220
  %48 = icmp eq i32 %47, 61
  br i1 %48, label %checknext.exit, label %49

; <label>:49                                      ; preds = %44
  call fastcc void @error_expected(%struct.LexState.267* %ls, i32 61) #13
  unreachable

checknext.exit:                                   ; preds = %44
  call void bitcast (void (%struct.LexState.194*)* @luaX_next to void (%struct.LexState.267*)*)(%struct.LexState.267* %ls) #3
  %50 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2RK to i32 (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %key) #3
  %51 = call fastcc i32 @subexpr(%struct.LexState.267* %ls, %struct.expdesc* %val, i32 0) #3
  %52 = getelementptr inbounds %struct.ConsControl* %cc, i64 0, i32 1
  %53 = load %struct.expdesc** %52, align 8, !tbaa !276
  %54 = getelementptr inbounds %struct.expdesc* %53, i64 0, i32 1
  %55 = bitcast %union.anon.7* %54 to i32*
  %56 = load i32* %55, align 4, !tbaa !1
  %57 = call i32 bitcast (i32 (%struct.FuncState*, %struct.expdesc*)* @luaK_exp2RK to i32 (%struct.FuncState.266*, %struct.expdesc*)*)(%struct.FuncState.266* %2, %struct.expdesc* %val) #3
  %58 = call i32 bitcast (i32 (%struct.FuncState*, i32, i32, i32, i32)* @luaK_codeABC to i32 (%struct.FuncState.266*, i32, i32, i32, i32)*)(%struct.FuncState.266* %2, i32 10, i32 %56, i32 %50, i32 %57) #3
  store i8 %4, i8* %3, align 1, !tbaa !87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaE_setdebt(%struct.global_State.223* nocapture %g, i64 %debt) #0 {
  %1 = getelementptr inbounds %struct.global_State.223* %g, i64 0, i32 3
  %2 = load i64* %1, align 8, !tbaa !33
  %3 = getelementptr inbounds %struct.global_State.223* %g, i64 0, i32 2
  %4 = load i64* %3, align 8, !tbaa !64
  %5 = sub i64 %2, %debt
  %6 = add i64 %5, %4
  store i64 %6, i64* %3, align 8, !tbaa !64
  store i64 %debt, i64* %1, align 8, !tbaa !33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.CallInfo.225* @luaE_extendCI(%struct.lua_State.228* %L) #0 {
  %1 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* null, i64 0, i64 80) #3
  %2 = bitcast i8* %1 to %struct.CallInfo.225*
  %3 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %4 = load %struct.CallInfo.225** %3, align 8, !tbaa !5
  %5 = getelementptr inbounds %struct.CallInfo.225* %4, i64 0, i32 3
  store %struct.CallInfo.225* %2, %struct.CallInfo.225** %5, align 8, !tbaa !138
  %6 = getelementptr inbounds i8* %1, i64 16
  %7 = bitcast i8* %6 to %struct.CallInfo.225**
  store %struct.CallInfo.225* %4, %struct.CallInfo.225** %7, align 8, !tbaa !133
  %8 = getelementptr inbounds i8* %1, i64 24
  %9 = bitcast i8* %8 to %struct.CallInfo.225**
  store %struct.CallInfo.225* null, %struct.CallInfo.225** %9, align 8, !tbaa !138
  ret %struct.CallInfo.225* %2
}

; Function Attrs: nounwind ssp uwtable
define void @luaE_freeCI(%struct.lua_State.228* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %2 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.CallInfo.225* %2, i64 0, i32 3
  %4 = load %struct.CallInfo.225** %3, align 8, !tbaa !138
  store %struct.CallInfo.225* null, %struct.CallInfo.225** %3, align 8, !tbaa !138
  %5 = icmp eq %struct.CallInfo.225* %4, null
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %next.01 = phi %struct.CallInfo.225* [ %7, %.lr.ph ], [ %4, %0 ]
  %6 = getelementptr inbounds %struct.CallInfo.225* %next.01, i64 0, i32 3
  %7 = load %struct.CallInfo.225** %6, align 8, !tbaa !138
  %8 = bitcast %struct.CallInfo.225* %next.01 to i8*
  %9 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %8, i64 80, i64 0) #3
  %10 = icmp eq %struct.CallInfo.225* %7, null
  br i1 %10, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_State.228* @lua_newthread(%struct.lua_State.228* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %2 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 3
  %4 = load i64* %3, align 8, !tbaa !33
  %5 = icmp sgt i64 %4, 0
  br i1 %5, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call %union.GCObject.229* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.229* (%struct.lua_State.228*, i32, i64, %union.GCObject.229**, i32)*)(%struct.lua_State.228* %L, i32 8, i64 208, %union.GCObject.229** null, i32 0) #3
  %9 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %10 = load %struct.lua_TValue.215** %9, align 8, !tbaa !12
  %11 = getelementptr inbounds %struct.lua_TValue.215* %10, i64 0, i32 0, i32 0
  store %union.GCObject.229* %8, %union.GCObject.229** %11, align 8, !tbaa !25
  %12 = getelementptr inbounds %struct.lua_TValue.215* %10, i64 0, i32 1
  store i32 72, i32* %12, align 4, !tbaa !15
  %13 = load %struct.lua_TValue.215** %9, align 8, !tbaa !12
  %14 = getelementptr inbounds %struct.lua_TValue.215* %13, i64 1
  store %struct.lua_TValue.215* %14, %struct.lua_TValue.215** %9, align 8, !tbaa !12
  %15 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %16 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 5
  store %struct.global_State.223* %15, %struct.global_State.223** %16, align 8, !tbaa !17
  %17 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 9
  store %struct.lua_TValue.215* null, %struct.lua_TValue.215** %17, align 8, !tbaa !13
  %18 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 6
  store %struct.CallInfo.225* null, %struct.CallInfo.225** %18, align 8, !tbaa !5
  %19 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 10
  store i32 0, i32* %19, align 4, !tbaa !144
  %20 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 20
  store %struct.lua_longjmp* null, %struct.lua_longjmp** %20, align 8, !tbaa !139
  %21 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 12
  store i16 0, i16* %21, align 2, !tbaa !142
  %22 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 17
  store void (%struct.lua_State.228*, %struct.lua_Debug.226*)* null, void (%struct.lua_State.228*, %struct.lua_Debug.226*)** %22, align 8, !tbaa !112
  %23 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 13
  store i8 0, i8* %23, align 1, !tbaa !115
  %24 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 15
  store i32 0, i32* %24, align 4, !tbaa !113
  %25 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 14
  store i8 1, i8* %25, align 1, !tbaa !56
  %26 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 16
  %27 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 18
  store %union.GCObject.229* null, %union.GCObject.229** %27, align 8, !tbaa !189
  %28 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 11
  store i16 1, i16* %28, align 2, !tbaa !50
  %29 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 3
  store i8 0, i8* %29, align 1, !tbaa !62
  %30 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 21
  store i64 0, i64* %30, align 8, !tbaa !58
  %31 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 13
  %32 = load i8* %31, align 1, !tbaa !115
  store i8 %32, i8* %23, align 1, !tbaa !115
  %33 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 15
  %34 = load i32* %33, align 4, !tbaa !113
  store i32 %34, i32* %24, align 4, !tbaa !113
  %35 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 17
  %36 = load void (%struct.lua_State.228*, %struct.lua_Debug.226*)** %35, align 8, !tbaa !112
  store void (%struct.lua_State.228*, %struct.lua_Debug.226*)* %36, void (%struct.lua_State.228*, %struct.lua_Debug.226*)** %22, align 8, !tbaa !112
  store i32 %34, i32* %26, align 4, !tbaa !114
  %37 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* null, i64 0, i64 640) #3
  %38 = bitcast i8* %37 to %struct.lua_TValue.215*
  store %struct.lua_TValue.215* %38, %struct.lua_TValue.215** %17, align 8, !tbaa !13
  store i32 40, i32* %19, align 4, !tbaa !144
  br label %39

; <label>:39                                      ; preds = %39, %7
  %indvars.iv.i = phi i64 [ 0, %7 ], [ %indvars.iv.next.i, %39 ]
  %40 = getelementptr inbounds %struct.lua_TValue.215* %38, i64 %indvars.iv.i, i32 1
  store i32 0, i32* %40, align 4, !tbaa !15
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 40
  br i1 %exitcond.i, label %stack_init.exit, label %39

stack_init.exit:                                  ; preds = %39
  %41 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0
  %42 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 4
  %43 = getelementptr inbounds i8* %37, i64 560
  %44 = bitcast i8* %43 to %struct.lua_TValue.215*
  %45 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 8
  store %struct.lua_TValue.215* %44, %struct.lua_TValue.215** %45, align 8, !tbaa !11
  %46 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 22
  %47 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 22, i32 2
  %48 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 22, i32 5
  store i8 0, i8* %48, align 1, !tbaa !46
  %49 = getelementptr inbounds %struct.CallInfo.225* %46, i64 0, i32 0
  %50 = bitcast %struct.CallInfo.225** %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* %50, i8 0, i64 16, i32 8, i1 false) #3
  store %struct.lua_TValue.215* %38, %struct.lua_TValue.215** %49, align 8, !tbaa !24
  %51 = getelementptr inbounds i8* %37, i64 16
  %52 = bitcast i8* %51 to %struct.lua_TValue.215*
  store %struct.lua_TValue.215* %52, %struct.lua_TValue.215** %42, align 8, !tbaa !12
  %53 = getelementptr inbounds i8* %37, i64 8
  %54 = bitcast i8* %53 to i32*
  store i32 0, i32* %54, align 4, !tbaa !15
  %55 = getelementptr inbounds i8* %37, i64 336
  %56 = bitcast i8* %55 to %struct.lua_TValue.215*
  %57 = getelementptr inbounds %union.GCObject.229* %8, i64 0, i32 0, i32 22, i32 1
  store %struct.lua_TValue.215* %56, %struct.lua_TValue.215** %57, align 8, !tbaa !14
  store %struct.CallInfo.225* %46, %struct.CallInfo.225** %18, align 8, !tbaa !5
  ret %struct.lua_State.228* %41
}

; Function Attrs: nounwind ssp uwtable
define void @luaE_freethread(%struct.lua_State.228* %L, %struct.lua_State.228* %L1) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L1, i64 0, i32 9
  %2 = load %struct.lua_TValue.215** %1, align 8, !tbaa !13
  tail call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L1, %struct.lua_TValue.215* %2) #3
  %3 = load %struct.lua_TValue.215** %1, align 8, !tbaa !13
  %4 = icmp eq %struct.lua_TValue.215* %3, null
  br i1 %4, label %freestack.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.lua_State.228* %L1, i64 0, i32 22
  %7 = getelementptr inbounds %struct.lua_State.228* %L1, i64 0, i32 6
  store %struct.CallInfo.225* %6, %struct.CallInfo.225** %7, align 8, !tbaa !5
  %8 = getelementptr inbounds %struct.lua_State.228* %L1, i64 0, i32 22, i32 3
  %9 = load %struct.CallInfo.225** %8, align 8, !tbaa !138
  store %struct.CallInfo.225* null, %struct.CallInfo.225** %8, align 8, !tbaa !138
  %10 = icmp eq %struct.CallInfo.225* %9, null
  br i1 %10, label %luaE_freeCI.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %5
  %next.01.i.i = phi %struct.CallInfo.225* [ %12, %.lr.ph.i.i ], [ %9, %5 ]
  %11 = getelementptr inbounds %struct.CallInfo.225* %next.01.i.i, i64 0, i32 3
  %12 = load %struct.CallInfo.225** %11, align 8, !tbaa !138
  %13 = bitcast %struct.CallInfo.225* %next.01.i.i to i8*
  %14 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L1, i8* %13, i64 80, i64 0) #3
  %15 = icmp eq %struct.CallInfo.225* %12, null
  br i1 %15, label %luaE_freeCI.exit.loopexit.i, label %.lr.ph.i.i

luaE_freeCI.exit.loopexit.i:                      ; preds = %.lr.ph.i.i
  %.pre.i = load %struct.lua_TValue.215** %1, align 8, !tbaa !13
  br label %luaE_freeCI.exit.i

luaE_freeCI.exit.i:                               ; preds = %luaE_freeCI.exit.loopexit.i, %5
  %16 = phi %struct.lua_TValue.215* [ %.pre.i, %luaE_freeCI.exit.loopexit.i ], [ %3, %5 ]
  %17 = bitcast %struct.lua_TValue.215* %16 to i8*
  %18 = getelementptr inbounds %struct.lua_State.228* %L1, i64 0, i32 10
  %19 = load i32* %18, align 4, !tbaa !144
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 4
  %22 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L1, i8* %17, i64 %21, i64 0) #3
  br label %freestack.exit

freestack.exit:                                   ; preds = %luaE_freeCI.exit.i, %0
  %23 = bitcast %struct.lua_State.228* %L1 to i8*
  %24 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %23, i64 208, i64 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_State.228* @lua_newstate(i8* (i8*, i8*, i64, i64)* %f, i8* %ud) #0 {
  %buff.i = alloca [32 x i8], align 16
  %h.i = alloca i32, align 4
  %1 = call i8* %f(i8* %ud, i8* null, i64 8, i64 704) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %93, label %3

; <label>:3                                       ; preds = %0
  %4 = bitcast i8* %1 to %struct.lua_State.228*
  %5 = getelementptr inbounds i8* %1, i64 208
  %6 = bitcast i8* %5 to %struct.global_State.223*
  %7 = bitcast i8* %1 to %union.GCObject.229**
  store %union.GCObject.229* null, %union.GCObject.229** %7, align 8, !tbaa !278
  %8 = getelementptr inbounds i8* %1, i64 8
  store i8 8, i8* %8, align 1, !tbaa !279
  %9 = getelementptr inbounds i8* %1, i64 292
  store i8 33, i8* %9, align 1, !tbaa !188
  %10 = getelementptr inbounds i8* %1, i64 9
  store i8 1, i8* %10, align 1, !tbaa !280
  %11 = getelementptr inbounds i8* %1, i64 294
  store i8 0, i8* %11, align 1, !tbaa !65
  %12 = getelementptr inbounds i8* %1, i64 24
  %13 = bitcast i8* %12 to %struct.global_State.223**
  store %struct.global_State.223* %6, %struct.global_State.223** %13, align 8, !tbaa !17
  %14 = getelementptr inbounds i8* %1, i64 56
  %15 = bitcast i8* %14 to %struct.lua_TValue.215**
  store %struct.lua_TValue.215* null, %struct.lua_TValue.215** %15, align 8, !tbaa !13
  %16 = getelementptr inbounds i8* %1, i64 32
  %17 = bitcast i8* %16 to %struct.CallInfo.225**
  store %struct.CallInfo.225* null, %struct.CallInfo.225** %17, align 8, !tbaa !5
  %18 = getelementptr inbounds i8* %1, i64 64
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 4, !tbaa !144
  %20 = getelementptr inbounds i8* %1, i64 112
  %21 = bitcast i8* %20 to %struct.lua_longjmp**
  store %struct.lua_longjmp* null, %struct.lua_longjmp** %21, align 8, !tbaa !139
  %22 = getelementptr inbounds i8* %1, i64 70
  %23 = bitcast i8* %22 to i16*
  store i16 0, i16* %23, align 2, !tbaa !142
  %24 = getelementptr inbounds i8* %1, i64 88
  %25 = bitcast i8* %24 to void (%struct.lua_State.228*, %struct.lua_Debug.226*)**
  store void (%struct.lua_State.228*, %struct.lua_Debug.226*)* null, void (%struct.lua_State.228*, %struct.lua_Debug.226*)** %25, align 8, !tbaa !112
  %26 = getelementptr inbounds i8* %1, i64 72
  store i8 0, i8* %26, align 1, !tbaa !115
  %27 = getelementptr inbounds i8* %1, i64 76
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 4, !tbaa !113
  %29 = getelementptr inbounds i8* %1, i64 73
  store i8 1, i8* %29, align 1, !tbaa !56
  %30 = getelementptr inbounds i8* %1, i64 80
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4, !tbaa !114
  %32 = getelementptr inbounds i8* %1, i64 96
  %33 = bitcast i8* %32 to %union.GCObject.229**
  store %union.GCObject.229* null, %union.GCObject.229** %33, align 8, !tbaa !189
  %34 = getelementptr inbounds i8* %1, i64 68
  %35 = bitcast i8* %34 to i16*
  store i16 1, i16* %35, align 2, !tbaa !50
  %36 = getelementptr inbounds i8* %1, i64 10
  store i8 0, i8* %36, align 1, !tbaa !62
  %37 = getelementptr inbounds i8* %1, i64 120
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8, !tbaa !58
  %39 = bitcast i8* %5 to i8* (i8*, i8*, i64, i64)**
  store i8* (i8*, i8*, i64, i64)* %f, i8* (i8*, i8*, i64, i64)** %39, align 8, !tbaa !72
  %40 = getelementptr inbounds i8* %1, i64 216
  %41 = bitcast i8* %40 to i8**
  store i8* %ud, i8** %41, align 8, !tbaa !71
  %42 = getelementptr inbounds i8* %1, i64 472
  %43 = bitcast i8* %42 to %struct.lua_State.228**
  store %struct.lua_State.228* %4, %struct.lua_State.228** %43, align 8, !tbaa !40
  %44 = getelementptr inbounds [32 x i8]* %buff.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 32, i8* %44) #3
  %45 = bitcast i32* %h.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %45) #3
  %46 = call i64 @time(i64* null) #3
  %47 = trunc i64 %46 to i32
  store i32 %47, i32* %h.i, align 4, !tbaa !1
  %48 = ptrtoint i8* %1 to i64
  %49 = bitcast [32 x i8]* %buff.i to i64*
  store i64 %48, i64* %49, align 16
  %50 = ptrtoint i32* %h.i to i64
  %51 = getelementptr inbounds [32 x i8]* %buff.i, i64 0, i64 8
  %52 = bitcast i8* %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds [32 x i8]* %buff.i, i64 0, i64 16
  %54 = bitcast i8* %53 to i64*
  store i64 ptrtoint ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to i64), i64* %54, align 16
  %55 = getelementptr inbounds [32 x i8]* %buff.i, i64 0, i64 24
  %56 = bitcast i8* %55 to i64*
  store i64 ptrtoint (%struct.lua_State.228* (i8* (i8*, i8*, i64, i64)*, i8*)* @lua_newstate to i64), i64* %56, align 8
  %57 = call i32 @luaS_hash(i8* %44, i64 32, i32 %47) #3
  call void @llvm.lifetime.end(i64 32, i8* %44) #3
  call void @llvm.lifetime.end(i64 4, i8* %45) #3
  %58 = getelementptr inbounds i8* %1, i64 288
  %59 = bitcast i8* %58 to i32*
  store i32 %57, i32* %59, align 4, !tbaa !281
  %60 = getelementptr inbounds i8* %1, i64 384
  %61 = bitcast i8* %60 to %struct.UpVal.217*
  %62 = getelementptr inbounds i8* %1, i64 408
  %63 = bitcast i8* %62 to %struct.UpVal.217**
  store %struct.UpVal.217* %61, %struct.UpVal.217** %63, align 8, !tbaa !136
  %64 = getelementptr inbounds i8* %1, i64 416
  %65 = bitcast i8* %64 to %struct.UpVal.217**
  store %struct.UpVal.217* %61, %struct.UpVal.217** %65, align 8, !tbaa !147
  %66 = getelementptr inbounds i8* %1, i64 295
  store i8 0, i8* %66, align 1, !tbaa !63
  %67 = getelementptr inbounds i8* %1, i64 248
  %68 = getelementptr inbounds i8* %1, i64 280
  %69 = bitcast i8* %68 to i32*
  store i32 0, i32* %69, align 4, !tbaa !15
  %70 = getelementptr inbounds i8* %1, i64 424
  %71 = bitcast i8* %70 to i8**
  store i8* null, i8** %71, align 8, !tbaa !161
  %72 = getelementptr inbounds i8* %1, i64 440
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8, !tbaa !162
  %74 = getelementptr inbounds i8* %1, i64 464
  %75 = bitcast i8* %74 to i32 (%struct.lua_State.228*)**
  store i32 (%struct.lua_State.228*)* null, i32 (%struct.lua_State.228*)** %75, align 8, !tbaa !18
  %76 = getelementptr inbounds i8* %1, i64 480
  %77 = bitcast i8* %76 to double**
  store double* null, double** %77, align 8, !tbaa !23
  %78 = getelementptr inbounds i8* %1, i64 293
  call void @llvm.memset.p0i8.i64(i8* %67, i8 0, i64 24, i32 8, i1 false)
  store i8 5, i8* %78, align 1, !tbaa !67
  %79 = getelementptr inbounds i8* %1, i64 304
  %80 = getelementptr inbounds i8* %1, i64 224
  %81 = bitcast i8* %80 to i64*
  call void @llvm.memset.p0i8.i64(i8* %79, i8 0, i64 80, i32 8, i1 false)
  store i64 704, i64* %81, align 8, !tbaa !64
  %82 = getelementptr inbounds i8* %1, i64 232
  %83 = bitcast i8* %82 to i64*
  store i64 0, i64* %83, align 8, !tbaa !33
  %84 = getelementptr inbounds i8* %1, i64 448
  %85 = bitcast i8* %84 to i32*
  store i32 200, i32* %85, align 4, !tbaa !68
  %86 = getelementptr inbounds i8* %1, i64 452
  %87 = bitcast i8* %86 to i32*
  store i32 200, i32* %87, align 4, !tbaa !69
  %88 = getelementptr inbounds i8* %1, i64 456
  %89 = bitcast i8* %88 to i32*
  store i32 200, i32* %89, align 4, !tbaa !70
  %scevgep = getelementptr i8* %1, i64 632
  call void @llvm.memset.p0i8.i64(i8* %scevgep, i8 0, i64 72, i32 8, i1 false)
  %90 = call i32 bitcast (i32 (%struct.lua_State*, void (%struct.lua_State*, i8*)*, i8*)* @luaD_rawrunprotected to i32 (%struct.lua_State.228*, void (%struct.lua_State.228*, i8*)*, i8*)*)(%struct.lua_State.228* %4, void (%struct.lua_State.228*, i8*)* @f_luaopen, i8* null) #3
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92

; <label>:92                                      ; preds = %3
  call fastcc void @close_state(%struct.lua_State.228* %4)
  br label %93

; <label>:93                                      ; preds = %92, %3, %0
  %.0 = phi %struct.lua_State.228* [ null, %0 ], [ null, %92 ], [ %4, %3 ]
  ret %struct.lua_State.228* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @lua_close(%struct.lua_State.228* nocapture readonly %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %2 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 30
  %4 = load %struct.lua_State.228** %3, align 8, !tbaa !40
  tail call fastcc void @close_state(%struct.lua_State.228* %4)
  ret void
}

declare i64 @time(i64*) #8

; Function Attrs: nounwind ssp uwtable
define internal void @f_luaopen(%struct.lua_State.228* %L, i8* nocapture readnone %ud) #0 {
  %mt.i = alloca %struct.lua_TValue.215, align 8
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %2 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %3 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* null, i64 0, i64 640) #3
  %4 = bitcast i8* %3 to %struct.lua_TValue.215*
  %5 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  store %struct.lua_TValue.215* %4, %struct.lua_TValue.215** %5, align 8, !tbaa !13
  %6 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 10
  store i32 40, i32* %6, align 4, !tbaa !144
  br label %7

; <label>:7                                       ; preds = %7, %0
  %indvars.iv.i = phi i64 [ 0, %0 ], [ %indvars.iv.next.i, %7 ]
  %8 = getelementptr inbounds %struct.lua_TValue.215* %4, i64 %indvars.iv.i, i32 1
  store i32 0, i32* %8, align 4, !tbaa !15
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, 40
  br i1 %exitcond.i, label %stack_init.exit, label %7

stack_init.exit:                                  ; preds = %7
  %9 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %10 = getelementptr inbounds i8* %3, i64 560
  %11 = bitcast i8* %10 to %struct.lua_TValue.215*
  %12 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 8
  store %struct.lua_TValue.215* %11, %struct.lua_TValue.215** %12, align 8, !tbaa !11
  %13 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 22
  %14 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 22, i32 2
  %15 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 22, i32 5
  store i8 0, i8* %15, align 1, !tbaa !46
  %16 = getelementptr inbounds %struct.CallInfo.225* %13, i64 0, i32 0
  %17 = bitcast %struct.CallInfo.225** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* %17, i8 0, i64 16, i32 8, i1 false) #3
  store %struct.lua_TValue.215* %4, %struct.lua_TValue.215** %16, align 8, !tbaa !24
  %18 = getelementptr inbounds i8* %3, i64 16
  %19 = bitcast i8* %18 to %struct.lua_TValue.215*
  store %struct.lua_TValue.215* %19, %struct.lua_TValue.215** %9, align 8, !tbaa !12
  %20 = getelementptr inbounds i8* %3, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 4, !tbaa !15
  %22 = getelementptr inbounds i8* %3, i64 336
  %23 = bitcast i8* %22 to %struct.lua_TValue.215*
  %24 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 22, i32 1
  store %struct.lua_TValue.215* %23, %struct.lua_TValue.215** %24, align 8, !tbaa !14
  %25 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  store %struct.CallInfo.225* %13, %struct.CallInfo.225** %25, align 8, !tbaa !5
  %26 = bitcast %struct.lua_TValue.215* %mt.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %26) #3
  %27 = call %struct.Table.222* bitcast (%struct.Table* (%struct.lua_State*)* @luaH_new to %struct.Table.222* (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %28 = bitcast %struct.Table.222* %27 to %union.GCObject.229*
  %29 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 7, i32 0, i32 0
  store %union.GCObject.229* %28, %union.GCObject.229** %29, align 8, !tbaa !25
  %30 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 7, i32 1
  store i32 69, i32* %30, align 4, !tbaa !15
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32, i32)* @luaH_resize to void (%struct.lua_State.228*, %struct.Table.222*, i32, i32)*)(%struct.lua_State.228* %L, %struct.Table.222* %27, i32 2, i32 0) #3
  %31 = bitcast %struct.lua_State.228* %L to %union.GCObject.229*
  %32 = getelementptr inbounds %struct.lua_TValue.215* %mt.i, i64 0, i32 0, i32 0
  store %union.GCObject.229* %31, %union.GCObject.229** %32, align 8, !tbaa !25
  %33 = getelementptr inbounds %struct.lua_TValue.215* %mt.i, i64 0, i32 1
  store i32 72, i32* %33, align 8, !tbaa !15
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32, %struct.lua_TValue*)* @luaH_setint to void (%struct.lua_State.228*, %struct.Table.222*, i32, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.Table.222* %27, i32 1, %struct.lua_TValue.215* %mt.i) #3
  %34 = call %struct.Table.222* bitcast (%struct.Table* (%struct.lua_State*)* @luaH_new to %struct.Table.222* (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %35 = bitcast %struct.Table.222* %34 to %union.GCObject.229*
  store %union.GCObject.229* %35, %union.GCObject.229** %32, align 8, !tbaa !25
  store i32 69, i32* %33, align 8, !tbaa !15
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32, %struct.lua_TValue*)* @luaH_setint to void (%struct.lua_State.228*, %struct.Table.222*, i32, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.Table.222* %27, i32 2, %struct.lua_TValue.215* %mt.i) #3
  call void @llvm.lifetime.end(i64 16, i8* %26) #3
  call void @luaS_resize(%struct.lua_State.228* %L, i32 32) #3
  call void bitcast (void (%struct.lua_State*)* @luaT_init to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  call void bitcast (void (%struct.lua_State*)* @luaX_init to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %36 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* getelementptr inbounds ([18 x i8]* @.str212, i64 0, i64 0), i64 17) #3
  %37 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 32
  store %union.TString.219* %36, %union.TString.219** %37, align 8, !tbaa !148
  %38 = getelementptr inbounds %union.TString.219* %36, i64 0, i32 0, i32 2
  %39 = load i8* %38, align 1, !tbaa !218
  %40 = or i8 %39, 32
  store i8 %40, i8* %38, align 1, !tbaa !218
  %41 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 12
  store i8 1, i8* %41, align 1, !tbaa !63
  %42 = call double* bitcast (double* (%struct.lua_State*)* @lua_version to double* (%struct.lua_State.228*)*)(%struct.lua_State.228* null) #3
  %43 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 31
  store double* %42, double** %43, align 8, !tbaa !23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @close_state(%struct.lua_State.228* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %2 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %4 = load %struct.lua_TValue.215** %3, align 8, !tbaa !13
  tail call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %4) #3
  tail call void bitcast (void (%struct.lua_State*)* @luaC_freeallobjects to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %5 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %6 = getelementptr inbounds %struct.global_State.223* %5, i64 0, i32 6, i32 0
  %7 = load %union.GCObject.229*** %6, align 8, !tbaa !204
  %8 = bitcast %union.GCObject.229** %7 to i8*
  %9 = getelementptr inbounds %struct.global_State.223* %5, i64 0, i32 6, i32 2
  %10 = load i32* %9, align 4, !tbaa !203
  %11 = sext i32 %10 to i64
  %12 = shl nsw i64 %11, 3
  %13 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %8, i64 %12, i64 0) #3
  %14 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 25, i32 0
  %15 = load i8** %14, align 8, !tbaa !161
  %16 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 25, i32 2
  %17 = load i64* %16, align 8, !tbaa !162
  %18 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %15, i64 %17, i64 0) #3
  store i8* %18, i8** %14, align 8, !tbaa !161
  store i64 0, i64* %16, align 8, !tbaa !162
  %19 = load %struct.lua_TValue.215** %3, align 8, !tbaa !13
  %20 = icmp eq %struct.lua_TValue.215* %19, null
  br i1 %20, label %freestack.exit, label %21

; <label>:21                                      ; preds = %0
  %22 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 22
  %23 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  store %struct.CallInfo.225* %22, %struct.CallInfo.225** %23, align 8, !tbaa !5
  %24 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 22, i32 3
  %25 = load %struct.CallInfo.225** %24, align 8, !tbaa !138
  store %struct.CallInfo.225* null, %struct.CallInfo.225** %24, align 8, !tbaa !138
  %26 = icmp eq %struct.CallInfo.225* %25, null
  br i1 %26, label %luaE_freeCI.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %21
  %next.01.i.i = phi %struct.CallInfo.225* [ %28, %.lr.ph.i.i ], [ %25, %21 ]
  %27 = getelementptr inbounds %struct.CallInfo.225* %next.01.i.i, i64 0, i32 3
  %28 = load %struct.CallInfo.225** %27, align 8, !tbaa !138
  %29 = bitcast %struct.CallInfo.225* %next.01.i.i to i8*
  %30 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %29, i64 80, i64 0) #3
  %31 = icmp eq %struct.CallInfo.225* %28, null
  br i1 %31, label %luaE_freeCI.exit.loopexit.i, label %.lr.ph.i.i

luaE_freeCI.exit.loopexit.i:                      ; preds = %.lr.ph.i.i
  %.pre.i = load %struct.lua_TValue.215** %3, align 8, !tbaa !13
  br label %luaE_freeCI.exit.i

luaE_freeCI.exit.i:                               ; preds = %luaE_freeCI.exit.loopexit.i, %21
  %32 = phi %struct.lua_TValue.215* [ %.pre.i, %luaE_freeCI.exit.loopexit.i ], [ %19, %21 ]
  %33 = bitcast %struct.lua_TValue.215* %32 to i8*
  %34 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 10
  %35 = load i32* %34, align 4, !tbaa !144
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 4
  %38 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %33, i64 %37, i64 0) #3
  br label %freestack.exit

freestack.exit:                                   ; preds = %luaE_freeCI.exit.i, %0
  %39 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 0
  %40 = load i8* (i8*, i8*, i64, i64)** %39, align 8, !tbaa !72
  %41 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 1
  %42 = load i8** %41, align 8, !tbaa !71
  %43 = bitcast %struct.lua_State.228* %L to i8*
  %44 = tail call i8* %40(i8* %42, i8* %43, i64 704, i64 0) #3
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @luaS_eqlngstr(%union.TString.219* readonly %a, %union.TString.219* readonly %b) #1 {
  %1 = getelementptr inbounds %union.TString.219* %a, i64 0, i32 0, i32 5
  %2 = load i64* %1, align 8, !tbaa !34
  %3 = icmp eq %union.TString.219* %a, %b
  br i1 %3, label %15, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %union.TString.219* %b, i64 0, i32 0, i32 5
  %6 = load i64* %5, align 8, !tbaa !34
  %7 = icmp eq i64 %2, %6
  br i1 %7, label %8, label %15

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %union.TString.219* %a, i64 1
  %10 = bitcast %union.TString.219* %9 to i8*
  %11 = getelementptr inbounds %union.TString.219* %b, i64 1
  %12 = bitcast %union.TString.219* %11 to i8*
  %13 = tail call i32 @memcmp(i8* %10, i8* %12, i64 %2) #3
  %14 = icmp eq i32 %13, 0
  br label %15

; <label>:15                                      ; preds = %8, %4, %0
  %16 = phi i1 [ true, %0 ], [ false, %4 ], [ %14, %8 ]
  %17 = zext i1 %16 to i32
  ret i32 %17
}

; Function Attrs: nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) #5

; Function Attrs: nounwind readonly ssp uwtable
define i32 @luaS_eqstr(%union.TString.219* readonly %a, %union.TString.219* readonly %b) #1 {
  %1 = getelementptr inbounds %union.TString.219* %a, i64 0, i32 0, i32 1
  %2 = load i8* %1, align 1, !tbaa !38
  %3 = getelementptr inbounds %union.TString.219* %b, i64 0, i32 0, i32 1
  %4 = load i8* %3, align 1, !tbaa !38
  %5 = icmp eq i8 %2, %4
  br i1 %5, label %6, label %luaS_eqlngstr.exit

; <label>:6                                       ; preds = %0
  %7 = icmp eq i8 %2, 4
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %6
  %9 = icmp eq %union.TString.219* %a, %b
  br label %luaS_eqlngstr.exit

; <label>:10                                      ; preds = %6
  %11 = getelementptr inbounds %union.TString.219* %a, i64 0, i32 0, i32 5
  %12 = load i64* %11, align 8, !tbaa !34
  %13 = icmp eq %union.TString.219* %a, %b
  br i1 %13, label %luaS_eqlngstr.exit, label %14

; <label>:14                                      ; preds = %10
  %15 = getelementptr inbounds %union.TString.219* %b, i64 0, i32 0, i32 5
  %16 = load i64* %15, align 8, !tbaa !34
  %17 = icmp eq i64 %12, %16
  br i1 %17, label %18, label %luaS_eqlngstr.exit

; <label>:18                                      ; preds = %14
  %19 = getelementptr inbounds %union.TString.219* %a, i64 1
  %20 = bitcast %union.TString.219* %19 to i8*
  %21 = getelementptr inbounds %union.TString.219* %b, i64 1
  %22 = bitcast %union.TString.219* %21 to i8*
  %23 = tail call i32 @memcmp(i8* %20, i8* %22, i64 %12) #3
  %24 = icmp eq i32 %23, 0
  br label %luaS_eqlngstr.exit

luaS_eqlngstr.exit:                               ; preds = %18, %14, %10, %8, %0
  %25 = phi i1 [ false, %0 ], [ %9, %8 ], [ true, %10 ], [ false, %14 ], [ %24, %18 ]
  %26 = zext i1 %25 to i32
  ret i32 %26
}

; Function Attrs: nounwind readonly ssp uwtable
define i32 @luaS_hash(i8* nocapture readonly %str, i64 %l, i32 %seed) #1 {
  %1 = trunc i64 %l to i32
  %2 = xor i32 %1, %seed
  %3 = lshr i64 %l, 5
  %4 = add i64 %3, 1
  %5 = icmp ugt i64 %4, %l
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %h.02 = phi i32 [ %14, %.lr.ph ], [ %2, %0 ]
  %l1.01 = phi i64 [ %15, %.lr.ph ], [ %l, %0 ]
  %6 = shl i32 %h.02, 5
  %7 = lshr i32 %h.02, 2
  %8 = add i32 %6, %7
  %9 = add i64 %l1.01, -1
  %10 = getelementptr inbounds i8* %str, i64 %9
  %11 = load i8* %10, align 1, !tbaa !86
  %12 = zext i8 %11 to i32
  %13 = add i32 %8, %12
  %14 = xor i32 %13, %h.02
  %15 = sub i64 %l1.01, %4
  %16 = icmp ult i64 %15, %4
  br i1 %16, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %h.0.lcssa = phi i32 [ %2, %0 ], [ %14, %.lr.ph ]
  ret i32 %h.0.lcssa
}

; Function Attrs: nounwind ssp uwtable
define void @luaS_resize(%struct.lua_State.228* %L, i32 %newsize) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %2 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %3 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 6
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaC_runtilstate to void (%struct.lua_State.228*, i32)*)(%struct.lua_State.228* %L, i32 -5) #3
  %4 = getelementptr inbounds %struct.global_State.223* %2, i64 0, i32 6, i32 2
  %5 = load i32* %4, align 4, !tbaa !282
  %6 = icmp slt i32 %5, %newsize
  br i1 %6, label %11, label %.preheader

.preheader:                                       ; preds = %28, %15, %0
  %7 = phi i32 [ %5, %0 ], [ %25, %15 ], [ %25, %28 ]
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %.lr.ph3, label %._crit_edge4

.lr.ph3:                                          ; preds = %.preheader
  %9 = getelementptr inbounds %struct.stringtable.216* %3, i64 0, i32 0
  %10 = add nsw i32 %newsize, -1
  br label %33

; <label>:11                                      ; preds = %0
  %12 = add nsw i32 %newsize, 1
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %15

; <label>:14                                      ; preds = %11
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #13
  unreachable

; <label>:15                                      ; preds = %11
  %16 = getelementptr inbounds %struct.stringtable.216* %3, i64 0, i32 0
  %17 = load %union.GCObject.229*** %16, align 8, !tbaa !283
  %18 = bitcast %union.GCObject.229** %17 to i8*
  %19 = sext i32 %5 to i64
  %20 = shl nsw i64 %19, 3
  %21 = sext i32 %newsize to i64
  %22 = shl nsw i64 %21, 3
  %23 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %18, i64 %20, i64 %22) #3
  %24 = bitcast i8* %23 to %union.GCObject.229**
  store %union.GCObject.229** %24, %union.GCObject.229*** %16, align 8, !tbaa !283
  %25 = load i32* %4, align 4, !tbaa !282
  %26 = icmp slt i32 %25, %newsize
  br i1 %26, label %.lr.ph7, label %.preheader

.lr.ph7:                                          ; preds = %15
  %27 = sext i32 %25 to i64
  br label %28

; <label>:28                                      ; preds = %._crit_edge10, %.lr.ph7
  %29 = phi %union.GCObject.229** [ %24, %.lr.ph7 ], [ %.pre, %._crit_edge10 ]
  %indvars.iv8 = phi i64 [ %27, %.lr.ph7 ], [ %indvars.iv.next9, %._crit_edge10 ]
  %30 = getelementptr inbounds %union.GCObject.229** %29, i64 %indvars.iv8
  store %union.GCObject.229* null, %union.GCObject.229** %30, align 8, !tbaa !25
  %indvars.iv.next9 = add nsw i64 %indvars.iv8, 1
  %31 = trunc i64 %indvars.iv.next9 to i32
  %32 = icmp slt i32 %31, %newsize
  br i1 %32, label %._crit_edge10, label %.preheader

._crit_edge10:                                    ; preds = %28
  %.pre = load %union.GCObject.229*** %16, align 8, !tbaa !283
  br label %28

; <label>:33                                      ; preds = %._crit_edge, %.lr.ph3
  %indvars.iv = phi i64 [ 0, %.lr.ph3 ], [ %indvars.iv.next, %._crit_edge ]
  %34 = load %union.GCObject.229*** %9, align 8, !tbaa !283
  %35 = getelementptr inbounds %union.GCObject.229** %34, i64 %indvars.iv
  %36 = load %union.GCObject.229** %35, align 8, !tbaa !25
  store %union.GCObject.229* null, %union.GCObject.229** %35, align 8, !tbaa !25
  %37 = icmp eq %union.GCObject.229* %36, null
  br i1 %37, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %33
  %p.01 = phi %union.GCObject.229* [ %39, %.lr.ph ], [ %36, %33 ]
  %38 = getelementptr inbounds %union.GCObject.229* %p.01, i64 0, i32 0, i32 0
  %39 = load %union.GCObject.229** %38, align 8, !tbaa !192
  %40 = bitcast %union.GCObject.229* %p.01 to %struct.anon*
  %41 = getelementptr inbounds %struct.anon* %40, i64 0, i32 4
  %42 = load i32* %41, align 4, !tbaa !284
  %43 = and i32 %42, %10
  %44 = zext i32 %43 to i64
  %45 = load %union.GCObject.229*** %9, align 8, !tbaa !283
  %46 = getelementptr inbounds %union.GCObject.229** %45, i64 %44
  %47 = load %union.GCObject.229** %46, align 8, !tbaa !25
  store %union.GCObject.229* %47, %union.GCObject.229** %38, align 8, !tbaa !192
  store %union.GCObject.229* %p.01, %union.GCObject.229** %46, align 8, !tbaa !25
  %48 = getelementptr inbounds %union.GCObject.229* %p.01, i64 0, i32 0, i32 2
  %49 = load i8* %48, align 1, !tbaa !28
  %50 = and i8 %49, -65
  store i8 %50, i8* %48, align 1, !tbaa !28
  %51 = icmp eq %union.GCObject.229* %39, null
  br i1 %51, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %33
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %52 = trunc i64 %indvars.iv.next to i32
  %53 = icmp slt i32 %52, %7
  br i1 %53, label %33, label %._crit_edge4

._crit_edge4:                                     ; preds = %._crit_edge, %.preheader
  %54 = icmp sgt i32 %7, %newsize
  br i1 %54, label %55, label %69

; <label>:55                                      ; preds = %._crit_edge4
  %56 = add nsw i32 %newsize, 1
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %55
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #13
  unreachable

; <label>:59                                      ; preds = %55
  %60 = getelementptr inbounds %struct.stringtable.216* %3, i64 0, i32 0
  %61 = load %union.GCObject.229*** %60, align 8, !tbaa !283
  %62 = bitcast %union.GCObject.229** %61 to i8*
  %63 = sext i32 %7 to i64
  %64 = shl nsw i64 %63, 3
  %65 = sext i32 %newsize to i64
  %66 = shl nsw i64 %65, 3
  %67 = tail call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.228*, i8*, i64, i64)*)(%struct.lua_State.228* %L, i8* %62, i64 %64, i64 %66) #3
  %68 = bitcast i8* %67 to %union.GCObject.229**
  store %union.GCObject.229** %68, %union.GCObject.229*** %60, align 8, !tbaa !283
  br label %69

; <label>:69                                      ; preds = %59, %._crit_edge4
  store i32 %newsize, i32* %4, align 4, !tbaa !282
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %str, i64 %l) #0 {
  %1 = icmp ult i64 %l, 41
  br i1 %1, label %2, label %89

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %4 = load %struct.global_State.223** %3, align 8, !tbaa !17
  %5 = getelementptr inbounds %struct.global_State.223* %4, i64 0, i32 8
  %6 = load i32* %5, align 4, !tbaa !281
  %7 = trunc i64 %l to i32
  %8 = xor i32 %6, %7
  %9 = lshr i64 %l, 5
  %10 = add i64 %9, 1
  %11 = icmp ugt i64 %10, %l
  br i1 %11, label %luaS_hash.exit.i, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %2
  %h.02.i.i = phi i32 [ %20, %.lr.ph.i.i ], [ %8, %2 ]
  %l1.01.i.i = phi i64 [ %21, %.lr.ph.i.i ], [ %l, %2 ]
  %12 = shl i32 %h.02.i.i, 5
  %13 = lshr i32 %h.02.i.i, 2
  %14 = add i32 %12, %13
  %15 = add i64 %l1.01.i.i, -1
  %16 = getelementptr inbounds i8* %str, i64 %15
  %17 = load i8* %16, align 1, !tbaa !86
  %18 = zext i8 %17 to i32
  %19 = add i32 %14, %18
  %20 = xor i32 %19, %h.02.i.i
  %21 = sub i64 %l1.01.i.i, %10
  %22 = icmp ult i64 %21, %10
  br i1 %22, label %luaS_hash.exit.i, label %.lr.ph.i.i

luaS_hash.exit.i:                                 ; preds = %.lr.ph.i.i, %2
  %h.0.lcssa.i.i = phi i32 [ %8, %2 ], [ %20, %.lr.ph.i.i ]
  %23 = getelementptr inbounds %struct.global_State.223* %4, i64 0, i32 6, i32 2
  %24 = load i32* %23, align 4, !tbaa !203
  %25 = add nsw i32 %24, -1
  %26 = and i32 %25, %h.0.lcssa.i.i
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.global_State.223* %4, i64 0, i32 6, i32 0
  %29 = load %union.GCObject.229*** %28, align 8, !tbaa !204
  %30 = getelementptr inbounds %union.GCObject.229** %29, i64 %27
  %o.02.i = load %union.GCObject.229** %30, align 8
  %31 = icmp eq %union.GCObject.229* %o.02.i, null
  br i1 %31, label %._crit_edge.i, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %60, %luaS_hash.exit.i
  %o.03.i = phi %union.GCObject.229* [ %o.0.i, %60 ], [ %o.02.i, %luaS_hash.exit.i ]
  %32 = bitcast %union.GCObject.229* %o.03.i to %union.TString.219*
  %33 = bitcast %union.GCObject.229* %o.03.i to %struct.anon*
  %34 = getelementptr inbounds %struct.anon* %33, i64 0, i32 4
  %35 = load i32* %34, align 4, !tbaa !284
  %36 = icmp eq i32 %h.0.lcssa.i.i, %35
  br i1 %36, label %37, label %60

; <label>:37                                      ; preds = %.lr.ph.i
  %38 = getelementptr inbounds %union.GCObject.229* %o.03.i, i64 0, i32 0, i32 4
  %39 = bitcast %struct.lua_TValue.215** %38 to i64*
  %40 = load i64* %39, align 8, !tbaa !34
  %41 = icmp eq i64 %40, %l
  br i1 %41, label %42, label %60

; <label>:42                                      ; preds = %37
  %43 = getelementptr inbounds %union.GCObject.229* %o.03.i, i64 0, i32 0, i32 5
  %44 = bitcast %struct.global_State.223** %43 to i8*
  %45 = tail call i32 @memcmp(i8* %str, i8* %44, i64 %l) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %60

; <label>:47                                      ; preds = %42
  %48 = getelementptr inbounds %union.GCObject.229* %o.03.i, i64 0, i32 0, i32 2
  %49 = load i8* %48, align 1, !tbaa !28
  %50 = zext i8 %49 to i32
  %51 = xor i32 %50, 3
  %52 = getelementptr inbounds %struct.global_State.223* %4, i64 0, i32 9
  %53 = load i8* %52, align 1, !tbaa !188
  %54 = zext i8 %53 to i32
  %55 = xor i32 %54, 3
  %56 = and i32 %55, %51
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %internshrstr.exit

; <label>:58                                      ; preds = %47
  %59 = trunc i32 %51 to i8
  store i8 %59, i8* %48, align 1, !tbaa !28
  br label %internshrstr.exit

; <label>:60                                      ; preds = %42, %37, %.lr.ph.i
  %61 = getelementptr inbounds %union.GCObject.229* %o.03.i, i64 0, i32 0, i32 0
  %o.0.i = load %union.GCObject.229** %61, align 8
  %62 = icmp eq %union.GCObject.229* %o.0.i, null
  br i1 %62, label %._crit_edge.i, label %.lr.ph.i

._crit_edge.i:                                    ; preds = %60, %luaS_hash.exit.i
  %63 = getelementptr inbounds %struct.global_State.223* %4, i64 0, i32 6, i32 1
  %64 = load i32* %63, align 4, !tbaa !285
  %65 = icmp uge i32 %64, %24
  %66 = icmp slt i32 %24, 1073741823
  %or.cond.i.i = and i1 %65, %66
  br i1 %or.cond.i.i, label %67, label %newshrstr.exit.i

; <label>:67                                      ; preds = %._crit_edge.i
  %68 = shl nsw i32 %24, 1
  tail call void @luaS_resize(%struct.lua_State.228* %L, i32 %68) #3
  %.pre.i.i = load i32* %23, align 4, !tbaa !282
  %.pre.i = load %union.GCObject.229*** %28, align 8, !tbaa !283
  br label %newshrstr.exit.i

newshrstr.exit.i:                                 ; preds = %67, %._crit_edge.i
  %69 = phi %union.GCObject.229** [ %29, %._crit_edge.i ], [ %.pre.i, %67 ]
  %70 = phi i32 [ %24, %._crit_edge.i ], [ %.pre.i.i, %67 ]
  %71 = add nsw i32 %70, -1
  %72 = and i32 %71, %h.0.lcssa.i.i
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %union.GCObject.229** %69, i64 %73
  %75 = add i64 %l, 25
  %76 = tail call %union.GCObject.229* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.229* (%struct.lua_State.228*, i32, i64, %union.GCObject.229**, i32)*)(%struct.lua_State.228* %L, i32 4, i64 %75, %union.GCObject.229** %74, i32 0) #3
  %77 = bitcast %union.GCObject.229* %76 to %union.TString.219*
  %78 = bitcast %union.GCObject.229* %76 to %struct.anon*
  %79 = getelementptr inbounds %union.GCObject.229* %76, i64 0, i32 0, i32 4
  %l.c.i.i.i = inttoptr i64 %l to %struct.lua_TValue.215*
  store %struct.lua_TValue.215* %l.c.i.i.i, %struct.lua_TValue.215** %79, align 8, !tbaa !34
  %80 = getelementptr inbounds %struct.anon* %78, i64 0, i32 4
  store i32 %h.0.lcssa.i.i, i32* %80, align 4, !tbaa !284
  %81 = getelementptr inbounds %union.GCObject.229* %76, i64 0, i32 0, i32 3
  store i8 0, i8* %81, align 1, !tbaa !219
  %82 = getelementptr inbounds %union.GCObject.229* %76, i64 0, i32 0, i32 5
  %83 = bitcast %struct.global_State.223** %82 to i8*
  %84 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %83, i1 false) #3
  %85 = tail call i8* @__memcpy_chk(i8* %83, i8* %str, i64 %l, i64 %84) #3
  %86 = getelementptr inbounds i8* %83, i64 %l
  store i8 0, i8* %86, align 1, !tbaa !86
  %87 = load i32* %63, align 4, !tbaa !285
  %88 = add i32 %87, 1
  store i32 %88, i32* %63, align 4, !tbaa !285
  br label %internshrstr.exit

; <label>:89                                      ; preds = %0
  %90 = add i64 %l, 1
  %91 = icmp ugt i64 %90, -27
  br i1 %91, label %92, label %93

; <label>:92                                      ; preds = %89
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #13
  unreachable

; <label>:93                                      ; preds = %89
  %94 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %95 = load %struct.global_State.223** %94, align 8, !tbaa !17
  %96 = getelementptr inbounds %struct.global_State.223* %95, i64 0, i32 8
  %97 = load i32* %96, align 4, !tbaa !281
  %98 = add i64 %l, 25
  %99 = tail call %union.GCObject.229* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.229* (%struct.lua_State.228*, i32, i64, %union.GCObject.229**, i32)*)(%struct.lua_State.228* %L, i32 20, i64 %98, %union.GCObject.229** null, i32 0) #3
  %100 = bitcast %union.GCObject.229* %99 to %union.TString.219*
  %101 = bitcast %union.GCObject.229* %99 to %struct.anon*
  %102 = getelementptr inbounds %union.GCObject.229* %99, i64 0, i32 0, i32 4
  %l.c.i = inttoptr i64 %l to %struct.lua_TValue.215*
  store %struct.lua_TValue.215* %l.c.i, %struct.lua_TValue.215** %102, align 8, !tbaa !34
  %103 = getelementptr inbounds %struct.anon* %101, i64 0, i32 4
  store i32 %97, i32* %103, align 4, !tbaa !284
  %104 = getelementptr inbounds %union.GCObject.229* %99, i64 0, i32 0, i32 3
  store i8 0, i8* %104, align 1, !tbaa !219
  %105 = getelementptr inbounds %union.GCObject.229* %99, i64 0, i32 0, i32 5
  %106 = bitcast %struct.global_State.223** %105 to i8*
  %107 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %106, i1 false) #3
  %108 = tail call i8* @__memcpy_chk(i8* %106, i8* %str, i64 %l, i64 %107) #3
  %109 = getelementptr inbounds i8* %106, i64 %l
  store i8 0, i8* %109, align 1, !tbaa !86
  br label %internshrstr.exit

internshrstr.exit:                                ; preds = %93, %newshrstr.exit.i, %58, %47
  %.0 = phi %union.TString.219* [ %100, %93 ], [ %77, %newshrstr.exit.i ], [ %32, %47 ], [ %32, %58 ]
  ret %union.TString.219* %.0
}

; Function Attrs: nounwind ssp uwtable
define %union.TString.219* @luaS_new(%struct.lua_State.228* %L, i8* %str) #0 {
  %1 = tail call i64 @strlen(i8* %str) #3
  %2 = tail call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %str, i64 %1)
  ret %union.TString.219* %2
}

; Function Attrs: nounwind ssp uwtable
define %union.Udata.312* @luaS_newudata(%struct.lua_State.228* %L, i64 %s, %struct.Table.222* %e) #0 {
  %1 = icmp ugt i64 %s, -43
  br i1 %1, label %2, label %3

; <label>:2                                       ; preds = %0
  tail call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #13
  unreachable

; <label>:3                                       ; preds = %0
  %4 = add i64 %s, 40
  %5 = tail call %union.GCObject.229* bitcast (%union.GCObject* (%struct.lua_State*, i32, i64, %union.GCObject**, i32)* @luaC_newobj to %union.GCObject.229* (%struct.lua_State.228*, i32, i64, %union.GCObject.229**, i32)*)(%struct.lua_State.228* %L, i32 7, i64 %4, %union.GCObject.229** null, i32 0) #3
  %6 = bitcast %union.GCObject.229* %5 to %union.Udata.312*
  %7 = getelementptr inbounds %union.GCObject.229* %5, i64 0, i32 0, i32 6
  %s.c = inttoptr i64 %s to %struct.CallInfo.225*
  store %struct.CallInfo.225* %s.c, %struct.CallInfo.225** %7, align 8, !tbaa !36
  %8 = getelementptr inbounds %union.GCObject.229* %5, i64 0, i32 0, i32 4
  store %struct.lua_TValue.215* null, %struct.lua_TValue.215** %8, align 8, !tbaa !44
  %9 = getelementptr inbounds %union.GCObject.229* %5, i64 0, i32 0, i32 5
  %e.c = bitcast %struct.Table.222* %e to %struct.global_State.223*
  store %struct.global_State.223* %e.c, %struct.global_State.223** %9, align 8, !tbaa !45
  ret %union.Udata.312* %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaH_next(%struct.lua_State* %L, %struct.Table* nocapture readonly %t, %struct.lua_TValue* %key) #0 {
  %u.sroa.0.i.i = alloca double, align 8
  %1 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %.findindex.exit.preheader_crit_edge, label %4

.findindex.exit.preheader_crit_edge:              ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !215
  br label %findindex.exit.preheader

; <label>:4                                       ; preds = %0
  %5 = bitcast double* %u.sroa.0.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %5)
  %6 = icmp eq i32 %2, 3
  br i1 %6, label %7, label %arrayindex.exit.thread.i

; <label>:7                                       ; preds = %4
  %8 = bitcast %struct.lua_TValue* %key to double*
  %9 = load double* %8, align 8, !tbaa !30
  %10 = fadd double %9, 0x4338000000000000
  store volatile double %10, double* %u.sroa.0.i.i, align 8
  %11 = bitcast double* %u.sroa.0.i.i to i32*
  %12 = load volatile i32* %11, align 8
  %13 = sitofp i32 %12 to double
  %14 = fcmp oeq double %13, %9
  br i1 %14, label %arrayindex.exit.i, label %arrayindex.exit.thread.i

arrayindex.exit.i:                                ; preds = %7
  call void @llvm.lifetime.end(i64 8, i8* %5)
  %15 = icmp sgt i32 %12, 0
  br i1 %15, label %16, label %arrayindex.exit.thread.i

; <label>:16                                      ; preds = %arrayindex.exit.i
  %17 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %18 = load i32* %17, align 4, !tbaa !215
  %19 = icmp sgt i32 %12, %18
  br i1 %19, label %arrayindex.exit.thread.i, label %20

; <label>:20                                      ; preds = %16
  %21 = add nsw i32 %12, -1
  br label %findindex.exit.preheader

arrayindex.exit.thread.i:                         ; preds = %16, %arrayindex.exit.i, %7, %4
  %22 = tail call fastcc %struct.Node* @mainposition(%struct.Table* %t, %struct.lua_TValue* %key) #3
  %23 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  br label %24

; <label>:24                                      ; preds = %62, %arrayindex.exit.thread.i
  %n.0.i = phi %struct.Node* [ %22, %arrayindex.exit.thread.i ], [ %64, %62 ]
  %25 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1
  %26 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %27 = load i32* %26, align 4, !tbaa !15
  %28 = load i32* %1, align 4, !tbaa !15
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %34

; <label>:30                                      ; preds = %24
  %31 = bitcast %union.TKey* %25 to %struct.lua_TValue*
  %32 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_equalobj_ to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* null, %struct.lua_TValue* %31, %struct.lua_TValue* %key) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %thread-pre-split.i, label %46

thread-pre-split.i:                               ; preds = %30
  %.pr.i = load i32* %26, align 4, !tbaa !15
  br label %34

; <label>:34                                      ; preds = %thread-pre-split.i, %24
  %35 = phi i32 [ %.pr.i, %thread-pre-split.i ], [ %27, %24 ]
  %36 = icmp eq i32 %35, 11
  br i1 %36, label %37, label %62

; <label>:37                                      ; preds = %34
  %38 = load i32* %1, align 4, !tbaa !15
  %39 = and i32 %38, 64
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %62, label %41

; <label>:41                                      ; preds = %37
  %42 = getelementptr inbounds %union.TKey* %25, i64 0, i32 0, i32 0, i32 0
  %43 = load %union.GCObject** %42, align 8, !tbaa !25
  %44 = load %union.GCObject** %23, align 8, !tbaa !25
  %45 = icmp eq %union.GCObject* %43, %44
  br i1 %45, label %46, label %62

; <label>:46                                      ; preds = %41, %30
  %47 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %48 = load %struct.Node** %47, align 8, !tbaa !216
  %49 = ptrtoint %struct.Node* %n.0.i to i64
  %50 = ptrtoint %struct.Node* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sdiv exact i64 %51, 40
  %53 = trunc i64 %52 to i32
  %54 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %55 = load i32* %54, align 4, !tbaa !215
  %56 = add nsw i32 %53, %55
  br label %findindex.exit.preheader

findindex.exit.preheader:                         ; preds = %46, %20, %.findindex.exit.preheader_crit_edge
  %57 = phi i32 [ %55, %46 ], [ %18, %20 ], [ %.pre, %.findindex.exit.preheader_crit_edge ]
  %i.0.in.ph = phi i32 [ %56, %46 ], [ %21, %20 ], [ -1, %.findindex.exit.preheader_crit_edge ]
  %58 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %59 = add i32 %i.0.in.ph, 1
  %60 = sub i32 %59, %57
  %61 = sext i32 %i.0.in.ph to i64
  br label %findindex.exit

; <label>:62                                      ; preds = %41, %37, %34
  %63 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %64 = load %struct.Node** %63, align 8, !tbaa !286
  %65 = icmp eq %struct.Node* %64, null
  br i1 %65, label %66, label %24

; <label>:66                                      ; preds = %62
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([22 x i8]* @.str3236, i64 0, i64 0)) #13
  unreachable

findindex.exit:                                   ; preds = %69, %findindex.exit.preheader
  %indvars.iv24 = phi i64 [ %61, %findindex.exit.preheader ], [ %indvars.iv.next25, %69 ]
  %indvars.iv = phi i32 [ %60, %findindex.exit.preheader ], [ %indvars.iv.next, %69 ]
  %indvars.iv.next25 = add nsw i64 %indvars.iv24, 1
  %67 = trunc i64 %indvars.iv.next25 to i32
  %68 = icmp slt i32 %67, %57
  br i1 %68, label %69, label %85

; <label>:69                                      ; preds = %findindex.exit
  %70 = load %struct.lua_TValue** %58, align 8, !tbaa !217
  %71 = getelementptr inbounds %struct.lua_TValue* %70, i64 %indvars.iv.next25, i32 1
  %72 = load i32* %71, align 4, !tbaa !15
  %73 = icmp eq i32 %72, 0
  %indvars.iv.next = add i32 %indvars.iv, 1
  br i1 %73, label %findindex.exit, label %74

; <label>:74                                      ; preds = %69
  %75 = trunc i64 %indvars.iv24 to i32
  %76 = add nsw i32 %75, 2
  %77 = sitofp i32 %76 to double
  %78 = bitcast %struct.lua_TValue* %key to double*
  store double %77, double* %78, align 8, !tbaa !30
  store i32 3, i32* %1, align 4, !tbaa !15
  %79 = getelementptr inbounds %struct.lua_TValue* %70, i64 %indvars.iv.next25
  %80 = bitcast %struct.lua_TValue* %79 to i64*
  %81 = load i64* %80, align 8
  %82 = getelementptr inbounds %struct.lua_TValue* %key, i64 1, i32 0, i32 0
  %.c6 = inttoptr i64 %81 to %union.GCObject*
  store %union.GCObject* %.c6, %union.GCObject** %82, align 8
  %83 = load i32* %71, align 4, !tbaa !15
  %84 = getelementptr inbounds %struct.lua_TValue* %key, i64 1, i32 1
  store i32 %83, i32* %84, align 4, !tbaa !15
  br label %.loopexit

; <label>:85                                      ; preds = %findindex.exit
  %86 = sub nsw i32 %67, %57
  %87 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %88 = load i8* %87, align 1, !tbaa !214
  %89 = zext i8 %88 to i32
  %90 = shl i32 1, %89
  %91 = icmp slt i32 %86, %90
  br i1 %91, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %85
  %92 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %93 = load %struct.Node** %92, align 8, !tbaa !216
  %94 = sext i32 %indvars.iv to i64
  br label %97

; <label>:95                                      ; preds = %97
  %96 = icmp slt i32 %101, %90
  %indvars.iv.next19 = add nsw i64 %indvars.iv18, 1
  br i1 %96, label %97, label %.loopexit

; <label>:97                                      ; preds = %95, %.lr.ph
  %indvars.iv18 = phi i64 [ %94, %.lr.ph ], [ %indvars.iv.next19, %95 ]
  %i.19 = phi i32 [ %86, %.lr.ph ], [ %101, %95 ]
  %98 = getelementptr inbounds %struct.Node* %93, i64 %indvars.iv18, i32 0, i32 1
  %99 = load i32* %98, align 4, !tbaa !15
  %100 = icmp eq i32 %99, 0
  %101 = add nsw i32 %i.19, 1
  br i1 %100, label %95, label %102

; <label>:102                                     ; preds = %97
  %103 = getelementptr inbounds %struct.Node* %93, i64 %indvars.iv18, i32 1
  %104 = bitcast %union.TKey* %103 to i64*
  %105 = load i64* %104, align 8
  %106 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %105 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %106, align 8
  %107 = getelementptr inbounds %struct.Node* %93, i64 %indvars.iv18, i32 1, i32 0, i32 1
  %108 = load i32* %107, align 4, !tbaa !15
  store i32 %108, i32* %1, align 4, !tbaa !15
  %109 = load %struct.Node** %92, align 8, !tbaa !216
  %110 = getelementptr inbounds %struct.Node* %109, i64 %indvars.iv18, i32 0
  %111 = bitcast %struct.lua_TValue* %110 to i64*
  %112 = load i64* %111, align 8
  %113 = getelementptr inbounds %struct.lua_TValue* %key, i64 1, i32 0, i32 0
  %.c5 = inttoptr i64 %112 to %union.GCObject*
  store %union.GCObject* %.c5, %union.GCObject** %113, align 8
  %114 = getelementptr inbounds %struct.Node* %109, i64 %indvars.iv18, i32 0, i32 1
  %115 = load i32* %114, align 4, !tbaa !15
  %116 = getelementptr inbounds %struct.lua_TValue* %key, i64 1, i32 1
  store i32 %115, i32* %116, align 4, !tbaa !15
  br label %.loopexit

.loopexit:                                        ; preds = %102, %95, %85, %74
  %.0 = phi i32 [ 1, %74 ], [ 1, %102 ], [ 0, %85 ], [ 0, %95 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaH_resize(%struct.lua_State* %L, %struct.Table* %t, i32 %nasize, i32 %nhsize) #0 {
  %1 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %2 = load i32* %1, align 4, !tbaa !215
  %3 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %4 = load i8* %3, align 1, !tbaa !214
  %5 = zext i8 %4 to i32
  %6 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %7 = load %struct.Node** %6, align 8, !tbaa !216
  %8 = icmp slt i32 %2, %nasize
  br i1 %8, label %9, label %30

; <label>:9                                       ; preds = %0
  %10 = add nsw i32 %nasize, 1
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %9
  tail call void @luaM_toobig(%struct.lua_State* %L) #13
  unreachable

; <label>:13                                      ; preds = %9
  %14 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %15 = load %struct.lua_TValue** %14, align 8, !tbaa !217
  %16 = bitcast %struct.lua_TValue* %15 to i8*
  %17 = sext i32 %2 to i64
  %18 = shl nsw i64 %17, 4
  %19 = sext i32 %nasize to i64
  %20 = shl nsw i64 %19, 4
  %21 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %16, i64 %18, i64 %20) #3
  %22 = bitcast i8* %21 to %struct.lua_TValue*
  store %struct.lua_TValue* %22, %struct.lua_TValue** %14, align 8, !tbaa !217
  %23 = load i32* %1, align 4, !tbaa !215
  %24 = icmp slt i32 %23, %nasize
  br i1 %24, label %.lr.ph.i, label %setarrayvector.exit

.lr.ph.i:                                         ; preds = %13
  %25 = sext i32 %23 to i64
  br label %26

; <label>:26                                      ; preds = %26, %.lr.ph.i
  %indvars.iv.i = phi i64 [ %25, %.lr.ph.i ], [ %indvars.iv.next.i, %26 ]
  %27 = getelementptr inbounds %struct.lua_TValue* %22, i64 %indvars.iv.i, i32 1
  store i32 0, i32* %27, align 4, !tbaa !15
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %28 = trunc i64 %indvars.iv.next.i to i32
  %29 = icmp slt i32 %28, %nasize
  br i1 %29, label %26, label %setarrayvector.exit

setarrayvector.exit:                              ; preds = %26, %13
  store i32 %nasize, i32* %1, align 4, !tbaa !215
  br label %30

; <label>:30                                      ; preds = %setarrayvector.exit, %0
  tail call fastcc void @setnodevector(%struct.lua_State* %L, %struct.Table* %t, i32 %nhsize)
  %31 = icmp sgt i32 %2, %nasize
  br i1 %31, label %.lr.ph5, label %58

.lr.ph5:                                          ; preds = %30
  store i32 %nasize, i32* %1, align 4, !tbaa !215
  %32 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %33 = sext i32 %nasize to i64
  br label %34

; <label>:34                                      ; preds = %43, %.lr.ph5
  %indvars.iv7 = phi i64 [ %33, %.lr.ph5 ], [ %indvars.iv.next8.pre-phi, %43 ]
  %35 = load %struct.lua_TValue** %32, align 8, !tbaa !217
  %36 = getelementptr inbounds %struct.lua_TValue* %35, i64 %indvars.iv7, i32 1
  %37 = load i32* %36, align 4, !tbaa !15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %._crit_edge10, label %39

._crit_edge10:                                    ; preds = %34
  %indvars.iv.next8.pre = add nsw i64 %indvars.iv7, 1
  %.pre = trunc i64 %indvars.iv.next8.pre to i32
  br label %43

; <label>:39                                      ; preds = %34
  %40 = getelementptr inbounds %struct.lua_TValue* %35, i64 %indvars.iv7
  %41 = add nsw i64 %indvars.iv7, 1
  %42 = trunc i64 %41 to i32
  tail call void @luaH_setint(%struct.lua_State* %L, %struct.Table* %t, i32 %42, %struct.lua_TValue* %40)
  br label %43

; <label>:43                                      ; preds = %39, %._crit_edge10
  %.pre-phi = phi i32 [ %.pre, %._crit_edge10 ], [ %42, %39 ]
  %indvars.iv.next8.pre-phi = phi i64 [ %indvars.iv.next8.pre, %._crit_edge10 ], [ %41, %39 ]
  %44 = icmp slt i32 %.pre-phi, %2
  br i1 %44, label %34, label %._crit_edge6

._crit_edge6:                                     ; preds = %43
  %45 = add nsw i32 %nasize, 1
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %47, label %48

; <label>:47                                      ; preds = %._crit_edge6
  tail call void @luaM_toobig(%struct.lua_State* %L) #13
  unreachable

; <label>:48                                      ; preds = %._crit_edge6
  %49 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %50 = load %struct.lua_TValue** %49, align 8, !tbaa !217
  %51 = bitcast %struct.lua_TValue* %50 to i8*
  %52 = sext i32 %2 to i64
  %53 = shl nsw i64 %52, 4
  %54 = sext i32 %nasize to i64
  %55 = shl nsw i64 %54, 4
  %56 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %51, i64 %53, i64 %55) #3
  %57 = bitcast i8* %56 to %struct.lua_TValue*
  store %struct.lua_TValue* %57, %struct.lua_TValue** %49, align 8, !tbaa !217
  br label %58

; <label>:58                                      ; preds = %48, %30
  %59 = shl i32 1, %5
  %60 = icmp eq i8 %4, 31
  br i1 %60, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %58
  %61 = sext i32 %59 to i64
  br label %62

; <label>:62                                      ; preds = %.backedge, %.lr.ph
  %indvars.iv = phi i64 [ %61, %.lr.ph ], [ %indvars.iv.next, %.backedge ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %63 = getelementptr inbounds %struct.Node* %7, i64 %indvars.iv.next, i32 0, i32 1
  %64 = load i32* %63, align 4, !tbaa !15
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %.backedge, label %68

.backedge:                                        ; preds = %luaH_set.exit, %62
  %66 = trunc i64 %indvars.iv.next to i32
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %62, label %._crit_edge

; <label>:68                                      ; preds = %62
  %69 = getelementptr inbounds %struct.Node* %7, i64 %indvars.iv.next
  %70 = getelementptr inbounds %struct.Node* %7, i64 %indvars.iv.next, i32 1
  %71 = bitcast %union.TKey* %70 to %struct.lua_TValue*
  %72 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %t, %struct.lua_TValue* %71) #3
  %73 = icmp eq %struct.lua_TValue* %72, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %73, label %74, label %luaH_set.exit

; <label>:74                                      ; preds = %68
  %75 = tail call %struct.lua_TValue* @luaH_newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %71) #3
  br label %luaH_set.exit

luaH_set.exit:                                    ; preds = %74, %68
  %.0.i = phi %struct.lua_TValue* [ %75, %74 ], [ %72, %68 ]
  %76 = bitcast %struct.Node* %69 to i64*
  %77 = load i64* %76, align 8
  %78 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %77 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %78, align 8
  %79 = load i32* %63, align 4, !tbaa !15
  %80 = getelementptr inbounds %struct.lua_TValue* %.0.i, i64 0, i32 1
  store i32 %79, i32* %80, align 4, !tbaa !15
  br label %.backedge

._crit_edge:                                      ; preds = %.backedge, %58
  %81 = icmp eq %struct.Node* %7, bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*)
  br i1 %81, label %87, label %82

; <label>:82                                      ; preds = %._crit_edge
  %83 = bitcast %struct.Node* %7 to i8*
  %84 = sext i32 %59 to i64
  %85 = mul i64 %84, 40
  %86 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %83, i64 %85, i64 0) #3
  br label %87

; <label>:87                                      ; preds = %82, %._crit_edge
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaH_setint(%struct.lua_State* %L, %struct.Table* %t, i32 %key, %struct.lua_TValue* nocapture readonly %value) #0 {
  %u.sroa.0.i.i = alloca double, align 8
  %k = alloca %struct.lua_TValue, align 8
  %1 = add nsw i32 %key, -1
  %2 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %3 = load i32* %2, align 4, !tbaa !215
  %4 = icmp ult i32 %1, %3
  br i1 %4, label %5, label %10

; <label>:5                                       ; preds = %0
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !217
  %9 = getelementptr inbounds %struct.lua_TValue* %8, i64 %6
  br label %luaH_getint.exit

; <label>:10                                      ; preds = %0
  %11 = sitofp i32 %key to double
  %12 = bitcast double* %u.sroa.0.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12)
  %13 = fadd double %11, 1.000000e+00
  store volatile double %13, double* %u.sroa.0.i.i, align 8
  %14 = bitcast double* %u.sroa.0.i.i to i32*
  %15 = load volatile i32* %14, align 8
  %16 = getelementptr inbounds i8* %12, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load volatile i32* %17, align 4
  %19 = add nsw i32 %18, %15
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %hashnum.exit.i

; <label>:21                                      ; preds = %10
  %22 = sub i32 0, %19
  %23 = icmp eq i32 %19, %22
  %24 = select i1 %23, i32 0, i32 %22
  br label %hashnum.exit.i

hashnum.exit.i:                                   ; preds = %21, %10
  %i.1.i.i = phi i32 [ %24, %21 ], [ %19, %10 ]
  %25 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %26 = load i8* %25, align 1, !tbaa !214
  %27 = zext i8 %26 to i32
  %28 = shl i32 1, %27
  %29 = add nsw i32 %28, -1
  %30 = or i32 %29, 1
  %31 = srem i32 %i.1.i.i, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %34 = load %struct.Node** %33, align 8, !tbaa !216
  %35 = getelementptr inbounds %struct.Node* %34, i64 %32
  call void @llvm.lifetime.end(i64 8, i8* %12)
  br label %36

; <label>:36                                      ; preds = %47, %hashnum.exit.i
  %n.0.i = phi %struct.Node* [ %35, %hashnum.exit.i ], [ %49, %47 ]
  %37 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %38 = load i32* %37, align 4, !tbaa !15
  %39 = icmp eq i32 %38, 3
  br i1 %39, label %40, label %47

; <label>:40                                      ; preds = %36
  %41 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 0
  %42 = bitcast %union.Value* %41 to double*
  %43 = load double* %42, align 8, !tbaa !30
  %44 = fcmp oeq double %43, %11
  br i1 %44, label %45, label %47

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 0
  br label %luaH_getint.exit

; <label>:47                                      ; preds = %40, %36
  %48 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %49 = load %struct.Node** %48, align 8, !tbaa !286
  %50 = icmp eq %struct.Node* %49, null
  br i1 %50, label %luaH_getint.exit.thread, label %36

luaH_getint.exit:                                 ; preds = %45, %5
  %.0.i = phi %struct.lua_TValue* [ %9, %5 ], [ %46, %45 ]
  %51 = icmp eq %struct.lua_TValue* %.0.i, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %51, label %luaH_getint.exit.luaH_getint.exit.thread_crit_edge, label %55

luaH_getint.exit.luaH_getint.exit.thread_crit_edge: ; preds = %luaH_getint.exit
  %.pre = sitofp i32 %key to double
  br label %luaH_getint.exit.thread

luaH_getint.exit.thread:                          ; preds = %luaH_getint.exit.luaH_getint.exit.thread_crit_edge, %47
  %.pre-phi = phi double [ %.pre, %luaH_getint.exit.luaH_getint.exit.thread_crit_edge ], [ %11, %47 ]
  %52 = bitcast %struct.lua_TValue* %k to double*
  store double %.pre-phi, double* %52, align 8, !tbaa !30
  %53 = getelementptr inbounds %struct.lua_TValue* %k, i64 0, i32 1
  store i32 3, i32* %53, align 8, !tbaa !15
  %54 = call %struct.lua_TValue* @luaH_newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %k)
  br label %55

; <label>:55                                      ; preds = %luaH_getint.exit.thread, %luaH_getint.exit
  %cell.0 = phi %struct.lua_TValue* [ %54, %luaH_getint.exit.thread ], [ %.0.i, %luaH_getint.exit ]
  %56 = bitcast %struct.lua_TValue* %value to i64*
  %57 = load i64* %56, align 8
  %58 = getelementptr inbounds %struct.lua_TValue* %cell.0, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %57 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %58, align 8
  %59 = getelementptr inbounds %struct.lua_TValue* %value, i64 0, i32 1
  %60 = load i32* %59, align 4, !tbaa !15
  %61 = getelementptr inbounds %struct.lua_TValue* %cell.0, i64 0, i32 1
  store i32 %60, i32* %61, align 4, !tbaa !15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue* @luaH_set(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key) #0 {
  %1 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %t, %struct.lua_TValue* %key)
  %2 = icmp eq %struct.lua_TValue* %1, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_TValue* @luaH_newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key)
  br label %5

; <label>:5                                       ; preds = %3, %0
  %.0 = phi %struct.lua_TValue* [ %4, %3 ], [ %1, %0 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaH_resizearray(%struct.lua_State* %L, %struct.Table* %t, i32 %nasize) #0 {
  %1 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %2 = load %struct.Node** %1, align 8, !tbaa !216
  %3 = icmp eq %struct.Node* %2, bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*)
  br i1 %3, label %9, label %4

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %6 = load i8* %5, align 1, !tbaa !214
  %7 = zext i8 %6 to i32
  %8 = shl i32 1, %7
  br label %9

; <label>:9                                       ; preds = %4, %0
  %10 = phi i32 [ %8, %4 ], [ 0, %0 ]
  tail call void @luaH_resize(%struct.lua_State* %L, %struct.Table* %t, i32 %nasize, i32 %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.Table* @luaH_new(%struct.lua_State* %L) #0 {
  %1 = tail call %union.GCObject* @luaC_newobj(%struct.lua_State* %L, i32 5, i64 64, %union.GCObject** null, i32 0) #3
  %2 = bitcast %union.GCObject* %1 to %struct.Table*
  %3 = getelementptr inbounds %union.GCObject* %1, i64 0, i32 0, i32 4
  store %struct.lua_TValue* null, %struct.lua_TValue** %3, align 8, !tbaa !43
  %4 = getelementptr inbounds %union.GCObject* %1, i64 0, i32 0, i32 3
  store i8 -1, i8* %4, align 1, !tbaa !41
  %5 = getelementptr inbounds %union.GCObject* %1, i64 0, i32 0, i32 5
  store %struct.global_State* null, %struct.global_State** %5, align 8, !tbaa !217
  %6 = getelementptr inbounds %union.GCObject* %1, i64 0, i32 0, i32 9
  %7 = bitcast %struct.lua_TValue** %6 to i32*
  store i32 0, i32* %7, align 4, !tbaa !215
  %8 = getelementptr inbounds %union.GCObject* %1, i64 0, i32 0, i32 6
  store %struct.CallInfo* bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.CallInfo*), %struct.CallInfo** %8, align 8, !tbaa !216
  %9 = getelementptr inbounds %struct.Table* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1, !tbaa !214
  %10 = getelementptr inbounds %union.GCObject* %1, i64 0, i32 0, i32 7
  store i32* bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to i32*), i32** %10, align 8, !tbaa !288
  ret %struct.Table* %2
}

; Function Attrs: nounwind ssp uwtable
define void @luaH_free(%struct.lua_State* %L, %struct.Table* %t) #0 {
  %1 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %2 = load %struct.Node** %1, align 8, !tbaa !216
  %3 = icmp eq %struct.Node* %2, bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*)
  br i1 %3, label %13, label %4

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.Node* %2 to i8*
  %6 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %7 = load i8* %6, align 1, !tbaa !214
  %8 = zext i8 %7 to i32
  %9 = shl i32 1, %8
  %10 = sext i32 %9 to i64
  %11 = mul i64 %10, 40
  %12 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %5, i64 %11, i64 0) #3
  br label %13

; <label>:13                                      ; preds = %4, %0
  %14 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %15 = load %struct.lua_TValue** %14, align 8, !tbaa !217
  %16 = bitcast %struct.lua_TValue* %15 to i8*
  %17 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %18 = load i32* %17, align 4, !tbaa !215
  %19 = sext i32 %18 to i64
  %20 = shl nsw i64 %19, 4
  %21 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %16, i64 %20, i64 0) #3
  %22 = bitcast %struct.Table* %t to i8*
  %23 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %22, i64 64, i64 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue* @luaH_newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key) #0 {
  %u.sroa.0.i.i.i = alloca double, align 8
  %u.sroa.0.i.i.i.i = alloca double, align 8
  %nums.i = alloca [31 x i32], align 16
  %1 = bitcast [31 x i32]* %nums.i to i8*
  %2 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 1
  %3 = load i32* %2, align 4, !tbaa !15
  switch i32 %3, label %10 [
    i32 0, label %4
    i32 3, label %5
  ]

; <label>:4                                       ; preds = %0
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8]* @.str233, i64 0, i64 0)) #13
  unreachable

; <label>:5                                       ; preds = %0
  %6 = bitcast %struct.lua_TValue* %key to double*
  %7 = load double* %6, align 8, !tbaa !30
  %8 = fcmp ord double %7, 0.000000e+00
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %5
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8]* @.str1234, i64 0, i64 0)) #13
  unreachable

; <label>:10                                      ; preds = %5, %0
  %11 = tail call fastcc %struct.Node* @mainposition(%struct.Table* %t, %struct.lua_TValue* %key)
  %12 = getelementptr inbounds %struct.Node* %11, i64 0, i32 0, i32 1
  %13 = load i32* %12, align 4, !tbaa !15
  %14 = icmp ne i32 %13, 0
  %15 = icmp eq %struct.Node* %11, bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*)
  %or.cond = or i1 %14, %15
  br i1 %or.cond, label %16, label %164

; <label>:16                                      ; preds = %10
  %17 = getelementptr inbounds %struct.Table* %t, i64 0, i32 8
  %18 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %19 = load %struct.Node** %18, align 8, !tbaa !216
  %.pre.i = load %struct.Node** %17, align 8, !tbaa !288
  br label %20

; <label>:20                                      ; preds = %23, %16
  %21 = phi %struct.Node* [ %24, %23 ], [ %.pre.i, %16 ]
  %22 = icmp ugt %struct.Node* %21, %19
  br i1 %22, label %23, label %28

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds %struct.Node* %21, i64 -1
  store %struct.Node* %24, %struct.Node** %17, align 8, !tbaa !288
  %25 = getelementptr inbounds %struct.Node* %21, i64 -1, i32 1, i32 0, i32 1
  %26 = load i32* %25, align 4, !tbaa !15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %148, label %20

; <label>:28                                      ; preds = %20
  call void @llvm.lifetime.start(i64 124, i8* %1) #3
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 124, i32 16, i1 false)
  %29 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %30 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %31 = load i32* %29, align 4, !tbaa !215
  br label %32

; <label>:32                                      ; preds = %62, %28
  %indvars.iv8.i.i = phi i64 [ 0, %28 ], [ %indvars.iv.next9.i.i, %62 ]
  %i.07.i.i = phi i32 [ 1, %28 ], [ %i.1.lcssa.i.i, %62 ]
  %ause.06.i.i = phi i32 [ 0, %28 ], [ %66, %62 ]
  %ttlg.05.i.i = phi i32 [ 1, %28 ], [ %67, %62 ]
  %33 = icmp sgt i32 %ttlg.05.i.i, %31
  br i1 %33, label %34, label %.preheader.i.i

; <label>:34                                      ; preds = %32
  %35 = icmp sgt i32 %i.07.i.i, %31
  br i1 %35, label %numusearray.exit.i, label %.preheader.i.i

.preheader.i.i:                                   ; preds = %34, %32
  %lim.0.ph.i.i = phi i32 [ %ttlg.05.i.i, %32 ], [ %31, %34 ]
  %36 = icmp slt i32 %lim.0.ph.i.i, %i.07.i.i
  br i1 %36, label %62, label %.lr.ph.i.i

.lr.ph.i.i:                                       ; preds = %.preheader.i.i
  %37 = load %struct.lua_TValue** %30, align 8, !tbaa !217
  %38 = sext i32 %i.07.i.i to i64
  %39 = icmp sgt i32 %i.07.i.i, %lim.0.ph.i.i
  %smax = select i1 %39, i32 %i.07.i.i, i32 %lim.0.ph.i.i
  %40 = sub i32 %smax, %i.07.i.i
  %41 = zext i32 %40 to i64
  %42 = add i64 %41, 1
  %end.idx = add i64 %42, %38
  %n.vec = and i64 %42, -2
  %end.idx.rnd.down = add i64 %n.vec, %38
  %cmp.zero = icmp eq i64 %n.vec, 0
  br i1 %cmp.zero, label %middle.block, label %vector.body

vector.body:                                      ; preds = %vector.body, %.lr.ph.i.i
  %index = phi i64 [ %index.next, %vector.body ], [ %38, %.lr.ph.i.i ]
  %vec.phi = phi i32 [ %52, %vector.body ], [ 0, %.lr.ph.i.i ]
  %vec.phi22 = phi i32 [ %53, %vector.body ], [ 0, %.lr.ph.i.i ]
  %43 = add nsw i64 %index, -1
  %44 = getelementptr inbounds %struct.lua_TValue* %37, i64 %43, i32 1
  %45 = getelementptr inbounds %struct.lua_TValue* %37, i64 %index, i32 1
  %46 = load i32* %44, align 4, !tbaa !15
  %47 = load i32* %45, align 4, !tbaa !15
  %48 = icmp ne i32 %46, 0
  %49 = icmp ne i32 %47, 0
  %50 = zext i1 %48 to i32
  %51 = zext i1 %49 to i32
  %52 = add nsw i32 %50, %vec.phi
  %53 = add nsw i32 %51, %vec.phi22
  %index.next = add i64 %index, 2
  %54 = icmp eq i64 %index.next, %end.idx.rnd.down
  br i1 %54, label %middle.block, label %vector.body, !llvm.loop !289

middle.block:                                     ; preds = %vector.body, %.lr.ph.i.i
  %resume.val = phi i64 [ %38, %.lr.ph.i.i ], [ %end.idx.rnd.down, %vector.body ]
  %rdx.vec.exit.phi = phi i32 [ 0, %.lr.ph.i.i ], [ %52, %vector.body ]
  %rdx.vec.exit.phi25 = phi i32 [ 0, %.lr.ph.i.i ], [ %53, %vector.body ]
  %bin.rdx = add i32 %rdx.vec.exit.phi25, %rdx.vec.exit.phi
  %cmp.n = icmp eq i64 %end.idx, %resume.val
  br i1 %cmp.n, label %._crit_edge.i.i, label %scalar.ph

scalar.ph:                                        ; preds = %scalar.ph, %middle.block
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %scalar.ph ], [ %resume.val, %middle.block ]
  %lc.02.i.i = phi i32 [ %lc.0..i.i, %scalar.ph ], [ %bin.rdx, %middle.block ]
  %55 = add nsw i64 %indvars.iv.i.i, -1
  %56 = getelementptr inbounds %struct.lua_TValue* %37, i64 %55, i32 1
  %57 = load i32* %56, align 4, !tbaa !15
  %not..i.i = icmp ne i32 %57, 0
  %58 = zext i1 %not..i.i to i32
  %lc.0..i.i = add nsw i32 %58, %lc.02.i.i
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, 1
  %59 = trunc i64 %indvars.iv.i.i to i32
  %60 = icmp slt i32 %59, %lim.0.ph.i.i
  br i1 %60, label %scalar.ph, label %._crit_edge.i.i, !llvm.loop !290

._crit_edge.i.i:                                  ; preds = %scalar.ph, %middle.block
  %lc.0..i.i.lcssa = phi i32 [ %lc.0..i.i, %scalar.ph ], [ %bin.rdx, %middle.block ]
  %61 = add i32 %lim.0.ph.i.i, 1
  br label %62

; <label>:62                                      ; preds = %._crit_edge.i.i, %.preheader.i.i
  %lc.0.lcssa.i.i = phi i32 [ %lc.0..i.i.lcssa, %._crit_edge.i.i ], [ 0, %.preheader.i.i ]
  %i.1.lcssa.i.i = phi i32 [ %61, %._crit_edge.i.i ], [ %i.07.i.i, %.preheader.i.i ]
  %63 = getelementptr inbounds [31 x i32]* %nums.i, i64 0, i64 %indvars.iv8.i.i
  %64 = load i32* %63, align 4, !tbaa !1
  %65 = add nsw i32 %64, %lc.0.lcssa.i.i
  store i32 %65, i32* %63, align 4, !tbaa !1
  %66 = add nsw i32 %lc.0.lcssa.i.i, %ause.06.i.i
  %indvars.iv.next9.i.i = add nuw nsw i64 %indvars.iv8.i.i, 1
  %67 = shl nsw i32 %ttlg.05.i.i, 1
  %68 = trunc i64 %indvars.iv.next9.i.i to i32
  %69 = icmp slt i32 %68, 31
  br i1 %69, label %32, label %numusearray.exit.i

numusearray.exit.i:                               ; preds = %62, %34
  %ause.0.lcssa.i.i = phi i32 [ %ause.06.i.i, %34 ], [ %66, %62 ]
  %70 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %71 = load i8* %70, align 1, !tbaa !214
  %72 = zext i8 %71 to i32
  %73 = shl i32 1, %72
  %74 = bitcast double* %u.sroa.0.i.i.i.i to i8*
  %75 = bitcast double* %u.sroa.0.i.i.i.i to i32*
  br label %.outer.i.i

.outer.i.i:                                       ; preds = %countint.exit.i.i, %numusearray.exit.i
  %ause.0.ph.i.i = phi i32 [ 0, %numusearray.exit.i ], [ %105, %countint.exit.i.i ]
  %i.0.ph.i.i = phi i32 [ %73, %numusearray.exit.i ], [ %86, %countint.exit.i.i ]
  %totaluse.0.ph.i.i = phi i32 [ 0, %numusearray.exit.i ], [ %106, %countint.exit.i.i ]
  %76 = sext i32 %i.0.ph.i.i to i64
  br label %77

; <label>:77                                      ; preds = %80, %.outer.i.i
  %indvars.iv.i1.i = phi i64 [ %76, %.outer.i.i ], [ %indvars.iv.next.i2.i, %80 ]
  %indvars.iv.next.i2.i = add nsw i64 %indvars.iv.i1.i, -1
  %78 = trunc i64 %indvars.iv.i1.i to i32
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %numusehash.exit.i, label %80

; <label>:80                                      ; preds = %77
  %81 = load %struct.Node** %18, align 8, !tbaa !216
  %82 = getelementptr inbounds %struct.Node* %81, i64 %indvars.iv.next.i2.i, i32 0, i32 1
  %83 = load i32* %82, align 4, !tbaa !15
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %77, label %85

; <label>:85                                      ; preds = %80
  %86 = trunc i64 %indvars.iv.next.i2.i to i32
  call void @llvm.lifetime.start(i64 8, i8* %74)
  %87 = getelementptr inbounds %struct.Node* %81, i64 %indvars.iv.next.i2.i, i32 1, i32 0, i32 1
  %88 = load i32* %87, align 4, !tbaa !15
  %89 = icmp eq i32 %88, 3
  br i1 %89, label %90, label %countint.exit.i.i

; <label>:90                                      ; preds = %85
  %91 = getelementptr inbounds %struct.Node* %81, i64 %indvars.iv.next.i2.i, i32 1
  %92 = bitcast %union.TKey* %91 to double*
  %93 = load double* %92, align 8, !tbaa !30
  %94 = fadd double %93, 0x4338000000000000
  store volatile double %94, double* %u.sroa.0.i.i.i.i, align 8
  %95 = load volatile i32* %75, align 8
  %96 = sitofp i32 %95 to double
  %97 = fcmp oeq double %96, %93
  br i1 %97, label %arrayindex.exit.i.i.i, label %countint.exit.i.i

arrayindex.exit.i.i.i:                            ; preds = %90
  call void @llvm.lifetime.end(i64 8, i8* %74)
  %.off.i.i.i = add i32 %95, -1
  %98 = icmp ult i32 %.off.i.i.i, 1073741824
  br i1 %98, label %99, label %countint.exit.i.i

; <label>:99                                      ; preds = %arrayindex.exit.i.i.i
  %100 = tail call i32 @luaO_ceillog2(i32 %95) #3
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [31 x i32]* %nums.i, i64 0, i64 %101
  %103 = load i32* %102, align 4, !tbaa !1
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %102, align 4, !tbaa !1
  br label %countint.exit.i.i

countint.exit.i.i:                                ; preds = %99, %arrayindex.exit.i.i.i, %90, %85
  %.0.i.i.i = phi i32 [ 1, %99 ], [ 0, %arrayindex.exit.i.i.i ], [ 0, %85 ], [ 0, %90 ]
  %105 = add nsw i32 %.0.i.i.i, %ause.0.ph.i.i
  %106 = add nsw i32 %totaluse.0.ph.i.i, 1
  br label %.outer.i.i

numusehash.exit.i:                                ; preds = %77
  %107 = add nsw i32 %ause.0.ph.i.i, %ause.0.lcssa.i.i
  %108 = bitcast double* %u.sroa.0.i.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %108)
  %109 = load i32* %2, align 4, !tbaa !15
  %110 = icmp eq i32 %109, 3
  br i1 %110, label %111, label %countint.exit.i

; <label>:111                                     ; preds = %numusehash.exit.i
  %112 = bitcast %struct.lua_TValue* %key to double*
  %113 = load double* %112, align 8, !tbaa !30
  %114 = fadd double %113, 0x4338000000000000
  store volatile double %114, double* %u.sroa.0.i.i.i, align 8
  %115 = bitcast double* %u.sroa.0.i.i.i to i32*
  %116 = load volatile i32* %115, align 8
  %117 = sitofp i32 %116 to double
  %118 = fcmp oeq double %117, %113
  br i1 %118, label %arrayindex.exit.i.i, label %countint.exit.i

arrayindex.exit.i.i:                              ; preds = %111
  call void @llvm.lifetime.end(i64 8, i8* %108)
  %.off.i.i = add i32 %116, -1
  %119 = icmp ult i32 %.off.i.i, 1073741824
  br i1 %119, label %120, label %countint.exit.i

; <label>:120                                     ; preds = %arrayindex.exit.i.i
  %121 = tail call i32 @luaO_ceillog2(i32 %116) #3
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds [31 x i32]* %nums.i, i64 0, i64 %122
  %124 = load i32* %123, align 4, !tbaa !1
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %123, align 4, !tbaa !1
  br label %countint.exit.i

countint.exit.i:                                  ; preds = %120, %arrayindex.exit.i.i, %111, %numusehash.exit.i
  %.0.i.i = phi i32 [ 1, %120 ], [ 0, %arrayindex.exit.i.i ], [ 0, %numusehash.exit.i ], [ 0, %111 ]
  %126 = add nsw i32 %107, %.0.i.i
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %.lr.ph.i4.i, label %rehash.exit

.lr.ph.i4.i:                                      ; preds = %137, %countint.exit.i
  %indvars.iv.i3.i = phi i64 [ %indvars.iv.next.i5.i, %137 ], [ 0, %countint.exit.i ]
  %128 = phi i32 [ %139, %137 ], [ 0, %countint.exit.i ]
  %n.05.i.i = phi i32 [ %n.1.i.i, %137 ], [ 0, %countint.exit.i ]
  %na.04.i.i = phi i32 [ %na.1.i.i, %137 ], [ 0, %countint.exit.i ]
  %a.03.i.i = phi i32 [ %a.1.i.i, %137 ], [ 0, %countint.exit.i ]
  %twotoi.02.i.i = phi i32 [ %138, %137 ], [ 1, %countint.exit.i ]
  %129 = getelementptr inbounds [31 x i32]* %nums.i, i64 0, i64 %indvars.iv.i3.i
  %130 = load i32* %129, align 4, !tbaa !1
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %135

; <label>:132                                     ; preds = %.lr.ph.i4.i
  %133 = add nsw i32 %130, %a.03.i.i
  %134 = icmp sgt i32 %133, %128
  %.na.0.i.i = select i1 %134, i32 %133, i32 %na.04.i.i
  %twotoi.0.n.0.i.i = select i1 %134, i32 %twotoi.02.i.i, i32 %n.05.i.i
  br label %135

; <label>:135                                     ; preds = %132, %.lr.ph.i4.i
  %a.1.i.i = phi i32 [ %a.03.i.i, %.lr.ph.i4.i ], [ %133, %132 ]
  %na.1.i.i = phi i32 [ %na.04.i.i, %.lr.ph.i4.i ], [ %.na.0.i.i, %132 ]
  %n.1.i.i = phi i32 [ %n.05.i.i, %.lr.ph.i4.i ], [ %twotoi.0.n.0.i.i, %132 ]
  %136 = icmp eq i32 %a.1.i.i, %126
  br i1 %136, label %rehash.exit, label %137

; <label>:137                                     ; preds = %135
  %indvars.iv.next.i5.i = add nuw nsw i64 %indvars.iv.i3.i, 1
  %138 = shl nsw i32 %twotoi.02.i.i, 1
  %139 = sdiv i32 %138, 2
  %140 = icmp slt i32 %139, %126
  br i1 %140, label %.lr.ph.i4.i, label %rehash.exit

rehash.exit:                                      ; preds = %137, %135, %countint.exit.i
  %na.2.i.i = phi i32 [ 0, %countint.exit.i ], [ %na.1.i.i, %137 ], [ %na.1.i.i, %135 ]
  %n.2.i.i = phi i32 [ 0, %countint.exit.i ], [ %n.1.i.i, %137 ], [ %n.1.i.i, %135 ]
  %141 = add i32 %ause.0.lcssa.i.i, 1
  %142 = add i32 %141, %totaluse.0.ph.i.i
  %143 = sub i32 %142, %na.2.i.i
  tail call void @luaH_resize(%struct.lua_State* %L, %struct.Table* %t, i32 %n.2.i.i, i32 %143) #3
  call void @llvm.lifetime.end(i64 124, i8* %1) #3
  %144 = tail call %struct.lua_TValue* @luaH_get(%struct.Table* %t, %struct.lua_TValue* %key) #3
  %145 = icmp eq %struct.lua_TValue* %144, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*)
  br i1 %145, label %146, label %luaH_set.exit

; <label>:146                                     ; preds = %rehash.exit
  %147 = tail call %struct.lua_TValue* @luaH_newkey(%struct.lua_State* %L, %struct.Table* %t, %struct.lua_TValue* %key) #3
  br label %luaH_set.exit

; <label>:148                                     ; preds = %23
  %149 = getelementptr inbounds %struct.Node* %11, i64 0, i32 1
  %150 = bitcast %union.TKey* %149 to %struct.lua_TValue*
  %151 = tail call fastcc %struct.Node* @mainposition(%struct.Table* %t, %struct.lua_TValue* %150)
  %152 = icmp eq %struct.Node* %151, %11
  br i1 %152, label %160, label %.preheader

.preheader:                                       ; preds = %.preheader, %148
  %othern.0 = phi %struct.Node* [ %154, %.preheader ], [ %151, %148 ]
  %153 = getelementptr inbounds %struct.Node* %othern.0, i64 0, i32 1, i32 0, i32 2
  %154 = load %struct.Node** %153, align 8, !tbaa !286
  %155 = icmp eq %struct.Node* %154, %11
  br i1 %155, label %156, label %.preheader

; <label>:156                                     ; preds = %.preheader
  store %struct.Node* %24, %struct.Node** %153, align 8, !tbaa !286
  %157 = bitcast %struct.Node* %24 to i8*
  %158 = bitcast %struct.Node* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %158, i64 40, i32 8, i1 false), !tbaa.struct !291
  %159 = getelementptr inbounds %struct.Node* %11, i64 0, i32 1, i32 0, i32 2
  store %struct.Node* null, %struct.Node** %159, align 8, !tbaa !286
  store i32 0, i32* %12, align 4, !tbaa !15
  br label %164

; <label>:160                                     ; preds = %148
  %161 = getelementptr inbounds %struct.Node* %11, i64 0, i32 1, i32 0, i32 2
  %162 = load %struct.Node** %161, align 8, !tbaa !286
  %163 = getelementptr inbounds %struct.Node* %21, i64 -1, i32 1, i32 0, i32 2
  store %struct.Node* %162, %struct.Node** %163, align 8, !tbaa !286
  store %struct.Node* %24, %struct.Node** %161, align 8, !tbaa !286
  br label %164

; <label>:164                                     ; preds = %160, %156, %10
  %mp.0 = phi %struct.Node* [ %11, %156 ], [ %24, %160 ], [ %11, %10 ]
  %165 = bitcast %struct.lua_TValue* %key to i64*
  %166 = load i64* %165, align 8
  %167 = getelementptr inbounds %struct.Node* %mp.0, i64 0, i32 1, i32 0, i32 0, i32 0
  %.c = inttoptr i64 %166 to %union.GCObject*
  store %union.GCObject* %.c, %union.GCObject** %167, align 8
  %168 = load i32* %2, align 4, !tbaa !15
  %169 = getelementptr inbounds %struct.Node* %mp.0, i64 0, i32 1, i32 0, i32 1
  store i32 %168, i32* %169, align 4, !tbaa !15
  %170 = load i32* %2, align 4, !tbaa !15
  %171 = and i32 %170, 64
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %187, label %173

; <label>:173                                     ; preds = %164
  %174 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  %175 = load %union.GCObject** %174, align 8, !tbaa !25
  %176 = getelementptr inbounds %union.GCObject* %175, i64 0, i32 0, i32 2
  %177 = load i8* %176, align 1, !tbaa !28
  %178 = and i8 %177, 3
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %187, label %180

; <label>:180                                     ; preds = %173
  %181 = getelementptr inbounds %struct.Table* %t, i64 0, i32 2
  %182 = load i8* %181, align 1, !tbaa !28
  %183 = and i8 %182, 4
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %187, label %185

; <label>:185                                     ; preds = %180
  %186 = bitcast %struct.Table* %t to %union.GCObject*
  tail call void @luaC_barrierback_(%struct.lua_State* %L, %union.GCObject* %186) #3
  br label %187

; <label>:187                                     ; preds = %185, %180, %173, %164
  %188 = getelementptr inbounds %struct.Node* %mp.0, i64 0, i32 0
  br label %luaH_set.exit

luaH_set.exit:                                    ; preds = %187, %146, %rehash.exit
  %.0 = phi %struct.lua_TValue* [ %188, %187 ], [ %147, %146 ], [ %144, %rehash.exit ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue* @luaH_getint(%struct.Table* nocapture readonly %t, i32 %key) #0 {
  %u.sroa.0.i = alloca double, align 8
  %1 = add nsw i32 %key, -1
  %2 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %3 = load i32* %2, align 4, !tbaa !215
  %4 = icmp ult i32 %1, %3
  br i1 %4, label %5, label %10

; <label>:5                                       ; preds = %0
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !217
  %9 = getelementptr inbounds %struct.lua_TValue* %8, i64 %6
  br label %.loopexit

; <label>:10                                      ; preds = %0
  %11 = sitofp i32 %key to double
  %12 = bitcast double* %u.sroa.0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %12)
  %13 = fadd double %11, 1.000000e+00
  store volatile double %13, double* %u.sroa.0.i, align 8
  %14 = bitcast double* %u.sroa.0.i to i32*
  %15 = load volatile i32* %14, align 8
  %16 = getelementptr inbounds i8* %12, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load volatile i32* %17, align 4
  %19 = add nsw i32 %18, %15
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %hashnum.exit

; <label>:21                                      ; preds = %10
  %22 = sub i32 0, %19
  %23 = icmp eq i32 %19, %22
  %24 = select i1 %23, i32 0, i32 %22
  br label %hashnum.exit

hashnum.exit:                                     ; preds = %21, %10
  %i.1.i = phi i32 [ %24, %21 ], [ %19, %10 ]
  %25 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %26 = load i8* %25, align 1, !tbaa !214
  %27 = zext i8 %26 to i32
  %28 = shl i32 1, %27
  %29 = add nsw i32 %28, -1
  %30 = or i32 %29, 1
  %31 = srem i32 %i.1.i, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %34 = load %struct.Node** %33, align 8, !tbaa !216
  %35 = getelementptr inbounds %struct.Node* %34, i64 %32
  call void @llvm.lifetime.end(i64 8, i8* %12)
  br label %36

; <label>:36                                      ; preds = %47, %hashnum.exit
  %n.0 = phi %struct.Node* [ %35, %hashnum.exit ], [ %49, %47 ]
  %37 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 1
  %38 = load i32* %37, align 4, !tbaa !15
  %39 = icmp eq i32 %38, 3
  br i1 %39, label %40, label %47

; <label>:40                                      ; preds = %36
  %41 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 0
  %42 = bitcast %union.Value* %41 to double*
  %43 = load double* %42, align 8, !tbaa !30
  %44 = fcmp oeq double %43, %11
  br i1 %44, label %45, label %47

; <label>:45                                      ; preds = %40
  %46 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 0
  br label %.loopexit

; <label>:47                                      ; preds = %40, %36
  %48 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 2
  %49 = load %struct.Node** %48, align 8, !tbaa !286
  %50 = icmp eq %struct.Node* %49, null
  br i1 %50, label %.loopexit, label %36

.loopexit:                                        ; preds = %47, %45, %5
  %.0 = phi %struct.lua_TValue* [ %9, %5 ], [ %46, %45 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %47 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind readonly ssp uwtable
define %struct.lua_TValue* @luaH_getstr(%struct.Table* nocapture readonly %t, %union.TString* readonly %key) #1 {
  %1 = getelementptr inbounds %union.TString* %key, i64 0, i32 0, i32 4
  %2 = load i32* %1, align 4, !tbaa !284
  %3 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %4 = load i8* %3, align 1, !tbaa !214
  %5 = zext i8 %4 to i32
  %6 = shl i32 1, %5
  %7 = add nsw i32 %6, -1
  %8 = and i32 %7, %2
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %11 = load %struct.Node** %10, align 8, !tbaa !216
  %12 = getelementptr inbounds %struct.Node* %11, i64 %9
  br label %13

; <label>:13                                      ; preds = %24, %0
  %n.0 = phi %struct.Node* [ %12, %0 ], [ %26, %24 ]
  %14 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 1
  %15 = load i32* %14, align 4, !tbaa !15
  %16 = icmp eq i32 %15, 68
  br i1 %16, label %17, label %24

; <label>:17                                      ; preds = %13
  %18 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %union.GCObject** %18, align 8, !tbaa !25
  %20 = bitcast %union.GCObject* %19 to %union.TString*
  %21 = icmp eq %union.TString* %20, %key
  br i1 %21, label %22, label %24

; <label>:22                                      ; preds = %17
  %23 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 0
  br label %.loopexit

; <label>:24                                      ; preds = %17, %13
  %25 = getelementptr inbounds %struct.Node* %n.0, i64 0, i32 1, i32 0, i32 2
  %26 = load %struct.Node** %25, align 8, !tbaa !286
  %27 = icmp eq %struct.Node* %26, null
  br i1 %27, label %.loopexit, label %13

.loopexit:                                        ; preds = %24, %22
  %.0 = phi %struct.lua_TValue* [ %23, %22 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %24 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue* @luaH_get(%struct.Table* nocapture readonly %t, %struct.lua_TValue* %key) #0 {
  %u.sroa.0.i.i = alloca double, align 8
  %u.sroa.0 = alloca double, align 8
  %1 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 63
  switch i32 %3, label %92 [
    i32 4, label %4
    i32 0, label %luaH_getstr.exit
    i32 3, label %34
  ]

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  %6 = load %union.GCObject** %5, align 8, !tbaa !25
  %7 = bitcast %union.GCObject* %6 to %union.TString*
  %8 = getelementptr inbounds %union.TString* %7, i64 0, i32 0, i32 4
  %9 = load i32* %8, align 4, !tbaa !284
  %10 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %11 = load i8* %10, align 1, !tbaa !214
  %12 = zext i8 %11 to i32
  %13 = shl i32 1, %12
  %14 = add nsw i32 %13, -1
  %15 = and i32 %14, %9
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %18 = load %struct.Node** %17, align 8, !tbaa !216
  %19 = getelementptr inbounds %struct.Node* %18, i64 %16
  br label %20

; <label>:20                                      ; preds = %30, %4
  %n.0.i = phi %struct.Node* [ %19, %4 ], [ %32, %30 ]
  %21 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 1
  %22 = load i32* %21, align 4, !tbaa !15
  %23 = icmp eq i32 %22, 68
  br i1 %23, label %24, label %30

; <label>:24                                      ; preds = %20
  %25 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %union.GCObject** %25, align 8, !tbaa !25
  %27 = icmp eq %union.GCObject* %26, %6
  br i1 %27, label %28, label %30

; <label>:28                                      ; preds = %24
  %29 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 0
  br label %luaH_getstr.exit

; <label>:30                                      ; preds = %24, %20
  %31 = getelementptr inbounds %struct.Node* %n.0.i, i64 0, i32 1, i32 0, i32 2
  %32 = load %struct.Node** %31, align 8, !tbaa !286
  %33 = icmp eq %struct.Node* %32, null
  br i1 %33, label %luaH_getstr.exit, label %20

; <label>:34                                      ; preds = %0
  %35 = bitcast %struct.lua_TValue* %key to double*
  %36 = load double* %35, align 8, !tbaa !30
  %37 = fadd double %36, 0x4338000000000000
  store volatile double %37, double* %u.sroa.0, align 8
  %38 = bitcast double* %u.sroa.0 to i32*
  %39 = load volatile i32* %38, align 8
  %40 = sitofp i32 %39 to double
  %41 = fcmp oeq double %40, %36
  br i1 %41, label %42, label %92

; <label>:42                                      ; preds = %34
  %43 = add nsw i32 %39, -1
  %44 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %45 = load i32* %44, align 4, !tbaa !215
  %46 = icmp ult i32 %43, %45
  br i1 %46, label %47, label %52

; <label>:47                                      ; preds = %42
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %50 = load %struct.lua_TValue** %49, align 8, !tbaa !217
  %51 = getelementptr inbounds %struct.lua_TValue* %50, i64 %48
  br label %luaH_getstr.exit

; <label>:52                                      ; preds = %42
  %53 = bitcast double* %u.sroa.0.i.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %53)
  %54 = fadd double %40, 1.000000e+00
  store volatile double %54, double* %u.sroa.0.i.i, align 8
  %55 = bitcast double* %u.sroa.0.i.i to i32*
  %56 = load volatile i32* %55, align 8
  %57 = getelementptr inbounds i8* %53, i64 4
  %58 = bitcast i8* %57 to i32*
  %59 = load volatile i32* %58, align 4
  %60 = add nsw i32 %59, %56
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %hashnum.exit.i

; <label>:62                                      ; preds = %52
  %63 = sub i32 0, %60
  %64 = icmp eq i32 %60, %63
  %65 = select i1 %64, i32 0, i32 %63
  br label %hashnum.exit.i

hashnum.exit.i:                                   ; preds = %62, %52
  %i.1.i.i = phi i32 [ %65, %62 ], [ %60, %52 ]
  %66 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %67 = load i8* %66, align 1, !tbaa !214
  %68 = zext i8 %67 to i32
  %69 = shl i32 1, %68
  %70 = add nsw i32 %69, -1
  %71 = or i32 %70, 1
  %72 = srem i32 %i.1.i.i, %71
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %75 = load %struct.Node** %74, align 8, !tbaa !216
  %76 = getelementptr inbounds %struct.Node* %75, i64 %73
  call void @llvm.lifetime.end(i64 8, i8* %53)
  br label %77

; <label>:77                                      ; preds = %88, %hashnum.exit.i
  %n.0.i2 = phi %struct.Node* [ %76, %hashnum.exit.i ], [ %90, %88 ]
  %78 = getelementptr inbounds %struct.Node* %n.0.i2, i64 0, i32 1, i32 0, i32 1
  %79 = load i32* %78, align 4, !tbaa !15
  %80 = icmp eq i32 %79, 3
  br i1 %80, label %81, label %88

; <label>:81                                      ; preds = %77
  %82 = getelementptr inbounds %struct.Node* %n.0.i2, i64 0, i32 1, i32 0, i32 0
  %83 = bitcast %union.Value* %82 to double*
  %84 = load double* %83, align 8, !tbaa !30
  %85 = fcmp oeq double %84, %40
  br i1 %85, label %86, label %88

; <label>:86                                      ; preds = %81
  %87 = getelementptr inbounds %struct.Node* %n.0.i2, i64 0, i32 0
  br label %luaH_getstr.exit

; <label>:88                                      ; preds = %81, %77
  %89 = getelementptr inbounds %struct.Node* %n.0.i2, i64 0, i32 1, i32 0, i32 2
  %90 = load %struct.Node** %89, align 8, !tbaa !286
  %91 = icmp eq %struct.Node* %90, null
  br i1 %91, label %luaH_getstr.exit, label %77

; <label>:92                                      ; preds = %34, %0
  %93 = tail call fastcc %struct.Node* @mainposition(%struct.Table* %t, %struct.lua_TValue* %key)
  br label %94

; <label>:94                                      ; preds = %106, %92
  %n1.0 = phi %struct.Node* [ %93, %92 ], [ %108, %106 ]
  %95 = getelementptr inbounds %struct.Node* %n1.0, i64 0, i32 1, i32 0, i32 1
  %96 = load i32* %95, align 4, !tbaa !15
  %97 = load i32* %1, align 4, !tbaa !15
  %98 = icmp eq i32 %96, %97
  br i1 %98, label %99, label %106

; <label>:99                                      ; preds = %94
  %100 = getelementptr inbounds %struct.Node* %n1.0, i64 0, i32 1
  %101 = bitcast %union.TKey* %100 to %struct.lua_TValue*
  %102 = tail call i32 bitcast (i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)* @luaV_equalobj_ to i32 (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)*)(%struct.lua_State* null, %struct.lua_TValue* %101, %struct.lua_TValue* %key) #3
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %106, label %104

; <label>:104                                     ; preds = %99
  %105 = getelementptr inbounds %struct.Node* %n1.0, i64 0, i32 0
  br label %luaH_getstr.exit

; <label>:106                                     ; preds = %99, %94
  %107 = getelementptr inbounds %struct.Node* %n1.0, i64 0, i32 1, i32 0, i32 2
  %108 = load %struct.Node** %107, align 8, !tbaa !286
  %109 = icmp eq %struct.Node* %108, null
  br i1 %109, label %luaH_getstr.exit, label %94

luaH_getstr.exit:                                 ; preds = %106, %104, %88, %86, %47, %30, %28, %0
  %.0 = phi %struct.lua_TValue* [ %105, %104 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %0 ], [ %29, %28 ], [ %51, %47 ], [ %87, %86 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %106 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %30 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %88 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaH_getn(%struct.Table* nocapture readonly %t) #0 {
  %u.sroa.0.i.i8.i = alloca double, align 8
  %u.sroa.0.i.i2.i = alloca double, align 8
  %u.sroa.0.i.i.i = alloca double, align 8
  %1 = getelementptr inbounds %struct.Table* %t, i64 0, i32 10
  %2 = load i32* %1, align 4, !tbaa !215
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %22, label %4

; <label>:4                                       ; preds = %0
  %5 = add i32 %2, -1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %8 = load %struct.lua_TValue** %7, align 8, !tbaa !217
  %9 = getelementptr inbounds %struct.lua_TValue* %8, i64 %6, i32 1
  %10 = load i32* %9, align 4, !tbaa !15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %.preheader, label %22

.preheader:                                       ; preds = %4
  %12 = icmp ugt i32 %2, 1
  br i1 %12, label %.lr.ph, label %unbound_search.exit

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %i.09 = phi i32 [ %i.0., %.lr.ph ], [ 0, %.preheader ]
  %j.08 = phi i32 [ %.j.0, %.lr.ph ], [ %2, %.preheader ]
  %13 = add i32 %i.09, %j.08
  %14 = lshr i32 %13, 1
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.lua_TValue* %8, i64 %16, i32 1
  %18 = load i32* %17, align 4, !tbaa !15
  %19 = icmp eq i32 %18, 0
  %.j.0 = select i1 %19, i32 %14, i32 %j.08
  %i.0. = select i1 %19, i32 %i.09, i32 %14
  %20 = sub i32 %.j.0, %i.0.
  %21 = icmp ugt i32 %20, 1
  br i1 %21, label %.lr.ph, label %unbound_search.exit

; <label>:22                                      ; preds = %4, %0
  %23 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %24 = load %struct.Node** %23, align 8, !tbaa !216
  %25 = icmp eq %struct.Node* %24, bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*)
  br i1 %25, label %unbound_search.exit, label %26

; <label>:26                                      ; preds = %22
  %27 = add i32 %2, 1
  %28 = getelementptr inbounds %struct.Table* %t, i64 0, i32 6
  %29 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %30 = bitcast double* %u.sroa.0.i.i.i to i8*
  %31 = bitcast double* %u.sroa.0.i.i.i to i32*
  %32 = getelementptr inbounds i8* %30, i64 4
  %33 = bitcast i8* %32 to i32*
  br label %34

; <label>:34                                      ; preds = %86, %26
  %.01.i = phi i32 [ %27, %26 ], [ %87, %86 ]
  %i.0.i = phi i32 [ %2, %26 ], [ %.01.i, %86 ]
  %35 = add nsw i32 %.01.i, -1
  %36 = icmp ult i32 %35, %2
  br i1 %36, label %37, label %41

; <label>:37                                      ; preds = %34
  %38 = sext i32 %35 to i64
  %39 = load %struct.lua_TValue** %28, align 8, !tbaa !217
  %40 = getelementptr inbounds %struct.lua_TValue* %39, i64 %38
  br label %luaH_getint.exit.i

; <label>:41                                      ; preds = %34
  %42 = sitofp i32 %.01.i to double
  call void @llvm.lifetime.start(i64 8, i8* %30)
  %43 = fadd double %42, 1.000000e+00
  store volatile double %43, double* %u.sroa.0.i.i.i, align 8
  %44 = load volatile i32* %31, align 8
  %45 = load volatile i32* %33, align 4
  %46 = add nsw i32 %45, %44
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %hashnum.exit.i.i

; <label>:48                                      ; preds = %41
  %49 = sub i32 0, %46
  %50 = icmp eq i32 %46, %49
  %51 = select i1 %50, i32 0, i32 %49
  br label %hashnum.exit.i.i

hashnum.exit.i.i:                                 ; preds = %48, %41
  %i.1.i.i.i = phi i32 [ %51, %48 ], [ %46, %41 ]
  %52 = load i8* %29, align 1, !tbaa !214
  %53 = zext i8 %52 to i32
  %54 = shl i32 1, %53
  %55 = add nsw i32 %54, -1
  %56 = or i32 %55, 1
  %57 = srem i32 %i.1.i.i.i, %56
  %58 = sext i32 %57 to i64
  %59 = load %struct.Node** %23, align 8, !tbaa !216
  %60 = getelementptr inbounds %struct.Node* %59, i64 %58
  call void @llvm.lifetime.end(i64 8, i8* %30)
  br label %61

; <label>:61                                      ; preds = %72, %hashnum.exit.i.i
  %n.0.i.i = phi %struct.Node* [ %60, %hashnum.exit.i.i ], [ %74, %72 ]
  %62 = getelementptr inbounds %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 1
  %63 = load i32* %62, align 4, !tbaa !15
  %64 = icmp eq i32 %63, 3
  br i1 %64, label %65, label %72

; <label>:65                                      ; preds = %61
  %66 = getelementptr inbounds %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 0
  %67 = bitcast %union.Value* %66 to double*
  %68 = load double* %67, align 8, !tbaa !30
  %69 = fcmp oeq double %68, %42
  br i1 %69, label %70, label %72

; <label>:70                                      ; preds = %65
  %71 = getelementptr inbounds %struct.Node* %n.0.i.i, i64 0, i32 0
  br label %luaH_getint.exit.i

; <label>:72                                      ; preds = %65, %61
  %73 = getelementptr inbounds %struct.Node* %n.0.i.i, i64 0, i32 1, i32 0, i32 2
  %74 = load %struct.Node** %73, align 8, !tbaa !286
  %75 = icmp eq %struct.Node* %74, null
  br i1 %75, label %luaH_getint.exit.i, label %61

luaH_getint.exit.i:                               ; preds = %72, %70, %37
  %.0.i.i = phi %struct.lua_TValue* [ %40, %37 ], [ %71, %70 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %72 ]
  %76 = getelementptr inbounds %struct.lua_TValue* %.0.i.i, i64 0, i32 1
  %77 = load i32* %76, align 4, !tbaa !15
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %.preheader.i, label %86

.preheader.i:                                     ; preds = %luaH_getint.exit.i
  %79 = sub i32 %.01.i, %i.0.i
  %80 = icmp ugt i32 %79, 1
  br i1 %80, label %.lr.ph.i, label %unbound_search.exit

.lr.ph.i:                                         ; preds = %.preheader.i
  %81 = load i32* %1, align 4, !tbaa !215
  %82 = bitcast double* %u.sroa.0.i.i2.i to i8*
  %83 = bitcast double* %u.sroa.0.i.i2.i to i32*
  %84 = getelementptr inbounds i8* %82, i64 4
  %85 = bitcast i8* %84 to i32*
  br label %140

; <label>:86                                      ; preds = %luaH_getint.exit.i
  %87 = shl i32 %.01.i, 1
  %88 = icmp ugt i32 %87, 2147483645
  br i1 %88, label %.preheader18.i, label %34

.preheader18.i:                                   ; preds = %86
  %89 = load i32* %1, align 4, !tbaa !215
  %90 = bitcast double* %u.sroa.0.i.i8.i to i8*
  %91 = bitcast double* %u.sroa.0.i.i8.i to i32*
  %92 = getelementptr inbounds i8* %90, i64 4
  %93 = bitcast i8* %92 to i32*
  br label %94

; <label>:94                                      ; preds = %luaH_getint.exit13.i, %.preheader18.i
  %i.1.i = phi i32 [ %139, %luaH_getint.exit13.i ], [ 1, %.preheader18.i ]
  %95 = add i32 %i.1.i, -1
  %96 = icmp ult i32 %95, %89
  br i1 %96, label %97, label %101

; <label>:97                                      ; preds = %94
  %98 = sext i32 %95 to i64
  %99 = load %struct.lua_TValue** %28, align 8, !tbaa !217
  %100 = getelementptr inbounds %struct.lua_TValue* %99, i64 %98
  br label %luaH_getint.exit13.i

; <label>:101                                     ; preds = %94
  %102 = sitofp i32 %i.1.i to double
  call void @llvm.lifetime.start(i64 8, i8* %90)
  %103 = fadd double %102, 1.000000e+00
  store volatile double %103, double* %u.sroa.0.i.i8.i, align 8
  %104 = load volatile i32* %91, align 8
  %105 = load volatile i32* %93, align 4
  %106 = add nsw i32 %105, %104
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %108, label %hashnum.exit.i10.i

; <label>:108                                     ; preds = %101
  %109 = sub i32 0, %106
  %110 = icmp eq i32 %106, %109
  %111 = select i1 %110, i32 0, i32 %109
  br label %hashnum.exit.i10.i

hashnum.exit.i10.i:                               ; preds = %108, %101
  %i.1.i.i9.i = phi i32 [ %111, %108 ], [ %106, %101 ]
  %112 = load i8* %29, align 1, !tbaa !214
  %113 = zext i8 %112 to i32
  %114 = shl i32 1, %113
  %115 = add nsw i32 %114, -1
  %116 = or i32 %115, 1
  %117 = srem i32 %i.1.i.i9.i, %116
  %118 = sext i32 %117 to i64
  %119 = load %struct.Node** %23, align 8, !tbaa !216
  %120 = getelementptr inbounds %struct.Node* %119, i64 %118
  call void @llvm.lifetime.end(i64 8, i8* %90)
  br label %121

; <label>:121                                     ; preds = %132, %hashnum.exit.i10.i
  %n.0.i11.i = phi %struct.Node* [ %120, %hashnum.exit.i10.i ], [ %134, %132 ]
  %122 = getelementptr inbounds %struct.Node* %n.0.i11.i, i64 0, i32 1, i32 0, i32 1
  %123 = load i32* %122, align 4, !tbaa !15
  %124 = icmp eq i32 %123, 3
  br i1 %124, label %125, label %132

; <label>:125                                     ; preds = %121
  %126 = getelementptr inbounds %struct.Node* %n.0.i11.i, i64 0, i32 1, i32 0, i32 0
  %127 = bitcast %union.Value* %126 to double*
  %128 = load double* %127, align 8, !tbaa !30
  %129 = fcmp oeq double %128, %102
  br i1 %129, label %130, label %132

; <label>:130                                     ; preds = %125
  %131 = getelementptr inbounds %struct.Node* %n.0.i11.i, i64 0, i32 0
  br label %luaH_getint.exit13.i

; <label>:132                                     ; preds = %125, %121
  %133 = getelementptr inbounds %struct.Node* %n.0.i11.i, i64 0, i32 1, i32 0, i32 2
  %134 = load %struct.Node** %133, align 8, !tbaa !286
  %135 = icmp eq %struct.Node* %134, null
  br i1 %135, label %luaH_getint.exit13.i, label %121

luaH_getint.exit13.i:                             ; preds = %132, %130, %97
  %.0.i12.i = phi %struct.lua_TValue* [ %100, %97 ], [ %131, %130 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %132 ]
  %136 = getelementptr inbounds %struct.lua_TValue* %.0.i12.i, i64 0, i32 1
  %137 = load i32* %136, align 4, !tbaa !15
  %138 = icmp eq i32 %137, 0
  %139 = add i32 %i.1.i, 1
  br i1 %138, label %unbound_search.exit, label %94

; <label>:140                                     ; preds = %luaH_getint.exit7.i, %.lr.ph.i
  %i.216.i = phi i32 [ %i.0.i, %.lr.ph.i ], [ %i.2..i, %luaH_getint.exit7.i ]
  %.115.i = phi i32 [ %.01.i, %.lr.ph.i ], [ %..1.i, %luaH_getint.exit7.i ]
  %141 = add i32 %.115.i, %i.216.i
  %142 = lshr i32 %141, 1
  %143 = add nsw i32 %142, -1
  %144 = icmp ult i32 %143, %81
  br i1 %144, label %145, label %149

; <label>:145                                     ; preds = %140
  %146 = sext i32 %143 to i64
  %147 = load %struct.lua_TValue** %28, align 8, !tbaa !217
  %148 = getelementptr inbounds %struct.lua_TValue* %147, i64 %146
  br label %luaH_getint.exit7.i

; <label>:149                                     ; preds = %140
  %150 = sitofp i32 %142 to double
  call void @llvm.lifetime.start(i64 8, i8* %82)
  %151 = fadd double %150, 1.000000e+00
  store volatile double %151, double* %u.sroa.0.i.i2.i, align 8
  %152 = load volatile i32* %83, align 8
  %153 = load volatile i32* %85, align 4
  %154 = add nsw i32 %153, %152
  %155 = icmp slt i32 %154, 0
  br i1 %155, label %156, label %hashnum.exit.i4.i

; <label>:156                                     ; preds = %149
  %157 = sub i32 0, %154
  %158 = icmp eq i32 %154, %157
  %159 = select i1 %158, i32 0, i32 %157
  br label %hashnum.exit.i4.i

hashnum.exit.i4.i:                                ; preds = %156, %149
  %i.1.i.i3.i = phi i32 [ %159, %156 ], [ %154, %149 ]
  %160 = load i8* %29, align 1, !tbaa !214
  %161 = zext i8 %160 to i32
  %162 = shl i32 1, %161
  %163 = add nsw i32 %162, -1
  %164 = or i32 %163, 1
  %165 = srem i32 %i.1.i.i3.i, %164
  %166 = sext i32 %165 to i64
  %167 = load %struct.Node** %23, align 8, !tbaa !216
  %168 = getelementptr inbounds %struct.Node* %167, i64 %166
  call void @llvm.lifetime.end(i64 8, i8* %82)
  br label %169

; <label>:169                                     ; preds = %180, %hashnum.exit.i4.i
  %n.0.i5.i = phi %struct.Node* [ %168, %hashnum.exit.i4.i ], [ %182, %180 ]
  %170 = getelementptr inbounds %struct.Node* %n.0.i5.i, i64 0, i32 1, i32 0, i32 1
  %171 = load i32* %170, align 4, !tbaa !15
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %180

; <label>:173                                     ; preds = %169
  %174 = getelementptr inbounds %struct.Node* %n.0.i5.i, i64 0, i32 1, i32 0, i32 0
  %175 = bitcast %union.Value* %174 to double*
  %176 = load double* %175, align 8, !tbaa !30
  %177 = fcmp oeq double %176, %150
  br i1 %177, label %178, label %180

; <label>:178                                     ; preds = %173
  %179 = getelementptr inbounds %struct.Node* %n.0.i5.i, i64 0, i32 0
  br label %luaH_getint.exit7.i

; <label>:180                                     ; preds = %173, %169
  %181 = getelementptr inbounds %struct.Node* %n.0.i5.i, i64 0, i32 1, i32 0, i32 2
  %182 = load %struct.Node** %181, align 8, !tbaa !286
  %183 = icmp eq %struct.Node* %182, null
  br i1 %183, label %luaH_getint.exit7.i, label %169

luaH_getint.exit7.i:                              ; preds = %180, %178, %145
  %.0.i6.i = phi %struct.lua_TValue* [ %148, %145 ], [ %179, %178 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %180 ]
  %184 = getelementptr inbounds %struct.lua_TValue* %.0.i6.i, i64 0, i32 1
  %185 = load i32* %184, align 4, !tbaa !15
  %186 = icmp eq i32 %185, 0
  %..1.i = select i1 %186, i32 %142, i32 %.115.i
  %i.2..i = select i1 %186, i32 %i.216.i, i32 %142
  %187 = sub i32 %..1.i, %i.2..i
  %188 = icmp ugt i32 %187, 1
  br i1 %188, label %140, label %unbound_search.exit

unbound_search.exit:                              ; preds = %luaH_getint.exit7.i, %luaH_getint.exit13.i, %.preheader.i, %22, %.lr.ph, %.preheader
  %.0 = phi i32 [ %2, %22 ], [ %i.0.i, %.preheader.i ], [ 0, %.preheader ], [ %i.2..i, %luaH_getint.exit7.i ], [ %95, %luaH_getint.exit13.i ], [ %i.0., %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.Node* @mainposition(%struct.Table* nocapture readonly %t, %struct.lua_TValue* nocapture readonly %key) #0 {
  %u.sroa.0.i = alloca double, align 8
  %1 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 63
  switch i32 %3, label %123 [
    i32 3, label %4
    i32 20, label %31
    i32 4, label %62
    i32 1, label %78
    i32 2, label %91
    i32 22, label %107
  ]

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.lua_TValue* %key to double*
  %6 = load double* %5, align 8, !tbaa !30
  %7 = bitcast double* %u.sroa.0.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %7)
  %8 = fadd double %6, 1.000000e+00
  store volatile double %8, double* %u.sroa.0.i, align 8
  %9 = bitcast double* %u.sroa.0.i to i32*
  %10 = load volatile i32* %9, align 8
  %11 = getelementptr inbounds i8* %7, i64 4
  %12 = bitcast i8* %11 to i32*
  %13 = load volatile i32* %12, align 4
  %14 = add nsw i32 %13, %10
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %hashnum.exit

; <label>:16                                      ; preds = %4
  %17 = sub i32 0, %14
  %18 = icmp eq i32 %14, %17
  %19 = select i1 %18, i32 0, i32 %17
  br label %hashnum.exit

hashnum.exit:                                     ; preds = %16, %4
  %i.1.i = phi i32 [ %19, %16 ], [ %14, %4 ]
  %20 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %21 = load i8* %20, align 1, !tbaa !214
  %22 = zext i8 %21 to i32
  %23 = shl i32 1, %22
  %24 = add nsw i32 %23, -1
  %25 = or i32 %24, 1
  %26 = srem i32 %i.1.i, %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %29 = load %struct.Node** %28, align 8, !tbaa !216
  %30 = getelementptr inbounds %struct.Node* %29, i64 %27
  call void @llvm.lifetime.end(i64 8, i8* %7)
  br label %139

; <label>:31                                      ; preds = %0
  %32 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  %33 = load %union.GCObject** %32, align 8, !tbaa !25
  %34 = getelementptr inbounds %union.GCObject* %33, i64 0, i32 0, i32 3
  %35 = load i8* %34, align 1, !tbaa !219
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %47

; <label>:37                                      ; preds = %31
  %38 = bitcast %union.GCObject* %33 to %struct.anon.0*
  %39 = getelementptr inbounds %union.GCObject* %33, i64 0, i32 0, i32 5
  %40 = bitcast %struct.global_State** %39 to i8*
  %41 = getelementptr inbounds %union.GCObject* %33, i64 0, i32 0, i32 4
  %42 = bitcast %struct.lua_TValue** %41 to i64*
  %43 = load i64* %42, align 8, !tbaa !34
  %44 = getelementptr inbounds %struct.anon.0* %38, i64 0, i32 4
  %45 = load i32* %44, align 4, !tbaa !284
  %46 = tail call i32 @luaS_hash(i8* %40, i64 %43, i32 %45) #3
  store i32 %46, i32* %44, align 4, !tbaa !284
  store i8 1, i8* %34, align 1, !tbaa !219
  %.pre = load %union.GCObject** %32, align 8, !tbaa !25
  br label %47

; <label>:47                                      ; preds = %37, %31
  %48 = phi %union.GCObject* [ %.pre, %37 ], [ %33, %31 ]
  %49 = bitcast %union.GCObject* %48 to %struct.anon.0*
  %50 = getelementptr inbounds %struct.anon.0* %49, i64 0, i32 4
  %51 = load i32* %50, align 4, !tbaa !284
  %52 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %53 = load i8* %52, align 1, !tbaa !214
  %54 = zext i8 %53 to i32
  %55 = shl i32 1, %54
  %56 = add nsw i32 %55, -1
  %57 = and i32 %56, %51
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %60 = load %struct.Node** %59, align 8, !tbaa !216
  %61 = getelementptr inbounds %struct.Node* %60, i64 %58
  br label %139

; <label>:62                                      ; preds = %0
  %63 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  %64 = load %union.GCObject** %63, align 8, !tbaa !25
  %65 = bitcast %union.GCObject* %64 to %struct.anon.0*
  %66 = getelementptr inbounds %struct.anon.0* %65, i64 0, i32 4
  %67 = load i32* %66, align 4, !tbaa !284
  %68 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %69 = load i8* %68, align 1, !tbaa !214
  %70 = zext i8 %69 to i32
  %71 = shl i32 1, %70
  %72 = add nsw i32 %71, -1
  %73 = and i32 %72, %67
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %76 = load %struct.Node** %75, align 8, !tbaa !216
  %77 = getelementptr inbounds %struct.Node* %76, i64 %74
  br label %139

; <label>:78                                      ; preds = %0
  %79 = bitcast %struct.lua_TValue* %key to i32*
  %80 = load i32* %79, align 4, !tbaa !1
  %81 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %82 = load i8* %81, align 1, !tbaa !214
  %83 = zext i8 %82 to i32
  %84 = shl i32 1, %83
  %85 = add nsw i32 %84, -1
  %86 = and i32 %85, %80
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %89 = load %struct.Node** %88, align 8, !tbaa !216
  %90 = getelementptr inbounds %struct.Node* %89, i64 %87
  br label %139

; <label>:91                                      ; preds = %0
  %92 = bitcast %struct.lua_TValue* %key to i8**
  %93 = load i8** %92, align 8, !tbaa !25
  %94 = ptrtoint i8* %93 to i64
  %95 = trunc i64 %94 to i32
  %96 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %97 = load i8* %96, align 1, !tbaa !214
  %98 = zext i8 %97 to i32
  %99 = shl i32 1, %98
  %100 = add nsw i32 %99, -1
  %101 = or i32 %100, 1
  %102 = urem i32 %95, %101
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %105 = load %struct.Node** %104, align 8, !tbaa !216
  %106 = getelementptr inbounds %struct.Node* %105, i64 %103
  br label %139

; <label>:107                                     ; preds = %0
  %108 = bitcast %struct.lua_TValue* %key to i32 (%struct.lua_State*)**
  %109 = load i32 (%struct.lua_State*)** %108, align 8, !tbaa !25
  %110 = ptrtoint i32 (%struct.lua_State*)* %109 to i64
  %111 = trunc i64 %110 to i32
  %112 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %113 = load i8* %112, align 1, !tbaa !214
  %114 = zext i8 %113 to i32
  %115 = shl i32 1, %114
  %116 = add nsw i32 %115, -1
  %117 = or i32 %116, 1
  %118 = urem i32 %111, %117
  %119 = zext i32 %118 to i64
  %120 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %121 = load %struct.Node** %120, align 8, !tbaa !216
  %122 = getelementptr inbounds %struct.Node* %121, i64 %119
  br label %139

; <label>:123                                     ; preds = %0
  %124 = getelementptr inbounds %struct.lua_TValue* %key, i64 0, i32 0, i32 0
  %125 = load %union.GCObject** %124, align 8, !tbaa !25
  %126 = ptrtoint %union.GCObject* %125 to i64
  %127 = trunc i64 %126 to i32
  %128 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  %129 = load i8* %128, align 1, !tbaa !214
  %130 = zext i8 %129 to i32
  %131 = shl i32 1, %130
  %132 = add nsw i32 %131, -1
  %133 = or i32 %132, 1
  %134 = urem i32 %127, %133
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  %137 = load %struct.Node** %136, align 8, !tbaa !216
  %138 = getelementptr inbounds %struct.Node* %137, i64 %135
  br label %139

; <label>:139                                     ; preds = %123, %107, %91, %78, %62, %47, %hashnum.exit
  %.0 = phi %struct.Node* [ %138, %123 ], [ %122, %107 ], [ %106, %91 ], [ %90, %78 ], [ %77, %62 ], [ %61, %47 ], [ %30, %hashnum.exit ]
  ret %struct.Node* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @setnodevector(%struct.lua_State* %L, %struct.Table* nocapture %t, i32 %size) #0 {
  %1 = icmp eq i32 %size, 0
  br i1 %1, label %2, label %4

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  store %struct.Node* bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*), %struct.Node** %3, align 8, !tbaa !216
  br label %24

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaO_ceillog2(i32 %size) #3
  %6 = icmp sgt i32 %5, 30
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %4
  tail call void (%struct.lua_State*, i8*, ...)* @luaG_runerror(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8]* @.str2235, i64 0, i64 0)) #13
  unreachable

; <label>:8                                       ; preds = %4
  %9 = shl i32 1, %5
  %10 = add nsw i32 %9, 1
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %.lr.ph

; <label>:12                                      ; preds = %8
  tail call void @luaM_toobig(%struct.lua_State* %L) #13
  unreachable

.lr.ph:                                           ; preds = %8
  %13 = sext i32 %9 to i64
  %14 = mul i64 %13, 40
  %15 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* null, i64 0, i64 %14) #3
  %16 = bitcast i8* %15 to %struct.Node*
  %17 = getelementptr inbounds %struct.Table* %t, i64 0, i32 7
  store %struct.Node* %16, %struct.Node** %17, align 8, !tbaa !216
  br label %18

; <label>:18                                      ; preds = %18, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %19 = getelementptr inbounds %struct.Node* %16, i64 %indvars.iv, i32 1, i32 0, i32 2
  store %struct.Node* null, %struct.Node** %19, align 8, !tbaa !286
  %20 = getelementptr inbounds %struct.Node* %16, i64 %indvars.iv, i32 1, i32 0, i32 1
  store i32 0, i32* %20, align 4, !tbaa !15
  %21 = getelementptr inbounds %struct.Node* %16, i64 %indvars.iv, i32 0, i32 1
  store i32 0, i32* %21, align 4, !tbaa !15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %22 = trunc i64 %indvars.iv.next to i32
  %23 = icmp slt i32 %22, %9
  br i1 %23, label %18, label %.loopexit

.loopexit:                                        ; preds = %18
  %phitmp = trunc i32 %5 to i8
  br label %24

; <label>:24                                      ; preds = %.loopexit, %2
  %25 = phi %struct.Node* [ bitcast ({ { %union.Value, i32, [4 x i8] }, %union.TKey }* @dummynode_ to %struct.Node*), %2 ], [ %16, %.loopexit ]
  %lsize.0 = phi i8 [ 0, %2 ], [ %phitmp, %.loopexit ]
  %.0 = phi i64 [ 0, %2 ], [ %13, %.loopexit ]
  %26 = getelementptr inbounds %struct.Table* %t, i64 0, i32 4
  store i8 %lsize.0, i8* %26, align 1, !tbaa !214
  %27 = getelementptr inbounds %struct.Node* %25, i64 %.0
  %28 = getelementptr inbounds %struct.Table* %t, i64 0, i32 8
  store %struct.Node* %27, %struct.Node** %28, align 8, !tbaa !288
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaT_init(%struct.lua_State* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  br label %2

; <label>:2                                       ; preds = %2, %0
  %indvars.iv = phi i64 [ 0, %0 ], [ %indvars.iv.next, %2 ]
  %3 = getelementptr inbounds [17 x i8*]* @luaT_init.luaT_eventname, i64 0, i64 %indvars.iv
  %4 = load i8** %3, align 8, !tbaa !25
  %5 = tail call %union.TString* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*)* @luaS_new to %union.TString* (%struct.lua_State*, i8*)*)(%struct.lua_State* %L, i8* %4) #3
  %6 = load %struct.global_State** %1, align 8, !tbaa !17
  %7 = getelementptr inbounds %struct.global_State* %6, i64 0, i32 33, i64 %indvars.iv
  store %union.TString* %5, %union.TString** %7, align 8, !tbaa !25
  %8 = load %struct.global_State** %1, align 8, !tbaa !17
  %9 = getelementptr inbounds %struct.global_State* %8, i64 0, i32 33, i64 %indvars.iv
  %10 = load %union.TString** %9, align 8, !tbaa !25
  %11 = getelementptr inbounds %union.TString* %10, i64 0, i32 0, i32 2
  %12 = load i8* %11, align 1, !tbaa !218
  %13 = or i8 %12, 32
  store i8 %13, i8* %11, align 1, !tbaa !218
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 17
  br i1 %exitcond, label %14, label %2

; <label>:14                                      ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue* @luaT_gettm(%struct.Table* %events, i32 %event, %union.TString* %ename) #0 {
  %1 = tail call %struct.lua_TValue* @luaH_getstr(%struct.Table* %events, %union.TString* %ename) #3
  %2 = getelementptr inbounds %struct.lua_TValue* %1, i64 0, i32 1
  %3 = load i32* %2, align 4, !tbaa !15
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

; <label>:5                                       ; preds = %0
  %6 = shl i32 1, %event
  %7 = getelementptr inbounds %struct.Table* %events, i64 0, i32 3
  %8 = load i8* %7, align 1, !tbaa !41
  %9 = zext i8 %8 to i32
  %10 = or i32 %9, %6
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* %7, align 1, !tbaa !41
  br label %12

; <label>:12                                      ; preds = %5, %0
  %.0 = phi %struct.lua_TValue* [ null, %5 ], [ %1, %0 ]
  ret %struct.lua_TValue* %.0
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue* @luaT_gettmbyobj(%struct.lua_State* nocapture readonly %L, %struct.lua_TValue* nocapture readonly %o, i32 %event) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue* %o, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 15
  switch i32 %3, label %16 [
    i32 5, label %4
    i32 7, label %10
  ]

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue* %o, i64 0, i32 0, i32 0
  %6 = load %union.GCObject** %5, align 8, !tbaa !25
  %7 = getelementptr inbounds %union.GCObject* %6, i64 0, i32 0, i32 4
  %8 = load %struct.lua_TValue** %7, align 8
  %9 = bitcast %struct.lua_TValue* %8 to %struct.Table*
  br label %22

; <label>:10                                      ; preds = %0
  %11 = getelementptr inbounds %struct.lua_TValue* %o, i64 0, i32 0, i32 0
  %12 = load %union.GCObject** %11, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.GCObject* %12, i64 0, i32 0, i32 4
  %14 = load %struct.lua_TValue** %13, align 8
  %15 = bitcast %struct.lua_TValue* %14 to %struct.Table*
  br label %22

; <label>:16                                      ; preds = %0
  %17 = zext i32 %3 to i64
  %18 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %19 = load %struct.global_State** %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.global_State* %19, i64 0, i32 34, i64 %17
  %21 = load %struct.Table** %20, align 8, !tbaa !25
  br label %22

; <label>:22                                      ; preds = %16, %10, %4
  %mt.0 = phi %struct.Table* [ %21, %16 ], [ %15, %10 ], [ %9, %4 ]
  %23 = icmp eq %struct.Table* %mt.0, null
  br i1 %23, label %31, label %24

; <label>:24                                      ; preds = %22
  %25 = zext i32 %event to i64
  %26 = getelementptr inbounds %struct.lua_State* %L, i64 0, i32 5
  %27 = load %struct.global_State** %26, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.global_State* %27, i64 0, i32 33, i64 %25
  %29 = load %union.TString** %28, align 8, !tbaa !25
  %30 = tail call %struct.lua_TValue* @luaH_getstr(%struct.Table* %mt.0, %union.TString* %29) #3
  br label %31

; <label>:31                                      ; preds = %24, %22
  %32 = phi %struct.lua_TValue* [ %30, %24 ], [ bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue*), %22 ]
  ret %struct.lua_TValue* %32
}

; Function Attrs: nounwind ssp uwtable
define %union.Closure.129* @luaU_undump(%struct.lua_State.126* %L, %struct.Zio.375* %Z, %struct.Mbuffer* %buff, i8* %name) #0 {
  %h.i = alloca [18 x i8], align 16
  %s.i = alloca [18 x i8], align 16
  %S = alloca %struct.LoadState, align 8
  %1 = load i8* %name, align 1, !tbaa !86
  switch i8 %1, label %7 [
    i8 64, label %2
    i8 61, label %2
    i8 27, label %5
  ]

; <label>:2                                       ; preds = %0, %0
  %3 = getelementptr inbounds i8* %name, i64 1
  %4 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 3
  store i8* %3, i8** %4, align 8, !tbaa !292
  br label %9

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 3
  store i8* getelementptr inbounds ([14 x i8]* @.str1291, i64 0, i64 0), i8** %6, align 8, !tbaa !292
  br label %9

; <label>:7                                       ; preds = %0
  %8 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 3
  store i8* %name, i8** %8, align 8, !tbaa !292
  br label %9

; <label>:9                                       ; preds = %7, %5, %2
  %10 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 0
  store %struct.lua_State.126* %L, %struct.lua_State.126** %10, align 8, !tbaa !294
  %11 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 1
  store %struct.Zio.375* %Z, %struct.Zio.375** %11, align 8, !tbaa !295
  %12 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 2
  store %struct.Mbuffer* %buff, %struct.Mbuffer** %12, align 8, !tbaa !296
  %13 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 18, i8* %13) #3
  %14 = getelementptr inbounds [18 x i8]* %s.i, i64 0, i64 0
  call void @llvm.lifetime.start(i64 18, i8* %14) #3
  %15 = bitcast [18 x i8]* %h.i to i32*
  store i32 1635077147, i32* %15, align 16
  %16 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 4
  %17 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 5
  store i8 82, i8* %16, align 4, !tbaa !86
  %18 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 6
  store i8 0, i8* %17, align 1, !tbaa !86
  %19 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 7
  store i8 1, i8* %18, align 2, !tbaa !86
  %20 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 8
  store i8 4, i8* %19, align 1, !tbaa !86
  %21 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 9
  store i8 8, i8* %20, align 8, !tbaa !86
  %22 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 10
  store i8 4, i8* %21, align 1, !tbaa !86
  %23 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 11
  store i8 8, i8* %22, align 2, !tbaa !86
  %24 = getelementptr inbounds [18 x i8]* %h.i, i64 0, i64 12
  store i8 0, i8* %23, align 1, !tbaa !86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* getelementptr inbounds ([7 x i8]* @.str4292, i64 0, i64 0), i64 6, i32 1, i1 false) #3
  store i8 27, i8* %14, align 16
  %25 = getelementptr inbounds [18 x i8]* %s.i, i64 0, i64 1
  %26 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %Z, i8* %25, i64 17) #3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %LoadBlock.exit.i, label %28

; <label>:28                                      ; preds = %9
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i:                                 ; preds = %9
  %29 = call i32 @memcmp(i8* %13, i8* %14, i64 18) #3
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %LoadHeader.exit, label %31

; <label>:31                                      ; preds = %LoadBlock.exit.i
  %32 = call i32 @memcmp(i8* %13, i8* %14, i64 4) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34

; <label>:34                                      ; preds = %31
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([6 x i8]* @.str8296, i64 0, i64 0)) #13
  unreachable

; <label>:35                                      ; preds = %31
  %36 = call i32 @memcmp(i8* %13, i8* %14, i64 6) #3
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

; <label>:38                                      ; preds = %35
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([20 x i8]* @.str9297, i64 0, i64 0)) #13
  unreachable

; <label>:39                                      ; preds = %35
  %40 = call i32 @memcmp(i8* %13, i8* %14, i64 12) #3
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42

; <label>:42                                      ; preds = %39
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([13 x i8]* @.str10298, i64 0, i64 0)) #13
  unreachable

; <label>:43                                      ; preds = %39
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadHeader.exit:                                  ; preds = %LoadBlock.exit.i
  call void @llvm.lifetime.end(i64 18, i8* %13) #3
  call void @llvm.lifetime.end(i64 18, i8* %14) #3
  %44 = call %union.Closure.129* @luaF_newLclosure(%struct.lua_State.126* %L, i32 1) #3
  %45 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 4
  %46 = load %struct.lua_TValue.109** %45, align 8, !tbaa !12
  %47 = bitcast %union.Closure.129* %44 to %union.GCObject.127*
  %48 = getelementptr inbounds %struct.lua_TValue.109* %46, i64 0, i32 0, i32 0
  store %union.GCObject.127* %47, %union.GCObject.127** %48, align 8, !tbaa !25
  %49 = getelementptr inbounds %struct.lua_TValue.109* %46, i64 0, i32 1
  store i32 70, i32* %49, align 4, !tbaa !15
  %50 = load %struct.lua_TValue.109** %45, align 8, !tbaa !12
  %51 = getelementptr inbounds %struct.lua_TValue.109* %50, i64 1
  store %struct.lua_TValue.109* %51, %struct.lua_TValue.109** %45, align 8, !tbaa !12
  %52 = getelementptr inbounds %struct.lua_State.126* %L, i64 0, i32 8
  %53 = load %struct.lua_TValue.109** %52, align 8, !tbaa !11
  %54 = ptrtoint %struct.lua_TValue.109* %53 to i64
  %55 = ptrtoint %struct.lua_TValue.109* %51 to i64
  %56 = sub i64 %54, %55
  %57 = icmp slt i64 %56, 16
  br i1 %57, label %58, label %59

; <label>:58                                      ; preds = %LoadHeader.exit
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.126*, i32)*)(%struct.lua_State.126* %L, i32 0) #3
  br label %59

; <label>:59                                      ; preds = %58, %LoadHeader.exit
  %60 = call %struct.Proto.132* @luaF_newproto(%struct.lua_State.126* %L) #3
  %61 = getelementptr inbounds %union.Closure.129* %44, i64 0, i32 0, i32 5
  %.c = bitcast %struct.Proto.132* %60 to i32 (%struct.lua_State.126*)*
  store i32 (%struct.lua_State.126*)* %.c, i32 (%struct.lua_State.126*)** %61, align 8, !tbaa !183
  call fastcc void @LoadFunction(%struct.LoadState* %S, %struct.Proto.132* %60)
  %62 = load i32 (%struct.lua_State.126*)** %61, align 8
  %63 = bitcast i32 (%struct.lua_State.126*)* %62 to %struct.Proto.132*
  %64 = getelementptr inbounds %struct.Proto.132* %63, i64 0, i32 11
  %65 = load i32* %64, align 4, !tbaa !73
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %74, label %67

; <label>:67                                      ; preds = %59
  %68 = call %union.Closure.129* @luaF_newLclosure(%struct.lua_State.126* %L, i32 %65) #3
  %69 = getelementptr inbounds %union.Closure.129* %68, i64 0, i32 0, i32 5
  store i32 (%struct.lua_State.126*)* %62, i32 (%struct.lua_State.126*)** %69, align 8, !tbaa !183
  %70 = load %struct.lua_TValue.109** %45, align 8, !tbaa !12
  %71 = bitcast %union.Closure.129* %68 to %union.GCObject.127*
  %72 = getelementptr inbounds %struct.lua_TValue.109* %70, i64 -1, i32 0, i32 0
  store %union.GCObject.127* %71, %union.GCObject.127** %72, align 8, !tbaa !25
  %73 = getelementptr inbounds %struct.lua_TValue.109* %70, i64 -1, i32 1
  store i32 70, i32* %73, align 4, !tbaa !15
  br label %74

; <label>:74                                      ; preds = %67, %59
  %cl.0 = phi %union.Closure.129* [ %68, %67 ], [ %44, %59 ]
  ret %union.Closure.129* %cl.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaU_header(i8* %h) #0 {
  %1 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %h, i1 false)
  %2 = tail call i8* @__memcpy_chk(i8* %h, i8* getelementptr inbounds ([5 x i8]* @.str290, i64 0, i64 0), i64 4, i64 %1) #3
  %3 = getelementptr inbounds i8* %h, i64 4
  %4 = getelementptr inbounds i8* %h, i64 5
  store i8 82, i8* %3, align 1, !tbaa !86
  %5 = getelementptr inbounds i8* %h, i64 6
  store i8 0, i8* %4, align 1, !tbaa !86
  %6 = getelementptr inbounds i8* %h, i64 7
  store i8 1, i8* %5, align 1, !tbaa !86
  %7 = getelementptr inbounds i8* %h, i64 8
  store i8 4, i8* %6, align 1, !tbaa !86
  %8 = getelementptr inbounds i8* %h, i64 9
  store i8 8, i8* %7, align 1, !tbaa !86
  %9 = getelementptr inbounds i8* %h, i64 10
  store i8 4, i8* %8, align 1, !tbaa !86
  %10 = getelementptr inbounds i8* %h, i64 11
  store i8 8, i8* %9, align 1, !tbaa !86
  %11 = getelementptr inbounds i8* %h, i64 12
  store i8 0, i8* %10, align 1, !tbaa !86
  %12 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %11, i1 false)
  %13 = tail call i8* @__memcpy_chk(i8* %11, i8* getelementptr inbounds ([7 x i8]* @.str4292, i64 0, i64 0), i64 6, i64 %12) #3
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @error(%struct.LoadState* nocapture readonly %S, i8* %why) #4 {
  %1 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 0
  %2 = load %struct.lua_State.126** %1, align 8, !tbaa !294
  %3 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 3
  %4 = load i8** %3, align 8, !tbaa !292
  %5 = tail call i8* (%struct.lua_State.126*, i8*, ...)* bitcast (i8* (%struct.lua_State.228*, i8*, ...)* @luaO_pushfstring to i8* (%struct.lua_State.126*, i8*, ...)*)(%struct.lua_State.126* %2, i8* getelementptr inbounds ([25 x i8]* @.str6294, i64 0, i64 0), i8* %4, i8* %why) #3
  %6 = load %struct.lua_State.126** %1, align 8, !tbaa !294
  tail call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.126*, i32)*)(%struct.lua_State.126* %6, i32 3) #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @LoadFunction(%struct.LoadState* %S, %struct.Proto.132* nocapture %f) #0 {
  %x.i10.i28 = alloca i32, align 4
  %x.i8.i = alloca double, align 8
  %x.i5.i = alloca i8, align 1
  %x.i3.i29 = alloca i8, align 1
  %x.i.i30 = alloca i32, align 4
  %x.i3.i = alloca i8, align 1
  %x.i1.i17 = alloca i8, align 1
  %x.i.i18 = alloca i32, align 4
  %x.i.i13 = alloca i32, align 4
  %x.i10 = alloca i8, align 1
  %x.i7 = alloca i8, align 1
  %x.i5 = alloca i8, align 1
  %x.i2 = alloca i32, align 4
  %x.i = alloca i32, align 4
  %x.i10.i = alloca i32, align 4
  %x.i7.i = alloca i32, align 4
  %x.i4.i = alloca i32, align 4
  %x.i1.i = alloca i32, align 4
  %x.i.i = alloca i32, align 4
  %1 = bitcast i32* %x.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %1) #3
  %2 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 1
  %3 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %4 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %3, i8* %1, i64 4) #3
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %LoadBlock.exit.i1, label %6

; <label>:6                                       ; preds = %0
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i1:                                ; preds = %0
  %7 = load i32* %x.i, align 4, !tbaa !1
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %LoadInt.exit

; <label>:9                                       ; preds = %LoadBlock.exit.i1
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit:                                     ; preds = %LoadBlock.exit.i1
  call void @llvm.lifetime.end(i64 4, i8* %1) #3
  %10 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 17
  store i32 %7, i32* %10, align 4, !tbaa !123
  %11 = bitcast i32* %x.i2 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %11) #3
  %12 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %13 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %12, i8* %11, i64 4) #3
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %LoadBlock.exit.i3, label %15

; <label>:15                                      ; preds = %LoadInt.exit
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i3:                                ; preds = %LoadInt.exit
  %16 = load i32* %x.i2, align 4, !tbaa !1
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %LoadInt.exit4

; <label>:18                                      ; preds = %LoadBlock.exit.i3
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit4:                                    ; preds = %LoadBlock.exit.i3
  call void @llvm.lifetime.end(i64 4, i8* %11) #3
  %19 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 18
  store i32 %16, i32* %19, align 4, !tbaa !124
  call void @llvm.lifetime.start(i64 1, i8* %x.i5) #3
  %20 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %21 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %20, i8* %x.i5, i64 1) #3
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %LoadChar.exit, label %23

; <label>:23                                      ; preds = %LoadInt.exit4
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit:                                    ; preds = %LoadInt.exit4
  %24 = load i8* %x.i5, align 1, !tbaa !86
  call void @llvm.lifetime.end(i64 1, i8* %x.i5) #3
  %25 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 20
  store i8 %24, i8* %25, align 1, !tbaa !131
  call void @llvm.lifetime.start(i64 1, i8* %x.i7) #3
  %26 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %27 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %26, i8* %x.i7, i64 1) #3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %LoadChar.exit9, label %29

; <label>:29                                      ; preds = %LoadChar.exit
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit9:                                   ; preds = %LoadChar.exit
  %30 = load i8* %x.i7, align 1, !tbaa !86
  call void @llvm.lifetime.end(i64 1, i8* %x.i7) #3
  %31 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 21
  store i8 %30, i8* %31, align 1, !tbaa !130
  call void @llvm.lifetime.start(i64 1, i8* %x.i10) #3
  %32 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %33 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %32, i8* %x.i10, i64 1) #3
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %LoadChar.exit12, label %35

; <label>:35                                      ; preds = %LoadChar.exit9
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit12:                                  ; preds = %LoadChar.exit9
  %36 = load i8* %x.i10, align 1, !tbaa !86
  call void @llvm.lifetime.end(i64 1, i8* %x.i10) #3
  %37 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 22
  store i8 %36, i8* %37, align 1, !tbaa !88
  %38 = bitcast i32* %x.i.i13 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %38) #3
  %39 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %40 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %39, i8* %38, i64 4) #3
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %LoadBlock.exit.i.i14, label %42

; <label>:42                                      ; preds = %LoadChar.exit12
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i.i14:                             ; preds = %LoadChar.exit12
  %43 = load i32* %x.i.i13, align 4, !tbaa !1
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %LoadInt.exit.i15

; <label>:45                                      ; preds = %LoadBlock.exit.i.i14
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit.i15:                                 ; preds = %LoadBlock.exit.i.i14
  call void @llvm.lifetime.end(i64 4, i8* %38) #3
  %46 = add nsw i32 %43, 1
  %47 = icmp slt i32 %46, 0
  %48 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 0
  %49 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  br i1 %47, label %50, label %51

; <label>:50                                      ; preds = %LoadInt.exit.i15
  call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %49) #13
  unreachable

; <label>:51                                      ; preds = %LoadInt.exit.i15
  %52 = sext i32 %43 to i64
  %53 = shl nsw i64 %52, 2
  %54 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %49, i8* null, i64 0, i64 %53) #3
  %55 = bitcast i8* %54 to i32*
  %56 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 4
  store i32* %55, i32** %56, align 8, !tbaa !83
  %57 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 13
  store i32 %43, i32* %57, align 4, !tbaa !106
  %58 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %59 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %58, i8* %54, i64 %53) #3
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %LoadCode.exit, label %61

; <label>:61                                      ; preds = %51
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadCode.exit:                                    ; preds = %51
  %62 = bitcast i32* %x.i.i30 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %62) #3
  %63 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %64 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %63, i8* %62, i64 4) #3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %LoadBlock.exit.i.i31, label %66

; <label>:66                                      ; preds = %LoadCode.exit
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i.i31:                             ; preds = %LoadCode.exit
  %67 = load i32* %x.i.i30, align 4, !tbaa !1
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %LoadInt.exit.i32

; <label>:69                                      ; preds = %LoadBlock.exit.i.i31
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit.i32:                                 ; preds = %LoadBlock.exit.i.i31
  call void @llvm.lifetime.end(i64 4, i8* %62) #3
  %70 = add nsw i32 %67, 1
  %71 = icmp slt i32 %70, 0
  %72 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  br i1 %71, label %73, label %74

; <label>:73                                      ; preds = %LoadInt.exit.i32
  call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %72) #13
  unreachable

; <label>:74                                      ; preds = %LoadInt.exit.i32
  %75 = sext i32 %67 to i64
  %76 = shl nsw i64 %75, 4
  %77 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %72, i8* null, i64 0, i64 %76) #3
  %78 = bitcast i8* %77 to %struct.lua_TValue.109*
  %79 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 3
  store %struct.lua_TValue.109* %78, %struct.lua_TValue.109** %79, align 8, !tbaa !109
  %80 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 12
  store i32 %67, i32* %80, align 4, !tbaa !110
  %81 = icmp sgt i32 %67, 0
  br i1 %81, label %.lr.ph44, label %._crit_edge

.preheader39:                                     ; preds = %.lr.ph44
  br i1 %81, label %.lr.ph41, label %._crit_edge

.lr.ph41:                                         ; preds = %.preheader39
  %82 = bitcast double* %x.i8.i to i8*
  br label %84

.lr.ph44:                                         ; preds = %.lr.ph44, %74
  %indvars.iv57 = phi i64 [ %indvars.iv.next58, %.lr.ph44 ], [ 0, %74 ]
  %83 = getelementptr inbounds %struct.lua_TValue.109* %78, i64 %indvars.iv57, i32 1
  store i32 0, i32* %83, align 4, !tbaa !15
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %lftr.wideiv59 = trunc i64 %indvars.iv.next58 to i32
  %exitcond60 = icmp eq i32 %lftr.wideiv59, %67
  br i1 %exitcond60, label %.preheader39, label %.lr.ph44

; <label>:84                                      ; preds = %._crit_edge62, %.lr.ph41
  %85 = phi %struct.lua_TValue.109* [ %78, %.lr.ph41 ], [ %.pre63, %._crit_edge62 ]
  %indvars.iv55 = phi i64 [ 0, %.lr.ph41 ], [ %indvars.iv.next56, %._crit_edge62 ]
  %86 = getelementptr inbounds %struct.lua_TValue.109* %85, i64 %indvars.iv55
  call void @llvm.lifetime.start(i64 1, i8* %x.i3.i29) #3
  %87 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %88 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %87, i8* %x.i3.i29, i64 1) #3
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %LoadChar.exit.i33, label %90

; <label>:90                                      ; preds = %84
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit.i33:                                ; preds = %84
  %91 = load i8* %x.i3.i29, align 1, !tbaa !86
  %92 = sext i8 %91 to i32
  call void @llvm.lifetime.end(i64 1, i8* %x.i3.i29) #3
  switch i32 %92, label %121 [
    i32 0, label %93
    i32 1, label %95
    i32 3, label %104
    i32 4, label %112
  ]

; <label>:93                                      ; preds = %LoadChar.exit.i33
  %94 = getelementptr inbounds %struct.lua_TValue.109* %85, i64 %indvars.iv55, i32 1
  store i32 0, i32* %94, align 4, !tbaa !15
  br label %121

; <label>:95                                      ; preds = %LoadChar.exit.i33
  call void @llvm.lifetime.start(i64 1, i8* %x.i5.i) #3
  %96 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %97 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %96, i8* %x.i5.i, i64 1) #3
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %LoadChar.exit7.i, label %99

; <label>:99                                      ; preds = %95
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit7.i:                                 ; preds = %95
  %100 = load i8* %x.i5.i, align 1, !tbaa !86
  %101 = sext i8 %100 to i32
  call void @llvm.lifetime.end(i64 1, i8* %x.i5.i) #3
  %102 = bitcast %struct.lua_TValue.109* %86 to i32*
  store i32 %101, i32* %102, align 4, !tbaa !1
  %103 = getelementptr inbounds %struct.lua_TValue.109* %85, i64 %indvars.iv55, i32 1
  store i32 1, i32* %103, align 4, !tbaa !15
  br label %121

; <label>:104                                     ; preds = %LoadChar.exit.i33
  call void @llvm.lifetime.start(i64 8, i8* %82) #3
  %105 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %106 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %105, i8* %82, i64 8) #3
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %LoadNumber.exit.i, label %108

; <label>:108                                     ; preds = %104
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadNumber.exit.i:                                ; preds = %104
  %109 = load double* %x.i8.i, align 8, !tbaa !30
  call void @llvm.lifetime.end(i64 8, i8* %82) #3
  %110 = bitcast %struct.lua_TValue.109* %86 to double*
  store double %109, double* %110, align 8, !tbaa !30
  %111 = getelementptr inbounds %struct.lua_TValue.109* %85, i64 %indvars.iv55, i32 1
  store i32 3, i32* %111, align 4, !tbaa !15
  br label %121

; <label>:112                                     ; preds = %LoadChar.exit.i33
  %113 = call fastcc %union.TString.115* @LoadString(%struct.LoadState* %S) #3
  %114 = bitcast %union.TString.115* %113 to %union.GCObject.127*
  %115 = getelementptr inbounds %struct.lua_TValue.109* %86, i64 0, i32 0, i32 0
  store %union.GCObject.127* %114, %union.GCObject.127** %115, align 8, !tbaa !25
  %116 = getelementptr inbounds %union.TString.115* %113, i64 0, i32 0, i32 1
  %117 = load i8* %116, align 1, !tbaa !38
  %118 = zext i8 %117 to i32
  %119 = or i32 %118, 64
  %120 = getelementptr inbounds %struct.lua_TValue.109* %85, i64 %indvars.iv55, i32 1
  store i32 %119, i32* %120, align 4, !tbaa !15
  br label %121

; <label>:121                                     ; preds = %112, %LoadNumber.exit.i, %LoadChar.exit7.i, %93, %LoadChar.exit.i33
  %indvars.iv.next56 = add nuw nsw i64 %indvars.iv55, 1
  %122 = trunc i64 %indvars.iv.next56 to i32
  %123 = icmp slt i32 %122, %67
  br i1 %123, label %._crit_edge62, label %._crit_edge

._crit_edge62:                                    ; preds = %121
  %.pre63 = load %struct.lua_TValue.109** %79, align 8, !tbaa !109
  br label %84

._crit_edge:                                      ; preds = %121, %.preheader39, %74
  %124 = bitcast i32* %x.i10.i28 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %124) #3
  %125 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %126 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %125, i8* %124, i64 4) #3
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %LoadBlock.exit.i11.i34, label %128

; <label>:128                                     ; preds = %._crit_edge
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i11.i34:                           ; preds = %._crit_edge
  %129 = load i32* %x.i10.i28, align 4, !tbaa !1
  %130 = icmp slt i32 %129, 0
  br i1 %130, label %131, label %LoadInt.exit12.i35

; <label>:131                                     ; preds = %LoadBlock.exit.i11.i34
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit12.i35:                               ; preds = %LoadBlock.exit.i11.i34
  call void @llvm.lifetime.end(i64 4, i8* %124) #3
  %132 = add nsw i32 %129, 1
  %133 = icmp slt i32 %132, 0
  %134 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  br i1 %133, label %135, label %136

; <label>:135                                     ; preds = %LoadInt.exit12.i35
  call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %134) #13
  unreachable

; <label>:136                                     ; preds = %LoadInt.exit12.i35
  %137 = sext i32 %129 to i64
  %138 = shl nsw i64 %137, 3
  %139 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %134, i8* null, i64 0, i64 %138) #3
  %140 = bitcast i8* %139 to %struct.Proto.132**
  %141 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 5
  store %struct.Proto.132** %140, %struct.Proto.132*** %141, align 8, !tbaa !174
  %142 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 15
  store i32 %129, i32* %142, align 4, !tbaa !173
  %143 = icmp sgt i32 %129, 0
  br i1 %143, label %.lr.ph38, label %LoadConstants.exit

.preheader:                                       ; preds = %.lr.ph38
  br i1 %143, label %.lr.ph, label %LoadConstants.exit

.lr.ph38:                                         ; preds = %._crit_edge61, %136
  %144 = phi %struct.Proto.132** [ %.pre, %._crit_edge61 ], [ %140, %136 ]
  %indvars.iv51 = phi i64 [ %indvars.iv.next52, %._crit_edge61 ], [ 0, %136 ]
  %145 = getelementptr inbounds %struct.Proto.132** %144, i64 %indvars.iv51
  store %struct.Proto.132* null, %struct.Proto.132** %145, align 8, !tbaa !25
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1
  %lftr.wideiv53 = trunc i64 %indvars.iv.next52 to i32
  %exitcond54 = icmp eq i32 %lftr.wideiv53, %129
  br i1 %exitcond54, label %.preheader, label %._crit_edge61

._crit_edge61:                                    ; preds = %.lr.ph38
  %.pre = load %struct.Proto.132*** %141, align 8, !tbaa !174
  br label %.lr.ph38

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.preheader ]
  %146 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  %147 = call %struct.Proto.132* @luaF_newproto(%struct.lua_State.126* %146) #3
  %148 = load %struct.Proto.132*** %141, align 8, !tbaa !174
  %149 = getelementptr inbounds %struct.Proto.132** %148, i64 %indvars.iv
  store %struct.Proto.132* %147, %struct.Proto.132** %149, align 8, !tbaa !25
  %150 = load %struct.Proto.132*** %141, align 8, !tbaa !174
  %151 = getelementptr inbounds %struct.Proto.132** %150, i64 %indvars.iv
  %152 = load %struct.Proto.132** %151, align 8, !tbaa !25
  call fastcc void @LoadFunction(%struct.LoadState* %S, %struct.Proto.132* %152) #3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv49 = trunc i64 %indvars.iv.next to i32
  %exitcond50 = icmp eq i32 %lftr.wideiv49, %129
  br i1 %exitcond50, label %LoadConstants.exit, label %.lr.ph

LoadConstants.exit:                               ; preds = %.lr.ph, %.preheader, %136
  %153 = bitcast i32* %x.i.i18 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %153) #3
  %154 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %155 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %154, i8* %153, i64 4) #3
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %LoadBlock.exit.i.i19, label %157

; <label>:157                                     ; preds = %LoadConstants.exit
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i.i19:                             ; preds = %LoadConstants.exit
  %158 = load i32* %x.i.i18, align 4, !tbaa !1
  %159 = icmp slt i32 %158, 0
  br i1 %159, label %160, label %LoadInt.exit.i20

; <label>:160                                     ; preds = %LoadBlock.exit.i.i19
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit.i20:                                 ; preds = %LoadBlock.exit.i.i19
  call void @llvm.lifetime.end(i64 4, i8* %153) #3
  %161 = add nsw i32 %158, 1
  %162 = icmp slt i32 %161, 0
  %163 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  br i1 %162, label %164, label %165

; <label>:164                                     ; preds = %LoadInt.exit.i20
  call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %163) #13
  unreachable

; <label>:165                                     ; preds = %LoadInt.exit.i20
  %166 = sext i32 %158 to i64
  %167 = shl nsw i64 %166, 4
  %168 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %163, i8* null, i64 0, i64 %167) #3
  %169 = bitcast i8* %168 to %struct.Upvaldesc.131*
  %170 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 8
  store %struct.Upvaldesc.131* %169, %struct.Upvaldesc.131** %170, align 8, !tbaa !76
  %171 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 11
  store i32 %158, i32* %171, align 4, !tbaa !73
  %172 = icmp sgt i32 %158, 0
  br i1 %172, label %.lr.ph9.i, label %LoadUpvalues.exit

.lr.ph9.i:                                        ; preds = %.lr.ph9.i, %165
  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %.lr.ph9.i ], [ 0, %165 ]
  %173 = getelementptr inbounds %struct.Upvaldesc.131* %169, i64 %indvars.iv10.i, i32 0
  store %union.TString.115* null, %union.TString.115** %173, align 8, !tbaa !77
  %indvars.iv.next11.i = add nuw nsw i64 %indvars.iv10.i, 1
  %lftr.wideiv47 = trunc i64 %indvars.iv.next11.i to i32
  %exitcond48 = icmp eq i32 %lftr.wideiv47, %158
  br i1 %exitcond48, label %.lr.ph.i25, label %.lr.ph9.i

.lr.ph.i25:                                       ; preds = %LoadChar.exit5.i, %.lr.ph9.i
  %indvars.iv.i24 = phi i64 [ %indvars.iv.next.i26, %LoadChar.exit5.i ], [ 0, %.lr.ph9.i ]
  call void @llvm.lifetime.start(i64 1, i8* %x.i1.i17) #3
  %174 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %175 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %174, i8* %x.i1.i17, i64 1) #3
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %LoadChar.exit.i, label %177

; <label>:177                                     ; preds = %.lr.ph.i25
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit.i:                                  ; preds = %.lr.ph.i25
  %178 = load i8* %x.i1.i17, align 1, !tbaa !86
  call void @llvm.lifetime.end(i64 1, i8* %x.i1.i17) #3
  %179 = load %struct.Upvaldesc.131** %170, align 8, !tbaa !76
  %180 = getelementptr inbounds %struct.Upvaldesc.131* %179, i64 %indvars.iv.i24, i32 1
  store i8 %178, i8* %180, align 1, !tbaa !175
  call void @llvm.lifetime.start(i64 1, i8* %x.i3.i) #3
  %181 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %182 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %181, i8* %x.i3.i, i64 1) #3
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %LoadChar.exit5.i, label %184

; <label>:184                                     ; preds = %LoadChar.exit.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadChar.exit5.i:                                 ; preds = %LoadChar.exit.i
  %185 = load i8* %x.i3.i, align 1, !tbaa !86
  call void @llvm.lifetime.end(i64 1, i8* %x.i3.i) #3
  %186 = load %struct.Upvaldesc.131** %170, align 8, !tbaa !76
  %187 = getelementptr inbounds %struct.Upvaldesc.131* %186, i64 %indvars.iv.i24, i32 2
  store i8 %185, i8* %187, align 1, !tbaa !176
  %indvars.iv.next.i26 = add nuw nsw i64 %indvars.iv.i24, 1
  %188 = trunc i64 %indvars.iv.next.i26 to i32
  %189 = icmp slt i32 %188, %158
  br i1 %189, label %.lr.ph.i25, label %LoadUpvalues.exit

LoadUpvalues.exit:                                ; preds = %LoadChar.exit5.i, %165
  %190 = call fastcc %union.TString.115* @LoadString(%struct.LoadState* %S) #3
  %191 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 10
  store %union.TString.115* %190, %union.TString.115** %191, align 8, !tbaa !122
  %192 = bitcast i32* %x.i.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %192) #3
  %193 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %194 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %193, i8* %192, i64 4) #3
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %LoadBlock.exit.i.i, label %196

; <label>:196                                     ; preds = %LoadUpvalues.exit
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i.i:                               ; preds = %LoadUpvalues.exit
  %197 = load i32* %x.i.i, align 4, !tbaa !1
  %198 = icmp slt i32 %197, 0
  br i1 %198, label %199, label %LoadInt.exit.i

; <label>:199                                     ; preds = %LoadBlock.exit.i.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit.i:                                   ; preds = %LoadBlock.exit.i.i
  call void @llvm.lifetime.end(i64 4, i8* %192) #3
  %200 = add nsw i32 %197, 1
  %201 = icmp slt i32 %200, 0
  %202 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  br i1 %201, label %203, label %204

; <label>:203                                     ; preds = %LoadInt.exit.i
  call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %202) #13
  unreachable

; <label>:204                                     ; preds = %LoadInt.exit.i
  %205 = sext i32 %197 to i64
  %206 = shl nsw i64 %205, 2
  %207 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %202, i8* null, i64 0, i64 %206) #3
  %208 = bitcast i8* %207 to i32*
  %209 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 6
  store i32* %208, i32** %209, align 8, !tbaa !105
  %210 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 14
  store i32 %197, i32* %210, align 4, !tbaa !107
  %211 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %212 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %211, i8* %207, i64 %206) #3
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %LoadBlock.exit.i, label %214

; <label>:214                                     ; preds = %204
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i:                                 ; preds = %204
  %215 = bitcast i32* %x.i1.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %215) #3
  %216 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %217 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %216, i8* %215, i64 4) #3
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %LoadBlock.exit.i2.i, label %219

; <label>:219                                     ; preds = %LoadBlock.exit.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i2.i:                              ; preds = %LoadBlock.exit.i
  %220 = load i32* %x.i1.i, align 4, !tbaa !1
  %221 = icmp slt i32 %220, 0
  br i1 %221, label %222, label %LoadInt.exit3.i

; <label>:222                                     ; preds = %LoadBlock.exit.i2.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit3.i:                                  ; preds = %LoadBlock.exit.i2.i
  call void @llvm.lifetime.end(i64 4, i8* %215) #3
  %223 = add nsw i32 %220, 1
  %224 = icmp slt i32 %223, 0
  %225 = load %struct.lua_State.126** %48, align 8, !tbaa !294
  br i1 %224, label %226, label %227

; <label>:226                                     ; preds = %LoadInt.exit3.i
  call void bitcast (void (%struct.lua_State*)* @luaM_toobig to void (%struct.lua_State.126*)*)(%struct.lua_State.126* %225) #13
  unreachable

; <label>:227                                     ; preds = %LoadInt.exit3.i
  %228 = sext i32 %220 to i64
  %229 = shl nsw i64 %228, 4
  %230 = call i8* bitcast (i8* (%struct.lua_State*, i8*, i64, i64)* @luaM_realloc_ to i8* (%struct.lua_State.126*, i8*, i64, i64)*)(%struct.lua_State.126* %225, i8* null, i64 0, i64 %229) #3
  %231 = bitcast i8* %230 to %struct.LocVar.130*
  %232 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 7
  store %struct.LocVar.130* %231, %struct.LocVar.130** %232, align 8, !tbaa !178
  %233 = getelementptr inbounds %struct.Proto.132* %f, i64 0, i32 16
  store i32 %220, i32* %233, align 4, !tbaa !177
  %234 = icmp sgt i32 %220, 0
  br i1 %234, label %.lr.ph18.i, label %._crit_edge.i

.lr.ph15.i:                                       ; preds = %.lr.ph18.i
  %235 = bitcast i32* %x.i4.i to i8*
  %236 = bitcast i32* %x.i7.i to i8*
  br label %238

.lr.ph18.i:                                       ; preds = %.lr.ph18.i, %227
  %indvars.iv21.i = phi i64 [ %indvars.iv.next22.i, %.lr.ph18.i ], [ 0, %227 ]
  %237 = getelementptr inbounds %struct.LocVar.130* %231, i64 %indvars.iv21.i, i32 0
  store %union.TString.115* null, %union.TString.115** %237, align 8, !tbaa !179
  %indvars.iv.next22.i = add nuw nsw i64 %indvars.iv21.i, 1
  %lftr.wideiv45 = trunc i64 %indvars.iv.next22.i to i32
  %exitcond46 = icmp eq i32 %lftr.wideiv45, %220
  br i1 %exitcond46, label %.lr.ph15.i, label %.lr.ph18.i

; <label>:238                                     ; preds = %LoadInt.exit9.i, %.lr.ph15.i
  %indvars.iv19.i = phi i64 [ 0, %.lr.ph15.i ], [ %indvars.iv.next20.i, %LoadInt.exit9.i ]
  %239 = call fastcc %union.TString.115* @LoadString(%struct.LoadState* %S) #3
  %240 = load %struct.LocVar.130** %232, align 8, !tbaa !178
  %241 = getelementptr inbounds %struct.LocVar.130* %240, i64 %indvars.iv19.i, i32 0
  store %union.TString.115* %239, %union.TString.115** %241, align 8, !tbaa !179
  call void @llvm.lifetime.start(i64 4, i8* %235) #3
  %242 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %243 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %242, i8* %235, i64 4) #3
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %LoadBlock.exit.i5.i, label %245

; <label>:245                                     ; preds = %238
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i5.i:                              ; preds = %238
  %246 = load i32* %x.i4.i, align 4, !tbaa !1
  %247 = icmp slt i32 %246, 0
  br i1 %247, label %248, label %LoadInt.exit6.i

; <label>:248                                     ; preds = %LoadBlock.exit.i5.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit6.i:                                  ; preds = %LoadBlock.exit.i5.i
  call void @llvm.lifetime.end(i64 4, i8* %235) #3
  %249 = load %struct.LocVar.130** %232, align 8, !tbaa !178
  %250 = getelementptr inbounds %struct.LocVar.130* %249, i64 %indvars.iv19.i, i32 1
  store i32 %246, i32* %250, align 4, !tbaa !181
  call void @llvm.lifetime.start(i64 4, i8* %236) #3
  %251 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %252 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %251, i8* %236, i64 4) #3
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %LoadBlock.exit.i8.i, label %254

; <label>:254                                     ; preds = %LoadInt.exit6.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i8.i:                              ; preds = %LoadInt.exit6.i
  %255 = load i32* %x.i7.i, align 4, !tbaa !1
  %256 = icmp slt i32 %255, 0
  br i1 %256, label %257, label %LoadInt.exit9.i

; <label>:257                                     ; preds = %LoadBlock.exit.i8.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit9.i:                                  ; preds = %LoadBlock.exit.i8.i
  call void @llvm.lifetime.end(i64 4, i8* %236) #3
  %258 = load %struct.LocVar.130** %232, align 8, !tbaa !178
  %259 = getelementptr inbounds %struct.LocVar.130* %258, i64 %indvars.iv19.i, i32 2
  store i32 %255, i32* %259, align 4, !tbaa !182
  %indvars.iv.next20.i = add nuw nsw i64 %indvars.iv19.i, 1
  %260 = trunc i64 %indvars.iv.next20.i to i32
  %261 = icmp slt i32 %260, %220
  br i1 %261, label %238, label %._crit_edge.i

._crit_edge.i:                                    ; preds = %LoadInt.exit9.i, %227
  %262 = bitcast i32* %x.i10.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %262) #3
  %263 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %264 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %263, i8* %262, i64 4) #3
  %265 = icmp eq i64 %264, 0
  br i1 %265, label %LoadBlock.exit.i11.i, label %266

; <label>:266                                     ; preds = %._crit_edge.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit.i11.i:                             ; preds = %._crit_edge.i
  %267 = load i32* %x.i10.i, align 4, !tbaa !1
  %268 = icmp slt i32 %267, 0
  br i1 %268, label %270, label %LoadInt.exit12.preheader.i

LoadInt.exit12.preheader.i:                       ; preds = %LoadBlock.exit.i11.i
  %269 = icmp sgt i32 %267, 0
  br i1 %269, label %LoadInt.exit12.i, label %LoadDebug.exit

; <label>:270                                     ; preds = %LoadBlock.exit.i11.i
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str7295, i64 0, i64 0)) #13
  unreachable

LoadInt.exit12.i:                                 ; preds = %LoadInt.exit12.i, %LoadInt.exit12.preheader.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %LoadInt.exit12.i ], [ 0, %LoadInt.exit12.preheader.i ]
  %271 = call fastcc %union.TString.115* @LoadString(%struct.LoadState* %S) #3
  %272 = load %struct.Upvaldesc.131** %170, align 8, !tbaa !76
  %273 = getelementptr inbounds %struct.Upvaldesc.131* %272, i64 %indvars.iv.i, i32 0
  store %union.TString.115* %271, %union.TString.115** %273, align 8, !tbaa !77
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %267
  br i1 %exitcond, label %LoadDebug.exit, label %LoadInt.exit12.i

LoadDebug.exit:                                   ; preds = %LoadInt.exit12.i, %LoadInt.exit12.preheader.i
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %union.TString.115* @LoadString(%struct.LoadState* nocapture readonly %S) #0 {
  %size = alloca i64, align 8
  %1 = bitcast i64* %size to i8*
  %2 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 1
  %3 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %4 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %3, i8* %1, i64 8) #3
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %LoadBlock.exit, label %6

; <label>:6                                       ; preds = %0
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit:                                   ; preds = %0
  %7 = load i64* %size, align 8, !tbaa !32
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %24, label %9

; <label>:9                                       ; preds = %LoadBlock.exit
  %10 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 0
  %11 = load %struct.lua_State.126** %10, align 8, !tbaa !294
  %12 = getelementptr inbounds %struct.LoadState* %S, i64 0, i32 2
  %13 = load %struct.Mbuffer** %12, align 8, !tbaa !296
  %14 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.126*, %struct.Mbuffer*, i64)*)(%struct.lua_State.126* %11, %struct.Mbuffer* %13, i64 %7) #3
  %15 = load i64* %size, align 8, !tbaa !32
  %16 = load %struct.Zio.375** %2, align 8, !tbaa !295
  %17 = call i64 bitcast (i64 (%struct.Zio*, i8*, i64)* @luaZ_read to i64 (%struct.Zio.375*, i8*, i64)*)(%struct.Zio.375* %16, i8* %14, i64 %15) #3
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %LoadBlock.exit1, label %19

; <label>:19                                      ; preds = %9
  call fastcc void @error(%struct.LoadState* %S, i8* getelementptr inbounds ([10 x i8]* @.str5293, i64 0, i64 0)) #13
  unreachable

LoadBlock.exit1:                                  ; preds = %9
  %20 = load %struct.lua_State.126** %10, align 8, !tbaa !294
  %21 = load i64* %size, align 8, !tbaa !32
  %22 = add i64 %21, -1
  %23 = call %union.TString.115* bitcast (%union.TString.219* (%struct.lua_State.228*, i8*, i64)* @luaS_newlstr to %union.TString.115* (%struct.lua_State.126*, i8*, i64)*)(%struct.lua_State.126* %20, i8* %14, i64 %22) #3
  br label %24

; <label>:24                                      ; preds = %LoadBlock.exit1, %LoadBlock.exit
  %.0 = phi %union.TString.115* [ %23, %LoadBlock.exit1 ], [ null, %LoadBlock.exit ]
  ret %union.TString.115* %.0
}

; Function Attrs: nounwind ssp uwtable
define %struct.lua_TValue.215* @luaV_tonumber(%struct.lua_TValue.215* readonly %obj, %struct.lua_TValue.215* %n) #0 {
  %num = alloca double, align 8
  %1 = getelementptr inbounds %struct.lua_TValue.215* %obj, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %21, label %4

; <label>:4                                       ; preds = %0
  %5 = and i32 %2, 15
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %21

; <label>:7                                       ; preds = %4
  %8 = getelementptr inbounds %struct.lua_TValue.215* %obj, i64 0, i32 0, i32 0
  %9 = load %union.GCObject.229** %8, align 8, !tbaa !25
  %10 = getelementptr inbounds %union.GCObject.229* %9, i64 0, i32 0, i32 5
  %11 = bitcast %struct.global_State.223** %10 to i8*
  %12 = getelementptr inbounds %union.GCObject.229* %9, i64 0, i32 0, i32 4
  %13 = bitcast %struct.lua_TValue.215** %12 to i64*
  %14 = load i64* %13, align 8, !tbaa !34
  %15 = call i32 @luaO_str2d(i8* %11, i64 %14, double* %num) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

; <label>:17                                      ; preds = %7
  %18 = load double* %num, align 8, !tbaa !30
  %19 = bitcast %struct.lua_TValue.215* %n to double*
  store double %18, double* %19, align 8, !tbaa !30
  %20 = getelementptr inbounds %struct.lua_TValue.215* %n, i64 0, i32 1
  store i32 3, i32* %20, align 4, !tbaa !15
  br label %21

; <label>:21                                      ; preds = %17, %7, %4, %0
  %.0 = phi %struct.lua_TValue.215* [ %n, %17 ], [ %obj, %0 ], [ null, %7 ], [ null, %4 ]
  ret %struct.lua_TValue.215* %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaV_tostring(%struct.lua_State.228* %L, %struct.lua_TValue.215* nocapture %obj) #0 {
  %s = alloca [32 x i8], align 16
  %1 = getelementptr inbounds %struct.lua_TValue.215* %obj, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %17

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.lua_TValue.215* %obj to double*
  %6 = load double* %5, align 8, !tbaa !30
  %7 = getelementptr inbounds [32 x i8]* %s, i64 0, i64 0
  %8 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %7, i32 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str303, i64 0, i64 0), double %6) #3
  %9 = sext i32 %8 to i64
  %10 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %7, i64 %9) #3
  %11 = bitcast %union.TString.219* %10 to %union.GCObject.229*
  %12 = getelementptr inbounds %struct.lua_TValue.215* %obj, i64 0, i32 0, i32 0
  store %union.GCObject.229* %11, %union.GCObject.229** %12, align 8, !tbaa !25
  %13 = getelementptr inbounds %union.TString.219* %10, i64 0, i32 0, i32 1
  %14 = load i8* %13, align 1, !tbaa !38
  %15 = zext i8 %14 to i32
  %16 = or i32 %15, 64
  store i32 %16, i32* %1, align 4, !tbaa !15
  br label %17

; <label>:17                                      ; preds = %4, %0
  %.0 = phi i32 [ 1, %4 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_gettable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %t, %struct.lua_TValue.215* %key, %struct.lua_TValue.215* %val) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %.phi.trans.insert = getelementptr inbounds %struct.lua_TValue.215* %t, i64 0, i32 1
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !15
  br label %4

; <label>:2                                       ; preds = %43
  %3 = icmp slt i32 %47, 100
  br i1 %3, label %4, label %98

; <label>:4                                       ; preds = %2, %0
  %5 = phi i32 [ %.pre, %0 ], [ %44, %2 ]
  %.09 = phi %struct.lua_TValue.215* [ %t, %0 ], [ %tm.0, %2 ]
  %loop.08 = phi i32 [ 0, %0 ], [ %47, %2 ]
  %6 = getelementptr inbounds %struct.lua_TValue.215* %.09, i64 0, i32 1
  %7 = icmp eq i32 %5, 69
  br i1 %7, label %8, label %37

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.lua_TValue.215* %.09, i64 0, i32 0, i32 0
  %10 = load %union.GCObject.229** %9, align 8, !tbaa !25
  %11 = bitcast %union.GCObject.229* %10 to %struct.Table.222*
  %12 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, %struct.lua_TValue*)* @luaH_get to %struct.lua_TValue.215* (%struct.Table.222*, %struct.lua_TValue.215*)*)(%struct.Table.222* %11, %struct.lua_TValue.215* %key) #3
  %13 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 1
  %14 = load i32* %13, align 4, !tbaa !15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %.thread

; <label>:16                                      ; preds = %8
  %17 = getelementptr inbounds %union.GCObject.229* %10, i64 0, i32 0, i32 4
  %18 = load %struct.lua_TValue.215** %17, align 8
  %19 = bitcast %struct.lua_TValue.215* %18 to %struct.Table.222*
  %20 = icmp eq %struct.lua_TValue.215* %18, null
  br i1 %20, label %.thread, label %21

; <label>:21                                      ; preds = %16
  %22 = getelementptr inbounds %struct.Table.222* %19, i64 0, i32 3
  %23 = load i8* %22, align 1, !tbaa !41
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %.thread

; <label>:26                                      ; preds = %21
  %27 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.global_State.223* %27, i64 0, i32 33, i64 0
  %29 = load %union.TString.219** %28, align 8, !tbaa !25
  %30 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.215* (%struct.Table.222*, i32, %union.TString.219*)*)(%struct.Table.222* %19, i32 0, %union.TString.219* %29) #3
  %31 = icmp eq %struct.lua_TValue.215* %30, null
  br i1 %31, label %.thread, label %._crit_edge

._crit_edge:                                      ; preds = %26
  %.phi.trans.insert20 = getelementptr inbounds %struct.lua_TValue.215* %30, i64 0, i32 1
  %.pre21 = load i32* %.phi.trans.insert20, align 4, !tbaa !15
  br label %43

.thread:                                          ; preds = %26, %21, %16, %8
  %32 = bitcast %struct.lua_TValue.215* %12 to i64*
  %33 = load i64* %32, align 8
  %34 = getelementptr inbounds %struct.lua_TValue.215* %val, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %33 to %union.GCObject.229*
  store %union.GCObject.229* %.c, %union.GCObject.229** %34, align 8
  %35 = load i32* %13, align 4, !tbaa !15
  %36 = getelementptr inbounds %struct.lua_TValue.215* %val, i64 0, i32 1
  store i32 %35, i32* %36, align 4, !tbaa !15
  br label %99

; <label>:37                                      ; preds = %4
  %38 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %.09, i32 0) #3
  %39 = getelementptr inbounds %struct.lua_TValue.215* %38, i64 0, i32 1
  %40 = load i32* %39, align 4, !tbaa !15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %37
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i8*)* @luaG_typeerror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i8*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %.09, i8* getelementptr inbounds ([6 x i8]* @.str1304, i64 0, i64 0)) #13
  unreachable

; <label>:43                                      ; preds = %37, %._crit_edge
  %44 = phi i32 [ %.pre21, %._crit_edge ], [ %40, %37 ]
  %tm.0 = phi %struct.lua_TValue.215* [ %30, %._crit_edge ], [ %38, %37 ]
  %45 = and i32 %44, 15
  %46 = icmp eq i32 %45, 6
  %47 = add nsw i32 %loop.08, 1
  br i1 %46, label %48, label %2

; <label>:48                                      ; preds = %43
  %49 = getelementptr inbounds %struct.lua_TValue.215* %tm.0, i64 0, i32 1
  %50 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %51 = load %struct.lua_TValue.215** %50, align 8, !tbaa !13
  %52 = ptrtoint %struct.lua_TValue.215* %val to i64
  %53 = ptrtoint %struct.lua_TValue.215* %51 to i64
  %54 = sub i64 %52, %53
  %55 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %56 = load %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %57 = getelementptr inbounds %struct.lua_TValue.215* %56, i64 1
  store %struct.lua_TValue.215* %57, %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %58 = bitcast %struct.lua_TValue.215* %tm.0 to i64*
  %59 = load i64* %58, align 8
  %60 = getelementptr inbounds %struct.lua_TValue.215* %56, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %59 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %60, align 8
  %61 = load i32* %49, align 4, !tbaa !15
  %62 = getelementptr inbounds %struct.lua_TValue.215* %56, i64 0, i32 1
  store i32 %61, i32* %62, align 4, !tbaa !15
  %63 = load %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %64 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 1
  store %struct.lua_TValue.215* %64, %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %65 = bitcast %struct.lua_TValue.215* %.09 to i64*
  %66 = load i64* %65, align 8
  %67 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %66 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %67, align 8
  %68 = load i32* %6, align 4, !tbaa !15
  %69 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 0, i32 1
  store i32 %68, i32* %69, align 4, !tbaa !15
  %70 = load %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %71 = getelementptr inbounds %struct.lua_TValue.215* %70, i64 1
  store %struct.lua_TValue.215* %71, %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %72 = bitcast %struct.lua_TValue.215* %key to i64*
  %73 = load i64* %72, align 8
  %74 = getelementptr inbounds %struct.lua_TValue.215* %70, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %73 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %74, align 8
  %75 = getelementptr inbounds %struct.lua_TValue.215* %key, i64 0, i32 1
  %76 = load i32* %75, align 4, !tbaa !15
  %77 = getelementptr inbounds %struct.lua_TValue.215* %70, i64 0, i32 1
  store i32 %76, i32* %77, align 4, !tbaa !15
  %78 = load %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %79 = getelementptr inbounds %struct.lua_TValue.215* %78, i64 -3
  %80 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %81 = load %struct.CallInfo.225** %80, align 8, !tbaa !5
  %82 = getelementptr inbounds %struct.CallInfo.225* %81, i64 0, i32 5
  %83 = load i8* %82, align 1, !tbaa !46
  %84 = zext i8 %83 to i32
  %85 = and i32 %84, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %79, i32 1, i32 %85) #3
  %86 = load %struct.lua_TValue.215** %50, align 8, !tbaa !13
  %87 = bitcast %struct.lua_TValue.215* %86 to i8*
  %88 = getelementptr inbounds i8* %87, i64 %54
  %89 = load %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %90 = getelementptr inbounds %struct.lua_TValue.215* %89, i64 -1
  store %struct.lua_TValue.215* %90, %struct.lua_TValue.215** %55, align 8, !tbaa !12
  %91 = bitcast %struct.lua_TValue.215* %90 to i64*
  %92 = bitcast i8* %88 to i64*
  %93 = load i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = getelementptr inbounds %struct.lua_TValue.215* %89, i64 -1, i32 1
  %95 = load i32* %94, align 4, !tbaa !15
  %.sum.i = add i64 %54, 8
  %96 = getelementptr inbounds i8* %87, i64 %.sum.i
  %97 = bitcast i8* %96 to i32*
  store i32 %95, i32* %97, align 4, !tbaa !15
  br label %99

; <label>:98                                      ; preds = %2
  tail call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([17 x i8]* @.str2305, i64 0, i64 0)) #13
  unreachable

; <label>:99                                      ; preds = %48, %.thread
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_settable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %t, %struct.lua_TValue.215* %key, %struct.lua_TValue.215* %val) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %.phi.trans.insert = getelementptr inbounds %struct.lua_TValue.215* %t, i64 0, i32 1
  %.pre = load i32* %.phi.trans.insert, align 4, !tbaa !15
  br label %4

; <label>:2                                       ; preds = %64
  %3 = icmp slt i32 %68, 100
  br i1 %3, label %4, label %110

; <label>:4                                       ; preds = %2, %0
  %5 = phi i32 [ %.pre, %0 ], [ %65, %2 ]
  %.015 = phi %struct.lua_TValue.215* [ %t, %0 ], [ %tm.0, %2 ]
  %loop.014 = phi i32 [ 0, %0 ], [ %68, %2 ]
  %6 = getelementptr inbounds %struct.lua_TValue.215* %.015, i64 0, i32 1
  %7 = icmp eq i32 %5, 69
  br i1 %7, label %8, label %58

; <label>:8                                       ; preds = %4
  %9 = getelementptr inbounds %struct.lua_TValue.215* %.015, i64 0, i32 0, i32 0
  %10 = load %union.GCObject.229** %9, align 8, !tbaa !25
  %11 = bitcast %union.GCObject.229* %10 to %struct.Table.222*
  %12 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, %struct.lua_TValue*)* @luaH_get to %struct.lua_TValue.215* (%struct.Table.222*, %struct.lua_TValue.215*)*)(%struct.Table.222* %11, %struct.lua_TValue.215* %key) #3
  %13 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 1
  %14 = load i32* %13, align 4, !tbaa !15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %.loopexit

; <label>:16                                      ; preds = %8
  %17 = getelementptr inbounds %union.GCObject.229* %10, i64 0, i32 0, i32 4
  %18 = load %struct.lua_TValue.215** %17, align 8
  %19 = bitcast %struct.lua_TValue.215* %18 to %struct.Table.222*
  %20 = icmp eq %struct.lua_TValue.215* %18, null
  br i1 %20, label %.thread, label %21

; <label>:21                                      ; preds = %16
  %22 = getelementptr inbounds %struct.Table.222* %19, i64 0, i32 3
  %23 = load i8* %22, align 1, !tbaa !41
  %24 = and i8 %23, 2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %.thread

; <label>:26                                      ; preds = %21
  %27 = load %struct.global_State.223** %1, align 8, !tbaa !17
  %28 = getelementptr inbounds %struct.global_State.223* %27, i64 0, i32 33, i64 1
  %29 = load %union.TString.219** %28, align 8, !tbaa !25
  %30 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.215* (%struct.Table.222*, i32, %union.TString.219*)*)(%struct.Table.222* %19, i32 1, %union.TString.219* %29) #3
  %31 = icmp eq %struct.lua_TValue.215* %30, null
  br i1 %31, label %.thread, label %._crit_edge

._crit_edge:                                      ; preds = %26
  %.phi.trans.insert32 = getelementptr inbounds %struct.lua_TValue.215* %30, i64 0, i32 1
  %.pre33 = load i32* %.phi.trans.insert32, align 4, !tbaa !15
  br label %64

.thread:                                          ; preds = %26, %21, %16
  %32 = icmp eq %struct.lua_TValue.215* %12, bitcast ({ %union.Value.230, i32, [4 x i8] }* @luaO_nilobject_ to %struct.lua_TValue.215*)
  br i1 %32, label %33, label %.loopexit

; <label>:33                                      ; preds = %.thread
  %34 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.Table*, %struct.lua_TValue*)* @luaH_newkey to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.Table.222*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.Table.222* %11, %struct.lua_TValue.215* %key) #3
  br label %.loopexit

.loopexit:                                        ; preds = %33, %.thread, %8
  %oldval.0 = phi %struct.lua_TValue.215* [ %12, %.thread ], [ %34, %33 ], [ %12, %8 ]
  %35 = bitcast %struct.lua_TValue.215* %val to i64*
  %36 = load i64* %35, align 8
  %37 = getelementptr inbounds %struct.lua_TValue.215* %oldval.0, i64 0, i32 0, i32 0
  %.c = inttoptr i64 %36 to %union.GCObject.229*
  store %union.GCObject.229* %.c, %union.GCObject.229** %37, align 8
  %38 = getelementptr inbounds %struct.lua_TValue.215* %val, i64 0, i32 1
  %39 = load i32* %38, align 4, !tbaa !15
  %40 = getelementptr inbounds %struct.lua_TValue.215* %oldval.0, i64 0, i32 1
  store i32 %39, i32* %40, align 4, !tbaa !15
  %41 = getelementptr inbounds %union.GCObject.229* %10, i64 0, i32 0, i32 3
  store i8 0, i8* %41, align 1, !tbaa !41
  %42 = load i32* %38, align 4, !tbaa !15
  %43 = and i32 %42, 64
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %111, label %45

; <label>:45                                      ; preds = %.loopexit
  %46 = getelementptr inbounds %struct.lua_TValue.215* %val, i64 0, i32 0, i32 0
  %47 = load %union.GCObject.229** %46, align 8, !tbaa !25
  %48 = getelementptr inbounds %union.GCObject.229* %47, i64 0, i32 0, i32 2
  %49 = load i8* %48, align 1, !tbaa !28
  %50 = and i8 %49, 3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %111, label %52

; <label>:52                                      ; preds = %45
  %53 = getelementptr inbounds %union.GCObject.229* %10, i64 0, i32 0, i32 2
  %54 = load i8* %53, align 1, !tbaa !28
  %55 = and i8 %54, 4
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %111, label %57

; <label>:57                                      ; preds = %52
  tail call void bitcast (void (%struct.lua_State*, %union.GCObject*)* @luaC_barrierback_ to void (%struct.lua_State.228*, %union.GCObject.229*)*)(%struct.lua_State.228* %L, %union.GCObject.229* %10) #3
  br label %111

; <label>:58                                      ; preds = %4
  %59 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %.015, i32 1) #3
  %60 = getelementptr inbounds %struct.lua_TValue.215* %59, i64 0, i32 1
  %61 = load i32* %60, align 4, !tbaa !15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

; <label>:63                                      ; preds = %58
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i8*)* @luaG_typeerror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i8*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %.015, i8* getelementptr inbounds ([6 x i8]* @.str1304, i64 0, i64 0)) #13
  unreachable

; <label>:64                                      ; preds = %58, %._crit_edge
  %65 = phi i32 [ %.pre33, %._crit_edge ], [ %61, %58 ]
  %tm.0 = phi %struct.lua_TValue.215* [ %30, %._crit_edge ], [ %59, %58 ]
  %66 = and i32 %65, 15
  %67 = icmp eq i32 %66, 6
  %68 = add nsw i32 %loop.014, 1
  br i1 %67, label %69, label %2

; <label>:69                                      ; preds = %64
  %70 = getelementptr inbounds %struct.lua_TValue.215* %tm.0, i64 0, i32 1
  %71 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %72 = load %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %73 = getelementptr inbounds %struct.lua_TValue.215* %72, i64 1
  store %struct.lua_TValue.215* %73, %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %74 = bitcast %struct.lua_TValue.215* %tm.0 to i64*
  %75 = load i64* %74, align 8
  %76 = getelementptr inbounds %struct.lua_TValue.215* %72, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %75 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %76, align 8
  %77 = load i32* %70, align 4, !tbaa !15
  %78 = getelementptr inbounds %struct.lua_TValue.215* %72, i64 0, i32 1
  store i32 %77, i32* %78, align 4, !tbaa !15
  %79 = load %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %80 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 1
  store %struct.lua_TValue.215* %80, %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %81 = bitcast %struct.lua_TValue.215* %.015 to i64*
  %82 = load i64* %81, align 8
  %83 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %82 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %83, align 8
  %84 = load i32* %6, align 4, !tbaa !15
  %85 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 0, i32 1
  store i32 %84, i32* %85, align 4, !tbaa !15
  %86 = load %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %87 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 1
  store %struct.lua_TValue.215* %87, %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %88 = bitcast %struct.lua_TValue.215* %key to i64*
  %89 = load i64* %88, align 8
  %90 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %89 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %90, align 8
  %91 = getelementptr inbounds %struct.lua_TValue.215* %key, i64 0, i32 1
  %92 = load i32* %91, align 4, !tbaa !15
  %93 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 0, i32 1
  store i32 %92, i32* %93, align 4, !tbaa !15
  %94 = load %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %95 = getelementptr inbounds %struct.lua_TValue.215* %94, i64 1
  store %struct.lua_TValue.215* %95, %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %96 = bitcast %struct.lua_TValue.215* %val to i64*
  %97 = load i64* %96, align 8
  %98 = getelementptr inbounds %struct.lua_TValue.215* %94, i64 0, i32 0, i32 0
  %.c11.i = inttoptr i64 %97 to %union.GCObject.229*
  store %union.GCObject.229* %.c11.i, %union.GCObject.229** %98, align 8
  %99 = getelementptr inbounds %struct.lua_TValue.215* %val, i64 0, i32 1
  %100 = load i32* %99, align 4, !tbaa !15
  %101 = getelementptr inbounds %struct.lua_TValue.215* %94, i64 0, i32 1
  store i32 %100, i32* %101, align 4, !tbaa !15
  %102 = load %struct.lua_TValue.215** %71, align 8, !tbaa !12
  %103 = getelementptr inbounds %struct.lua_TValue.215* %102, i64 -4
  %104 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %105 = load %struct.CallInfo.225** %104, align 8, !tbaa !5
  %106 = getelementptr inbounds %struct.CallInfo.225* %105, i64 0, i32 5
  %107 = load i8* %106, align 1, !tbaa !46
  %108 = zext i8 %107 to i32
  %109 = and i32 %108, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %103, i32 0, i32 %109) #3
  br label %111

; <label>:110                                     ; preds = %2
  tail call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([17 x i8]* @.str3306, i64 0, i64 0)) #13
  unreachable

; <label>:111                                     ; preds = %69, %57, %52, %45, %.loopexit
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaV_lessthan(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, %struct.lua_TValue.215* %r) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue.215* %l, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %15

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %6 = load i32* %5, align 4, !tbaa !15
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %.thread

; <label>:8                                       ; preds = %4
  %9 = bitcast %struct.lua_TValue.215* %l to double*
  %10 = load double* %9, align 8, !tbaa !30
  %11 = bitcast %struct.lua_TValue.215* %r to double*
  %12 = load double* %11, align 8, !tbaa !30
  %13 = fcmp olt double %10, %12
  %14 = zext i1 %13 to i32
  br label %125

; <label>:15                                      ; preds = %0
  %16 = and i32 %2, 15
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %18, label %.thread

; <label>:18                                      ; preds = %15
  %19 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %20 = load i32* %19, align 4, !tbaa !15
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %23, label %.thread

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_TValue.215* %l, i64 0, i32 0, i32 0
  %25 = load %union.GCObject.229** %24, align 8, !tbaa !25
  %26 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 0, i32 0
  %27 = load %union.GCObject.229** %26, align 8, !tbaa !25
  %28 = getelementptr inbounds %union.GCObject.229* %25, i64 0, i32 0, i32 5
  %29 = bitcast %struct.global_State.223** %28 to i8*
  %30 = getelementptr inbounds %union.GCObject.229* %27, i64 0, i32 0, i32 5
  %31 = bitcast %struct.global_State.223** %30 to i8*
  %32 = tail call i32 @strcoll(i8* %29, i8* %31) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %.lr.ph.i, label %l_strcmp.exit

.lr.ph.i:                                         ; preds = %23
  %34 = getelementptr inbounds %union.GCObject.229* %27, i64 0, i32 0, i32 4
  %35 = bitcast %struct.lua_TValue.215** %34 to i64*
  %36 = getelementptr inbounds %union.GCObject.229* %25, i64 0, i32 0, i32 4
  %37 = bitcast %struct.lua_TValue.215** %36 to i64*
  %38 = load i64* %35, align 8, !tbaa !34
  %39 = load i64* %37, align 8, !tbaa !34
  br label %40

; <label>:40                                      ; preds = %48, %.lr.ph.i
  %lr.04.i = phi i64 [ %38, %.lr.ph.i ], [ %53, %48 ]
  %r.03.i = phi i8* [ %31, %.lr.ph.i ], [ %52, %48 ]
  %ll.02.i = phi i64 [ %39, %.lr.ph.i ], [ %51, %48 ]
  %l.01.i = phi i8* [ %29, %.lr.ph.i ], [ %50, %48 ]
  %41 = tail call i64 @strlen(i8* %l.01.i) #3
  %42 = icmp eq i64 %41, %lr.04.i
  %43 = icmp eq i64 %41, %ll.02.i
  br i1 %42, label %44, label %47

; <label>:44                                      ; preds = %40
  %45 = zext i1 %43 to i32
  %46 = xor i32 %45, 1
  br label %l_strcmp.exit

; <label>:47                                      ; preds = %40
  br i1 %43, label %l_strcmp.exit, label %48

; <label>:48                                      ; preds = %47
  %49 = add i64 %41, 1
  %50 = getelementptr inbounds i8* %l.01.i, i64 %49
  %51 = sub i64 %ll.02.i, %49
  %52 = getelementptr inbounds i8* %r.03.i, i64 %49
  %53 = sub i64 %lr.04.i, %49
  %54 = tail call i32 @strcoll(i8* %50, i8* %52) #3
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %40, label %l_strcmp.exit

l_strcmp.exit:                                    ; preds = %48, %47, %44, %23
  %.0.i = phi i32 [ %46, %44 ], [ %32, %23 ], [ -1, %47 ], [ %54, %48 ]
  %.lobit = lshr i32 %.0.i, 31
  br label %125

.thread:                                          ; preds = %18, %15, %4
  %56 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %57 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %58 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, i32 13) #3
  %59 = getelementptr inbounds %struct.lua_TValue.215* %58, i64 0, i32 1
  %60 = load i32* %59, align 4, !tbaa !15
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

; <label>:62                                      ; preds = %.thread
  %63 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %r, i32 13) #3
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.lua_TValue.215* %63, i64 0, i32 1
  %.pre.i.i = load i32* %.phi.trans.insert.i.i, align 4, !tbaa !15
  %64 = icmp eq i32 %.pre.i.i, 0
  br i1 %64, label %call_orderTM.exit.thread, label %65

; <label>:65                                      ; preds = %62, %.thread
  %tm.01.i.i = phi %struct.lua_TValue.215* [ %63, %62 ], [ %58, %.thread ]
  %66 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %67 = load %struct.lua_TValue.215** %66, align 8, !tbaa !13
  %68 = ptrtoint %struct.lua_TValue.215* %57 to i64
  %69 = ptrtoint %struct.lua_TValue.215* %67 to i64
  %70 = sub i64 %68, %69
  %71 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %72 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 1
  store %struct.lua_TValue.215* %72, %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %73 = bitcast %struct.lua_TValue.215* %tm.01.i.i to i64*
  %74 = load i64* %73, align 8
  %75 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %74 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %75, align 8
  %76 = getelementptr inbounds %struct.lua_TValue.215* %tm.01.i.i, i64 0, i32 1
  %77 = load i32* %76, align 4, !tbaa !15
  %78 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 0, i32 1
  store i32 %77, i32* %78, align 4, !tbaa !15
  %79 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %80 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 1
  store %struct.lua_TValue.215* %80, %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %81 = bitcast %struct.lua_TValue.215* %l to i64*
  %82 = load i64* %81, align 8
  %83 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %82 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %83, align 8
  %84 = load i32* %1, align 4, !tbaa !15
  %85 = getelementptr inbounds %struct.lua_TValue.215* %79, i64 0, i32 1
  store i32 %84, i32* %85, align 4, !tbaa !15
  %86 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %87 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 1
  store %struct.lua_TValue.215* %87, %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %88 = bitcast %struct.lua_TValue.215* %r to i64*
  %89 = load i64* %88, align 8
  %90 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %89 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %90, align 8
  %91 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %92 = load i32* %91, align 4, !tbaa !15
  %93 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 0, i32 1
  store i32 %92, i32* %93, align 4, !tbaa !15
  %94 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %95 = getelementptr inbounds %struct.lua_TValue.215* %94, i64 -3
  %96 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %97 = load %struct.CallInfo.225** %96, align 8, !tbaa !5
  %98 = getelementptr inbounds %struct.CallInfo.225* %97, i64 0, i32 5
  %99 = load i8* %98, align 1, !tbaa !46
  %100 = zext i8 %99 to i32
  %101 = and i32 %100, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %95, i32 1, i32 %101) #3
  %102 = load %struct.lua_TValue.215** %66, align 8, !tbaa !13
  %103 = bitcast %struct.lua_TValue.215* %102 to i8*
  %104 = getelementptr inbounds i8* %103, i64 %70
  %105 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %106 = getelementptr inbounds %struct.lua_TValue.215* %105, i64 -1
  store %struct.lua_TValue.215* %106, %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %107 = bitcast %struct.lua_TValue.215* %106 to i64*
  %108 = bitcast i8* %104 to i64*
  %109 = load i64* %107, align 8
  store i64 %109, i64* %108, align 8
  %110 = getelementptr inbounds %struct.lua_TValue.215* %105, i64 -1, i32 1
  %111 = load i32* %110, align 4, !tbaa !15
  %.sum.i = add i64 %70, 8
  %112 = getelementptr inbounds i8* %103, i64 %.sum.i
  %113 = bitcast i8* %112 to i32*
  store i32 %111, i32* %113, align 4, !tbaa !15
  %114 = load %struct.lua_TValue.215** %56, align 8, !tbaa !12
  %115 = getelementptr inbounds %struct.lua_TValue.215* %114, i64 0, i32 1
  %116 = load i32* %115, align 4, !tbaa !15
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %call_orderTM.exit, label %118

; <label>:118                                     ; preds = %65
  %119 = icmp eq i32 %116, 1
  br i1 %119, label %120, label %call_orderTM.exit

; <label>:120                                     ; preds = %118
  %121 = bitcast %struct.lua_TValue.215* %114 to i32*
  %122 = load i32* %121, align 4, !tbaa !1
  %phitmp.i = icmp ne i32 %122, 0
  br label %call_orderTM.exit

call_orderTM.exit:                                ; preds = %120, %118, %65
  %123 = phi i1 [ false, %65 ], [ true, %118 ], [ %phitmp.i, %120 ]
  %124 = zext i1 %123 to i32
  br label %125

call_orderTM.exit.thread:                         ; preds = %62
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_ordererror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, %struct.lua_TValue.215* %r) #13
  unreachable

; <label>:125                                     ; preds = %call_orderTM.exit, %l_strcmp.exit, %8
  %.0 = phi i32 [ %14, %8 ], [ %.lobit, %l_strcmp.exit ], [ %124, %call_orderTM.exit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaV_lessequal(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, %struct.lua_TValue.215* %r) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue.215* %l, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = icmp eq i32 %2, 3
  br i1 %3, label %4, label %15

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %6 = load i32* %5, align 4, !tbaa !15
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %.thread

; <label>:8                                       ; preds = %4
  %9 = bitcast %struct.lua_TValue.215* %l to double*
  %10 = load double* %9, align 8, !tbaa !30
  %11 = bitcast %struct.lua_TValue.215* %r to double*
  %12 = load double* %11, align 8, !tbaa !30
  %13 = fcmp ole double %10, %12
  %14 = zext i1 %13 to i32
  br label %197

; <label>:15                                      ; preds = %0
  %16 = and i32 %2, 15
  %17 = icmp eq i32 %16, 4
  br i1 %17, label %18, label %.thread

; <label>:18                                      ; preds = %15
  %19 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %20 = load i32* %19, align 4, !tbaa !15
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %23, label %.thread

; <label>:23                                      ; preds = %18
  %24 = getelementptr inbounds %struct.lua_TValue.215* %l, i64 0, i32 0, i32 0
  %25 = load %union.GCObject.229** %24, align 8, !tbaa !25
  %26 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 0, i32 0
  %27 = load %union.GCObject.229** %26, align 8, !tbaa !25
  %28 = getelementptr inbounds %union.GCObject.229* %25, i64 0, i32 0, i32 5
  %29 = bitcast %struct.global_State.223** %28 to i8*
  %30 = getelementptr inbounds %union.GCObject.229* %27, i64 0, i32 0, i32 5
  %31 = bitcast %struct.global_State.223** %30 to i8*
  %32 = tail call i32 @strcoll(i8* %29, i8* %31) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %.lr.ph.i, label %l_strcmp.exit

.lr.ph.i:                                         ; preds = %23
  %34 = getelementptr inbounds %union.GCObject.229* %27, i64 0, i32 0, i32 4
  %35 = bitcast %struct.lua_TValue.215** %34 to i64*
  %36 = getelementptr inbounds %union.GCObject.229* %25, i64 0, i32 0, i32 4
  %37 = bitcast %struct.lua_TValue.215** %36 to i64*
  %38 = load i64* %35, align 8, !tbaa !34
  %39 = load i64* %37, align 8, !tbaa !34
  br label %40

; <label>:40                                      ; preds = %48, %.lr.ph.i
  %lr.04.i = phi i64 [ %38, %.lr.ph.i ], [ %53, %48 ]
  %r.03.i = phi i8* [ %31, %.lr.ph.i ], [ %52, %48 ]
  %ll.02.i = phi i64 [ %39, %.lr.ph.i ], [ %51, %48 ]
  %l.01.i = phi i8* [ %29, %.lr.ph.i ], [ %50, %48 ]
  %41 = tail call i64 @strlen(i8* %l.01.i) #3
  %42 = icmp eq i64 %41, %lr.04.i
  %43 = icmp eq i64 %41, %ll.02.i
  br i1 %42, label %44, label %47

; <label>:44                                      ; preds = %40
  %45 = zext i1 %43 to i32
  %46 = xor i32 %45, 1
  br label %l_strcmp.exit

; <label>:47                                      ; preds = %40
  br i1 %43, label %l_strcmp.exit, label %48

; <label>:48                                      ; preds = %47
  %49 = add i64 %41, 1
  %50 = getelementptr inbounds i8* %l.01.i, i64 %49
  %51 = sub i64 %ll.02.i, %49
  %52 = getelementptr inbounds i8* %r.03.i, i64 %49
  %53 = sub i64 %lr.04.i, %49
  %54 = tail call i32 @strcoll(i8* %50, i8* %52) #3
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %40, label %l_strcmp.exit

l_strcmp.exit:                                    ; preds = %48, %47, %44, %23
  %.0.i = phi i32 [ %46, %44 ], [ %32, %23 ], [ -1, %47 ], [ %54, %48 ]
  %56 = icmp slt i32 %.0.i, 1
  %57 = zext i1 %56 to i32
  br label %197

.thread:                                          ; preds = %18, %15, %4
  %58 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %59 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %60 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, i32 14) #3
  %61 = getelementptr inbounds %struct.lua_TValue.215* %60, i64 0, i32 1
  %62 = load i32* %61, align 4, !tbaa !15
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %67

; <label>:64                                      ; preds = %.thread
  %65 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %r, i32 14) #3
  %.phi.trans.insert.i.i = getelementptr inbounds %struct.lua_TValue.215* %65, i64 0, i32 1
  %.pre.i.i = load i32* %.phi.trans.insert.i.i, align 4, !tbaa !15
  %66 = icmp eq i32 %.pre.i.i, 0
  br i1 %66, label %127, label %67

; <label>:67                                      ; preds = %64, %.thread
  %tm.01.i.i = phi %struct.lua_TValue.215* [ %65, %64 ], [ %60, %.thread ]
  %68 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %69 = load %struct.lua_TValue.215** %68, align 8, !tbaa !13
  %70 = ptrtoint %struct.lua_TValue.215* %59 to i64
  %71 = ptrtoint %struct.lua_TValue.215* %69 to i64
  %72 = sub i64 %70, %71
  %73 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %74 = getelementptr inbounds %struct.lua_TValue.215* %73, i64 1
  store %struct.lua_TValue.215* %74, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %75 = bitcast %struct.lua_TValue.215* %tm.01.i.i to i64*
  %76 = load i64* %75, align 8
  %77 = getelementptr inbounds %struct.lua_TValue.215* %73, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %76 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %77, align 8
  %78 = getelementptr inbounds %struct.lua_TValue.215* %tm.01.i.i, i64 0, i32 1
  %79 = load i32* %78, align 4, !tbaa !15
  %80 = getelementptr inbounds %struct.lua_TValue.215* %73, i64 0, i32 1
  store i32 %79, i32* %80, align 4, !tbaa !15
  %81 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %82 = getelementptr inbounds %struct.lua_TValue.215* %81, i64 1
  store %struct.lua_TValue.215* %82, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %83 = bitcast %struct.lua_TValue.215* %l to i64*
  %84 = load i64* %83, align 8
  %85 = getelementptr inbounds %struct.lua_TValue.215* %81, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %84 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %85, align 8
  %86 = load i32* %1, align 4, !tbaa !15
  %87 = getelementptr inbounds %struct.lua_TValue.215* %81, i64 0, i32 1
  store i32 %86, i32* %87, align 4, !tbaa !15
  %88 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %89 = getelementptr inbounds %struct.lua_TValue.215* %88, i64 1
  store %struct.lua_TValue.215* %89, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %90 = bitcast %struct.lua_TValue.215* %r to i64*
  %91 = load i64* %90, align 8
  %92 = getelementptr inbounds %struct.lua_TValue.215* %88, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %91 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %92, align 8
  %93 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %94 = load i32* %93, align 4, !tbaa !15
  %95 = getelementptr inbounds %struct.lua_TValue.215* %88, i64 0, i32 1
  store i32 %94, i32* %95, align 4, !tbaa !15
  %96 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %97 = getelementptr inbounds %struct.lua_TValue.215* %96, i64 -3
  %98 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %99 = load %struct.CallInfo.225** %98, align 8, !tbaa !5
  %100 = getelementptr inbounds %struct.CallInfo.225* %99, i64 0, i32 5
  %101 = load i8* %100, align 1, !tbaa !46
  %102 = zext i8 %101 to i32
  %103 = and i32 %102, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %97, i32 1, i32 %103) #3
  %104 = load %struct.lua_TValue.215** %68, align 8, !tbaa !13
  %105 = bitcast %struct.lua_TValue.215* %104 to i8*
  %106 = getelementptr inbounds i8* %105, i64 %72
  %107 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %108 = getelementptr inbounds %struct.lua_TValue.215* %107, i64 -1
  store %struct.lua_TValue.215* %108, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %109 = bitcast %struct.lua_TValue.215* %108 to i64*
  %110 = bitcast i8* %106 to i64*
  %111 = load i64* %109, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds %struct.lua_TValue.215* %107, i64 -1, i32 1
  %113 = load i32* %112, align 4, !tbaa !15
  %.sum.i = add i64 %72, 8
  %114 = getelementptr inbounds i8* %105, i64 %.sum.i
  %115 = bitcast i8* %114 to i32*
  store i32 %113, i32* %115, align 4, !tbaa !15
  %116 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %117 = getelementptr inbounds %struct.lua_TValue.215* %116, i64 0, i32 1
  %118 = load i32* %117, align 4, !tbaa !15
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %call_orderTM.exit.thread, label %120

; <label>:120                                     ; preds = %67
  %121 = icmp eq i32 %118, 1
  br i1 %121, label %122, label %call_orderTM.exit.thread

; <label>:122                                     ; preds = %120
  %123 = bitcast %struct.lua_TValue.215* %116 to i32*
  %124 = load i32* %123, align 4, !tbaa !1
  %phitmp.i = icmp ne i32 %124, 0
  br label %call_orderTM.exit.thread

call_orderTM.exit.thread:                         ; preds = %122, %120, %67
  %125 = phi i1 [ false, %67 ], [ true, %120 ], [ %phitmp.i, %122 ]
  %126 = zext i1 %125 to i32
  br label %197

; <label>:127                                     ; preds = %64
  %128 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %129 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %r, i32 13) #3
  %130 = getelementptr inbounds %struct.lua_TValue.215* %129, i64 0, i32 1
  %131 = load i32* %130, align 4, !tbaa !15
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %136

; <label>:133                                     ; preds = %127
  %134 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, i32 13) #3
  %.phi.trans.insert.i.i2 = getelementptr inbounds %struct.lua_TValue.215* %134, i64 0, i32 1
  %.pre.i.i3 = load i32* %.phi.trans.insert.i.i2, align 4, !tbaa !15
  %135 = icmp eq i32 %.pre.i.i3, 0
  br i1 %135, label %call_orderTM.exit7.thread, label %136

; <label>:136                                     ; preds = %133, %127
  %tm.01.i.i4 = phi %struct.lua_TValue.215* [ %134, %133 ], [ %129, %127 ]
  %137 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %138 = load %struct.lua_TValue.215** %137, align 8, !tbaa !13
  %139 = ptrtoint %struct.lua_TValue.215* %128 to i64
  %140 = ptrtoint %struct.lua_TValue.215* %138 to i64
  %141 = sub i64 %139, %140
  %142 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %143 = getelementptr inbounds %struct.lua_TValue.215* %142, i64 1
  store %struct.lua_TValue.215* %143, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %144 = bitcast %struct.lua_TValue.215* %tm.01.i.i4 to i64*
  %145 = load i64* %144, align 8
  %146 = getelementptr inbounds %struct.lua_TValue.215* %142, i64 0, i32 0, i32 0
  %.c.i8 = inttoptr i64 %145 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i8, %union.GCObject.229** %146, align 8
  %147 = getelementptr inbounds %struct.lua_TValue.215* %tm.01.i.i4, i64 0, i32 1
  %148 = load i32* %147, align 4, !tbaa !15
  %149 = getelementptr inbounds %struct.lua_TValue.215* %142, i64 0, i32 1
  store i32 %148, i32* %149, align 4, !tbaa !15
  %150 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %151 = getelementptr inbounds %struct.lua_TValue.215* %150, i64 1
  store %struct.lua_TValue.215* %151, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %152 = bitcast %struct.lua_TValue.215* %r to i64*
  %153 = load i64* %152, align 8
  %154 = getelementptr inbounds %struct.lua_TValue.215* %150, i64 0, i32 0, i32 0
  %.c9.i9 = inttoptr i64 %153 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i9, %union.GCObject.229** %154, align 8
  %155 = getelementptr inbounds %struct.lua_TValue.215* %r, i64 0, i32 1
  %156 = load i32* %155, align 4, !tbaa !15
  %157 = getelementptr inbounds %struct.lua_TValue.215* %150, i64 0, i32 1
  store i32 %156, i32* %157, align 4, !tbaa !15
  %158 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %159 = getelementptr inbounds %struct.lua_TValue.215* %158, i64 1
  store %struct.lua_TValue.215* %159, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %160 = bitcast %struct.lua_TValue.215* %l to i64*
  %161 = load i64* %160, align 8
  %162 = getelementptr inbounds %struct.lua_TValue.215* %158, i64 0, i32 0, i32 0
  %.c10.i10 = inttoptr i64 %161 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i10, %union.GCObject.229** %162, align 8
  %163 = load i32* %1, align 4, !tbaa !15
  %164 = getelementptr inbounds %struct.lua_TValue.215* %158, i64 0, i32 1
  store i32 %163, i32* %164, align 4, !tbaa !15
  %165 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %166 = getelementptr inbounds %struct.lua_TValue.215* %165, i64 -3
  %167 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %168 = load %struct.CallInfo.225** %167, align 8, !tbaa !5
  %169 = getelementptr inbounds %struct.CallInfo.225* %168, i64 0, i32 5
  %170 = load i8* %169, align 1, !tbaa !46
  %171 = zext i8 %170 to i32
  %172 = and i32 %171, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %166, i32 1, i32 %172) #3
  %173 = load %struct.lua_TValue.215** %137, align 8, !tbaa !13
  %174 = bitcast %struct.lua_TValue.215* %173 to i8*
  %175 = getelementptr inbounds i8* %174, i64 %141
  %176 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %177 = getelementptr inbounds %struct.lua_TValue.215* %176, i64 -1
  store %struct.lua_TValue.215* %177, %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %178 = bitcast %struct.lua_TValue.215* %177 to i64*
  %179 = bitcast i8* %175 to i64*
  %180 = load i64* %178, align 8
  store i64 %180, i64* %179, align 8
  %181 = getelementptr inbounds %struct.lua_TValue.215* %176, i64 -1, i32 1
  %182 = load i32* %181, align 4, !tbaa !15
  %.sum.i11 = add i64 %141, 8
  %183 = getelementptr inbounds i8* %174, i64 %.sum.i11
  %184 = bitcast i8* %183 to i32*
  store i32 %182, i32* %184, align 4, !tbaa !15
  %185 = load %struct.lua_TValue.215** %58, align 8, !tbaa !12
  %186 = getelementptr inbounds %struct.lua_TValue.215* %185, i64 0, i32 1
  %187 = load i32* %186, align 4, !tbaa !15
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %call_orderTM.exit7, label %189

; <label>:189                                     ; preds = %136
  %190 = icmp eq i32 %187, 1
  br i1 %190, label %191, label %call_orderTM.exit7

; <label>:191                                     ; preds = %189
  %192 = bitcast %struct.lua_TValue.215* %185 to i32*
  %193 = load i32* %192, align 4, !tbaa !1
  %phitmp.i5 = icmp ne i32 %193, 0
  br label %call_orderTM.exit7

call_orderTM.exit7.thread:                        ; preds = %133
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_ordererror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %l, %struct.lua_TValue.215* %r) #13
  unreachable

call_orderTM.exit7:                               ; preds = %191, %189, %136
  %194 = phi i1 [ false, %136 ], [ true, %189 ], [ %phitmp.i5, %191 ]
  %195 = zext i1 %194 to i32
  %196 = xor i32 %195, 1
  br label %197

; <label>:197                                     ; preds = %call_orderTM.exit7, %call_orderTM.exit.thread, %l_strcmp.exit, %8
  %.0 = phi i32 [ %14, %8 ], [ %57, %l_strcmp.exit ], [ %196, %call_orderTM.exit7 ], [ %126, %call_orderTM.exit.thread ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaV_equalobj_(%struct.lua_State.228* %L, %struct.lua_TValue.215* nocapture readonly %t1, %struct.lua_TValue.215* nocapture readonly %t2) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue.215* %t1, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 63
  switch i32 %3, label %79 [
    i32 0, label %150
    i32 3, label %4
    i32 1, label %11
    i32 2, label %18
    i32 22, label %25
    i32 4, label %32
    i32 20, label %39
    i32 7, label %47
    i32 5, label %63
  ]

; <label>:4                                       ; preds = %0
  %5 = bitcast %struct.lua_TValue.215* %t1 to double*
  %6 = load double* %5, align 8, !tbaa !30
  %7 = bitcast %struct.lua_TValue.215* %t2 to double*
  %8 = load double* %7, align 8, !tbaa !30
  %9 = fcmp oeq double %6, %8
  %10 = zext i1 %9 to i32
  br label %150

; <label>:11                                      ; preds = %0
  %12 = bitcast %struct.lua_TValue.215* %t1 to i32*
  %13 = load i32* %12, align 4, !tbaa !1
  %14 = bitcast %struct.lua_TValue.215* %t2 to i32*
  %15 = load i32* %14, align 4, !tbaa !1
  %16 = icmp eq i32 %13, %15
  %17 = zext i1 %16 to i32
  br label %150

; <label>:18                                      ; preds = %0
  %19 = bitcast %struct.lua_TValue.215* %t1 to i8**
  %20 = load i8** %19, align 8, !tbaa !25
  %21 = bitcast %struct.lua_TValue.215* %t2 to i8**
  %22 = load i8** %21, align 8, !tbaa !25
  %23 = icmp eq i8* %20, %22
  %24 = zext i1 %23 to i32
  br label %150

; <label>:25                                      ; preds = %0
  %26 = bitcast %struct.lua_TValue.215* %t1 to i32 (%struct.lua_State.228*)**
  %27 = load i32 (%struct.lua_State.228*)** %26, align 8, !tbaa !25
  %28 = bitcast %struct.lua_TValue.215* %t2 to i32 (%struct.lua_State.228*)**
  %29 = load i32 (%struct.lua_State.228*)** %28, align 8, !tbaa !25
  %30 = icmp eq i32 (%struct.lua_State.228*)* %27, %29
  %31 = zext i1 %30 to i32
  br label %150

; <label>:32                                      ; preds = %0
  %33 = getelementptr inbounds %struct.lua_TValue.215* %t1, i64 0, i32 0, i32 0
  %34 = load %union.GCObject.229** %33, align 8, !tbaa !25
  %35 = getelementptr inbounds %struct.lua_TValue.215* %t2, i64 0, i32 0, i32 0
  %36 = load %union.GCObject.229** %35, align 8, !tbaa !25
  %37 = icmp eq %union.GCObject.229* %34, %36
  %38 = zext i1 %37 to i32
  br label %150

; <label>:39                                      ; preds = %0
  %40 = getelementptr inbounds %struct.lua_TValue.215* %t1, i64 0, i32 0, i32 0
  %41 = load %union.GCObject.229** %40, align 8, !tbaa !25
  %42 = bitcast %union.GCObject.229* %41 to %union.TString.219*
  %43 = getelementptr inbounds %struct.lua_TValue.215* %t2, i64 0, i32 0, i32 0
  %44 = load %union.GCObject.229** %43, align 8, !tbaa !25
  %45 = bitcast %union.GCObject.229* %44 to %union.TString.219*
  %46 = tail call i32 @luaS_eqlngstr(%union.TString.219* %42, %union.TString.219* %45) #3
  br label %150

; <label>:47                                      ; preds = %0
  %48 = getelementptr inbounds %struct.lua_TValue.215* %t1, i64 0, i32 0, i32 0
  %49 = load %union.GCObject.229** %48, align 8, !tbaa !25
  %50 = getelementptr inbounds %struct.lua_TValue.215* %t2, i64 0, i32 0, i32 0
  %51 = load %union.GCObject.229** %50, align 8, !tbaa !25
  %52 = icmp eq %union.GCObject.229* %49, %51
  br i1 %52, label %150, label %53

; <label>:53                                      ; preds = %47
  %54 = icmp eq %struct.lua_State.228* %L, null
  br i1 %54, label %150, label %55

; <label>:55                                      ; preds = %53
  %56 = getelementptr inbounds %union.GCObject.229* %49, i64 0, i32 0, i32 4
  %57 = load %struct.lua_TValue.215** %56, align 8
  %58 = bitcast %struct.lua_TValue.215* %57 to %struct.Table.222*
  %59 = getelementptr inbounds %union.GCObject.229* %51, i64 0, i32 0, i32 4
  %60 = load %struct.lua_TValue.215** %59, align 8
  %61 = bitcast %struct.lua_TValue.215* %60 to %struct.Table.222*
  %62 = tail call fastcc %struct.lua_TValue.215* @get_equalTM(%struct.lua_State.228* %L, %struct.Table.222* %58, %struct.Table.222* %61)
  br label %86

; <label>:63                                      ; preds = %0
  %64 = getelementptr inbounds %struct.lua_TValue.215* %t1, i64 0, i32 0, i32 0
  %65 = load %union.GCObject.229** %64, align 8, !tbaa !25
  %66 = getelementptr inbounds %struct.lua_TValue.215* %t2, i64 0, i32 0, i32 0
  %67 = load %union.GCObject.229** %66, align 8, !tbaa !25
  %68 = icmp eq %union.GCObject.229* %65, %67
  br i1 %68, label %150, label %69

; <label>:69                                      ; preds = %63
  %70 = icmp eq %struct.lua_State.228* %L, null
  br i1 %70, label %150, label %71

; <label>:71                                      ; preds = %69
  %72 = getelementptr inbounds %union.GCObject.229* %65, i64 0, i32 0, i32 4
  %73 = load %struct.lua_TValue.215** %72, align 8
  %74 = bitcast %struct.lua_TValue.215* %73 to %struct.Table.222*
  %75 = getelementptr inbounds %union.GCObject.229* %67, i64 0, i32 0, i32 4
  %76 = load %struct.lua_TValue.215** %75, align 8
  %77 = bitcast %struct.lua_TValue.215* %76 to %struct.Table.222*
  %78 = tail call fastcc %struct.lua_TValue.215* @get_equalTM(%struct.lua_State.228* %L, %struct.Table.222* %74, %struct.Table.222* %77)
  br label %86

; <label>:79                                      ; preds = %0
  %80 = getelementptr inbounds %struct.lua_TValue.215* %t1, i64 0, i32 0, i32 0
  %81 = load %union.GCObject.229** %80, align 8, !tbaa !25
  %82 = getelementptr inbounds %struct.lua_TValue.215* %t2, i64 0, i32 0, i32 0
  %83 = load %union.GCObject.229** %82, align 8, !tbaa !25
  %84 = icmp eq %union.GCObject.229* %81, %83
  %85 = zext i1 %84 to i32
  br label %150

; <label>:86                                      ; preds = %71, %55
  %tm.0 = phi %struct.lua_TValue.215* [ %78, %71 ], [ %62, %55 ]
  %87 = icmp eq %struct.lua_TValue.215* %tm.0, null
  br i1 %87, label %150, label %88

; <label>:88                                      ; preds = %86
  %89 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %90 = load %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %91 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %92 = load %struct.lua_TValue.215** %91, align 8, !tbaa !13
  %93 = ptrtoint %struct.lua_TValue.215* %90 to i64
  %94 = ptrtoint %struct.lua_TValue.215* %92 to i64
  %95 = sub i64 %93, %94
  %96 = getelementptr inbounds %struct.lua_TValue.215* %90, i64 1
  store %struct.lua_TValue.215* %96, %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %97 = bitcast %struct.lua_TValue.215* %tm.0 to i64*
  %98 = load i64* %97, align 8
  %99 = getelementptr inbounds %struct.lua_TValue.215* %90, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %98 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %99, align 8
  %100 = getelementptr inbounds %struct.lua_TValue.215* %tm.0, i64 0, i32 1
  %101 = load i32* %100, align 4, !tbaa !15
  %102 = getelementptr inbounds %struct.lua_TValue.215* %90, i64 0, i32 1
  store i32 %101, i32* %102, align 4, !tbaa !15
  %103 = load %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %104 = getelementptr inbounds %struct.lua_TValue.215* %103, i64 1
  store %struct.lua_TValue.215* %104, %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %105 = bitcast %struct.lua_TValue.215* %t1 to i64*
  %106 = load i64* %105, align 8
  %107 = getelementptr inbounds %struct.lua_TValue.215* %103, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %106 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %107, align 8
  %108 = load i32* %1, align 4, !tbaa !15
  %109 = getelementptr inbounds %struct.lua_TValue.215* %103, i64 0, i32 1
  store i32 %108, i32* %109, align 4, !tbaa !15
  %110 = load %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %111 = getelementptr inbounds %struct.lua_TValue.215* %110, i64 1
  store %struct.lua_TValue.215* %111, %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %112 = bitcast %struct.lua_TValue.215* %t2 to i64*
  %113 = load i64* %112, align 8
  %114 = getelementptr inbounds %struct.lua_TValue.215* %110, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %113 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %114, align 8
  %115 = getelementptr inbounds %struct.lua_TValue.215* %t2, i64 0, i32 1
  %116 = load i32* %115, align 4, !tbaa !15
  %117 = getelementptr inbounds %struct.lua_TValue.215* %110, i64 0, i32 1
  store i32 %116, i32* %117, align 4, !tbaa !15
  %118 = load %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %119 = getelementptr inbounds %struct.lua_TValue.215* %118, i64 -3
  %120 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %121 = load %struct.CallInfo.225** %120, align 8, !tbaa !5
  %122 = getelementptr inbounds %struct.CallInfo.225* %121, i64 0, i32 5
  %123 = load i8* %122, align 1, !tbaa !46
  %124 = zext i8 %123 to i32
  %125 = and i32 %124, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %119, i32 1, i32 %125) #3
  %126 = load %struct.lua_TValue.215** %91, align 8, !tbaa !13
  %127 = bitcast %struct.lua_TValue.215* %126 to i8*
  %128 = getelementptr inbounds i8* %127, i64 %95
  %129 = load %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %130 = getelementptr inbounds %struct.lua_TValue.215* %129, i64 -1
  store %struct.lua_TValue.215* %130, %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %131 = bitcast %struct.lua_TValue.215* %130 to i64*
  %132 = bitcast i8* %128 to i64*
  %133 = load i64* %131, align 8
  store i64 %133, i64* %132, align 8
  %134 = getelementptr inbounds %struct.lua_TValue.215* %129, i64 -1, i32 1
  %135 = load i32* %134, align 4, !tbaa !15
  %.sum.i = add i64 %95, 8
  %136 = getelementptr inbounds i8* %127, i64 %.sum.i
  %137 = bitcast i8* %136 to i32*
  store i32 %135, i32* %137, align 4, !tbaa !15
  %138 = load %struct.lua_TValue.215** %89, align 8, !tbaa !12
  %139 = getelementptr inbounds %struct.lua_TValue.215* %138, i64 0, i32 1
  %140 = load i32* %139, align 4, !tbaa !15
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %147, label %142

; <label>:142                                     ; preds = %88
  %143 = icmp eq i32 %140, 1
  br i1 %143, label %144, label %147

; <label>:144                                     ; preds = %142
  %145 = bitcast %struct.lua_TValue.215* %138 to i32*
  %146 = load i32* %145, align 4, !tbaa !1
  %phitmp = icmp ne i32 %146, 0
  br label %147

; <label>:147                                     ; preds = %144, %142, %88
  %148 = phi i1 [ false, %88 ], [ true, %142 ], [ %phitmp, %144 ]
  %149 = zext i1 %148 to i32
  br label %150

; <label>:150                                     ; preds = %147, %86, %79, %69, %63, %53, %47, %39, %32, %25, %18, %11, %4, %0
  %.0 = phi i32 [ %85, %79 ], [ %149, %147 ], [ %46, %39 ], [ %38, %32 ], [ %31, %25 ], [ %24, %18 ], [ %17, %11 ], [ %10, %4 ], [ 1, %0 ], [ 1, %47 ], [ 0, %53 ], [ 1, %63 ], [ 0, %69 ], [ 0, %86 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_concat(%struct.lua_State.228* %L, i32 %total) #0 {
  %s.i = alloca [32 x i8], align 16
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %2 = getelementptr inbounds [32 x i8]* %s.i, i64 0, i64 0
  %3 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %4 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %5 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %.pre = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  br label %6

; <label>:6                                       ; preds = %luaV_tostring.exit6, %0
  %7 = phi %struct.lua_TValue.215* [ %.pre, %0 ], [ %187, %luaV_tostring.exit6 ]
  %.0 = phi i32 [ %total, %0 ], [ %183, %luaV_tostring.exit6 ]
  %8 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 -2
  %9 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 -2, i32 1
  %10 = load i32* %9, align 4, !tbaa !15
  %11 = and i32 %10, 15
  %12 = icmp eq i32 %11, 4
  %13 = icmp eq i32 %10, 3
  %or.cond = or i1 %12, %13
  %14 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 -1
  br i1 %or.cond, label %15, label %luaV_tostring.exit.thread

; <label>:15                                      ; preds = %6
  %16 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 -1, i32 1
  %17 = load i32* %16, align 4, !tbaa !15
  %18 = and i32 %17, 15
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %._crit_edge, label %20

._crit_edge:                                      ; preds = %15
  %.pre32 = getelementptr inbounds %struct.lua_TValue.215* %14, i64 0, i32 0, i32 0
  br label %87

; <label>:20                                      ; preds = %15
  call void @llvm.lifetime.start(i64 32, i8* %2) #3
  %21 = icmp eq i32 %17, 3
  br i1 %21, label %luaV_tostring.exit, label %luaV_tostring.exit.thread

luaV_tostring.exit:                               ; preds = %20
  %22 = bitcast %struct.lua_TValue.215* %14 to double*
  %23 = load double* %22, align 8, !tbaa !30
  %24 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %2, i32 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str303, i64 0, i64 0), double %23) #3
  %25 = sext i32 %24 to i64
  %26 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %2, i64 %25) #3
  %27 = bitcast %union.TString.219* %26 to %union.GCObject.229*
  %28 = getelementptr inbounds %struct.lua_TValue.215* %14, i64 0, i32 0, i32 0
  store %union.GCObject.229* %27, %union.GCObject.229** %28, align 8, !tbaa !25
  %29 = getelementptr inbounds %union.TString.219* %26, i64 0, i32 0, i32 1
  %30 = load i8* %29, align 1, !tbaa !38
  %31 = zext i8 %30 to i32
  %32 = or i32 %31, 64
  store i32 %32, i32* %16, align 4, !tbaa !15
  call void @llvm.lifetime.end(i64 32, i8* %2) #3
  %.pre31 = load i32* %9, align 4, !tbaa !15
  br label %87

luaV_tostring.exit.thread:                        ; preds = %20, %6
  %33 = call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %8, i32 15) #3
  %34 = getelementptr inbounds %struct.lua_TValue.215* %33, i64 0, i32 1
  %35 = load i32* %34, align 4, !tbaa !15
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %call_binTM.exit

; <label>:37                                      ; preds = %luaV_tostring.exit.thread
  %38 = call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %14, i32 15) #3
  %.phi.trans.insert.i = getelementptr inbounds %struct.lua_TValue.215* %38, i64 0, i32 1
  %.pre.i = load i32* %.phi.trans.insert.i, align 4, !tbaa !15
  %39 = icmp eq i32 %.pre.i, 0
  br i1 %39, label %86, label %call_binTM.exit

call_binTM.exit:                                  ; preds = %37, %luaV_tostring.exit.thread
  %tm.01.i = phi %struct.lua_TValue.215* [ %38, %37 ], [ %33, %luaV_tostring.exit.thread ]
  %40 = load %struct.lua_TValue.215** %4, align 8, !tbaa !13
  %41 = ptrtoint %struct.lua_TValue.215* %8 to i64
  %42 = ptrtoint %struct.lua_TValue.215* %40 to i64
  %43 = sub i64 %41, %42
  %44 = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %45 = getelementptr inbounds %struct.lua_TValue.215* %44, i64 1
  store %struct.lua_TValue.215* %45, %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %46 = bitcast %struct.lua_TValue.215* %tm.01.i to i64*
  %47 = load i64* %46, align 8
  %48 = getelementptr inbounds %struct.lua_TValue.215* %44, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %47 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %48, align 8
  %49 = getelementptr inbounds %struct.lua_TValue.215* %tm.01.i, i64 0, i32 1
  %50 = load i32* %49, align 4, !tbaa !15
  %51 = getelementptr inbounds %struct.lua_TValue.215* %44, i64 0, i32 1
  store i32 %50, i32* %51, align 4, !tbaa !15
  %52 = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %53 = getelementptr inbounds %struct.lua_TValue.215* %52, i64 1
  store %struct.lua_TValue.215* %53, %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %54 = bitcast %struct.lua_TValue.215* %8 to i64*
  %55 = load i64* %54, align 8
  %56 = getelementptr inbounds %struct.lua_TValue.215* %52, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %55 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %56, align 8
  %57 = load i32* %9, align 4, !tbaa !15
  %58 = getelementptr inbounds %struct.lua_TValue.215* %52, i64 0, i32 1
  store i32 %57, i32* %58, align 4, !tbaa !15
  %59 = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %60 = getelementptr inbounds %struct.lua_TValue.215* %59, i64 1
  store %struct.lua_TValue.215* %60, %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %61 = bitcast %struct.lua_TValue.215* %14 to i64*
  %62 = load i64* %61, align 8
  %63 = getelementptr inbounds %struct.lua_TValue.215* %59, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %62 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %63, align 8
  %64 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 -1, i32 1
  %65 = load i32* %64, align 4, !tbaa !15
  %66 = getelementptr inbounds %struct.lua_TValue.215* %59, i64 0, i32 1
  store i32 %65, i32* %66, align 4, !tbaa !15
  %67 = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %68 = getelementptr inbounds %struct.lua_TValue.215* %67, i64 -3
  %69 = load %struct.CallInfo.225** %5, align 8, !tbaa !5
  %70 = getelementptr inbounds %struct.CallInfo.225* %69, i64 0, i32 5
  %71 = load i8* %70, align 1, !tbaa !46
  %72 = zext i8 %71 to i32
  %73 = and i32 %72, 1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %68, i32 1, i32 %73) #3
  %74 = load %struct.lua_TValue.215** %4, align 8, !tbaa !13
  %75 = bitcast %struct.lua_TValue.215* %74 to i8*
  %76 = getelementptr inbounds i8* %75, i64 %43
  %77 = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %78 = getelementptr inbounds %struct.lua_TValue.215* %77, i64 -1
  store %struct.lua_TValue.215* %78, %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %79 = bitcast %struct.lua_TValue.215* %78 to i64*
  %80 = bitcast i8* %76 to i64*
  %81 = load i64* %79, align 8
  store i64 %81, i64* %80, align 8
  %82 = getelementptr inbounds %struct.lua_TValue.215* %77, i64 -1, i32 1
  %83 = load i32* %82, align 4, !tbaa !15
  %.sum.i = add i64 %43, 8
  %84 = getelementptr inbounds i8* %75, i64 %.sum.i
  %85 = bitcast i8* %84 to i32*
  store i32 %83, i32* %85, align 4, !tbaa !15
  br label %luaV_tostring.exit6

; <label>:86                                      ; preds = %37
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_concaterror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %8, %struct.lua_TValue.215* %14) #13
  unreachable

; <label>:87                                      ; preds = %luaV_tostring.exit, %._crit_edge
  %.pre-phi = phi %union.GCObject.229** [ %.pre32, %._crit_edge ], [ %28, %luaV_tostring.exit ]
  %88 = phi i32 [ %10, %._crit_edge ], [ %.pre31, %luaV_tostring.exit ]
  %89 = load %union.GCObject.229** %.pre-phi, align 8, !tbaa !25
  %90 = getelementptr inbounds %union.GCObject.229* %89, i64 0, i32 0, i32 4
  %91 = bitcast %struct.lua_TValue.215** %90 to i64*
  %92 = load i64* %91, align 8, !tbaa !34
  %93 = icmp eq i64 %92, 0
  %94 = and i32 %88, 15
  %95 = icmp eq i32 %94, 4
  br i1 %93, label %96, label %111

; <label>:96                                      ; preds = %87
  br i1 %95, label %luaV_tostring.exit6, label %97

; <label>:97                                      ; preds = %96
  call void @llvm.lifetime.start(i64 32, i8* %2) #3
  %98 = icmp eq i32 %88, 3
  br i1 %98, label %99, label %luaV_tostring.exit6

; <label>:99                                      ; preds = %97
  %100 = bitcast %struct.lua_TValue.215* %8 to double*
  %101 = load double* %100, align 8, !tbaa !30
  %102 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %2, i32 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str303, i64 0, i64 0), double %101) #3
  %103 = sext i32 %102 to i64
  %104 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %2, i64 %103) #3
  %105 = bitcast %union.TString.219* %104 to %union.GCObject.229*
  %106 = getelementptr inbounds %struct.lua_TValue.215* %8, i64 0, i32 0, i32 0
  store %union.GCObject.229* %105, %union.GCObject.229** %106, align 8, !tbaa !25
  %107 = getelementptr inbounds %union.TString.219* %104, i64 0, i32 0, i32 1
  %108 = load i8* %107, align 1, !tbaa !38
  %109 = zext i8 %108 to i32
  %110 = or i32 %109, 64
  store i32 %110, i32* %9, align 4, !tbaa !15
  br label %luaV_tostring.exit6

; <label>:111                                     ; preds = %87
  br i1 %95, label %112, label %121

; <label>:112                                     ; preds = %111
  %113 = getelementptr inbounds %struct.lua_TValue.215* %8, i64 0, i32 0, i32 0
  %114 = load %union.GCObject.229** %113, align 8, !tbaa !25
  %115 = getelementptr inbounds %union.GCObject.229* %114, i64 0, i32 0, i32 4
  %116 = bitcast %struct.lua_TValue.215** %115 to i64*
  %117 = load i64* %116, align 8, !tbaa !34
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %121

; <label>:119                                     ; preds = %112
  store %union.GCObject.229* %89, %union.GCObject.229** %113, align 8
  %120 = load i32* %16, align 4, !tbaa !15
  store i32 %120, i32* %9, align 4, !tbaa !15
  br label %luaV_tostring.exit6

; <label>:121                                     ; preds = %112, %111
  %122 = icmp sgt i32 %.0, 1
  br i1 %122, label %.lr.ph, label %.critedge

.lr.ph:                                           ; preds = %148, %121
  %indvars.iv = phi i64 [ %indvars.iv.next, %148 ], [ 1, %121 ]
  %tl.013 = phi i64 [ %149, %148 ], [ %92, %121 ]
  %.sum = xor i64 %indvars.iv, -1
  %123 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 %.sum
  %124 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 %.sum, i32 1
  %125 = load i32* %124, align 4, !tbaa !15
  %126 = and i32 %125, 15
  %127 = icmp eq i32 %126, 4
  br i1 %127, label %..critedge2_crit_edge, label %128

..critedge2_crit_edge:                            ; preds = %.lr.ph
  %.pre33 = getelementptr inbounds %struct.lua_TValue.215* %123, i64 0, i32 0, i32 0
  br label %.critedge2

; <label>:128                                     ; preds = %.lr.ph
  call void @llvm.lifetime.start(i64 32, i8* %2) #3
  %129 = icmp eq i32 %125, 3
  br i1 %129, label %luaV_tostring.exit9, label %.critedgesplit

luaV_tostring.exit9:                              ; preds = %128
  %130 = bitcast %struct.lua_TValue.215* %123 to double*
  %131 = load double* %130, align 8, !tbaa !30
  %132 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %2, i32 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str303, i64 0, i64 0), double %131) #3
  %133 = sext i32 %132 to i64
  %134 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %2, i64 %133) #3
  %135 = bitcast %union.TString.219* %134 to %union.GCObject.229*
  %136 = getelementptr inbounds %struct.lua_TValue.215* %123, i64 0, i32 0, i32 0
  store %union.GCObject.229* %135, %union.GCObject.229** %136, align 8, !tbaa !25
  %137 = getelementptr inbounds %union.TString.219* %134, i64 0, i32 0, i32 1
  %138 = load i8* %137, align 1, !tbaa !38
  %139 = zext i8 %138 to i32
  %140 = or i32 %139, 64
  store i32 %140, i32* %124, align 4, !tbaa !15
  call void @llvm.lifetime.end(i64 32, i8* %2) #3
  br label %.critedge2

.critedge2:                                       ; preds = %luaV_tostring.exit9, %..critedge2_crit_edge
  %.pre-phi34 = phi %union.GCObject.229** [ %.pre33, %..critedge2_crit_edge ], [ %136, %luaV_tostring.exit9 ]
  %141 = load %union.GCObject.229** %.pre-phi34, align 8, !tbaa !25
  %142 = getelementptr inbounds %union.GCObject.229* %141, i64 0, i32 0, i32 4
  %143 = bitcast %struct.lua_TValue.215** %142 to i64*
  %144 = load i64* %143, align 8, !tbaa !34
  %145 = sub i64 -3, %tl.013
  %146 = icmp ult i64 %144, %145
  br i1 %146, label %148, label %147

; <label>:147                                     ; preds = %.critedge2
  call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([23 x i8]* @.str4307, i64 0, i64 0)) #13
  unreachable

; <label>:148                                     ; preds = %.critedge2
  %149 = add i64 %144, %tl.013
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %150 = trunc i64 %indvars.iv.next to i32
  %151 = icmp slt i32 %150, %.0
  br i1 %151, label %.lr.ph, label %.critedge

.critedgesplit:                                   ; preds = %128
  %152 = trunc i64 %indvars.iv to i32
  br label %.critedge

.critedge:                                        ; preds = %.critedgesplit, %148, %121
  %tl.0.lcssa = phi i64 [ %92, %121 ], [ %tl.013, %.critedgesplit ], [ %149, %148 ]
  %i.0.lcssa = phi i32 [ 1, %121 ], [ %152, %.critedgesplit ], [ %150, %148 ]
  %153 = load %struct.global_State.223** %3, align 8, !tbaa !17
  %154 = getelementptr inbounds %struct.global_State.223* %153, i64 0, i32 25
  %155 = call i8* bitcast (i8* (%struct.lua_State*, %struct.Mbuffer*, i64)* @luaZ_openspace to i8* (%struct.lua_State.228*, %struct.Mbuffer*, i64)*)(%struct.lua_State.228* %L, %struct.Mbuffer* %154, i64 %tl.0.lcssa) #3
  %156 = sext i32 %i.0.lcssa to i64
  br label %157

; <label>:157                                     ; preds = %157, %.critedge
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %157 ], [ %156, %.critedge ]
  %tl.1 = phi i64 [ %169, %157 ], [ 0, %.critedge ]
  %158 = sub i64 0, %indvars.iv25
  %159 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 %158, i32 0, i32 0
  %160 = load %union.GCObject.229** %159, align 8, !tbaa !25
  %161 = getelementptr inbounds %union.GCObject.229* %160, i64 0, i32 0, i32 4
  %162 = bitcast %struct.lua_TValue.215** %161 to i64*
  %163 = load i64* %162, align 8, !tbaa !34
  %164 = getelementptr inbounds i8* %155, i64 %tl.1
  %165 = getelementptr inbounds %union.GCObject.229* %160, i64 0, i32 0, i32 5
  %166 = bitcast %struct.global_State.223** %165 to i8*
  %167 = call i64 @llvm.objectsize.i64.p0i8(i8* %164, i1 false)
  %168 = call i8* @__memcpy_chk(i8* %164, i8* %166, i64 %163, i64 %167) #3
  %169 = add i64 %163, %tl.1
  %indvars.iv.next26 = add nsw i64 %indvars.iv25, -1
  %170 = trunc i64 %indvars.iv.next26 to i32
  %171 = icmp sgt i32 %170, 0
  br i1 %171, label %157, label %172

; <label>:172                                     ; preds = %157
  %173 = sub i64 0, %156
  %174 = call %union.TString.219* @luaS_newlstr(%struct.lua_State.228* %L, i8* %155, i64 %169) #3
  %175 = bitcast %union.TString.219* %174 to %union.GCObject.229*
  %176 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 %173, i32 0, i32 0
  store %union.GCObject.229* %175, %union.GCObject.229** %176, align 8, !tbaa !25
  %177 = getelementptr inbounds %union.TString.219* %174, i64 0, i32 0, i32 1
  %178 = load i8* %177, align 1, !tbaa !38
  %179 = zext i8 %178 to i32
  %180 = or i32 %179, 64
  %181 = getelementptr inbounds %struct.lua_TValue.215* %7, i64 %173, i32 1
  store i32 %180, i32* %181, align 4, !tbaa !15
  br label %luaV_tostring.exit6

luaV_tostring.exit6:                              ; preds = %172, %119, %99, %97, %96, %call_binTM.exit
  %n.0 = phi i32 [ 2, %119 ], [ %i.0.lcssa, %172 ], [ 2, %call_binTM.exit ], [ 2, %96 ], [ 2, %97 ], [ 2, %99 ]
  %182 = add nsw i32 %n.0, -1
  %183 = sub nsw i32 %.0, %182
  %184 = load %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %185 = sext i32 %182 to i64
  %186 = sub i64 0, %185
  %187 = getelementptr inbounds %struct.lua_TValue.215* %184, i64 %186
  store %struct.lua_TValue.215* %187, %struct.lua_TValue.215** %1, align 8, !tbaa !12
  %188 = icmp sgt i32 %183, 1
  br i1 %188, label %6, label %189

; <label>:189                                     ; preds = %luaV_tostring.exit6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_objlen(%struct.lua_State.228* %L, %struct.lua_TValue.215* %ra, %struct.lua_TValue.215* %rb) #0 {
  %1 = getelementptr inbounds %struct.lua_TValue.215* %rb, i64 0, i32 1
  %2 = load i32* %1, align 4, !tbaa !15
  %3 = and i32 %2, 15
  switch i32 %3, label %37 [
    i32 5, label %4
    i32 4, label %28
  ]

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds %struct.lua_TValue.215* %rb, i64 0, i32 0, i32 0
  %6 = load %union.GCObject.229** %5, align 8, !tbaa !25
  %7 = bitcast %union.GCObject.229* %6 to %struct.Table.222*
  %8 = getelementptr inbounds %union.GCObject.229* %6, i64 0, i32 0, i32 4
  %9 = load %struct.lua_TValue.215** %8, align 8
  %10 = bitcast %struct.lua_TValue.215* %9 to %struct.Table.222*
  %11 = icmp eq %struct.lua_TValue.215* %9, null
  br i1 %11, label %.thread, label %12

; <label>:12                                      ; preds = %4
  %13 = getelementptr inbounds %struct.Table.222* %10, i64 0, i32 3
  %14 = load i8* %13, align 1, !tbaa !41
  %15 = and i8 %14, 16
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %.thread

; <label>:17                                      ; preds = %12
  %18 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %19 = load %struct.global_State.223** %18, align 8, !tbaa !17
  %20 = getelementptr inbounds %struct.global_State.223* %19, i64 0, i32 33, i64 4
  %21 = load %union.TString.219** %20, align 8, !tbaa !25
  %22 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.215* (%struct.Table.222*, i32, %union.TString.219*)*)(%struct.Table.222* %10, i32 4, %union.TString.219* %21) #3
  %23 = icmp eq %struct.lua_TValue.215* %22, null
  br i1 %23, label %.thread, label %43

.thread:                                          ; preds = %17, %12, %4
  %24 = tail call i32 bitcast (i32 (%struct.Table*)* @luaH_getn to i32 (%struct.Table.222*)*)(%struct.Table.222* %7) #3
  %25 = sitofp i32 %24 to double
  %26 = bitcast %struct.lua_TValue.215* %ra to double*
  store double %25, double* %26, align 8, !tbaa !30
  %27 = getelementptr inbounds %struct.lua_TValue.215* %ra, i64 0, i32 1
  store i32 3, i32* %27, align 4, !tbaa !15
  br label %91

; <label>:28                                      ; preds = %0
  %29 = getelementptr inbounds %struct.lua_TValue.215* %rb, i64 0, i32 0, i32 0
  %30 = load %union.GCObject.229** %29, align 8, !tbaa !25
  %31 = getelementptr inbounds %union.GCObject.229* %30, i64 0, i32 0, i32 4
  %32 = bitcast %struct.lua_TValue.215** %31 to i64*
  %33 = load i64* %32, align 8, !tbaa !34
  %34 = uitofp i64 %33 to double
  %35 = bitcast %struct.lua_TValue.215* %ra to double*
  store double %34, double* %35, align 8, !tbaa !30
  %36 = getelementptr inbounds %struct.lua_TValue.215* %ra, i64 0, i32 1
  store i32 3, i32* %36, align 4, !tbaa !15
  br label %91

; <label>:37                                      ; preds = %0
  %38 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %rb, i32 4) #3
  %39 = getelementptr inbounds %struct.lua_TValue.215* %38, i64 0, i32 1
  %40 = load i32* %39, align 4, !tbaa !15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

; <label>:42                                      ; preds = %37
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i8*)* @luaG_typeerror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i8*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %rb, i8* getelementptr inbounds ([14 x i8]* @.str5308, i64 0, i64 0)) #13
  unreachable

; <label>:43                                      ; preds = %37, %17
  %tm.0 = phi %struct.lua_TValue.215* [ %38, %37 ], [ %22, %17 ]
  %44 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %45 = load %struct.lua_TValue.215** %44, align 8, !tbaa !13
  %46 = ptrtoint %struct.lua_TValue.215* %ra to i64
  %47 = ptrtoint %struct.lua_TValue.215* %45 to i64
  %48 = sub i64 %46, %47
  %49 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %50 = load %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %51 = getelementptr inbounds %struct.lua_TValue.215* %50, i64 1
  store %struct.lua_TValue.215* %51, %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %52 = bitcast %struct.lua_TValue.215* %tm.0 to i64*
  %53 = load i64* %52, align 8
  %54 = getelementptr inbounds %struct.lua_TValue.215* %50, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %53 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %54, align 8
  %55 = getelementptr inbounds %struct.lua_TValue.215* %tm.0, i64 0, i32 1
  %56 = load i32* %55, align 4, !tbaa !15
  %57 = getelementptr inbounds %struct.lua_TValue.215* %50, i64 0, i32 1
  store i32 %56, i32* %57, align 4, !tbaa !15
  %58 = load %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %59 = getelementptr inbounds %struct.lua_TValue.215* %58, i64 1
  store %struct.lua_TValue.215* %59, %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %60 = bitcast %struct.lua_TValue.215* %rb to i64*
  %61 = load i64* %60, align 8
  %62 = getelementptr inbounds %struct.lua_TValue.215* %58, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %61 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %62, align 8
  %63 = load i32* %1, align 4, !tbaa !15
  %64 = getelementptr inbounds %struct.lua_TValue.215* %58, i64 0, i32 1
  store i32 %63, i32* %64, align 4, !tbaa !15
  %65 = load %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %66 = getelementptr inbounds %struct.lua_TValue.215* %65, i64 1
  store %struct.lua_TValue.215* %66, %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %67 = load i64* %60, align 8
  %68 = getelementptr inbounds %struct.lua_TValue.215* %65, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %67 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %68, align 8
  %69 = load i32* %1, align 4, !tbaa !15
  %70 = getelementptr inbounds %struct.lua_TValue.215* %65, i64 0, i32 1
  store i32 %69, i32* %70, align 4, !tbaa !15
  %71 = load %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %72 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 -3
  %73 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %74 = load %struct.CallInfo.225** %73, align 8, !tbaa !5
  %75 = getelementptr inbounds %struct.CallInfo.225* %74, i64 0, i32 5
  %76 = load i8* %75, align 1, !tbaa !46
  %77 = zext i8 %76 to i32
  %78 = and i32 %77, 1
  tail call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %72, i32 1, i32 %78) #3
  %79 = load %struct.lua_TValue.215** %44, align 8, !tbaa !13
  %80 = bitcast %struct.lua_TValue.215* %79 to i8*
  %81 = getelementptr inbounds i8* %80, i64 %48
  %82 = load %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %83 = getelementptr inbounds %struct.lua_TValue.215* %82, i64 -1
  store %struct.lua_TValue.215* %83, %struct.lua_TValue.215** %49, align 8, !tbaa !12
  %84 = bitcast %struct.lua_TValue.215* %83 to i64*
  %85 = bitcast i8* %81 to i64*
  %86 = load i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %struct.lua_TValue.215* %82, i64 -1, i32 1
  %88 = load i32* %87, align 4, !tbaa !15
  %.sum.i = add i64 %48, 8
  %89 = getelementptr inbounds i8* %80, i64 %.sum.i
  %90 = bitcast i8* %89 to i32*
  store i32 %88, i32* %90, align 4, !tbaa !15
  br label %91

; <label>:91                                      ; preds = %43, %28, %.thread
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %ra, %struct.lua_TValue.215* %rb, %struct.lua_TValue.215* %rc, i32 %op) #0 {
  %num.i1 = alloca double, align 8
  %num.i = alloca double, align 8
  %tempb = alloca %struct.lua_TValue.215, align 8
  %1 = bitcast double* %num.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %1) #3
  %2 = getelementptr inbounds %struct.lua_TValue.215* %rb, i64 0, i32 1
  %3 = load i32* %2, align 4, !tbaa !15
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %22, label %5

; <label>:5                                       ; preds = %0
  %6 = and i32 %3, 15
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %8, label %luaV_tonumber.exit.thread

; <label>:8                                       ; preds = %5
  %9 = getelementptr inbounds %struct.lua_TValue.215* %rb, i64 0, i32 0, i32 0
  %10 = load %union.GCObject.229** %9, align 8, !tbaa !25
  %11 = getelementptr inbounds %union.GCObject.229* %10, i64 0, i32 0, i32 5
  %12 = bitcast %struct.global_State.223** %11 to i8*
  %13 = getelementptr inbounds %union.GCObject.229* %10, i64 0, i32 0, i32 4
  %14 = bitcast %struct.lua_TValue.215** %13 to i64*
  %15 = load i64* %14, align 8, !tbaa !34
  %16 = call i32 @luaO_str2d(i8* %12, i64 %15, double* %num.i) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %luaV_tonumber.exit.thread, label %18

; <label>:18                                      ; preds = %8
  %19 = load double* %num.i, align 8, !tbaa !30
  %20 = bitcast %struct.lua_TValue.215* %tempb to double*
  store double %19, double* %20, align 8, !tbaa !30
  %21 = getelementptr inbounds %struct.lua_TValue.215* %tempb, i64 0, i32 1
  store i32 3, i32* %21, align 8, !tbaa !15
  br label %22

; <label>:22                                      ; preds = %18, %0
  %.0.i.ph = phi %struct.lua_TValue.215* [ %tempb, %18 ], [ %rb, %0 ]
  call void @llvm.lifetime.end(i64 8, i8* %1) #3
  %23 = bitcast double* %num.i1 to i8*
  call void @llvm.lifetime.start(i64 8, i8* %23) #3
  %24 = getelementptr inbounds %struct.lua_TValue.215* %rc, i64 0, i32 1
  %25 = load i32* %24, align 4, !tbaa !15
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %luaV_tonumber.exit3, label %27

; <label>:27                                      ; preds = %22
  %28 = and i32 %25, 15
  %29 = icmp eq i32 %28, 4
  br i1 %29, label %30, label %luaV_tonumber.exit.thread

; <label>:30                                      ; preds = %27
  %31 = getelementptr inbounds %struct.lua_TValue.215* %rc, i64 0, i32 0, i32 0
  %32 = load %union.GCObject.229** %31, align 8, !tbaa !25
  %33 = getelementptr inbounds %union.GCObject.229* %32, i64 0, i32 0, i32 5
  %34 = bitcast %struct.global_State.223** %33 to i8*
  %35 = getelementptr inbounds %union.GCObject.229* %32, i64 0, i32 0, i32 4
  %36 = bitcast %struct.lua_TValue.215** %35 to i64*
  %37 = load i64* %36, align 8, !tbaa !34
  %38 = call i32 @luaO_str2d(i8* %34, i64 %37, double* %num.i1) #3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %luaV_tonumber.exit.thread, label %luaV_tonumber.exit3.thread8

luaV_tonumber.exit3.thread8:                      ; preds = %30
  %40 = load double* %num.i1, align 8, !tbaa !30
  call void @llvm.lifetime.end(i64 8, i8* %23) #3
  br label %42

luaV_tonumber.exit3:                              ; preds = %22
  call void @llvm.lifetime.end(i64 8, i8* %23) #3
  %41 = icmp eq %struct.lua_TValue.215* %rc, null
  br i1 %41, label %luaV_tonumber.exit.thread, label %luaV_tonumber.exit3._crit_edge

luaV_tonumber.exit3._crit_edge:                   ; preds = %luaV_tonumber.exit3
  %.phi.trans.insert = bitcast %struct.lua_TValue.215* %rc to double*
  %.pre = load double* %.phi.trans.insert, align 8, !tbaa !30
  br label %42

; <label>:42                                      ; preds = %luaV_tonumber.exit3._crit_edge, %luaV_tonumber.exit3.thread8
  %43 = phi double [ %40, %luaV_tonumber.exit3.thread8 ], [ %.pre, %luaV_tonumber.exit3._crit_edge ]
  %44 = add i32 %op, -6
  %45 = bitcast %struct.lua_TValue.215* %.0.i.ph to double*
  %46 = load double* %45, align 8, !tbaa !30
  %47 = call double @luaO_arith(i32 %44, double %46, double %43) #3
  %48 = bitcast %struct.lua_TValue.215* %ra to double*
  store double %47, double* %48, align 8, !tbaa !30
  %49 = getelementptr inbounds %struct.lua_TValue.215* %ra, i64 0, i32 1
  store i32 3, i32* %49, align 4, !tbaa !15
  br label %107

luaV_tonumber.exit.thread:                        ; preds = %luaV_tonumber.exit3, %30, %27, %8, %5
  %50 = call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %rb, i32 %op) #3
  %51 = getelementptr inbounds %struct.lua_TValue.215* %50, i64 0, i32 1
  %52 = load i32* %51, align 4, !tbaa !15
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %call_binTM.exit

; <label>:54                                      ; preds = %luaV_tonumber.exit.thread
  %55 = call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %rc, i32 %op) #3
  %.phi.trans.insert.i = getelementptr inbounds %struct.lua_TValue.215* %55, i64 0, i32 1
  %.pre.i = load i32* %.phi.trans.insert.i, align 4, !tbaa !15
  %56 = icmp eq i32 %.pre.i, 0
  br i1 %56, label %106, label %call_binTM.exit

call_binTM.exit:                                  ; preds = %54, %luaV_tonumber.exit.thread
  %tm.01.i = phi %struct.lua_TValue.215* [ %55, %54 ], [ %50, %luaV_tonumber.exit.thread ]
  %57 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 9
  %58 = load %struct.lua_TValue.215** %57, align 8, !tbaa !13
  %59 = ptrtoint %struct.lua_TValue.215* %ra to i64
  %60 = ptrtoint %struct.lua_TValue.215* %58 to i64
  %61 = sub i64 %59, %60
  %62 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %63 = load %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %64 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 1
  store %struct.lua_TValue.215* %64, %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %65 = bitcast %struct.lua_TValue.215* %tm.01.i to i64*
  %66 = load i64* %65, align 8
  %67 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 0, i32 0, i32 0
  %.c.i = inttoptr i64 %66 to %union.GCObject.229*
  store %union.GCObject.229* %.c.i, %union.GCObject.229** %67, align 8
  %68 = getelementptr inbounds %struct.lua_TValue.215* %tm.01.i, i64 0, i32 1
  %69 = load i32* %68, align 4, !tbaa !15
  %70 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 0, i32 1
  store i32 %69, i32* %70, align 4, !tbaa !15
  %71 = load %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %72 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 1
  store %struct.lua_TValue.215* %72, %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %73 = bitcast %struct.lua_TValue.215* %rb to i64*
  %74 = load i64* %73, align 8
  %75 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 0, i32 0, i32 0
  %.c9.i = inttoptr i64 %74 to %union.GCObject.229*
  store %union.GCObject.229* %.c9.i, %union.GCObject.229** %75, align 8
  %76 = load i32* %2, align 4, !tbaa !15
  %77 = getelementptr inbounds %struct.lua_TValue.215* %71, i64 0, i32 1
  store i32 %76, i32* %77, align 4, !tbaa !15
  %78 = load %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %79 = getelementptr inbounds %struct.lua_TValue.215* %78, i64 1
  store %struct.lua_TValue.215* %79, %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %80 = bitcast %struct.lua_TValue.215* %rc to i64*
  %81 = load i64* %80, align 8
  %82 = getelementptr inbounds %struct.lua_TValue.215* %78, i64 0, i32 0, i32 0
  %.c10.i = inttoptr i64 %81 to %union.GCObject.229*
  store %union.GCObject.229* %.c10.i, %union.GCObject.229** %82, align 8
  %83 = getelementptr inbounds %struct.lua_TValue.215* %rc, i64 0, i32 1
  %84 = load i32* %83, align 4, !tbaa !15
  %85 = getelementptr inbounds %struct.lua_TValue.215* %78, i64 0, i32 1
  store i32 %84, i32* %85, align 4, !tbaa !15
  %86 = load %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %87 = getelementptr inbounds %struct.lua_TValue.215* %86, i64 -3
  %88 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %89 = load %struct.CallInfo.225** %88, align 8, !tbaa !5
  %90 = getelementptr inbounds %struct.CallInfo.225* %89, i64 0, i32 5
  %91 = load i8* %90, align 1, !tbaa !46
  %92 = zext i8 %91 to i32
  %93 = and i32 %92, 1
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %87, i32 1, i32 %93) #3
  %94 = load %struct.lua_TValue.215** %57, align 8, !tbaa !13
  %95 = bitcast %struct.lua_TValue.215* %94 to i8*
  %96 = getelementptr inbounds i8* %95, i64 %61
  %97 = load %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %98 = getelementptr inbounds %struct.lua_TValue.215* %97, i64 -1
  store %struct.lua_TValue.215* %98, %struct.lua_TValue.215** %62, align 8, !tbaa !12
  %99 = bitcast %struct.lua_TValue.215* %98 to i64*
  %100 = bitcast i8* %96 to i64*
  %101 = load i64* %99, align 8
  store i64 %101, i64* %100, align 8
  %102 = getelementptr inbounds %struct.lua_TValue.215* %97, i64 -1, i32 1
  %103 = load i32* %102, align 4, !tbaa !15
  %.sum.i = add i64 %61, 8
  %104 = getelementptr inbounds i8* %95, i64 %.sum.i
  %105 = bitcast i8* %104 to i32*
  store i32 %103, i32* %105, align 4, !tbaa !15
  br label %107

; <label>:106                                     ; preds = %54
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, %struct.lua_TValue*)* @luaG_aritherror to void (%struct.lua_State.228*, %struct.lua_TValue.215*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %rb, %struct.lua_TValue.215* %rc) #13
  unreachable

; <label>:107                                     ; preds = %call_binTM.exit, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_finishOp(%struct.lua_State.228* %L) #0 {
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %2 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.CallInfo.225* %2, i64 0, i32 7
  %4 = bitcast %union.anon.224* %3 to %struct.lua_TValue.215**
  %5 = load %struct.lua_TValue.215** %4, align 8, !tbaa !136
  %6 = getelementptr inbounds %struct.CallInfo.225* %2, i64 0, i32 7, i32 0, i32 1
  %7 = load {}** %6, align 8
  %8 = bitcast {}* %7 to i32*
  %9 = getelementptr inbounds i32* %8, i64 -1
  %10 = load i32* %9, align 4, !tbaa !1
  %11 = and i32 %10, 63
  switch i32 %11, label %107 [
    i32 13, label %12
    i32 14, label %12
    i32 15, label %12
    i32 16, label %12
    i32 17, label %12
    i32 18, label %12
    i32 19, label %12
    i32 21, label %12
    i32 6, label %12
    i32 7, label %12
    i32 12, label %12
    i32 26, label %25
    i32 25, label %25
    i32 24, label %25
    i32 22, label %60
    i32 34, label %96
    i32 29, label %100
  ]

; <label>:12                                      ; preds = %0, %0, %0, %0, %0, %0, %0, %0, %0, %0, %0
  %13 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %14 = load %struct.lua_TValue.215** %13, align 8, !tbaa !12
  %15 = getelementptr inbounds %struct.lua_TValue.215* %14, i64 -1
  store %struct.lua_TValue.215* %15, %struct.lua_TValue.215** %13, align 8, !tbaa !12
  %16 = lshr i32 %10, 6
  %17 = and i32 %16, 255
  %18 = zext i32 %17 to i64
  %19 = bitcast %struct.lua_TValue.215* %15 to i64*
  %20 = load i64* %19, align 8
  %21 = getelementptr inbounds %struct.lua_TValue.215* %5, i64 %18, i32 0, i32 0
  %.c7 = inttoptr i64 %20 to %union.GCObject.229*
  store %union.GCObject.229* %.c7, %union.GCObject.229** %21, align 8
  %22 = getelementptr inbounds %struct.lua_TValue.215* %14, i64 -1, i32 1
  %23 = load i32* %22, align 4, !tbaa !15
  %24 = getelementptr inbounds %struct.lua_TValue.215* %5, i64 %18, i32 1
  store i32 %23, i32* %24, align 4, !tbaa !15
  br label %107

; <label>:25                                      ; preds = %0, %0, %0
  %26 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %27 = load %struct.lua_TValue.215** %26, align 8, !tbaa !12
  %28 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 -1, i32 1
  %29 = load i32* %28, align 4, !tbaa !15
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %38, label %31

; <label>:31                                      ; preds = %25
  %32 = icmp eq i32 %29, 1
  br i1 %32, label %33, label %38

; <label>:33                                      ; preds = %31
  %34 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 -1, i32 0
  %35 = bitcast %union.Value.230* %34 to i32*
  %36 = load i32* %35, align 4, !tbaa !1
  %37 = icmp eq i32 %36, 0
  br label %38

; <label>:38                                      ; preds = %33, %31, %25
  %39 = phi i1 [ true, %25 ], [ false, %31 ], [ %37, %33 ]
  %40 = zext i1 %39 to i32
  %41 = xor i32 %40, 1
  %42 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 -1
  store %struct.lua_TValue.215* %42, %struct.lua_TValue.215** %26, align 8, !tbaa !12
  %43 = icmp eq i32 %11, 26
  br i1 %43, label %44, label %52

; <label>:44                                      ; preds = %38
  %45 = lshr i32 %10, 23
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %struct.lua_TValue.215* %5, i64 %46
  %48 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaT_gettmbyobj to %struct.lua_TValue.215* (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %47, i32 14) #3
  %49 = getelementptr inbounds %struct.lua_TValue.215* %48, i64 0, i32 1
  %50 = load i32* %49, align 4, !tbaa !15
  %51 = icmp eq i32 %50, 0
  %. = select i1 %51, i32 %40, i32 %41
  br label %52

; <label>:52                                      ; preds = %44, %38
  %res.0 = phi i32 [ %41, %38 ], [ %., %44 ]
  %53 = lshr i32 %10, 6
  %54 = and i32 %53, 255
  %55 = icmp eq i32 %res.0, %54
  br i1 %55, label %107, label %56

; <label>:56                                      ; preds = %52
  %57 = load {}** %6, align 8
  %58 = bitcast {}* %57 to i32*
  %59 = getelementptr inbounds i32* %58, i64 1
  %.c6 = bitcast i32* %59 to {}*
  store {}* %.c6, {}** %6, align 8, !tbaa !147
  br label %107

; <label>:60                                      ; preds = %0
  %61 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %62 = load %struct.lua_TValue.215** %61, align 8, !tbaa !12
  %63 = getelementptr inbounds %struct.lua_TValue.215* %62, i64 -1
  %64 = lshr i32 %10, 23
  %65 = getelementptr inbounds %struct.lua_TValue.215* %62, i64 -2
  %66 = zext i32 %64 to i64
  %67 = getelementptr inbounds %struct.lua_TValue.215* %5, i64 %66
  %68 = ptrtoint %struct.lua_TValue.215* %65 to i64
  %69 = ptrtoint %struct.lua_TValue.215* %67 to i64
  %70 = sub i64 %68, %69
  %71 = lshr exact i64 %70, 4
  %72 = trunc i64 %71 to i32
  %73 = bitcast %struct.lua_TValue.215* %63 to i64*
  %74 = load i64* %73, align 8
  %75 = getelementptr inbounds %struct.lua_TValue.215* %62, i64 -3, i32 0, i32 0
  %.c = inttoptr i64 %74 to %union.GCObject.229*
  store %union.GCObject.229* %.c, %union.GCObject.229** %75, align 8
  %76 = getelementptr inbounds %struct.lua_TValue.215* %62, i64 -1, i32 1
  %77 = load i32* %76, align 4, !tbaa !15
  %78 = getelementptr inbounds %struct.lua_TValue.215* %62, i64 -3, i32 1
  store i32 %77, i32* %78, align 4, !tbaa !15
  %79 = icmp sgt i32 %72, 1
  br i1 %79, label %80, label %81

; <label>:80                                      ; preds = %60
  store %struct.lua_TValue.215* %65, %struct.lua_TValue.215** %61, align 8, !tbaa !12
  tail call void @luaV_concat(%struct.lua_State.228* %L, i32 %72)
  br label %81

; <label>:81                                      ; preds = %80, %60
  %82 = load %struct.lua_TValue.215** %61, align 8, !tbaa !12
  %83 = getelementptr inbounds %struct.lua_TValue.215* %82, i64 -1
  %84 = load %struct.lua_TValue.215** %4, align 8, !tbaa !136
  %85 = lshr i32 %10, 6
  %86 = and i32 %85, 255
  %87 = zext i32 %86 to i64
  %88 = bitcast %struct.lua_TValue.215* %83 to i64*
  %89 = load i64* %88, align 8
  %90 = getelementptr inbounds %struct.lua_TValue.215* %84, i64 %87, i32 0, i32 0
  %.c5 = inttoptr i64 %89 to %union.GCObject.229*
  store %union.GCObject.229* %.c5, %union.GCObject.229** %90, align 8
  %91 = getelementptr inbounds %struct.lua_TValue.215* %82, i64 -1, i32 1
  %92 = load i32* %91, align 4, !tbaa !15
  %93 = getelementptr inbounds %struct.lua_TValue.215* %84, i64 %87, i32 1
  store i32 %92, i32* %93, align 4, !tbaa !15
  %94 = getelementptr inbounds %struct.CallInfo.225* %2, i64 0, i32 1
  %95 = load %struct.lua_TValue.215** %94, align 8, !tbaa !14
  store %struct.lua_TValue.215* %95, %struct.lua_TValue.215** %61, align 8, !tbaa !12
  br label %107

; <label>:96                                      ; preds = %0
  %97 = getelementptr inbounds %struct.CallInfo.225* %2, i64 0, i32 1
  %98 = load %struct.lua_TValue.215** %97, align 8, !tbaa !14
  %99 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  store %struct.lua_TValue.215* %98, %struct.lua_TValue.215** %99, align 8, !tbaa !12
  br label %107

; <label>:100                                     ; preds = %0
  %101 = and i32 %10, 8372224
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %107, label %103

; <label>:103                                     ; preds = %100
  %104 = getelementptr inbounds %struct.CallInfo.225* %2, i64 0, i32 1
  %105 = load %struct.lua_TValue.215** %104, align 8, !tbaa !14
  %106 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  store %struct.lua_TValue.215* %105, %struct.lua_TValue.215** %106, align 8, !tbaa !12
  br label %107

; <label>:107                                     ; preds = %103, %100, %96, %81, %56, %52, %12, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaV_execute(%struct.lua_State.228* %L) #0 {
  %num.i156 = alloca double, align 8
  %num.i153 = alloca double, align 8
  %num.i = alloca double, align 8
  %1 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 6
  %2 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %3 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 13
  %4 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %5 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 4
  %6 = bitcast double* %num.i156 to i8*
  %7 = bitcast double* %num.i153 to i8*
  %8 = bitcast double* %num.i to i8*
  %9 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 8
  %10 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 16
  %11 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 7
  %12 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 3
  %13 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 15
  br label %.backedge207

.backedge207:                                     ; preds = %1076, %1073, %._crit_edge206, %978, %0
  %ci.0 = phi %struct.CallInfo.225* [ %2, %0 ], [ %1074, %1076 ], [ %1074, %1073 ], [ %997, %._crit_edge206 ], [ %979, %978 ]
  %14 = getelementptr inbounds %struct.CallInfo.225* %ci.0, i64 0, i32 0
  %15 = load %struct.lua_TValue.215** %14, align 8, !tbaa !24
  %16 = getelementptr inbounds %struct.lua_TValue.215* %15, i64 0, i32 0, i32 0
  %17 = load %union.GCObject.229** %16, align 8, !tbaa !25
  %18 = getelementptr inbounds %union.GCObject.229* %17, i64 0, i32 0, i32 5
  %19 = load %struct.global_State.223** %18, align 8
  %20 = getelementptr inbounds %struct.global_State.223* %19, i64 0, i32 2
  %21 = bitcast i64* %20 to %struct.lua_TValue.215**
  %22 = load %struct.lua_TValue.215** %21, align 8, !tbaa !109
  %23 = getelementptr inbounds %struct.CallInfo.225* %ci.0, i64 0, i32 7
  %24 = bitcast %union.anon.224* %23 to %struct.lua_TValue.215**
  %25 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %26 = getelementptr inbounds %struct.CallInfo.225* %ci.0, i64 0, i32 7, i32 0, i32 1
  %27 = getelementptr inbounds %union.GCObject.229* %17, i64 0, i32 0, i32 6
  %28 = bitcast %struct.CallInfo.225** %27 to [1 x %struct.UpVal.217*]*
  %29 = getelementptr inbounds %struct.CallInfo.225* %ci.0, i64 0, i32 1
  br label %.backedge

.backedge:                                        ; preds = %1420, %1404, %1371, %._crit_edge, %1218, %1214, %luaV_tonumber.exit158.thread167, %1094, %1092, %1090, %992, %976, %953, %934, %904, %889, %867, %817, %767, %702, %694, %661, %656, %641, %635, %626, %618, %583, %572, %537, %529, %494, %486, %451, %443, %408, %400, %364, %341, %317, %291, %286, %279, %263, %260, %229, %211, %180, %175, %169, %163, %149, %139, %129, %123, %.backedge207
  %base.0 = phi %struct.lua_TValue.215* [ %25, %.backedge207 ], [ %base.1, %123 ], [ %1372, %1371 ], [ %base.1, %._crit_edge ], [ %base.2, %1214 ], [ %base.2, %1218 ], [ %base.1, %luaV_tonumber.exit158.thread167 ], [ %base.1, %1094 ], [ %base.1, %1090 ], [ %base.1, %1092 ], [ %993, %992 ], [ %977, %976 ], [ %base.1, %934 ], [ %base.1, %953 ], [ %base.1, %889 ], [ %base.1, %904 ], [ %868, %867 ], [ %818, %817 ], [ %768, %767 ], [ %base.1, %702 ], [ %696, %694 ], [ %665, %661 ], [ %base.1, %656 ], [ %base.1, %635 ], [ %642, %641 ], [ %base.1, %618 ], [ %627, %626 ], [ %base.1, %572 ], [ %584, %583 ], [ %base.1, %529 ], [ %538, %537 ], [ %base.1, %486 ], [ %495, %494 ], [ %base.1, %443 ], [ %452, %451 ], [ %base.1, %400 ], [ %409, %408 ], [ %366, %364 ], [ %342, %341 ], [ %319, %317 ], [ %base.1, %291 ], [ %base.1, %286 ], [ %base.1, %279 ], [ %base.1, %263 ], [ %262, %260 ], [ %231, %229 ], [ %213, %211 ], [ %base.1, %180 ], [ %base.1, %169 ], [ %base.1, %163 ], [ %base.1, %149 ], [ %base.1, %139 ], [ %base.1, %129 ], [ %base.3, %1404 ], [ %base.3, %1420 ], [ %base.1, %175 ]
  %30 = load {}** %26, align 8
  %31 = bitcast {}* %30 to i32*
  %32 = getelementptr inbounds i32* %31, i64 1
  %.c = bitcast i32* %32 to {}*
  store {}* %.c, {}** %26, align 8, !tbaa !147
  %33 = load i32* %31, align 4, !tbaa !1
  %34 = load i8* %3, align 1, !tbaa !115
  %35 = and i8 %34, 12
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %123, label %37

; <label>:37                                      ; preds = %.backedge
  %38 = load i32* %10, align 4, !tbaa !114
  %39 = add nsw i32 %38, -1
  store i32 %39, i32* %10, align 4, !tbaa !114
  %40 = icmp eq i32 %39, 0
  %.not = xor i1 %40, true
  %41 = and i8 %34, 4
  %42 = icmp eq i8 %41, 0
  %or.cond = and i1 %42, %.not
  br i1 %or.cond, label %123, label %43

; <label>:43                                      ; preds = %37
  %44 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %45 = zext i8 %34 to i32
  %46 = and i32 %45, 8
  %47 = icmp eq i32 %46, 0
  %.not249 = xor i1 %40, true
  %brmerge = or i1 %47, %.not249
  br i1 %brmerge, label %.thread.i, label %48

; <label>:48                                      ; preds = %43
  %49 = load i32* %13, align 4, !tbaa !113
  store i32 %49, i32* %10, align 4, !tbaa !114
  br label %.thread.i

.thread.i:                                        ; preds = %48, %43
  %50 = phi i1 [ true, %48 ], [ false, %43 ]
  %51 = getelementptr inbounds %struct.CallInfo.225* %44, i64 0, i32 5
  %52 = load i8* %51, align 1, !tbaa !46
  %53 = icmp sgt i8 %52, -1
  br i1 %53, label %56, label %54

; <label>:54                                      ; preds = %.thread.i
  %55 = and i8 %52, 127
  store i8 %55, i8* %51, align 1, !tbaa !46
  br label %traceexec.exit

; <label>:56                                      ; preds = %.thread.i
  br i1 %50, label %57, label %58

; <label>:57                                      ; preds = %56
  call void bitcast (void (%struct.lua_State*, i32, i32)* @luaD_hook to void (%struct.lua_State.228*, i32, i32)*)(%struct.lua_State.228* %L, i32 3, i32 -1) #3
  br label %58

; <label>:58                                      ; preds = %57, %56
  %59 = and i32 %45, 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %._crit_edge.i, label %61

._crit_edge.i:                                    ; preds = %58
  %.pre.i = getelementptr inbounds %struct.CallInfo.225* %44, i64 0, i32 7, i32 0, i32 1
  br label %106

; <label>:61                                      ; preds = %58
  %62 = getelementptr inbounds %struct.CallInfo.225* %44, i64 0, i32 0
  %63 = load %struct.lua_TValue.215** %62, align 8, !tbaa !24
  %64 = getelementptr inbounds %struct.lua_TValue.215* %63, i64 0, i32 0, i32 0
  %65 = load %union.GCObject.229** %64, align 8, !tbaa !25
  %66 = getelementptr inbounds %union.GCObject.229* %65, i64 0, i32 0, i32 5
  %67 = load %struct.global_State.223** %66, align 8
  %68 = getelementptr inbounds %struct.CallInfo.225* %44, i64 0, i32 7, i32 0, i32 1
  %69 = load {}** %68, align 8
  %70 = getelementptr inbounds %struct.global_State.223* %67, i64 0, i32 3
  %71 = bitcast i64* %70 to i32**
  %72 = load i32** %71, align 8, !tbaa !83
  %73 = ptrtoint {}* %69 to i64
  %74 = ptrtoint i32* %72 to i64
  %75 = sub i64 %73, %74
  %76 = lshr exact i64 %75, 2
  %77 = trunc i64 %76 to i32
  %78 = add nsw i32 %77, -1
  %79 = getelementptr inbounds %struct.global_State.223* %67, i64 0, i32 5
  %80 = bitcast i64* %79 to i32**
  %81 = load i32** %80, align 8, !tbaa !105
  %82 = icmp eq i32* %81, null
  br i1 %82, label %87, label %83

; <label>:83                                      ; preds = %61
  %84 = sext i32 %78 to i64
  %85 = getelementptr inbounds i32* %81, i64 %84
  %86 = load i32* %85, align 4, !tbaa !1
  br label %87

; <label>:87                                      ; preds = %83, %61
  %88 = phi i32 [ %86, %83 ], [ 0, %61 ]
  %89 = icmp eq i32 %78, 0
  br i1 %89, label %105, label %90

; <label>:90                                      ; preds = %87
  %91 = bitcast {}* %69 to i32*
  %92 = load i32** %11, align 8, !tbaa !111
  %93 = icmp ugt i32* %91, %92
  br i1 %93, label %94, label %105

; <label>:94                                      ; preds = %90
  br i1 %82, label %102, label %95

; <label>:95                                      ; preds = %94
  %96 = ptrtoint i32* %92 to i64
  %97 = sub i64 %96, %74
  %98 = shl i64 %97, 30
  %sext.i = add i64 %98, -4294967296
  %99 = ashr exact i64 %sext.i, 32
  %100 = getelementptr inbounds i32* %81, i64 %99
  %101 = load i32* %100, align 4, !tbaa !1
  br label %102

; <label>:102                                     ; preds = %95, %94
  %103 = phi i32 [ %101, %95 ], [ 0, %94 ]
  %104 = icmp eq i32 %88, %103
  br i1 %104, label %106, label %105

; <label>:105                                     ; preds = %102, %90, %87
  call void bitcast (void (%struct.lua_State*, i32, i32)* @luaD_hook to void (%struct.lua_State.228*, i32, i32)*)(%struct.lua_State.228* %L, i32 2, i32 %88) #3
  br label %106

; <label>:106                                     ; preds = %105, %102, %._crit_edge.i
  %.pre-phi.i = phi {}** [ %.pre.i, %._crit_edge.i ], [ %68, %102 ], [ %68, %105 ]
  %107 = load {}** %.pre-phi.i, align 8
  %108 = bitcast {}* %107 to i32*
  store i32* %108, i32** %11, align 8, !tbaa !111
  %109 = load i8* %12, align 1, !tbaa !62
  %110 = icmp eq i8 %109, 1
  br i1 %110, label %111, label %traceexec.exit

; <label>:111                                     ; preds = %106
  br i1 %50, label %112, label %113

; <label>:112                                     ; preds = %111
  store i32 1, i32* %10, align 4, !tbaa !114
  br label %113

; <label>:113                                     ; preds = %112, %111
  %114 = load {}** %.pre-phi.i, align 8
  %115 = bitcast {}* %114 to i32*
  %116 = getelementptr inbounds i32* %115, i64 -1
  %.c.i = bitcast i32* %116 to {}*
  store {}* %.c.i, {}** %.pre-phi.i, align 8, !tbaa !147
  %117 = load i8* %51, align 1, !tbaa !46
  %118 = or i8 %117, -128
  store i8 %118, i8* %51, align 1, !tbaa !46
  %119 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %120 = getelementptr inbounds %struct.lua_TValue.215* %119, i64 -1
  %121 = getelementptr inbounds %struct.CallInfo.225* %44, i64 0, i32 0
  store %struct.lua_TValue.215* %120, %struct.lua_TValue.215** %121, align 8, !tbaa !24
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_throw to void (%struct.lua_State.228*, i32)*)(%struct.lua_State.228* %L, i32 1) #13
  unreachable

traceexec.exit:                                   ; preds = %106, %54
  %122 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %123

; <label>:123                                     ; preds = %traceexec.exit, %37, %.backedge
  %base.1 = phi %struct.lua_TValue.215* [ %122, %traceexec.exit ], [ %base.0, %.backedge ], [ %base.0, %37 ]
  %124 = lshr i32 %33, 6
  %125 = and i32 %124, 255
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126
  %128 = and i32 %33, 63
  switch i32 %128, label %.backedge [
    i32 0, label %129
    i32 1, label %139
    i32 2, label %149
    i32 3, label %163
    i32 4, label %173
    i32 5, label %180
    i32 6, label %193
    i32 7, label %214
    i32 8, label %232
    i32 9, label %263
    i32 10, label %293
    i32 11, label %320
    i32 12, label %343
    i32 13, label %367
    i32 14, label %410
    i32 15, label %453
    i32 16, label %496
    i32 17, label %539
    i32 18, label %585
    i32 19, label %628
    i32 20, label %643
    i32 21, label %661
    i32 22, label %666
    i32 23, label %697
    i32 24, label %709
    i32 25, label %769
    i32 26, label %819
    i32 27, label %869
    i32 28, label %911
    i32 29, label %960
    i32 30, label %983
    i32 31, label %1053
    i32 32, label %1079
    i32 33, label %1105
    i32 34, label %1179
    i32 35, label %1214
    i32 36, label %1230
    i32 37, label %1289
    i32 38, label %1373
  ]

; <label>:129                                     ; preds = %123
  %130 = lshr i32 %33, 23
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %131
  %133 = bitcast %struct.lua_TValue.215* %132 to i64*
  %134 = load i64* %133, align 8
  %135 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %.c152 = inttoptr i64 %134 to %union.GCObject.229*
  store %union.GCObject.229* %.c152, %union.GCObject.229** %135, align 8
  %136 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %131, i32 1
  %137 = load i32* %136, align 4, !tbaa !15
  %138 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 %137, i32* %138, align 4, !tbaa !15
  br label %.backedge

; <label>:139                                     ; preds = %123
  %140 = lshr i32 %33, 14
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %141
  %143 = bitcast %struct.lua_TValue.215* %142 to i64*
  %144 = load i64* %143, align 8
  %145 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %.c151 = inttoptr i64 %144 to %union.GCObject.229*
  store %union.GCObject.229* %.c151, %union.GCObject.229** %145, align 8
  %146 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %141, i32 1
  %147 = load i32* %146, align 4, !tbaa !15
  %148 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 %147, i32* %148, align 4, !tbaa !15
  br label %.backedge

; <label>:149                                     ; preds = %123
  %150 = load {}** %26, align 8
  %151 = bitcast {}* %150 to i32*
  %152 = getelementptr inbounds i32* %151, i64 1
  %.c149 = bitcast i32* %152 to {}*
  store {}* %.c149, {}** %26, align 8, !tbaa !147
  %153 = load i32* %151, align 4, !tbaa !1
  %154 = lshr i32 %153, 6
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %155
  %157 = bitcast %struct.lua_TValue.215* %156 to i64*
  %158 = load i64* %157, align 8
  %159 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %.c150 = inttoptr i64 %158 to %union.GCObject.229*
  store %union.GCObject.229* %.c150, %union.GCObject.229** %159, align 8
  %160 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %155, i32 1
  %161 = load i32* %160, align 4, !tbaa !15
  %162 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 %161, i32* %162, align 4, !tbaa !15
  br label %.backedge

; <label>:163                                     ; preds = %123
  %164 = lshr i32 %33, 23
  %165 = bitcast %struct.lua_TValue.215* %127 to i32*
  store i32 %164, i32* %165, align 4, !tbaa !1
  %166 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 1, i32* %166, align 4, !tbaa !15
  %167 = and i32 %33, 8372224
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %.backedge, label %169

; <label>:169                                     ; preds = %163
  %170 = load {}** %26, align 8
  %171 = bitcast {}* %170 to i32*
  %172 = getelementptr inbounds i32* %171, i64 1
  %.c148 = bitcast i32* %172 to {}*
  store {}* %.c148, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:173                                     ; preds = %123
  %174 = lshr i32 %33, 23
  br label %175

; <label>:175                                     ; preds = %175, %173
  %b.0 = phi i32 [ %174, %173 ], [ %178, %175 ]
  %ra.0 = phi %struct.lua_TValue.215* [ %127, %173 ], [ %176, %175 ]
  %176 = getelementptr inbounds %struct.lua_TValue.215* %ra.0, i64 1
  %177 = getelementptr inbounds %struct.lua_TValue.215* %ra.0, i64 0, i32 1
  store i32 0, i32* %177, align 4, !tbaa !15
  %178 = add nsw i32 %b.0, -1
  %179 = icmp eq i32 %b.0, 0
  br i1 %179, label %.backedge, label %175

; <label>:180                                     ; preds = %123
  %181 = lshr i32 %33, 23
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds [1 x %struct.UpVal.217*]* %28, i64 0, i64 %182
  %184 = load %struct.UpVal.217** %183, align 8, !tbaa !25
  %185 = getelementptr inbounds %struct.UpVal.217* %184, i64 0, i32 3
  %186 = load %struct.lua_TValue.215** %185, align 8, !tbaa !75
  %187 = bitcast %struct.lua_TValue.215* %186 to i64*
  %188 = load i64* %187, align 8
  %189 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %.c147 = inttoptr i64 %188 to %union.GCObject.229*
  store %union.GCObject.229* %.c147, %union.GCObject.229** %189, align 8
  %190 = getelementptr inbounds %struct.lua_TValue.215* %186, i64 0, i32 1
  %191 = load i32* %190, align 4, !tbaa !15
  %192 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 %191, i32* %192, align 4, !tbaa !15
  br label %.backedge

; <label>:193                                     ; preds = %123
  %194 = lshr i32 %33, 23
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds [1 x %struct.UpVal.217*]* %28, i64 0, i64 %195
  %197 = load %struct.UpVal.217** %196, align 8, !tbaa !25
  %198 = getelementptr inbounds %struct.UpVal.217* %197, i64 0, i32 3
  %199 = load %struct.lua_TValue.215** %198, align 8, !tbaa !75
  %200 = lshr i32 %33, 14
  %201 = and i32 %200, 256
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %207, label %203

; <label>:203                                     ; preds = %193
  %204 = and i32 %200, 255
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %205
  br label %211

; <label>:207                                     ; preds = %193
  %208 = and i32 %200, 511
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %209
  br label %211

; <label>:211                                     ; preds = %207, %203
  %212 = phi %struct.lua_TValue.215* [ %206, %203 ], [ %210, %207 ]
  call void @luaV_gettable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %199, %struct.lua_TValue.215* %212, %struct.lua_TValue.215* %127)
  %213 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:214                                     ; preds = %123
  %215 = lshr i32 %33, 23
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %216
  %218 = lshr i32 %33, 14
  %219 = and i32 %218, 256
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %225, label %221

; <label>:221                                     ; preds = %214
  %222 = and i32 %218, 255
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %223
  br label %229

; <label>:225                                     ; preds = %214
  %226 = and i32 %218, 511
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %227
  br label %229

; <label>:229                                     ; preds = %225, %221
  %230 = phi %struct.lua_TValue.215* [ %224, %221 ], [ %228, %225 ]
  call void @luaV_gettable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %217, %struct.lua_TValue.215* %230, %struct.lua_TValue.215* %127)
  %231 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:232                                     ; preds = %123
  %233 = getelementptr inbounds [1 x %struct.UpVal.217*]* %28, i64 0, i64 %126
  %234 = load %struct.UpVal.217** %233, align 8, !tbaa !25
  %235 = getelementptr inbounds %struct.UpVal.217* %234, i64 0, i32 3
  %236 = load %struct.lua_TValue.215** %235, align 8, !tbaa !75
  %237 = lshr i32 %33, 23
  %238 = and i32 %237, 256
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %244, label %240

; <label>:240                                     ; preds = %232
  %241 = and i32 %237, 255
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %242
  br label %247

; <label>:244                                     ; preds = %232
  %245 = zext i32 %237 to i64
  %246 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %245
  br label %247

; <label>:247                                     ; preds = %244, %240
  %248 = phi %struct.lua_TValue.215* [ %243, %240 ], [ %246, %244 ]
  %249 = lshr i32 %33, 14
  %250 = and i32 %249, 256
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %256, label %252

; <label>:252                                     ; preds = %247
  %253 = and i32 %249, 255
  %254 = zext i32 %253 to i64
  %255 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %254
  br label %260

; <label>:256                                     ; preds = %247
  %257 = and i32 %249, 511
  %258 = zext i32 %257 to i64
  %259 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %258
  br label %260

; <label>:260                                     ; preds = %256, %252
  %261 = phi %struct.lua_TValue.215* [ %255, %252 ], [ %259, %256 ]
  call void @luaV_settable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %236, %struct.lua_TValue.215* %248, %struct.lua_TValue.215* %261)
  %262 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:263                                     ; preds = %123
  %264 = lshr i32 %33, 23
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds [1 x %struct.UpVal.217*]* %28, i64 0, i64 %265
  %267 = load %struct.UpVal.217** %266, align 8, !tbaa !25
  %268 = getelementptr inbounds %struct.UpVal.217* %267, i64 0, i32 3
  %269 = load %struct.lua_TValue.215** %268, align 8, !tbaa !75
  %270 = bitcast %struct.lua_TValue.215* %127 to i64*
  %271 = load i64* %270, align 8
  %272 = getelementptr inbounds %struct.lua_TValue.215* %269, i64 0, i32 0, i32 0
  %.c146 = inttoptr i64 %271 to %union.GCObject.229*
  store %union.GCObject.229* %.c146, %union.GCObject.229** %272, align 8
  %273 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  %274 = load i32* %273, align 4, !tbaa !15
  %275 = getelementptr inbounds %struct.lua_TValue.215* %269, i64 0, i32 1
  store i32 %274, i32* %275, align 4, !tbaa !15
  %276 = load i32* %273, align 4, !tbaa !15
  %277 = and i32 %276, 64
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %.backedge, label %279

; <label>:279                                     ; preds = %263
  %280 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %281 = load %union.GCObject.229** %280, align 8, !tbaa !25
  %282 = getelementptr inbounds %union.GCObject.229* %281, i64 0, i32 0, i32 2
  %283 = load i8* %282, align 1, !tbaa !28
  %284 = and i8 %283, 3
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %.backedge, label %286

; <label>:286                                     ; preds = %279
  %287 = getelementptr inbounds %struct.UpVal.217* %267, i64 0, i32 2
  %288 = load i8* %287, align 1, !tbaa !28
  %289 = and i8 %288, 4
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %.backedge, label %291

; <label>:291                                     ; preds = %286
  %292 = bitcast %struct.UpVal.217* %267 to %union.GCObject.229*
  call void bitcast (void (%struct.lua_State*, %union.GCObject*, %union.GCObject*)* @luaC_barrier_ to void (%struct.lua_State.228*, %union.GCObject.229*, %union.GCObject.229*)*)(%struct.lua_State.228* %L, %union.GCObject.229* %292, %union.GCObject.229* %281) #3
  br label %.backedge

; <label>:293                                     ; preds = %123
  %294 = lshr i32 %33, 23
  %295 = and i32 %294, 256
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %301, label %297

; <label>:297                                     ; preds = %293
  %298 = and i32 %294, 255
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %299
  br label %304

; <label>:301                                     ; preds = %293
  %302 = zext i32 %294 to i64
  %303 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %302
  br label %304

; <label>:304                                     ; preds = %301, %297
  %305 = phi %struct.lua_TValue.215* [ %300, %297 ], [ %303, %301 ]
  %306 = lshr i32 %33, 14
  %307 = and i32 %306, 256
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %313, label %309

; <label>:309                                     ; preds = %304
  %310 = and i32 %306, 255
  %311 = zext i32 %310 to i64
  %312 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %311
  br label %317

; <label>:313                                     ; preds = %304
  %314 = and i32 %306, 511
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %315
  br label %317

; <label>:317                                     ; preds = %313, %309
  %318 = phi %struct.lua_TValue.215* [ %312, %309 ], [ %316, %313 ]
  call void @luaV_settable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %305, %struct.lua_TValue.215* %318)
  %319 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:320                                     ; preds = %123
  %321 = lshr i32 %33, 23
  %322 = lshr i32 %33, 14
  %323 = and i32 %322, 511
  %324 = call %struct.Table.222* bitcast (%struct.Table* (%struct.lua_State*)* @luaH_new to %struct.Table.222* (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %325 = bitcast %struct.Table.222* %324 to %union.GCObject.229*
  %326 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  store %union.GCObject.229* %325, %union.GCObject.229** %326, align 8, !tbaa !25
  %327 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 69, i32* %327, align 4, !tbaa !15
  %328 = or i32 %323, %321
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %333, label %330

; <label>:330                                     ; preds = %320
  %331 = call i32 @luaO_fb2int(i32 %321) #3
  %332 = call i32 @luaO_fb2int(i32 %323) #3
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32, i32)* @luaH_resize to void (%struct.lua_State.228*, %struct.Table.222*, i32, i32)*)(%struct.lua_State.228* %L, %struct.Table.222* %324, i32 %331, i32 %332) #3
  br label %333

; <label>:333                                     ; preds = %330, %320
  %334 = load %struct.global_State.223** %4, align 8, !tbaa !17
  %335 = getelementptr inbounds %struct.global_State.223* %334, i64 0, i32 3
  %336 = load i64* %335, align 8, !tbaa !33
  %337 = icmp sgt i64 %336, 0
  br i1 %337, label %338, label %341

; <label>:338                                     ; preds = %333
  %.sum145 = add i64 %126, 1
  %339 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum145
  store %struct.lua_TValue.215* %339, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %340 = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  store %struct.lua_TValue.215* %340, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %341

; <label>:341                                     ; preds = %338, %333
  %342 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:343                                     ; preds = %123
  %344 = lshr i32 %33, 23
  %345 = zext i32 %344 to i64
  %346 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %345
  %.sum143 = add i64 %126, 1
  %347 = bitcast %struct.lua_TValue.215* %346 to i64*
  %348 = load i64* %347, align 8
  %349 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum143, i32 0, i32 0
  %.c144 = inttoptr i64 %348 to %union.GCObject.229*
  store %union.GCObject.229* %.c144, %union.GCObject.229** %349, align 8
  %350 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %345, i32 1
  %351 = load i32* %350, align 4, !tbaa !15
  %352 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum143, i32 1
  store i32 %351, i32* %352, align 4, !tbaa !15
  %353 = lshr i32 %33, 14
  %354 = and i32 %353, 256
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %360, label %356

; <label>:356                                     ; preds = %343
  %357 = and i32 %353, 255
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %358
  br label %364

; <label>:360                                     ; preds = %343
  %361 = and i32 %353, 511
  %362 = zext i32 %361 to i64
  %363 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %362
  br label %364

; <label>:364                                     ; preds = %360, %356
  %365 = phi %struct.lua_TValue.215* [ %359, %356 ], [ %363, %360 ]
  call void @luaV_gettable(%struct.lua_State.228* %L, %struct.lua_TValue.215* %346, %struct.lua_TValue.215* %365, %struct.lua_TValue.215* %127)
  %366 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:367                                     ; preds = %123
  %368 = lshr i32 %33, 23
  %369 = and i32 %368, 256
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %375, label %371

; <label>:371                                     ; preds = %367
  %372 = and i32 %368, 255
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %373
  br label %378

; <label>:375                                     ; preds = %367
  %376 = zext i32 %368 to i64
  %377 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %376
  br label %378

; <label>:378                                     ; preds = %375, %371
  %379 = phi %struct.lua_TValue.215* [ %374, %371 ], [ %377, %375 ]
  %380 = lshr i32 %33, 14
  %381 = and i32 %380, 256
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %387, label %383

; <label>:383                                     ; preds = %378
  %384 = and i32 %380, 255
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %385
  br label %391

; <label>:387                                     ; preds = %378
  %388 = and i32 %380, 511
  %389 = zext i32 %388 to i64
  %390 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %389
  br label %391

; <label>:391                                     ; preds = %387, %383
  %392 = phi %struct.lua_TValue.215* [ %386, %383 ], [ %390, %387 ]
  %393 = getelementptr inbounds %struct.lua_TValue.215* %379, i64 0, i32 1
  %394 = load i32* %393, align 4, !tbaa !15
  %395 = icmp eq i32 %394, 3
  br i1 %395, label %396, label %408

; <label>:396                                     ; preds = %391
  %397 = getelementptr inbounds %struct.lua_TValue.215* %392, i64 0, i32 1
  %398 = load i32* %397, align 4, !tbaa !15
  %399 = icmp eq i32 %398, 3
  br i1 %399, label %400, label %408

; <label>:400                                     ; preds = %396
  %401 = bitcast %struct.lua_TValue.215* %379 to double*
  %402 = load double* %401, align 8, !tbaa !30
  %403 = bitcast %struct.lua_TValue.215* %392 to double*
  %404 = load double* %403, align 8, !tbaa !30
  %405 = fadd double %402, %404
  %406 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %405, double* %406, align 8, !tbaa !30
  %407 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %407, align 4, !tbaa !15
  br label %.backedge

; <label>:408                                     ; preds = %396, %391
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %379, %struct.lua_TValue.215* %392, i32 6)
  %409 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:410                                     ; preds = %123
  %411 = lshr i32 %33, 23
  %412 = and i32 %411, 256
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %418, label %414

; <label>:414                                     ; preds = %410
  %415 = and i32 %411, 255
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %416
  br label %421

; <label>:418                                     ; preds = %410
  %419 = zext i32 %411 to i64
  %420 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %419
  br label %421

; <label>:421                                     ; preds = %418, %414
  %422 = phi %struct.lua_TValue.215* [ %417, %414 ], [ %420, %418 ]
  %423 = lshr i32 %33, 14
  %424 = and i32 %423, 256
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %430, label %426

; <label>:426                                     ; preds = %421
  %427 = and i32 %423, 255
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %428
  br label %434

; <label>:430                                     ; preds = %421
  %431 = and i32 %423, 511
  %432 = zext i32 %431 to i64
  %433 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %432
  br label %434

; <label>:434                                     ; preds = %430, %426
  %435 = phi %struct.lua_TValue.215* [ %429, %426 ], [ %433, %430 ]
  %436 = getelementptr inbounds %struct.lua_TValue.215* %422, i64 0, i32 1
  %437 = load i32* %436, align 4, !tbaa !15
  %438 = icmp eq i32 %437, 3
  br i1 %438, label %439, label %451

; <label>:439                                     ; preds = %434
  %440 = getelementptr inbounds %struct.lua_TValue.215* %435, i64 0, i32 1
  %441 = load i32* %440, align 4, !tbaa !15
  %442 = icmp eq i32 %441, 3
  br i1 %442, label %443, label %451

; <label>:443                                     ; preds = %439
  %444 = bitcast %struct.lua_TValue.215* %422 to double*
  %445 = load double* %444, align 8, !tbaa !30
  %446 = bitcast %struct.lua_TValue.215* %435 to double*
  %447 = load double* %446, align 8, !tbaa !30
  %448 = fsub double %445, %447
  %449 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %448, double* %449, align 8, !tbaa !30
  %450 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %450, align 4, !tbaa !15
  br label %.backedge

; <label>:451                                     ; preds = %439, %434
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %422, %struct.lua_TValue.215* %435, i32 7)
  %452 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:453                                     ; preds = %123
  %454 = lshr i32 %33, 23
  %455 = and i32 %454, 256
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %461, label %457

; <label>:457                                     ; preds = %453
  %458 = and i32 %454, 255
  %459 = zext i32 %458 to i64
  %460 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %459
  br label %464

; <label>:461                                     ; preds = %453
  %462 = zext i32 %454 to i64
  %463 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %462
  br label %464

; <label>:464                                     ; preds = %461, %457
  %465 = phi %struct.lua_TValue.215* [ %460, %457 ], [ %463, %461 ]
  %466 = lshr i32 %33, 14
  %467 = and i32 %466, 256
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %473, label %469

; <label>:469                                     ; preds = %464
  %470 = and i32 %466, 255
  %471 = zext i32 %470 to i64
  %472 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %471
  br label %477

; <label>:473                                     ; preds = %464
  %474 = and i32 %466, 511
  %475 = zext i32 %474 to i64
  %476 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %475
  br label %477

; <label>:477                                     ; preds = %473, %469
  %478 = phi %struct.lua_TValue.215* [ %472, %469 ], [ %476, %473 ]
  %479 = getelementptr inbounds %struct.lua_TValue.215* %465, i64 0, i32 1
  %480 = load i32* %479, align 4, !tbaa !15
  %481 = icmp eq i32 %480, 3
  br i1 %481, label %482, label %494

; <label>:482                                     ; preds = %477
  %483 = getelementptr inbounds %struct.lua_TValue.215* %478, i64 0, i32 1
  %484 = load i32* %483, align 4, !tbaa !15
  %485 = icmp eq i32 %484, 3
  br i1 %485, label %486, label %494

; <label>:486                                     ; preds = %482
  %487 = bitcast %struct.lua_TValue.215* %465 to double*
  %488 = load double* %487, align 8, !tbaa !30
  %489 = bitcast %struct.lua_TValue.215* %478 to double*
  %490 = load double* %489, align 8, !tbaa !30
  %491 = fmul double %488, %490
  %492 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %491, double* %492, align 8, !tbaa !30
  %493 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %493, align 4, !tbaa !15
  br label %.backedge

; <label>:494                                     ; preds = %482, %477
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %465, %struct.lua_TValue.215* %478, i32 8)
  %495 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:496                                     ; preds = %123
  %497 = lshr i32 %33, 23
  %498 = and i32 %497, 256
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %504, label %500

; <label>:500                                     ; preds = %496
  %501 = and i32 %497, 255
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %502
  br label %507

; <label>:504                                     ; preds = %496
  %505 = zext i32 %497 to i64
  %506 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %505
  br label %507

; <label>:507                                     ; preds = %504, %500
  %508 = phi %struct.lua_TValue.215* [ %503, %500 ], [ %506, %504 ]
  %509 = lshr i32 %33, 14
  %510 = and i32 %509, 256
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %516, label %512

; <label>:512                                     ; preds = %507
  %513 = and i32 %509, 255
  %514 = zext i32 %513 to i64
  %515 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %514
  br label %520

; <label>:516                                     ; preds = %507
  %517 = and i32 %509, 511
  %518 = zext i32 %517 to i64
  %519 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %518
  br label %520

; <label>:520                                     ; preds = %516, %512
  %521 = phi %struct.lua_TValue.215* [ %515, %512 ], [ %519, %516 ]
  %522 = getelementptr inbounds %struct.lua_TValue.215* %508, i64 0, i32 1
  %523 = load i32* %522, align 4, !tbaa !15
  %524 = icmp eq i32 %523, 3
  br i1 %524, label %525, label %537

; <label>:525                                     ; preds = %520
  %526 = getelementptr inbounds %struct.lua_TValue.215* %521, i64 0, i32 1
  %527 = load i32* %526, align 4, !tbaa !15
  %528 = icmp eq i32 %527, 3
  br i1 %528, label %529, label %537

; <label>:529                                     ; preds = %525
  %530 = bitcast %struct.lua_TValue.215* %508 to double*
  %531 = load double* %530, align 8, !tbaa !30
  %532 = bitcast %struct.lua_TValue.215* %521 to double*
  %533 = load double* %532, align 8, !tbaa !30
  %534 = fdiv double %531, %533
  %535 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %534, double* %535, align 8, !tbaa !30
  %536 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %536, align 4, !tbaa !15
  br label %.backedge

; <label>:537                                     ; preds = %525, %520
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %508, %struct.lua_TValue.215* %521, i32 9)
  %538 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:539                                     ; preds = %123
  %540 = lshr i32 %33, 23
  %541 = and i32 %540, 256
  %542 = icmp eq i32 %541, 0
  br i1 %542, label %547, label %543

; <label>:543                                     ; preds = %539
  %544 = and i32 %540, 255
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %545
  br label %550

; <label>:547                                     ; preds = %539
  %548 = zext i32 %540 to i64
  %549 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %548
  br label %550

; <label>:550                                     ; preds = %547, %543
  %551 = phi %struct.lua_TValue.215* [ %546, %543 ], [ %549, %547 ]
  %552 = lshr i32 %33, 14
  %553 = and i32 %552, 256
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %559, label %555

; <label>:555                                     ; preds = %550
  %556 = and i32 %552, 255
  %557 = zext i32 %556 to i64
  %558 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %557
  br label %563

; <label>:559                                     ; preds = %550
  %560 = and i32 %552, 511
  %561 = zext i32 %560 to i64
  %562 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %561
  br label %563

; <label>:563                                     ; preds = %559, %555
  %564 = phi %struct.lua_TValue.215* [ %558, %555 ], [ %562, %559 ]
  %565 = getelementptr inbounds %struct.lua_TValue.215* %551, i64 0, i32 1
  %566 = load i32* %565, align 4, !tbaa !15
  %567 = icmp eq i32 %566, 3
  br i1 %567, label %568, label %583

; <label>:568                                     ; preds = %563
  %569 = getelementptr inbounds %struct.lua_TValue.215* %564, i64 0, i32 1
  %570 = load i32* %569, align 4, !tbaa !15
  %571 = icmp eq i32 %570, 3
  br i1 %571, label %572, label %583

; <label>:572                                     ; preds = %568
  %573 = bitcast %struct.lua_TValue.215* %551 to double*
  %574 = load double* %573, align 8, !tbaa !30
  %575 = bitcast %struct.lua_TValue.215* %564 to double*
  %576 = load double* %575, align 8, !tbaa !30
  %577 = fdiv double %574, %576
  %578 = call double @floor(double %577) #11
  %579 = fmul double %576, %578
  %580 = fsub double %574, %579
  %581 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %580, double* %581, align 8, !tbaa !30
  %582 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %582, align 4, !tbaa !15
  br label %.backedge

; <label>:583                                     ; preds = %568, %563
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %551, %struct.lua_TValue.215* %564, i32 10)
  %584 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:585                                     ; preds = %123
  %586 = lshr i32 %33, 23
  %587 = and i32 %586, 256
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %593, label %589

; <label>:589                                     ; preds = %585
  %590 = and i32 %586, 255
  %591 = zext i32 %590 to i64
  %592 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %591
  br label %596

; <label>:593                                     ; preds = %585
  %594 = zext i32 %586 to i64
  %595 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %594
  br label %596

; <label>:596                                     ; preds = %593, %589
  %597 = phi %struct.lua_TValue.215* [ %592, %589 ], [ %595, %593 ]
  %598 = lshr i32 %33, 14
  %599 = and i32 %598, 256
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %605, label %601

; <label>:601                                     ; preds = %596
  %602 = and i32 %598, 255
  %603 = zext i32 %602 to i64
  %604 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %603
  br label %609

; <label>:605                                     ; preds = %596
  %606 = and i32 %598, 511
  %607 = zext i32 %606 to i64
  %608 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %607
  br label %609

; <label>:609                                     ; preds = %605, %601
  %610 = phi %struct.lua_TValue.215* [ %604, %601 ], [ %608, %605 ]
  %611 = getelementptr inbounds %struct.lua_TValue.215* %597, i64 0, i32 1
  %612 = load i32* %611, align 4, !tbaa !15
  %613 = icmp eq i32 %612, 3
  br i1 %613, label %614, label %626

; <label>:614                                     ; preds = %609
  %615 = getelementptr inbounds %struct.lua_TValue.215* %610, i64 0, i32 1
  %616 = load i32* %615, align 4, !tbaa !15
  %617 = icmp eq i32 %616, 3
  br i1 %617, label %618, label %626

; <label>:618                                     ; preds = %614
  %619 = bitcast %struct.lua_TValue.215* %597 to double*
  %620 = load double* %619, align 8, !tbaa !30
  %621 = bitcast %struct.lua_TValue.215* %610 to double*
  %622 = load double* %621, align 8, !tbaa !30
  %623 = call double @llvm.pow.f64(double %620, double %622)
  %624 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %623, double* %624, align 8, !tbaa !30
  %625 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %625, align 4, !tbaa !15
  br label %.backedge

; <label>:626                                     ; preds = %614, %609
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %597, %struct.lua_TValue.215* %610, i32 11)
  %627 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:628                                     ; preds = %123
  %629 = lshr i32 %33, 23
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %630
  %632 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %630, i32 1
  %633 = load i32* %632, align 4, !tbaa !15
  %634 = icmp eq i32 %633, 3
  br i1 %634, label %635, label %641

; <label>:635                                     ; preds = %628
  %636 = bitcast %struct.lua_TValue.215* %631 to double*
  %637 = load double* %636, align 8, !tbaa !30
  %638 = fsub double -0.000000e+00, %637
  %639 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %638, double* %639, align 8, !tbaa !30
  %640 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %640, align 4, !tbaa !15
  br label %.backedge

; <label>:641                                     ; preds = %628
  call void @luaV_arith(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %631, %struct.lua_TValue.215* %631, i32 12)
  %642 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:643                                     ; preds = %123
  %644 = lshr i32 %33, 23
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %645, i32 1
  %647 = load i32* %646, align 4, !tbaa !15
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %656, label %649

; <label>:649                                     ; preds = %643
  %650 = icmp eq i32 %647, 1
  br i1 %650, label %651, label %656

; <label>:651                                     ; preds = %649
  %652 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %645, i32 0
  %653 = bitcast %union.Value.230* %652 to i32*
  %654 = load i32* %653, align 4, !tbaa !1
  %655 = icmp eq i32 %654, 0
  br label %656

; <label>:656                                     ; preds = %651, %649, %643
  %657 = phi i1 [ true, %643 ], [ false, %649 ], [ %655, %651 ]
  %658 = zext i1 %657 to i32
  %659 = bitcast %struct.lua_TValue.215* %127 to i32*
  store i32 %658, i32* %659, align 4, !tbaa !1
  %660 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 1, i32* %660, align 4, !tbaa !15
  br label %.backedge

; <label>:661                                     ; preds = %123
  %662 = lshr i32 %33, 23
  %663 = zext i32 %662 to i64
  %664 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %663
  call void @luaV_objlen(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, %struct.lua_TValue.215* %664)
  %665 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:666                                     ; preds = %123
  %667 = lshr i32 %33, 23
  %668 = lshr i32 %33, 14
  %669 = and i32 %668, 511
  %670 = zext i32 %669 to i64
  %.sum140 = add i64 %670, 1
  %671 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum140
  store %struct.lua_TValue.215* %671, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %672 = sub i32 1, %667
  %673 = add i32 %672, %669
  call void @luaV_concat(%struct.lua_State.228* %L, i32 %673)
  %674 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %675 = zext i32 %667 to i64
  %676 = getelementptr inbounds %struct.lua_TValue.215* %674, i64 %675
  %677 = bitcast %struct.lua_TValue.215* %676 to i64*
  %678 = load i64* %677, align 8
  %679 = getelementptr inbounds %struct.lua_TValue.215* %674, i64 %126, i32 0, i32 0
  %.c141 = inttoptr i64 %678 to %union.GCObject.229*
  store %union.GCObject.229* %.c141, %union.GCObject.229** %679, align 8
  %680 = getelementptr inbounds %struct.lua_TValue.215* %674, i64 %675, i32 1
  %681 = load i32* %680, align 4, !tbaa !15
  %682 = getelementptr inbounds %struct.lua_TValue.215* %674, i64 %126, i32 1
  store i32 %681, i32* %682, align 4, !tbaa !15
  %683 = load %struct.global_State.223** %4, align 8, !tbaa !17
  %684 = getelementptr inbounds %struct.global_State.223* %683, i64 0, i32 3
  %685 = load i64* %684, align 8, !tbaa !33
  %686 = icmp sgt i64 %685, 0
  br i1 %686, label %687, label %._crit_edge239

._crit_edge239:                                   ; preds = %666
  %.pre = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  br label %694

; <label>:687                                     ; preds = %666
  %688 = icmp ult i32 %125, %667
  br i1 %688, label %691, label %689

; <label>:689                                     ; preds = %687
  %.sum142 = add i64 %126, 1
  %690 = getelementptr inbounds %struct.lua_TValue.215* %674, i64 %.sum142
  br label %691

; <label>:691                                     ; preds = %689, %687
  %692 = phi %struct.lua_TValue.215* [ %690, %689 ], [ %676, %687 ]
  store %struct.lua_TValue.215* %692, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %693 = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  store %struct.lua_TValue.215* %693, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %694

; <label>:694                                     ; preds = %691, %._crit_edge239
  %695 = phi %struct.lua_TValue.215* [ %.pre, %._crit_edge239 ], [ %693, %691 ]
  %696 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  store %struct.lua_TValue.215* %695, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %.backedge

; <label>:697                                     ; preds = %123
  %698 = icmp eq i32 %125, 0
  br i1 %698, label %702, label %699

; <label>:699                                     ; preds = %697
  %700 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %.sum139 = add i64 %126, -1
  %701 = getelementptr inbounds %struct.lua_TValue.215* %700, i64 %.sum139
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %701) #3
  br label %702

; <label>:702                                     ; preds = %699, %697
  %703 = lshr i32 %33, 14
  %704 = add nsw i32 %703, -131071
  %705 = load {}** %26, align 8
  %706 = bitcast {}* %705 to i32*
  %707 = sext i32 %704 to i64
  %708 = getelementptr inbounds i32* %706, i64 %707
  %.c138 = bitcast i32* %708 to {}*
  store {}* %.c138, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:709                                     ; preds = %123
  %710 = lshr i32 %33, 23
  %711 = and i32 %710, 256
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %717, label %713

; <label>:713                                     ; preds = %709
  %714 = and i32 %710, 255
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %715
  br label %720

; <label>:717                                     ; preds = %709
  %718 = zext i32 %710 to i64
  %719 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %718
  br label %720

; <label>:720                                     ; preds = %717, %713
  %721 = phi %struct.lua_TValue.215* [ %716, %713 ], [ %719, %717 ]
  %722 = lshr i32 %33, 14
  %723 = and i32 %722, 256
  %724 = icmp eq i32 %723, 0
  br i1 %724, label %729, label %725

; <label>:725                                     ; preds = %720
  %726 = and i32 %722, 255
  %727 = zext i32 %726 to i64
  %728 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %727
  br label %733

; <label>:729                                     ; preds = %720
  %730 = and i32 %722, 511
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %731
  br label %733

; <label>:733                                     ; preds = %729, %725
  %734 = phi %struct.lua_TValue.215* [ %728, %725 ], [ %732, %729 ]
  %735 = getelementptr inbounds %struct.lua_TValue.215* %721, i64 0, i32 1
  %736 = load i32* %735, align 4, !tbaa !15
  %737 = getelementptr inbounds %struct.lua_TValue.215* %734, i64 0, i32 1
  %738 = load i32* %737, align 4, !tbaa !15
  %739 = icmp eq i32 %736, %738
  br i1 %739, label %740, label %743

; <label>:740                                     ; preds = %733
  %741 = call i32 @luaV_equalobj_(%struct.lua_State.228* %L, %struct.lua_TValue.215* %721, %struct.lua_TValue.215* %734)
  %742 = icmp ne i32 %741, 0
  br label %743

; <label>:743                                     ; preds = %740, %733
  %744 = phi i1 [ false, %733 ], [ %742, %740 ]
  %745 = zext i1 %744 to i32
  %746 = icmp eq i32 %745, %125
  %747 = load {}** %26, align 8
  %748 = bitcast {}* %747 to i32*
  br i1 %746, label %751, label %749

; <label>:749                                     ; preds = %743
  %750 = getelementptr inbounds i32* %748, i64 1
  br label %767

; <label>:751                                     ; preds = %743
  %752 = load i32* %748, align 4, !tbaa !1
  %753 = lshr i32 %752, 6
  %754 = and i32 %753, 255
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %760, label %756

; <label>:756                                     ; preds = %751
  %757 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %758 = zext i32 %754 to i64
  %.sum135 = add i64 %758, -1
  %759 = getelementptr inbounds %struct.lua_TValue.215* %757, i64 %.sum135
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %759) #3
  %.pre240 = load {}** %26, align 8
  br label %760

; <label>:760                                     ; preds = %756, %751
  %761 = phi {}* [ %747, %751 ], [ %.pre240, %756 ]
  %762 = lshr i32 %752, 14
  %763 = add nsw i32 %762, -131070
  %764 = bitcast {}* %761 to i32*
  %765 = sext i32 %763 to i64
  %766 = getelementptr inbounds i32* %764, i64 %765
  br label %767

; <label>:767                                     ; preds = %760, %749
  %storemerge137.in = phi i32* [ %750, %749 ], [ %766, %760 ]
  %storemerge137 = bitcast i32* %storemerge137.in to {}*
  store {}* %storemerge137, {}** %26, align 8, !tbaa !147
  %768 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:769                                     ; preds = %123
  %770 = lshr i32 %33, 23
  %771 = and i32 %770, 256
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %777, label %773

; <label>:773                                     ; preds = %769
  %774 = and i32 %770, 255
  %775 = zext i32 %774 to i64
  %776 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %775
  br label %780

; <label>:777                                     ; preds = %769
  %778 = zext i32 %770 to i64
  %779 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %778
  br label %780

; <label>:780                                     ; preds = %777, %773
  %781 = phi %struct.lua_TValue.215* [ %776, %773 ], [ %779, %777 ]
  %782 = lshr i32 %33, 14
  %783 = and i32 %782, 256
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %789, label %785

; <label>:785                                     ; preds = %780
  %786 = and i32 %782, 255
  %787 = zext i32 %786 to i64
  %788 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %787
  br label %793

; <label>:789                                     ; preds = %780
  %790 = and i32 %782, 511
  %791 = zext i32 %790 to i64
  %792 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %791
  br label %793

; <label>:793                                     ; preds = %789, %785
  %794 = phi %struct.lua_TValue.215* [ %788, %785 ], [ %792, %789 ]
  %795 = call i32 @luaV_lessthan(%struct.lua_State.228* %L, %struct.lua_TValue.215* %781, %struct.lua_TValue.215* %794)
  %796 = icmp eq i32 %795, %125
  %797 = load {}** %26, align 8
  %798 = bitcast {}* %797 to i32*
  br i1 %796, label %801, label %799

; <label>:799                                     ; preds = %793
  %800 = getelementptr inbounds i32* %798, i64 1
  br label %817

; <label>:801                                     ; preds = %793
  %802 = load i32* %798, align 4, !tbaa !1
  %803 = lshr i32 %802, 6
  %804 = and i32 %803, 255
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %810, label %806

; <label>:806                                     ; preds = %801
  %807 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %808 = zext i32 %804 to i64
  %.sum131 = add i64 %808, -1
  %809 = getelementptr inbounds %struct.lua_TValue.215* %807, i64 %.sum131
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %809) #3
  %.pre241 = load {}** %26, align 8
  br label %810

; <label>:810                                     ; preds = %806, %801
  %811 = phi {}* [ %797, %801 ], [ %.pre241, %806 ]
  %812 = lshr i32 %802, 14
  %813 = add nsw i32 %812, -131070
  %814 = bitcast {}* %811 to i32*
  %815 = sext i32 %813 to i64
  %816 = getelementptr inbounds i32* %814, i64 %815
  br label %817

; <label>:817                                     ; preds = %810, %799
  %storemerge133.in = phi i32* [ %800, %799 ], [ %816, %810 ]
  %storemerge133 = bitcast i32* %storemerge133.in to {}*
  store {}* %storemerge133, {}** %26, align 8, !tbaa !147
  %818 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:819                                     ; preds = %123
  %820 = lshr i32 %33, 23
  %821 = and i32 %820, 256
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %827, label %823

; <label>:823                                     ; preds = %819
  %824 = and i32 %820, 255
  %825 = zext i32 %824 to i64
  %826 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %825
  br label %830

; <label>:827                                     ; preds = %819
  %828 = zext i32 %820 to i64
  %829 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %828
  br label %830

; <label>:830                                     ; preds = %827, %823
  %831 = phi %struct.lua_TValue.215* [ %826, %823 ], [ %829, %827 ]
  %832 = lshr i32 %33, 14
  %833 = and i32 %832, 256
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %839, label %835

; <label>:835                                     ; preds = %830
  %836 = and i32 %832, 255
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds %struct.lua_TValue.215* %22, i64 %837
  br label %843

; <label>:839                                     ; preds = %830
  %840 = and i32 %832, 511
  %841 = zext i32 %840 to i64
  %842 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %841
  br label %843

; <label>:843                                     ; preds = %839, %835
  %844 = phi %struct.lua_TValue.215* [ %838, %835 ], [ %842, %839 ]
  %845 = call i32 @luaV_lessequal(%struct.lua_State.228* %L, %struct.lua_TValue.215* %831, %struct.lua_TValue.215* %844)
  %846 = icmp eq i32 %845, %125
  %847 = load {}** %26, align 8
  %848 = bitcast {}* %847 to i32*
  br i1 %846, label %851, label %849

; <label>:849                                     ; preds = %843
  %850 = getelementptr inbounds i32* %848, i64 1
  br label %867

; <label>:851                                     ; preds = %843
  %852 = load i32* %848, align 4, !tbaa !1
  %853 = lshr i32 %852, 6
  %854 = and i32 %853, 255
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %860, label %856

; <label>:856                                     ; preds = %851
  %857 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %858 = zext i32 %854 to i64
  %.sum128 = add i64 %858, -1
  %859 = getelementptr inbounds %struct.lua_TValue.215* %857, i64 %.sum128
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %859) #3
  %.pre242 = load {}** %26, align 8
  br label %860

; <label>:860                                     ; preds = %856, %851
  %861 = phi {}* [ %847, %851 ], [ %.pre242, %856 ]
  %862 = lshr i32 %852, 14
  %863 = add nsw i32 %862, -131070
  %864 = bitcast {}* %861 to i32*
  %865 = sext i32 %863 to i64
  %866 = getelementptr inbounds i32* %864, i64 %865
  br label %867

; <label>:867                                     ; preds = %860, %849
  %storemerge.in = phi i32* [ %850, %849 ], [ %866, %860 ]
  %storemerge = bitcast i32* %storemerge.in to {}*
  store {}* %storemerge, {}** %26, align 8, !tbaa !147
  %868 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:869                                     ; preds = %123
  %870 = and i32 %33, 8372224
  %871 = icmp eq i32 %870, 0
  %872 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  %873 = load i32* %872, align 4, !tbaa !15
  %874 = icmp eq i32 %873, 0
  br i1 %871, label %882, label %875

; <label>:875                                     ; preds = %869
  br i1 %874, label %889, label %876

; <label>:876                                     ; preds = %875
  %877 = icmp eq i32 %873, 1
  br i1 %877, label %878, label %893

; <label>:878                                     ; preds = %876
  %879 = bitcast %struct.lua_TValue.215* %127 to i32*
  %880 = load i32* %879, align 4, !tbaa !1
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %889, label %893

; <label>:882                                     ; preds = %869
  br i1 %874, label %893, label %883

; <label>:883                                     ; preds = %882
  %884 = icmp eq i32 %873, 1
  br i1 %884, label %885, label %889

; <label>:885                                     ; preds = %883
  %886 = bitcast %struct.lua_TValue.215* %127 to i32*
  %887 = load i32* %886, align 4, !tbaa !1
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %893, label %889

; <label>:889                                     ; preds = %885, %883, %878, %875
  %890 = load {}** %26, align 8
  %891 = bitcast {}* %890 to i32*
  %892 = getelementptr inbounds i32* %891, i64 1
  %.c124 = bitcast i32* %892 to {}*
  store {}* %.c124, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:893                                     ; preds = %885, %882, %878, %876
  %894 = load {}** %26, align 8
  %895 = bitcast {}* %894 to i32*
  %896 = load i32* %895, align 4, !tbaa !1
  %897 = lshr i32 %896, 6
  %898 = and i32 %897, 255
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %904, label %900

; <label>:900                                     ; preds = %893
  %901 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %902 = zext i32 %898 to i64
  %.sum126 = add i64 %902, -1
  %903 = getelementptr inbounds %struct.lua_TValue.215* %901, i64 %.sum126
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %903) #3
  %.pre243 = load {}** %26, align 8
  br label %904

; <label>:904                                     ; preds = %900, %893
  %905 = phi {}* [ %894, %893 ], [ %.pre243, %900 ]
  %906 = lshr i32 %896, 14
  %907 = add nsw i32 %906, -131070
  %908 = bitcast {}* %905 to i32*
  %909 = sext i32 %907 to i64
  %910 = getelementptr inbounds i32* %908, i64 %909
  %.c125 = bitcast i32* %910 to {}*
  store {}* %.c125, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:911                                     ; preds = %123
  %912 = lshr i32 %33, 23
  %913 = zext i32 %912 to i64
  %914 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %913
  %915 = and i32 %33, 8372224
  %916 = icmp eq i32 %915, 0
  %917 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %913, i32 1
  %918 = load i32* %917, align 4, !tbaa !15
  %919 = icmp eq i32 %918, 0
  br i1 %916, label %927, label %920

; <label>:920                                     ; preds = %911
  br i1 %919, label %934, label %921

; <label>:921                                     ; preds = %920
  %922 = icmp eq i32 %918, 1
  br i1 %922, label %923, label %938

; <label>:923                                     ; preds = %921
  %924 = bitcast %struct.lua_TValue.215* %914 to i32*
  %925 = load i32* %924, align 4, !tbaa !1
  %926 = icmp eq i32 %925, 0
  br i1 %926, label %934, label %938

; <label>:927                                     ; preds = %911
  br i1 %919, label %938, label %928

; <label>:928                                     ; preds = %927
  %929 = icmp eq i32 %918, 1
  br i1 %929, label %930, label %934

; <label>:930                                     ; preds = %928
  %931 = bitcast %struct.lua_TValue.215* %914 to i32*
  %932 = load i32* %931, align 4, !tbaa !1
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %938, label %934

; <label>:934                                     ; preds = %930, %928, %923, %920
  %935 = load {}** %26, align 8
  %936 = bitcast {}* %935 to i32*
  %937 = getelementptr inbounds i32* %936, i64 1
  %.c120 = bitcast i32* %937 to {}*
  store {}* %.c120, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:938                                     ; preds = %930, %927, %923, %921
  %939 = bitcast %struct.lua_TValue.215* %914 to i64*
  %940 = load i64* %939, align 8
  %941 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %.c121 = inttoptr i64 %940 to %union.GCObject.229*
  store %union.GCObject.229* %.c121, %union.GCObject.229** %941, align 8
  %942 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 %918, i32* %942, align 4, !tbaa !15
  %943 = load {}** %26, align 8
  %944 = bitcast {}* %943 to i32*
  %945 = load i32* %944, align 4, !tbaa !1
  %946 = lshr i32 %945, 6
  %947 = and i32 %946, 255
  %948 = icmp eq i32 %947, 0
  br i1 %948, label %953, label %949

; <label>:949                                     ; preds = %938
  %950 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %951 = zext i32 %947 to i64
  %.sum123 = add i64 %951, -1
  %952 = getelementptr inbounds %struct.lua_TValue.215* %950, i64 %.sum123
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %952) #3
  %.pre244 = load {}** %26, align 8
  br label %953

; <label>:953                                     ; preds = %949, %938
  %954 = phi {}* [ %943, %938 ], [ %.pre244, %949 ]
  %955 = lshr i32 %945, 14
  %956 = add nsw i32 %955, -131070
  %957 = bitcast {}* %954 to i32*
  %958 = sext i32 %956 to i64
  %959 = getelementptr inbounds i32* %957, i64 %958
  %.c122 = bitcast i32* %959 to {}*
  store {}* %.c122, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:960                                     ; preds = %123
  %961 = lshr i32 %33, 23
  %962 = lshr i32 %33, 14
  %963 = and i32 %962, 511
  %964 = add nsw i32 %963, -1
  %965 = icmp eq i32 %961, 0
  br i1 %965, label %969, label %966

; <label>:966                                     ; preds = %960
  %967 = zext i32 %961 to i64
  %.sum119 = add i64 %126, %967
  %968 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum119
  store %struct.lua_TValue.215* %968, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %969

; <label>:969                                     ; preds = %966, %960
  %970 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_precall to i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, i32 %964) #3
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %978, label %972

; <label>:972                                     ; preds = %969
  %973 = icmp eq i32 %963, 0
  br i1 %973, label %976, label %974

; <label>:974                                     ; preds = %972
  %975 = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  store %struct.lua_TValue.215* %975, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %976

; <label>:976                                     ; preds = %974, %972
  %977 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:978                                     ; preds = %969
  %979 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %980 = getelementptr inbounds %struct.CallInfo.225* %979, i64 0, i32 5
  %981 = load i8* %980, align 1, !tbaa !46
  %982 = or i8 %981, 4
  store i8 %982, i8* %980, align 1, !tbaa !46
  br label %.backedge207

; <label>:983                                     ; preds = %123
  %984 = lshr i32 %33, 23
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %989, label %986

; <label>:986                                     ; preds = %983
  %987 = zext i32 %984 to i64
  %.sum118 = add i64 %126, %987
  %988 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum118
  store %struct.lua_TValue.215* %988, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %989

; <label>:989                                     ; preds = %986, %983
  %990 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*, i32)* @luaD_precall to i32 (%struct.lua_State.228*, %struct.lua_TValue.215*, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127, i32 -1) #3
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %994, label %992

; <label>:992                                     ; preds = %989
  %993 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:994                                     ; preds = %989
  %995 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %996 = getelementptr inbounds %struct.CallInfo.225* %995, i64 0, i32 2
  %997 = load %struct.CallInfo.225** %996, align 8, !tbaa !133
  %998 = getelementptr inbounds %struct.CallInfo.225* %995, i64 0, i32 0
  %999 = load %struct.lua_TValue.215** %998, align 8, !tbaa !24
  %1000 = getelementptr inbounds %struct.CallInfo.225* %997, i64 0, i32 0
  %1001 = load %struct.lua_TValue.215** %1000, align 8, !tbaa !24
  %1002 = getelementptr inbounds %struct.CallInfo.225* %995, i64 0, i32 7
  %1003 = bitcast %union.anon.224* %1002 to %struct.lua_TValue.215**
  %1004 = load %struct.lua_TValue.215** %1003, align 8, !tbaa !136
  %1005 = getelementptr inbounds %struct.lua_TValue.215* %999, i64 0, i32 0, i32 0
  %1006 = load %union.GCObject.229** %1005, align 8, !tbaa !25
  %1007 = getelementptr inbounds %union.GCObject.229* %1006, i64 0, i32 0, i32 5
  %1008 = load %struct.global_State.223** %1007, align 8
  %1009 = getelementptr inbounds %struct.global_State.223* %1008, i64 0, i32 17
  %1010 = bitcast %union.GCObject.229*** %1009 to i8*
  %1011 = load i8* %1010, align 1, !tbaa !131
  %1012 = zext i8 %1011 to i64
  %1013 = getelementptr inbounds %struct.lua_TValue.215* %1004, i64 %1012
  %1014 = load %struct.global_State.223** %18, align 8
  %1015 = getelementptr inbounds %struct.global_State.223* %1014, i64 0, i32 14
  %1016 = bitcast %union.GCObject.229** %1015 to i32*
  %1017 = load i32* %1016, align 4, !tbaa !173
  %1018 = icmp sgt i32 %1017, 0
  br i1 %1018, label %1019, label %.preheader203

; <label>:1019                                    ; preds = %994
  %1020 = getelementptr inbounds %struct.CallInfo.225* %997, i64 0, i32 7
  %1021 = bitcast %union.anon.224* %1020 to %struct.lua_TValue.215**
  %1022 = load %struct.lua_TValue.215** %1021, align 8, !tbaa !136
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %1022) #3
  br label %.preheader203

.preheader203:                                    ; preds = %1019, %994
  %1023 = icmp ult %struct.lua_TValue.215* %999, %1013
  br i1 %1023, label %.lr.ph205, label %._crit_edge206

.lr.ph205:                                        ; preds = %.lr.ph205, %.preheader203
  %indvars.iv237 = phi i64 [ %indvars.iv.next238, %.lr.ph205 ], [ 0, %.preheader203 ]
  %1024 = phi %struct.lua_TValue.215* [ %1031, %.lr.ph205 ], [ %999, %.preheader203 ]
  %1025 = bitcast %struct.lua_TValue.215* %1024 to i64*
  %1026 = load i64* %1025, align 8
  %1027 = getelementptr inbounds %struct.lua_TValue.215* %1001, i64 %indvars.iv237, i32 0, i32 0
  %.c117 = inttoptr i64 %1026 to %union.GCObject.229*
  store %union.GCObject.229* %.c117, %union.GCObject.229** %1027, align 8
  %1028 = getelementptr inbounds %struct.lua_TValue.215* %999, i64 %indvars.iv237, i32 1
  %1029 = load i32* %1028, align 4, !tbaa !15
  %1030 = getelementptr inbounds %struct.lua_TValue.215* %1001, i64 %indvars.iv237, i32 1
  store i32 %1029, i32* %1030, align 4, !tbaa !15
  %indvars.iv.next238 = add nuw nsw i64 %indvars.iv237, 1
  %1031 = getelementptr inbounds %struct.lua_TValue.215* %999, i64 %indvars.iv.next238
  %1032 = icmp ult %struct.lua_TValue.215* %1031, %1013
  br i1 %1032, label %.lr.ph205, label %._crit_edge206

._crit_edge206:                                   ; preds = %.lr.ph205, %.preheader203
  %1033 = load %struct.lua_TValue.215** %1003, align 8, !tbaa !136
  %1034 = ptrtoint %struct.lua_TValue.215* %1033 to i64
  %1035 = ptrtoint %struct.lua_TValue.215* %999 to i64
  %1036 = sub i64 %1034, %1035
  %1037 = ashr exact i64 %1036, 4
  %1038 = getelementptr inbounds %struct.lua_TValue.215* %1001, i64 %1037
  %1039 = getelementptr inbounds %struct.CallInfo.225* %997, i64 0, i32 7
  %1040 = bitcast %union.anon.224* %1039 to %struct.lua_TValue.215**
  store %struct.lua_TValue.215* %1038, %struct.lua_TValue.215** %1040, align 8, !tbaa !136
  %1041 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %1042 = ptrtoint %struct.lua_TValue.215* %1041 to i64
  %1043 = sub i64 %1042, %1035
  %1044 = ashr exact i64 %1043, 4
  %1045 = getelementptr inbounds %struct.lua_TValue.215* %1001, i64 %1044
  store %struct.lua_TValue.215* %1045, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %1046 = getelementptr inbounds %struct.CallInfo.225* %997, i64 0, i32 1
  store %struct.lua_TValue.215* %1045, %struct.lua_TValue.215** %1046, align 8, !tbaa !14
  %1047 = getelementptr inbounds %struct.CallInfo.225* %995, i64 0, i32 7, i32 0, i32 1
  %1048 = load {}** %1047, align 8
  %1049 = getelementptr inbounds %struct.CallInfo.225* %997, i64 0, i32 7, i32 0, i32 1
  store {}* %1048, {}** %1049, align 8, !tbaa !147
  %1050 = getelementptr inbounds %struct.CallInfo.225* %997, i64 0, i32 5
  %1051 = load i8* %1050, align 1, !tbaa !46
  %1052 = or i8 %1051, 64
  store i8 %1052, i8* %1050, align 1, !tbaa !46
  store %struct.CallInfo.225* %997, %struct.CallInfo.225** %1, align 8, !tbaa !5
  br label %.backedge207

; <label>:1053                                    ; preds = %123
  %1054 = lshr i32 %33, 23
  %1055 = icmp eq i32 %1054, 0
  br i1 %1055, label %1059, label %1056

; <label>:1056                                    ; preds = %1053
  %1057 = zext i32 %1054 to i64
  %.sum114 = add i64 %1057, -1
  %.sum115 = add i64 %.sum114, %126
  %1058 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum115
  store %struct.lua_TValue.215* %1058, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %1059

; <label>:1059                                    ; preds = %1056, %1053
  %1060 = load %struct.global_State.223** %18, align 8
  %1061 = getelementptr inbounds %struct.global_State.223* %1060, i64 0, i32 14
  %1062 = bitcast %union.GCObject.229** %1061 to i32*
  %1063 = load i32* %1062, align 4, !tbaa !173
  %1064 = icmp sgt i32 %1063, 0
  br i1 %1064, label %1065, label %1066

; <label>:1065                                    ; preds = %1059
  call void bitcast (void (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_close to void (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %base.1) #3
  br label %1066

; <label>:1066                                    ; preds = %1065, %1059
  %1067 = call i32 bitcast (i32 (%struct.lua_State*, %struct.lua_TValue*)* @luaD_poscall to i32 (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %127) #3
  %1068 = getelementptr inbounds %struct.CallInfo.225* %ci.0, i64 0, i32 5
  %1069 = load i8* %1068, align 1, !tbaa !46
  %1070 = and i8 %1069, 4
  %1071 = icmp eq i8 %1070, 0
  br i1 %1071, label %1072, label %1073

; <label>:1072                                    ; preds = %1066
  ret void

; <label>:1073                                    ; preds = %1066
  %1074 = load %struct.CallInfo.225** %1, align 8, !tbaa !5
  %1075 = icmp eq i32 %1067, 0
  br i1 %1075, label %.backedge207, label %1076

; <label>:1076                                    ; preds = %1073
  %1077 = getelementptr inbounds %struct.CallInfo.225* %1074, i64 0, i32 1
  %1078 = load %struct.lua_TValue.215** %1077, align 8, !tbaa !14
  store %struct.lua_TValue.215* %1078, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %.backedge207

; <label>:1079                                    ; preds = %123
  %.sum110 = add i64 %126, 2
  %1080 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum110, i32 0
  %1081 = bitcast %union.Value.230* %1080 to double*
  %1082 = load double* %1081, align 8, !tbaa !30
  %1083 = bitcast %struct.lua_TValue.215* %127 to double*
  %1084 = load double* %1083, align 8, !tbaa !30
  %1085 = fadd double %1082, %1084
  %.sum111 = add i64 %126, 1
  %1086 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum111, i32 0
  %1087 = bitcast %union.Value.230* %1086 to double*
  %1088 = load double* %1087, align 8, !tbaa !30
  %1089 = fcmp ogt double %1082, 0.000000e+00
  br i1 %1089, label %1090, label %1092

; <label>:1090                                    ; preds = %1079
  %1091 = fcmp ugt double %1085, %1088
  br i1 %1091, label %.backedge, label %1094

; <label>:1092                                    ; preds = %1079
  %1093 = fcmp ugt double %1088, %1085
  br i1 %1093, label %.backedge, label %1094

; <label>:1094                                    ; preds = %1092, %1090
  %1095 = lshr i32 %33, 14
  %1096 = add nsw i32 %1095, -131071
  %1097 = load {}** %26, align 8
  %1098 = bitcast {}* %1097 to i32*
  %1099 = sext i32 %1096 to i64
  %1100 = getelementptr inbounds i32* %1098, i64 %1099
  %.c112 = bitcast i32* %1100 to {}*
  store {}* %.c112, {}** %26, align 8, !tbaa !147
  store double %1085, double* %1083, align 8, !tbaa !30
  %1101 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 3, i32* %1101, align 4, !tbaa !15
  %.sum113 = add i64 %126, 3
  %1102 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum113
  %1103 = bitcast %struct.lua_TValue.215* %1102 to double*
  store double %1085, double* %1103, align 8, !tbaa !30
  %1104 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum113, i32 1
  store i32 3, i32* %1104, align 4, !tbaa !15
  br label %.backedge

; <label>:1105                                    ; preds = %123
  %.sum107 = add i64 %126, 1
  %1106 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum107
  %.sum108 = add i64 %126, 2
  %1107 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum108
  %1108 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  %1109 = load i32* %1108, align 4, !tbaa !15
  %1110 = icmp eq i32 %1109, 3
  br i1 %1110, label %1127, label %1111

; <label>:1111                                    ; preds = %1105
  call void @llvm.lifetime.start(i64 8, i8* %8) #3
  %1112 = and i32 %1109, 15
  %1113 = icmp eq i32 %1112, 4
  br i1 %1113, label %1114, label %luaV_tonumber.exit.thread

; <label>:1114                                    ; preds = %1111
  %1115 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %1116 = load %union.GCObject.229** %1115, align 8, !tbaa !25
  %1117 = getelementptr inbounds %union.GCObject.229* %1116, i64 0, i32 0, i32 5
  %1118 = bitcast %struct.global_State.223** %1117 to i8*
  %1119 = getelementptr inbounds %union.GCObject.229* %1116, i64 0, i32 0, i32 4
  %1120 = bitcast %struct.lua_TValue.215** %1119 to i64*
  %1121 = load i64* %1120, align 8, !tbaa !34
  %1122 = call i32 @luaO_str2d(i8* %1118, i64 %1121, double* %num.i) #3
  %1123 = icmp eq i32 %1122, 0
  br i1 %1123, label %luaV_tonumber.exit.thread, label %luaV_tonumber.exit

luaV_tonumber.exit:                               ; preds = %1114
  %1124 = load double* %num.i, align 8, !tbaa !30
  %1125 = bitcast %struct.lua_TValue.215* %127 to double*
  store double %1124, double* %1125, align 8, !tbaa !30
  store i32 3, i32* %1108, align 4, !tbaa !15
  call void @llvm.lifetime.end(i64 8, i8* %8) #3
  %1126 = icmp eq %struct.lua_TValue.215* %127, null
  br i1 %1126, label %luaV_tonumber.exit.thread, label %1127

luaV_tonumber.exit.thread:                        ; preds = %luaV_tonumber.exit, %1114, %1111
  call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([37 x i8]* @.str6309, i64 0, i64 0)) #13
  unreachable

; <label>:1127                                    ; preds = %luaV_tonumber.exit, %1105
  %1128 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum107, i32 1
  %1129 = load i32* %1128, align 4, !tbaa !15
  %1130 = icmp eq i32 %1129, 3
  br i1 %1130, label %luaV_tonumber.exit155.thread165, label %1131

; <label>:1131                                    ; preds = %1127
  call void @llvm.lifetime.start(i64 8, i8* %7) #3
  %1132 = and i32 %1129, 15
  %1133 = icmp eq i32 %1132, 4
  br i1 %1133, label %1134, label %1147

; <label>:1134                                    ; preds = %1131
  %1135 = getelementptr inbounds %struct.lua_TValue.215* %1106, i64 0, i32 0, i32 0
  %1136 = load %union.GCObject.229** %1135, align 8, !tbaa !25
  %1137 = getelementptr inbounds %union.GCObject.229* %1136, i64 0, i32 0, i32 5
  %1138 = bitcast %struct.global_State.223** %1137 to i8*
  %1139 = getelementptr inbounds %union.GCObject.229* %1136, i64 0, i32 0, i32 4
  %1140 = bitcast %struct.lua_TValue.215** %1139 to i64*
  %1141 = load i64* %1140, align 8, !tbaa !34
  %1142 = call i32 @luaO_str2d(i8* %1138, i64 %1141, double* %num.i153) #3
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1147, label %1144

; <label>:1144                                    ; preds = %1134
  %1145 = load double* %num.i153, align 8, !tbaa !30
  %1146 = bitcast %struct.lua_TValue.215* %1106 to double*
  store double %1145, double* %1146, align 8, !tbaa !30
  store i32 3, i32* %1128, align 4, !tbaa !15
  br label %luaV_tonumber.exit155.thread165

; <label>:1147                                    ; preds = %1134, %1131
  call void @llvm.lifetime.end(i64 8, i8* %7) #3
  call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([29 x i8]* @.str7310, i64 0, i64 0)) #13
  unreachable

luaV_tonumber.exit155.thread165:                  ; preds = %1144, %1127
  %1148 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum108, i32 1
  %1149 = load i32* %1148, align 4, !tbaa !15
  %1150 = icmp eq i32 %1149, 3
  br i1 %1150, label %luaV_tonumber.exit158.thread167, label %1151

; <label>:1151                                    ; preds = %luaV_tonumber.exit155.thread165
  call void @llvm.lifetime.start(i64 8, i8* %6) #3
  %1152 = and i32 %1149, 15
  %1153 = icmp eq i32 %1152, 4
  br i1 %1153, label %1154, label %1167

; <label>:1154                                    ; preds = %1151
  %1155 = getelementptr inbounds %struct.lua_TValue.215* %1107, i64 0, i32 0, i32 0
  %1156 = load %union.GCObject.229** %1155, align 8, !tbaa !25
  %1157 = getelementptr inbounds %union.GCObject.229* %1156, i64 0, i32 0, i32 5
  %1158 = bitcast %struct.global_State.223** %1157 to i8*
  %1159 = getelementptr inbounds %union.GCObject.229* %1156, i64 0, i32 0, i32 4
  %1160 = bitcast %struct.lua_TValue.215** %1159 to i64*
  %1161 = load i64* %1160, align 8, !tbaa !34
  %1162 = call i32 @luaO_str2d(i8* %1158, i64 %1161, double* %num.i156) #3
  %1163 = icmp eq i32 %1162, 0
  br i1 %1163, label %1167, label %1164

; <label>:1164                                    ; preds = %1154
  %1165 = load double* %num.i156, align 8, !tbaa !30
  %1166 = bitcast %struct.lua_TValue.215* %1107 to double*
  store double %1165, double* %1166, align 8, !tbaa !30
  store i32 3, i32* %1148, align 4, !tbaa !15
  br label %luaV_tonumber.exit158.thread167

; <label>:1167                                    ; preds = %1154, %1151
  call void @llvm.lifetime.end(i64 8, i8* %6) #3
  call void (%struct.lua_State.228*, i8*, ...)* bitcast (void (%struct.lua_State*, i8*, ...)* @luaG_runerror to void (%struct.lua_State.228*, i8*, ...)*)(%struct.lua_State.228* %L, i8* getelementptr inbounds ([28 x i8]* @.str8311, i64 0, i64 0)) #13
  unreachable

luaV_tonumber.exit158.thread167:                  ; preds = %1164, %luaV_tonumber.exit155.thread165
  %1168 = bitcast %struct.lua_TValue.215* %127 to double*
  %1169 = load double* %1168, align 8, !tbaa !30
  %1170 = bitcast %struct.lua_TValue.215* %1107 to double*
  %1171 = load double* %1170, align 8, !tbaa !30
  %1172 = fsub double %1169, %1171
  store double %1172, double* %1168, align 8, !tbaa !30
  store i32 3, i32* %1108, align 4, !tbaa !15
  %1173 = lshr i32 %33, 14
  %1174 = add nsw i32 %1173, -131071
  %1175 = load {}** %26, align 8
  %1176 = bitcast {}* %1175 to i32*
  %1177 = sext i32 %1174 to i64
  %1178 = getelementptr inbounds i32* %1176, i64 %1177
  %.c109 = bitcast i32* %1178 to {}*
  store {}* %.c109, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:1179                                    ; preds = %123
  %.sum97 = add i64 %126, 3
  %1180 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum97
  %.sum98 = add i64 %126, 2
  %1181 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum98
  %.sum99 = add i64 %126, 5
  %1182 = bitcast %struct.lua_TValue.215* %1181 to i64*
  %1183 = load i64* %1182, align 8
  %1184 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum99, i32 0, i32 0
  %.c100 = inttoptr i64 %1183 to %union.GCObject.229*
  store %union.GCObject.229* %.c100, %union.GCObject.229** %1184, align 8
  %1185 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum98, i32 1
  %1186 = load i32* %1185, align 4, !tbaa !15
  %1187 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum99, i32 1
  store i32 %1186, i32* %1187, align 4, !tbaa !15
  %.sum101 = add i64 %126, 1
  %1188 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum101
  %.sum102 = add i64 %126, 4
  %1189 = bitcast %struct.lua_TValue.215* %1188 to i64*
  %1190 = load i64* %1189, align 8
  %1191 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum102, i32 0, i32 0
  %.c103 = inttoptr i64 %1190 to %union.GCObject.229*
  store %union.GCObject.229* %.c103, %union.GCObject.229** %1191, align 8
  %1192 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum101, i32 1
  %1193 = load i32* %1192, align 4, !tbaa !15
  %1194 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum102, i32 1
  store i32 %1193, i32* %1194, align 4, !tbaa !15
  %1195 = bitcast %struct.lua_TValue.215* %127 to i64*
  %1196 = load i64* %1195, align 8
  %1197 = getelementptr inbounds %struct.lua_TValue.215* %1180, i64 0, i32 0, i32 0
  %.c104 = inttoptr i64 %1196 to %union.GCObject.229*
  store %union.GCObject.229* %.c104, %union.GCObject.229** %1197, align 8
  %1198 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  %1199 = load i32* %1198, align 4, !tbaa !15
  %1200 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum97, i32 1
  store i32 %1199, i32* %1200, align 4, !tbaa !15
  %.sum105 = add i64 %126, 6
  %1201 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum105
  store %struct.lua_TValue.215* %1201, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %1202 = lshr i32 %33, 14
  %1203 = and i32 %1202, 511
  call void bitcast (void (%struct.lua_State*, %struct.lua_TValue*, i32, i32)* @luaD_call to void (%struct.lua_State.228*, %struct.lua_TValue.215*, i32, i32)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %1180, i32 %1203, i32 1) #3
  %1204 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %1205 = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  store %struct.lua_TValue.215* %1205, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %1206 = load {}** %26, align 8
  %1207 = bitcast {}* %1206 to i32*
  %1208 = getelementptr inbounds i32* %1207, i64 1
  %.c106 = bitcast i32* %1208 to {}*
  store {}* %.c106, {}** %26, align 8, !tbaa !147
  %1209 = load i32* %1207, align 4, !tbaa !1
  %1210 = lshr i32 %1209, 6
  %1211 = and i32 %1210, 255
  %1212 = zext i32 %1211 to i64
  %1213 = getelementptr inbounds %struct.lua_TValue.215* %1204, i64 %1212
  br label %1214

; <label>:1214                                    ; preds = %1179, %123
  %ra.1 = phi %struct.lua_TValue.215* [ %127, %123 ], [ %1213, %1179 ]
  %i.0 = phi i32 [ %33, %123 ], [ %1209, %1179 ]
  %base.2 = phi %struct.lua_TValue.215* [ %base.1, %123 ], [ %1204, %1179 ]
  %1215 = getelementptr inbounds %struct.lua_TValue.215* %ra.1, i64 1, i32 1
  %1216 = load i32* %1215, align 4, !tbaa !15
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %.backedge, label %1218

; <label>:1218                                    ; preds = %1214
  %1219 = getelementptr inbounds %struct.lua_TValue.215* %ra.1, i64 1, i32 0
  %1220 = bitcast %union.Value.230* %1219 to i64*
  %1221 = load i64* %1220, align 8
  %1222 = getelementptr inbounds %struct.lua_TValue.215* %ra.1, i64 0, i32 0, i32 0
  %.c95 = inttoptr i64 %1221 to %union.GCObject.229*
  store %union.GCObject.229* %.c95, %union.GCObject.229** %1222, align 8
  %1223 = getelementptr inbounds %struct.lua_TValue.215* %ra.1, i64 0, i32 1
  store i32 %1216, i32* %1223, align 4, !tbaa !15
  %1224 = lshr i32 %i.0, 14
  %1225 = add nsw i32 %1224, -131071
  %1226 = load {}** %26, align 8
  %1227 = bitcast {}* %1226 to i32*
  %1228 = sext i32 %1225 to i64
  %1229 = getelementptr inbounds i32* %1227, i64 %1228
  %.c96 = bitcast i32* %1229 to {}*
  store {}* %.c96, {}** %26, align 8, !tbaa !147
  br label %.backedge

; <label>:1230                                    ; preds = %123
  %1231 = lshr i32 %33, 23
  %1232 = lshr i32 %33, 14
  %1233 = and i32 %1232, 511
  %1234 = icmp eq i32 %1231, 0
  br i1 %1234, label %1235, label %1243

; <label>:1235                                    ; preds = %1230
  %1236 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %1237 = ptrtoint %struct.lua_TValue.215* %1236 to i64
  %1238 = ptrtoint %struct.lua_TValue.215* %127 to i64
  %1239 = sub i64 %1237, %1238
  %1240 = lshr exact i64 %1239, 4
  %1241 = trunc i64 %1240 to i32
  %1242 = add nsw i32 %1241, -1
  br label %1243

; <label>:1243                                    ; preds = %1235, %1230
  %n.0 = phi i32 [ %1242, %1235 ], [ %1231, %1230 ]
  %1244 = icmp eq i32 %1233, 0
  br i1 %1244, label %1245, label %1251

; <label>:1245                                    ; preds = %1243
  %1246 = load {}** %26, align 8
  %1247 = bitcast {}* %1246 to i32*
  %1248 = getelementptr inbounds i32* %1247, i64 1
  %.c94 = bitcast i32* %1248 to {}*
  store {}* %.c94, {}** %26, align 8, !tbaa !147
  %1249 = load i32* %1247, align 4, !tbaa !1
  %1250 = lshr i32 %1249, 6
  br label %1251

; <label>:1251                                    ; preds = %1245, %1243
  %c83.0 = phi i32 [ %1250, %1245 ], [ %1233, %1243 ]
  %1252 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  %1253 = load %union.GCObject.229** %1252, align 8, !tbaa !25
  %1254 = bitcast %union.GCObject.229* %1253 to %struct.Table.222*
  %1255 = mul i32 %c83.0, 50
  %1256 = add i32 %n.0, -50
  %1257 = add i32 %1256, %1255
  %1258 = getelementptr inbounds %union.GCObject.229* %1253, i64 0, i32 0, i32 9
  %1259 = bitcast %struct.lua_TValue.215** %1258 to i32*
  %1260 = load i32* %1259, align 4, !tbaa !215
  %1261 = icmp sgt i32 %1257, %1260
  br i1 %1261, label %1262, label %.preheader

; <label>:1262                                    ; preds = %1251
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32)* @luaH_resizearray to void (%struct.lua_State.228*, %struct.Table.222*, i32)*)(%struct.lua_State.228* %L, %struct.Table.222* %1254, i32 %1257) #3
  br label %.preheader

.preheader:                                       ; preds = %1262, %1251
  %1263 = icmp sgt i32 %n.0, 0
  br i1 %1263, label %.lr.ph173, label %._crit_edge

.lr.ph173:                                        ; preds = %.preheader
  %1264 = getelementptr inbounds %union.GCObject.229* %1253, i64 0, i32 0, i32 2
  %1265 = sext i32 %n.0 to i64
  br label %1266

; <label>:1266                                    ; preds = %1285, %.lr.ph173
  %indvars.iv210 = phi i64 [ %1265, %.lr.ph173 ], [ %indvars.iv.next211, %1285 ]
  %last.0172 = phi i32 [ %1257, %.lr.ph173 ], [ %1268, %1285 ]
  %.sum93 = add i64 %indvars.iv210, %126
  %1267 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum93
  %1268 = add nsw i32 %last.0172, -1
  call void bitcast (void (%struct.lua_State*, %struct.Table*, i32, %struct.lua_TValue*)* @luaH_setint to void (%struct.lua_State.228*, %struct.Table.222*, i32, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.Table.222* %1254, i32 %last.0172, %struct.lua_TValue.215* %1267) #3
  %1269 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum93, i32 1
  %1270 = load i32* %1269, align 4, !tbaa !15
  %1271 = and i32 %1270, 64
  %1272 = icmp eq i32 %1271, 0
  br i1 %1272, label %1285, label %1273

; <label>:1273                                    ; preds = %1266
  %1274 = getelementptr inbounds %struct.lua_TValue.215* %1267, i64 0, i32 0, i32 0
  %1275 = load %union.GCObject.229** %1274, align 8, !tbaa !25
  %1276 = getelementptr inbounds %union.GCObject.229* %1275, i64 0, i32 0, i32 2
  %1277 = load i8* %1276, align 1, !tbaa !28
  %1278 = and i8 %1277, 3
  %1279 = icmp eq i8 %1278, 0
  br i1 %1279, label %1285, label %1280

; <label>:1280                                    ; preds = %1273
  %1281 = load i8* %1264, align 1, !tbaa !28
  %1282 = and i8 %1281, 4
  %1283 = icmp eq i8 %1282, 0
  br i1 %1283, label %1285, label %1284

; <label>:1284                                    ; preds = %1280
  call void bitcast (void (%struct.lua_State*, %union.GCObject*)* @luaC_barrierback_ to void (%struct.lua_State.228*, %union.GCObject.229*)*)(%struct.lua_State.228* %L, %union.GCObject.229* %1253) #3
  br label %1285

; <label>:1285                                    ; preds = %1284, %1280, %1273, %1266
  %indvars.iv.next211 = add nsw i64 %indvars.iv210, -1
  %1286 = trunc i64 %indvars.iv.next211 to i32
  %1287 = icmp sgt i32 %1286, 0
  br i1 %1287, label %1266, label %._crit_edge

._crit_edge:                                      ; preds = %1285, %.preheader
  %1288 = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  store %struct.lua_TValue.215* %1288, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %.backedge

; <label>:1289                                    ; preds = %123
  %1290 = lshr i32 %33, 14
  %1291 = zext i32 %1290 to i64
  %1292 = load %struct.global_State.223** %18, align 8
  %1293 = getelementptr inbounds %struct.global_State.223* %1292, i64 0, i32 4
  %1294 = bitcast i64* %1293 to %struct.Proto.403***
  %1295 = load %struct.Proto.403*** %1294, align 8, !tbaa !174
  %1296 = getelementptr inbounds %struct.Proto.403** %1295, i64 %1291
  %1297 = load %struct.Proto.403** %1296, align 8, !tbaa !25
  %1298 = getelementptr inbounds %struct.Proto.403* %1297, i64 0, i32 9
  %1299 = load %union.Closure.400** %1298, align 8, !tbaa !193
  %1300 = icmp eq %union.Closure.400* %1299, null
  %.phi.trans.insert = getelementptr inbounds %struct.Proto.403* %1297, i64 0, i32 11
  %.pre245 = load i32* %.phi.trans.insert, align 4, !tbaa !73
  %.phi.trans.insert246 = getelementptr inbounds %struct.Proto.403* %1297, i64 0, i32 8
  %.pre247 = load %struct.Upvaldesc.402** %.phi.trans.insert246, align 8, !tbaa !76
  br i1 %1300, label %getcached.exit.thread, label %1301

; <label>:1301                                    ; preds = %1289
  %1302 = icmp sgt i32 %.pre245, 0
  br i1 %1302, label %.lr.ph.i, label %getcached.exit.thread168

.lr.ph.i:                                         ; preds = %1301
  %1303 = getelementptr inbounds %union.Closure.400* %1299, i64 0, i32 0, i32 6
  %1304 = bitcast [1 x %struct.lua_TValue.215]* %1303 to [1 x %struct.UpVal.217*]*
  br label %1308

; <label>:1305                                    ; preds = %1323
  %1306 = trunc i64 %indvars.iv.next.i to i32
  %1307 = icmp slt i32 %1306, %.pre245
  br i1 %1307, label %1308, label %getcached.exit.thread168

; <label>:1308                                    ; preds = %1305, %.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %.lr.ph.i ], [ %indvars.iv.next.i, %1305 ]
  %1309 = getelementptr inbounds %struct.Upvaldesc.402* %.pre247, i64 %indvars.iv.i, i32 1
  %1310 = load i8* %1309, align 1, !tbaa !175
  %1311 = icmp eq i8 %1310, 0
  %1312 = getelementptr inbounds %struct.Upvaldesc.402* %.pre247, i64 %indvars.iv.i, i32 2
  %1313 = load i8* %1312, align 1, !tbaa !176
  %1314 = zext i8 %1313 to i64
  br i1 %1311, label %1317, label %1315

; <label>:1315                                    ; preds = %1308
  %1316 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %1314
  br label %1323

; <label>:1317                                    ; preds = %1308
  %1318 = getelementptr inbounds %struct.CallInfo.225** %27, i64 %1314
  %1319 = load %struct.CallInfo.225** %1318, align 8
  %1320 = getelementptr inbounds %struct.CallInfo.225* %1319, i64 0, i32 2
  %1321 = load %struct.CallInfo.225** %1320, align 8
  %1322 = bitcast %struct.CallInfo.225* %1321 to %struct.lua_TValue.215*
  br label %1323

; <label>:1323                                    ; preds = %1317, %1315
  %1324 = phi %struct.lua_TValue.215* [ %1316, %1315 ], [ %1322, %1317 ]
  %1325 = getelementptr inbounds [1 x %struct.UpVal.217*]* %1304, i64 0, i64 %indvars.iv.i
  %1326 = load %struct.UpVal.217** %1325, align 8, !tbaa !25
  %1327 = getelementptr inbounds %struct.UpVal.217* %1326, i64 0, i32 3
  %1328 = load %struct.lua_TValue.215** %1327, align 8, !tbaa !75
  %1329 = icmp eq %struct.lua_TValue.215* %1328, %1324
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  br i1 %1329, label %1305, label %getcached.exit.thread

getcached.exit.thread:                            ; preds = %1323, %1289
  %1330 = call %union.Closure.400* bitcast (%union.Closure.129* (%struct.lua_State.126*, i32)* @luaF_newLclosure to %union.Closure.400* (%struct.lua_State.228*, i32)*)(%struct.lua_State.228* %L, i32 %.pre245) #3
  %1331 = getelementptr inbounds %union.Closure.400* %1330, i64 0, i32 0, i32 5
  %p.c.i = bitcast %struct.Proto.403* %1297 to i32 (%struct.lua_State.228*)*
  store i32 (%struct.lua_State.228*)* %p.c.i, i32 (%struct.lua_State.228*)** %1331, align 8, !tbaa !183
  %1332 = bitcast %union.Closure.400* %1330 to %union.GCObject.229*
  %1333 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  store %union.GCObject.229* %1332, %union.GCObject.229** %1333, align 8, !tbaa !25
  %1334 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 70, i32* %1334, align 4, !tbaa !15
  %1335 = icmp sgt i32 %.pre245, 0
  br i1 %1335, label %.lr.ph.i160, label %._crit_edge.i163

.lr.ph.i160:                                      ; preds = %getcached.exit.thread
  %1336 = getelementptr inbounds %union.Closure.400* %1330, i64 0, i32 0, i32 6
  %1337 = bitcast [1 x %struct.lua_TValue.215]* %1336 to [1 x %struct.UpVal.217*]*
  br label %1338

; <label>:1338                                    ; preds = %1354, %.lr.ph.i160
  %indvars.iv.i161 = phi i64 [ 0, %.lr.ph.i160 ], [ %indvars.iv.next.i162, %1354 ]
  %1339 = getelementptr inbounds %struct.Upvaldesc.402* %.pre247, i64 %indvars.iv.i161, i32 1
  %1340 = load i8* %1339, align 1, !tbaa !175
  %1341 = icmp eq i8 %1340, 0
  %1342 = getelementptr inbounds %struct.Upvaldesc.402* %.pre247, i64 %indvars.iv.i161, i32 2
  %1343 = load i8* %1342, align 1, !tbaa !176
  %1344 = zext i8 %1343 to i64
  br i1 %1341, label %1349, label %1345

; <label>:1345                                    ; preds = %1338
  %1346 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %1344
  %1347 = call %struct.UpVal.217* bitcast (%struct.UpVal.112* (%struct.lua_State.126*, %struct.lua_TValue.109*)* @luaF_findupval to %struct.UpVal.217* (%struct.lua_State.228*, %struct.lua_TValue.215*)*)(%struct.lua_State.228* %L, %struct.lua_TValue.215* %1346) #3
  %1348 = getelementptr inbounds [1 x %struct.UpVal.217*]* %1337, i64 0, i64 %indvars.iv.i161
  store %struct.UpVal.217* %1347, %struct.UpVal.217** %1348, align 8, !tbaa !25
  br label %1354

; <label>:1349                                    ; preds = %1338
  %1350 = getelementptr inbounds %struct.CallInfo.225** %27, i64 %1344
  %1351 = load %struct.CallInfo.225** %1350, align 8
  %1352 = bitcast %struct.CallInfo.225* %1351 to %struct.UpVal.217*
  %1353 = getelementptr inbounds [1 x %struct.UpVal.217*]* %1337, i64 0, i64 %indvars.iv.i161
  store %struct.UpVal.217* %1352, %struct.UpVal.217** %1353, align 8, !tbaa !25
  br label %1354

; <label>:1354                                    ; preds = %1349, %1345
  %indvars.iv.next.i162 = add nuw nsw i64 %indvars.iv.i161, 1
  %lftr.wideiv208 = trunc i64 %indvars.iv.next.i162 to i32
  %exitcond209 = icmp eq i32 %lftr.wideiv208, %.pre245
  br i1 %exitcond209, label %._crit_edge.i163, label %1338

._crit_edge.i163:                                 ; preds = %1354, %getcached.exit.thread
  %1355 = getelementptr inbounds %struct.Proto.403* %1297, i64 0, i32 2
  %1356 = load i8* %1355, align 1, !tbaa !28
  %1357 = and i8 %1356, 4
  %1358 = icmp eq i8 %1357, 0
  br i1 %1358, label %pushclosure.exit, label %1359

; <label>:1359                                    ; preds = %._crit_edge.i163
  call void bitcast (void (%struct.lua_State*, %struct.Proto*, %union.Closure*)* @luaC_barrierproto_ to void (%struct.lua_State.228*, %struct.Proto.403*, %union.Closure.400*)*)(%struct.lua_State.228* %L, %struct.Proto.403* %1297, %union.Closure.400* %1330) #3
  br label %pushclosure.exit

pushclosure.exit:                                 ; preds = %1359, %._crit_edge.i163
  store %union.Closure.400* %1330, %union.Closure.400** %1298, align 8, !tbaa !193
  br label %1363

getcached.exit.thread168:                         ; preds = %1305, %1301
  %1360 = bitcast %union.Closure.400* %1299 to %union.GCObject.229*
  %1361 = getelementptr inbounds %struct.lua_TValue.215* %127, i64 0, i32 0, i32 0
  store %union.GCObject.229* %1360, %union.GCObject.229** %1361, align 8, !tbaa !25
  %1362 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %126, i32 1
  store i32 70, i32* %1362, align 4, !tbaa !15
  br label %1363

; <label>:1363                                    ; preds = %getcached.exit.thread168, %pushclosure.exit
  %1364 = load %struct.global_State.223** %4, align 8, !tbaa !17
  %1365 = getelementptr inbounds %struct.global_State.223* %1364, i64 0, i32 3
  %1366 = load i64* %1365, align 8, !tbaa !33
  %1367 = icmp sgt i64 %1366, 0
  br i1 %1367, label %1368, label %1371

; <label>:1368                                    ; preds = %1363
  %.sum92 = add i64 %126, 1
  %1369 = getelementptr inbounds %struct.lua_TValue.215* %base.1, i64 %.sum92
  store %struct.lua_TValue.215* %1369, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  call void bitcast (void (%struct.lua_State*)* @luaC_step to void (%struct.lua_State.228*)*)(%struct.lua_State.228* %L) #3
  %1370 = load %struct.lua_TValue.215** %29, align 8, !tbaa !14
  store %struct.lua_TValue.215* %1370, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %1371

; <label>:1371                                    ; preds = %1368, %1363
  %1372 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  br label %.backedge

; <label>:1373                                    ; preds = %123
  %1374 = lshr i32 %33, 23
  %1375 = add nsw i32 %1374, -1
  %1376 = load %struct.lua_TValue.215** %14, align 8, !tbaa !24
  %1377 = ptrtoint %struct.lua_TValue.215* %base.1 to i64
  %1378 = ptrtoint %struct.lua_TValue.215* %1376 to i64
  %1379 = sub i64 %1377, %1378
  %1380 = lshr exact i64 %1379, 4
  %1381 = trunc i64 %1380 to i32
  %1382 = load %struct.global_State.223** %18, align 8
  %1383 = getelementptr inbounds %struct.global_State.223* %1382, i64 0, i32 17
  %1384 = bitcast %union.GCObject.229*** %1383 to i8*
  %1385 = load i8* %1384, align 1, !tbaa !131
  %1386 = zext i8 %1385 to i32
  %1387 = sub nsw i32 %1381, %1386
  %1388 = add nsw i32 %1387, -1
  %1389 = icmp eq i32 %1374, 0
  br i1 %1389, label %1390, label %1404

; <label>:1390                                    ; preds = %1373
  %1391 = load %struct.lua_TValue.215** %9, align 8, !tbaa !11
  %1392 = load %struct.lua_TValue.215** %5, align 8, !tbaa !12
  %1393 = ptrtoint %struct.lua_TValue.215* %1391 to i64
  %1394 = ptrtoint %struct.lua_TValue.215* %1392 to i64
  %1395 = sub i64 %1393, %1394
  %1396 = ashr exact i64 %1395, 4
  %1397 = sext i32 %1388 to i64
  %1398 = icmp sgt i64 %1396, %1397
  br i1 %1398, label %1400, label %1399

; <label>:1399                                    ; preds = %1390
  call void bitcast (void (%struct.lua_State*, i32)* @luaD_growstack to void (%struct.lua_State.228*, i32)*)(%struct.lua_State.228* %L, i32 %1388) #3
  br label %1400

; <label>:1400                                    ; preds = %1399, %1390
  %1401 = load %struct.lua_TValue.215** %24, align 8, !tbaa !136
  %1402 = getelementptr inbounds %struct.lua_TValue.215* %1401, i64 %126
  %.sum91 = add i64 %1397, %126
  %1403 = getelementptr inbounds %struct.lua_TValue.215* %1401, i64 %.sum91
  store %struct.lua_TValue.215* %1403, %struct.lua_TValue.215** %5, align 8, !tbaa !12
  br label %1404

; <label>:1404                                    ; preds = %1400, %1373
  %ra.2 = phi %struct.lua_TValue.215* [ %1402, %1400 ], [ %127, %1373 ]
  %b85.0 = phi i32 [ %1388, %1400 ], [ %1375, %1373 ]
  %base.3 = phi %struct.lua_TValue.215* [ %1401, %1400 ], [ %base.1, %1373 ]
  %1405 = icmp sgt i32 %b85.0, 0
  br i1 %1405, label %.lr.ph, label %.backedge

.lr.ph:                                           ; preds = %1404
  %1406 = sext i32 %1388 to i64
  br label %1407

; <label>:1407                                    ; preds = %1420, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %1420 ]
  %1408 = trunc i64 %indvars.iv to i32
  %1409 = icmp slt i32 %1408, %1388
  br i1 %1409, label %1410, label %1418

; <label>:1410                                    ; preds = %1407
  %.sum = sub i64 %indvars.iv, %1406
  %1411 = getelementptr inbounds %struct.lua_TValue.215* %base.3, i64 %.sum
  %1412 = bitcast %struct.lua_TValue.215* %1411 to i64*
  %1413 = load i64* %1412, align 8
  %1414 = getelementptr inbounds %struct.lua_TValue.215* %ra.2, i64 %indvars.iv, i32 0, i32 0
  %.c90 = inttoptr i64 %1413 to %union.GCObject.229*
  store %union.GCObject.229* %.c90, %union.GCObject.229** %1414, align 8
  %1415 = getelementptr inbounds %struct.lua_TValue.215* %base.3, i64 %.sum, i32 1
  %1416 = load i32* %1415, align 4, !tbaa !15
  %1417 = getelementptr inbounds %struct.lua_TValue.215* %ra.2, i64 %indvars.iv, i32 1
  store i32 %1416, i32* %1417, align 4, !tbaa !15
  br label %1420

; <label>:1418                                    ; preds = %1407
  %1419 = getelementptr inbounds %struct.lua_TValue.215* %ra.2, i64 %indvars.iv, i32 1
  store i32 0, i32* %1419, align 4, !tbaa !15
  br label %1420

; <label>:1420                                    ; preds = %1418, %1410
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %b85.0
  br i1 %exitcond, label %.backedge, label %1407
}

; Function Attrs: nounwind readonly
declare i32 @strcoll(i8* nocapture, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.lua_TValue.215* @get_equalTM(%struct.lua_State.228* nocapture readonly %L, %struct.Table.222* %mt1, %struct.Table.222* %mt2) #0 {
  %1 = icmp eq %struct.Table.222* %mt1, null
  br i1 %1, label %.thread, label %2

; <label>:2                                       ; preds = %0
  %3 = getelementptr inbounds %struct.Table.222* %mt1, i64 0, i32 3
  %4 = load i8* %3, align 1, !tbaa !41
  %5 = and i8 %4, 32
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %.thread

; <label>:7                                       ; preds = %2
  %8 = getelementptr inbounds %struct.lua_State.228* %L, i64 0, i32 5
  %9 = load %struct.global_State.223** %8, align 8, !tbaa !17
  %10 = getelementptr inbounds %struct.global_State.223* %9, i64 0, i32 33, i64 5
  %11 = load %union.TString.219** %10, align 8, !tbaa !25
  %12 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.215* (%struct.Table.222*, i32, %union.TString.219*)*)(%struct.Table.222* %mt1, i32 5, %union.TString.219* %11) #3
  %13 = icmp eq %struct.lua_TValue.215* %12, null
  br i1 %13, label %.thread, label %14

; <label>:14                                      ; preds = %7
  %15 = icmp eq %struct.Table.222* %mt1, %mt2
  br i1 %15, label %.thread, label %16

; <label>:16                                      ; preds = %14
  %17 = icmp eq %struct.Table.222* %mt2, null
  br i1 %17, label %.thread, label %18

; <label>:18                                      ; preds = %16
  %19 = getelementptr inbounds %struct.Table.222* %mt2, i64 0, i32 3
  %20 = load i8* %19, align 1, !tbaa !41
  %21 = and i8 %20, 32
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %.thread

; <label>:23                                      ; preds = %18
  %24 = load %struct.global_State.223** %8, align 8, !tbaa !17
  %25 = getelementptr inbounds %struct.global_State.223* %24, i64 0, i32 33, i64 5
  %26 = load %union.TString.219** %25, align 8, !tbaa !25
  %27 = tail call %struct.lua_TValue.215* bitcast (%struct.lua_TValue* (%struct.Table*, i32, %union.TString*)* @luaT_gettm to %struct.lua_TValue.215* (%struct.Table.222*, i32, %union.TString.219*)*)(%struct.Table.222* %mt2, i32 5, %union.TString.219* %26) #3
  %28 = icmp eq %struct.lua_TValue.215* %27, null
  br i1 %28, label %.thread, label %29

; <label>:29                                      ; preds = %23
  %30 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 1
  %31 = load i32* %30, align 4, !tbaa !15
  %32 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 0, i32 1
  %33 = load i32* %32, align 4, !tbaa !15
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %luaV_equalobj_.exit.thread4

; <label>:35                                      ; preds = %29
  %36 = and i32 %31, 63
  switch i32 %36, label %92 [
    i32 0, label %.thread
    i32 3, label %37
    i32 1, label %44
    i32 2, label %51
    i32 22, label %58
    i32 4, label %65
    i32 20, label %72
    i32 7, label %80
    i32 5, label %86
  ]

; <label>:37                                      ; preds = %35
  %38 = bitcast %struct.lua_TValue.215* %12 to double*
  %39 = load double* %38, align 8, !tbaa !30
  %40 = bitcast %struct.lua_TValue.215* %27 to double*
  %41 = load double* %40, align 8, !tbaa !30
  %42 = fcmp oeq double %39, %41
  %43 = zext i1 %42 to i32
  br label %luaV_equalobj_.exit

; <label>:44                                      ; preds = %35
  %45 = bitcast %struct.lua_TValue.215* %12 to i32*
  %46 = load i32* %45, align 4, !tbaa !1
  %47 = bitcast %struct.lua_TValue.215* %27 to i32*
  %48 = load i32* %47, align 4, !tbaa !1
  %49 = icmp eq i32 %46, %48
  %50 = zext i1 %49 to i32
  br label %luaV_equalobj_.exit

; <label>:51                                      ; preds = %35
  %52 = bitcast %struct.lua_TValue.215* %12 to i8**
  %53 = load i8** %52, align 8, !tbaa !25
  %54 = bitcast %struct.lua_TValue.215* %27 to i8**
  %55 = load i8** %54, align 8, !tbaa !25
  %56 = icmp eq i8* %53, %55
  %57 = zext i1 %56 to i32
  br label %luaV_equalobj_.exit

; <label>:58                                      ; preds = %35
  %59 = bitcast %struct.lua_TValue.215* %12 to i32 (%struct.lua_State.228*)**
  %60 = load i32 (%struct.lua_State.228*)** %59, align 8, !tbaa !25
  %61 = bitcast %struct.lua_TValue.215* %27 to i32 (%struct.lua_State.228*)**
  %62 = load i32 (%struct.lua_State.228*)** %61, align 8, !tbaa !25
  %63 = icmp eq i32 (%struct.lua_State.228*)* %60, %62
  %64 = zext i1 %63 to i32
  br label %luaV_equalobj_.exit

; <label>:65                                      ; preds = %35
  %66 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 0, i32 0
  %67 = load %union.GCObject.229** %66, align 8, !tbaa !25
  %68 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 0, i32 0, i32 0
  %69 = load %union.GCObject.229** %68, align 8, !tbaa !25
  %70 = icmp eq %union.GCObject.229* %67, %69
  %71 = zext i1 %70 to i32
  br label %luaV_equalobj_.exit

; <label>:72                                      ; preds = %35
  %73 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 0, i32 0
  %74 = load %union.GCObject.229** %73, align 8, !tbaa !25
  %75 = bitcast %union.GCObject.229* %74 to %union.TString.219*
  %76 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 0, i32 0, i32 0
  %77 = load %union.GCObject.229** %76, align 8, !tbaa !25
  %78 = bitcast %union.GCObject.229* %77 to %union.TString.219*
  %79 = tail call i32 @luaS_eqlngstr(%union.TString.219* %75, %union.TString.219* %78) #3
  br label %luaV_equalobj_.exit

; <label>:80                                      ; preds = %35
  %81 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 0, i32 0
  %82 = load %union.GCObject.229** %81, align 8, !tbaa !25
  %83 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 0, i32 0, i32 0
  %84 = load %union.GCObject.229** %83, align 8, !tbaa !25
  %85 = icmp eq %union.GCObject.229* %82, %84
  br i1 %85, label %.thread, label %luaV_equalobj_.exit.thread4

; <label>:86                                      ; preds = %35
  %87 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 0, i32 0
  %88 = load %union.GCObject.229** %87, align 8, !tbaa !25
  %89 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 0, i32 0, i32 0
  %90 = load %union.GCObject.229** %89, align 8, !tbaa !25
  %91 = icmp eq %union.GCObject.229* %88, %90
  br i1 %91, label %.thread, label %luaV_equalobj_.exit.thread4

; <label>:92                                      ; preds = %35
  %93 = getelementptr inbounds %struct.lua_TValue.215* %12, i64 0, i32 0, i32 0
  %94 = load %union.GCObject.229** %93, align 8, !tbaa !25
  %95 = getelementptr inbounds %struct.lua_TValue.215* %27, i64 0, i32 0, i32 0
  %96 = load %union.GCObject.229** %95, align 8, !tbaa !25
  %97 = icmp eq %union.GCObject.229* %94, %96
  %98 = zext i1 %97 to i32
  br label %luaV_equalobj_.exit

luaV_equalobj_.exit:                              ; preds = %92, %72, %65, %58, %51, %44, %37
  %.0.i = phi i32 [ %98, %92 ], [ %79, %72 ], [ %71, %65 ], [ %64, %58 ], [ %57, %51 ], [ %50, %44 ], [ %43, %37 ]
  %99 = icmp eq i32 %.0.i, 0
  br i1 %99, label %luaV_equalobj_.exit.thread4, label %.thread

luaV_equalobj_.exit.thread4:                      ; preds = %luaV_equalobj_.exit, %86, %80, %29
  br label %.thread

.thread:                                          ; preds = %luaV_equalobj_.exit.thread4, %luaV_equalobj_.exit, %86, %80, %35, %23, %18, %16, %14, %7, %2, %0
  %.0 = phi %struct.lua_TValue.215* [ null, %luaV_equalobj_.exit.thread4 ], [ null, %7 ], [ %12, %14 ], [ null, %23 ], [ %12, %luaV_equalobj_.exit ], [ null, %0 ], [ null, %2 ], [ null, %16 ], [ null, %18 ], [ %12, %35 ], [ %12, %80 ], [ %12, %86 ]
  ret %struct.lua_TValue.215* %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaZ_fill(%struct.Zio* nocapture %z) #0 {
  %size = alloca i64, align 8
  %1 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 4
  %2 = load %struct.lua_State** %1, align 8, !tbaa !297
  %3 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 2
  %4 = load i8* (%struct.lua_State*, i8*, i64*)** %3, align 8, !tbaa !298
  %5 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 3
  %6 = load i8** %5, align 8, !tbaa !299
  %7 = call i8* %4(%struct.lua_State* %2, i8* %6, i64* %size) #3
  %8 = icmp eq i8* %7, null
  %9 = load i64* %size, align 8
  %10 = icmp eq i64 %9, 0
  %or.cond = or i1 %8, %10
  br i1 %or.cond, label %18, label %11

; <label>:11                                      ; preds = %0
  %12 = add i64 %9, -1
  %13 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 0
  store i64 %12, i64* %13, align 8, !tbaa !164
  %14 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 1
  %15 = getelementptr inbounds i8* %7, i64 1
  store i8* %15, i8** %14, align 8, !tbaa !166
  %16 = load i8* %7, align 1, !tbaa !86
  %17 = zext i8 %16 to i32
  br label %18

; <label>:18                                      ; preds = %11, %0
  %.0 = phi i32 [ %17, %11 ], [ -1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaZ_init(%struct.lua_State* %L, %struct.Zio* nocapture %z, i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* %data) #0 {
  %1 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 4
  store %struct.lua_State* %L, %struct.lua_State** %1, align 8, !tbaa !297
  %2 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 2
  store i8* (%struct.lua_State*, i8*, i64*)* %reader, i8* (%struct.lua_State*, i8*, i64*)** %2, align 8, !tbaa !298
  %3 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 3
  store i8* %data, i8** %3, align 8, !tbaa !299
  %4 = bitcast %struct.Zio* %z to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i64 @luaZ_read(%struct.Zio* nocapture %z, i8* %b, i64 %n) #0 {
  %size.i = alloca i64, align 8
  %1 = icmp eq i64 %n, 0
  br i1 %1, label %luaZ_fill.exit.thread, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %2 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 0
  %3 = bitcast i64* %size.i to i8*
  %4 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 4
  %5 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 2
  %6 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 3
  %7 = getelementptr inbounds %struct.Zio* %z, i64 0, i32 1
  %.pre = load i64* %2, align 8, !tbaa !164
  br label %8

; <label>:8                                       ; preds = %19, %.lr.ph
  %9 = phi i64 [ %.pre, %.lr.ph ], [ %26, %19 ]
  %.014 = phi i64 [ %n, %.lr.ph ], [ %30, %19 ]
  %.023 = phi i8* [ %b, %.lr.ph ], [ %29, %19 ]
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %._crit_edge

._crit_edge:                                      ; preds = %8
  %.pre6 = load i8** %7, align 8, !tbaa !166
  br label %19

; <label>:11                                      ; preds = %8
  call void @llvm.lifetime.start(i64 8, i8* %3) #3
  %12 = load %struct.lua_State** %4, align 8, !tbaa !297
  %13 = load i8* (%struct.lua_State*, i8*, i64*)** %5, align 8, !tbaa !298
  %14 = load i8** %6, align 8, !tbaa !299
  %15 = call i8* %13(%struct.lua_State* %12, i8* %14, i64* %size.i) #3
  %16 = icmp eq i8* %15, null
  %17 = load i64* %size.i, align 8
  %18 = icmp eq i64 %17, 0
  %or.cond.i = or i1 %16, %18
  br i1 %or.cond.i, label %luaZ_fill.exit.thread, label %luaZ_fill.exit

luaZ_fill.exit:                                   ; preds = %11
  call void @llvm.lifetime.end(i64 8, i8* %3) #3
  store i64 %17, i64* %2, align 8, !tbaa !164
  store i8* %15, i8** %7, align 8, !tbaa !166
  br label %19

; <label>:19                                      ; preds = %luaZ_fill.exit, %._crit_edge
  %20 = phi i8* [ %15, %luaZ_fill.exit ], [ %.pre6, %._crit_edge ]
  %21 = phi i64 [ %17, %luaZ_fill.exit ], [ %9, %._crit_edge ]
  %22 = icmp ugt i64 %.014, %21
  %..01 = select i1 %22, i64 %21, i64 %.014
  %23 = call i64 @llvm.objectsize.i64.p0i8(i8* %.023, i1 false)
  %24 = call i8* @__memcpy_chk(i8* %.023, i8* %20, i64 %..01, i64 %23) #3
  %25 = load i64* %2, align 8, !tbaa !164
  %26 = sub i64 %25, %..01
  store i64 %26, i64* %2, align 8, !tbaa !164
  %27 = load i8** %7, align 8, !tbaa !166
  %28 = getelementptr inbounds i8* %27, i64 %..01
  store i8* %28, i8** %7, align 8, !tbaa !166
  %29 = getelementptr inbounds i8* %.023, i64 %..01
  %30 = sub i64 %.014, %..01
  %31 = icmp eq i64 %.014, %..01
  br i1 %31, label %luaZ_fill.exit.thread, label %8

luaZ_fill.exit.thread:                            ; preds = %19, %11, %0
  %.0 = phi i64 [ 0, %0 ], [ 0, %19 ], [ %.014, %11 ]
  ret i64 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaZ_openspace(%struct.lua_State* %L, %struct.Mbuffer* nocapture %buff, i64 %n) #0 {
  %1 = getelementptr inbounds %struct.Mbuffer* %buff, i64 0, i32 2
  %2 = load i64* %1, align 8, !tbaa !162
  %3 = icmp ult i64 %2, %n
  br i1 %3, label %4, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.Mbuffer* %buff, i64 0, i32 0
  %.pre = load i8** %.phi.trans.insert, align 8, !tbaa !161
  br label %13

; <label>:4                                       ; preds = %0
  %5 = icmp ult i64 %n, 32
  %.n = select i1 %5, i64 32, i64 %n
  %6 = add i64 %.n, 1
  %7 = icmp ugt i64 %6, -3
  br i1 %7, label %8, label %9

; <label>:8                                       ; preds = %4
  tail call void @luaM_toobig(%struct.lua_State* %L) #13
  unreachable

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %struct.Mbuffer* %buff, i64 0, i32 0
  %11 = load i8** %10, align 8, !tbaa !161
  %12 = tail call i8* @luaM_realloc_(%struct.lua_State* %L, i8* %11, i64 %2, i64 %.n) #3
  store i8* %12, i8** %10, align 8, !tbaa !161
  store i64 %.n, i64* %1, align 8, !tbaa !162
  br label %13

; <label>:13                                      ; preds = %9, %._crit_edge
  %14 = phi i8* [ %.pre, %._crit_edge ], [ %12, %9 ]
  ret i8* %14
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_traceback(%struct.lua_State* %L, %struct.lua_State* %L1, i8* %msg, i32 %level) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %1) #3
  %2 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %3 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 128, i8* %3) #3
  br label %4

; <label>:4                                       ; preds = %4, %0
  %le.0.i = phi i32 [ 1, %0 ], [ %7, %4 ]
  %li.0.i = phi i32 [ 1, %0 ], [ %le.0.i, %4 ]
  %5 = call i32 @lua_getstack(%struct.lua_State* %L1, i32 %le.0.i, %struct.lua_Debug* %ar.i) #3
  %6 = icmp eq i32 %5, 0
  %7 = shl nsw i32 %le.0.i, 1
  br i1 %6, label %.preheader.i, label %4

.preheader.i:                                     ; preds = %4
  %8 = icmp slt i32 %li.0.i, %le.0.i
  br i1 %8, label %.lr.ph.i, label %countlevels.exit

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.preheader.i
  %li.12.i = phi i32 [ %li.1..i, %.lr.ph.i ], [ %li.0.i, %.preheader.i ]
  %le.11.i = phi i32 [ %.le.1.i, %.lr.ph.i ], [ %le.0.i, %.preheader.i ]
  %9 = add nsw i32 %le.11.i, %li.12.i
  %10 = sdiv i32 %9, 2
  %11 = call i32 @lua_getstack(%struct.lua_State* %L1, i32 %10, %struct.lua_Debug* %ar.i) #3
  %12 = icmp eq i32 %11, 0
  %13 = add nsw i32 %10, 1
  %.le.1.i = select i1 %12, i32 %10, i32 %le.11.i
  %li.1..i = select i1 %12, i32 %li.12.i, i32 %13
  %14 = icmp slt i32 %li.1..i, %.le.1.i
  br i1 %14, label %.lr.ph.i, label %countlevels.exit

countlevels.exit:                                 ; preds = %.lr.ph.i, %.preheader.i
  %le.1.lcssa.i = phi i32 [ %le.0.i, %.preheader.i ], [ %.le.1.i, %.lr.ph.i ]
  %15 = add nsw i32 %le.1.lcssa.i, -1
  call void @llvm.lifetime.end(i64 128, i8* %3) #3
  %16 = icmp sgt i32 %15, 22
  %17 = select i1 %16, i32 12, i32 0
  %18 = icmp eq i8* %msg, null
  br i1 %18, label %21, label %19

; <label>:19                                      ; preds = %countlevels.exit
  %20 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8]* @.str344, i64 0, i64 0), i8* %msg) #3
  br label %21

; <label>:21                                      ; preds = %19, %countlevels.exit
  %22 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str1345, i64 0, i64 0), i64 16) #3
  %23 = call i32 @lua_getstack(%struct.lua_State* %L1, i32 %level, %struct.lua_Debug* %ar) #3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %21
  %25 = add nsw i32 %le.1.lcssa.i, -11
  %26 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 12, i64 0
  %27 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 5
  %28 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 2
  %29 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 3
  %30 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 6
  %31 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 11
  %32 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 1
  br label %33

; <label>:33                                      ; preds = %.backedge, %.lr.ph
  %.in = phi i32 [ %level, %.lr.ph ], [ %.0.be, %.backedge ]
  %34 = add nsw i32 %.in, 1
  %35 = icmp eq i32 %34, %17
  br i1 %35, label %36, label %38

; <label>:36                                      ; preds = %33
  %37 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str2346, i64 0, i64 0), i64 5) #3
  br label %.backedge

; <label>:38                                      ; preds = %33
  %39 = call i32 @lua_getinfo(%struct.lua_State* %L1, i8* getelementptr inbounds ([5 x i8]* @.str3347, i64 0, i64 0), %struct.lua_Debug* %ar) #3
  %40 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str4348, i64 0, i64 0), i8* %26) #3
  %41 = load i32* %27, align 8, !tbaa !126
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %45

; <label>:43                                      ; preds = %38
  %44 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8]* @.str5349, i64 0, i64 0), i32 %41) #3
  br label %45

; <label>:45                                      ; preds = %43, %38
  %46 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str6350, i64 0, i64 0), i64 4) #3
  %47 = load i8** %28, align 8, !tbaa !134
  %48 = load i8* %47, align 1, !tbaa !86
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %53, label %50

; <label>:50                                      ; preds = %45
  %51 = load i8** %32, align 8, !tbaa !135
  %52 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([14 x i8]* @.str51394, i64 0, i64 0), i8* %51) #3
  br label %pushfuncname.exit

; <label>:53                                      ; preds = %45
  %54 = load i8** %29, align 8, !tbaa !125
  %55 = load i8* %54, align 1, !tbaa !86
  switch i8 %55, label %66 [
    i8 109, label %56
    i8 67, label %58
  ]

; <label>:56                                      ; preds = %53
  %57 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8]* @.str52395, i64 0, i64 0), i64 10) #3
  br label %pushfuncname.exit

; <label>:58                                      ; preds = %53
  %59 = call fastcc i32 @pushglobalfuncname(%struct.lua_State* %L, %struct.lua_Debug* %ar) #3
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

; <label>:61                                      ; preds = %58
  %62 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %63 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([14 x i8]* @.str51394, i64 0, i64 0), i8* %62) #3
  call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  br label %pushfuncname.exit

; <label>:64                                      ; preds = %58
  %65 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str12356, i64 0, i64 0), i64 1) #3
  br label %pushfuncname.exit

; <label>:66                                      ; preds = %53
  %67 = load i32* %30, align 4, !tbaa !120
  %68 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str53396, i64 0, i64 0), i8* %26, i32 %67) #3
  br label %pushfuncname.exit

pushfuncname.exit:                                ; preds = %66, %64, %61, %56, %50
  %69 = load i8* %31, align 1, !tbaa !132
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

; <label>:71                                      ; preds = %pushfuncname.exit
  %72 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([21 x i8]* @.str7351, i64 0, i64 0), i64 20) #3
  br label %73

; <label>:73                                      ; preds = %71, %pushfuncname.exit
  %74 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %75 = sub nsw i32 %74, %2
  call void @lua_concat(%struct.lua_State* %L, i32 %75) #3
  br label %.backedge

.backedge:                                        ; preds = %73, %36
  %.0.be = phi i32 [ %25, %36 ], [ %34, %73 ]
  %76 = call i32 @lua_getstack(%struct.lua_State* %L1, i32 %.0.be, %struct.lua_Debug* %ar) #3
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %._crit_edge, label %33

._crit_edge:                                      ; preds = %.backedge, %21
  %78 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %79 = sub nsw i32 %78, %2
  call void @lua_concat(%struct.lua_State* %L, i32 %79) #3
  call void @llvm.lifetime.end(i64 128, i8* %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %extramsg) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %1) #3
  %2 = call i32 @lua_getstack(%struct.lua_State* %L, i32 0, %struct.lua_Debug* %ar) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([22 x i8]* @.str8352, i64 0, i64 0), i32 %narg, i8* %extramsg)
  br label %33

; <label>:6                                       ; preds = %0
  %7 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str9353, i64 0, i64 0), %struct.lua_Debug* %ar) #3
  %8 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 2
  %9 = load i8** %8, align 8, !tbaa !134
  %10 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([7 x i8]* @.str10354, i64 0, i64 0)) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

; <label>:12                                      ; preds = %6
  %13 = add nsw i32 %narg, -1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

; <label>:15                                      ; preds = %12
  %16 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 1
  %17 = load i8** %16, align 8, !tbaa !135
  %18 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str11355, i64 0, i64 0), i8* %17, i8* %extramsg)
  br label %33

; <label>:19                                      ; preds = %12, %6
  %.01 = phi i32 [ %13, %12 ], [ %narg, %6 ]
  %20 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 1
  %21 = load i8** %20, align 8, !tbaa !135
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %30

; <label>:23                                      ; preds = %19
  %24 = call fastcc i32 @pushglobalfuncname(%struct.lua_State* %L, %struct.lua_Debug* %ar)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

; <label>:26                                      ; preds = %23
  %27 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  br label %28

; <label>:28                                      ; preds = %26, %23
  %29 = phi i8* [ %27, %26 ], [ getelementptr inbounds ([2 x i8]* @.str12356, i64 0, i64 0), %23 ]
  store i8* %29, i8** %20, align 8, !tbaa !135
  br label %30

; <label>:30                                      ; preds = %28, %19
  %31 = phi i8* [ %29, %28 ], [ %21, %19 ]
  %32 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str13357, i64 0, i64 0), i32 %.01, i8* %31, i8* %extramsg)
  br label %33

; <label>:33                                      ; preds = %30, %15, %4
  %.0 = phi i32 [ %18, %15 ], [ %32, %30 ], [ %5, %4 ]
  call void @llvm.lifetime.end(i64 128, i8* %1) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_error(%struct.lua_State* %L, i8* %fmt, ...) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %argp = alloca [1 x %struct.__va_list_tag], align 16
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag]* %argp, i64 0, i64 0
  %2 = bitcast [1 x %struct.__va_list_tag]* %argp to i8*
  call void @llvm.va_start(i8* %2)
  %3 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 128, i8* %3) #3
  %4 = call i32 @lua_getstack(%struct.lua_State* %L, i32 1, %struct.lua_Debug* %ar.i) #3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

; <label>:6                                       ; preds = %0
  %7 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str14358, i64 0, i64 0), %struct.lua_Debug* %ar.i) #3
  %8 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 5
  %9 = load i32* %8, align 8, !tbaa !126
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %14

; <label>:11                                      ; preds = %6
  %12 = getelementptr inbounds %struct.lua_Debug* %ar.i, i64 0, i32 12, i64 0
  %13 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str15359, i64 0, i64 0), i8* %12, i32 %9) #3
  br label %luaL_where.exit

; <label>:14                                      ; preds = %6, %0
  %15 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8]* @.str16360, i64 0, i64 0), i64 0) #3
  br label %luaL_where.exit

luaL_where.exit:                                  ; preds = %14, %11
  call void @llvm.lifetime.end(i64 128, i8* %3) #3
  %16 = call i8* @lua_pushvfstring(%struct.lua_State* %L, i8* %fmt, %struct.__va_list_tag* %1) #3
  call void @llvm.va_end(i8* %2)
  call void @lua_concat(%struct.lua_State* %L, i32 2) #3
  %17 = call i32 @lua_error(%struct.lua_State* %L) #3
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_where(%struct.lua_State* %L, i32 %level) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %1) #3
  %2 = call i32 @lua_getstack(%struct.lua_State* %L, i32 %level, %struct.lua_Debug* %ar) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %12, label %4

; <label>:4                                       ; preds = %0
  %5 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str14358, i64 0, i64 0), %struct.lua_Debug* %ar) #3
  %6 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 5
  %7 = load i32* %6, align 8, !tbaa !126
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %4
  %10 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 12, i64 0
  %11 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str15359, i64 0, i64 0), i8* %10, i32 %7) #3
  br label %14

; <label>:12                                      ; preds = %4, %0
  %13 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8]* @.str16360, i64 0, i64 0), i64 0) #3
  br label %14

; <label>:14                                      ; preds = %12, %9
  call void @llvm.lifetime.end(i64 128, i8* %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_fileresult(%struct.lua_State* %L, i32 %stat, i8* %fname) #0 {
  %1 = tail call i32* @__error() #3
  %2 = load i32* %1, align 4, !tbaa !1
  %3 = icmp eq i32 %stat, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  br label %14

; <label>:5                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  %6 = icmp eq i8* %fname, null
  %7 = tail call i8* @"\01_strerror"(i32 %2) #3
  br i1 %6, label %10, label %8

; <label>:8                                       ; preds = %5
  %9 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8]* @.str17361, i64 0, i64 0), i8* %fname, i8* %7) #3
  br label %12

; <label>:10                                      ; preds = %5
  %11 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %7) #3
  br label %12

; <label>:12                                      ; preds = %10, %8
  %13 = sext i32 %2 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %13) #3
  br label %14

; <label>:14                                      ; preds = %12, %4
  %.0 = phi i32 [ 1, %4 ], [ 3, %12 ]
  ret i32 %.0
}

declare i32* @__error() #8

declare i8* @"\01_strerror"(i32) #8

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_execresult(%struct.lua_State* %L, i32 %stat) #0 {
  %1 = icmp eq i32 %stat, -1
  br i1 %1, label %2, label %8

; <label>:2                                       ; preds = %0
  %3 = tail call i32* @__error() #3
  %4 = load i32* %3, align 4, !tbaa !1
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  %5 = tail call i8* @"\01_strerror"(i32 %4) #3
  %6 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %5) #3
  %7 = sext i32 %4 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %7) #3
  br label %23

; <label>:8                                       ; preds = %0
  %9 = and i32 %stat, 127
  switch i32 %9, label %13 [
    i32 0, label %10
    i32 127, label %14
  ]

; <label>:10                                      ; preds = %8
  %11 = lshr i32 %stat, 8
  %12 = and i32 %11, 255
  br label %14

; <label>:13                                      ; preds = %8
  br label %14

; <label>:14                                      ; preds = %13, %10, %8
  %.0 = phi i32 [ %12, %10 ], [ %9, %13 ], [ %stat, %8 ]
  %what.0 = phi i8* [ getelementptr inbounds ([5 x i8]* @.str18362, i64 0, i64 0), %10 ], [ getelementptr inbounds ([7 x i8]* @.str19363, i64 0, i64 0), %13 ], [ getelementptr inbounds ([5 x i8]* @.str18362, i64 0, i64 0), %8 ]
  %15 = load i8* %what.0, align 1, !tbaa !86
  %16 = icmp eq i8 %15, 101
  %17 = icmp eq i32 %.0, 0
  %or.cond = and i1 %16, %17
  br i1 %or.cond, label %18, label %19

; <label>:18                                      ; preds = %14
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  br label %20

; <label>:19                                      ; preds = %14
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %20

; <label>:20                                      ; preds = %19, %18
  %21 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %what.0) #3
  %22 = sext i32 %.0 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %22) #3
  br label %23

; <label>:23                                      ; preds = %20, %2
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_newmetatable(%struct.lua_State* %L, i8* %tname) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* %tname) #3
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 0) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -1001000, i8* %tname) #3
  br label %4

; <label>:4                                       ; preds = %3, %0
  %.0 = phi i32 [ 1, %3 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_setmetatable(%struct.lua_State* %L, i8* %tname) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* %tname) #3
  %1 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_testudata(%struct.lua_State* %L, i32 %ud, i8* %tname) #0 {
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 %ud) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 %ud) #3
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

; <label>:6                                       ; preds = %3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* %tname) #3
  %7 = tail call i32 @lua_rawequal(%struct.lua_State* %L, i32 -1, i32 -2) #3
  %8 = icmp eq i32 %7, 0
  %. = select i1 %8, i8* null, i8* %1
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %9

; <label>:9                                       ; preds = %6, %3, %0
  %.0 = phi i8* [ %., %6 ], [ null, %3 ], [ null, %0 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_checkudata(%struct.lua_State* %L, i32 %ud, i8* %tname) #0 {
  %1 = tail call i8* @luaL_testudata(%struct.lua_State* %L, i32 %ud, i8* %tname)
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %8

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %ud) #3
  %5 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %4) #3
  %6 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str48391, i64 0, i64 0), i8* %tname, i8* %5) #3
  %7 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %ud, i8* %6) #3
  br label %8

; <label>:8                                       ; preds = %3, %0
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_checkoption(%struct.lua_State* %L, i32 %narg, i8* %def, i8** nocapture readonly %lst) #0 {
  %1 = icmp eq i8* %def, null
  br i1 %1, label %7, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %luaL_optlstring.exit, label %5

; <label>:5                                       ; preds = %2
  %6 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %narg, i64* null) #3
  br label %luaL_optlstring.exit

; <label>:7                                       ; preds = %0
  %8 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %narg, i64* null)
  br label %luaL_optlstring.exit

luaL_optlstring.exit:                             ; preds = %7, %5, %2
  %9 = phi i8* [ %8, %7 ], [ %6, %5 ], [ %def, %2 ]
  %10 = load i8** %lst, align 8, !tbaa !25
  %11 = icmp eq i8* %10, null
  br i1 %11, label %._crit_edge, label %.lr.ph

; <label>:12                                      ; preds = %.lr.ph
  %13 = getelementptr inbounds i8** %lst, i64 %indvars.iv.next
  %14 = load i8** %13, align 8, !tbaa !25
  %15 = icmp eq i8* %14, null
  br i1 %15, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %12, %luaL_optlstring.exit
  %indvars.iv = phi i64 [ %indvars.iv.next, %12 ], [ 0, %luaL_optlstring.exit ]
  %16 = phi i8* [ %14, %12 ], [ %10, %luaL_optlstring.exit ]
  %17 = tail call i32 @strcmp(i8* %16, i8* %9) #3
  %18 = icmp eq i32 %17, 0
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  br i1 %18, label %.loopexit, label %12

._crit_edge:                                      ; preds = %12, %luaL_optlstring.exit
  %19 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str20364, i64 0, i64 0), i8* %9) #3
  %20 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %19)
  br label %22

.loopexit:                                        ; preds = %.lr.ph
  %21 = trunc i64 %indvars.iv to i32
  br label %22

; <label>:22                                      ; preds = %.loopexit, %._crit_edge
  %.0 = phi i32 [ %20, %._crit_edge ], [ %21, %.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_optlstring(%struct.lua_State* %L, i32 %narg, i8* readonly %def, i64* %len) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %3, label %11

; <label>:3                                       ; preds = %0
  %4 = icmp eq i64* %len, null
  br i1 %4, label %13, label %5

; <label>:5                                       ; preds = %3
  %6 = icmp eq i8* %def, null
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %5
  %8 = tail call i64 @strlen(i8* %def) #3
  br label %9

; <label>:9                                       ; preds = %7, %5
  %10 = phi i64 [ %8, %7 ], [ 0, %5 ]
  store i64 %10, i64* %len, align 8, !tbaa !32
  br label %13

; <label>:11                                      ; preds = %0
  %12 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %narg, i64* %len)
  br label %13

; <label>:13                                      ; preds = %11, %9, %3
  %.0 = phi i8* [ %12, %11 ], [ %def, %3 ], [ %def, %9 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_checklstring(%struct.lua_State* %L, i32 %narg, i64* %len) #0 {
  %1 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %narg, i64* %len) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %9

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 4) #3
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %6 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %5) #3
  %7 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str48391, i64 0, i64 0), i8* %4, i8* %6) #3
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %7) #3
  br label %9

; <label>:9                                       ; preds = %3, %0
  ret i8* %1
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_checkstack(%struct.lua_State* %L, i32 %space, i8* %msg) #0 {
  %1 = add nsw i32 %space, 20
  %2 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 %1) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %10

; <label>:4                                       ; preds = %0
  %5 = icmp eq i8* %msg, null
  br i1 %5, label %8, label %6

; <label>:6                                       ; preds = %4
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str21365, i64 0, i64 0), i8* %msg)
  br label %10

; <label>:8                                       ; preds = %4
  %9 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8]* @.str22366, i64 0, i64 0))
  br label %10

; <label>:10                                      ; preds = %8, %6, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_checktype(%struct.lua_State* %L, i32 %narg, i32 %t) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %2 = icmp eq i32 %1, %t
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %t) #3
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %6 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %5) #3
  %7 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str48391, i64 0, i64 0), i8* %4, i8* %6) #3
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %7) #3
  br label %9

; <label>:9                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_checkany(%struct.lua_State* %L, i32 %narg) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* getelementptr inbounds ([15 x i8]* @.str23367, i64 0, i64 0))
  br label %5

; <label>:5                                       ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define double @luaL_checknumber(%struct.lua_State* %L, i32 %narg) #0 {
  %isnum = alloca i32, align 4
  %1 = call double @lua_tonumberx(%struct.lua_State* %L, i32 %narg, i32* %isnum) #3
  %2 = load i32* %isnum, align 4, !tbaa !1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %10

; <label>:4                                       ; preds = %0
  %5 = call i8* @lua_typename(%struct.lua_State* %L, i32 3) #3
  %6 = call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %7 = call i8* @lua_typename(%struct.lua_State* %L, i32 %6) #3
  %8 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str48391, i64 0, i64 0), i8* %5, i8* %7) #3
  %9 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %8) #3
  br label %10

; <label>:10                                      ; preds = %4, %0
  ret double %1
}

; Function Attrs: nounwind ssp uwtable
define double @luaL_optnumber(%struct.lua_State* %L, i32 %narg, double %def) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 %narg)
  br label %5

; <label>:5                                       ; preds = %3, %0
  %6 = phi double [ %4, %3 ], [ %def, %0 ]
  ret double %6
}

; Function Attrs: nounwind ssp uwtable
define i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %narg) #0 {
  %isnum = alloca i32, align 4
  %1 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 %narg, i32* %isnum) #3
  %2 = load i32* %isnum, align 4, !tbaa !1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %10

; <label>:4                                       ; preds = %0
  %5 = call i8* @lua_typename(%struct.lua_State* %L, i32 3) #3
  %6 = call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %7 = call i8* @lua_typename(%struct.lua_State* %L, i32 %6) #3
  %8 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str48391, i64 0, i64 0), i8* %5, i8* %7) #3
  %9 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %8) #3
  br label %10

; <label>:10                                      ; preds = %4, %0
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 %narg) #0 {
  %isnum = alloca i32, align 4
  %1 = call i32 @lua_tounsignedx(%struct.lua_State* %L, i32 %narg, i32* %isnum) #3
  %2 = load i32* %isnum, align 4, !tbaa !1
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %10

; <label>:4                                       ; preds = %0
  %5 = call i8* @lua_typename(%struct.lua_State* %L, i32 3) #3
  %6 = call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %7 = call i8* @lua_typename(%struct.lua_State* %L, i32 %6) #3
  %8 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str48391, i64 0, i64 0), i8* %5, i8* %7) #3
  %9 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %narg, i8* %8) #3
  br label %10

; <label>:10                                      ; preds = %4, %0
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define i64 @luaL_optinteger(%struct.lua_State* %L, i32 %narg, i64 %def) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %narg)
  br label %5

; <label>:5                                       ; preds = %3, %0
  %6 = phi i64 [ %4, %3 ], [ %def, %0 ]
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_optunsigned(%struct.lua_State* %L, i32 %narg, i32 %def) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %narg) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 %narg)
  br label %5

; <label>:5                                       ; preds = %3, %0
  %6 = phi i32 [ %4, %3 ], [ %def, %0 ]
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %B, i64 %sz) #0 {
  %1 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 3
  %2 = load %struct.lua_State** %1, align 8, !tbaa !300
  %3 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 1
  %4 = load i64* %3, align 8, !tbaa !302
  %5 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  %6 = load i64* %5, align 8, !tbaa !303
  %7 = sub i64 %4, %6
  %8 = icmp ult i64 %7, %sz
  br i1 %8, label %9, label %._crit_edge

._crit_edge:                                      ; preds = %0
  %.phi.trans.insert = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  %.pre2 = load i8** %.phi.trans.insert, align 8, !tbaa !304
  br label %31

; <label>:9                                       ; preds = %0
  %10 = shl i64 %4, 1
  %11 = sub i64 %10, %6
  %12 = icmp ult i64 %11, %sz
  %13 = add i64 %6, %sz
  %. = select i1 %12, i64 %13, i64 %10
  %14 = icmp ult i64 %., %6
  %15 = sub i64 %., %6
  %16 = icmp ult i64 %15, %sz
  %or.cond = or i1 %14, %16
  br i1 %or.cond, label %17, label %19

; <label>:17                                      ; preds = %9
  %18 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %2, i8* getelementptr inbounds ([17 x i8]* @.str24368, i64 0, i64 0))
  br label %19

; <label>:19                                      ; preds = %17, %9
  %20 = tail call i8* @lua_newuserdata(%struct.lua_State* %2, i64 %.) #3
  %21 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  %22 = load i8** %21, align 8, !tbaa !304
  %23 = load i64* %5, align 8, !tbaa !303
  %24 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %20, i1 false)
  %25 = tail call i8* @__memcpy_chk(i8* %20, i8* %22, i64 %23, i64 %24) #3
  %26 = load i8** %21, align 8, !tbaa !304
  %27 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 4, i64 0
  %28 = icmp eq i8* %26, %27
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %19
  tail call void @lua_remove(%struct.lua_State* %2, i32 -2) #3
  br label %30

; <label>:30                                      ; preds = %29, %19
  store i8* %20, i8** %21, align 8, !tbaa !304
  store i64 %., i64* %3, align 8, !tbaa !302
  %.pre = load i64* %5, align 8, !tbaa !303
  br label %31

; <label>:31                                      ; preds = %30, %._crit_edge
  %32 = phi i8* [ %20, %30 ], [ %.pre2, %._crit_edge ]
  %33 = phi i64 [ %.pre, %30 ], [ %6, %._crit_edge ]
  %34 = getelementptr inbounds i8* %32, i64 %33
  ret i8* %34
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_addlstring(%struct.luaL_Buffer* %B, i8* %s, i64 %l) #0 {
  %1 = tail call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %B, i64 %l)
  %2 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %1, i1 false)
  %3 = tail call i8* @__memcpy_chk(i8* %1, i8* %s, i64 %l, i64 %2) #3
  %4 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  %5 = load i64* %4, align 8, !tbaa !303
  %6 = add i64 %5, %l
  store i64 %6, i64* %4, align 8, !tbaa !303
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_addstring(%struct.luaL_Buffer* %B, i8* %s) #0 {
  %1 = tail call i64 @strlen(i8* %s) #3
  %2 = tail call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %B, i64 %1) #3
  %3 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %2, i1 false) #3
  %4 = tail call i8* @__memcpy_chk(i8* %2, i8* %s, i64 %1, i64 %3) #3
  %5 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  %6 = load i64* %5, align 8, !tbaa !303
  %7 = add i64 %6, %1
  store i64 %7, i64* %5, align 8, !tbaa !303
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_pushresult(%struct.luaL_Buffer* readonly %B) #0 {
  %1 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 3
  %2 = load %struct.lua_State** %1, align 8, !tbaa !300
  %3 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  %4 = load i8** %3, align 8, !tbaa !304
  %5 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  %6 = load i64* %5, align 8, !tbaa !303
  %7 = tail call i8* @lua_pushlstring(%struct.lua_State* %2, i8* %4, i64 %6) #3
  %8 = load i8** %3, align 8, !tbaa !304
  %9 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 4, i64 0
  %10 = icmp eq i8* %8, %9
  br i1 %10, label %12, label %11

; <label>:11                                      ; preds = %0
  tail call void @lua_remove(%struct.lua_State* %2, i32 -2) #3
  br label %12

; <label>:12                                      ; preds = %11, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_pushresultsize(%struct.luaL_Buffer* %B, i64 %sz) #0 {
  %1 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  %2 = load i64* %1, align 8, !tbaa !303
  %3 = add i64 %2, %sz
  store i64 %3, i64* %1, align 8, !tbaa !303
  %4 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 3
  %5 = load %struct.lua_State** %4, align 8, !tbaa !300
  %6 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  %7 = load i8** %6, align 8, !tbaa !304
  %8 = tail call i8* @lua_pushlstring(%struct.lua_State* %5, i8* %7, i64 %3) #3
  %9 = load i8** %6, align 8, !tbaa !304
  %10 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 4, i64 0
  %11 = icmp eq i8* %9, %10
  br i1 %11, label %luaL_pushresult.exit, label %12

; <label>:12                                      ; preds = %0
  tail call void @lua_remove(%struct.lua_State* %5, i32 -2) #3
  br label %luaL_pushresult.exit

luaL_pushresult.exit:                             ; preds = %12, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_addvalue(%struct.luaL_Buffer* %B) #0 {
  %l = alloca i64, align 8
  %1 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 3
  %2 = load %struct.lua_State** %1, align 8, !tbaa !300
  %3 = call i8* @lua_tolstring(%struct.lua_State* %2, i32 -1, i64* %l) #3
  %4 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  %5 = load i8** %4, align 8, !tbaa !304
  %6 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 4, i64 0
  %7 = icmp eq i8* %5, %6
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %0
  call void @lua_insert(%struct.lua_State* %2, i32 -2) #3
  br label %9

; <label>:9                                       ; preds = %8, %0
  %10 = load i64* %l, align 8, !tbaa !32
  %11 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %B, i64 %10) #3
  %12 = call i64 @llvm.objectsize.i64.p0i8(i8* %11, i1 false) #3
  %13 = call i8* @__memcpy_chk(i8* %11, i8* %3, i64 %10, i64 %12) #3
  %14 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  %15 = load i64* %14, align 8, !tbaa !303
  %16 = add i64 %15, %10
  store i64 %16, i64* %14, align 8, !tbaa !303
  %17 = load i8** %4, align 8, !tbaa !304
  %18 = icmp ne i8* %17, %6
  %19 = select i1 %18, i32 -2, i32 -1
  call void @lua_remove(%struct.lua_State* %2, i32 %19) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %B) #0 {
  %1 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 3
  store %struct.lua_State* %L, %struct.lua_State** %1, align 8, !tbaa !300
  %2 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 4, i64 0
  %3 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  store i8* %2, i8** %3, align 8, !tbaa !304
  %4 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  store i64 0, i64* %4, align 8, !tbaa !303
  %5 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 1
  store i64 1024, i64* %5, align 8, !tbaa !302
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_buffinitsize(%struct.lua_State* %L, %struct.luaL_Buffer* %B, i64 %sz) #0 {
  %1 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 3
  store %struct.lua_State* %L, %struct.lua_State** %1, align 8, !tbaa !300
  %2 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 4, i64 0
  %3 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 0
  store i8* %2, i8** %3, align 8, !tbaa !304
  %4 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 2
  store i64 0, i64* %4, align 8, !tbaa !303
  %5 = getelementptr inbounds %struct.luaL_Buffer* %B, i64 0, i32 1
  store i64 1024, i64* %5, align 8, !tbaa !302
  %6 = tail call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %B, i64 %sz)
  ret i8* %6
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_ref(%struct.lua_State* %L, i32 %t) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %15

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_absindex(%struct.lua_State* %L, i32 %t) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 %5, i32 0) #3
  %6 = tail call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* null) #3
  %7 = trunc i64 %6 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

; <label>:9                                       ; preds = %4
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 %5, i32 %7) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %5, i32 0) #3
  br label %14

; <label>:10                                      ; preds = %4
  %11 = tail call i64 @lua_rawlen(%struct.lua_State* %L, i32 %5) #3
  %12 = trunc i64 %11 to i32
  %13 = add nsw i32 %12, 1
  br label %14

; <label>:14                                      ; preds = %10, %9
  %ref.0 = phi i32 [ %7, %9 ], [ %13, %10 ]
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %5, i32 %ref.0) #3
  br label %15

; <label>:15                                      ; preds = %14, %3
  %.0 = phi i32 [ -1, %3 ], [ %ref.0, %14 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_unref(%struct.lua_State* %L, i32 %t, i32 %ref) #0 {
  %1 = icmp sgt i32 %ref, -1
  br i1 %1, label %2, label %5

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_absindex(%struct.lua_State* %L, i32 %t) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 %3, i32 0) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %3, i32 %ref) #3
  %4 = sext i32 %ref to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %4) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 %3, i32 0) #3
  br label %5

; <label>:5                                       ; preds = %2, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_loadfilex(%struct.lua_State* %L, i8* %filename, i8* %mode) #0 {
  %lf = alloca %struct.LoadF, align 8
  %c = alloca i32, align 4
  %1 = bitcast %struct.LoadF* %lf to i8*
  call void @llvm.lifetime.start(i64 1040, i8* %1) #3
  %2 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %3 = add nsw i32 %2, 1
  %4 = icmp eq i8* %filename, null
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8]* @.str25369, i64 0, i64 0), i64 6) #3
  %7 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !25
  %8 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 1
  store %struct.__sFILE* %7, %struct.__sFILE** %8, align 8, !tbaa !305
  br label %21

; <label>:9                                       ; preds = %0
  %10 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8]* @.str26370, i64 0, i64 0), i8* %filename) #3
  %11 = call %struct.__sFILE* @"\01_fopen"(i8* %filename, i8* getelementptr inbounds ([2 x i8]* @.str27371, i64 0, i64 0)) #3
  %12 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 1
  store %struct.__sFILE* %11, %struct.__sFILE** %12, align 8, !tbaa !305
  %13 = icmp eq %struct.__sFILE* %11, null
  br i1 %13, label %14, label %21

; <label>:14                                      ; preds = %9
  %15 = call i32* @__error() #3
  %16 = load i32* %15, align 4, !tbaa !1
  %17 = call i8* @"\01_strerror"(i32 %16) #3
  %18 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 %3, i64* null) #3
  %19 = getelementptr inbounds i8* %18, i64 1
  %20 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str47390, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str28372, i64 0, i64 0), i8* %19, i8* %17) #3
  call void @lua_remove(%struct.lua_State* %L, i32 %3) #3
  br label %76

; <label>:21                                      ; preds = %9, %5
  %22 = call fastcc i32 @skipcomment(%struct.LoadF* %lf, i32* %c)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %30, label %24

; <label>:24                                      ; preds = %21
  %25 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 0
  %26 = load i32* %25, align 8, !tbaa !307
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %25, align 8, !tbaa !307
  %28 = sext i32 %26 to i64
  %29 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 2, i64 %28
  store i8 10, i8* %29, align 1, !tbaa !86
  br label %30

; <label>:30                                      ; preds = %24, %21
  %31 = load i32* %c, align 4, !tbaa !1
  %32 = icmp eq i32 %31, 27
  %33 = icmp ne i8* %filename, null
  %or.cond = and i1 %32, %33
  br i1 %or.cond, label %34, label %48

; <label>:34                                      ; preds = %30
  %35 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 1
  %36 = load %struct.__sFILE** %35, align 8, !tbaa !305
  %37 = call %struct.__sFILE* @"\01_freopen"(i8* %filename, i8* getelementptr inbounds ([3 x i8]* @.str30373, i64 0, i64 0), %struct.__sFILE* %36) #3
  store %struct.__sFILE* %37, %struct.__sFILE** %35, align 8, !tbaa !305
  %38 = icmp eq %struct.__sFILE* %37, null
  br i1 %38, label %39, label %46

; <label>:39                                      ; preds = %34
  %40 = call i32* @__error() #3
  %41 = load i32* %40, align 4, !tbaa !1
  %42 = call i8* @"\01_strerror"(i32 %41) #3
  %43 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 %3, i64* null) #3
  %44 = getelementptr inbounds i8* %43, i64 1
  %45 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str47390, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str31374, i64 0, i64 0), i8* %44, i8* %42) #3
  call void @lua_remove(%struct.lua_State* %L, i32 %3) #3
  br label %76

; <label>:46                                      ; preds = %34
  %47 = call fastcc i32 @skipcomment(%struct.LoadF* %lf, i32* %c)
  %.pr = load i32* %c, align 4, !tbaa !1
  br label %48

; <label>:48                                      ; preds = %46, %30
  %49 = phi i32 [ %.pr, %46 ], [ %31, %30 ]
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %58, label %51

; <label>:51                                      ; preds = %48
  %52 = trunc i32 %49 to i8
  %53 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 0
  %54 = load i32* %53, align 8, !tbaa !307
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %53, align 8, !tbaa !307
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 2, i64 %56
  store i8 %52, i8* %57, align 1, !tbaa !86
  br label %58

; <label>:58                                      ; preds = %51, %48
  %59 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %60 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* @getF, i8* %1, i8* %59, i8* %mode) #3
  %61 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 1
  %62 = load %struct.__sFILE** %61, align 8, !tbaa !305
  %63 = call i32 @ferror(%struct.__sFILE* %62) #3
  br i1 %33, label %64, label %66

; <label>:64                                      ; preds = %58
  %65 = call i32 @fclose(%struct.__sFILE* %62) #3
  br label %66

; <label>:66                                      ; preds = %64, %58
  %67 = icmp eq i32 %63, 0
  br i1 %67, label %75, label %68

; <label>:68                                      ; preds = %66
  call void @lua_settop(%struct.lua_State* %L, i32 %3) #3
  %69 = call i32* @__error() #3
  %70 = load i32* %69, align 4, !tbaa !1
  %71 = call i8* @"\01_strerror"(i32 %70) #3
  %72 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 %3, i64* null) #3
  %73 = getelementptr inbounds i8* %72, i64 1
  %74 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([17 x i8]* @.str47390, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str32375, i64 0, i64 0), i8* %73, i8* %71) #3
  call void @lua_remove(%struct.lua_State* %L, i32 %3) #3
  br label %76

; <label>:75                                      ; preds = %66
  call void @lua_remove(%struct.lua_State* %L, i32 %3) #3
  br label %76

; <label>:76                                      ; preds = %75, %68, %39, %14
  %.0 = phi i32 [ 7, %39 ], [ 7, %68 ], [ %60, %75 ], [ 7, %14 ]
  call void @llvm.lifetime.end(i64 1040, i8* %1) #3
  ret i32 %.0
}

declare %struct.__sFILE* @"\01_fopen"(i8*, i8*) #8

declare %struct.__sFILE* @"\01_freopen"(i8*, i8*, %struct.__sFILE*) #8

; Function Attrs: nounwind readonly
declare i32 @ferror(%struct.__sFILE* nocapture) #5

; Function Attrs: nounwind
declare i32 @fclose(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %buff, i64 %size, i8* %name, i8* %mode) #0 {
  %ls = alloca %struct.LoadS, align 8
  %1 = getelementptr inbounds %struct.LoadS* %ls, i64 0, i32 0
  store i8* %buff, i8** %1, align 8, !tbaa !308
  %2 = getelementptr inbounds %struct.LoadS* %ls, i64 0, i32 1
  store i64 %size, i64* %2, align 8, !tbaa !310
  %3 = bitcast %struct.LoadS* %ls to i8*
  %4 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* @getS, i8* %3, i8* %name, i8* %mode) #3
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_loadstring(%struct.lua_State* %L, i8* %s) #0 {
  %ls.i = alloca %struct.LoadS, align 8
  %1 = call i64 @strlen(i8* %s) #3
  %2 = bitcast %struct.LoadS* %ls.i to i8*
  call void @llvm.lifetime.start(i64 16, i8* %2) #3
  %3 = getelementptr inbounds %struct.LoadS* %ls.i, i64 0, i32 0
  store i8* %s, i8** %3, align 8, !tbaa !308
  %4 = getelementptr inbounds %struct.LoadS* %ls.i, i64 0, i32 1
  store i64 %1, i64* %4, align 8, !tbaa !310
  %5 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* @getS, i8* %2, i8* %s, i8* null) #3
  call void @llvm.lifetime.end(i64 16, i8* %2) #3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_getmetafield(%struct.lua_State* %L, i32 %obj, i8* %event) #0 {
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 %obj) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %9, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %event) #3
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #3
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %9

; <label>:8                                       ; preds = %3
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  br label %9

; <label>:9                                       ; preds = %8, %7, %0
  %.0 = phi i32 [ 0, %7 ], [ 1, %8 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_callmeta(%struct.lua_State* %L, i32 %obj, i8* %event) #0 {
  %1 = tail call i32 @lua_absindex(%struct.lua_State* %L, i32 %obj) #3
  %2 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 %1, i8* %event)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %1) #3
  tail call void @lua_callk(%struct.lua_State* %L, i32 1, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  br label %5

; <label>:5                                       ; preds = %4, %0
  %.0 = phi i32 [ 1, %4 ], [ 0, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_len(%struct.lua_State* %L, i32 %idx) #0 {
  %isnum = alloca i32, align 4
  call void @lua_len(%struct.lua_State* %L, i32 %idx) #3
  %1 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum) #3
  %2 = trunc i64 %1 to i32
  %3 = load i32* %isnum, align 4, !tbaa !1
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str33376, i64 0, i64 0))
  br label %7

; <label>:7                                       ; preds = %5, %0
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_tolstring(%struct.lua_State* %L, i32 %idx, i64* %len) #0 {
  %1 = tail call i32 @lua_absindex(%struct.lua_State* %L, i32 %idx) #3
  %2 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 %1, i8* getelementptr inbounds ([11 x i8]* @.str34377, i64 0, i64 0)) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %luaL_callmeta.exit

luaL_callmeta.exit:                               ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %1) #3
  tail call void @lua_callk(%struct.lua_State* %L, i32 1, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  br label %19

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %idx) #3
  switch i32 %5, label %14 [
    i32 3, label %6
    i32 4, label %6
    i32 1, label %7
    i32 0, label %12
  ]

; <label>:6                                       ; preds = %4, %4
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %idx) #3
  br label %19

; <label>:7                                       ; preds = %4
  %8 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 %idx) #3
  %9 = icmp ne i32 %8, 0
  %10 = select i1 %9, i8* getelementptr inbounds ([5 x i8]* @.str35378, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str36379, i64 0, i64 0)
  %11 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %10) #3
  br label %19

; <label>:12                                      ; preds = %4
  %13 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8]* @.str37380, i64 0, i64 0), i64 3) #3
  br label %19

; <label>:14                                      ; preds = %4
  %15 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %idx) #3
  %16 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %15) #3
  %17 = tail call i8* @lua_topointer(%struct.lua_State* %L, i32 %idx) #3
  %18 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8]* @.str38381, i64 0, i64 0), i8* %16, i8* %17) #3
  br label %19

; <label>:19                                      ; preds = %14, %12, %7, %6, %luaL_callmeta.exit
  %20 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* %len) #3
  ret i8* %20
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_pushmodule(%struct.lua_State* %L, i8* %modname, i32 %sizehint) #0 {
  %1 = tail call fastcc i8* @luaL_findtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([8 x i8]* @.str39382, i64 0, i64 0), i32 1)
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* %modname) #3
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %3 = icmp eq i32 %2, 5
  br i1 %3, label %10, label %4

; <label>:4                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -1001000, i32 2) #3
  %5 = tail call fastcc i8* @luaL_findtable(%struct.lua_State* %L, i32 0, i8* %modname, i32 %sizehint)
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str40383, i64 0, i64 0), i8* %modname)
  br label %9

; <label>:9                                       ; preds = %7, %4
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* %modname) #3
  br label %10

; <label>:10                                      ; preds = %9, %0
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_openlib(%struct.lua_State* %L, i8* %libname, %struct.luaL_Reg* readonly %l, i32 %nup) #0 {
  tail call void @luaL_checkversion_(%struct.lua_State* %L, double 5.020000e+02)
  %1 = icmp eq i8* %libname, null
  br i1 %1, label %13, label %2

; <label>:2                                       ; preds = %0
  %3 = icmp eq %struct.luaL_Reg* %l, null
  br i1 %3, label %libsize.exit, label %.lr.ph.i.preheader

.lr.ph.i.preheader:                               ; preds = %2
  %4 = getelementptr inbounds %struct.luaL_Reg* %l, i64 0, i32 0
  %5 = load i8** %4, align 8, !tbaa !311
  %6 = icmp eq i8* %5, null
  br i1 %6, label %libsize.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %.lr.ph.i.preheader
  %.01.i2 = phi %struct.luaL_Reg* [ %8, %.lr.ph.i ], [ %l, %.lr.ph.i.preheader ]
  %size.02.i1 = phi i32 [ %7, %.lr.ph.i ], [ 0, %.lr.ph.i.preheader ]
  %7 = add nsw i32 %size.02.i1, 1
  %8 = getelementptr inbounds %struct.luaL_Reg* %.01.i2, i64 1
  %9 = getelementptr inbounds %struct.luaL_Reg* %8, i64 0, i32 0
  %10 = load i8** %9, align 8, !tbaa !311
  %11 = icmp eq i8* %10, null
  br i1 %11, label %libsize.exit, label %.lr.ph.i

libsize.exit:                                     ; preds = %.lr.ph.i, %.lr.ph.i.preheader, %2
  %size.0.lcssa.i = phi i32 [ 0, %2 ], [ 0, %.lr.ph.i.preheader ], [ %7, %.lr.ph.i ]
  tail call void @luaL_pushmodule(%struct.lua_State* %L, i8* %libname, i32 %size.0.lcssa.i)
  %12 = xor i32 %nup, -1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %12) #3
  br label %13

; <label>:13                                      ; preds = %libsize.exit, %0
  %14 = icmp eq %struct.luaL_Reg* %l, null
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* %l, i32 %nup)
  br label %18

; <label>:16                                      ; preds = %13
  %17 = xor i32 %nup, -1
  tail call void @lua_settop(%struct.lua_State* %L, i32 %17) #3
  br label %18

; <label>:18                                      ; preds = %16, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_checkversion_(%struct.lua_State* %L, double %ver) #0 {
  %1 = tail call double* @lua_version(%struct.lua_State* %L) #3
  %2 = tail call double* @lua_version(%struct.lua_State* null) #3
  %3 = icmp eq double* %1, %2
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([26 x i8]* @.str42385, i64 0, i64 0))
  br label %11

; <label>:6                                       ; preds = %0
  %7 = load double* %1, align 8, !tbaa !30
  %8 = fcmp une double %7, %ver
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %6
  %10 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([54 x i8]* @.str43386, i64 0, i64 0), double %ver, double %7)
  br label %11

; <label>:11                                      ; preds = %9, %6, %4
  tail call void @lua_pushnumber(%struct.lua_State* %L, double -4.660000e+03) #3
  %12 = tail call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* null) #3
  %13 = icmp eq i64 %12, -4660
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %11
  %15 = tail call i32 @lua_tounsignedx(%struct.lua_State* %L, i32 -1, i32* null) #3
  %16 = icmp eq i32 %15, -4660
  br i1 %16, label %19, label %17

; <label>:17                                      ; preds = %14, %11
  %18 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([68 x i8]* @.str44387, i64 0, i64 0))
  br label %19

; <label>:19                                      ; preds = %17, %14
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* nocapture readonly %l, i32 %nup) #0 {
  tail call void @luaL_checkversion_(%struct.lua_State* %L, double 5.020000e+02)
  %1 = add nsw i32 %nup, 20
  %2 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 %1) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %luaL_checkstack.exit.preheader

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([20 x i8]* @.str21365, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8]* @.str41384, i64 0, i64 0)) #3
  br label %luaL_checkstack.exit.preheader

luaL_checkstack.exit.preheader:                   ; preds = %4, %0
  %6 = getelementptr inbounds %struct.luaL_Reg* %l, i64 0, i32 0
  %7 = load i8** %6, align 8, !tbaa !311
  %8 = icmp eq i8* %7, null
  br i1 %8, label %luaL_checkstack.exit._crit_edge, label %.preheader.lr.ph

.preheader.lr.ph:                                 ; preds = %luaL_checkstack.exit.preheader
  %9 = icmp sgt i32 %nup, 0
  %10 = sub i32 -2, %nup
  %11 = sub nsw i32 0, %nup
  br label %.preheader

.preheader:                                       ; preds = %luaL_checkstack.exit, %.preheader.lr.ph
  %12 = phi i8** [ %6, %.preheader.lr.ph ], [ %18, %luaL_checkstack.exit ]
  br i1 %9, label %.lr.ph, label %luaL_checkstack.exit

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %i.01 = phi i32 [ %13, %.lr.ph ], [ 0, %.preheader ]
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %11) #3
  %13 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %13, %nup
  br i1 %exitcond, label %luaL_checkstack.exit, label %.lr.ph

luaL_checkstack.exit:                             ; preds = %.lr.ph, %.preheader
  %14 = getelementptr inbounds i8** %12, i64 1
  %15 = load i8** %14, align 8
  %16 = bitcast i8* %15 to i32 (%struct.lua_State*)*
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %16, i32 %nup) #3
  %17 = load i8** %12, align 8, !tbaa !311
  tail call void @lua_setfield(%struct.lua_State* %L, i32 %10, i8* %17) #3
  %18 = getelementptr inbounds i8** %12, i64 2
  %19 = load i8** %18, align 8, !tbaa !311
  %20 = icmp eq i8* %19, null
  br i1 %20, label %luaL_checkstack.exit._crit_edge, label %.preheader

luaL_checkstack.exit._crit_edge:                  ; preds = %luaL_checkstack.exit, %luaL_checkstack.exit.preheader
  %21 = xor i32 %nup, -1
  tail call void @lua_settop(%struct.lua_State* %L, i32 %21) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaL_getsubtable(%struct.lua_State* %L, i32 %idx, i8* %fname) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 %idx, i8* %fname) #3
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %2 = icmp eq i32 %1, 5
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %4 = tail call i32 @lua_absindex(%struct.lua_State* %L, i32 %idx) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 0) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 %4, i8* %fname) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  %.0 = phi i32 [ 0, %3 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_requiref(%struct.lua_State* %L, i8* %modname, i32 (%struct.lua_State*)* %openf, i32 %glb) #0 {
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %openf, i32 0) #3
  %1 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %modname) #3
  tail call void @lua_callk(%struct.lua_State* %L, i32 1, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  %2 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([8 x i8]* @.str39382, i64 0, i64 0))
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* %modname) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %3 = icmp eq i32 %glb, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setglobal(%struct.lua_State* %L, i8* %modname) #3
  br label %5

; <label>:5                                       ; preds = %4, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i8* @luaL_gsub(%struct.lua_State* %L, i8* %s, i8* nocapture readonly %p, i8* %r) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = call i64 @strlen(i8* %p) #3
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %2) #3
  %3 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 3
  store %struct.lua_State* %L, %struct.lua_State** %3, align 8, !tbaa !300
  %4 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 4, i64 0
  %5 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 0
  store i8* %4, i8** %5, align 8, !tbaa !304
  %6 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 2
  store i64 0, i64* %6, align 8, !tbaa !303
  %7 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 1
  store i64 1024, i64* %7, align 8, !tbaa !302
  %8 = call i8* @strstr(i8* %s, i8* %p) #3
  %9 = icmp eq i8* %8, null
  br i1 %9, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %10 = phi i8* [ %26, %.lr.ph ], [ %8, %0 ]
  %.01 = phi i8* [ %25, %.lr.ph ], [ %s, %0 ]
  %11 = ptrtoint i8* %10 to i64
  %12 = ptrtoint i8* %.01 to i64
  %13 = sub i64 %11, %12
  %14 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 %13) #3
  %15 = call i64 @llvm.objectsize.i64.p0i8(i8* %14, i1 false) #3
  %16 = call i8* @__memcpy_chk(i8* %14, i8* %.01, i64 %13, i64 %15) #3
  %17 = load i64* %6, align 8, !tbaa !303
  %18 = add i64 %17, %13
  store i64 %18, i64* %6, align 8, !tbaa !303
  %19 = call i64 @strlen(i8* %r) #3
  %20 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 %19) #3
  %21 = call i64 @llvm.objectsize.i64.p0i8(i8* %20, i1 false) #3
  %22 = call i8* @__memcpy_chk(i8* %20, i8* %r, i64 %19, i64 %21) #3
  %23 = load i64* %6, align 8, !tbaa !303
  %24 = add i64 %23, %19
  store i64 %24, i64* %6, align 8, !tbaa !303
  %25 = getelementptr inbounds i8* %10, i64 %1
  %26 = call i8* @strstr(i8* %25, i8* %p) #3
  %27 = icmp eq i8* %26, null
  br i1 %27, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %.0.lcssa = phi i8* [ %s, %0 ], [ %25, %.lr.ph ]
  %28 = call i64 @strlen(i8* %.0.lcssa) #3
  %29 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 %28) #3
  %30 = call i64 @llvm.objectsize.i64.p0i8(i8* %29, i1 false) #3
  %31 = call i8* @__memcpy_chk(i8* %29, i8* %.0.lcssa, i64 %28, i64 %30) #3
  %32 = load i64* %6, align 8, !tbaa !303
  %33 = add i64 %32, %28
  store i64 %33, i64* %6, align 8, !tbaa !303
  %34 = load %struct.lua_State** %3, align 8, !tbaa !300
  %35 = load i8** %5, align 8, !tbaa !304
  %36 = call i8* @lua_pushlstring(%struct.lua_State* %34, i8* %35, i64 %33) #3
  %37 = load i8** %5, align 8, !tbaa !304
  %38 = icmp eq i8* %37, %4
  br i1 %38, label %luaL_pushresult.exit, label %39

; <label>:39                                      ; preds = %._crit_edge
  call void @lua_remove(%struct.lua_State* %34, i32 -2) #3
  br label %luaL_pushresult.exit

luaL_pushresult.exit:                             ; preds = %39, %._crit_edge
  %40 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  call void @llvm.lifetime.end(i64 1056, i8* %2) #3
  ret i8* %40
}

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define %struct.lua_State* @luaL_newstate() #0 {
  %1 = tail call %struct.lua_State* bitcast (%struct.lua_State.228* (i8* (i8*, i8*, i64, i64)*, i8*)* @lua_newstate to %struct.lua_State* (i8* (i8*, i8*, i64, i64)*, i8*)*)(i8* (i8*, i8*, i64, i64)* @l_alloc, i8* null) #3
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 (%struct.lua_State*)* (%struct.lua_State*, i32 (%struct.lua_State*)*)* @lua_atpanic(%struct.lua_State* %1, i32 (%struct.lua_State*)* @panic) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  ret %struct.lua_State* %1
}

; Function Attrs: nounwind
declare i32 @fprintf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) #12

; Function Attrs: nounwind
declare i32 @fflush(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare void @free(i8* nocapture) #12

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) #12

; Function Attrs: nounwind
declare i32 @feof(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare i32 @getc(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pushglobalfuncname(%struct.lua_State* %L, %struct.lua_Debug* %ar) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = tail call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str49392, i64 0, i64 0), %struct.lua_Debug* %ar) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -1001000, i32 2) #3
  %3 = add nsw i32 %1, 1
  %4 = tail call fastcc i32 @findfield(%struct.lua_State* %L, i32 %3, i32 2)
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

; <label>:6                                       ; preds = %0
  tail call void @lua_copy(%struct.lua_State* %L, i32 -1, i32 %3) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %8

; <label>:7                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 %1) #3
  br label %8

; <label>:8                                       ; preds = %7, %6
  %.0 = phi i32 [ 1, %6 ], [ 0, %7 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @skipcomment(%struct.LoadF* nocapture %lf, i32* nocapture %cp) #0 {
  %1 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 0
  store i32 0, i32* %1, align 4, !tbaa !307
  %2 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 1
  br label %3

; <label>:3                                       ; preds = %12, %0
  %p.0.i = phi i8* [ getelementptr inbounds ([4 x i8]* @.str46389, i64 0, i64 0), %0 ], [ %8, %12 ]
  %4 = load %struct.__sFILE** %2, align 8, !tbaa !305
  %5 = tail call i32 @getc(%struct.__sFILE* %4) #3
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %skipBOM.exit.thread, label %7

skipBOM.exit.thread:                              ; preds = %3
  store i32 -1, i32* %cp, align 4, !tbaa !1
  br label %28

; <label>:7                                       ; preds = %3
  %8 = getelementptr inbounds i8* %p.0.i, i64 1
  %9 = load i8* %p.0.i, align 1, !tbaa !86
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %5, %10
  br i1 %11, label %12, label %skipBOM.exit

; <label>:12                                      ; preds = %7
  %13 = trunc i32 %5 to i8
  %14 = load i32* %1, align 4, !tbaa !307
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %1, align 4, !tbaa !307
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %struct.LoadF* %lf, i64 0, i32 2, i64 %16
  store i8 %13, i8* %17, align 1, !tbaa !86
  %18 = load i8* %8, align 1, !tbaa !86
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %3

; <label>:20                                      ; preds = %12
  store i32 0, i32* %1, align 4, !tbaa !307
  %21 = load %struct.__sFILE** %2, align 8, !tbaa !305
  %22 = tail call i32 @getc(%struct.__sFILE* %21) #3
  br label %skipBOM.exit

skipBOM.exit:                                     ; preds = %20, %7
  %.0.i = phi i32 [ %22, %20 ], [ %5, %7 ]
  store i32 %.0.i, i32* %cp, align 4, !tbaa !1
  %23 = icmp eq i32 %.0.i, 35
  br i1 %23, label %.preheader, label %28

.preheader:                                       ; preds = %.preheader, %skipBOM.exit
  %24 = load %struct.__sFILE** %2, align 8, !tbaa !305
  %25 = tail call i32 @getc(%struct.__sFILE* %24) #3
  switch i32 %25, label %.preheader [
    i32 -1, label %.critedge
    i32 10, label %.critedge
  ]

.critedge:                                        ; preds = %.preheader, %.preheader
  %26 = load %struct.__sFILE** %2, align 8, !tbaa !305
  %27 = tail call i32 @getc(%struct.__sFILE* %26) #3
  store i32 %27, i32* %cp, align 4, !tbaa !1
  br label %28

; <label>:28                                      ; preds = %.critedge, %skipBOM.exit, %skipBOM.exit.thread
  %.0 = phi i32 [ 1, %.critedge ], [ 0, %skipBOM.exit ], [ 0, %skipBOM.exit.thread ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @getF(%struct.lua_State* nocapture readnone %L, i8* %ud, i64* nocapture %size) #0 {
  %1 = bitcast i8* %ud to i32*
  %2 = load i32* %1, align 4, !tbaa !307
  %3 = icmp sgt i32 %2, 0
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = sext i32 %2 to i64
  store i64 %5, i64* %size, align 8, !tbaa !32
  store i32 0, i32* %1, align 4, !tbaa !307
  %.pre = getelementptr inbounds i8* %ud, i64 16
  br label %16

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds i8* %ud, i64 8
  %8 = bitcast i8* %7 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !305
  %10 = tail call i32 @feof(%struct.__sFILE* %9) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %16

; <label>:12                                      ; preds = %6
  %13 = getelementptr inbounds i8* %ud, i64 16
  %14 = load %struct.__sFILE** %8, align 8, !tbaa !305
  %15 = tail call i64 @fread(i8* %13, i64 1, i64 1024, %struct.__sFILE* %14) #3
  store i64 %15, i64* %size, align 8, !tbaa !32
  br label %16

; <label>:16                                      ; preds = %12, %6, %4
  %.0 = phi i8* [ null, %6 ], [ %13, %12 ], [ %.pre, %4 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @getS(%struct.lua_State* nocapture readnone %L, i8* nocapture %ud, i64* nocapture %size) #0 {
  %1 = getelementptr inbounds i8* %ud, i64 8
  %2 = bitcast i8* %1 to i64*
  %3 = load i64* %2, align 8, !tbaa !310
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %8, label %5

; <label>:5                                       ; preds = %0
  store i64 %3, i64* %size, align 8, !tbaa !32
  store i64 0, i64* %2, align 8, !tbaa !310
  %6 = bitcast i8* %ud to i8**
  %7 = load i8** %6, align 8, !tbaa !308
  br label %8

; <label>:8                                       ; preds = %5, %0
  %.0 = phi i8* [ %7, %5 ], [ null, %0 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @luaL_findtable(%struct.lua_State* %L, i32 %idx, i8* %fname, i32 %szhint) #0 {
  %1 = icmp eq i32 %idx, 0
  br i1 %1, label %.preheader, label %2

; <label>:2                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %idx) #3
  br label %.preheader

.preheader:                                       ; preds = %24, %2, %0
  %.01 = phi i8* [ %25, %24 ], [ %fname, %2 ], [ %fname, %0 ]
  %3 = tail call i8* @strchr(i8* %.01, i32 46) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %8

; <label>:5                                       ; preds = %.preheader
  %6 = tail call i64 @strlen(i8* %.01) #3
  %7 = getelementptr inbounds i8* %.01, i64 %6
  br label %8

; <label>:8                                       ; preds = %5, %.preheader
  %e.0 = phi i8* [ %7, %5 ], [ %3, %.preheader ]
  %9 = ptrtoint i8* %e.0 to i64
  %10 = ptrtoint i8* %.01 to i64
  %11 = sub i64 %9, %10
  %12 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %.01, i64 %11) #3
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #3
  %13 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

; <label>:15                                      ; preds = %8
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %16 = load i8* %e.0, align 1, !tbaa !86
  %17 = icmp eq i8 %16, 46
  %18 = select i1 %17, i32 1, i32 %szhint
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 %18) #3
  %19 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %.01, i64 %11) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_settable(%struct.lua_State* %L, i32 -4) #3
  br label %24

; <label>:20                                      ; preds = %8
  %21 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %22 = icmp eq i32 %21, 5
  br i1 %22, label %24, label %23

; <label>:23                                      ; preds = %20
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %.loopexit

; <label>:24                                      ; preds = %20, %15
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  %25 = getelementptr inbounds i8* %e.0, i64 1
  %26 = load i8* %e.0, align 1, !tbaa !86
  %27 = icmp eq i8 %26, 46
  br i1 %27, label %.preheader, label %.loopexit

.loopexit:                                        ; preds = %24, %23
  %.0 = phi i8* [ %.01, %23 ], [ null, %24 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @l_alloc(i8* nocapture readnone %ud, i8* nocapture %ptr, i64 %osize, i64 %nsize) #0 {
  %1 = icmp eq i64 %nsize, 0
  br i1 %1, label %2, label %3

; <label>:2                                       ; preds = %0
  tail call void @free(i8* %ptr)
  br label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @realloc(i8* %ptr, i64 %nsize) #3
  br label %5

; <label>:5                                       ; preds = %3, %2
  %.0 = phi i8* [ null, %2 ], [ %4, %3 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @panic(%struct.lua_State* %L) #0 {
  %1 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %2 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %3 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %1, i8* getelementptr inbounds ([50 x i8]* @.str45388, i64 0, i64 0), i8* %2) #3
  %4 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %5 = tail call i32 @fflush(%struct.__sFILE* %4) #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @findfield(%struct.lua_State* %L, i32 %objidx, i32 %level) #0 {
  %1 = icmp eq i32 %level, 0
  br i1 %1, label %.loopexit, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %4 = icmp eq i32 %3, 5
  br i1 %4, label %5, label %.loopexit

; <label>:5                                       ; preds = %2
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  %6 = tail call i32 @lua_next(%struct.lua_State* %L, i32 -2) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %5
  %8 = add nsw i32 %level, -1
  br label %9

; <label>:9                                       ; preds = %21, %.lr.ph
  %10 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -2) #3
  %11 = icmp eq i32 %10, 4
  br i1 %11, label %12, label %21

; <label>:12                                      ; preds = %9
  %13 = tail call i32 @lua_rawequal(%struct.lua_State* %L, i32 %objidx, i32 -1) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %12
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %.loopexit

; <label>:16                                      ; preds = %12
  %17 = tail call fastcc i32 @findfield(%struct.lua_State* %L, i32 %objidx, i32 %8)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

; <label>:19                                      ; preds = %16
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  %20 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str50393, i64 0, i64 0), i64 1) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_concat(%struct.lua_State* %L, i32 3) #3
  br label %.loopexit

; <label>:21                                      ; preds = %16, %9
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %22 = tail call i32 @lua_next(%struct.lua_State* %L, i32 -2) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %.loopexit, label %9

.loopexit:                                        ; preds = %21, %19, %15, %5, %2, %0
  %.0 = phi i32 [ 1, %15 ], [ 1, %19 ], [ 0, %2 ], [ 0, %0 ], [ 0, %5 ], [ 0, %21 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_base(%struct.lua_State* %L) #0 {
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -1001000, i32 2) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -1001000, i32 2) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([3 x i8]* @.str397, i64 0, i64 0)) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([24 x %struct.luaL_Reg]* @base_funcs, i64 0, i64 0), i32 0) #3
  %1 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str1398, i64 0, i64 0), i64 7) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([9 x i8]* @.str2399, i64 0, i64 0)) #3
  ret i32 1
}

; Function Attrs: nounwind readonly
declare i64 @strspn(i8* nocapture, i8* nocapture) #5

declare i32 @__toupper(i32) #8

declare i32 @__maskrune(i32, i64) #8

declare i64 @"\01_fwrite"(i8*, i64, i64, %struct.__sFILE*) #8

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_assert(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([18 x i8]* @.str56, i64 0, i64 0), i64* null) #3
  %5 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str55, i64 0, i64 0), i8* %4) #3
  br label %8

; <label>:6                                       ; preds = %0
  %7 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  br label %8

; <label>:8                                       ; preds = %6, %3
  %.0 = phi i32 [ %7, %6 ], [ %5, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_collectgarbage(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([8 x i8]* @.str46443, i64 0, i64 0), i8** getelementptr inbounds ([12 x i8*]* @luaB_collectgarbage.opts, i64 0, i64 0)) #3
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds [11 x i32]* @luaB_collectgarbage.optsnum, i64 0, i64 %2
  %4 = load i32* %3, align 4, !tbaa !1
  %5 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 0) #3
  %6 = trunc i64 %5 to i32
  %7 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 %4, i32 %6) #3
  switch i32 %4, label %16 [
    i32 3, label %8
    i32 5, label %15
    i32 9, label %15
  ]

; <label>:8                                       ; preds = %0
  %9 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 4, i32 0) #3
  %10 = sitofp i32 %7 to double
  %11 = sitofp i32 %9 to double
  %12 = fmul double %11, 9.765625e-04
  %13 = fadd double %10, %12
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %13) #3
  %14 = sext i32 %9 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %14) #3
  br label %18

; <label>:15                                      ; preds = %0, %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %7) #3
  br label %18

; <label>:16                                      ; preds = %0
  %17 = sext i32 %7 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %17) #3
  br label %18

; <label>:18                                      ; preds = %16, %15, %8
  %.0 = phi i32 [ 1, %16 ], [ 1, %15 ], [ 2, %8 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_dofile(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i32 @luaL_loadfilex(%struct.lua_State* %L, i8* %1, i8* null) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_error(%struct.lua_State* %L) #3
  br label %9

; <label>:6                                       ; preds = %0
  tail call void @lua_callk(%struct.lua_State* %L, i32 0, i32 -1, i32 0, i32 (%struct.lua_State*)* @dofilecont) #3
  %7 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %8 = add nsw i32 %7, -1
  br label %9

; <label>:9                                       ; preds = %6, %4
  %.0 = phi i32 [ %5, %4 ], [ %8, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_error(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 1) #3
  %2 = trunc i64 %1 to i32
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #3
  %3 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 1) #3
  %4 = icmp ne i32 %3, 0
  %5 = icmp sgt i32 %2, 0
  %or.cond = and i1 %4, %5
  br i1 %or.cond, label %6, label %7

; <label>:6                                       ; preds = %0
  tail call void @luaL_where(%struct.lua_State* %L, i32 %2) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_concat(%struct.lua_State* %L, i32 2) #3
  br label %7

; <label>:7                                       ; preds = %6, %0
  %8 = tail call i32 @lua_error(%struct.lua_State* %L) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_getmetatable(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %6

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([12 x i8]* @.str31428, i64 0, i64 0)) #3
  br label %6

; <label>:6                                       ; preds = %4, %3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_ipairs(%struct.lua_State* %L) #0 {
  tail call fastcc void @pairsmeta(%struct.lua_State* %L, i8* getelementptr inbounds ([9 x i8]* @.str43440, i64 0, i64 0), i32 1, i32 (%struct.lua_State*)* @ipairsaux)
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_loadfile(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #3
  %2 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* null, i64* null) #3
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 3) #3
  %4 = icmp ne i32 %3, -1
  %5 = select i1 %4, i32 3, i32 0
  %6 = tail call i32 @luaL_loadfilex(%struct.lua_State* %L, i8* %1, i8* %2) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %13

; <label>:8                                       ; preds = %0
  br i1 %4, label %9, label %load_aux.exit

; <label>:9                                       ; preds = %8
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %5) #3
  %10 = tail call i8* @lua_setupvalue(%struct.lua_State* %L, i32 -2, i32 1) #3
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %load_aux.exit

; <label>:12                                      ; preds = %9
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %load_aux.exit

; <label>:13                                      ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  br label %load_aux.exit

load_aux.exit:                                    ; preds = %13, %12, %9, %8
  %.0.i = phi i32 [ 2, %13 ], [ 1, %9 ], [ 1, %8 ], [ 1, %12 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_load(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %2 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([3 x i8]* @.str39436, i64 0, i64 0), i64* null) #3
  %3 = call i32 @lua_type(%struct.lua_State* %L, i32 4) #3
  %4 = icmp ne i32 %3, -1
  %5 = select i1 %4, i32 4, i32 0
  %6 = icmp eq i8* %1, null
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %0
  %8 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* %1, i64* null) #3
  %9 = load i64* %l, align 8, !tbaa !32
  %10 = call i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %1, i64 %9, i8* %8, i8* %2) #3
  br label %14

; <label>:11                                      ; preds = %0
  %12 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([8 x i8]* @.str40437, i64 0, i64 0), i64* null) #3
  call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #3
  call void @lua_settop(%struct.lua_State* %L, i32 5) #3
  %13 = call i32 @lua_load(%struct.lua_State* %L, i8* (%struct.lua_State*, i8*, i64*)* @generic_reader, i8* null, i8* %12, i8* %2) #3
  br label %14

; <label>:14                                      ; preds = %11, %7
  %status.0 = phi i32 [ %10, %7 ], [ %13, %11 ]
  %15 = icmp eq i32 %status.0, 0
  br i1 %15, label %16, label %21

; <label>:16                                      ; preds = %14
  br i1 %4, label %17, label %load_aux.exit

; <label>:17                                      ; preds = %16
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %5) #3
  %18 = call i8* @lua_setupvalue(%struct.lua_State* %L, i32 -2, i32 1) #3
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %load_aux.exit

; <label>:20                                      ; preds = %17
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %load_aux.exit

; <label>:21                                      ; preds = %14
  call void @lua_pushnil(%struct.lua_State* %L) #3
  call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  br label %load_aux.exit

load_aux.exit:                                    ; preds = %21, %20, %17, %16
  %.0.i = phi i32 [ 2, %21 ], [ 1, %17 ], [ 1, %16 ], [ 1, %20 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_next(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  %1 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %4

; <label>:4                                       ; preds = %3, %0
  %.0 = phi i32 [ 1, %3 ], [ 2, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_pairs(%struct.lua_State* %L) #0 {
  tail call fastcc void @pairsmeta(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str38435, i64 0, i64 0), i32 0, i32 (%struct.lua_State*)* @luaB_next)
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_pcall(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 1) #3
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = add nsw i32 %1, -2
  %3 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 %2, i32 -1, i32 0, i32 0, i32 (%struct.lua_State*)* @pcallcont) #3
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  %6 = tail call fastcc i32 @finishpcall(%struct.lua_State* %L, i32 %5)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_print(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  call void @lua_getglobal(%struct.lua_State* %L, i8* getelementptr inbounds ([9 x i8]* @.str23420, i64 0, i64 0)) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %12, %0
  %i.01 = phi i32 [ %16, %12 ], [ 1, %0 ]
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %i.01) #3
  call void @lua_callk(%struct.lua_State* %L, i32 1, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  %3 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* %l) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %.lr.ph
  %6 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([43 x i8]* @.str35432, i64 0, i64 0)) #3
  br label %22

; <label>:7                                       ; preds = %.lr.ph
  %8 = icmp sgt i32 %i.01, 1
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %7
  %10 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %11 = call i64 @"\01_fwrite"(i8* getelementptr inbounds ([2 x i8]* @.str36433, i64 0, i64 0), i64 1, i64 1, %struct.__sFILE* %10) #3
  br label %12

; <label>:12                                      ; preds = %9, %7
  %13 = load i64* %l, align 8, !tbaa !32
  %14 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %15 = call i64 @"\01_fwrite"(i8* %3, i64 1, i64 %13, %struct.__sFILE* %14) #3
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %16 = add nsw i32 %i.01, 1
  %17 = icmp slt i32 %i.01, %1
  br i1 %17, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %12, %0
  %18 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %19 = call i64 @"\01_fwrite"(i8* getelementptr inbounds ([2 x i8]* @.str37434, i64 0, i64 0), i64 1, i64 1, %struct.__sFILE* %18) #3
  %20 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %21 = call i32 @fflush(%struct.__sFILE* %20) #3
  br label %22

; <label>:22                                      ; preds = %._crit_edge, %5
  %.0 = phi i32 [ %6, %5 ], [ 0, %._crit_edge ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_rawequal(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #3
  %1 = tail call i32 @lua_rawequal(%struct.lua_State* %L, i32 1, i32 2) #3
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_rawlen(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = and i32 %1, -2
  %3 = icmp eq i32 %2, 4
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([25 x i8]* @.str34431, i64 0, i64 0)) #3
  br label %6

; <label>:6                                       ; preds = %4, %0
  %7 = tail call i64 @lua_rawlen(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %7) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_rawget(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  tail call void @lua_rawget(%struct.lua_State* %L, i32 1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_rawset(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 2) #3
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 3) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 3) #3
  tail call void @lua_rawset(%struct.lua_State* %L, i32 1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_select(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %3 = icmp eq i32 %2, 4
  br i1 %3, label %4, label %11

; <label>:4                                       ; preds = %0
  %5 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %6 = load i8* %5, align 1, !tbaa !86
  %7 = icmp eq i8 %6, 35
  br i1 %7, label %8, label %11

; <label>:8                                       ; preds = %4
  %9 = add nsw i32 %1, -1
  %10 = sext i32 %9 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %10) #3
  br label %25

; <label>:11                                      ; preds = %4, %0
  %12 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 1) #3
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %11
  %16 = add nsw i32 %13, %1
  br label %19

; <label>:17                                      ; preds = %11
  %18 = icmp sgt i32 %13, %1
  %. = select i1 %18, i32 %1, i32 %13
  br label %19

; <label>:19                                      ; preds = %17, %15
  %i.0 = phi i32 [ %16, %15 ], [ %., %17 ]
  %20 = icmp sgt i32 %i.0, 0
  br i1 %20, label %23, label %21

; <label>:21                                      ; preds = %19
  %22 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([19 x i8]* @.str33430, i64 0, i64 0)) #3
  br label %23

; <label>:23                                      ; preds = %21, %19
  %24 = sub nsw i32 %1, %i.0
  br label %25

; <label>:25                                      ; preds = %23, %8
  %.0 = phi i32 [ 1, %8 ], [ %24, %23 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_setmetatable(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  switch i32 %1, label %2 [
    i32 5, label %4
    i32 0, label %4
  ]

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([22 x i8]* @.str30427, i64 0, i64 0)) #3
  br label %4

; <label>:4                                       ; preds = %2, %0, %0
  %5 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([12 x i8]* @.str31428, i64 0, i64 0)) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([36 x i8]* @.str32429, i64 0, i64 0)) #3
  br label %11

; <label>:9                                       ; preds = %4
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  %10 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 1) #3
  br label %11

; <label>:11                                      ; preds = %9, %7
  %.0 = phi i32 [ %8, %7 ], [ 1, %9 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_tonumber(%struct.lua_State* %L) #0 {
  %isnum = alloca i32, align 4
  %l = alloca i64, align 8
  %1 = call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %3, label %9

; <label>:3                                       ; preds = %0
  %4 = call double @lua_tonumberx(%struct.lua_State* %L, i32 1, i32* %isnum) #3
  %5 = load i32* %isnum, align 4, !tbaa !1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7                                       ; preds = %3
  call void @lua_pushnumber(%struct.lua_State* %L, double %4) #3
  br label %74

; <label>:8                                       ; preds = %3
  call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  br label %73

; <label>:9                                       ; preds = %0
  %10 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %11 = load i64* %l, align 8, !tbaa !32
  %12 = getelementptr inbounds i8* %10, i64 %11
  %13 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %14 = trunc i64 %13 to i32
  %.off = add i32 %14, -2
  %15 = icmp ult i32 %.off, 35
  br i1 %15, label %18, label %16

; <label>:16                                      ; preds = %9
  %17 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([18 x i8]* @.str28425, i64 0, i64 0)) #3
  br label %18

; <label>:18                                      ; preds = %16, %9
  %19 = call i64 @strspn(i8* %10, i8* getelementptr inbounds ([7 x i8]* @.str29426, i64 0, i64 0)) #3
  %20 = getelementptr inbounds i8* %10, i64 %19
  %21 = load i8* %20, align 1, !tbaa !86
  switch i8 %21, label %26 [
    i8 45, label %22
    i8 43, label %24
  ]

; <label>:22                                      ; preds = %18
  %.sum3 = add i64 %19, 1
  %23 = getelementptr inbounds i8* %10, i64 %.sum3
  br label %26

; <label>:24                                      ; preds = %18
  %.sum = add i64 %19, 1
  %25 = getelementptr inbounds i8* %10, i64 %.sum
  br label %26

; <label>:26                                      ; preds = %24, %22, %18
  %s.0 = phi i8* [ %23, %22 ], [ %25, %24 ], [ %20, %18 ]
  %neg.0 = phi i32 [ 1, %22 ], [ 0, %24 ], [ 0, %18 ]
  %27 = load i8* %s.0, align 1, !tbaa !86
  %isascii.i.i = icmp sgt i8 %27, -1
  br i1 %isascii.i.i, label %28, label %33

; <label>:28                                      ; preds = %26
  %29 = zext i8 %27 to i64
  %30 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %29
  %31 = load i32* %30, align 4, !tbaa !1
  %32 = and i32 %31, 1280
  br label %isalnum.exit

; <label>:33                                      ; preds = %26
  %34 = zext i8 %27 to i32
  %35 = call i32 @__maskrune(i32 %34, i64 1280) #3
  br label %isalnum.exit

isalnum.exit:                                     ; preds = %33, %28
  %.sink.i.in.i = phi i32 [ %32, %28 ], [ %35, %33 ]
  %.sink.i.i = icmp eq i32 %.sink.i.in.i, 0
  br i1 %.sink.i.i, label %73, label %.preheader

.preheader:                                       ; preds = %isalnum.exit
  %36 = sitofp i32 %14 to double
  br label %37

; <label>:37                                      ; preds = %isalnum.exit7, %.preheader
  %s.1 = phi i8* [ %53, %isalnum.exit7 ], [ %s.0, %.preheader ]
  %n1.0 = phi double [ %52, %isalnum.exit7 ], [ 0.000000e+00, %.preheader ]
  %38 = load i8* %s.1, align 1, !tbaa !86
  %39 = zext i8 %38 to i32
  %isdigittmp = add i32 %39, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  br i1 %isdigit, label %40, label %43

; <label>:40                                      ; preds = %37
  %41 = sext i8 %38 to i32
  %42 = add nsw i32 %41, -48
  br label %46

; <label>:43                                      ; preds = %37
  %44 = call i32 @__toupper(i32 %39) #3
  %45 = add nsw i32 %44, -55
  br label %46

; <label>:46                                      ; preds = %43, %40
  %47 = phi i32 [ %42, %40 ], [ %45, %43 ]
  %48 = icmp slt i32 %47, %14
  br i1 %48, label %49, label %63

; <label>:49                                      ; preds = %46
  %50 = fmul double %36, %n1.0
  %51 = sitofp i32 %47 to double
  %52 = fadd double %50, %51
  %53 = getelementptr inbounds i8* %s.1, i64 1
  %54 = load i8* %53, align 1, !tbaa !86
  %isascii.i.i4 = icmp sgt i8 %54, -1
  br i1 %isascii.i.i4, label %55, label %60

; <label>:55                                      ; preds = %49
  %56 = zext i8 %54 to i64
  %57 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %56
  %58 = load i32* %57, align 4, !tbaa !1
  %59 = and i32 %58, 1280
  br label %isalnum.exit7

; <label>:60                                      ; preds = %49
  %61 = zext i8 %54 to i32
  %62 = call i32 @__maskrune(i32 %61, i64 1280) #3
  br label %isalnum.exit7

isalnum.exit7:                                    ; preds = %60, %55
  %.sink.i.in.i5 = phi i32 [ %59, %55 ], [ %62, %60 ]
  %.sink.i.i6 = icmp eq i32 %.sink.i.in.i5, 0
  br i1 %.sink.i.i6, label %63, label %37

; <label>:63                                      ; preds = %isalnum.exit7, %46
  %s.2 = phi i8* [ %s.1, %46 ], [ %53, %isalnum.exit7 ]
  %n1.1 = phi double [ %n1.0, %46 ], [ %52, %isalnum.exit7 ]
  %64 = call i64 @strspn(i8* %s.2, i8* getelementptr inbounds ([7 x i8]* @.str29426, i64 0, i64 0)) #3
  %65 = getelementptr inbounds i8* %s.2, i64 %64
  %66 = icmp eq i8* %65, %12
  br i1 %66, label %67, label %73

; <label>:67                                      ; preds = %63
  %68 = icmp eq i32 %neg.0, 0
  br i1 %68, label %71, label %69

; <label>:69                                      ; preds = %67
  %70 = fsub double -0.000000e+00, %n1.1
  br label %71

; <label>:71                                      ; preds = %69, %67
  %72 = phi double [ %70, %69 ], [ %n1.1, %67 ]
  call void @lua_pushnumber(%struct.lua_State* %L, double %72) #3
  br label %74

; <label>:73                                      ; preds = %63, %isalnum.exit, %8
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %74

; <label>:74                                      ; preds = %73, %71, %7
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_tostring(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  %1 = tail call i8* @luaL_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_type(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %1) #3
  %3 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_xpcall(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = icmp sgt i32 %1, 1
  br i1 %2, label %5, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([15 x i8]* @.str26423, i64 0, i64 0)) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_copy(%struct.lua_State* %L, i32 2, i32 1) #3
  tail call void @lua_replace(%struct.lua_State* %L, i32 2) #3
  %6 = add nsw i32 %1, -2
  %7 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 %6, i32 -1, i32 1, i32 0, i32 (%struct.lua_State*)* @pcallcont) #3
  %8 = icmp eq i32 %7, 0
  %9 = zext i1 %8 to i32
  %10 = tail call fastcc i32 @finishpcall(%struct.lua_State* %L, i32 %9)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @dofilecont(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = add nsw i32 %1, -1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ipairsaux(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %2 = trunc i64 %1 to i32
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %3 = add nsw i32 %2, 1
  %4 = sext i32 %3 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %4) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %3) #3
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %6, i32 1, i32 2
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @pairsmeta(%struct.lua_State* %L, i8* %method, i32 %iszero, i32 (%struct.lua_State*)* %iter) #0 {
  %1 = tail call i32 @luaL_getmetafield(%struct.lua_State* %L, i32 1, i8* %method) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %7

; <label>:3                                       ; preds = %0
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %iter, i32 0) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  %4 = icmp eq i32 %iszero, 0
  br i1 %4, label %6, label %5

; <label>:5                                       ; preds = %3
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 0) #3
  br label %8

; <label>:6                                       ; preds = %3
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %8

; <label>:7                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_callk(%struct.lua_State* %L, i32 1, i32 3, i32 0, i32 (%struct.lua_State*)* null) #3
  br label %8

; <label>:8                                       ; preds = %7, %6, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @generic_reader(%struct.lua_State* %L, i8* nocapture readnone %ud, i64* %size) #0 {
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([26 x i8]* @.str41438, i64 0, i64 0)) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_callk(%struct.lua_State* %L, i32 0, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  store i64 0, i64* %size, align 8, !tbaa !32
  br label %11

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %4
  %8 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([37 x i8]* @.str42439, i64 0, i64 0)) #3
  br label %9

; <label>:9                                       ; preds = %7, %4
  tail call void @lua_replace(%struct.lua_State* %L, i32 5) #3
  %10 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 5, i64* %size) #3
  br label %11

; <label>:11                                      ; preds = %9, %3
  %.0 = phi i8* [ null, %3 ], [ %10, %9 ]
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pcallcont(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_getctx(%struct.lua_State* %L, i32* null) #3
  %2 = icmp eq i32 %1, 1
  %3 = zext i1 %2 to i32
  %4 = tail call fastcc i32 @finishpcall(%struct.lua_State* %L, i32 %3)
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @finishpcall(%struct.lua_State* %L, i32 %status) #0 {
  %1 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 0) #3
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 0) #3
  %4 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8]* @.str27424, i64 0, i64 0)) #3
  br label %7

; <label>:5                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %status) #3
  tail call void @lua_replace(%struct.lua_State* %L, i32 1) #3
  %6 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  br label %7

; <label>:7                                       ; preds = %5, %3
  %.0 = phi i32 [ %6, %5 ], [ 2, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_bit32(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 12) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([13 x %struct.luaL_Reg]* @bitlib, i64 0, i64 0), i32 0) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_arshift(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %3 = trunc i64 %2 to i32
  %4 = icmp sgt i32 %3, -1
  %5 = icmp slt i32 %1, 0
  %or.cond = and i1 %4, %5
  br i1 %or.cond, label %15, label %6

; <label>:6                                       ; preds = %0
  %7 = sub nsw i32 0, %3
  %8 = icmp sgt i32 %3, 0
  br i1 %8, label %9, label %12

; <label>:9                                       ; preds = %6
  %10 = icmp sgt i32 %3, 31
  %11 = lshr i32 %1, %3
  %..i = select i1 %10, i32 0, i32 %11
  br label %b_shift.exit

; <label>:12                                      ; preds = %6
  %13 = icmp sgt i32 %7, 31
  %14 = shl i32 %1, %7
  %.0.i = select i1 %13, i32 0, i32 %14
  br label %b_shift.exit

b_shift.exit:                                     ; preds = %12, %9
  %.1.i = phi i32 [ %.0.i, %12 ], [ %..i, %9 ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %.1.i) #3
  br label %23

; <label>:15                                      ; preds = %0
  %16 = icmp sgt i32 %3, 31
  br i1 %16, label %22, label %17

; <label>:17                                      ; preds = %15
  %18 = lshr i32 %1, %3
  %19 = lshr i32 -1, %3
  %20 = xor i32 %19, -1
  %21 = or i32 %18, %20
  br label %22

; <label>:22                                      ; preds = %17, %15
  %r.0 = phi i32 [ %21, %17 ], [ -1, %15 ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %r.0) #3
  br label %23

; <label>:23                                      ; preds = %22, %b_shift.exit
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_and(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %andaux.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %0
  %r.02.i = phi i32 [ %4, %.lr.ph.i ], [ -1, %0 ]
  %i.01.i = phi i32 [ %5, %.lr.ph.i ], [ 1, %0 ]
  %3 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 %i.01.i) #3
  %4 = and i32 %3, %r.02.i
  %5 = add nsw i32 %i.01.i, 1
  %exitcond.i = icmp eq i32 %i.01.i, %1
  br i1 %exitcond.i, label %andaux.exit, label %.lr.ph.i

andaux.exit:                                      ; preds = %.lr.ph.i, %0
  %r.0.lcssa.i = phi i32 [ -1, %0 ], [ %4, %.lr.ph.i ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %r.0.lcssa.i) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_not(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %2 = xor i32 %1, -1
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_or(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %r.02 = phi i32 [ %4, %.lr.ph ], [ 0, %0 ]
  %i.01 = phi i32 [ %5, %.lr.ph ], [ 1, %0 ]
  %3 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 %i.01) #3
  %4 = or i32 %3, %r.02
  %5 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %r.0.lcssa = phi i32 [ 0, %0 ], [ %4, %.lr.ph ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %r.0.lcssa) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_xor(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %r.02 = phi i32 [ %4, %.lr.ph ], [ 0, %0 ]
  %i.01 = phi i32 [ %5, %.lr.ph ], [ 1, %0 ]
  %3 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 %i.01) #3
  %4 = xor i32 %3, %r.02
  %5 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %r.0.lcssa = phi i32 [ 0, %0 ], [ %4, %.lr.ph ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %r.0.lcssa) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_test(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %andaux.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %0
  %r.02.i = phi i32 [ %4, %.lr.ph.i ], [ -1, %0 ]
  %i.01.i = phi i32 [ %5, %.lr.ph.i ], [ 1, %0 ]
  %3 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 %i.01.i) #3
  %4 = and i32 %3, %r.02.i
  %5 = add nsw i32 %i.01.i, 1
  %exitcond.i = icmp eq i32 %i.01.i, %1
  br i1 %exitcond.i, label %andaux.exit.loopexit, label %.lr.ph.i

andaux.exit.loopexit:                             ; preds = %.lr.ph.i
  %phitmp = icmp ne i32 %4, 0
  br label %andaux.exit

andaux.exit:                                      ; preds = %andaux.exit.loopexit, %0
  %r.0.lcssa.i = phi i1 [ true, %0 ], [ %phitmp, %andaux.exit.loopexit ]
  %6 = zext i1 %r.0.lcssa.i to i32
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %6) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_extract(%struct.lua_State* %L) #0 {
  %w = alloca i32, align 4
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %2 = call fastcc i32 @fieldargs(%struct.lua_State* %L, i32 2, i32* %w)
  %3 = lshr i32 %1, %2
  %4 = load i32* %w, align 4, !tbaa !1
  %5 = add nsw i32 %4, -1
  %6 = shl i32 -2, %5
  %7 = xor i32 %6, -1
  %8 = and i32 %3, %7
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %8) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_lrot(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %2 = trunc i64 %1 to i32
  %3 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %4 = and i32 %2, 31
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %b_rot.exit, label %6

; <label>:6                                       ; preds = %0
  %7 = shl i32 %3, %4
  %8 = sub nsw i32 32, %4
  %9 = lshr i32 %3, %8
  %10 = or i32 %9, %7
  br label %b_rot.exit

b_rot.exit:                                       ; preds = %6, %0
  %r.0.i = phi i32 [ %10, %6 ], [ %3, %0 ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %r.0.i) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_lshift(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %3 = trunc i64 %2 to i32
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %9

; <label>:5                                       ; preds = %0
  %6 = sub nsw i32 0, %3
  %7 = icmp sgt i32 %6, 31
  %8 = lshr i32 %1, %6
  %..i = select i1 %7, i32 0, i32 %8
  br label %b_shift.exit

; <label>:9                                       ; preds = %0
  %10 = icmp sgt i32 %3, 31
  %11 = shl i32 %1, %3
  %.0.i = select i1 %10, i32 0, i32 %11
  br label %b_shift.exit

b_shift.exit:                                     ; preds = %9, %5
  %.1.i = phi i32 [ %.0.i, %9 ], [ %..i, %5 ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %.1.i) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_replace(%struct.lua_State* %L) #0 {
  %w = alloca i32, align 4
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 2) #3
  %3 = call fastcc i32 @fieldargs(%struct.lua_State* %L, i32 3, i32* %w)
  %4 = load i32* %w, align 4, !tbaa !1
  %5 = add nsw i32 %4, -1
  %6 = shl i32 -2, %5
  %7 = xor i32 %6, -1
  %8 = and i32 %2, %7
  %9 = shl i32 %7, %3
  %10 = xor i32 %9, -1
  %11 = and i32 %1, %10
  %12 = shl i32 %8, %3
  %13 = or i32 %11, %12
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %13) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_rrot(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %2 = trunc i64 %1 to i32
  %3 = sub nsw i32 0, %2
  %4 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %5 = and i32 %3, 31
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %b_rot.exit, label %7

; <label>:7                                       ; preds = %0
  %8 = shl i32 %4, %5
  %9 = sub nsw i32 32, %5
  %10 = lshr i32 %4, %9
  %11 = or i32 %10, %8
  br label %b_rot.exit

b_rot.exit:                                       ; preds = %7, %0
  %r.0.i = phi i32 [ %11, %7 ], [ %4, %0 ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %r.0.i) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @b_rshift(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %3 = trunc i64 %2 to i32
  %4 = sub nsw i32 0, %3
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %9

; <label>:6                                       ; preds = %0
  %7 = icmp sgt i32 %3, 31
  %8 = lshr i32 %1, %3
  %..i = select i1 %7, i32 0, i32 %8
  br label %b_shift.exit

; <label>:9                                       ; preds = %0
  %10 = icmp sgt i32 %4, 31
  %11 = shl i32 %1, %4
  %.0.i = select i1 %10, i32 0, i32 %11
  br label %b_shift.exit

b_shift.exit:                                     ; preds = %9, %6
  %.1.i = phi i32 [ %.0.i, %9 ], [ %..i, %6 ]
  tail call void @lua_pushunsigned(%struct.lua_State* %L, i32 %.1.i) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @fieldargs(%struct.lua_State* %L, i32 %farg, i32* nocapture %width) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %farg) #3
  %2 = trunc i64 %1 to i32
  %3 = add nsw i32 %farg, 1
  %4 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 %3, i64 1) #3
  %5 = trunc i64 %4 to i32
  %6 = icmp sgt i32 %2, -1
  br i1 %6, label %9, label %7

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %farg, i8* getelementptr inbounds ([25 x i8]* @.str12463, i64 0, i64 0)) #3
  br label %9

; <label>:9                                       ; preds = %7, %0
  %10 = icmp sgt i32 %5, 0
  br i1 %10, label %13, label %11

; <label>:11                                      ; preds = %9
  %12 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 %3, i8* getelementptr inbounds ([23 x i8]* @.str13464, i64 0, i64 0)) #3
  br label %13

; <label>:13                                      ; preds = %11, %9
  %14 = add nsw i32 %5, %2
  %15 = icmp sgt i32 %14, 32
  br i1 %15, label %16, label %18

; <label>:16                                      ; preds = %13
  %17 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8]* @.str14465, i64 0, i64 0)) #3
  br label %18

; <label>:18                                      ; preds = %16, %13
  store i32 %5, i32* %width, align 4, !tbaa !1
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_coroutine(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 6) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([7 x %struct.luaL_Reg]* @co_funcs, i64 0, i64 0), i32 0) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_cocreate(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #3
  %1 = tail call %struct.lua_State* bitcast (%struct.lua_State.228* (%struct.lua_State.228*)* @lua_newthread to %struct.lua_State* (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %1, i32 1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_coresume(%struct.lua_State* %L) #0 {
  %1 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([19 x i8]* @.str9475, i64 0, i64 0)) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  %6 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %7 = add nsw i32 %6, -1
  %8 = tail call fastcc i32 @auxresume(%struct.lua_State* %L, %struct.lua_State* %1, i32 %7)
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %5
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  br label %14

; <label>:11                                      ; preds = %5
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  %12 = add nsw i32 %8, 1
  %13 = xor i32 %8, -1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %13) #3
  br label %14

; <label>:14                                      ; preds = %11, %10
  %.0 = phi i32 [ 2, %10 ], [ %12, %11 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_corunning(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_pushthread(%struct.lua_State* %L) #3
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %1) #3
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_costatus(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([19 x i8]* @.str9475, i64 0, i64 0)) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  %6 = icmp eq %struct.lua_State* %1, %L
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %5
  %8 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str2468, i64 0, i64 0), i64 7) #3
  br label %28

; <label>:9                                       ; preds = %5
  %10 = call i32 @lua_status(%struct.lua_State* %1) #3
  switch i32 %10, label %26 [
    i32 1, label %11
    i32 0, label %13
  ]

; <label>:11                                      ; preds = %9
  %12 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str10476, i64 0, i64 0), i64 9) #3
  br label %28

; <label>:13                                      ; preds = %9
  %14 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %14) #3
  %15 = call i32 @lua_getstack(%struct.lua_State* %1, i32 0, %struct.lua_Debug* %ar) #3
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %19

; <label>:17                                      ; preds = %13
  %18 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8]* @.str11477, i64 0, i64 0), i64 6) #3
  br label %28

; <label>:19                                      ; preds = %13
  %20 = call i32 @lua_gettop(%struct.lua_State* %1) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

; <label>:22                                      ; preds = %19
  %23 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str12478, i64 0, i64 0), i64 4) #3
  br label %28

; <label>:24                                      ; preds = %19
  %25 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str10476, i64 0, i64 0), i64 9) #3
  br label %28

; <label>:26                                      ; preds = %9
  %27 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str12478, i64 0, i64 0), i64 4) #3
  br label %28

; <label>:28                                      ; preds = %26, %24, %22, %17, %11, %7
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_cowrap(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #3
  %1 = tail call %struct.lua_State* bitcast (%struct.lua_State.228* (%struct.lua_State.228*)* @lua_newthread to %struct.lua_State* (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %1, i32 1) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @luaB_auxwrap, i32 1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_yield(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = tail call i32 @lua_yieldk(%struct.lua_State* %L, i32 %1, i32 0, i32 (%struct.lua_State*)* null) #3
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @auxresume(%struct.lua_State* %L, %struct.lua_State* %co, i32 %narg) #0 {
  %1 = tail call i32 @lua_checkstack(%struct.lua_State* %co, i32 %narg) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str6472, i64 0, i64 0), i64 28) #3
  br label %26

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @lua_status(%struct.lua_State* %co) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %13

; <label>:8                                       ; preds = %5
  %9 = tail call i32 @lua_gettop(%struct.lua_State* %co) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %8
  %12 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str7473, i64 0, i64 0), i64 28) #3
  br label %26

; <label>:13                                      ; preds = %8, %5
  tail call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %co, i32 %narg) #3
  %14 = tail call i32 @lua_resume(%struct.lua_State* %co, %struct.lua_State* %L, i32 %narg) #3
  %15 = icmp ult i32 %14, 2
  br i1 %15, label %16, label %25

; <label>:16                                      ; preds = %13
  %17 = tail call i32 @lua_gettop(%struct.lua_State* %co) #3
  %18 = add nsw i32 %17, 1
  %19 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 %18) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

; <label>:21                                      ; preds = %16
  %22 = xor i32 %17, -1
  tail call void @lua_settop(%struct.lua_State* %co, i32 %22) #3
  %23 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str8474, i64 0, i64 0), i64 26) #3
  br label %26

; <label>:24                                      ; preds = %16
  tail call void @lua_xmove(%struct.lua_State* %co, %struct.lua_State* %L, i32 %17) #3
  br label %26

; <label>:25                                      ; preds = %13
  tail call void @lua_xmove(%struct.lua_State* %co, %struct.lua_State* %L, i32 1) #3
  br label %26

; <label>:26                                      ; preds = %25, %24, %21, %11, %3
  %.0 = phi i32 [ -1, %11 ], [ %17, %24 ], [ -1, %21 ], [ -1, %25 ], [ -1, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @luaB_auxwrap(%struct.lua_State* %L) #0 {
  %1 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 -1001001) #3
  %2 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %3 = tail call fastcc i32 @auxresume(%struct.lua_State* %L, %struct.lua_State* %1, i32 %2)
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %11

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %5
  tail call void @luaL_where(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_concat(%struct.lua_State* %L, i32 2) #3
  br label %9

; <label>:9                                       ; preds = %8, %5
  %10 = tail call i32 @lua_error(%struct.lua_State* %L) #3
  br label %11

; <label>:11                                      ; preds = %9, %0
  %.0 = phi i32 [ %10, %9 ], [ %3, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_debug(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 16) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([17 x %struct.luaL_Reg]* @dblib, i64 0, i64 0), i32 0) #3
  ret i32 1
}

; Function Attrs: nounwind
declare i8* @fgets(i8*, i32, %struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct.__sFILE* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_debug(%struct.lua_State* %L) #0 {
  %buffer = alloca [250 x i8], align 16
  %1 = getelementptr inbounds [250 x i8]* %buffer, i64 0, i64 0
  call void @llvm.lifetime.start(i64 250, i8* %1) #3
  %2 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %3 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str50528, i64 0, i64 0), i64 11, i64 1, %struct.__sFILE* %2)
  %4 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %5 = call i32 @fflush(%struct.__sFILE* %4) #3
  %6 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !25
  %7 = call i8* @fgets(i8* %1, i32 250, %struct.__sFILE* %6) #3
  %8 = icmp eq i8* %7, null
  br i1 %8, label %split1, label %.lr.ph

.lr.ph:                                           ; preds = %.critedge, %0
  %9 = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8]* @.str51529, i64 0, i64 0)) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %split1, label %11

; <label>:11                                      ; preds = %.lr.ph
  %12 = call i64 @strlen(i8* %1) #3
  %13 = call i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %1, i64 %12, i8* getelementptr inbounds ([17 x i8]* @.str52530, i64 0, i64 0), i8* null) #3
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

; <label>:15                                      ; preds = %11
  %16 = call i32 @lua_pcallk(%struct.lua_State* %L, i32 0, i32 0, i32 0, i32 0, i32 (%struct.lua_State*)* null) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %.critedge, label %18

; <label>:18                                      ; preds = %15, %11
  %19 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %20 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %21 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %19, i8* getelementptr inbounds ([4 x i8]* @.str53531, i64 0, i64 0), i8* %20) #3
  %22 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %23 = call i32 @fflush(%struct.__sFILE* %22) #3
  br label %.critedge

.critedge:                                        ; preds = %18, %15
  call void @lua_settop(%struct.lua_State* %L, i32 0) #3
  call void @llvm.lifetime.end(i64 250, i8* %1) #3
  call void @llvm.lifetime.start(i64 250, i8* %1) #3
  %24 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %25 = call i64 @fwrite(i8* getelementptr inbounds ([12 x i8]* @.str50528, i64 0, i64 0), i64 11, i64 1, %struct.__sFILE* %24)
  %26 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %27 = call i32 @fflush(%struct.__sFILE* %26) #3
  %28 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !25
  %29 = call i8* @fgets(i8* %1, i32 250, %struct.__sFILE* %28) #3
  %30 = icmp eq i8* %29, null
  br i1 %30, label %split1, label %.lr.ph

split1:                                           ; preds = %.critedge, %.lr.ph, %0
  call void @llvm.lifetime.end(i64 250, i8* %1) #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_getuservalue(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 7
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %5

; <label>:4                                       ; preds = %0
  tail call void @lua_getuservalue(%struct.lua_State* %L, i32 1) #3
  br label %5

; <label>:5                                       ; preds = %4, %3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_gethook(%struct.lua_State* %L) #0 {
  %buff = alloca [5 x i8], align 1
  %1 = call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  br label %getthread.exit

getthread.exit:                                   ; preds = %3, %0
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %5 = call i32 @lua_gethookmask(%struct.lua_State* %.0.i) #3
  %6 = call void (%struct.lua_State*, %struct.lua_Debug*)* (%struct.lua_State*)* @lua_gethook(%struct.lua_State* %.0.i) #3
  %7 = icmp ne void (%struct.lua_State*, %struct.lua_Debug*)* %6, null
  %8 = icmp ne void (%struct.lua_State*, %struct.lua_Debug*)* %6, @hookf
  %or.cond = and i1 %7, %8
  br i1 %or.cond, label %9, label %11

; <label>:9                                       ; preds = %getthread.exit
  %10 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([14 x i8]* @.str48527, i64 0, i64 0), i64 13) #3
  br label %14

; <label>:11                                      ; preds = %getthread.exit
  %12 = call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([6 x i8]* @.str18497, i64 0, i64 0)) #3
  %13 = call i32 @lua_pushthread(%struct.lua_State* %.0.i) #3
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #3
  call void @lua_rawget(%struct.lua_State* %L, i32 -2) #3
  call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  br label %14

; <label>:14                                      ; preds = %11, %9
  %15 = getelementptr inbounds [5 x i8]* %buff, i64 0, i64 0
  %16 = and i32 %5, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %14
  store i8 99, i8* %15, align 1, !tbaa !86
  br label %19

; <label>:19                                      ; preds = %18, %14
  %i.0.i = phi i32 [ 1, %18 ], [ 0, %14 ]
  %20 = and i32 %5, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

; <label>:22                                      ; preds = %19
  %23 = add nsw i32 %i.0.i, 1
  %24 = zext i32 %i.0.i to i64
  %25 = getelementptr inbounds [5 x i8]* %buff, i64 0, i64 %24
  store i8 114, i8* %25, align 1, !tbaa !86
  br label %26

; <label>:26                                      ; preds = %22, %19
  %i.1.i = phi i32 [ %23, %22 ], [ %i.0.i, %19 ]
  %27 = and i32 %5, 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %unmakemask.exit, label %29

; <label>:29                                      ; preds = %26
  %30 = add nsw i32 %i.1.i, 1
  %31 = sext i32 %i.1.i to i64
  %32 = getelementptr inbounds [5 x i8]* %buff, i64 0, i64 %31
  store i8 108, i8* %32, align 1, !tbaa !86
  br label %unmakemask.exit

unmakemask.exit:                                  ; preds = %29, %26
  %i.2.i = phi i32 [ %30, %29 ], [ %i.1.i, %26 ]
  %33 = sext i32 %i.2.i to i64
  %34 = getelementptr inbounds [5 x i8]* %buff, i64 0, i64 %33
  store i8 0, i8* %34, align 1, !tbaa !86
  %35 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %15) #3
  %36 = call i32 @lua_gethookcount(%struct.lua_State* %.0.i) #3
  %37 = sext i32 %36 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %37) #3
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_getinfo(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %1) #3
  %2 = call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %3 = icmp eq i32 %2, 8
  br i1 %3, label %4, label %getthread.exit

; <label>:4                                       ; preds = %0
  %5 = call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  br label %getthread.exit

getthread.exit:                                   ; preds = %4, %0
  %6 = phi i32 [ 1, %4 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %5, %4 ], [ %L, %0 ]
  %7 = or i32 %6, 2
  %8 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 %7, i8* getelementptr inbounds ([7 x i8]* @.str30509, i64 0, i64 0), i64* null) #3
  %9 = add nsw i32 %6, 1
  %10 = call i32 @lua_isnumber(%struct.lua_State* %L, i32 %9) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

; <label>:12                                      ; preds = %getthread.exit
  %13 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 %9, i32* null) #3
  %14 = trunc i64 %13 to i32
  %15 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %14, %struct.lua_Debug* %ar) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %26

; <label>:17                                      ; preds = %12
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %100

; <label>:18                                      ; preds = %getthread.exit
  %19 = call i32 @lua_type(%struct.lua_State* %L, i32 %9) #3
  %20 = icmp eq i32 %19, 6
  br i1 %20, label %21, label %24

; <label>:21                                      ; preds = %18
  %22 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8]* @.str31510, i64 0, i64 0), i8* %8) #3
  %23 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %9) #3
  call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %.0.i, i32 1) #3
  br label %26

; <label>:24                                      ; preds = %18
  %25 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %9, i8* getelementptr inbounds ([27 x i8]* @.str32511, i64 0, i64 0)) #3
  br label %100

; <label>:26                                      ; preds = %21, %12
  %options.0 = phi i8* [ %8, %12 ], [ %23, %21 ]
  %27 = call i32 @lua_getinfo(%struct.lua_State* %.0.i, i8* %options.0, %struct.lua_Debug* %ar) #3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

; <label>:29                                      ; preds = %26
  %30 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %7, i8* getelementptr inbounds ([15 x i8]* @.str33512, i64 0, i64 0)) #3
  br label %100

; <label>:31                                      ; preds = %26
  call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 2) #3
  %32 = call i8* @strchr(i8* %options.0, i32 83) #3
  %33 = icmp eq i8* %32, null
  br i1 %33, label %49, label %34

; <label>:34                                      ; preds = %31
  %35 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 4
  %36 = load i8** %35, align 8, !tbaa !119
  %37 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %36) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8]* @.str34513, i64 0, i64 0)) #3
  %38 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 12, i64 0
  %39 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %38) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([10 x i8]* @.str35514, i64 0, i64 0)) #3
  %40 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 6
  %41 = load i32* %40, align 4, !tbaa !120
  %42 = sext i32 %41 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %42) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([12 x i8]* @.str36515, i64 0, i64 0)) #3
  %43 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 7
  %44 = load i32* %43, align 8, !tbaa !121
  %45 = sext i32 %44 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %45) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([16 x i8]* @.str37516, i64 0, i64 0)) #3
  %46 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 3
  %47 = load i8** %46, align 8, !tbaa !125
  %48 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %47) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str38517, i64 0, i64 0)) #3
  br label %49

; <label>:49                                      ; preds = %34, %31
  %50 = call i8* @strchr(i8* %options.0, i32 108) #3
  %51 = icmp eq i8* %50, null
  br i1 %51, label %56, label %52

; <label>:52                                      ; preds = %49
  %53 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 5
  %54 = load i32* %53, align 8, !tbaa !126
  %55 = sext i32 %54 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %55) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([12 x i8]* @.str39518, i64 0, i64 0)) #3
  br label %56

; <label>:56                                      ; preds = %52, %49
  %57 = call i8* @strchr(i8* %options.0, i32 117) #3
  %58 = icmp eq i8* %57, null
  br i1 %58, label %69, label %59

; <label>:59                                      ; preds = %56
  %60 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 8
  %61 = load i8* %60, align 4, !tbaa !127
  %62 = zext i8 %61 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %62) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str40519, i64 0, i64 0)) #3
  %63 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 9
  %64 = load i8* %63, align 1, !tbaa !129
  %65 = zext i8 %64 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %65) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8]* @.str41520, i64 0, i64 0)) #3
  %66 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 10
  %67 = load i8* %66, align 2, !tbaa !128
  %68 = sext i8 %67 to i32
  call void @lua_pushboolean(%struct.lua_State* %L, i32 %68) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([9 x i8]* @.str42521, i64 0, i64 0)) #3
  br label %69

; <label>:69                                      ; preds = %59, %56
  %70 = call i8* @strchr(i8* %options.0, i32 110) #3
  %71 = icmp eq i8* %70, null
  br i1 %71, label %79, label %72

; <label>:72                                      ; preds = %69
  %73 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 1
  %74 = load i8** %73, align 8, !tbaa !135
  %75 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %74) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str43522, i64 0, i64 0)) #3
  %76 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 2
  %77 = load i8** %76, align 8, !tbaa !134
  %78 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %77) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([9 x i8]* @.str44523, i64 0, i64 0)) #3
  br label %79

; <label>:79                                      ; preds = %72, %69
  %80 = call i8* @strchr(i8* %options.0, i32 116) #3
  %81 = icmp eq i8* %80, null
  br i1 %81, label %86, label %82

; <label>:82                                      ; preds = %79
  %83 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 11
  %84 = load i8* %83, align 1, !tbaa !132
  %85 = sext i8 %84 to i32
  call void @lua_pushboolean(%struct.lua_State* %L, i32 %85) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([11 x i8]* @.str45524, i64 0, i64 0)) #3
  br label %86

; <label>:86                                      ; preds = %82, %79
  %87 = call i8* @strchr(i8* %options.0, i32 76) #3
  %88 = icmp eq i8* %87, null
  br i1 %88, label %93, label %89

; <label>:89                                      ; preds = %86
  %90 = icmp eq %struct.lua_State* %.0.i, %L
  br i1 %90, label %91, label %92

; <label>:91                                      ; preds = %89
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  call void @lua_remove(%struct.lua_State* %L, i32 -3) #3
  br label %treatstackoption.exit

; <label>:92                                      ; preds = %89
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #3
  br label %treatstackoption.exit

treatstackoption.exit:                            ; preds = %92, %91
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([12 x i8]* @.str46525, i64 0, i64 0)) #3
  br label %93

; <label>:93                                      ; preds = %treatstackoption.exit, %86
  %94 = call i8* @strchr(i8* %options.0, i32 102) #3
  %95 = icmp eq i8* %94, null
  br i1 %95, label %100, label %96

; <label>:96                                      ; preds = %93
  %97 = icmp eq %struct.lua_State* %.0.i, %L
  br i1 %97, label %98, label %99

; <label>:98                                      ; preds = %96
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  call void @lua_remove(%struct.lua_State* %L, i32 -3) #3
  br label %treatstackoption.exit1

; <label>:99                                      ; preds = %96
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #3
  br label %treatstackoption.exit1

treatstackoption.exit1:                           ; preds = %99, %98
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str47526, i64 0, i64 0)) #3
  br label %100

; <label>:100                                     ; preds = %treatstackoption.exit1, %93, %29, %24, %17
  %.0 = phi i32 [ %30, %29 ], [ 1, %17 ], [ %25, %24 ], [ 1, %93 ], [ 1, %treatstackoption.exit1 ]
  call void @llvm.lifetime.end(i64 128, i8* %1) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_getlocal(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  br label %getthread.exit

getthread.exit:                                   ; preds = %3, %0
  %5 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %6 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %6) #3
  %7 = or i32 %5, 2
  %8 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %7) #3
  %9 = trunc i64 %8 to i32
  %10 = add nsw i32 %5, 1
  %11 = call i32 @lua_type(%struct.lua_State* %L, i32 %10) #3
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %13, label %16

; <label>:13                                      ; preds = %getthread.exit
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %10) #3
  %14 = call i8* @lua_getlocal(%struct.lua_State* %L, %struct.lua_Debug* null, i32 %9) #3
  %15 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %14) #3
  br label %29

; <label>:16                                      ; preds = %getthread.exit
  %17 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %10) #3
  %18 = trunc i64 %17 to i32
  %19 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %18, %struct.lua_Debug* %ar) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

; <label>:21                                      ; preds = %16
  %22 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %10, i8* getelementptr inbounds ([19 x i8]* @.str17496, i64 0, i64 0)) #3
  br label %29

; <label>:23                                      ; preds = %16
  %24 = call i8* @lua_getlocal(%struct.lua_State* %.0.i, %struct.lua_Debug* %ar, i32 %9) #3
  %25 = icmp eq i8* %24, null
  br i1 %25, label %28, label %26

; <label>:26                                      ; preds = %23
  call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #3
  %27 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %24) #3
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  br label %29

; <label>:28                                      ; preds = %23
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %29

; <label>:29                                      ; preds = %28, %26, %21, %13
  %.0 = phi i32 [ 1, %13 ], [ 2, %26 ], [ 1, %28 ], [ %22, %21 ]
  call void @llvm.lifetime.end(i64 128, i8* %6) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_getregistry(%struct.lua_State* %L) #0 {
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1001000) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_getmetatable(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %4

; <label>:4                                       ; preds = %3, %0
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_getupvalue(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %2 = trunc i64 %1 to i32
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #3
  %3 = tail call i8* @lua_getupvalue(%struct.lua_State* %L, i32 1, i32 %2) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %auxupvalue.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %3) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  br label %auxupvalue.exit

auxupvalue.exit:                                  ; preds = %5, %0
  %.0.i = phi i32 [ 2, %5 ], [ 0, %0 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_upvaluejoin(%struct.lua_State* %L) #0 {
  %1 = tail call fastcc i32 @checkupval(%struct.lua_State* %L, i32 1, i32 2)
  %2 = tail call fastcc i32 @checkupval(%struct.lua_State* %L, i32 3, i32 4)
  %3 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 1) #3
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([22 x i8]* @.str29508, i64 0, i64 0)) #3
  br label %7

; <label>:7                                       ; preds = %5, %0
  %8 = tail call i32 @lua_iscfunction(%struct.lua_State* %L, i32 3) #3
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

; <label>:10                                      ; preds = %7
  %11 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([22 x i8]* @.str29508, i64 0, i64 0)) #3
  br label %12

; <label>:12                                      ; preds = %10, %7
  tail call void @lua_upvaluejoin(%struct.lua_State* %L, i32 1, i32 %1, i32 3, i32 %2) #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_upvalueid(%struct.lua_State* %L) #0 {
  %1 = tail call fastcc i32 @checkupval(%struct.lua_State* %L, i32 1, i32 2)
  %2 = tail call i8* @lua_upvalueid(%struct.lua_State* %L, i32 1, i32 %1) #3
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_setuservalue(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 2
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([43 x i8]* @.str26505, i64 0, i64 0)) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 7) #3
  %6 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %9, label %8

; <label>:8                                       ; preds = %5
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 5) #3
  br label %9

; <label>:9                                       ; preds = %8, %5
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  tail call void @lua_setuservalue(%struct.lua_State* %L, i32 1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_sethook(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  br label %getthread.exit

getthread.exit:                                   ; preds = %3, %0
  %5 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %6 = add nsw i32 %5, 1
  %7 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %6) #3
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %getthread.exit
  tail call void @lua_settop(%struct.lua_State* %L, i32 %6) #3
  br label %25

; <label>:10                                      ; preds = %getthread.exit
  %11 = or i32 %5, 2
  %12 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %11, i64* null) #3
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 %6, i32 6) #3
  %13 = add nsw i32 %5, 3
  %14 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 %13, i64 0) #3
  %15 = trunc i64 %14 to i32
  %16 = tail call i8* @strchr(i8* %12, i32 99) #3
  %not..i = icmp ne i8* %16, null
  %..i = zext i1 %not..i to i32
  %17 = tail call i8* @strchr(i8* %12, i32 114) #3
  %18 = icmp eq i8* %17, null
  %19 = or i32 %..i, 2
  %mask.1.i = select i1 %18, i32 %..i, i32 %19
  %20 = tail call i8* @strchr(i8* %12, i32 108) #3
  %21 = icmp eq i8* %20, null
  %22 = or i32 %mask.1.i, 4
  %mask.1..i = select i1 %21, i32 %mask.1.i, i32 %22
  %23 = icmp sgt i32 %15, 0
  %24 = or i32 %mask.1..i, 8
  %mask.3.i = select i1 %23, i32 %24, i32 %mask.1..i
  br label %25

; <label>:25                                      ; preds = %10, %9
  %func.0 = phi void (%struct.lua_State*, %struct.lua_Debug*)* [ null, %9 ], [ @hookf, %10 ]
  %count.0 = phi i32 [ 0, %9 ], [ %15, %10 ]
  %mask.0 = phi i32 [ 0, %9 ], [ %mask.3.i, %10 ]
  %26 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([6 x i8]* @.str18497, i64 0, i64 0)) #3
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %31

; <label>:28                                      ; preds = %25
  %29 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str19498, i64 0, i64 0)) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8]* @.str20499, i64 0, i64 0)) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  %30 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #3
  br label %31

; <label>:31                                      ; preds = %28, %25
  %32 = tail call i32 @lua_pushthread(%struct.lua_State* %.0.i) #3
  tail call void @lua_xmove(%struct.lua_State* %.0.i, %struct.lua_State* %L, i32 1) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %6) #3
  tail call void @lua_rawset(%struct.lua_State* %L, i32 -3) #3
  %33 = tail call i32 @lua_sethook(%struct.lua_State* %.0.i, void (%struct.lua_State*, %struct.lua_Debug*)* %func.0, i32 %mask.0, i32 %count.0) #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_setlocal(%struct.lua_State* %L) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  br label %getthread.exit

getthread.exit:                                   ; preds = %3, %0
  %5 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %6 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %6) #3
  %7 = add nsw i32 %5, 1
  %8 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %7) #3
  %9 = trunc i64 %8 to i32
  %10 = call i32 @lua_getstack(%struct.lua_State* %.0.i, i32 %9, %struct.lua_Debug* %ar) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

; <label>:12                                      ; preds = %getthread.exit
  %13 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %7, i8* getelementptr inbounds ([19 x i8]* @.str17496, i64 0, i64 0)) #3
  br label %21

; <label>:14                                      ; preds = %getthread.exit
  %15 = add nsw i32 %5, 3
  call void @luaL_checkany(%struct.lua_State* %L, i32 %15) #3
  call void @lua_settop(%struct.lua_State* %L, i32 %15) #3
  call void @lua_xmove(%struct.lua_State* %L, %struct.lua_State* %.0.i, i32 1) #3
  %16 = or i32 %5, 2
  %17 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %16) #3
  %18 = trunc i64 %17 to i32
  %19 = call i8* @lua_setlocal(%struct.lua_State* %.0.i, %struct.lua_Debug* %ar, i32 %18) #3
  %20 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %19) #3
  br label %21

; <label>:21                                      ; preds = %14, %12
  %.0 = phi i32 [ 1, %14 ], [ %13, %12 ]
  call void @llvm.lifetime.end(i64 128, i8* %6) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_setmetatable(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  switch i32 %1, label %2 [
    i32 5, label %4
    i32 0, label %4
  ]

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([22 x i8]* @.str16495, i64 0, i64 0)) #3
  br label %4

; <label>:4                                       ; preds = %2, %0, %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  %5 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_setupvalue(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 3) #3
  %1 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %2 = trunc i64 %1 to i32
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #3
  %3 = tail call i8* @lua_setupvalue(%struct.lua_State* %L, i32 1, i32 %2) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %auxupvalue.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %3) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -1) #3
  br label %auxupvalue.exit

auxupvalue.exit:                                  ; preds = %5, %0
  %.0.i = phi i32 [ 1, %5 ], [ 0, %0 ]
  ret i32 %.0.i
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @db_traceback(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 8
  br i1 %2, label %3, label %getthread.exit

; <label>:3                                       ; preds = %0
  %4 = tail call %struct.lua_State* @lua_tothread(%struct.lua_State* %L, i32 1) #3
  br label %getthread.exit

getthread.exit:                                   ; preds = %3, %0
  %5 = phi i32 [ 1, %3 ], [ 0, %0 ]
  %.0.i = phi %struct.lua_State* [ %4, %3 ], [ %L, %0 ]
  %6 = add nsw i32 %5, 1
  %7 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %6, i64* null) #3
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %getthread.exit
  %10 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %6) #3
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %9
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %6) #3
  br label %19

; <label>:13                                      ; preds = %9, %getthread.exit
  %14 = or i32 %5, 2
  %15 = icmp eq %struct.lua_State* %.0.i, %L
  %16 = zext i1 %15 to i64
  %17 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 %14, i64 %16) #3
  %18 = trunc i64 %17 to i32
  tail call void @luaL_traceback(%struct.lua_State* %L, %struct.lua_State* %.0.i, i8* %7, i32 %18) #3
  br label %19

; <label>:19                                      ; preds = %13, %12
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal void @hookf(%struct.lua_State* %L, %struct.lua_Debug* nocapture readonly %ar) #0 {
  %1 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([6 x i8]* @.str18497, i64 0, i64 0)) #3
  %2 = tail call i32 @lua_pushthread(%struct.lua_State* %L) #3
  tail call void @lua_rawget(%struct.lua_State* %L, i32 -2) #3
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %4 = icmp eq i32 %3, 6
  br i1 %4, label %5, label %19

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 0
  %7 = load i32* %6, align 4, !tbaa !145
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [5 x i8*]* @hookf.hooknames, i64 0, i64 %8
  %10 = load i8** %9, align 8, !tbaa !25
  %11 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %10) #3
  %12 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 5
  %13 = load i32* %12, align 4, !tbaa !126
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %17

; <label>:15                                      ; preds = %5
  %16 = sext i32 %13 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %16) #3
  br label %18

; <label>:17                                      ; preds = %5
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %18

; <label>:18                                      ; preds = %17, %15
  tail call void @lua_callk(%struct.lua_State* %L, i32 2, i32 0, i32 0, i32 (%struct.lua_State*)* null) #3
  br label %19

; <label>:19                                      ; preds = %18, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @checkupval(%struct.lua_State* %L, i32 %argf, i32 %argnup) #0 {
  %ar = alloca %struct.lua_Debug, align 8
  %1 = bitcast %struct.lua_Debug* %ar to i8*
  call void @llvm.lifetime.start(i64 128, i8* %1) #3
  %2 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %argnup) #3
  %3 = trunc i64 %2 to i32
  call void @luaL_checktype(%struct.lua_State* %L, i32 %argf, i32 6) #3
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %argf) #3
  %4 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str27506, i64 0, i64 0), %struct.lua_Debug* %ar) #3
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %11

; <label>:6                                       ; preds = %0
  %7 = getelementptr inbounds %struct.lua_Debug* %ar, i64 0, i32 8
  %8 = load i8* %7, align 4, !tbaa !127
  %9 = zext i8 %8 to i32
  %10 = icmp sgt i32 %3, %9
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %6, %0
  %12 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %argnup, i8* getelementptr inbounds ([22 x i8]* @.str28507, i64 0, i64 0)) #3
  br label %13

; <label>:13                                      ; preds = %11, %6
  call void @llvm.lifetime.end(i64 128, i8* %1) #3
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_io(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 11) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([12 x %struct.luaL_Reg]* @iolib, i64 0, i64 0), i32 0) #3
  %1 = tail call i32 @luaL_newmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8]* @.str7539, i64 0, i64 0)) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([10 x %struct.luaL_Reg]* @flib, i64 0, i64 0), i32 0) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %2 = load %struct.__sFILE** @__stdinp, align 8, !tbaa !25
  %3 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %4 = getelementptr inbounds i8* %3, i64 8
  %5 = bitcast i8* %4 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %6 = bitcast i8* %3 to %struct.__sFILE**
  store %struct.__sFILE* %2, %struct.__sFILE** %6, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_noclose, i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([10 x i8]* @.str532, i64 0, i64 0)) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8]* @.str1533, i64 0, i64 0)) #3
  %7 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %8 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %9 = getelementptr inbounds i8* %8, i64 8
  %10 = bitcast i8* %9 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %10, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %11 = bitcast i8* %8 to %struct.__sFILE**
  store %struct.__sFILE* %7, %struct.__sFILE** %11, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_noclose, i32 (%struct.lua_State*)** %10, align 8, !tbaa !313
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 0)) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8]* @.str3535, i64 0, i64 0)) #3
  %12 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %13 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %14 = getelementptr inbounds i8* %13, i64 8
  %15 = bitcast i8* %14 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %15, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %16 = bitcast i8* %13 to %struct.__sFILE**
  store %struct.__sFILE* %12, %struct.__sFILE** %16, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_noclose, i32 (%struct.lua_State*)** %15, align 8, !tbaa !313
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8]* @.str4536, i64 0, i64 0)) #3
  ret i32 1
}

; Function Attrs: nounwind
declare i32 @setvbuf(%struct.__sFILE* nocapture, i8*, i32, i64) #12

; Function Attrs: nounwind
declare i32 @fseeko(%struct.__sFILE* nocapture, i64, i32) #12

; Function Attrs: nounwind
declare i64 @ftello(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare void @clearerr(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare i32 @fscanf(%struct.__sFILE* nocapture, i8* nocapture readonly, ...) #12

; Function Attrs: nounwind
declare i32 @ungetc(i32, %struct.__sFILE* nocapture) #12

; Function Attrs: nounwind
declare noalias %struct.__sFILE* @tmpfile() #12

declare %struct.__sFILE* @"\01_popen"(i8*, i8*) #8

; Function Attrs: nounwind
declare i32 @pclose(%struct.__sFILE* nocapture) #12

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_noclose(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* @io_noclose, i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  %4 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str6538, i64 0, i64 0), i64 26) #3
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_close(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 0)) #3
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %6 = getelementptr inbounds i8* %5, i64 8
  %7 = bitcast i8* %6 to i32 (%struct.lua_State*)**
  %8 = load i32 (%struct.lua_State*)** %7, align 8, !tbaa !313
  %9 = icmp eq i32 (%struct.lua_State*)* %8, null
  br i1 %9, label %10, label %tofile.exit

; <label>:10                                      ; preds = %4
  %11 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %10, %4
  %12 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %13 = getelementptr inbounds i8* %12, i64 8
  %14 = bitcast i8* %13 to i32 (%struct.lua_State*)**
  %15 = load i32 (%struct.lua_State*)** %14, align 8, !tbaa !313
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %14, align 8, !tbaa !313
  %16 = tail call i32 %15(%struct.lua_State* %L) #3
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_flush(%struct.lua_State* %L) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 0)) #3
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %getiofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str41573, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 4)) #3
  br label %getiofile.exit

getiofile.exit:                                   ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call i32 @fflush(%struct.__sFILE* %9) #3
  %11 = icmp eq i32 %10, 0
  %12 = zext i1 %11 to i32
  %13 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 %12, i8* null) #3
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_input(%struct.lua_State* %L) #0 {
  tail call fastcc void @g_iofile(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str532, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str44576, i64 0, i64 0))
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_lines(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %4

; <label>:4                                       ; preds = %3, %0
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %15

; <label>:7                                       ; preds = %4
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([10 x i8]* @.str532, i64 0, i64 0)) #3
  tail call void @lua_replace(%struct.lua_State* %L, i32 1) #3
  %8 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %9 = getelementptr inbounds i8* %8, i64 8
  %10 = bitcast i8* %9 to i32 (%struct.lua_State*)**
  %11 = load i32 (%struct.lua_State*)** %10, align 8, !tbaa !313
  %12 = icmp eq i32 (%struct.lua_State*)* %11, null
  br i1 %12, label %13, label %tofile.exit

; <label>:13                                      ; preds = %7
  %14 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

; <label>:15                                      ; preds = %4
  %16 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %17 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %18 = getelementptr inbounds i8* %17, i64 8
  %19 = bitcast i8* %18 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %19, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %20 = bitcast i8* %17 to %struct.__sFILE**
  store %struct.__sFILE* null, %struct.__sFILE** %20, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_fclose, i32 (%struct.lua_State*)** %19, align 8, !tbaa !313
  %21 = tail call %struct.__sFILE* @"\01_fopen"(i8* %16, i8* getelementptr inbounds ([2 x i8]* @.str44576, i64 0, i64 0)) #3
  store %struct.__sFILE* %21, %struct.__sFILE** %20, align 8, !tbaa !315
  %22 = icmp eq %struct.__sFILE* %21, null
  br i1 %22, label %23, label %opencheck.exit

; <label>:23                                      ; preds = %15
  %24 = tail call i32* @__error() #3
  %25 = load i32* %24, align 4, !tbaa !1
  %26 = tail call i8* @"\01_strerror"(i32 %25) #3
  %27 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str46578, i64 0, i64 0), i8* %16, i8* %26) #3
  br label %opencheck.exit

opencheck.exit:                                   ; preds = %23, %15
  tail call void @lua_replace(%struct.lua_State* %L, i32 1) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %opencheck.exit, %13, %7
  %toclose.0 = phi i32 [ 1, %opencheck.exit ], [ 0, %7 ], [ 0, %13 ]
  tail call fastcc void @aux_lines(%struct.lua_State* %L, i32 %toclose.0)
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_open(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([2 x i8]* @.str44576, i64 0, i64 0), i64* null) #3
  %3 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %4 = getelementptr inbounds i8* %3, i64 8
  %5 = bitcast i8* %4 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %6 = bitcast i8* %3 to %struct.__sFILE**
  store %struct.__sFILE* null, %struct.__sFILE** %6, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_fclose, i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  %7 = load i8* %2, align 1, !tbaa !86
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %22, label %9

; <label>:9                                       ; preds = %0
  %10 = sext i8 %7 to i32
  %11 = getelementptr inbounds i8* %2, i64 1
  %memchr = tail call i8* @memchr(i8* getelementptr inbounds ([4 x i8]* @.str47579, i64 0, i64 0), i32 %10, i64 4)
  %12 = icmp eq i8* %memchr, null
  br i1 %12, label %22, label %13

; <label>:13                                      ; preds = %9
  %14 = load i8* %11, align 1, !tbaa !86
  %15 = icmp eq i8 %14, 43
  %16 = getelementptr inbounds i8* %2, i64 2
  %. = select i1 %15, i8* %16, i8* %11
  %17 = load i8* %., align 1, !tbaa !86
  %18 = icmp eq i8 %17, 98
  %19 = getelementptr inbounds i8* %., i64 1
  %md.1 = select i1 %18, i8* %19, i8* %.
  %20 = load i8* %md.1, align 1, !tbaa !86
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

; <label>:22                                      ; preds = %13, %9, %0
  %23 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([13 x i8]* @.str48580, i64 0, i64 0)) #3
  br label %24

; <label>:24                                      ; preds = %22, %13
  %25 = tail call %struct.__sFILE* @"\01_fopen"(i8* %1, i8* %2) #3
  store %struct.__sFILE* %25, %struct.__sFILE** %6, align 8, !tbaa !315
  %26 = icmp eq %struct.__sFILE* %25, null
  br i1 %26, label %27, label %29

; <label>:27                                      ; preds = %24
  %28 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 0, i8* %1) #3
  br label %29

; <label>:29                                      ; preds = %27, %24
  %30 = phi i32 [ %28, %27 ], [ 1, %24 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_output(%struct.lua_State* %L) #0 {
  tail call fastcc void @g_iofile(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str45577, i64 0, i64 0))
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_popen(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([2 x i8]* @.str44576, i64 0, i64 0), i64* null) #3
  %3 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %4 = getelementptr inbounds i8* %3, i64 8
  %5 = bitcast i8* %4 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %6 = tail call i32 @fflush(%struct.__sFILE* null) #3
  %7 = tail call %struct.__sFILE* @"\01_popen"(i8* %1, i8* %2) #3
  %8 = bitcast i8* %3 to %struct.__sFILE**
  store %struct.__sFILE* %7, %struct.__sFILE** %8, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_pclose, i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  %9 = icmp eq %struct.__sFILE* %7, null
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %0
  %11 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 0, i8* %1) #3
  br label %12

; <label>:12                                      ; preds = %10, %0
  %13 = phi i32 [ %11, %10 ], [ 1, %0 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_read(%struct.lua_State* %L) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([10 x i8]* @.str532, i64 0, i64 0)) #3
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %getiofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str41573, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str532, i64 0, i64 4)) #3
  br label %getiofile.exit

getiofile.exit:                                   ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call fastcc i32 @g_read(%struct.lua_State* %L, %struct.__sFILE* %9, i32 1)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_tmpfile(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %4 = bitcast i8* %1 to %struct.__sFILE**
  store %struct.__sFILE* null, %struct.__sFILE** %4, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_fclose, i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = tail call %struct.__sFILE* @tmpfile() #3
  store %struct.__sFILE* %5, %struct.__sFILE** %4, align 8, !tbaa !315
  %6 = icmp eq %struct.__sFILE* %5, null
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 0, i8* null) #3
  br label %9

; <label>:9                                       ; preds = %7, %0
  %10 = phi i32 [ %8, %7 ], [ 1, %0 ]
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_type(%struct.lua_State* %L) #0 {
  tail call void @luaL_checkany(%struct.lua_State* %L, i32 1) #3
  %1 = tail call i8* @luaL_testudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %4

; <label>:3                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %13

; <label>:4                                       ; preds = %0
  %5 = getelementptr inbounds i8* %1, i64 8
  %6 = bitcast i8* %5 to i32 (%struct.lua_State*)**
  %7 = load i32 (%struct.lua_State*)** %6, align 8, !tbaa !313
  %8 = icmp eq i32 (%struct.lua_State*)* %7, null
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %4
  %10 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([12 x i8]* @.str42574, i64 0, i64 0), i64 11) #3
  br label %13

; <label>:11                                      ; preds = %4
  %12 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str43575, i64 0, i64 0), i64 4) #3
  br label %13

; <label>:13                                      ; preds = %11, %9, %3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_write(%struct.lua_State* %L) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 0)) #3
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %getiofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str41573, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str2534, i64 0, i64 4)) #3
  br label %getiofile.exit

getiofile.exit:                                   ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call fastcc i32 @g_write(%struct.lua_State* %L, %struct.__sFILE* %9, i32 1)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_flush(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %tofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call i32 @fflush(%struct.__sFILE* %9) #3
  %11 = icmp eq i32 %10, 0
  %12 = zext i1 %11 to i32
  %13 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 %12, i8* null) #3
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_lines(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %tofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %6, %0
  tail call fastcc void @aux_lines(%struct.lua_State* %L, i32 0)
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_read(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %tofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call fastcc i32 @g_read(%struct.lua_State* %L, %struct.__sFILE* %9, i32 2)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_seek(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %tofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([4 x i8]* @.str25557, i64 0, i64 0), i8** getelementptr inbounds ([4 x i8*]* @f_seek.modenames, i64 0, i64 0)) #3
  %11 = tail call double @luaL_optnumber(%struct.lua_State* %L, i32 3, double 0.000000e+00) #3
  %12 = fptosi double %11 to i64
  %13 = sitofp i64 %12 to double
  %14 = fcmp oeq double %13, %11
  br i1 %14, label %17, label %15

; <label>:15                                      ; preds = %tofile.exit
  %16 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([31 x i8]* @.str27559, i64 0, i64 0)) #3
  br label %17

; <label>:17                                      ; preds = %15, %tofile.exit
  %18 = sext i32 %10 to i64
  %19 = getelementptr inbounds [3 x i32]* @f_seek.mode, i64 0, i64 %18
  %20 = load i32* %19, align 4, !tbaa !1
  %21 = tail call i32 @fseeko(%struct.__sFILE* %9, i64 %12, i32 %20) #3
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

; <label>:23                                      ; preds = %17
  %24 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 0, i8* null) #3
  br label %28

; <label>:25                                      ; preds = %17
  %26 = tail call i64 @ftello(%struct.__sFILE* %9) #3
  %27 = sitofp i64 %26 to double
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %27) #3
  br label %28

; <label>:28                                      ; preds = %25, %23
  %.0 = phi i32 [ %24, %23 ], [ 1, %25 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_setvbuf(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %tofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  %10 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 2, i8* null, i8** getelementptr inbounds ([4 x i8*]* @f_setvbuf.modenames, i64 0, i64 0)) #3
  %11 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 1024) #3
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds [3 x i32]* @f_setvbuf.mode, i64 0, i64 %12
  %14 = load i32* %13, align 4, !tbaa !1
  %15 = tail call i32 @setvbuf(%struct.__sFILE* %9, i8* null, i32 %14, i64 %11) #3
  %16 = icmp eq i32 %15, 0
  %17 = zext i1 %16 to i32
  %18 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 %17, i8* null) #3
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_write(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %tofile.exit

; <label>:6                                       ; preds = %0
  %7 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %6, %0
  %8 = bitcast i8* %1 to %struct.__sFILE**
  %9 = load %struct.__sFILE** %8, align 8, !tbaa !315
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  %10 = tail call fastcc i32 @g_write(%struct.lua_State* %L, %struct.__sFILE* %9, i32 2)
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_gc(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %16, label %6

; <label>:6                                       ; preds = %0
  %7 = bitcast i8* %1 to %struct.__sFILE**
  %8 = load %struct.__sFILE** %7, align 8, !tbaa !315
  %9 = icmp eq %struct.__sFILE* %8, null
  br i1 %9, label %16, label %10

; <label>:10                                      ; preds = %6
  %11 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %12 = getelementptr inbounds i8* %11, i64 8
  %13 = bitcast i8* %12 to i32 (%struct.lua_State*)**
  %14 = load i32 (%struct.lua_State*)** %13, align 8, !tbaa !313
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %13, align 8, !tbaa !313
  %15 = tail call i32 %14(%struct.lua_State* %L) #3
  br label %16

; <label>:16                                      ; preds = %10, %6, %0
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @f_tostring(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = getelementptr inbounds i8* %1, i64 8
  %3 = bitcast i8* %2 to i32 (%struct.lua_State*)**
  %4 = load i32 (%struct.lua_State*)** %3, align 8, !tbaa !313
  %5 = icmp eq i32 (%struct.lua_State*)* %4, null
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([14 x i8]* @.str17549, i64 0, i64 0), i64 13) #3
  br label %12

; <label>:8                                       ; preds = %0
  %9 = bitcast i8* %1 to %struct.__sFILE**
  %10 = load %struct.__sFILE** %9, align 8, !tbaa !315
  %11 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str18550, i64 0, i64 0), %struct.__sFILE* %10) #3
  br label %12

; <label>:12                                      ; preds = %8, %6
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @g_iofile(%struct.lua_State* %L, i8* %f, i8* %mode) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %26, label %3

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %5 = icmp eq i8* %4, null
  br i1 %5, label %18, label %6

; <label>:6                                       ; preds = %3
  %7 = tail call i8* @lua_newuserdata(%struct.lua_State* %L, i64 16) #3
  %8 = getelementptr inbounds i8* %7, i64 8
  %9 = bitcast i8* %8 to i32 (%struct.lua_State*)**
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %9, align 8, !tbaa !313
  tail call void @luaL_setmetatable(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %10 = bitcast i8* %7 to %struct.__sFILE**
  store %struct.__sFILE* null, %struct.__sFILE** %10, align 8, !tbaa !315
  store i32 (%struct.lua_State*)* @io_fclose, i32 (%struct.lua_State*)** %9, align 8, !tbaa !313
  %11 = tail call %struct.__sFILE* @"\01_fopen"(i8* %4, i8* %mode) #3
  store %struct.__sFILE* %11, %struct.__sFILE** %10, align 8, !tbaa !315
  %12 = icmp eq %struct.__sFILE* %11, null
  br i1 %12, label %13, label %opencheck.exit

; <label>:13                                      ; preds = %6
  %14 = tail call i32* @__error() #3
  %15 = load i32* %14, align 4, !tbaa !1
  %16 = tail call i8* @"\01_strerror"(i32 %15) #3
  %17 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str46578, i64 0, i64 0), i8* %4, i8* %16) #3
  br label %opencheck.exit

; <label>:18                                      ; preds = %3
  %19 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %20 = getelementptr inbounds i8* %19, i64 8
  %21 = bitcast i8* %20 to i32 (%struct.lua_State*)**
  %22 = load i32 (%struct.lua_State*)** %21, align 8, !tbaa !313
  %23 = icmp eq i32 (%struct.lua_State*)* %22, null
  br i1 %23, label %24, label %tofile.exit

; <label>:24                                      ; preds = %18
  %25 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([29 x i8]* @.str20552, i64 0, i64 0)) #3
  br label %tofile.exit

tofile.exit:                                      ; preds = %24, %18
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  br label %opencheck.exit

opencheck.exit:                                   ; preds = %tofile.exit, %13, %6
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -1001000, i8* %f) #3
  br label %26

; <label>:26                                      ; preds = %opencheck.exit, %0
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* %f) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_fclose(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = bitcast i8* %1 to %struct.__sFILE**
  %3 = load %struct.__sFILE** %2, align 8, !tbaa !315
  %4 = tail call i32 @fclose(%struct.__sFILE* %3) #3
  %5 = icmp eq i32 %4, 0
  %6 = zext i1 %5 to i32
  %7 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 %6, i8* null) #3
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @aux_lines(%struct.lua_State* %L, i32 %toclose) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = add nsw i32 %1, -1
  %3 = icmp slt i32 %1, 19
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 17, i8* getelementptr inbounds ([17 x i8]* @.str32564, i64 0, i64 0)) #3
  br label %6

; <label>:6                                       ; preds = %4, %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  %7 = sext i32 %2 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %7) #3
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %toclose) #3
  %8 = icmp slt i32 %1, 2
  br i1 %8, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %6
  %i.01 = phi i32 [ %9, %.lr.ph ], [ 1, %6 ]
  %9 = add nsw i32 %i.01, 1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %9) #3
  %10 = icmp slt i32 %i.01, %2
  br i1 %10, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %6
  %11 = add nsw i32 %1, 2
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @io_readline, i32 %11) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_pclose(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %2 = bitcast i8* %1 to %struct.__sFILE**
  %3 = load %struct.__sFILE** %2, align 8, !tbaa !315
  %4 = tail call i32 @pclose(%struct.__sFILE* %3) #3
  %5 = tail call i32 @luaL_execresult(%struct.lua_State* %L, i32 %4) #3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @g_read(%struct.lua_State* %L, %struct.__sFILE* nocapture %f, i32 %first) #0 {
  %b.i2 = alloca %struct.luaL_Buffer, align 8
  %d.i = alloca double, align 8
  %b.i = alloca %struct.luaL_Buffer, align 8
  %1 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  call void @clearerr(%struct.__sFILE* %f) #3
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %3, label %.lr.ph

; <label>:3                                       ; preds = %0
  %4 = call fastcc i32 @read_line(%struct.lua_State* %L, %struct.__sFILE* %f, i32 1)
  %5 = add nsw i32 %first, 1
  br label %.critedge

.lr.ph:                                           ; preds = %0
  %6 = add nsw i32 %1, 19
  call void @luaL_checkstack(%struct.lua_State* %L, i32 %6, i8* getelementptr inbounds ([19 x i8]* @.str28560, i64 0, i64 0)) #3
  %7 = add nsw i32 %1, -2
  %8 = bitcast %struct.luaL_Buffer* %b.i to i8*
  %9 = getelementptr inbounds %struct.luaL_Buffer* %b.i, i64 0, i32 2
  %10 = bitcast double* %d.i to i8*
  %11 = bitcast %struct.luaL_Buffer* %b.i2 to i8*
  %12 = getelementptr inbounds %struct.luaL_Buffer* %b.i2, i64 0, i32 2
  br label %13

; <label>:13                                      ; preds = %read_number.exit, %.lr.ph
  %14 = phi i32 [ %7, %.lr.ph ], [ %71, %read_number.exit ]
  %n.05 = phi i32 [ %first, %.lr.ph ], [ %70, %read_number.exit ]
  %15 = call i32 @lua_type(%struct.lua_State* %L, i32 %n.05) #3
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %17, label %33

; <label>:17                                      ; preds = %13
  %18 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 %n.05, i32* null) #3
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

; <label>:20                                      ; preds = %17
  %21 = call i32 @getc(%struct.__sFILE* %f) #3
  %22 = call i32 @ungetc(i32 %21, %struct.__sFILE* %f) #3
  %23 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* null, i64 0) #3
  %24 = icmp ne i32 %21, -1
  %25 = zext i1 %24 to i32
  br label %read_number.exit

; <label>:26                                      ; preds = %17
  call void @llvm.lifetime.start(i64 1056, i8* %8) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b.i) #3
  %27 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b.i, i64 %18) #3
  %28 = call i64 @fread(i8* %27, i64 1, i64 %18, %struct.__sFILE* %f) #3
  %29 = load i64* %9, align 8, !tbaa !303
  %30 = add i64 %29, %28
  store i64 %30, i64* %9, align 8, !tbaa !303
  call void @luaL_pushresult(%struct.luaL_Buffer* %b.i) #3
  %31 = icmp ne i64 %28, 0
  %32 = zext i1 %31 to i32
  call void @llvm.lifetime.end(i64 1056, i8* %8) #3
  br label %read_number.exit

; <label>:33                                      ; preds = %13
  %34 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 %n.05, i64* null) #3
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

; <label>:36                                      ; preds = %33
  %37 = load i8* %34, align 1, !tbaa !86
  %38 = icmp eq i8 %37, 42
  br i1 %38, label %41, label %39

; <label>:39                                      ; preds = %36, %33
  %40 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %n.05, i8* getelementptr inbounds ([15 x i8]* @.str29561, i64 0, i64 0)) #3
  br label %41

; <label>:41                                      ; preds = %39, %36
  %42 = getelementptr inbounds i8* %34, i64 1
  %43 = load i8* %42, align 1, !tbaa !86
  %44 = sext i8 %43 to i32
  switch i32 %44, label %68 [
    i32 110, label %45
    i32 108, label %51
    i32 76, label %53
    i32 97, label %55
  ]

; <label>:45                                      ; preds = %41
  call void @llvm.lifetime.start(i64 8, i8* %10) #3
  %46 = call i32 (%struct.__sFILE*, i8*, ...)* @fscanf(%struct.__sFILE* %f, i8* getelementptr inbounds ([4 x i8]* @.str31563, i64 0, i64 0), double* %d.i) #3
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %read_number.exit.thread

; <label>:48                                      ; preds = %45
  %49 = load double* %d.i, align 8, !tbaa !30
  call void @lua_pushnumber(%struct.lua_State* %L, double %49) #3
  br label %read_number.exit

read_number.exit.thread:                          ; preds = %45
  call void @lua_pushnil(%struct.lua_State* %L) #3
  %50 = add nsw i32 %n.05, 1
  br label %.critedge

; <label>:51                                      ; preds = %41
  %52 = call fastcc i32 @read_line(%struct.lua_State* %L, %struct.__sFILE* %f, i32 1)
  br label %read_number.exit

; <label>:53                                      ; preds = %41
  %54 = call fastcc i32 @read_line(%struct.lua_State* %L, %struct.__sFILE* %f, i32 0)
  br label %read_number.exit

; <label>:55                                      ; preds = %41
  call void @llvm.lifetime.start(i64 1056, i8* %11) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b.i2) #3
  %56 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b.i2, i64 1024) #3
  %57 = call i64 @fread(i8* %56, i64 1, i64 1024, %struct.__sFILE* %f) #3
  %58 = load i64* %12, align 8, !tbaa !303
  %59 = add i64 %58, %57
  store i64 %59, i64* %12, align 8, !tbaa !303
  %60 = icmp ult i64 %57, 1024
  br i1 %60, label %read_all.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.lr.ph.i, %55
  %rlen.01.i = phi i64 [ %.rlen.0.i, %.lr.ph.i ], [ 1024, %55 ]
  %61 = icmp ult i64 %rlen.01.i, 4611686018427387904
  %62 = zext i1 %61 to i64
  %.rlen.0.i = shl i64 %rlen.01.i, %62
  %63 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b.i2, i64 %.rlen.0.i) #3
  %64 = call i64 @fread(i8* %63, i64 1, i64 %.rlen.0.i, %struct.__sFILE* %f) #3
  %65 = load i64* %12, align 8, !tbaa !303
  %66 = add i64 %65, %64
  store i64 %66, i64* %12, align 8, !tbaa !303
  %67 = icmp ult i64 %64, %.rlen.0.i
  br i1 %67, label %read_all.exit, label %.lr.ph.i

read_all.exit:                                    ; preds = %.lr.ph.i, %55
  call void @luaL_pushresult(%struct.luaL_Buffer* %b.i2) #3
  call void @llvm.lifetime.end(i64 1056, i8* %11) #3
  br label %read_number.exit

; <label>:68                                      ; preds = %41
  %69 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %n.05, i8* getelementptr inbounds ([15 x i8]* @.str30562, i64 0, i64 0)) #3
  br label %83

read_number.exit:                                 ; preds = %read_all.exit, %53, %51, %48, %26, %20
  %success.1 = phi i32 [ 1, %read_all.exit ], [ %54, %53 ], [ %52, %51 ], [ %25, %20 ], [ %32, %26 ], [ 1, %48 ]
  %70 = add nsw i32 %n.05, 1
  %71 = add nsw i32 %14, -1
  %72 = icmp ne i32 %14, 0
  %73 = icmp ne i32 %success.1, 0
  %or.cond = and i1 %72, %73
  br i1 %or.cond, label %13, label %.critedge

.critedge:                                        ; preds = %read_number.exit, %read_number.exit.thread, %3
  %success.2 = phi i32 [ %4, %3 ], [ 0, %read_number.exit.thread ], [ %success.1, %read_number.exit ]
  %n.1 = phi i32 [ %5, %3 ], [ %50, %read_number.exit.thread ], [ %70, %read_number.exit ]
  %74 = call i32 @ferror(%struct.__sFILE* %f) #3
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %78, label %76

; <label>:76                                      ; preds = %.critedge
  %77 = call i32 @luaL_fileresult(%struct.lua_State* %L, i32 0, i8* null) #3
  br label %83

; <label>:78                                      ; preds = %.critedge
  %79 = icmp eq i32 %success.2, 0
  br i1 %79, label %80, label %81

; <label>:80                                      ; preds = %78
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %81

; <label>:81                                      ; preds = %80, %78
  %82 = sub nsw i32 %n.1, %first
  br label %83

; <label>:83                                      ; preds = %81, %76, %68
  %.0 = phi i32 [ %77, %76 ], [ %82, %81 ], [ %69, %68 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @g_write(%struct.lua_State* %L, %struct.__sFILE* %f, i32 %arg) #0 {
  %l = alloca i64, align 8
  %1 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = icmp eq i32 %1, %arg
  br i1 %2, label %.thread, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %3 = sub nsw i32 %1, %arg
  br label %4

; <label>:4                                       ; preds = %22, %.lr.ph
  %.in = phi i32 [ %3, %.lr.ph ], [ %5, %22 ]
  %status.03 = phi i32 [ 1, %.lr.ph ], [ %23, %22 ]
  %.012 = phi i32 [ %arg, %.lr.ph ], [ %24, %22 ]
  %5 = add nsw i32 %.in, -1
  %6 = call i32 @lua_type(%struct.lua_State* %L, i32 %.012) #3
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %8, label %14

; <label>:8                                       ; preds = %4
  %9 = icmp eq i32 %status.03, 0
  br i1 %9, label %22, label %10

; <label>:10                                      ; preds = %8
  %11 = call double @lua_tonumberx(%struct.lua_State* %L, i32 %.012, i32* null) #3
  %12 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %f, i8* getelementptr inbounds ([6 x i8]* @.str19551, i64 0, i64 0), double %11) #3
  %13 = icmp sgt i32 %12, 0
  br label %22

; <label>:14                                      ; preds = %4
  %15 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %.012, i64* %l) #3
  %16 = icmp eq i32 %status.03, 0
  br i1 %16, label %22, label %17

; <label>:17                                      ; preds = %14
  %18 = load i64* %l, align 8, !tbaa !32
  %19 = call i64 @"\01_fwrite"(i8* %15, i64 1, i64 %18, %struct.__sFILE* %f) #3
  %20 = load i64* %l, align 8, !tbaa !32
  %21 = icmp eq i64 %19, %20
  br label %22

; <label>:22                                      ; preds = %17, %14, %10, %8
  %.sink = phi i1 [ false, %14 ], [ %21, %17 ], [ false, %8 ], [ %13, %10 ]
  %23 = zext i1 %.sink to i32
  %24 = add nsw i32 %.012, 1
  %25 = icmp eq i32 %5, 0
  br i1 %25, label %26, label %4

; <label>:26                                      ; preds = %22
  br i1 %.sink, label %.thread, label %27

; <label>:27                                      ; preds = %26
  %28 = call i32 @luaL_fileresult(%struct.lua_State* %L, i32 0, i8* null) #3
  br label %.thread

.thread:                                          ; preds = %27, %26, %0
  %.0 = phi i32 [ %28, %27 ], [ 1, %26 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @io_readline(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1001001) #3
  %2 = tail call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1001002, i32* null) #3
  %3 = trunc i64 %2 to i32
  %4 = getelementptr inbounds i8* %1, i64 8
  %5 = bitcast i8* %4 to i32 (%struct.lua_State*)**
  %6 = load i32 (%struct.lua_State*)** %5, align 8, !tbaa !313
  %7 = icmp eq i32 (%struct.lua_State*)* %6, null
  br i1 %7, label %8, label %10

; <label>:8                                       ; preds = %0
  %9 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([23 x i8]* @.str33565, i64 0, i64 0)) #3
  br label %35

; <label>:10                                      ; preds = %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 1) #3
  %11 = icmp slt i32 %3, 1
  br i1 %11, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %10
  %i.01 = phi i32 [ %13, %.lr.ph ], [ 1, %10 ]
  %12 = sub i32 -1001003, %i.01
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %12) #3
  %13 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %3
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %10
  %14 = bitcast i8* %1 to %struct.__sFILE**
  %15 = load %struct.__sFILE** %14, align 8, !tbaa !315
  %16 = tail call fastcc i32 @g_read(%struct.lua_State* %L, %struct.__sFILE* %15, i32 2)
  %17 = sub nsw i32 0, %16
  %18 = tail call i32 @lua_type(%struct.lua_State* %L, i32 %17) #3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %35

; <label>:20                                      ; preds = %._crit_edge
  %21 = icmp sgt i32 %16, 1
  br i1 %21, label %22, label %26

; <label>:22                                      ; preds = %20
  %23 = sub i32 1, %16
  %24 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 %23, i64* null) #3
  %25 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str34566, i64 0, i64 0), i8* %24) #3
  br label %35

; <label>:26                                      ; preds = %20
  %27 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1001003) #3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

; <label>:29                                      ; preds = %26
  tail call void @lua_settop(%struct.lua_State* %L, i32 0) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1001001) #3
  %30 = tail call i8* @luaL_checkudata(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([6 x i8]* @.str5537, i64 0, i64 0)) #3
  %31 = getelementptr inbounds i8* %30, i64 8
  %32 = bitcast i8* %31 to i32 (%struct.lua_State*)**
  %33 = load i32 (%struct.lua_State*)** %32, align 8, !tbaa !313
  store i32 (%struct.lua_State*)* null, i32 (%struct.lua_State*)** %32, align 8, !tbaa !313
  %34 = tail call i32 %33(%struct.lua_State* %L) #3
  br label %35

; <label>:35                                      ; preds = %29, %26, %22, %._crit_edge, %8
  %.0 = phi i32 [ %9, %8 ], [ %25, %22 ], [ %16, %._crit_edge ], [ 0, %26 ], [ 0, %29 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @read_line(%struct.lua_State* %L, %struct.__sFILE* nocapture %f, i32 %chop) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b) #3
  %2 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1024) #3
  %3 = call i8* @fgets(i8* %2, i32 1024, %struct.__sFILE* %f) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %5 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 2
  br label %9

._crit_edge:                                      ; preds = %18, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  %6 = call i64 @lua_rawlen(%struct.lua_State* %L, i32 -1) #3
  %7 = icmp ne i64 %6, 0
  %8 = zext i1 %7 to i32
  br label %29

; <label>:9                                       ; preds = %18, %.lr.ph
  %10 = phi i8* [ %2, %.lr.ph ], [ %21, %18 ]
  %11 = call i64 @strlen(i8* %10) #3
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %18, label %13

; <label>:13                                      ; preds = %9
  %14 = add i64 %11, -1
  %15 = getelementptr inbounds i8* %10, i64 %14
  %16 = load i8* %15, align 1, !tbaa !86
  %17 = icmp eq i8 %16, 10
  br i1 %17, label %24, label %18

; <label>:18                                      ; preds = %13, %9
  %19 = load i64* %5, align 8, !tbaa !303
  %20 = add i64 %19, %11
  store i64 %20, i64* %5, align 8, !tbaa !303
  %21 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1024) #3
  %22 = call i8* @fgets(i8* %21, i32 1024, %struct.__sFILE* %f) #3
  %23 = icmp eq i8* %22, null
  br i1 %23, label %._crit_edge, label %9

; <label>:24                                      ; preds = %13
  %25 = sext i32 %chop to i64
  %26 = sub i64 %11, %25
  %27 = load i64* %5, align 8, !tbaa !303
  %28 = add i64 %26, %27
  store i64 %28, i64* %5, align 8, !tbaa !303
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  br label %29

; <label>:29                                      ; preds = %24, %._crit_edge
  %.0 = phi i32 [ %8, %._crit_edge ], [ 1, %24 ]
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_math(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 28) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([29 x %struct.luaL_Reg]* @mathlib, i64 0, i64 0), i32 0) #3
  tail call void @lua_pushnumber(%struct.lua_State* %L, double 0x400921FB54442D18) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([3 x i8]* @.str581, i64 0, i64 0)) #3
  tail call void @lua_pushnumber(%struct.lua_State* %L, double 0x7FF0000000000000) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str1582, i64 0, i64 0)) #3
  ret i32 1
}

; Function Attrs: nounwind readnone
declare double @tan(double) #10

; Function Attrs: nounwind readnone
declare double @tanh(double) #10

; Function Attrs: nounwind readnone
declare double @sqrt(double) #10

; Function Attrs: nounwind readnone
declare double @sin(double) #10

; Function Attrs: nounwind readnone
declare double @sinh(double) #10

declare void @srand(i32) #8

declare i32 @rand() #8

; Function Attrs: nounwind
declare double @modf(double, double* nocapture) #12

; Function Attrs: nounwind readnone
declare double @log(double) #10

; Function Attrs: nounwind readnone
declare double @log10(double) #10

; Function Attrs: nounwind readnone
declare double @ldexp(double, i32) #10

; Function Attrs: nounwind
declare double @frexp(double, i32* nocapture) #12

; Function Attrs: nounwind readnone
declare double @fmod(double, double) #10

; Function Attrs: nounwind readnone
declare double @exp(double) #10

; Function Attrs: nounwind readnone
declare double @cos(double) #10

; Function Attrs: nounwind readnone
declare double @cosh(double) #10

; Function Attrs: nounwind readnone
declare double @ceil(double) #10

; Function Attrs: nounwind readnone
declare double @atan(double) #10

; Function Attrs: nounwind readnone
declare double @atan2(double, double) #10

; Function Attrs: nounwind readnone
declare double @asin(double) #10

; Function Attrs: nounwind readnone
declare double @acos(double) #10

; Function Attrs: nounwind readnone
declare double @fabs(double) #10

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_abs(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @fabs(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_acos(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @acos(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_asin(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @asin(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_atan2(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #3
  %3 = tail call double @atan2(double %1, double %2) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_atan(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @atan(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_ceil(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @ceil(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_cosh(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @cosh(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_cos(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @cos(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_deg(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = fdiv double %1, 0x3F91DF46A2529D39
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_exp(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @exp(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_floor(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @floor(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_fmod(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #3
  %3 = tail call double @fmod(double %1, double %2) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_frexp(%struct.lua_State* %L) #0 {
  %e = alloca i32, align 4
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = call double @frexp(double %1, i32* %e) #3
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  %3 = load i32* %e, align 4, !tbaa !1
  %4 = sext i32 %3 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %4) #3
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_ldexp(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %3 = trunc i64 %2 to i32
  %4 = tail call double @ldexp(double %1, i32 %3) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %4) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_log10(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @log10(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_log(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = tail call double @log(double %1) #11
  br label %15

; <label>:6                                       ; preds = %0
  %7 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #3
  %8 = fcmp oeq double %7, 1.000000e+01
  br i1 %8, label %9, label %11

; <label>:9                                       ; preds = %6
  %10 = tail call double @log10(double %1) #11
  br label %15

; <label>:11                                      ; preds = %6
  %12 = tail call double @log(double %1) #11
  %13 = tail call double @log(double %7) #11
  %14 = fdiv double %12, %13
  br label %15

; <label>:15                                      ; preds = %11, %9, %4
  %res.0 = phi double [ %5, %4 ], [ %10, %9 ], [ %14, %11 ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %res.0) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_max(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %3 = icmp slt i32 %1, 2
  br i1 %3, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %dmax.02 = phi double [ %dmax.1, %.lr.ph ], [ %2, %0 ]
  %i.01 = phi i32 [ %6, %.lr.ph ], [ 2, %0 ]
  %4 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 %i.01) #3
  %5 = fcmp ogt double %4, %dmax.02
  %dmax.1 = select i1 %5, double %4, double %dmax.02
  %6 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %dmax.0.lcssa = phi double [ %2, %0 ], [ %dmax.1, %.lr.ph ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %dmax.0.lcssa) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_min(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %3 = icmp slt i32 %1, 2
  br i1 %3, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %dmin.02 = phi double [ %dmin.1, %.lr.ph ], [ %2, %0 ]
  %i.01 = phi i32 [ %6, %.lr.ph ], [ 2, %0 ]
  %4 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 %i.01) #3
  %5 = fcmp olt double %4, %dmin.02
  %dmin.1 = select i1 %5, double %4, double %dmin.02
  %6 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %i.01, %1
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %0
  %dmin.0.lcssa = phi double [ %2, %0 ], [ %dmin.1, %.lr.ph ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %dmin.0.lcssa) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_modf(%struct.lua_State* %L) #0 {
  %ip = alloca double, align 8
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = call double @modf(double %1, double* %ip) #3
  %3 = load double* %ip, align 8, !tbaa !30
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #3
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_pow(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #3
  %3 = tail call double @llvm.pow.f64(double %1, double %2)
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_rad(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = fmul double %1, 0x3F91DF46A2529D39
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_random(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @rand() #3
  %2 = srem i32 %1, 2147483647
  %3 = sitofp i32 %2 to double
  %4 = fdiv double %3, 0x41DFFFFFFFC00000
  %5 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  switch i32 %5, label %28 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %16
  ]

; <label>:6                                       ; preds = %0
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %4) #3
  br label %30

; <label>:7                                       ; preds = %0
  %8 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %9 = fcmp ult double %8, 1.000000e+00
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([18 x i8]* @.str30611, i64 0, i64 0)) #3
  br label %12

; <label>:12                                      ; preds = %10, %7
  %13 = fmul double %4, %8
  %14 = tail call double @floor(double %13) #11
  %15 = fadd double %14, 1.000000e+00
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %15) #3
  br label %30

; <label>:16                                      ; preds = %0
  %17 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %18 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #3
  %19 = fcmp ugt double %17, %18
  br i1 %19, label %20, label %22

; <label>:20                                      ; preds = %16
  %21 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([18 x i8]* @.str30611, i64 0, i64 0)) #3
  br label %22

; <label>:22                                      ; preds = %20, %16
  %23 = fsub double %18, %17
  %24 = fadd double %23, 1.000000e+00
  %25 = fmul double %4, %24
  %26 = tail call double @floor(double %25) #11
  %27 = fadd double %17, %26
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %27) #3
  br label %30

; <label>:28                                      ; preds = %0
  %29 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([26 x i8]* @.str31612, i64 0, i64 0)) #3
  br label %30

; <label>:30                                      ; preds = %28, %22, %12, %6
  %.0 = phi i32 [ %29, %28 ], [ 1, %22 ], [ 1, %12 ], [ 1, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_randomseed(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_checkunsigned(%struct.lua_State* %L, i32 1) #3
  tail call void @srand(i32 %1) #3
  %2 = tail call i32 @rand() #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_sinh(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @sinh(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_sin(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @sin(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_sqrt(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @sqrt(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_tanh(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @tanh(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @math_tan(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = tail call double @tan(double %1) #11
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_os(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 11) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([12 x %struct.luaL_Reg]* @syslib, i64 0, i64 0), i32 0) #3
  ret i32 1
}

declare i32 @mkstemp(i8*) #8

declare i32 @"\01_close"(i32) #8

declare i64 @"\01_mktime"(%struct.tm*) #8

declare i8* @setlocale(i32, i8*) #8

; Function Attrs: nounwind
declare i32 @rename(i8* nocapture readonly, i8* nocapture readonly) #12

; Function Attrs: nounwind
declare i32 @remove(i8* nocapture readonly) #12

; Function Attrs: nounwind readonly
declare i8* @getenv(i8* nocapture) #5

; Function Attrs: noreturn
declare void @exit(i32) #6

declare i32 @"\01_system"(i8*) #8

declare double @difftime(i64, i64) #8

declare %struct.tm* @gmtime_r(i64*, %struct.tm*) #8

declare %struct.tm* @localtime_r(i64*, %struct.tm*) #8

declare i64 @"\01_strftime"(i8*, i64, i8*, %struct.tm*) #8

declare i64 @"\01_clock"() #8

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_clock(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @"\01_clock"() #3
  %2 = uitofp i64 %1 to double
  %3 = fdiv double %2, 1.000000e+06
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %3) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_date(%struct.lua_State* %L) #0 {
  %t = alloca i64, align 8
  %tmr = alloca %struct.tm, align 8
  %cc = alloca [4 x i8], align 1
  %b = alloca %struct.luaL_Buffer, align 8
  %buff = alloca [200 x i8], align 16
  %1 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([3 x i8]* @.str26639, i64 0, i64 0), i64* null) #3
  %2 = call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = call i64 @time(i64* null) #3
  br label %9

; <label>:6                                       ; preds = %0
  %7 = call double @luaL_checknumber(%struct.lua_State* %L, i32 2) #3
  %8 = fptosi double %7 to i64
  br label %9

; <label>:9                                       ; preds = %6, %4
  %10 = phi i64 [ %5, %4 ], [ %8, %6 ]
  store i64 %10, i64* %t, align 8, !tbaa !32
  %11 = bitcast %struct.tm* %tmr to i8*
  call void @llvm.lifetime.start(i64 56, i8* %11) #3
  %12 = load i8* %1, align 1, !tbaa !86
  %13 = icmp eq i8 %12, 33
  br i1 %13, label %14, label %17

; <label>:14                                      ; preds = %9
  %15 = call %struct.tm* @gmtime_r(i64* %t, %struct.tm* %tmr) #3
  %16 = getelementptr inbounds i8* %1, i64 1
  br label %19

; <label>:17                                      ; preds = %9
  %18 = call %struct.tm* @localtime_r(i64* %t, %struct.tm* %tmr) #3
  br label %19

; <label>:19                                      ; preds = %17, %14
  %stm.0 = phi %struct.tm* [ %15, %14 ], [ %18, %17 ]
  %s.0 = phi i8* [ %16, %14 ], [ %1, %17 ]
  %20 = icmp eq %struct.tm* %stm.0, null
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %19
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %setboolfield.exit

; <label>:22                                      ; preds = %19
  %23 = call i32 @strcmp(i8* %s.0, i8* getelementptr inbounds ([3 x i8]* @.str27640, i64 0, i64 0)) #3
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %58

; <label>:25                                      ; preds = %22
  call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 9) #3
  %26 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 0
  %27 = load i32* %26, align 4, !tbaa !316
  %28 = sext i32 %27 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %28) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8]* @.str13626, i64 0, i64 0)) #3
  %29 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 1
  %30 = load i32* %29, align 4, !tbaa !318
  %31 = sext i32 %30 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %31) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8]* @.str14627, i64 0, i64 0)) #3
  %32 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 2
  %33 = load i32* %32, align 4, !tbaa !319
  %34 = sext i32 %33 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %34) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str15628, i64 0, i64 0)) #3
  %35 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 3
  %36 = load i32* %35, align 4, !tbaa !320
  %37 = sext i32 %36 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %37) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([4 x i8]* @.str16629, i64 0, i64 0)) #3
  %38 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 4
  %39 = load i32* %38, align 4, !tbaa !321
  %40 = add nsw i32 %39, 1
  %41 = sext i32 %40 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %41) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8]* @.str17630, i64 0, i64 0)) #3
  %42 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 5
  %43 = load i32* %42, align 4, !tbaa !322
  %44 = add nsw i32 %43, 1900
  %45 = sext i32 %44 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %45) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str18631, i64 0, i64 0)) #3
  %46 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 6
  %47 = load i32* %46, align 4, !tbaa !323
  %48 = add nsw i32 %47, 1
  %49 = sext i32 %48 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %49) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str28641, i64 0, i64 0)) #3
  %50 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 7
  %51 = load i32* %50, align 4, !tbaa !324
  %52 = add nsw i32 %51, 1
  %53 = sext i32 %52 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %53) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str29642, i64 0, i64 0)) #3
  %54 = getelementptr inbounds %struct.tm* %stm.0, i64 0, i32 8
  %55 = load i32* %54, align 4, !tbaa !325
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %setboolfield.exit, label %57

; <label>:57                                      ; preds = %25
  call void @lua_pushboolean(%struct.lua_State* %L, i32 %55) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8]* @.str19632, i64 0, i64 0)) #3
  br label %setboolfield.exit

; <label>:58                                      ; preds = %22
  %59 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %59) #3
  %60 = getelementptr inbounds [4 x i8]* %cc, i64 0, i64 0
  store i8 37, i8* %60, align 1, !tbaa !86
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b) #3
  %61 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 2
  %62 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 1
  %63 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 0
  %64 = getelementptr inbounds [200 x i8]* %buff, i64 0, i64 0
  %65 = getelementptr inbounds [4 x i8]* %cc, i64 0, i64 1
  %66 = getelementptr inbounds [4 x i8]* %cc, i64 0, i64 2
  %67 = getelementptr inbounds [4 x i8]* %cc, i64 0, i64 3
  br label %.backedge

.backedge:                                        ; preds = %checkoption.exit, %75, %58
  %s.1 = phi i8* [ %s.0, %58 ], [ %78, %75 ], [ %.0.i, %checkoption.exit ]
  %68 = load i8* %s.1, align 1, !tbaa !86
  switch i8 %68, label %69 [
    i8 0, label %117
    i8 37, label %82
  ]

; <label>:69                                      ; preds = %.backedge
  %70 = load i64* %61, align 8, !tbaa !303
  %71 = load i64* %62, align 8, !tbaa !302
  %72 = icmp ult i64 %70, %71
  br i1 %72, label %75, label %73

; <label>:73                                      ; preds = %69
  %74 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre = load i8* %s.1, align 1, !tbaa !86
  %.pre1 = load i64* %61, align 8, !tbaa !303
  br label %75

; <label>:75                                      ; preds = %73, %69
  %76 = phi i64 [ %.pre1, %73 ], [ %70, %69 ]
  %77 = phi i8 [ %.pre, %73 ], [ %68, %69 ]
  %78 = getelementptr inbounds i8* %s.1, i64 1
  %79 = add i64 %76, 1
  store i64 %79, i64* %61, align 8, !tbaa !303
  %80 = load i8** %63, align 8, !tbaa !304
  %81 = getelementptr inbounds i8* %80, i64 %76
  store i8 %77, i8* %81, align 1, !tbaa !86
  br label %.backedge

; <label>:82                                      ; preds = %.backedge
  call void @llvm.lifetime.start(i64 200, i8* %64) #3
  %83 = getelementptr inbounds i8* %s.1, i64 1
  %84 = getelementptr inbounds i8* %s.1, i64 2
  br label %85

; <label>:85                                      ; preds = %110, %82
  %indvars.iv.i = phi i64 [ 0, %82 ], [ %indvars.iv.next.i, %110 ]
  %86 = load i8* %83, align 1, !tbaa !86
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %110, label %88

; <label>:88                                      ; preds = %85
  %89 = sext i8 %86 to i32
  %90 = getelementptr inbounds [6 x i8*]* @checkoption.options, i64 0, i64 %indvars.iv.i
  %91 = load i8** %90, align 16, !tbaa !25
  %92 = call i8* @strchr(i8* %91, i32 %89) #3
  %93 = icmp eq i8* %92, null
  br i1 %93, label %110, label %94

; <label>:94                                      ; preds = %88
  store i8 %86, i8* %65, align 1, !tbaa !86
  %95 = or i64 %indvars.iv.i, 1
  %96 = getelementptr inbounds [6 x i8*]* @checkoption.options, i64 0, i64 %95
  %97 = load i8** %96, align 8, !tbaa !25
  %98 = load i8* %97, align 1, !tbaa !86
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %101

; <label>:100                                     ; preds = %94
  store i8 0, i8* %66, align 1, !tbaa !86
  br label %checkoption.exit

; <label>:101                                     ; preds = %94
  %102 = load i8* %84, align 1, !tbaa !86
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %110, label %104

; <label>:104                                     ; preds = %101
  %105 = sext i8 %102 to i32
  %106 = call i8* @strchr(i8* %97, i32 %105) #3
  %107 = icmp eq i8* %106, null
  br i1 %107, label %110, label %108

; <label>:108                                     ; preds = %104
  store i8 %102, i8* %66, align 1, !tbaa !86
  store i8 0, i8* %67, align 1, !tbaa !86
  %109 = getelementptr inbounds i8* %s.1, i64 3
  br label %checkoption.exit

; <label>:110                                     ; preds = %104, %101, %88, %85
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 2
  %111 = trunc i64 %indvars.iv.next.i to i32
  %112 = icmp ult i32 %111, 6
  br i1 %112, label %85, label %113

; <label>:113                                     ; preds = %110
  %114 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([36 x i8]* @.str36649, i64 0, i64 0), i8* %83) #3
  %115 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* %114) #3
  br label %checkoption.exit

checkoption.exit:                                 ; preds = %113, %108, %100
  %.0.i = phi i8* [ %84, %100 ], [ %109, %108 ], [ %83, %113 ]
  %116 = call i64 @"\01_strftime"(i8* %64, i64 200, i8* %60, %struct.tm* %stm.0) #3
  call void @luaL_addlstring(%struct.luaL_Buffer* %b, i8* %64, i64 %116) #3
  call void @llvm.lifetime.end(i64 200, i8* %64) #3
  br label %.backedge

; <label>:117                                     ; preds = %.backedge
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  call void @llvm.lifetime.end(i64 1056, i8* %59) #3
  br label %setboolfield.exit

setboolfield.exit:                                ; preds = %117, %57, %25, %21
  call void @llvm.lifetime.end(i64 56, i8* %11) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_difftime(%struct.lua_State* %L) #0 {
  %1 = tail call double @luaL_checknumber(%struct.lua_State* %L, i32 1) #3
  %2 = fptosi double %1 to i64
  %3 = tail call double @luaL_optnumber(%struct.lua_State* %L, i32 2, double 0.000000e+00) #3
  %4 = fptosi double %3 to i64
  %5 = tail call double @difftime(i64 %2, i64 %4) #3
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %5) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_execute(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #3
  %2 = tail call i32 @"\01_system"(i8* %1) #3
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @luaL_execresult(%struct.lua_State* %L, i32 %2) #3
  br label %7

; <label>:6                                       ; preds = %0
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 %2) #3
  br label %7

; <label>:7                                       ; preds = %6, %4
  %.0 = phi i32 [ %5, %4 ], [ 1, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_exit(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %3, label %6

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 1) #3
  %not. = icmp eq i32 %4, 0
  %5 = zext i1 %not. to i32
  br label %9

; <label>:6                                       ; preds = %0
  %7 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 1, i64 0) #3
  %8 = trunc i64 %7 to i32
  br label %9

; <label>:9                                       ; preds = %6, %3
  %status.0 = phi i32 [ %5, %3 ], [ %8, %6 ]
  %10 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 2) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

; <label>:12                                      ; preds = %9
  tail call void bitcast (void (%struct.lua_State.228*)* @lua_close to void (%struct.lua_State*)*)(%struct.lua_State* %L) #3
  br label %13

; <label>:13                                      ; preds = %12, %9
  %14 = icmp eq %struct.lua_State* %L, null
  br i1 %14, label %16, label %15

; <label>:15                                      ; preds = %13
  tail call void @exit(i32 %status.0) #13
  unreachable

; <label>:16                                      ; preds = %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_getenv(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @getenv(i8* %1) #3
  %3 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_remove(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i32 @remove(i8* %1) #3
  %3 = icmp eq i32 %2, 0
  %4 = zext i1 %3 to i32
  %5 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 %4, i8* %1) #3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_rename(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #3
  %3 = tail call i32 @rename(i8* %1, i8* %2) #3
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  %6 = tail call i32 @luaL_fileresult(%struct.lua_State* %L, i32 %5, i8* null) #3
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_setlocale(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 1, i8* null, i64* null) #3
  %2 = tail call i32 @luaL_checkoption(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([4 x i8]* @.str21634, i64 0, i64 0), i8** getelementptr inbounds ([7 x i8*]* @os_setlocale.catnames, i64 0, i64 0)) #3
  %3 = sext i32 %2 to i64
  %4 = getelementptr inbounds [6 x i32]* @os_setlocale.cat, i64 0, i64 %3
  %5 = load i32* %4, align 4, !tbaa !1
  %6 = tail call i8* @setlocale(i32 %5, i8* %1) #3
  %7 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %6) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_time(%struct.lua_State* %L) #0 {
  %isnum.i14 = alloca i32, align 4
  %isnum.i10 = alloca i32, align 4
  %isnum.i7 = alloca i32, align 4
  %isnum.i4 = alloca i32, align 4
  %isnum.i1 = alloca i32, align 4
  %isnum.i = alloca i32, align 4
  %ts = alloca %struct.tm, align 8
  %1 = call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %2 = icmp slt i32 %1, 1
  br i1 %2, label %3, label %getfield.exit

; <label>:3                                       ; preds = %0
  %4 = call i64 @time(i64* null) #3
  br label %60

getfield.exit:                                    ; preds = %0
  %5 = bitcast %struct.tm* %ts to i8*
  call void @llvm.lifetime.start(i64 56, i8* %5) #3
  call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  call void @lua_settop(%struct.lua_State* %L, i32 1) #3
  %6 = bitcast i32* %isnum.i to i8*
  call void @llvm.lifetime.start(i64 4, i8* %6) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([4 x i8]* @.str13626, i64 0, i64 0)) #3
  %7 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum.i) #3
  %8 = trunc i64 %7 to i32
  %9 = load i32* %isnum.i, align 4, !tbaa !1
  %10 = icmp eq i32 %9, 0
  %. = select i1 %10, i32 0, i32 %8
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @llvm.lifetime.end(i64 4, i8* %6) #3
  %11 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 0
  store i32 %., i32* %11, align 8, !tbaa !316
  %12 = bitcast i32* %isnum.i1 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %12) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([4 x i8]* @.str14627, i64 0, i64 0)) #3
  %13 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum.i1) #3
  %14 = trunc i64 %13 to i32
  %15 = load i32* %isnum.i1, align 4, !tbaa !1
  %16 = icmp eq i32 %15, 0
  %res.0.i2 = select i1 %16, i32 0, i32 %14
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @llvm.lifetime.end(i64 4, i8* %12) #3
  %17 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 1
  store i32 %res.0.i2, i32* %17, align 4, !tbaa !318
  %18 = bitcast i32* %isnum.i4 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %18) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([5 x i8]* @.str15628, i64 0, i64 0)) #3
  %19 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum.i4) #3
  %20 = trunc i64 %19 to i32
  %21 = load i32* %isnum.i4, align 4, !tbaa !1
  %22 = icmp eq i32 %21, 0
  %.18 = select i1 %22, i32 12, i32 %20
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @llvm.lifetime.end(i64 4, i8* %18) #3
  %23 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 2
  store i32 %.18, i32* %23, align 8, !tbaa !319
  %24 = bitcast i32* %isnum.i7 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %24) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([4 x i8]* @.str16629, i64 0, i64 0)) #3
  %25 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum.i7) #3
  %26 = load i32* %isnum.i7, align 4, !tbaa !1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %30

; <label>:28                                      ; preds = %getfield.exit
  %29 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8]* @.str20633, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str16629, i64 0, i64 0)) #3
  br label %getfield.exit9

; <label>:30                                      ; preds = %getfield.exit
  %31 = trunc i64 %25 to i32
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %getfield.exit9

getfield.exit9:                                   ; preds = %30, %28
  %.0.i = phi i32 [ %31, %30 ], [ %29, %28 ]
  call void @llvm.lifetime.end(i64 4, i8* %24) #3
  %32 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 3
  store i32 %.0.i, i32* %32, align 4, !tbaa !320
  %33 = bitcast i32* %isnum.i10 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %33) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8]* @.str17630, i64 0, i64 0)) #3
  %34 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum.i10) #3
  %35 = load i32* %isnum.i10, align 4, !tbaa !1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

; <label>:37                                      ; preds = %getfield.exit9
  %38 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8]* @.str20633, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str17630, i64 0, i64 0)) #3
  br label %getfield.exit13

; <label>:39                                      ; preds = %getfield.exit9
  %40 = trunc i64 %34 to i32
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %getfield.exit13

getfield.exit13:                                  ; preds = %39, %37
  %.0.i12 = phi i32 [ %40, %39 ], [ %38, %37 ]
  call void @llvm.lifetime.end(i64 4, i8* %33) #3
  %41 = add nsw i32 %.0.i12, -1
  %42 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 4
  store i32 %41, i32* %42, align 8, !tbaa !321
  %43 = bitcast i32* %isnum.i14 to i8*
  call void @llvm.lifetime.start(i64 4, i8* %43) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([5 x i8]* @.str18631, i64 0, i64 0)) #3
  %44 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1, i32* %isnum.i14) #3
  %45 = load i32* %isnum.i14, align 4, !tbaa !1
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

; <label>:47                                      ; preds = %getfield.exit13
  %48 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8]* @.str20633, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str18631, i64 0, i64 0)) #3
  br label %getfield.exit17

; <label>:49                                      ; preds = %getfield.exit13
  %50 = trunc i64 %44 to i32
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %getfield.exit17

getfield.exit17:                                  ; preds = %49, %47
  %.0.i16 = phi i32 [ %50, %49 ], [ %48, %47 ]
  call void @llvm.lifetime.end(i64 4, i8* %43) #3
  %51 = add nsw i32 %.0.i16, -1900
  %52 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 5
  store i32 %51, i32* %52, align 4, !tbaa !322
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8]* @.str19632, i64 0, i64 0)) #3
  %53 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %getboolfield.exit, label %55

; <label>:55                                      ; preds = %getfield.exit17
  %56 = call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #3
  br label %getboolfield.exit

getboolfield.exit:                                ; preds = %55, %getfield.exit17
  %57 = phi i32 [ %56, %55 ], [ -1, %getfield.exit17 ]
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %58 = getelementptr inbounds %struct.tm* %ts, i64 0, i32 8
  store i32 %57, i32* %58, align 8, !tbaa !325
  %59 = call i64 @"\01_mktime"(%struct.tm* %ts) #3
  call void @llvm.lifetime.end(i64 56, i8* %5) #3
  br label %60

; <label>:60                                      ; preds = %getboolfield.exit, %3
  %t.0 = phi i64 [ %4, %3 ], [ %59, %getboolfield.exit ]
  %61 = icmp eq i64 %t.0, -1
  br i1 %61, label %62, label %63

; <label>:62                                      ; preds = %60
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %65

; <label>:63                                      ; preds = %60
  %64 = sitofp i64 %t.0 to double
  call void @lua_pushnumber(%struct.lua_State* %L, double %64) #3
  br label %65

; <label>:65                                      ; preds = %63, %62
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @os_tmpname(%struct.lua_State* %L) #0 {
  %buff = alloca [32 x i8], align 16
  %1 = getelementptr inbounds [32 x i8]* %buff, i64 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds ([16 x i8]* @.str11624, i64 0, i64 0), i64 16, i32 1, i1 false)
  %2 = call i32 @mkstemp(i8* %1) #3
  %cond = icmp eq i32 %2, -1
  br i1 %cond, label %6, label %3

; <label>:3                                       ; preds = %0
  %4 = call i32 @"\01_close"(i32 %2) #3
  %5 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %1) #3
  br label %8

; <label>:6                                       ; preds = %0
  %7 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([37 x i8]* @.str12625, i64 0, i64 0)) #3
  br label %8

; <label>:8                                       ; preds = %6, %3
  %.0 = phi i32 [ %7, %6 ], [ 1, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_string(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 14) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([15 x %struct.luaL_Reg]* @strlib, i64 0, i64 0), i32 0) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #3
  %1 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8]* @.str650, i64 0, i64 0), i64 0) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  %2 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8]* @.str1651, i64 0, i64 0)) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  ret i32 1
}

declare i32 @__tolower(i32) #8

; Function Attrs: nounwind readnone
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_byte(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %2 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 1) #3
  %3 = load i64* %l, align 8, !tbaa !32
  %4 = icmp sgt i64 %2, -1
  br i1 %4, label %posrelat.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = sub i64 0, %2
  %7 = icmp ult i64 %3, %6
  br i1 %7, label %posrelat.exit, label %8

; <label>:8                                       ; preds = %5
  %9 = add i64 %2, 1
  %10 = add i64 %9, %3
  br label %posrelat.exit

posrelat.exit:                                    ; preds = %8, %5, %0
  %.0.i = phi i64 [ %10, %8 ], [ %2, %0 ], [ 0, %5 ]
  %11 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 %.0.i) #3
  %12 = load i64* %l, align 8, !tbaa !32
  %13 = icmp sgt i64 %11, -1
  br i1 %13, label %posrelat.exit2, label %14

; <label>:14                                      ; preds = %posrelat.exit
  %15 = sub i64 0, %11
  %16 = icmp ult i64 %12, %15
  br i1 %16, label %posrelat.exit2, label %17

; <label>:17                                      ; preds = %14
  %18 = add i64 %11, 1
  %19 = add i64 %18, %12
  br label %posrelat.exit2

posrelat.exit2:                                   ; preds = %17, %14, %posrelat.exit
  %.0.i1 = phi i64 [ %19, %17 ], [ %11, %posrelat.exit ], [ 0, %14 ]
  %20 = icmp eq i64 %.0.i, 0
  %. = select i1 %20, i64 1, i64 %.0.i
  %21 = icmp ugt i64 %.0.i1, %12
  %pose.0 = select i1 %21, i64 %12, i64 %.0.i1
  %22 = icmp ult i64 %pose.0, %.
  br i1 %22, label %.loopexit, label %23

; <label>:23                                      ; preds = %posrelat.exit2
  %24 = sub i64 %pose.0, %.
  %25 = add i64 %24, 1
  %26 = trunc i64 %25 to i32
  %sext = shl i64 %25, 32
  %27 = ashr exact i64 %sext, 32
  %28 = add i64 %27, %.
  %29 = icmp ugt i64 %28, %pose.0
  br i1 %29, label %32, label %30

; <label>:30                                      ; preds = %23
  %31 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([22 x i8]* @.str43693, i64 0, i64 0)) #3
  br label %.loopexit

; <label>:32                                      ; preds = %23
  call void @luaL_checkstack(%struct.lua_State* %L, i32 %26, i8* getelementptr inbounds ([22 x i8]* @.str43693, i64 0, i64 0)) #3
  %33 = icmp sgt i32 %26, 0
  br i1 %33, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %32
  %34 = add i64 %., -1
  %35 = xor i64 %.0.i1, -1
  %36 = xor i64 %12, -1
  %37 = icmp ugt i64 %35, %36
  %umax = select i1 %37, i64 %35, i64 %36
  %38 = sub i64 0, %umax
  %39 = icmp ugt i64 %.0.i, 1
  %umax4 = select i1 %39, i64 %.0.i, i64 1
  %40 = sub i64 %38, %umax4
  %41 = trunc i64 %40 to i32
  br label %42

; <label>:42                                      ; preds = %42, %.lr.ph
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %42 ]
  %43 = add i64 %34, %indvars.iv
  %44 = getelementptr inbounds i8* %1, i64 %43
  %45 = load i8* %44, align 1, !tbaa !86
  %46 = zext i8 %45 to i64
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %46) #3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %41
  br i1 %exitcond, label %.loopexit, label %42

.loopexit:                                        ; preds = %42, %32, %30, %posrelat.exit2
  %.0 = phi i32 [ %31, %30 ], [ 0, %posrelat.exit2 ], [ %26, %32 ], [ %26, %42 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_char(%struct.lua_State* %L) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %2) #3
  %3 = sext i32 %1 to i64
  %4 = call i8* @luaL_buffinitsize(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i64 %3) #3
  %5 = icmp slt i32 %1, 1
  br i1 %5, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %6 = add i32 %1, 1
  br label %7

; <label>:7                                       ; preds = %16, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %16 ], [ 1, %.lr.ph ]
  %8 = trunc i64 %indvars.iv to i32
  %9 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %8) #3
  %10 = trunc i64 %9 to i32
  %11 = trunc i64 %9 to i8
  %12 = and i32 %10, 255
  %13 = icmp eq i32 %12, %10
  br i1 %13, label %16, label %14

; <label>:14                                      ; preds = %7
  %15 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %8, i8* getelementptr inbounds ([19 x i8]* @.str42692, i64 0, i64 0)) #3
  br label %16

; <label>:16                                      ; preds = %14, %7
  %17 = add nsw i64 %indvars.iv, -1
  %18 = getelementptr inbounds i8* %4, i64 %17
  store i8 %11, i8* %18, align 1, !tbaa !86
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %6
  br i1 %exitcond, label %._crit_edge, label %7

._crit_edge:                                      ; preds = %16, %0
  call void @luaL_pushresultsize(%struct.luaL_Buffer* %b, i64 %3) #3
  call void @llvm.lifetime.end(i64 1056, i8* %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_dump(%struct.lua_State* %L) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 6) #3
  call void @lua_settop(%struct.lua_State* %L, i32 1) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b) #3
  %2 = call i32 @lua_dump(%struct.lua_State* %L, i32 (%struct.lua_State*, i8*, i64, i8*)* @writer, i8* %1) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

; <label>:4                                       ; preds = %0
  %5 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str41691, i64 0, i64 0)) #3
  br label %7

; <label>:6                                       ; preds = %0
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  br label %7

; <label>:7                                       ; preds = %6, %4
  %.0 = phi i32 [ %5, %4 ], [ 1, %6 ]
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_find(%struct.lua_State* %L) #0 {
  %1 = tail call fastcc i32 @str_find_aux(%struct.lua_State* %L, i32 1)
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_format(%struct.lua_State* %L) #0 {
  %l.i = alloca i64, align 8
  %buff.i = alloca [10 x i8], align 1
  %sfl = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %form = alloca [19 x i8], align 16
  %l = alloca i64, align 8
  %1 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %sfl) #3
  %3 = load i64* %sfl, align 8, !tbaa !32
  %4 = getelementptr inbounds i8* %2, i64 %3
  %5 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %5) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b) #3
  %6 = icmp sgt i64 %3, 0
  br i1 %6, label %.lr.ph.lr.ph, label %._crit_edge

.lr.ph.lr.ph:                                     ; preds = %0
  %7 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 2
  %8 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 1
  %9 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 0
  %10 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 0
  %11 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 1
  %12 = bitcast i64* %l.i to i8*
  %13 = getelementptr inbounds [10 x i8]* %buff.i, i64 0, i64 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.outer, %.lr.ph.lr.ph
  %arg.0.ph16 = phi i32 [ 1, %.lr.ph.lr.ph ], [ %50, %.outer ]
  %strfrmt.0.ph15 = phi i8* [ %2, %.lr.ph.lr.ph ], [ %98, %.outer ]
  br label %14

; <label>:14                                      ; preds = %.backedge, %.lr.ph
  %strfrmt.013 = phi i8* [ %strfrmt.0.ph15, %.lr.ph ], [ %strfrmt.0.be, %.backedge ]
  %15 = load i8* %strfrmt.013, align 1, !tbaa !86
  %16 = icmp eq i8 %15, 37
  br i1 %16, label %30, label %17

; <label>:17                                      ; preds = %14
  %18 = load i64* %7, align 8, !tbaa !303
  %19 = load i64* %8, align 8, !tbaa !302
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %23, label %21

; <label>:21                                      ; preds = %17
  %22 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre20 = load i8* %strfrmt.013, align 1, !tbaa !86
  %.pre21 = load i64* %7, align 8, !tbaa !303
  br label %23

; <label>:23                                      ; preds = %21, %17
  %24 = phi i64 [ %.pre21, %21 ], [ %18, %17 ]
  %25 = phi i8 [ %.pre20, %21 ], [ %15, %17 ]
  %26 = getelementptr inbounds i8* %strfrmt.013, i64 1
  %27 = add i64 %24, 1
  store i64 %27, i64* %7, align 8, !tbaa !303
  %28 = load i8** %9, align 8, !tbaa !304
  %29 = getelementptr inbounds i8* %28, i64 %24
  store i8 %25, i8* %29, align 1, !tbaa !86
  br label %.backedge

; <label>:30                                      ; preds = %14
  %31 = getelementptr inbounds i8* %strfrmt.013, i64 1
  %32 = load i8* %31, align 1, !tbaa !86
  %33 = icmp eq i8 %32, 37
  br i1 %33, label %34, label %48

; <label>:34                                      ; preds = %30
  %35 = load i64* %7, align 8, !tbaa !303
  %36 = load i64* %8, align 8, !tbaa !302
  %37 = icmp ult i64 %35, %36
  br i1 %37, label %40, label %38

; <label>:38                                      ; preds = %34
  %39 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre = load i8* %31, align 1, !tbaa !86
  %.pre19 = load i64* %7, align 8, !tbaa !303
  br label %40

; <label>:40                                      ; preds = %38, %34
  %41 = phi i64 [ %.pre19, %38 ], [ %35, %34 ]
  %42 = phi i8 [ %.pre, %38 ], [ 37, %34 ]
  %43 = getelementptr inbounds i8* %strfrmt.013, i64 2
  %44 = add i64 %41, 1
  store i64 %44, i64* %7, align 8, !tbaa !303
  %45 = load i8** %9, align 8, !tbaa !304
  %46 = getelementptr inbounds i8* %45, i64 %41
  store i8 %42, i8* %46, align 1, !tbaa !86
  br label %.backedge

.backedge:                                        ; preds = %40, %23
  %strfrmt.0.be = phi i8* [ %26, %23 ], [ %43, %40 ]
  %47 = icmp ult i8* %strfrmt.0.be, %4
  br i1 %47, label %14, label %._crit_edge

; <label>:48                                      ; preds = %30
  %49 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 512) #3
  %50 = add nsw i32 %arg.0.ph16, 1
  %51 = icmp slt i32 %arg.0.ph16, %1
  br i1 %51, label %54, label %52

; <label>:52                                      ; preds = %48
  %53 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %50, i8* getelementptr inbounds ([9 x i8]* @.str31681, i64 0, i64 0)) #3
  br label %54

; <label>:54                                      ; preds = %52, %48
  %55 = load i8* %31, align 1, !tbaa !86
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %.critedge.i, label %.lr.ph.i

; <label>:57                                      ; preds = %.lr.ph.i
  %58 = load i8* %63, align 1, !tbaa !86
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %.critedge.i, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %57, %54
  %60 = phi i8 [ %58, %57 ], [ %55, %54 ]
  %p.09.i = phi i8* [ %63, %57 ], [ %31, %54 ]
  %61 = sext i8 %60 to i32
  %memchr.i = call i8* @memchr(i8* getelementptr inbounds ([6 x i8]* @.str38688, i64 0, i64 0), i32 %61, i64 6) #3
  %62 = icmp eq i8* %memchr.i, null
  %63 = getelementptr inbounds i8* %p.09.i, i64 1
  br i1 %62, label %.critedge.i, label %57

.critedge.i:                                      ; preds = %.lr.ph.i, %57, %54
  %64 = phi i8 [ 0, %54 ], [ %60, %.lr.ph.i ], [ 0, %57 ]
  %p.0.lcssa.i = phi i8* [ %31, %54 ], [ %p.09.i, %.lr.ph.i ], [ %63, %57 ]
  %65 = ptrtoint i8* %p.0.lcssa.i to i64
  %66 = ptrtoint i8* %31 to i64
  %67 = sub i64 %65, %66
  %68 = icmp ugt i64 %67, 5
  br i1 %68, label %69, label %71

; <label>:69                                      ; preds = %.critedge.i
  %70 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([32 x i8]* @.str39689, i64 0, i64 0)) #3
  %.pre.i = load i8* %p.0.lcssa.i, align 1, !tbaa !86
  br label %71

; <label>:71                                      ; preds = %69, %.critedge.i
  %72 = phi i8 [ %.pre.i, %69 ], [ %64, %.critedge.i ]
  %73 = zext i8 %72 to i32
  %isdigittmp.i = add i32 %73, -48
  %isdigit.i = icmp ult i32 %isdigittmp.i, 10
  %74 = getelementptr inbounds i8* %p.0.lcssa.i, i64 1
  %.p.0.i = select i1 %isdigit.i, i8* %74, i8* %p.0.lcssa.i
  %75 = load i8* %.p.0.i, align 1, !tbaa !86
  %76 = zext i8 %75 to i32
  %isdigittmp1.i = add i32 %76, -48
  %isdigit2.i = icmp ult i32 %isdigittmp1.i, 10
  %77 = getelementptr inbounds i8* %.p.0.i, i64 1
  %p.2.i = select i1 %isdigit2.i, i8* %77, i8* %.p.0.i
  %78 = load i8* %p.2.i, align 1, !tbaa !86
  %79 = icmp eq i8 %78, 46
  br i1 %79, label %80, label %88

; <label>:80                                      ; preds = %71
  %81 = getelementptr inbounds i8* %p.2.i, i64 1
  %82 = load i8* %81, align 1, !tbaa !86
  %83 = zext i8 %82 to i32
  %isdigittmp5.i = add i32 %83, -48
  %isdigit6.i = icmp ult i32 %isdigittmp5.i, 10
  %84 = getelementptr inbounds i8* %p.2.i, i64 2
  %..i = select i1 %isdigit6.i, i8* %84, i8* %81
  %85 = load i8* %..i, align 1, !tbaa !86
  %86 = zext i8 %85 to i32
  %isdigittmp7.i = add i32 %86, -48
  %isdigit8.i = icmp ult i32 %isdigittmp7.i, 10
  %87 = getelementptr inbounds i8* %..i, i64 1
  %...i = select i1 %isdigit8.i, i8* %87, i8* %..i
  %.pre12.i = load i8* %...i, align 1, !tbaa !86
  br label %88

; <label>:88                                      ; preds = %80, %71
  %89 = phi i8 [ %78, %71 ], [ %.pre12.i, %80 ]
  %p.4.i = phi i8* [ %p.2.i, %71 ], [ %...i, %80 ]
  %90 = zext i8 %89 to i32
  %isdigittmp3.i = add i32 %90, -48
  %isdigit4.i = icmp ult i32 %isdigittmp3.i, 10
  br i1 %isdigit4.i, label %91, label %scanformat.exit

; <label>:91                                      ; preds = %88
  %92 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([45 x i8]* @.str40690, i64 0, i64 0)) #3
  br label %scanformat.exit

scanformat.exit:                                  ; preds = %91, %88
  store i8 37, i8* %10, align 16, !tbaa !86
  %93 = ptrtoint i8* %p.4.i to i64
  %94 = sub i64 %93, %66
  %95 = add nsw i64 %94, 1
  %96 = call i8* @__memcpy_chk(i8* %11, i8* %31, i64 %95, i64 18) #3
  %.sum.i = add i64 %94, 2
  %97 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %.sum.i
  store i8 0, i8* %97, align 1, !tbaa !86
  %98 = getelementptr inbounds i8* %p.4.i, i64 1
  %99 = load i8* %p.4.i, align 1, !tbaa !86
  %100 = sext i8 %99 to i32
  switch i32 %100, label %254 [
    i32 99, label %101
    i32 100, label %106
    i32 105, label %106
    i32 111, label %128
    i32 117, label %128
    i32 120, label %128
    i32 88, label %128
    i32 101, label %150
    i32 69, label %150
    i32 102, label %150
    i32 97, label %150
    i32 65, label %150
    i32 103, label %150
    i32 71, label %150
    i32 113, label %161
    i32 115, label %244
  ]

; <label>:101                                     ; preds = %scanformat.exit
  %102 = call i64 @llvm.objectsize.i64.p0i8(i8* %49, i1 false)
  %103 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 %50) #3
  %104 = trunc i64 %103 to i32
  %105 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %49, i32 0, i64 %102, i8* %10, i32 %104) #3
  br label %.outer

; <label>:106                                     ; preds = %scanformat.exit, %scanformat.exit
  %107 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %50) #3
  %108 = fptosi double %107 to i64
  %109 = sitofp i64 %108 to double
  %110 = fsub double %107, %109
  %111 = fcmp ogt double %110, -1.000000e+00
  %112 = fcmp olt double %110, 1.000000e+00
  %or.cond = and i1 %111, %112
  br i1 %or.cond, label %115, label %113

; <label>:113                                     ; preds = %106
  %114 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %50, i8* getelementptr inbounds ([29 x i8]* @.str32682, i64 0, i64 0)) #3
  br label %115

; <label>:115                                     ; preds = %113, %106
  %116 = call i64 @strlen(i8* %10) #3
  %117 = add i64 %116, -1
  %118 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %117
  %119 = load i8* %118, align 1, !tbaa !86
  %120 = call i64 @llvm.objectsize.i64.p0i8(i8* %118, i1 false) #3
  %121 = call i8* @__memcpy_chk(i8* %118, i8* getelementptr inbounds ([3 x i8]* @.str33683, i64 0, i64 0), i64 3, i64 %120)
  %122 = add i64 %116, 2
  %123 = add i64 %116, 1
  %124 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %123
  store i8 %119, i8* %124, align 1, !tbaa !86
  %125 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %122
  store i8 0, i8* %125, align 1, !tbaa !86
  %126 = call i64 @llvm.objectsize.i64.p0i8(i8* %49, i1 false)
  %127 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %49, i32 0, i64 %126, i8* %10, i64 %108) #3
  br label %.outer

; <label>:128                                     ; preds = %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit
  %129 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %50) #3
  %130 = fptoui double %129 to i64
  %131 = uitofp i64 %130 to double
  %132 = fsub double %129, %131
  %133 = fcmp ogt double %132, -1.000000e+00
  %134 = fcmp olt double %132, 1.000000e+00
  %or.cond6 = and i1 %133, %134
  br i1 %or.cond6, label %137, label %135

; <label>:135                                     ; preds = %128
  %136 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 %50, i8* getelementptr inbounds ([42 x i8]* @.str34684, i64 0, i64 0)) #3
  br label %137

; <label>:137                                     ; preds = %135, %128
  %138 = call i64 @strlen(i8* %10) #3
  %139 = add i64 %138, -1
  %140 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %139
  %141 = load i8* %140, align 1, !tbaa !86
  %142 = call i64 @llvm.objectsize.i64.p0i8(i8* %140, i1 false) #3
  %143 = call i8* @__memcpy_chk(i8* %140, i8* getelementptr inbounds ([3 x i8]* @.str33683, i64 0, i64 0), i64 3, i64 %142)
  %144 = add i64 %138, 2
  %145 = add i64 %138, 1
  %146 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %145
  store i8 %141, i8* %146, align 1, !tbaa !86
  %147 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %144
  store i8 0, i8* %147, align 1, !tbaa !86
  %148 = call i64 @llvm.objectsize.i64.p0i8(i8* %49, i1 false)
  %149 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %49, i32 0, i64 %148, i8* %10, i64 %130) #3
  br label %.outer

; <label>:150                                     ; preds = %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit, %scanformat.exit
  %151 = call i64 @strlen(i8* %10) #3
  %152 = add i64 %151, -1
  %153 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %152
  %154 = load i8* %153, align 1, !tbaa !86
  %155 = call i64 @llvm.objectsize.i64.p0i8(i8* %153, i1 false) #3
  %156 = call i8* @__memcpy_chk(i8* %153, i8* getelementptr inbounds ([1 x i8]* @.str650, i64 0, i64 0), i64 1, i64 %155)
  store i8 %154, i8* %153, align 1, !tbaa !86
  %157 = getelementptr inbounds [19 x i8]* %form, i64 0, i64 %151
  store i8 0, i8* %157, align 1, !tbaa !86
  %158 = call i64 @llvm.objectsize.i64.p0i8(i8* %49, i1 false)
  %159 = call double @luaL_checknumber(%struct.lua_State* %L, i32 %50) #3
  %160 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %49, i32 0, i64 %158, i8* %10, double %159) #3
  br label %.outer

; <label>:161                                     ; preds = %scanformat.exit
  call void @llvm.lifetime.start(i64 8, i8* %12) #3
  call void @llvm.lifetime.start(i64 10, i8* %13) #3
  %162 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 %50, i64* %l.i) #3
  %163 = load i64* %7, align 8, !tbaa !303
  %164 = load i64* %8, align 8, !tbaa !302
  %165 = icmp ult i64 %163, %164
  br i1 %165, label %168, label %166

; <label>:166                                     ; preds = %161
  %167 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre.i9 = load i64* %7, align 8, !tbaa !303
  br label %168

; <label>:168                                     ; preds = %166, %161
  %169 = phi i64 [ %.pre.i9, %166 ], [ %163, %161 ]
  %170 = add i64 %169, 1
  store i64 %170, i64* %7, align 8, !tbaa !303
  %171 = load i8** %9, align 8, !tbaa !304
  %172 = getelementptr inbounds i8* %171, i64 %169
  store i8 34, i8* %172, align 1, !tbaa !86
  %173 = load i64* %l.i, align 8, !tbaa !32
  %174 = add i64 %173, -1
  store i64 %174, i64* %l.i, align 8, !tbaa !32
  %175 = icmp eq i64 %173, 0
  br i1 %175, label %._crit_edge.i, label %.lr.ph.i10

.lr.ph.i10:                                       ; preds = %230, %168
  %s.01.i = phi i8* [ %231, %230 ], [ %162, %168 ]
  %176 = load i8* %s.01.i, align 1, !tbaa !86
  switch i8 %176, label %199 [
    i8 34, label %177
    i8 92, label %177
    i8 10, label %177
    i8 0, label %208
  ]

; <label>:177                                     ; preds = %.lr.ph.i10, %.lr.ph.i10, %.lr.ph.i10
  %178 = load i64* %7, align 8, !tbaa !303
  %179 = load i64* %8, align 8, !tbaa !302
  %180 = icmp ult i64 %178, %179
  br i1 %180, label %183, label %181

; <label>:181                                     ; preds = %177
  %182 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre7.i = load i64* %7, align 8, !tbaa !303
  br label %183

; <label>:183                                     ; preds = %181, %177
  %184 = phi i64 [ %.pre7.i, %181 ], [ %178, %177 ]
  %185 = add i64 %184, 1
  store i64 %185, i64* %7, align 8, !tbaa !303
  %186 = load i8** %9, align 8, !tbaa !304
  %187 = getelementptr inbounds i8* %186, i64 %184
  store i8 92, i8* %187, align 1, !tbaa !86
  %188 = load i64* %7, align 8, !tbaa !303
  %189 = load i64* %8, align 8, !tbaa !302
  %190 = icmp ult i64 %188, %189
  br i1 %190, label %193, label %191

; <label>:191                                     ; preds = %183
  %192 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre8.i = load i64* %7, align 8, !tbaa !303
  br label %193

; <label>:193                                     ; preds = %191, %183
  %194 = phi i64 [ %.pre8.i, %191 ], [ %188, %183 ]
  %195 = load i8* %s.01.i, align 1, !tbaa !86
  %196 = add i64 %194, 1
  store i64 %196, i64* %7, align 8, !tbaa !303
  %197 = load i8** %9, align 8, !tbaa !304
  %198 = getelementptr inbounds i8* %197, i64 %194
  store i8 %195, i8* %198, align 1, !tbaa !86
  br label %230

; <label>:199                                     ; preds = %.lr.ph.i10
  %isascii.i.i.i = icmp sgt i8 %176, -1
  br i1 %isascii.i.i.i, label %200, label %205

; <label>:200                                     ; preds = %199
  %201 = zext i8 %176 to i64
  %202 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %201
  %203 = load i32* %202, align 4, !tbaa !1
  %204 = and i32 %203, 512
  br label %iscntrl.exit.i

; <label>:205                                     ; preds = %199
  %206 = zext i8 %176 to i32
  %207 = call i32 @__maskrune(i32 %206, i64 512) #3
  br label %iscntrl.exit.i

iscntrl.exit.i:                                   ; preds = %205, %200
  %.sink.i.in.i.i = phi i32 [ %204, %200 ], [ %207, %205 ]
  %.sink.i.i.i = icmp eq i32 %.sink.i.in.i.i, 0
  br i1 %.sink.i.i.i, label %218, label %iscntrl.exit._crit_edge.i

iscntrl.exit._crit_edge.i:                        ; preds = %iscntrl.exit.i
  %.pre6.i = load i8* %s.01.i, align 1, !tbaa !86
  %phitmp.i = zext i8 %.pre6.i to i32
  br label %208

; <label>:208                                     ; preds = %iscntrl.exit._crit_edge.i, %.lr.ph.i10
  %209 = phi i32 [ %phitmp.i, %iscntrl.exit._crit_edge.i ], [ 0, %.lr.ph.i10 ]
  %210 = getelementptr inbounds i8* %s.01.i, i64 1
  %211 = load i8* %210, align 1, !tbaa !86
  %212 = zext i8 %211 to i32
  %isdigittmp.i11 = add i32 %212, -48
  %isdigit.i12 = icmp ult i32 %isdigittmp.i11, 10
  br i1 %isdigit.i12, label %215, label %213

; <label>:213                                     ; preds = %208
  %214 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %13, i32 0, i64 10, i8* getelementptr inbounds ([4 x i8]* @.str36686, i64 0, i64 0), i32 %209) #3
  br label %217

; <label>:215                                     ; preds = %208
  %216 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %13, i32 0, i64 10, i8* getelementptr inbounds ([6 x i8]* @.str37687, i64 0, i64 0), i32 %209) #3
  br label %217

; <label>:217                                     ; preds = %215, %213
  call void @luaL_addstring(%struct.luaL_Buffer* %b, i8* %13) #3
  br label %230

; <label>:218                                     ; preds = %iscntrl.exit.i
  %219 = load i64* %7, align 8, !tbaa !303
  %220 = load i64* %8, align 8, !tbaa !302
  %221 = icmp ult i64 %219, %220
  br i1 %221, label %224, label %222

; <label>:222                                     ; preds = %218
  %223 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre5.i = load i64* %7, align 8, !tbaa !303
  br label %224

; <label>:224                                     ; preds = %222, %218
  %225 = phi i64 [ %.pre5.i, %222 ], [ %219, %218 ]
  %226 = load i8* %s.01.i, align 1, !tbaa !86
  %227 = add i64 %225, 1
  store i64 %227, i64* %7, align 8, !tbaa !303
  %228 = load i8** %9, align 8, !tbaa !304
  %229 = getelementptr inbounds i8* %228, i64 %225
  store i8 %226, i8* %229, align 1, !tbaa !86
  br label %230

; <label>:230                                     ; preds = %224, %217, %193
  %231 = getelementptr inbounds i8* %s.01.i, i64 1
  %232 = load i64* %l.i, align 8, !tbaa !32
  %233 = add i64 %232, -1
  store i64 %233, i64* %l.i, align 8, !tbaa !32
  %234 = icmp eq i64 %232, 0
  br i1 %234, label %._crit_edge.i, label %.lr.ph.i10

._crit_edge.i:                                    ; preds = %230, %168
  %235 = load i64* %7, align 8, !tbaa !303
  %236 = load i64* %8, align 8, !tbaa !302
  %237 = icmp ult i64 %235, %236
  br i1 %237, label %addquoted.exit, label %238

; <label>:238                                     ; preds = %._crit_edge.i
  %239 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre4.i = load i64* %7, align 8, !tbaa !303
  br label %addquoted.exit

addquoted.exit:                                   ; preds = %238, %._crit_edge.i
  %240 = phi i64 [ %.pre4.i, %238 ], [ %235, %._crit_edge.i ]
  %241 = add i64 %240, 1
  store i64 %241, i64* %7, align 8, !tbaa !303
  %242 = load i8** %9, align 8, !tbaa !304
  %243 = getelementptr inbounds i8* %242, i64 %240
  store i8 34, i8* %243, align 1, !tbaa !86
  call void @llvm.lifetime.end(i64 8, i8* %12) #3
  call void @llvm.lifetime.end(i64 10, i8* %13) #3
  br label %.outer

; <label>:244                                     ; preds = %scanformat.exit
  %245 = call i8* @luaL_tolstring(%struct.lua_State* %L, i32 %50, i64* %l) #3
  %246 = call i8* @strchr(i8* %10, i32 46) #3
  %247 = icmp eq i8* %246, null
  %248 = load i64* %l, align 8
  %249 = icmp ugt i64 %248, 99
  %or.cond8 = and i1 %247, %249
  br i1 %or.cond8, label %250, label %251

; <label>:250                                     ; preds = %244
  call void @luaL_addvalue(%struct.luaL_Buffer* %b) #3
  br label %.outer

; <label>:251                                     ; preds = %244
  %252 = call i64 @llvm.objectsize.i64.p0i8(i8* %49, i1 false)
  %253 = call i32 (i8*, i32, i64, i8*, ...)* @__sprintf_chk(i8* %49, i32 0, i64 %252, i8* %10, i8* %245) #3
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %.outer

; <label>:254                                     ; preds = %scanformat.exit
  %255 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([34 x i8]* @.str35685, i64 0, i64 0), i32 %100) #3
  br label %260

.outer:                                           ; preds = %251, %250, %addquoted.exit, %150, %137, %115, %101
  %nb.0 = phi i32 [ 0, %250 ], [ %253, %251 ], [ 0, %addquoted.exit ], [ %160, %150 ], [ %149, %137 ], [ %127, %115 ], [ %105, %101 ]
  %256 = sext i32 %nb.0 to i64
  %257 = load i64* %7, align 8, !tbaa !303
  %258 = add i64 %257, %256
  store i64 %258, i64* %7, align 8, !tbaa !303
  %259 = icmp ult i8* %98, %4
  br i1 %259, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.outer, %.backedge, %0
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  br label %260

; <label>:260                                     ; preds = %._crit_edge, %254
  %.0 = phi i32 [ %255, %254 ], [ 1, %._crit_edge ]
  call void @llvm.lifetime.end(i64 1056, i8* %5) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gmatch(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 0) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @gmatch_aux, i32 3) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_gsub(%struct.lua_State* %L) #0 {
  %l.i.i = alloca i64, align 8
  %srcl = alloca i64, align 8
  %lp = alloca i64, align 8
  %ms = alloca %struct.MatchState, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %srcl) #3
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* %lp) #3
  %3 = call i32 @lua_type(%struct.lua_State* %L, i32 3) #3
  %4 = load i64* %srcl, align 8, !tbaa !32
  %5 = add i64 %4, 1
  %6 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 4, i64 %5) #3
  %7 = load i8* %2, align 1, !tbaa !86
  %8 = icmp eq i8 %7, 94
  %9 = bitcast %struct.MatchState* %ms to i8*
  call void @llvm.lifetime.start(i64 560, i8* %9) #3
  %10 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %10) #3
  %.off = add i32 %3, -3
  %switch = icmp ult i32 %.off, 4
  br i1 %switch, label %13, label %11

; <label>:11                                      ; preds = %0
  %12 = call i32 @luaL_argerror(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([31 x i8]* @.str28678, i64 0, i64 0)) #3
  br label %13

; <label>:13                                      ; preds = %11, %0
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b) #3
  br i1 %8, label %14, label %._crit_edge

._crit_edge:                                      ; preds = %13
  %.pre = load i64* %lp, align 8, !tbaa !32
  br label %18

; <label>:14                                      ; preds = %13
  %15 = getelementptr inbounds i8* %2, i64 1
  %16 = load i64* %lp, align 8, !tbaa !32
  %17 = add i64 %16, -1
  store i64 %17, i64* %lp, align 8, !tbaa !32
  br label %18

; <label>:18                                      ; preds = %14, %._crit_edge
  %19 = phi i64 [ %17, %14 ], [ %.pre, %._crit_edge ]
  %p.0 = phi i8* [ %15, %14 ], [ %2, %._crit_edge ]
  %20 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  store %struct.lua_State* %L, %struct.lua_State** %20, align 8, !tbaa !326
  %21 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 0
  store i32 200, i32* %21, align 8, !tbaa !328
  %22 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 1
  store i8* %1, i8** %22, align 8, !tbaa !329
  %23 = load i64* %srcl, align 8, !tbaa !32
  %24 = getelementptr inbounds i8* %1, i64 %23
  %25 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 2
  store i8* %24, i8** %25, align 8, !tbaa !330
  %26 = getelementptr inbounds i8* %p.0, i64 %19
  %27 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 3
  store i8* %26, i8** %27, align 8, !tbaa !331
  %28 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 5
  %29 = bitcast i64* %l.i.i to i8*
  %30 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 2
  %31 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 1
  %32 = getelementptr inbounds %struct.luaL_Buffer* %b, i64 0, i32 0
  %33 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 0, i32 1
  %34 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 0, i32 0
  br label %35

; <label>:35                                      ; preds = %164, %18
  %n.0 = phi i64 [ 0, %18 ], [ %n.18, %164 ]
  %src.0 = phi i8* [ %1, %18 ], [ %src.1, %164 ]
  %36 = icmp ult i64 %n.0, %6
  br i1 %36, label %37, label %165

; <label>:37                                      ; preds = %35
  store i32 0, i32* %28, align 8, !tbaa !332
  %38 = call fastcc i8* @match(%struct.MatchState* %ms, i8* %src.0, i8* %p.0)
  %39 = icmp eq i8* %38, null
  br i1 %39, label %add_value.exit.thread, label %40

; <label>:40                                      ; preds = %37
  %41 = add i64 %n.0, 1
  %42 = load %struct.lua_State** %20, align 8, !tbaa !326
  switch i32 %3, label %77 [
    i32 6, label %43
    i32 5, label %50
  ]

; <label>:43                                      ; preds = %40
  call void @lua_pushvalue(%struct.lua_State* %42, i32 3) #3
  %44 = load i32* %28, align 8, !tbaa !332
  %45 = icmp eq i32 %44, 0
  %46 = icmp ne i8* %src.0, null
  %or.cond.i.i = and i1 %45, %46
  %..i.i = select i1 %or.cond.i.i, i32 1, i32 %44
  %47 = load %struct.lua_State** %20, align 8, !tbaa !326
  call void @luaL_checkstack(%struct.lua_State* %47, i32 %..i.i, i8* getelementptr inbounds ([18 x i8]* @.str17667, i64 0, i64 0)) #3
  %48 = icmp sgt i32 %..i.i, 0
  br i1 %48, label %.lr.ph.i.i, label %push_captures.exit.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %43
  %i.02.i.i = phi i32 [ %49, %.lr.ph.i.i ], [ 0, %43 ]
  call fastcc void @push_onecapture(%struct.MatchState* %ms, i32 %i.02.i.i, i8* %src.0, i8* %38) #3
  %49 = add nsw i32 %i.02.i.i, 1
  %exitcond.i.i = icmp eq i32 %49, %..i.i
  br i1 %exitcond.i.i, label %push_captures.exit.i, label %.lr.ph.i.i

push_captures.exit.i:                             ; preds = %.lr.ph.i.i, %43
  call void @lua_callk(%struct.lua_State* %42, i32 %..i.i, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  br label %132

; <label>:50                                      ; preds = %40
  %51 = load i32* %28, align 8, !tbaa !332
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %58, label %53

; <label>:53                                      ; preds = %50
  %54 = ptrtoint i8* %38 to i64
  %55 = ptrtoint i8* %src.0 to i64
  %56 = sub i64 %54, %55
  %57 = call i8* @lua_pushlstring(%struct.lua_State* %42, i8* %src.0, i64 %56) #3
  br label %push_onecapture.exit

; <label>:58                                      ; preds = %50
  %59 = load i64* %33, align 8, !tbaa !333
  %60 = icmp eq i64 %59, -1
  br i1 %60, label %.thread.i, label %64

.thread.i:                                        ; preds = %58
  %61 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %42, i8* getelementptr inbounds ([19 x i8]* @.str19669, i64 0, i64 0)) #3
  %62 = load %struct.lua_State** %20, align 8, !tbaa !326
  %63 = load i8** %34, align 8, !tbaa !335
  br label %73

; <label>:64                                      ; preds = %58
  %65 = icmp eq i64 %59, -2
  %66 = load i8** %34, align 8, !tbaa !335
  br i1 %65, label %67, label %73

; <label>:67                                      ; preds = %64
  %68 = load i8** %22, align 8, !tbaa !329
  %69 = ptrtoint i8* %66 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = add i64 %69, 1
  %72 = sub i64 %71, %70
  call void @lua_pushinteger(%struct.lua_State* %42, i64 %72) #3
  br label %push_onecapture.exit

; <label>:73                                      ; preds = %64, %.thread.i
  %74 = phi i8* [ %63, %.thread.i ], [ %66, %64 ]
  %75 = phi %struct.lua_State* [ %62, %.thread.i ], [ %42, %64 ]
  %76 = call i8* @lua_pushlstring(%struct.lua_State* %75, i8* %74, i64 %59) #3
  br label %push_onecapture.exit

push_onecapture.exit:                             ; preds = %73, %67, %53
  call void @lua_gettable(%struct.lua_State* %42, i32 3) #3
  br label %132

; <label>:77                                      ; preds = %40
  call void @llvm.lifetime.start(i64 8, i8* %29) #3
  %78 = call i8* @lua_tolstring(%struct.lua_State* %42, i32 3, i64* %l.i.i) #3
  %79 = load i64* %l.i.i, align 8, !tbaa !32
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %add_value.exit, label %.lr.ph.i1.i

.lr.ph.i1.i:                                      ; preds = %77
  %81 = ptrtoint i8* %38 to i64
  %82 = ptrtoint i8* %src.0 to i64
  %83 = sub i64 %81, %82
  br label %84

; <label>:84                                      ; preds = %128, %.lr.ph.i1.i
  %i.01.i.i = phi i64 [ 0, %.lr.ph.i1.i ], [ %129, %128 ]
  %85 = getelementptr inbounds i8* %78, i64 %i.01.i.i
  %86 = load i8* %85, align 1, !tbaa !86
  %87 = icmp eq i8 %86, 37
  br i1 %87, label %100, label %88

; <label>:88                                      ; preds = %84
  %89 = load i64* %30, align 8, !tbaa !303
  %90 = load i64* %31, align 8, !tbaa !302
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %94, label %92

; <label>:92                                      ; preds = %88
  %93 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre2.i.i = load i8* %85, align 1, !tbaa !86
  %.pre3.i.i = load i64* %30, align 8, !tbaa !303
  br label %94

; <label>:94                                      ; preds = %92, %88
  %95 = phi i64 [ %.pre3.i.i, %92 ], [ %89, %88 ]
  %96 = phi i8 [ %.pre2.i.i, %92 ], [ %86, %88 ]
  %97 = add i64 %95, 1
  store i64 %97, i64* %30, align 8, !tbaa !303
  %98 = load i8** %32, align 8, !tbaa !304
  %99 = getelementptr inbounds i8* %98, i64 %95
  store i8 %96, i8* %99, align 1, !tbaa !86
  br label %128

; <label>:100                                     ; preds = %84
  %101 = add i64 %i.01.i.i, 1
  %102 = getelementptr inbounds i8* %78, i64 %101
  %103 = load i8* %102, align 1, !tbaa !86
  %104 = zext i8 %103 to i32
  %isdigittmp.i.i = add i32 %104, -48
  %isdigit.i.i = icmp ult i32 %isdigittmp.i.i, 10
  %105 = sext i8 %103 to i32
  br i1 %isdigit.i.i, label %123, label %106

; <label>:106                                     ; preds = %100
  %107 = icmp eq i8 %103, 37
  br i1 %107, label %111, label %108

; <label>:108                                     ; preds = %106
  %109 = load %struct.lua_State** %20, align 8, !tbaa !326
  %110 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %109, i8* getelementptr inbounds ([42 x i8]* @.str30680, i64 0, i64 0), i32 37) #3
  br label %111

; <label>:111                                     ; preds = %108, %106
  %112 = load i64* %30, align 8, !tbaa !303
  %113 = load i64* %31, align 8, !tbaa !302
  %114 = icmp ult i64 %112, %113
  br i1 %114, label %117, label %115

; <label>:115                                     ; preds = %111
  %116 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre.i.i = load i64* %30, align 8, !tbaa !303
  br label %117

; <label>:117                                     ; preds = %115, %111
  %118 = phi i64 [ %.pre.i.i, %115 ], [ %112, %111 ]
  %119 = load i8* %102, align 1, !tbaa !86
  %120 = add i64 %118, 1
  store i64 %120, i64* %30, align 8, !tbaa !303
  %121 = load i8** %32, align 8, !tbaa !304
  %122 = getelementptr inbounds i8* %121, i64 %118
  store i8 %119, i8* %122, align 1, !tbaa !86
  br label %128

; <label>:123                                     ; preds = %100
  %124 = icmp eq i8 %103, 48
  br i1 %124, label %125, label %126

; <label>:125                                     ; preds = %123
  call void @luaL_addlstring(%struct.luaL_Buffer* %b, i8* %src.0, i64 %83) #3
  br label %128

; <label>:126                                     ; preds = %123
  %127 = add nsw i32 %105, -49
  call fastcc void @push_onecapture(%struct.MatchState* %ms, i32 %127, i8* %src.0, i8* %38) #3
  call void @luaL_addvalue(%struct.luaL_Buffer* %b) #3
  br label %128

; <label>:128                                     ; preds = %126, %125, %117, %94
  %i.1.i.i = phi i64 [ %i.01.i.i, %94 ], [ %101, %125 ], [ %101, %126 ], [ %101, %117 ]
  %129 = add i64 %i.1.i.i, 1
  %130 = load i64* %l.i.i, align 8, !tbaa !32
  %131 = icmp ult i64 %129, %130
  br i1 %131, label %84, label %add_value.exit

; <label>:132                                     ; preds = %push_onecapture.exit, %push_captures.exit.i
  %133 = call i32 @lua_toboolean(%struct.lua_State* %42, i32 -1) #3
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %140

; <label>:135                                     ; preds = %132
  call void @lua_settop(%struct.lua_State* %42, i32 -2) #3
  %136 = ptrtoint i8* %38 to i64
  %137 = ptrtoint i8* %src.0 to i64
  %138 = sub i64 %136, %137
  %139 = call i8* @lua_pushlstring(%struct.lua_State* %42, i8* %src.0, i64 %138) #3
  br label %147

; <label>:140                                     ; preds = %132
  %141 = call i32 @lua_isstring(%struct.lua_State* %42, i32 -1) #3
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %147

; <label>:143                                     ; preds = %140
  %144 = call i32 @lua_type(%struct.lua_State* %42, i32 -1) #3
  %145 = call i8* @lua_typename(%struct.lua_State* %42, i32 %144) #3
  %146 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %42, i8* getelementptr inbounds ([33 x i8]* @.str29679, i64 0, i64 0), i8* %145) #3
  br label %147

; <label>:147                                     ; preds = %143, %140, %135
  call void @luaL_addvalue(%struct.luaL_Buffer* %b) #3
  br label %add_value.exit

add_value.exit:                                   ; preds = %147, %128, %77
  %148 = icmp ugt i8* %38, %src.0
  br i1 %148, label %164, label %add_value.exit.thread

add_value.exit.thread:                            ; preds = %add_value.exit, %37
  %n.17 = phi i64 [ %41, %add_value.exit ], [ %n.0, %37 ]
  %149 = load i8** %25, align 8, !tbaa !330
  %150 = icmp ult i8* %src.0, %149
  br i1 %150, label %151, label %165

; <label>:151                                     ; preds = %add_value.exit.thread
  %152 = load i64* %30, align 8, !tbaa !303
  %153 = load i64* %31, align 8, !tbaa !302
  %154 = icmp ult i64 %152, %153
  br i1 %154, label %157, label %155

; <label>:155                                     ; preds = %151
  %156 = call i8* @luaL_prepbuffsize(%struct.luaL_Buffer* %b, i64 1) #3
  %.pre9 = load i64* %30, align 8, !tbaa !303
  br label %157

; <label>:157                                     ; preds = %155, %151
  %158 = phi i64 [ %.pre9, %155 ], [ %152, %151 ]
  %159 = getelementptr inbounds i8* %src.0, i64 1
  %160 = load i8* %src.0, align 1, !tbaa !86
  %161 = add i64 %158, 1
  store i64 %161, i64* %30, align 8, !tbaa !303
  %162 = load i8** %32, align 8, !tbaa !304
  %163 = getelementptr inbounds i8* %162, i64 %158
  store i8 %160, i8* %163, align 1, !tbaa !86
  br label %164

; <label>:164                                     ; preds = %157, %add_value.exit
  %n.18 = phi i64 [ %n.17, %157 ], [ %41, %add_value.exit ]
  %src.1 = phi i8* [ %159, %157 ], [ %38, %add_value.exit ]
  br i1 %8, label %165, label %35

; <label>:165                                     ; preds = %164, %add_value.exit.thread, %35
  %n.2 = phi i64 [ %n.18, %164 ], [ %n.17, %add_value.exit.thread ], [ %n.0, %35 ]
  %src.2 = phi i8* [ %src.1, %164 ], [ %src.0, %add_value.exit.thread ], [ %src.0, %35 ]
  %166 = load i8** %25, align 8, !tbaa !330
  %167 = ptrtoint i8* %166 to i64
  %168 = ptrtoint i8* %src.2 to i64
  %169 = sub i64 %167, %168
  call void @luaL_addlstring(%struct.luaL_Buffer* %b, i8* %src.2, i64 %169) #3
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %n.2) #3
  call void @llvm.lifetime.end(i64 1056, i8* %10) #3
  call void @llvm.lifetime.end(i64 560, i8* %9) #3
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_len(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %2 = load i64* %l, align 8, !tbaa !32
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_lower(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %3 = load i64* %l, align 8, !tbaa !32
  %4 = call i8* @luaL_buffinitsize(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i64 %3) #3
  %5 = load i64* %l, align 8, !tbaa !32
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %i.01 = phi i64 [ %13, %.lr.ph ], [ 0, %0 ]
  %7 = getelementptr inbounds i8* %2, i64 %i.01
  %8 = load i8* %7, align 1, !tbaa !86
  %9 = zext i8 %8 to i32
  %10 = call i32 @__tolower(i32 %9) #3
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds i8* %4, i64 %i.01
  store i8 %11, i8* %12, align 1, !tbaa !86
  %13 = add i64 %i.01, 1
  %14 = load i64* %l, align 8, !tbaa !32
  %15 = icmp ult i64 %13, %14
  br i1 %15, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %.lcssa = phi i64 [ 0, %0 ], [ %14, %.lr.ph ]
  call void @luaL_pushresultsize(%struct.luaL_Buffer* %b, i64 %.lcssa) #3
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_match(%struct.lua_State* %L) #0 {
  %1 = tail call fastcc i32 @str_find_aux(%struct.lua_State* %L, i32 0)
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_rep(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %lsep = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %2 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %3 = trunc i64 %2 to i32
  %4 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([1 x i8]* @.str650, i64 0, i64 0), i64* %lsep) #3
  %5 = icmp slt i32 %3, 1
  br i1 %5, label %6, label %8

; <label>:6                                       ; preds = %0
  %7 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8]* @.str650, i64 0, i64 0), i64 0) #3
  br label %44

; <label>:8                                       ; preds = %0
  %9 = load i64* %l, align 8, !tbaa !32
  %10 = load i64* %lsep, align 8, !tbaa !32
  %uadd = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %9, i64 %10)
  %11 = extractvalue { i64, i1 } %uadd, 1
  br i1 %11, label %17, label %12

; <label>:12                                      ; preds = %8
  %13 = extractvalue { i64, i1 } %uadd, 0
  %sext = shl i64 %2, 32
  %14 = ashr exact i64 %sext, 32
  %15 = udiv i64 9223372036854775807, %14
  %16 = icmp ult i64 %13, %15
  br i1 %16, label %19, label %17

; <label>:17                                      ; preds = %12, %8
  %18 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str16666, i64 0, i64 0)) #3
  br label %44

; <label>:19                                      ; preds = %12
  %20 = mul i64 %9, %14
  %sext1 = add i64 %sext, -4294967296
  %21 = ashr exact i64 %sext1, 32
  %22 = mul i64 %10, %21
  %23 = add i64 %22, %20
  %24 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %24) #3
  %25 = call i8* @luaL_buffinitsize(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i64 %23) #3
  %26 = icmp sgt i32 %3, 1
  %27 = load i64* %l, align 8, !tbaa !32
  %28 = call i64 @llvm.objectsize.i64.p0i8(i8* %25, i1 false)
  %29 = call i8* @__memcpy_chk(i8* %25, i8* %1, i64 %27, i64 %28) #3
  br i1 %26, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.backedge, %19
  %.in = phi i32 [ %30, %.backedge ], [ %3, %19 ]
  %p.02 = phi i8* [ %p.0.be, %.backedge ], [ %25, %19 ]
  %30 = add nsw i32 %.in, -1
  %31 = load i64* %l, align 8, !tbaa !32
  %32 = getelementptr inbounds i8* %p.02, i64 %31
  %33 = load i64* %lsep, align 8, !tbaa !32
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %.backedge, label %35

; <label>:35                                      ; preds = %.lr.ph
  %36 = call i64 @llvm.objectsize.i64.p0i8(i8* %32, i1 false)
  %37 = call i8* @__memcpy_chk(i8* %32, i8* %4, i64 %33, i64 %36) #3
  %38 = load i64* %lsep, align 8, !tbaa !32
  %.sum = add i64 %38, %31
  %39 = getelementptr inbounds i8* %p.02, i64 %.sum
  %.pre = load i64* %l, align 8, !tbaa !32
  br label %.backedge

.backedge:                                        ; preds = %35, %.lr.ph
  %40 = phi i64 [ %.pre, %35 ], [ %31, %.lr.ph ]
  %p.0.be = phi i8* [ %39, %35 ], [ %32, %.lr.ph ]
  %41 = icmp sgt i32 %30, 1
  %42 = call i64 @llvm.objectsize.i64.p0i8(i8* %p.0.be, i1 false)
  %43 = call i8* @__memcpy_chk(i8* %p.0.be, i8* %1, i64 %40, i64 %42) #3
  br i1 %41, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.backedge, %19
  call void @luaL_pushresultsize(%struct.luaL_Buffer* %b, i64 %23) #3
  call void @llvm.lifetime.end(i64 1056, i8* %24) #3
  br label %44

; <label>:44                                      ; preds = %._crit_edge, %17, %6
  %.0 = phi i32 [ %18, %17 ], [ 1, %._crit_edge ], [ 1, %6 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_reverse(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %3 = load i64* %l, align 8, !tbaa !32
  %4 = call i8* @luaL_buffinitsize(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i64 %3) #3
  %5 = load i64* %l, align 8, !tbaa !32
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %7 = phi i64 [ %14, %.lr.ph ], [ %5, %0 ]
  %i.01 = phi i64 [ %13, %.lr.ph ], [ 0, %0 ]
  %8 = xor i64 %i.01, -1
  %9 = add i64 %7, %8
  %10 = getelementptr inbounds i8* %2, i64 %9
  %11 = load i8* %10, align 1, !tbaa !86
  %12 = getelementptr inbounds i8* %4, i64 %i.01
  store i8 %11, i8* %12, align 1, !tbaa !86
  %13 = add i64 %i.01, 1
  %14 = load i64* %l, align 8, !tbaa !32
  %15 = icmp ugt i64 %14, %13
  br i1 %15, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %.lcssa = phi i64 [ 0, %0 ], [ %14, %.lr.ph ]
  call void @luaL_pushresultsize(%struct.luaL_Buffer* %b, i64 %.lcssa) #3
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_sub(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %2 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %3 = load i64* %l, align 8, !tbaa !32
  %4 = icmp sgt i64 %2, -1
  br i1 %4, label %posrelat.exit, label %5

; <label>:5                                       ; preds = %0
  %6 = sub i64 0, %2
  %7 = icmp ult i64 %3, %6
  br i1 %7, label %posrelat.exit, label %8

; <label>:8                                       ; preds = %5
  %9 = add i64 %2, 1
  %10 = add i64 %9, %3
  br label %posrelat.exit

posrelat.exit:                                    ; preds = %8, %5, %0
  %.0.i = phi i64 [ %10, %8 ], [ %2, %0 ], [ 0, %5 ]
  %11 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 -1) #3
  %12 = load i64* %l, align 8, !tbaa !32
  %13 = icmp sgt i64 %11, -1
  br i1 %13, label %posrelat.exit2, label %14

; <label>:14                                      ; preds = %posrelat.exit
  %15 = sub i64 0, %11
  %16 = icmp ult i64 %12, %15
  br i1 %16, label %posrelat.exit2, label %17

; <label>:17                                      ; preds = %14
  %18 = add i64 %11, 1
  %19 = add i64 %18, %12
  br label %posrelat.exit2

posrelat.exit2:                                   ; preds = %17, %14, %posrelat.exit
  %.0.i1 = phi i64 [ %19, %17 ], [ %11, %posrelat.exit ], [ 0, %14 ]
  %20 = icmp eq i64 %.0.i, 0
  %. = select i1 %20, i64 1, i64 %.0.i
  %21 = icmp ugt i64 %.0.i1, %12
  %end.0 = select i1 %21, i64 %12, i64 %.0.i1
  %22 = icmp ult i64 %end.0, %.
  br i1 %22, label %28, label %23

; <label>:23                                      ; preds = %posrelat.exit2
  %.sum = add i64 %., -1
  %24 = getelementptr inbounds i8* %1, i64 %.sum
  %25 = sub i64 1, %.
  %26 = add i64 %25, %end.0
  %27 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %24, i64 %26) #3
  br label %30

; <label>:28                                      ; preds = %posrelat.exit2
  %29 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([1 x i8]* @.str650, i64 0, i64 0), i64 0) #3
  br label %30

; <label>:30                                      ; preds = %28, %23
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @str_upper(%struct.lua_State* %L) #0 {
  %l = alloca i64, align 8
  %b = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %l) #3
  %3 = load i64* %l, align 8, !tbaa !32
  %4 = call i8* @luaL_buffinitsize(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i64 %3) #3
  %5 = load i64* %l, align 8, !tbaa !32
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %0
  %i.01 = phi i64 [ %13, %.lr.ph ], [ 0, %0 ]
  %7 = getelementptr inbounds i8* %2, i64 %i.01
  %8 = load i8* %7, align 1, !tbaa !86
  %9 = zext i8 %8 to i32
  %10 = call i32 @__toupper(i32 %9) #3
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds i8* %4, i64 %i.01
  store i8 %11, i8* %12, align 1, !tbaa !86
  %13 = add i64 %i.01, 1
  %14 = load i64* %l, align 8, !tbaa !32
  %15 = icmp ult i64 %13, %14
  br i1 %15, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %.lcssa = phi i64 [ 0, %0 ], [ %14, %.lr.ph ]
  call void @luaL_pushresultsize(%struct.luaL_Buffer* %b, i64 %.lcssa) #3
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @writer(%struct.lua_State* nocapture readnone %L, i8* %b, i64 %size, i8* %B) #0 {
  %1 = bitcast i8* %B to %struct.luaL_Buffer*
  tail call void @luaL_addlstring(%struct.luaL_Buffer* %1, i8* %b, i64 %size) #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @str_find_aux(%struct.lua_State* %L, i32 %find) #0 {
  %ls = alloca i64, align 8
  %lp = alloca i64, align 8
  %ms = alloca %struct.MatchState, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* %ls) #3
  %2 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* %lp) #3
  %3 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 1) #3
  %4 = load i64* %ls, align 8, !tbaa !32
  %5 = icmp sgt i64 %3, -1
  br i1 %5, label %posrelat.exit, label %6

; <label>:6                                       ; preds = %0
  %7 = sub i64 0, %3
  %8 = icmp ult i64 %4, %7
  br i1 %8, label %posrelat.exit.thread, label %9

; <label>:9                                       ; preds = %6
  %10 = add i64 %3, 1
  %11 = add i64 %10, %4
  br label %posrelat.exit

posrelat.exit:                                    ; preds = %9, %0
  %.0.i = phi i64 [ %11, %9 ], [ %3, %0 ]
  %12 = icmp eq i64 %.0.i, 0
  br i1 %12, label %posrelat.exit.thread, label %13

; <label>:13                                      ; preds = %posrelat.exit
  %14 = add i64 %4, 1
  %15 = icmp ugt i64 %.0.i, %14
  br i1 %15, label %16, label %posrelat.exit.thread

; <label>:16                                      ; preds = %13
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %.critedge.thread

posrelat.exit.thread:                             ; preds = %13, %posrelat.exit, %6
  %init.0 = phi i64 [ %.0.i, %13 ], [ 1, %posrelat.exit ], [ 1, %6 ]
  %17 = icmp ne i32 %find, 0
  br i1 %17, label %18, label %nospecials.exit.thread

; <label>:18                                      ; preds = %posrelat.exit.thread
  %19 = call i32 @lua_toboolean(%struct.lua_State* %L, i32 4) #3
  %20 = icmp eq i32 %19, 0
  %21 = load i64* %lp, align 8, !tbaa !32
  br i1 %20, label %.preheader, label %nospecials.exit.thread10

.preheader:                                       ; preds = %25, %18
  %upto.0.i = phi i64 [ %28, %25 ], [ 0, %18 ]
  %22 = getelementptr inbounds i8* %2, i64 %upto.0.i
  %23 = call i8* @strpbrk(i8* %22, i8* getelementptr inbounds ([11 x i8]* @.str27677, i64 0, i64 0)) #3
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %nospecials.exit.thread

; <label>:25                                      ; preds = %.preheader
  %26 = call i64 @strlen(i8* %22) #3
  %27 = add i64 %upto.0.i, 1
  %28 = add i64 %27, %26
  %29 = icmp ugt i64 %28, %21
  br i1 %29, label %nospecials.exit.thread10, label %.preheader

nospecials.exit.thread10:                         ; preds = %25, %18
  %.sum2 = add i64 %init.0, -1
  %30 = getelementptr inbounds i8* %1, i64 %.sum2
  %31 = load i64* %ls, align 8, !tbaa !32
  %32 = sub i64 %31, %init.0
  %33 = add i64 %32, 1
  %34 = icmp eq i64 %21, 0
  br i1 %34, label %lmemfind.exit, label %35

; <label>:35                                      ; preds = %nospecials.exit.thread10
  %36 = icmp ugt i64 %21, %33
  br i1 %36, label %lmemfind.exit.thread, label %37

; <label>:37                                      ; preds = %35
  %38 = add i64 %21, -1
  %39 = icmp eq i64 %33, %38
  br i1 %39, label %lmemfind.exit.thread, label %.lr.ph.i4

.lr.ph.i4:                                        ; preds = %37
  %40 = sub i64 %33, %38
  %41 = load i8* %2, align 1, !tbaa !86
  %42 = sext i8 %41 to i32
  %43 = getelementptr inbounds i8* %2, i64 1
  br label %44

; <label>:44                                      ; preds = %51, %.lr.ph.i4
  %.014.i = phi i64 [ %40, %.lr.ph.i4 ], [ %55, %51 ]
  %.023.i = phi i8* [ %30, %.lr.ph.i4 ], [ %48, %51 ]
  %45 = call i8* @memchr(i8* %.023.i, i32 %42, i64 %.014.i) #3
  %46 = icmp eq i8* %45, null
  br i1 %46, label %lmemfind.exit.thread, label %47

; <label>:47                                      ; preds = %44
  %48 = getelementptr inbounds i8* %45, i64 1
  %49 = call i32 @memcmp(i8* %48, i8* %43, i64 %38) #3
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %lmemfind.exit.thread11, label %51

; <label>:51                                      ; preds = %47
  %52 = ptrtoint i8* %48 to i64
  %53 = ptrtoint i8* %.023.i to i64
  %54 = add i64 %53, %.014.i
  %55 = sub i64 %54, %52
  %56 = icmp eq i64 %54, %52
  br i1 %56, label %lmemfind.exit.thread, label %44

lmemfind.exit:                                    ; preds = %nospecials.exit.thread10
  %57 = icmp eq i8* %30, null
  br i1 %57, label %lmemfind.exit.thread, label %lmemfind.exit.thread11

lmemfind.exit.thread11:                           ; preds = %lmemfind.exit, %47
  %.0.i512 = phi i8* [ %30, %lmemfind.exit ], [ %45, %47 ]
  %58 = ptrtoint i8* %.0.i512 to i64
  %59 = ptrtoint i8* %1 to i64
  %60 = sub i64 %58, %59
  %61 = add nsw i64 %60, 1
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %61) #3
  %62 = load i64* %lp, align 8, !tbaa !32
  %63 = add i64 %60, %62
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %63) #3
  br label %.critedge.thread

nospecials.exit.thread:                           ; preds = %.preheader, %posrelat.exit.thread
  %64 = bitcast %struct.MatchState* %ms to i8*
  call void @llvm.lifetime.start(i64 560, i8* %64) #3
  %.sum = add i64 %init.0, -1
  %65 = getelementptr inbounds i8* %1, i64 %.sum
  %66 = load i8* %2, align 1, !tbaa !86
  %67 = icmp eq i8 %66, 94
  br i1 %67, label %68, label %nospecials.exit.thread._crit_edge

nospecials.exit.thread._crit_edge:                ; preds = %nospecials.exit.thread
  %.pre22 = load i64* %lp, align 8, !tbaa !32
  br label %72

; <label>:68                                      ; preds = %nospecials.exit.thread
  %69 = getelementptr inbounds i8* %2, i64 1
  %70 = load i64* %lp, align 8, !tbaa !32
  %71 = add i64 %70, -1
  store i64 %71, i64* %lp, align 8, !tbaa !32
  br label %72

; <label>:72                                      ; preds = %68, %nospecials.exit.thread._crit_edge
  %73 = phi i64 [ %71, %68 ], [ %.pre22, %nospecials.exit.thread._crit_edge ]
  %p.0 = phi i8* [ %69, %68 ], [ %2, %nospecials.exit.thread._crit_edge ]
  %74 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  store %struct.lua_State* %L, %struct.lua_State** %74, align 8, !tbaa !326
  %75 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 0
  store i32 200, i32* %75, align 8, !tbaa !328
  %76 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 1
  store i8* %1, i8** %76, align 8, !tbaa !329
  %77 = load i64* %ls, align 8, !tbaa !32
  %78 = getelementptr inbounds i8* %1, i64 %77
  %79 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 2
  store i8* %78, i8** %79, align 8, !tbaa !330
  %80 = getelementptr inbounds i8* %p.0, i64 %73
  %81 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 3
  store i8* %80, i8** %81, align 8, !tbaa !331
  %82 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 5
  br label %83

; <label>:83                                      ; preds = %109, %72
  %s1.0 = phi i8* [ %65, %72 ], [ %110, %109 ]
  store i32 0, i32* %82, align 8, !tbaa !332
  %84 = call fastcc i8* @match(%struct.MatchState* %ms, i8* %s1.0, i8* %p.0)
  %85 = icmp eq i8* %84, null
  br i1 %85, label %106, label %86

; <label>:86                                      ; preds = %83
  br i1 %17, label %87, label %99

; <label>:87                                      ; preds = %86
  %88 = ptrtoint i8* %s1.0 to i64
  %89 = ptrtoint i8* %1 to i64
  %90 = sub i64 1, %89
  %91 = add i64 %90, %88
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %91) #3
  %92 = ptrtoint i8* %84 to i64
  %93 = sub i64 %92, %89
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %93) #3
  %94 = load i32* %82, align 8, !tbaa !332
  %95 = load %struct.lua_State** %74, align 8, !tbaa !326
  call void @luaL_checkstack(%struct.lua_State* %95, i32 %94, i8* getelementptr inbounds ([18 x i8]* @.str17667, i64 0, i64 0)) #3
  %96 = icmp sgt i32 %94, 0
  br i1 %96, label %.lr.ph.i8, label %push_captures.exit9

.lr.ph.i8:                                        ; preds = %.lr.ph.i8, %87
  %i.02.i6 = phi i32 [ %97, %.lr.ph.i8 ], [ 0, %87 ]
  call fastcc void @push_onecapture(%struct.MatchState* %ms, i32 %i.02.i6, i8* null, i8* null) #3
  %97 = add nsw i32 %i.02.i6, 1
  %exitcond.i7 = icmp eq i32 %97, %94
  br i1 %exitcond.i7, label %push_captures.exit9, label %.lr.ph.i8

push_captures.exit9:                              ; preds = %.lr.ph.i8, %87
  %98 = add nsw i32 %94, 2
  br label %.critedge.thread

; <label>:99                                      ; preds = %86
  %100 = load i32* %82, align 8, !tbaa !332
  %101 = icmp eq i32 %100, 0
  %102 = icmp ne i8* %s1.0, null
  %or.cond.i = and i1 %101, %102
  %..i = select i1 %or.cond.i, i32 1, i32 %100
  %103 = load %struct.lua_State** %74, align 8, !tbaa !326
  call void @luaL_checkstack(%struct.lua_State* %103, i32 %..i, i8* getelementptr inbounds ([18 x i8]* @.str17667, i64 0, i64 0)) #3
  %104 = icmp sgt i32 %..i, 0
  br i1 %104, label %.lr.ph.i, label %.critedge.thread

.lr.ph.i:                                         ; preds = %.lr.ph.i, %99
  %i.02.i = phi i32 [ %105, %.lr.ph.i ], [ 0, %99 ]
  call fastcc void @push_onecapture(%struct.MatchState* %ms, i32 %i.02.i, i8* %s1.0, i8* %84) #3
  %105 = add nsw i32 %i.02.i, 1
  %exitcond.i = icmp eq i32 %105, %..i
  br i1 %exitcond.i, label %.critedge.thread, label %.lr.ph.i

; <label>:106                                     ; preds = %83
  %107 = load i8** %79, align 8, !tbaa !330
  %108 = icmp ult i8* %s1.0, %107
  br i1 %108, label %109, label %lmemfind.exit.thread

; <label>:109                                     ; preds = %106
  %110 = getelementptr inbounds i8* %s1.0, i64 1
  br i1 %67, label %lmemfind.exit.thread, label %83

lmemfind.exit.thread:                             ; preds = %109, %106, %lmemfind.exit, %51, %44, %37, %35
  call void @lua_pushnil(%struct.lua_State* %L) #3
  br label %.critedge.thread

.critedge.thread:                                 ; preds = %lmemfind.exit.thread, %.lr.ph.i, %99, %push_captures.exit9, %lmemfind.exit.thread11, %16
  %.1 = phi i32 [ 2, %lmemfind.exit.thread11 ], [ 1, %lmemfind.exit.thread ], [ 1, %16 ], [ %98, %push_captures.exit9 ], [ %..i, %99 ], [ %..i, %.lr.ph.i ]
  ret i32 %.1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @gmatch_aux(%struct.lua_State* %L) #0 {
  %ms = alloca %struct.MatchState, align 8
  %ls = alloca i64, align 8
  %lp = alloca i64, align 8
  %1 = bitcast %struct.MatchState* %ms to i8*
  call void @llvm.lifetime.start(i64 560, i8* %1) #3
  %2 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1001001, i64* %ls) #3
  %3 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1001002, i64* %lp) #3
  %4 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  store %struct.lua_State* %L, %struct.lua_State** %4, align 8, !tbaa !326
  %5 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 0
  store i32 200, i32* %5, align 8, !tbaa !328
  %6 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 1
  store i8* %2, i8** %6, align 8, !tbaa !329
  %7 = load i64* %ls, align 8, !tbaa !32
  %8 = getelementptr inbounds i8* %2, i64 %7
  %9 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 2
  store i8* %8, i8** %9, align 8, !tbaa !330
  %10 = load i64* %lp, align 8, !tbaa !32
  %11 = getelementptr inbounds i8* %3, i64 %10
  %12 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 3
  store i8* %11, i8** %12, align 8, !tbaa !331
  %13 = call i64 @lua_tointegerx(%struct.lua_State* %L, i32 -1001003, i32* null) #3
  %14 = icmp sgt i64 %13, %7
  br i1 %14, label %push_captures.exit, label %.lr.ph

.lr.ph:                                           ; preds = %0
  %15 = getelementptr inbounds i8* %2, i64 %13
  %16 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 5
  br label %20

; <label>:17                                      ; preds = %20
  %18 = load i8** %9, align 8, !tbaa !330
  %19 = icmp ugt i8* %23, %18
  br i1 %19, label %push_captures.exit, label %20

; <label>:20                                      ; preds = %17, %.lr.ph
  %src.04 = phi i8* [ %15, %.lr.ph ], [ %23, %17 ]
  store i32 0, i32* %16, align 8, !tbaa !332
  %21 = call fastcc i8* @match(%struct.MatchState* %ms, i8* %src.04, i8* %3)
  %22 = icmp eq i8* %21, null
  %23 = getelementptr inbounds i8* %src.04, i64 1
  br i1 %22, label %17, label %24

; <label>:24                                      ; preds = %20
  %25 = ptrtoint i8* %21 to i64
  %26 = ptrtoint i8* %2 to i64
  %27 = sub i64 %25, %26
  %28 = icmp eq i8* %21, %src.04
  %29 = zext i1 %28 to i64
  %. = add nsw i64 %27, %29
  call void @lua_pushinteger(%struct.lua_State* %L, i64 %.) #3
  call void @lua_replace(%struct.lua_State* %L, i32 -1001003) #3
  %30 = load i32* %16, align 8, !tbaa !332
  %31 = icmp eq i32 %30, 0
  %32 = icmp ne i8* %src.04, null
  %or.cond.i = and i1 %31, %32
  %..i = select i1 %or.cond.i, i32 1, i32 %30
  %33 = load %struct.lua_State** %4, align 8, !tbaa !326
  call void @luaL_checkstack(%struct.lua_State* %33, i32 %..i, i8* getelementptr inbounds ([18 x i8]* @.str17667, i64 0, i64 0)) #3
  %34 = icmp sgt i32 %..i, 0
  br i1 %34, label %.lr.ph.i, label %push_captures.exit

.lr.ph.i:                                         ; preds = %.lr.ph.i, %24
  %i.02.i = phi i32 [ %35, %.lr.ph.i ], [ 0, %24 ]
  call fastcc void @push_onecapture(%struct.MatchState* %ms, i32 %i.02.i, i8* %src.04, i8* %21) #3
  %35 = add nsw i32 %i.02.i, 1
  %exitcond.i = icmp eq i32 %35, %..i
  br i1 %exitcond.i, label %push_captures.exit, label %.lr.ph.i

push_captures.exit:                               ; preds = %.lr.ph.i, %24, %17, %0
  %.0 = phi i32 [ %..i, %24 ], [ 0, %0 ], [ %..i, %.lr.ph.i ], [ 0, %17 ]
  call void @llvm.lifetime.end(i64 560, i8* %1) #3
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @match(%struct.MatchState* %ms, i8* %s, i8* readonly %p) #0 {
  %1 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 0
  %2 = load i32* %1, align 4, !tbaa !328
  %3 = add nsw i32 %2, -1
  store i32 %3, i32* %1, align 4, !tbaa !328
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %5, label %.preheader72

; <label>:5                                       ; preds = %0
  %6 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  %7 = load %struct.lua_State** %6, align 8, !tbaa !326
  %8 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %7, i8* getelementptr inbounds ([20 x i8]* @.str20670, i64 0, i64 0)) #3
  br label %.preheader72

.preheader72:                                     ; preds = %5, %0
  %9 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 3
  %10 = load i8** %9, align 8, !tbaa !331
  %11 = icmp eq i8* %10, %p
  br i1 %11, label %start_capture.exit25, label %.lr.ph106.lr.ph

.lr.ph106.lr.ph:                                  ; preds = %.preheader72
  %12 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 2
  %13 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  %14 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 1
  %15 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 5
  br label %.lr.ph106

.lr.ph106:                                        ; preds = %.outer.backedge, %.lr.ph106.lr.ph
  %16 = phi i8* [ %10, %.lr.ph106.lr.ph ], [ %472, %.outer.backedge ]
  %.0.ph120 = phi i8* [ %s, %.lr.ph106.lr.ph ], [ %.0.ph.be, %.outer.backedge ]
  %.02.ph119 = phi i8* [ %p, %.lr.ph106.lr.ph ], [ %.02.ph.be, %.outer.backedge ]
  %17 = getelementptr inbounds i8* %.0.ph120, i64 1
  %18 = getelementptr inbounds i8* %.0.ph120, i64 -1
  br label %19

; <label>:19                                      ; preds = %.backedge, %.lr.ph106
  %20 = phi i8* [ %16, %.lr.ph106 ], [ %352, %.backedge ]
  %.02105 = phi i8* [ %.02.ph119, %.lr.ph106 ], [ %.02.be, %.backedge ]
  %21 = load i8* %.02105, align 1, !tbaa !86
  %22 = sext i8 %21 to i32
  switch i32 %22, label %270 [
    i32 40, label %23
    i32 41, label %60
    i32 36, label %85
    i32 37, label %92
  ]

; <label>:23                                      ; preds = %19
  %24 = getelementptr inbounds i8* %.02105, i64 1
  %25 = load i8* %24, align 1, !tbaa !86
  %26 = icmp eq i8 %25, 41
  br i1 %26, label %27, label %44

; <label>:27                                      ; preds = %23
  %28 = getelementptr inbounds i8* %.02105, i64 2
  %29 = load i32* %15, align 4, !tbaa !332
  %30 = icmp sgt i32 %29, 31
  br i1 %30, label %31, label %34

; <label>:31                                      ; preds = %27
  %32 = load %struct.lua_State** %13, align 8, !tbaa !326
  %33 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %32, i8* getelementptr inbounds ([18 x i8]* @.str17667, i64 0, i64 0)) #3
  br label %34

; <label>:34                                      ; preds = %31, %27
  %35 = sext i32 %29 to i64
  %36 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %35, i32 0
  store i8* %.0.ph120, i8** %36, align 8, !tbaa !335
  %37 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %35, i32 1
  store i64 -2, i64* %37, align 8, !tbaa !333
  %38 = add nsw i32 %29, 1
  store i32 %38, i32* %15, align 4, !tbaa !332
  %39 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.0.ph120, i8* %28) #3
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %start_capture.exit25

; <label>:41                                      ; preds = %34
  %42 = load i32* %15, align 4, !tbaa !332
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %15, align 4, !tbaa !332
  br label %start_capture.exit25

; <label>:44                                      ; preds = %23
  %45 = load i32* %15, align 4, !tbaa !332
  %46 = icmp sgt i32 %45, 31
  br i1 %46, label %47, label %50

; <label>:47                                      ; preds = %44
  %48 = load %struct.lua_State** %13, align 8, !tbaa !326
  %49 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %48, i8* getelementptr inbounds ([18 x i8]* @.str17667, i64 0, i64 0)) #3
  br label %50

; <label>:50                                      ; preds = %47, %44
  %51 = sext i32 %45 to i64
  %52 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %51, i32 0
  store i8* %.0.ph120, i8** %52, align 8, !tbaa !335
  %53 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %51, i32 1
  store i64 -1, i64* %53, align 8, !tbaa !333
  %54 = add nsw i32 %45, 1
  store i32 %54, i32* %15, align 4, !tbaa !332
  %55 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.0.ph120, i8* %24) #3
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %start_capture.exit25

; <label>:57                                      ; preds = %50
  %58 = load i32* %15, align 4, !tbaa !332
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* %15, align 4, !tbaa !332
  br label %start_capture.exit25

; <label>:60                                      ; preds = %19
  %61 = getelementptr inbounds i8* %.02105, i64 1
  %62 = load i32* %15, align 4, !tbaa !332
  %63 = sext i32 %62 to i64
  br label %64

; <label>:64                                      ; preds = %67, %60
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %67 ], [ %63, %60 ]
  %indvars.iv.next.i.i = add nsw i64 %indvars.iv.i.i, -1
  %65 = trunc i64 %indvars.iv.i.i to i32
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %71

; <label>:67                                      ; preds = %64
  %68 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %indvars.iv.next.i.i, i32 1
  %69 = load i64* %68, align 8, !tbaa !333
  %70 = icmp eq i64 %69, -1
  br i1 %70, label %.loopexit.i.i, label %64

; <label>:71                                      ; preds = %64
  %72 = load %struct.lua_State** %13, align 8, !tbaa !326
  %73 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %72, i8* getelementptr inbounds ([24 x i8]* @.str26676, i64 0, i64 0)) #3
  br label %capture_to_close.exit.i

.loopexit.i.i:                                    ; preds = %67
  %74 = trunc i64 %indvars.iv.next.i.i to i32
  br label %capture_to_close.exit.i

capture_to_close.exit.i:                          ; preds = %.loopexit.i.i, %71
  %.0.i.i24 = phi i32 [ %73, %71 ], [ %74, %.loopexit.i.i ]
  %75 = sext i32 %.0.i.i24 to i64
  %76 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %75, i32 0
  %77 = load i8** %76, align 8, !tbaa !335
  %78 = ptrtoint i8* %.0.ph120 to i64
  %79 = ptrtoint i8* %77 to i64
  %80 = sub i64 %78, %79
  %81 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %75, i32 1
  store i64 %80, i64* %81, align 8, !tbaa !333
  %82 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.0.ph120, i8* %61) #3
  %83 = icmp eq i8* %82, null
  br i1 %83, label %84, label %start_capture.exit25

; <label>:84                                      ; preds = %capture_to_close.exit.i
  store i64 -1, i64* %81, align 8, !tbaa !333
  br label %start_capture.exit25

; <label>:85                                      ; preds = %19
  %86 = getelementptr inbounds i8* %.02105, i64 1
  %87 = icmp eq i8* %86, %20
  br i1 %87, label %88, label %classend.exit

; <label>:88                                      ; preds = %85
  %89 = load i8** %12, align 8, !tbaa !330
  %90 = icmp eq i8* %.0.ph120, %89
  %91 = select i1 %90, i8* %.0.ph120, i8* null
  br label %start_capture.exit25

; <label>:92                                      ; preds = %19
  %93 = getelementptr inbounds i8* %.02105, i64 1
  %94 = load i8* %93, align 1, !tbaa !86
  %95 = sext i8 %94 to i32
  switch i32 %95, label %.thread177 [
    i32 98, label %96
    i32 102, label %125
    i32 48, label %238
    i32 49, label %238
    i32 50, label %238
    i32 51, label %238
    i32 52, label %238
    i32 53, label %238
    i32 54, label %238
    i32 55, label %238
    i32 56, label %238
    i32 57, label %238
  ]

; <label>:96                                      ; preds = %92
  %97 = getelementptr inbounds i8* %.02105, i64 2
  %98 = getelementptr inbounds i8* %20, i64 -1
  %99 = icmp ugt i8* %98, %97
  br i1 %99, label %103, label %100

; <label>:100                                     ; preds = %96
  %101 = load %struct.lua_State** %13, align 8, !tbaa !326
  %102 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %101, i8* getelementptr inbounds ([47 x i8]* @.str25675, i64 0, i64 0)) #3
  br label %103

; <label>:103                                     ; preds = %100, %96
  %104 = load i8* %.0.ph120, align 1, !tbaa !86
  %105 = load i8* %97, align 1, !tbaa !86
  %106 = icmp eq i8 %104, %105
  br i1 %106, label %107, label %start_capture.exit25

; <label>:107                                     ; preds = %103
  %108 = getelementptr inbounds i8* %.02105, i64 3
  %109 = load i8* %108, align 1, !tbaa !86
  %110 = load i8** %12, align 8, !tbaa !330
  %111 = icmp ult i8* %17, %110
  br i1 %111, label %.lr.ph.i21, label %start_capture.exit25

.lr.ph.i21:                                       ; preds = %.backedge.i22, %107
  %112 = phi i8* [ %118, %.backedge.i22 ], [ %17, %107 ]
  %cont.04.i = phi i32 [ %cont.0.be.i, %.backedge.i22 ], [ 1, %107 ]
  %.013.i = phi i8* [ %112, %.backedge.i22 ], [ %.0.ph120, %107 ]
  %113 = load i8* %112, align 1, !tbaa !86
  %114 = icmp eq i8 %113, %109
  br i1 %114, label %115, label %120

; <label>:115                                     ; preds = %.lr.ph.i21
  %116 = add nsw i32 %cont.04.i, -1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %matchbalance.exit, label %.backedge.i22

.backedge.i22:                                    ; preds = %120, %115
  %cont.0.be.i = phi i32 [ %116, %115 ], [ %.cont.0.i, %120 ]
  %118 = getelementptr inbounds i8* %112, i64 1
  %119 = icmp ult i8* %118, %110
  br i1 %119, label %.lr.ph.i21, label %start_capture.exit25

; <label>:120                                     ; preds = %.lr.ph.i21
  %121 = icmp eq i8 %113, %104
  %122 = zext i1 %121 to i32
  %.cont.0.i = add nsw i32 %122, %cont.04.i
  br label %.backedge.i22

matchbalance.exit:                                ; preds = %115
  %123 = getelementptr inbounds i8* %.013.i, i64 2
  %124 = getelementptr inbounds i8* %.02105, i64 4
  br label %.outer.backedge

; <label>:125                                     ; preds = %92
  %126 = getelementptr inbounds i8* %.02105, i64 2
  %127 = load i8* %126, align 1, !tbaa !86
  %128 = icmp eq i8 %127, 91
  br i1 %128, label %.thread, label %130

.thread:                                          ; preds = %125
  %129 = getelementptr inbounds i8* %.02105, i64 3
  br label %142

; <label>:130                                     ; preds = %125
  %131 = load %struct.lua_State** %13, align 8, !tbaa !326
  %132 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %131, i8* getelementptr inbounds ([35 x i8]* @.str21671, i64 0, i64 0)) #3
  %.pre171 = load i8* %126, align 1, !tbaa !86
  %phitmp174 = sext i8 %.pre171 to i32
  %133 = getelementptr inbounds i8* %.02105, i64 3
  switch i32 %phitmp174, label %classend.exit20 [
    i32 37, label %134
    i32 91, label %142
  ]

; <label>:134                                     ; preds = %130
  %135 = load i8** %9, align 8, !tbaa !331
  %136 = icmp eq i8* %133, %135
  br i1 %136, label %137, label %140

; <label>:137                                     ; preds = %134
  %138 = load %struct.lua_State** %13, align 8, !tbaa !326
  %139 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %138, i8* getelementptr inbounds ([35 x i8]* @.str23673, i64 0, i64 0)) #3
  br label %140

; <label>:140                                     ; preds = %137, %134
  %141 = getelementptr inbounds i8* %.02105, i64 4
  br label %classend.exit20

; <label>:142                                     ; preds = %130, %.thread
  %143 = phi i8* [ %129, %.thread ], [ %133, %130 ]
  %144 = load i8* %143, align 1, !tbaa !86
  %145 = icmp eq i8 %144, 94
  %146 = getelementptr inbounds i8* %.02105, i64 4
  %..i15 = select i1 %145, i8* %146, i8* %143
  br label %147

; <label>:147                                     ; preds = %161, %142
  %.0.i16 = phi i8* [ %.1.i18, %161 ], [ %..i15, %142 ]
  %148 = load i8** %9, align 8, !tbaa !331
  %149 = icmp eq i8* %.0.i16, %148
  br i1 %149, label %150, label %153

; <label>:150                                     ; preds = %147
  %151 = load %struct.lua_State** %13, align 8, !tbaa !326
  %152 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %151, i8* getelementptr inbounds ([32 x i8]* @.str24674, i64 0, i64 0)) #3
  br label %153

; <label>:153                                     ; preds = %150, %147
  %154 = getelementptr inbounds i8* %.0.i16, i64 1
  %155 = load i8* %.0.i16, align 1, !tbaa !86
  %156 = icmp eq i8 %155, 37
  br i1 %156, label %157, label %161

; <label>:157                                     ; preds = %153
  %158 = load i8** %9, align 8, !tbaa !331
  %159 = icmp ult i8* %154, %158
  %160 = getelementptr inbounds i8* %.0.i16, i64 2
  %.2.i17 = select i1 %159, i8* %160, i8* %154
  br label %161

; <label>:161                                     ; preds = %157, %153
  %.1.i18 = phi i8* [ %154, %153 ], [ %.2.i17, %157 ]
  %162 = load i8* %.1.i18, align 1, !tbaa !86
  %163 = icmp eq i8 %162, 93
  br i1 %163, label %164, label %147

; <label>:164                                     ; preds = %161
  %165 = getelementptr inbounds i8* %.1.i18, i64 1
  br label %classend.exit20

classend.exit20:                                  ; preds = %164, %140, %130
  %166 = phi i8* [ %143, %164 ], [ %133, %140 ], [ %133, %130 ]
  %.01.i19 = phi i8* [ %165, %164 ], [ %141, %140 ], [ %133, %130 ]
  %167 = load i8** %14, align 8, !tbaa !329
  %168 = icmp eq i8* %.0.ph120, %167
  br i1 %168, label %171, label %169

; <label>:169                                     ; preds = %classend.exit20
  %170 = load i8* %18, align 1, !tbaa !86
  %phitmp = zext i8 %170 to i32
  br label %171

; <label>:171                                     ; preds = %169, %classend.exit20
  %172 = phi i32 [ %phitmp, %169 ], [ 0, %classend.exit20 ]
  %173 = getelementptr inbounds i8* %.01.i19, i64 -1
  %174 = load i8* %166, align 1, !tbaa !86
  %175 = icmp eq i8 %174, 94
  %.p.i7 = select i1 %175, i8* %166, i8* %126
  %176 = zext i1 %175 to i32
  %..i8 = xor i32 %176, 1
  %177 = getelementptr inbounds i8* %.p.i7, i64 1
  %178 = icmp ult i8* %177, %173
  br i1 %178, label %.lr.ph.i10, label %matchbracketclass.exit14

.lr.ph.i10:                                       ; preds = %.backedge.i12, %171
  %179 = phi i8* [ %203, %.backedge.i12 ], [ %177, %171 ]
  %.012.i9 = phi i8* [ %.01.be.i11, %.backedge.i12 ], [ %.p.i7, %171 ]
  %180 = load i8* %179, align 1, !tbaa !86
  %181 = icmp eq i8 %180, 37
  %182 = getelementptr inbounds i8* %.012.i9, i64 2
  %183 = load i8* %182, align 1, !tbaa !86
  br i1 %181, label %184, label %188

; <label>:184                                     ; preds = %.lr.ph.i10
  %185 = zext i8 %183 to i32
  %186 = tail call fastcc i32 @match_class(i32 %172, i32 %185) #3
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %.backedge.i12, label %matchbracketclass.exit14

; <label>:188                                     ; preds = %.lr.ph.i10
  %189 = icmp eq i8 %183, 45
  br i1 %189, label %190, label %200

; <label>:190                                     ; preds = %188
  %191 = getelementptr inbounds i8* %.012.i9, i64 3
  %192 = icmp ult i8* %191, %173
  br i1 %192, label %193, label %200

; <label>:193                                     ; preds = %190
  %194 = zext i8 %180 to i32
  %195 = icmp ugt i32 %194, %172
  br i1 %195, label %.backedge.i12, label %196

; <label>:196                                     ; preds = %193
  %197 = load i8* %191, align 1, !tbaa !86
  %198 = zext i8 %197 to i32
  %199 = icmp ult i32 %198, %172
  br i1 %199, label %.backedge.i12, label %matchbracketclass.exit14

; <label>:200                                     ; preds = %190, %188
  %201 = zext i8 %180 to i32
  %202 = icmp eq i32 %201, %172
  br i1 %202, label %matchbracketclass.exit14, label %.backedge.i12

.backedge.i12:                                    ; preds = %200, %196, %193, %184
  %.01.be.i11 = phi i8* [ %182, %184 ], [ %191, %196 ], [ %191, %193 ], [ %179, %200 ]
  %203 = getelementptr inbounds i8* %.01.be.i11, i64 1
  %204 = icmp ult i8* %203, %173
  br i1 %204, label %.lr.ph.i10, label %matchbracketclass.exit14

matchbracketclass.exit14:                         ; preds = %.backedge.i12, %200, %196, %184, %171
  %.0.i13 = phi i32 [ %176, %171 ], [ %..i8, %184 ], [ %..i8, %196 ], [ %..i8, %200 ], [ %176, %.backedge.i12 ]
  %205 = icmp eq i32 %.0.i13, 0
  br i1 %205, label %206, label %start_capture.exit25

; <label>:206                                     ; preds = %matchbracketclass.exit14
  %207 = load i8* %.0.ph120, align 1, !tbaa !86
  %208 = zext i8 %207 to i32
  %209 = load i8* %166, align 1, !tbaa !86
  %210 = icmp eq i8 %209, 94
  %.p.i = select i1 %210, i8* %166, i8* %126
  %211 = zext i1 %210 to i32
  %..i5 = xor i32 %211, 1
  %212 = getelementptr inbounds i8* %.p.i, i64 1
  %213 = icmp ult i8* %212, %173
  br i1 %213, label %.lr.ph.i, label %matchbracketclass.exit

.lr.ph.i:                                         ; preds = %.backedge.i, %206
  %214 = phi i8* [ %235, %.backedge.i ], [ %212, %206 ]
  %.012.i = phi i8* [ %.01.be.i, %.backedge.i ], [ %.p.i, %206 ]
  %215 = load i8* %214, align 1, !tbaa !86
  %216 = icmp eq i8 %215, 37
  %217 = getelementptr inbounds i8* %.012.i, i64 2
  %218 = load i8* %217, align 1, !tbaa !86
  br i1 %216, label %219, label %223

; <label>:219                                     ; preds = %.lr.ph.i
  %220 = zext i8 %218 to i32
  %221 = tail call fastcc i32 @match_class(i32 %208, i32 %220) #3
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %.backedge.i, label %matchbracketclass.exit

; <label>:223                                     ; preds = %.lr.ph.i
  %224 = icmp eq i8 %218, 45
  br i1 %224, label %225, label %233

; <label>:225                                     ; preds = %223
  %226 = getelementptr inbounds i8* %.012.i, i64 3
  %227 = icmp ult i8* %226, %173
  br i1 %227, label %228, label %233

; <label>:228                                     ; preds = %225
  %229 = icmp ugt i8 %215, %207
  br i1 %229, label %.backedge.i, label %230

; <label>:230                                     ; preds = %228
  %231 = load i8* %226, align 1, !tbaa !86
  %232 = icmp ult i8 %231, %207
  br i1 %232, label %.backedge.i, label %matchbracketclass.exit

; <label>:233                                     ; preds = %225, %223
  %234 = icmp eq i8 %215, %207
  br i1 %234, label %matchbracketclass.exit, label %.backedge.i

.backedge.i:                                      ; preds = %233, %230, %228, %219
  %.01.be.i = phi i8* [ %217, %219 ], [ %226, %230 ], [ %226, %228 ], [ %214, %233 ]
  %235 = getelementptr inbounds i8* %.01.be.i, i64 1
  %236 = icmp ult i8* %235, %173
  br i1 %236, label %.lr.ph.i, label %matchbracketclass.exit

matchbracketclass.exit:                           ; preds = %.backedge.i, %233, %230, %219, %206
  %.0.i6 = phi i32 [ %211, %206 ], [ %..i5, %219 ], [ %..i5, %230 ], [ %..i5, %233 ], [ %211, %.backedge.i ]
  %237 = icmp eq i32 %.0.i6, 0
  br i1 %237, label %start_capture.exit25, label %.backedge

; <label>:238                                     ; preds = %92, %92, %92, %92, %92, %92, %92, %92, %92, %92
  %239 = zext i8 %94 to i32
  %240 = add nsw i32 %239, -49
  %241 = icmp slt i32 %240, 0
  br i1 %241, label %250, label %242

; <label>:242                                     ; preds = %238
  %243 = load i32* %15, align 4, !tbaa !332
  %244 = icmp slt i32 %240, %243
  br i1 %244, label %245, label %250

; <label>:245                                     ; preds = %242
  %246 = sext i32 %240 to i64
  %247 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %246, i32 1
  %248 = load i64* %247, align 8, !tbaa !333
  %249 = icmp eq i64 %248, -1
  br i1 %249, label %250, label %check_capture.exit.i

; <label>:250                                     ; preds = %245, %242, %238
  %251 = load %struct.lua_State** %13, align 8, !tbaa !326
  %252 = add nsw i32 %239, -48
  %253 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %251, i8* getelementptr inbounds ([27 x i8]* @.str22672, i64 0, i64 0), i32 %252) #3
  %.phi.trans.insert.i = sext i32 %253 to i64
  %.phi.trans.insert1.i = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %.phi.trans.insert.i, i32 1
  %.pre.i = load i64* %.phi.trans.insert1.i, align 8, !tbaa !333
  br label %check_capture.exit.i

check_capture.exit.i:                             ; preds = %250, %245
  %254 = phi i64 [ %.pre.i, %250 ], [ %248, %245 ]
  %.0.i.i = phi i32 [ %253, %250 ], [ %240, %245 ]
  %255 = load i8** %12, align 8, !tbaa !330
  %256 = ptrtoint i8* %255 to i64
  %257 = ptrtoint i8* %.0.ph120 to i64
  %258 = sub i64 %256, %257
  %259 = icmp ult i64 %258, %254
  br i1 %259, label %start_capture.exit25, label %260

; <label>:260                                     ; preds = %check_capture.exit.i
  %261 = sext i32 %.0.i.i to i64
  %262 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %261, i32 0
  %263 = load i8** %262, align 8, !tbaa !335
  %264 = tail call i32 @memcmp(i8* %263, i8* %.0.ph120, i64 %254) #3
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %match_capture.exit, label %start_capture.exit25

match_capture.exit:                               ; preds = %260
  %266 = getelementptr inbounds i8* %.0.ph120, i64 %254
  %267 = icmp eq i8* %266, null
  br i1 %267, label %start_capture.exit25, label %268

; <label>:268                                     ; preds = %match_capture.exit
  %269 = getelementptr inbounds i8* %.02105, i64 2
  br label %.outer.backedge

; <label>:270                                     ; preds = %19
  %.pre173 = getelementptr inbounds i8* %.02105, i64 1
  %cond = icmp eq i8 %21, 91
  br i1 %cond, label %277, label %classend.exit

.thread177:                                       ; preds = %92
  %271 = icmp eq i8* %93, %20
  br i1 %271, label %272, label %275

; <label>:272                                     ; preds = %.thread177
  %273 = load %struct.lua_State** %13, align 8, !tbaa !326
  %274 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %273, i8* getelementptr inbounds ([35 x i8]* @.str23673, i64 0, i64 0)) #3
  br label %275

; <label>:275                                     ; preds = %272, %.thread177
  %276 = getelementptr inbounds i8* %.02105, i64 2
  br label %classend.exit

; <label>:277                                     ; preds = %270
  %278 = load i8* %.pre173, align 1, !tbaa !86
  %279 = icmp eq i8 %278, 94
  %280 = getelementptr inbounds i8* %.02105, i64 2
  %..i = select i1 %279, i8* %280, i8* %.pre173
  br label %281

; <label>:281                                     ; preds = %._crit_edge, %277
  %282 = phi i8* [ %.pre170, %._crit_edge ], [ %20, %277 ]
  %.0.i3 = phi i8* [ %.1.i, %._crit_edge ], [ %..i, %277 ]
  %283 = icmp eq i8* %.0.i3, %282
  br i1 %283, label %284, label %287

; <label>:284                                     ; preds = %281
  %285 = load %struct.lua_State** %13, align 8, !tbaa !326
  %286 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %285, i8* getelementptr inbounds ([32 x i8]* @.str24674, i64 0, i64 0)) #3
  br label %287

; <label>:287                                     ; preds = %284, %281
  %288 = getelementptr inbounds i8* %.0.i3, i64 1
  %289 = load i8* %.0.i3, align 1, !tbaa !86
  %290 = icmp eq i8 %289, 37
  br i1 %290, label %291, label %295

; <label>:291                                     ; preds = %287
  %292 = load i8** %9, align 8, !tbaa !331
  %293 = icmp ult i8* %288, %292
  %294 = getelementptr inbounds i8* %.0.i3, i64 2
  %.2.i = select i1 %293, i8* %294, i8* %288
  br label %295

; <label>:295                                     ; preds = %291, %287
  %.1.i = phi i8* [ %288, %287 ], [ %.2.i, %291 ]
  %296 = load i8* %.1.i, align 1, !tbaa !86
  %297 = icmp eq i8 %296, 93
  br i1 %297, label %298, label %._crit_edge

._crit_edge:                                      ; preds = %295
  %.pre170 = load i8** %9, align 8, !tbaa !331
  br label %281

; <label>:298                                     ; preds = %295
  %299 = getelementptr inbounds i8* %.1.i, i64 1
  br label %classend.exit

classend.exit:                                    ; preds = %298, %275, %270, %85
  %.pre-phi176 = phi i8* [ %.pre173, %298 ], [ %93, %275 ], [ %.pre173, %270 ], [ %86, %85 ]
  %.01.i = phi i8* [ %299, %298 ], [ %276, %275 ], [ %.pre173, %270 ], [ %86, %85 ]
  %300 = load i8** %12, align 8, !tbaa !330
  %301 = icmp ugt i8* %300, %.0.ph120
  br i1 %301, label %303, label %singlematch.exit.thread

singlematch.exit.thread:                          ; preds = %classend.exit
  %302 = load i8* %.01.i, align 1, !tbaa !86
  br label %348

; <label>:303                                     ; preds = %classend.exit
  %304 = load i8* %.0.ph120, align 1, !tbaa !86
  %305 = zext i8 %304 to i32
  %306 = load i8* %.02105, align 1, !tbaa !86
  %307 = sext i8 %306 to i32
  switch i32 %307, label %343 [
    i32 46, label %singlematch.exit.thread56
    i32 37, label %309
    i32 91, label %313
  ]

singlematch.exit.thread56:                        ; preds = %303
  %308 = load i8* %.01.i, align 1, !tbaa !86
  br label %354

; <label>:309                                     ; preds = %303
  %310 = load i8* %.pre-phi176, align 1, !tbaa !86
  %311 = zext i8 %310 to i32
  %312 = tail call fastcc i32 @match_class(i32 %305, i32 %311) #3
  br label %singlematch.exit

; <label>:313                                     ; preds = %303
  %314 = getelementptr inbounds i8* %.01.i, i64 -1
  %315 = load i8* %.pre-phi176, align 1, !tbaa !86
  %316 = icmp eq i8 %315, 94
  %.p.i32 = select i1 %316, i8* %.pre-phi176, i8* %.02105
  %317 = zext i1 %316 to i32
  %..i33 = xor i32 %317, 1
  %318 = getelementptr inbounds i8* %.p.i32, i64 1
  %319 = icmp ult i8* %318, %314
  br i1 %319, label %.lr.ph.i35, label %singlematch.exit

.lr.ph.i35:                                       ; preds = %.backedge.i37, %313
  %320 = phi i8* [ %341, %.backedge.i37 ], [ %318, %313 ]
  %.012.i34 = phi i8* [ %.01.be.i36, %.backedge.i37 ], [ %.p.i32, %313 ]
  %321 = load i8* %320, align 1, !tbaa !86
  %322 = icmp eq i8 %321, 37
  %323 = getelementptr inbounds i8* %.012.i34, i64 2
  %324 = load i8* %323, align 1, !tbaa !86
  br i1 %322, label %325, label %329

; <label>:325                                     ; preds = %.lr.ph.i35
  %326 = zext i8 %324 to i32
  %327 = tail call fastcc i32 @match_class(i32 %305, i32 %326) #3
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %.backedge.i37, label %singlematch.exit

; <label>:329                                     ; preds = %.lr.ph.i35
  %330 = icmp eq i8 %324, 45
  br i1 %330, label %331, label %339

; <label>:331                                     ; preds = %329
  %332 = getelementptr inbounds i8* %.012.i34, i64 3
  %333 = icmp ult i8* %332, %314
  br i1 %333, label %334, label %339

; <label>:334                                     ; preds = %331
  %335 = icmp ugt i8 %321, %304
  br i1 %335, label %.backedge.i37, label %336

; <label>:336                                     ; preds = %334
  %337 = load i8* %332, align 1, !tbaa !86
  %338 = icmp ult i8 %337, %304
  br i1 %338, label %.backedge.i37, label %singlematch.exit

; <label>:339                                     ; preds = %331, %329
  %340 = icmp eq i8 %321, %304
  br i1 %340, label %singlematch.exit, label %.backedge.i37

.backedge.i37:                                    ; preds = %339, %336, %334, %325
  %.01.be.i36 = phi i8* [ %323, %325 ], [ %332, %336 ], [ %332, %334 ], [ %320, %339 ]
  %341 = getelementptr inbounds i8* %.01.be.i36, i64 1
  %342 = icmp ult i8* %341, %314
  br i1 %342, label %.lr.ph.i35, label %singlematch.exit

; <label>:343                                     ; preds = %303
  %344 = icmp eq i8 %306, %304
  %345 = zext i1 %344 to i32
  br label %singlematch.exit

singlematch.exit:                                 ; preds = %343, %.backedge.i37, %339, %336, %325, %313, %309
  %.0.i = phi i32 [ %345, %343 ], [ %312, %309 ], [ %317, %313 ], [ %317, %.backedge.i37 ], [ %..i33, %339 ], [ %..i33, %336 ], [ %..i33, %325 ]
  %346 = icmp eq i32 %.0.i, 0
  %347 = load i8* %.01.i, align 1, !tbaa !86
  br i1 %346, label %348, label %354

; <label>:348                                     ; preds = %singlematch.exit, %singlematch.exit.thread
  %349 = phi i8 [ %302, %singlematch.exit.thread ], [ %347, %singlematch.exit ]
  switch i8 %349, label %start_capture.exit25 [
    i8 42, label %350
    i8 63, label %350
    i8 45, label %350
  ]

; <label>:350                                     ; preds = %348, %348, %348
  %351 = getelementptr inbounds i8* %.01.i, i64 1
  br label %.backedge

.backedge:                                        ; preds = %361, %350, %matchbracketclass.exit
  %.02.be = phi i8* [ %351, %350 ], [ %.01.i19, %matchbracketclass.exit ], [ %362, %361 ]
  %352 = load i8** %9, align 8, !tbaa !331
  %353 = icmp eq i8* %.02.be, %352
  br i1 %353, label %start_capture.exit25, label %19

; <label>:354                                     ; preds = %singlematch.exit, %singlematch.exit.thread56
  %355 = phi i8 [ %308, %singlematch.exit.thread56 ], [ %347, %singlematch.exit ]
  %356 = sext i8 %355 to i32
  switch i32 %356, label %.outer.backedge [
    i32 63, label %361
    i32 43, label %.loopexit185
    i32 42, label %.loopexit
    i32 45, label %.preheader
  ]

.preheader:                                       ; preds = %354
  %357 = getelementptr inbounds i8* %.01.i, i64 1
  %358 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %.0.ph120, i8* %357) #3
  %359 = icmp eq i8* %358, null
  br i1 %359, label %.lr.ph67, label %start_capture.exit25

.lr.ph67:                                         ; preds = %.preheader
  %360 = getelementptr inbounds i8* %.01.i, i64 -1
  br label %424

; <label>:361                                     ; preds = %354
  %362 = getelementptr inbounds i8* %.01.i, i64 1
  %363 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %17, i8* %362)
  %364 = icmp eq i8* %363, null
  br i1 %364, label %.backedge, label %start_capture.exit25

.loopexit185:                                     ; preds = %354
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit185, %354
  %.1 = phi i8* [ %17, %.loopexit185 ], [ %.0.ph120, %354 ]
  %365 = load i8** %12, align 8, !tbaa !330
  %366 = icmp ugt i8* %365, %.1
  br i1 %366, label %.lr.ph62, label %.lr.ph

.lr.ph62:                                         ; preds = %.loopexit
  %367 = getelementptr inbounds i8* %.01.i, i64 -1
  br label %370

singlematch.exit.i.thread.preheader:              ; preds = %singlematch.exit.i.thread57, %singlematch.exit.i
  %i.0.i.lcssa = phi i64 [ %i.0.i60, %singlematch.exit.i ], [ %415, %singlematch.exit.i.thread57 ]
  %368 = icmp sgt i64 %i.0.i.lcssa, -1
  br i1 %368, label %.lr.ph, label %start_capture.exit25

.lr.ph:                                           ; preds = %singlematch.exit.i.thread.preheader, %.loopexit
  %i.0.i.lcssa179 = phi i64 [ %i.0.i.lcssa, %singlematch.exit.i.thread.preheader ], [ 0, %.loopexit ]
  %369 = getelementptr inbounds i8* %.01.i, i64 1
  br label %420

; <label>:370                                     ; preds = %singlematch.exit.i.thread57, %.lr.ph62
  %371 = phi i8* [ %365, %.lr.ph62 ], [ %414, %singlematch.exit.i.thread57 ]
  %372 = phi i8* [ %.1, %.lr.ph62 ], [ %416, %singlematch.exit.i.thread57 ]
  %i.0.i60 = phi i64 [ 0, %.lr.ph62 ], [ %415, %singlematch.exit.i.thread57 ]
  %373 = load i8* %372, align 1, !tbaa !86
  %374 = zext i8 %373 to i32
  %375 = load i8* %.02105, align 1, !tbaa !86
  %376 = sext i8 %375 to i32
  switch i32 %376, label %410 [
    i32 46, label %singlematch.exit.i.thread57
    i32 37, label %377
    i32 91, label %381
  ]

; <label>:377                                     ; preds = %370
  %378 = load i8* %.pre-phi176, align 1, !tbaa !86
  %379 = zext i8 %378 to i32
  %380 = tail call fastcc i32 @match_class(i32 %374, i32 %379) #3
  br label %singlematch.exit.i

; <label>:381                                     ; preds = %370
  %382 = load i8* %.pre-phi176, align 1, !tbaa !86
  %383 = icmp eq i8 %382, 94
  %.p.i40 = select i1 %383, i8* %.pre-phi176, i8* %.02105
  %384 = zext i1 %383 to i32
  %..i41 = xor i32 %384, 1
  %385 = getelementptr inbounds i8* %.p.i40, i64 1
  %386 = icmp ult i8* %385, %367
  br i1 %386, label %.lr.ph.i43, label %singlematch.exit.i

.lr.ph.i43:                                       ; preds = %.backedge.i45, %381
  %387 = phi i8* [ %408, %.backedge.i45 ], [ %385, %381 ]
  %.012.i42 = phi i8* [ %.01.be.i44, %.backedge.i45 ], [ %.p.i40, %381 ]
  %388 = load i8* %387, align 1, !tbaa !86
  %389 = icmp eq i8 %388, 37
  %390 = getelementptr inbounds i8* %.012.i42, i64 2
  %391 = load i8* %390, align 1, !tbaa !86
  br i1 %389, label %392, label %396

; <label>:392                                     ; preds = %.lr.ph.i43
  %393 = zext i8 %391 to i32
  %394 = tail call fastcc i32 @match_class(i32 %374, i32 %393) #3
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %.backedge.i45, label %singlematch.exit.i

; <label>:396                                     ; preds = %.lr.ph.i43
  %397 = icmp eq i8 %391, 45
  br i1 %397, label %398, label %406

; <label>:398                                     ; preds = %396
  %399 = getelementptr inbounds i8* %.012.i42, i64 3
  %400 = icmp ult i8* %399, %367
  br i1 %400, label %401, label %406

; <label>:401                                     ; preds = %398
  %402 = icmp ugt i8 %388, %373
  br i1 %402, label %.backedge.i45, label %403

; <label>:403                                     ; preds = %401
  %404 = load i8* %399, align 1, !tbaa !86
  %405 = icmp ult i8 %404, %373
  br i1 %405, label %.backedge.i45, label %singlematch.exit.i

; <label>:406                                     ; preds = %398, %396
  %407 = icmp eq i8 %388, %373
  br i1 %407, label %singlematch.exit.i, label %.backedge.i45

.backedge.i45:                                    ; preds = %406, %403, %401, %392
  %.01.be.i44 = phi i8* [ %390, %392 ], [ %399, %403 ], [ %399, %401 ], [ %387, %406 ]
  %408 = getelementptr inbounds i8* %.01.be.i44, i64 1
  %409 = icmp ult i8* %408, %367
  br i1 %409, label %.lr.ph.i43, label %singlematch.exit.i

; <label>:410                                     ; preds = %370
  %411 = icmp eq i8 %375, %373
  %412 = zext i1 %411 to i32
  br label %singlematch.exit.i

singlematch.exit.i:                               ; preds = %410, %.backedge.i45, %406, %403, %392, %381, %377
  %.0.i.i26 = phi i32 [ %412, %410 ], [ %380, %377 ], [ %384, %381 ], [ %384, %.backedge.i45 ], [ %..i41, %406 ], [ %..i41, %403 ], [ %..i41, %392 ]
  %413 = icmp eq i32 %.0.i.i26, 0
  br i1 %413, label %singlematch.exit.i.thread.preheader, label %singlematch.exit.i.singlematch.exit.i.thread57_crit_edge

singlematch.exit.i.singlematch.exit.i.thread57_crit_edge: ; preds = %singlematch.exit.i
  %.pre = load i8** %12, align 8, !tbaa !330
  br label %singlematch.exit.i.thread57

singlematch.exit.i.thread57:                      ; preds = %singlematch.exit.i.singlematch.exit.i.thread57_crit_edge, %370
  %414 = phi i8* [ %.pre, %singlematch.exit.i.singlematch.exit.i.thread57_crit_edge ], [ %371, %370 ]
  %415 = add nsw i64 %i.0.i60, 1
  %416 = getelementptr inbounds i8* %.1, i64 %415
  %417 = icmp ugt i8* %414, %416
  br i1 %417, label %370, label %singlematch.exit.i.thread.preheader

singlematch.exit.i.thread:                        ; preds = %420
  %418 = add nsw i64 %i.1.i59, -1
  %419 = icmp sgt i64 %i.1.i59, 0
  br i1 %419, label %420, label %start_capture.exit25

; <label>:420                                     ; preds = %singlematch.exit.i.thread, %.lr.ph
  %i.1.i59 = phi i64 [ %i.0.i.lcssa179, %.lr.ph ], [ %418, %singlematch.exit.i.thread ]
  %421 = getelementptr inbounds i8* %.1, i64 %i.1.i59
  %422 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %421, i8* %369) #3
  %423 = icmp eq i8* %422, null
  br i1 %423, label %singlematch.exit.i.thread, label %start_capture.exit25

; <label>:424                                     ; preds = %singlematch.exit.i30.thread58, %.lr.ph67
  %.01.i2866 = phi i8* [ %.0.ph120, %.lr.ph67 ], [ %469, %singlematch.exit.i30.thread58 ]
  %425 = load i8** %12, align 8, !tbaa !330
  %426 = icmp ugt i8* %425, %.01.i2866
  br i1 %426, label %427, label %start_capture.exit25

; <label>:427                                     ; preds = %424
  %428 = load i8* %.01.i2866, align 1, !tbaa !86
  %429 = zext i8 %428 to i32
  %430 = load i8* %.02105, align 1, !tbaa !86
  %431 = sext i8 %430 to i32
  switch i32 %431, label %465 [
    i32 46, label %singlematch.exit.i30.thread58
    i32 37, label %432
    i32 91, label %436
  ]

; <label>:432                                     ; preds = %427
  %433 = load i8* %.pre-phi176, align 1, !tbaa !86
  %434 = zext i8 %433 to i32
  %435 = tail call fastcc i32 @match_class(i32 %429, i32 %434) #3
  br label %singlematch.exit.i30

; <label>:436                                     ; preds = %427
  %437 = load i8* %.pre-phi176, align 1, !tbaa !86
  %438 = icmp eq i8 %437, 94
  %.p.i48 = select i1 %438, i8* %.pre-phi176, i8* %.02105
  %439 = zext i1 %438 to i32
  %..i49 = xor i32 %439, 1
  %440 = getelementptr inbounds i8* %.p.i48, i64 1
  %441 = icmp ult i8* %440, %360
  br i1 %441, label %.lr.ph.i51, label %singlematch.exit.i30

.lr.ph.i51:                                       ; preds = %.backedge.i53, %436
  %442 = phi i8* [ %463, %.backedge.i53 ], [ %440, %436 ]
  %.012.i50 = phi i8* [ %.01.be.i52, %.backedge.i53 ], [ %.p.i48, %436 ]
  %443 = load i8* %442, align 1, !tbaa !86
  %444 = icmp eq i8 %443, 37
  %445 = getelementptr inbounds i8* %.012.i50, i64 2
  %446 = load i8* %445, align 1, !tbaa !86
  br i1 %444, label %447, label %451

; <label>:447                                     ; preds = %.lr.ph.i51
  %448 = zext i8 %446 to i32
  %449 = tail call fastcc i32 @match_class(i32 %429, i32 %448) #3
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %.backedge.i53, label %singlematch.exit.i30

; <label>:451                                     ; preds = %.lr.ph.i51
  %452 = icmp eq i8 %446, 45
  br i1 %452, label %453, label %461

; <label>:453                                     ; preds = %451
  %454 = getelementptr inbounds i8* %.012.i50, i64 3
  %455 = icmp ult i8* %454, %360
  br i1 %455, label %456, label %461

; <label>:456                                     ; preds = %453
  %457 = icmp ugt i8 %443, %428
  br i1 %457, label %.backedge.i53, label %458

; <label>:458                                     ; preds = %456
  %459 = load i8* %454, align 1, !tbaa !86
  %460 = icmp ult i8 %459, %428
  br i1 %460, label %.backedge.i53, label %singlematch.exit.i30

; <label>:461                                     ; preds = %453, %451
  %462 = icmp eq i8 %443, %428
  br i1 %462, label %singlematch.exit.i30, label %.backedge.i53

.backedge.i53:                                    ; preds = %461, %458, %456, %447
  %.01.be.i52 = phi i8* [ %445, %447 ], [ %454, %458 ], [ %454, %456 ], [ %442, %461 ]
  %463 = getelementptr inbounds i8* %.01.be.i52, i64 1
  %464 = icmp ult i8* %463, %360
  br i1 %464, label %.lr.ph.i51, label %singlematch.exit.i30

; <label>:465                                     ; preds = %427
  %466 = icmp eq i8 %430, %428
  %467 = zext i1 %466 to i32
  br label %singlematch.exit.i30

singlematch.exit.i30:                             ; preds = %465, %.backedge.i53, %461, %458, %447, %436, %432
  %.0.i.i29 = phi i32 [ %467, %465 ], [ %435, %432 ], [ %439, %436 ], [ %439, %.backedge.i53 ], [ %..i49, %461 ], [ %..i49, %458 ], [ %..i49, %447 ]
  %468 = icmp eq i32 %.0.i.i29, 0
  br i1 %468, label %start_capture.exit25, label %singlematch.exit.i30.thread58

singlematch.exit.i30.thread58:                    ; preds = %singlematch.exit.i30, %427
  %469 = getelementptr inbounds i8* %.01.i2866, i64 1
  %470 = tail call fastcc i8* @match(%struct.MatchState* %ms, i8* %469, i8* %357) #3
  %471 = icmp eq i8* %470, null
  br i1 %471, label %424, label %start_capture.exit25

.outer.backedge:                                  ; preds = %354, %268, %matchbalance.exit
  %.02.ph.be = phi i8* [ %269, %268 ], [ %124, %matchbalance.exit ], [ %.01.i, %354 ]
  %.0.ph.be = phi i8* [ %266, %268 ], [ %123, %matchbalance.exit ], [ %17, %354 ]
  %472 = load i8** %9, align 8, !tbaa !331
  %473 = icmp eq i8* %.02.ph.be, %472
  br i1 %473, label %start_capture.exit25, label %.lr.ph106

start_capture.exit25:                             ; preds = %.outer.backedge, %singlematch.exit.i30.thread58, %singlematch.exit.i30, %424, %420, %singlematch.exit.i.thread, %singlematch.exit.i.thread.preheader, %361, %.preheader, %.backedge, %348, %match_capture.exit, %260, %check_capture.exit.i, %matchbracketclass.exit, %matchbracketclass.exit14, %.backedge.i22, %107, %103, %88, %84, %capture_to_close.exit.i, %57, %50, %41, %34, %.preheader72
  %.2 = phi i8* [ %91, %88 ], [ %39, %34 ], [ null, %41 ], [ %55, %50 ], [ null, %57 ], [ %82, %capture_to_close.exit.i ], [ null, %84 ], [ null, %singlematch.exit.i.thread.preheader ], [ %358, %.preheader ], [ %s, %.preheader72 ], [ %422, %420 ], [ null, %singlematch.exit.i.thread ], [ null, %424 ], [ null, %singlematch.exit.i30 ], [ %470, %singlematch.exit.i30.thread58 ], [ %.0.ph120, %.backedge ], [ %363, %361 ], [ null, %348 ], [ null, %matchbracketclass.exit14 ], [ null, %matchbracketclass.exit ], [ null, %.backedge.i22 ], [ %.0.ph.be, %.outer.backedge ], [ null, %260 ], [ null, %check_capture.exit.i ], [ null, %107 ], [ null, %103 ], [ null, %match_capture.exit ]
  %474 = load i32* %1, align 4, !tbaa !328
  %475 = add nsw i32 %474, 1
  store i32 %475, i32* %1, align 4, !tbaa !328
  ret i8* %.2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @push_onecapture(%struct.MatchState* nocapture readonly %ms, i32 %i, i8* %s, i8* %e) #0 {
  %1 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 5
  %2 = load i32* %1, align 4, !tbaa !332
  %3 = icmp sgt i32 %2, %i
  br i1 %3, label %15, label %4

; <label>:4                                       ; preds = %0
  %5 = icmp eq i32 %i, 0
  %6 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  %7 = load %struct.lua_State** %6, align 8, !tbaa !326
  br i1 %5, label %8, label %13

; <label>:8                                       ; preds = %4
  %9 = ptrtoint i8* %e to i64
  %10 = ptrtoint i8* %s to i64
  %11 = sub i64 %9, %10
  %12 = tail call i8* @lua_pushlstring(%struct.lua_State* %7, i8* %s, i64 %11) #3
  br label %43

; <label>:13                                      ; preds = %4
  %14 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %7, i8* getelementptr inbounds ([22 x i8]* @.str18668, i64 0, i64 0)) #3
  br label %43

; <label>:15                                      ; preds = %0
  %16 = sext i32 %i to i64
  %17 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %16, i32 1
  %18 = load i64* %17, align 8, !tbaa !333
  %19 = icmp eq i64 %18, -1
  br i1 %19, label %.thread, label %26

.thread:                                          ; preds = %15
  %20 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  %21 = load %struct.lua_State** %20, align 8, !tbaa !326
  %22 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %21, i8* getelementptr inbounds ([19 x i8]* @.str19669, i64 0, i64 0)) #3
  %23 = load %struct.lua_State** %20, align 8, !tbaa !326
  %24 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %16, i32 0
  %25 = load i8** %24, align 8, !tbaa !335
  br label %39

; <label>:26                                      ; preds = %15
  %27 = icmp eq i64 %18, -2
  %28 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 4
  %29 = load %struct.lua_State** %28, align 8, !tbaa !326
  %30 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 6, i64 %16, i32 0
  %31 = load i8** %30, align 8, !tbaa !335
  br i1 %27, label %32, label %39

; <label>:32                                      ; preds = %26
  %33 = getelementptr inbounds %struct.MatchState* %ms, i64 0, i32 1
  %34 = load i8** %33, align 8, !tbaa !329
  %35 = ptrtoint i8* %31 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = add i64 %35, 1
  %38 = sub i64 %37, %36
  tail call void @lua_pushinteger(%struct.lua_State* %29, i64 %38) #3
  br label %43

; <label>:39                                      ; preds = %26, %.thread
  %40 = phi i8* [ %25, %.thread ], [ %31, %26 ]
  %41 = phi %struct.lua_State* [ %23, %.thread ], [ %29, %26 ]
  %42 = tail call i8* @lua_pushlstring(%struct.lua_State* %41, i8* %40, i64 %18) #3
  br label %43

; <label>:43                                      ; preds = %39, %32, %13, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @match_class(i32 %c, i32 %cl) #0 {
  %1 = tail call i32 @__tolower(i32 %cl) #3
  switch i32 %1, label %86 [
    i32 97, label %2
    i32 99, label %11
    i32 100, label %20
    i32 103, label %22
    i32 108, label %31
    i32 112, label %40
    i32 115, label %49
    i32 117, label %58
    i32 119, label %67
    i32 120, label %76
    i32 122, label %83
  ]

; <label>:2                                       ; preds = %0
  %isascii.i.i = icmp ult i32 %c, 128
  br i1 %isascii.i.i, label %3, label %8

; <label>:3                                       ; preds = %2
  %4 = sext i32 %c to i64
  %5 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %4
  %6 = load i32* %5, align 4, !tbaa !1
  %7 = and i32 %6, 256
  br label %isalpha.exit

; <label>:8                                       ; preds = %2
  %9 = tail call i32 @__maskrune(i32 %c, i64 256) #3
  br label %isalpha.exit

isalpha.exit:                                     ; preds = %8, %3
  %.sink.i.in.i = phi i32 [ %7, %3 ], [ %9, %8 ]
  %.sink.i.i = icmp ne i32 %.sink.i.in.i, 0
  %10 = zext i1 %.sink.i.i to i32
  br label %isxdigit.exit

; <label>:11                                      ; preds = %0
  %isascii.i.i1 = icmp ult i32 %c, 128
  br i1 %isascii.i.i1, label %12, label %17

; <label>:12                                      ; preds = %11
  %13 = sext i32 %c to i64
  %14 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %13
  %15 = load i32* %14, align 4, !tbaa !1
  %16 = and i32 %15, 512
  br label %iscntrl.exit

; <label>:17                                      ; preds = %11
  %18 = tail call i32 @__maskrune(i32 %c, i64 512) #3
  br label %iscntrl.exit

iscntrl.exit:                                     ; preds = %17, %12
  %.sink.i.in.i2 = phi i32 [ %16, %12 ], [ %18, %17 ]
  %.sink.i.i3 = icmp ne i32 %.sink.i.in.i2, 0
  %19 = zext i1 %.sink.i.i3 to i32
  br label %isxdigit.exit

; <label>:20                                      ; preds = %0
  %isdigittmp = add i32 %c, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  %21 = zext i1 %isdigit to i32
  br label %isxdigit.exit

; <label>:22                                      ; preds = %0
  %isascii.i.i4 = icmp ult i32 %c, 128
  br i1 %isascii.i.i4, label %23, label %28

; <label>:23                                      ; preds = %22
  %24 = sext i32 %c to i64
  %25 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %24
  %26 = load i32* %25, align 4, !tbaa !1
  %27 = and i32 %26, 2048
  br label %isgraph.exit

; <label>:28                                      ; preds = %22
  %29 = tail call i32 @__maskrune(i32 %c, i64 2048) #3
  br label %isgraph.exit

isgraph.exit:                                     ; preds = %28, %23
  %.sink.i.in.i5 = phi i32 [ %27, %23 ], [ %29, %28 ]
  %.sink.i.i6 = icmp ne i32 %.sink.i.in.i5, 0
  %30 = zext i1 %.sink.i.i6 to i32
  br label %isxdigit.exit

; <label>:31                                      ; preds = %0
  %isascii.i.i7 = icmp ult i32 %c, 128
  br i1 %isascii.i.i7, label %32, label %37

; <label>:32                                      ; preds = %31
  %33 = sext i32 %c to i64
  %34 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %33
  %35 = load i32* %34, align 4, !tbaa !1
  %36 = and i32 %35, 4096
  br label %islower.exit

; <label>:37                                      ; preds = %31
  %38 = tail call i32 @__maskrune(i32 %c, i64 4096) #3
  br label %islower.exit

islower.exit:                                     ; preds = %37, %32
  %.sink.i.in.i8 = phi i32 [ %36, %32 ], [ %38, %37 ]
  %.sink.i.i9 = icmp ne i32 %.sink.i.in.i8, 0
  %39 = zext i1 %.sink.i.i9 to i32
  br label %isxdigit.exit

; <label>:40                                      ; preds = %0
  %isascii.i.i10 = icmp ult i32 %c, 128
  br i1 %isascii.i.i10, label %41, label %46

; <label>:41                                      ; preds = %40
  %42 = sext i32 %c to i64
  %43 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %42
  %44 = load i32* %43, align 4, !tbaa !1
  %45 = and i32 %44, 8192
  br label %ispunct.exit

; <label>:46                                      ; preds = %40
  %47 = tail call i32 @__maskrune(i32 %c, i64 8192) #3
  br label %ispunct.exit

ispunct.exit:                                     ; preds = %46, %41
  %.sink.i.in.i11 = phi i32 [ %45, %41 ], [ %47, %46 ]
  %.sink.i.i12 = icmp ne i32 %.sink.i.in.i11, 0
  %48 = zext i1 %.sink.i.i12 to i32
  br label %isxdigit.exit

; <label>:49                                      ; preds = %0
  %isascii.i.i13 = icmp ult i32 %c, 128
  br i1 %isascii.i.i13, label %50, label %55

; <label>:50                                      ; preds = %49
  %51 = sext i32 %c to i64
  %52 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %51
  %53 = load i32* %52, align 4, !tbaa !1
  %54 = and i32 %53, 16384
  br label %isspace.exit

; <label>:55                                      ; preds = %49
  %56 = tail call i32 @__maskrune(i32 %c, i64 16384) #3
  br label %isspace.exit

isspace.exit:                                     ; preds = %55, %50
  %.sink.i.in.i14 = phi i32 [ %54, %50 ], [ %56, %55 ]
  %.sink.i.i15 = icmp ne i32 %.sink.i.in.i14, 0
  %57 = zext i1 %.sink.i.i15 to i32
  br label %isxdigit.exit

; <label>:58                                      ; preds = %0
  %isascii.i.i16 = icmp ult i32 %c, 128
  br i1 %isascii.i.i16, label %59, label %64

; <label>:59                                      ; preds = %58
  %60 = sext i32 %c to i64
  %61 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %60
  %62 = load i32* %61, align 4, !tbaa !1
  %63 = and i32 %62, 32768
  br label %isupper.exit

; <label>:64                                      ; preds = %58
  %65 = tail call i32 @__maskrune(i32 %c, i64 32768) #3
  br label %isupper.exit

isupper.exit:                                     ; preds = %64, %59
  %.sink.i.in.i17 = phi i32 [ %63, %59 ], [ %65, %64 ]
  %.sink.i.i18 = icmp ne i32 %.sink.i.in.i17, 0
  %66 = zext i1 %.sink.i.i18 to i32
  br label %isxdigit.exit

; <label>:67                                      ; preds = %0
  %isascii.i.i19 = icmp ult i32 %c, 128
  br i1 %isascii.i.i19, label %68, label %73

; <label>:68                                      ; preds = %67
  %69 = sext i32 %c to i64
  %70 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %69
  %71 = load i32* %70, align 4, !tbaa !1
  %72 = and i32 %71, 1280
  br label %isalnum.exit

; <label>:73                                      ; preds = %67
  %74 = tail call i32 @__maskrune(i32 %c, i64 1280) #3
  br label %isalnum.exit

isalnum.exit:                                     ; preds = %73, %68
  %.sink.i.in.i20 = phi i32 [ %72, %68 ], [ %74, %73 ]
  %.sink.i.i21 = icmp ne i32 %.sink.i.in.i20, 0
  %75 = zext i1 %.sink.i.i21 to i32
  br label %isxdigit.exit

; <label>:76                                      ; preds = %0
  %77 = icmp ugt i32 %c, 255
  br i1 %77, label %isxdigit.exit, label %78

; <label>:78                                      ; preds = %76
  %79 = sext i32 %c to i64
  %80 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %79
  %81 = load i32* %80, align 4, !tbaa !1
  %82 = lshr i32 %81, 16
  %.lobit.i = and i32 %82, 1
  br label %isxdigit.exit

; <label>:83                                      ; preds = %0
  %84 = icmp eq i32 %c, 0
  %85 = zext i1 %84 to i32
  br label %isxdigit.exit

; <label>:86                                      ; preds = %0
  %87 = icmp eq i32 %cl, %c
  %88 = zext i1 %87 to i32
  ret i32 %88

isxdigit.exit:                                    ; preds = %83, %78, %76, %isalnum.exit, %isupper.exit, %isspace.exit, %ispunct.exit, %islower.exit, %isgraph.exit, %20, %iscntrl.exit, %isalpha.exit
  %res.0 = phi i32 [ %85, %83 ], [ %75, %isalnum.exit ], [ %66, %isupper.exit ], [ %57, %isspace.exit ], [ %48, %ispunct.exit ], [ %39, %islower.exit ], [ %30, %isgraph.exit ], [ %21, %20 ], [ %19, %iscntrl.exit ], [ %10, %isalpha.exit ], [ %.lobit.i, %78 ], [ 0, %76 ]
  %isascii.i.i22 = icmp ult i32 %cl, 128
  br i1 %isascii.i.i22, label %89, label %94

; <label>:89                                      ; preds = %isxdigit.exit
  %90 = sext i32 %cl to i64
  %91 = getelementptr inbounds %struct._RuneLocale* @_DefaultRuneLocale, i64 0, i32 5, i64 %90
  %92 = load i32* %91, align 4, !tbaa !1
  %93 = and i32 %92, 4096
  br label %islower.exit25

; <label>:94                                      ; preds = %isxdigit.exit
  %95 = tail call i32 @__maskrune(i32 %cl, i64 4096) #3
  br label %islower.exit25

islower.exit25:                                   ; preds = %94, %89
  %.sink.i.in.i23 = phi i32 [ %93, %89 ], [ %95, %94 ]
  %.sink.i.i24 = icmp eq i32 %.sink.i.in.i23, 0
  %96 = zext i1 %.sink.i.i24 to i32
  %.res.0 = xor i32 %res.0, %96
  ret i32 %.res.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_table(%struct.lua_State* %L) #0 {
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 7) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([8 x %struct.luaL_Reg]* @tab_funcs, i64 0, i64 0), i32 0) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([7 x i8]* @.str694, i64 0, i64 0)) #3
  tail call void @lua_setglobal(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8]* @.str694, i64 0, i64 0)) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tconcat(%struct.lua_State* %L) #0 {
  %b = alloca %struct.luaL_Buffer, align 8
  %lsep = alloca i64, align 8
  %1 = bitcast %struct.luaL_Buffer* %b to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  %2 = call i8* @luaL_optlstring(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([1 x i8]* @.str7701, i64 0, i64 0), i64* %lsep) #3
  call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %3 = call i64 @luaL_optinteger(%struct.lua_State* %L, i32 3, i64 1) #3
  %4 = trunc i64 %3 to i32
  %5 = call i32 @lua_type(%struct.lua_State* %L, i32 4) #3
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %9

; <label>:7                                       ; preds = %0
  %8 = call i32 @luaL_len(%struct.lua_State* %L, i32 1) #3
  br label %12

; <label>:9                                       ; preds = %0
  %10 = call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 4) #3
  %11 = trunc i64 %10 to i32
  br label %12

; <label>:12                                      ; preds = %9, %7
  %13 = phi i32 [ %8, %7 ], [ %11, %9 ]
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %b) #3
  %14 = icmp slt i32 %4, %13
  br i1 %14, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %12
  %i.01 = phi i32 [ %16, %.lr.ph ], [ %4, %12 ]
  call fastcc void @addfield(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i32 %i.01)
  %15 = load i64* %lsep, align 8, !tbaa !32
  call void @luaL_addlstring(%struct.luaL_Buffer* %b, i8* %2, i64 %15) #3
  %16 = add nsw i32 %i.01, 1
  %exitcond = icmp eq i32 %16, %13
  br i1 %exitcond, label %._crit_edge.thread, label %.lr.ph

._crit_edge:                                      ; preds = %12
  %17 = icmp eq i32 %4, %13
  br i1 %17, label %._crit_edge.thread, label %18

._crit_edge.thread:                               ; preds = %._crit_edge, %.lr.ph
  call fastcc void @addfield(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i32 %13)
  br label %18

; <label>:18                                      ; preds = %._crit_edge.thread, %._crit_edge
  call void @luaL_pushresult(%struct.luaL_Buffer* %b) #3
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @maxn(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  %1 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %.outer, %0
  %max.0.ph3 = phi double [ %7, %.outer ], [ 0.000000e+00, %0 ]
  br label %3

; <label>:3                                       ; preds = %.backedge, %.lr.ph
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %.backedge

; <label>:6                                       ; preds = %3
  %7 = tail call double @lua_tonumberx(%struct.lua_State* %L, i32 -1, i32* null) #3
  %8 = fcmp ogt double %7, %max.0.ph3
  br i1 %8, label %.outer, label %.backedge

.backedge:                                        ; preds = %6, %3
  %9 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %._crit_edge, label %3

.outer:                                           ; preds = %6
  %11 = tail call i32 @lua_next(%struct.lua_State* %L, i32 1) #3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.outer, %.backedge, %0
  %max.0.ph2 = phi double [ 0.000000e+00, %0 ], [ %max.0.ph3, %.backedge ], [ %7, %.outer ]
  tail call void @lua_pushnumber(%struct.lua_State* %L, double %max.0.ph2) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tinsert(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %1 = tail call i32 @luaL_len(%struct.lua_State* %L, i32 1) #3
  %2 = add nsw i32 %1, 1
  %3 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  switch i32 %3, label %14 [
    i32 2, label %.loopexit
    i32 3, label %4
  ]

; <label>:4                                       ; preds = %0
  %5 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 2) #3
  %6 = trunc i64 %5 to i32
  %7 = icmp slt i32 %6, 1
  %8 = icmp sgt i32 %6, %2
  %or.cond = or i1 %7, %8
  br i1 %or.cond, label %9, label %.preheader

; <label>:9                                       ; preds = %4
  %10 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 2, i8* getelementptr inbounds ([23 x i8]* @.str9703, i64 0, i64 0)) #3
  br label %.preheader

.preheader:                                       ; preds = %9, %4
  %11 = icmp slt i32 %1, %6
  br i1 %11, label %.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.preheader
  %i.01 = phi i32 [ %12, %.lr.ph ], [ %2, %.preheader ]
  %12 = add nsw i32 %i.01, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %12) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %i.01) #3
  %13 = icmp sgt i32 %12, %6
  br i1 %13, label %.lr.ph, label %.loopexit

; <label>:14                                      ; preds = %0
  %15 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([38 x i8]* @.str12706, i64 0, i64 0)) #3
  br label %16

.loopexit:                                        ; preds = %.lr.ph, %.preheader, %0
  %pos.0 = phi i32 [ %2, %0 ], [ %6, %.preheader ], [ %6, %.lr.ph ]
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %pos.0) #3
  br label %16

; <label>:16                                      ; preds = %.loopexit, %14
  %.0 = phi i32 [ %15, %14 ], [ 0, %.loopexit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @pack(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 %1, i32 1) #3
  %2 = sext i32 %1 to i64
  tail call void @lua_pushinteger(%struct.lua_State* %L, i64 %2) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([2 x i8]* @.str11705, i64 0, i64 0)) #3
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %.loopexit

; <label>:4                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 1) #3
  tail call void @lua_replace(%struct.lua_State* %L, i32 1) #3
  %5 = icmp sgt i32 %1, 1
  br i1 %5, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.lr.ph, %4
  %i.01 = phi i32 [ %6, %.lr.ph ], [ %1, %4 ]
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %i.01) #3
  %6 = add nsw i32 %i.01, -1
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %.lr.ph, label %.loopexit

.loopexit:                                        ; preds = %.lr.ph, %4, %0
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @unpack(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %1 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 1) #3
  %2 = trunc i64 %1 to i32
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 3) #3
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %7

; <label>:5                                       ; preds = %0
  %6 = tail call i32 @luaL_len(%struct.lua_State* %L, i32 1) #3
  br label %10

; <label>:7                                       ; preds = %0
  %8 = tail call i64 @luaL_checkinteger(%struct.lua_State* %L, i32 3) #3
  %9 = trunc i64 %8 to i32
  br label %10

; <label>:10                                      ; preds = %7, %5
  %11 = phi i32 [ %6, %5 ], [ %9, %7 ]
  %12 = icmp slt i32 %11, %2
  br i1 %12, label %.loopexit, label %13

; <label>:13                                      ; preds = %10
  %14 = sub nsw i32 %11, %2
  %15 = add nsw i32 %14, 1
  %16 = icmp slt i32 %14, 0
  br i1 %16, label %20, label %17

; <label>:17                                      ; preds = %13
  %18 = tail call i32 @lua_checkstack(%struct.lua_State* %L, i32 %15) #3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

; <label>:20                                      ; preds = %17, %13
  %21 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str10704, i64 0, i64 0)) #3
  br label %.loopexit

; <label>:22                                      ; preds = %17
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %2) #3
  %23 = icmp sgt i32 %11, %2
  br i1 %23, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %.lr.ph, %22
  %.in = phi i32 [ %24, %.lr.ph ], [ %2, %22 ]
  %24 = add nsw i32 %.in, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %24) #3
  %exitcond = icmp eq i32 %24, %11
  br i1 %exitcond, label %.loopexit, label %.lr.ph

.loopexit:                                        ; preds = %.lr.ph, %22, %20, %10
  %.0 = phi i32 [ %21, %20 ], [ 0, %10 ], [ %15, %22 ], [ %15, %.lr.ph ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @tremove(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %1 = tail call i32 @luaL_len(%struct.lua_State* %L, i32 1) #3
  %2 = sext i32 %1 to i64
  %3 = tail call i64 @luaL_optinteger(%struct.lua_State* %L, i32 2, i64 %2) #3
  %4 = trunc i64 %3 to i32
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %12, label %6

; <label>:6                                       ; preds = %0
  %7 = icmp slt i32 %4, 1
  %8 = add nsw i32 %1, 1
  %9 = icmp sgt i32 %4, %8
  %or.cond = or i1 %7, %9
  br i1 %or.cond, label %10, label %12

; <label>:10                                      ; preds = %6
  %11 = tail call i32 @luaL_argerror(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([23 x i8]* @.str9703, i64 0, i64 0)) #3
  br label %12

; <label>:12                                      ; preds = %10, %6, %0
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %4) #3
  %13 = icmp slt i32 %4, %1
  br i1 %13, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %12
  %pos.02 = phi i32 [ %14, %.lr.ph ], [ %4, %12 ]
  %14 = add nsw i32 %pos.02, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %14) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %pos.02) #3
  %exitcond = icmp eq i32 %14, %1
  br i1 %exitcond, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %.lr.ph, %12
  %pos.0.lcssa = phi i32 [ %4, %12 ], [ %1, %.lr.ph ]
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %pos.0.lcssa) #3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @sort(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %1 = tail call i32 @luaL_len(%struct.lua_State* %L, i32 1) #3
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 40, i8* getelementptr inbounds ([1 x i8]* @.str7701, i64 0, i64 0)) #3
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  %3 = icmp slt i32 %2, 1
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %0
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 2, i32 6) #3
  br label %5

; <label>:5                                       ; preds = %4, %0
  tail call void @lua_settop(%struct.lua_State* %L, i32 2) #3
  tail call fastcc void @auxsort(%struct.lua_State* %L, i32 1, i32 %1)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @addfield(%struct.lua_State* %L, %struct.luaL_Buffer* %b, i32 %i) #0 {
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %i) #3
  %1 = tail call i32 @lua_isstring(%struct.lua_State* %L, i32 -1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %7

; <label>:3                                       ; preds = %0
  %4 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %5 = tail call i8* @lua_typename(%struct.lua_State* %L, i32 %4) #3
  %6 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([53 x i8]* @.str13707, i64 0, i64 0), i8* %5, i32 %i) #3
  br label %7

; <label>:7                                       ; preds = %3, %0
  tail call void @luaL_addvalue(%struct.luaL_Buffer* %b) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @auxsort(%struct.lua_State* %L, i32 %l, i32 %u) #0 {
  %1 = icmp sgt i32 %u, %l
  br i1 %1, label %.lr.ph11, label %split13

.lr.ph11:                                         ; preds = %47, %0
  %.09 = phi i32 [ %.0.i.0, %47 ], [ %u, %0 ]
  %.018 = phi i32 [ %..01, %47 ], [ %l, %0 ]
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.018) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.09) #3
  %2 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %5, label %4

; <label>:4                                       ; preds = %.lr.ph11
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.018) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.09) #3
  br label %6

; <label>:5                                       ; preds = %.lr.ph11
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %6

; <label>:6                                       ; preds = %5, %4
  %7 = sub nsw i32 %.09, %.018
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %split13, label %9

; <label>:9                                       ; preds = %6
  %10 = add nsw i32 %.09, %.018
  %11 = sdiv i32 %10, 2
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %11) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.018) #3
  %12 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -2, i32 -1)
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

; <label>:14                                      ; preds = %9
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %11) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.018) #3
  br label %20

; <label>:15                                      ; preds = %9
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.09) #3
  %16 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

; <label>:18                                      ; preds = %15
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %11) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.09) #3
  br label %20

; <label>:19                                      ; preds = %15
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %20

; <label>:20                                      ; preds = %19, %18, %14
  %21 = icmp eq i32 %7, 2
  br i1 %21, label %split13, label %22

; <label>:22                                      ; preds = %20
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %11) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  %23 = add nsw i32 %.09, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %23) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %11) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %23) #3
  br label %.outer

.outer:                                           ; preds = %53, %22
  %i.0.ph = phi i32 [ %.018, %22 ], [ %.lcssa4, %53 ]
  %j.0.ph = phi i32 [ %23, %22 ], [ %.lcssa, %53 ]
  %24 = add nsw i32 %i.0.ph, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %24) #3
  %25 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %.preheader, label %.lr.ph5

.preheader:                                       ; preds = %34, %.outer
  %.lcssa4 = phi i32 [ %24, %.outer ], [ %35, %34 ]
  %i.0.lcssa = phi i32 [ %i.0.ph, %.outer ], [ %30, %34 ]
  %27 = add nsw i32 %j.0.ph, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %27) #3
  %28 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -3, i32 -1)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %._crit_edge, label %.lr.ph

.lr.ph5:                                          ; preds = %34, %.outer
  %30 = phi i32 [ %35, %34 ], [ %24, %.outer ]
  %31 = icmp sgt i32 %.09, %30
  br i1 %31, label %34, label %32

; <label>:32                                      ; preds = %.lr.ph5
  %33 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8]* @.str8702, i64 0, i64 0)) #3
  br label %34

; <label>:34                                      ; preds = %32, %.lr.ph5
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %35 = add nsw i32 %30, 1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %35) #3
  %36 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -1, i32 -2)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %.preheader, label %.lr.ph5

.lr.ph:                                           ; preds = %42, %.preheader
  %38 = phi i32 [ %43, %42 ], [ %27, %.preheader ]
  %39 = icmp sgt i32 %38, %.018
  br i1 %39, label %42, label %40

; <label>:40                                      ; preds = %.lr.ph
  %41 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([35 x i8]* @.str8702, i64 0, i64 0)) #3
  br label %42

; <label>:42                                      ; preds = %40, %.lr.ph
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %43 = add nsw i32 %38, -1
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %43) #3
  %44 = tail call fastcc i32 @sort_comp(%struct.lua_State* %L, i32 -3, i32 -1)
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %._crit_edge, label %.lr.ph

._crit_edge:                                      ; preds = %42, %.preheader
  %.lcssa = phi i32 [ %27, %.preheader ], [ %43, %42 ]
  %j.1.lcssa = phi i32 [ %j.0.ph, %.preheader ], [ %38, %42 ]
  %46 = icmp sgt i32 %j.1.lcssa, %.lcssa4
  br i1 %46, label %53, label %47

; <label>:47                                      ; preds = %._crit_edge
  tail call void @lua_settop(%struct.lua_State* %L, i32 -4) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %23) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %.lcssa4) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %23) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.lcssa4) #3
  %48 = sub nsw i32 %.lcssa4, %.018
  %49 = sub nsw i32 %.09, %.lcssa4
  %50 = icmp slt i32 %48, %49
  %51 = add nsw i32 %i.0.lcssa, 2
  %..01 = select i1 %50, i32 %51, i32 %.018
  %.0.i.0 = select i1 %50, i32 %.09, i32 %i.0.lcssa
  %i.0..0 = select i1 %50, i32 %i.0.lcssa, i32 %.09
  %.01. = select i1 %50, i32 %.018, i32 %51
  tail call fastcc void @auxsort(%struct.lua_State* %L, i32 %.01., i32 %i.0..0)
  %52 = icmp sgt i32 %.0.i.0, %..01
  br i1 %52, label %.lr.ph11, label %split13

; <label>:53                                      ; preds = %._crit_edge
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.lcssa4) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 1, i32 %.lcssa) #3
  br label %.outer

split13:                                          ; preds = %47, %20, %6, %0
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @sort_comp(%struct.lua_State* %L, i32 %a, i32 %b) #0 {
  %1 = tail call i32 @lua_type(%struct.lua_State* %L, i32 2) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %7, label %3

; <label>:3                                       ; preds = %0
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 2) #3
  %4 = add nsw i32 %a, -1
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %4) #3
  %5 = add nsw i32 %b, -2
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 %5) #3
  tail call void @lua_callk(%struct.lua_State* %L, i32 2, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  %6 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %9

; <label>:7                                       ; preds = %0
  %8 = tail call i32 @lua_compare(%struct.lua_State* %L, i32 %a, i32 %b, i32 1) #3
  br label %9

; <label>:9                                       ; preds = %7, %3
  %.0 = phi i32 [ %8, %7 ], [ %6, %3 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define i32 @luaopen_package(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([7 x i8]* @.str708, i64 0, i64 0)) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @gctm, i32 0) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([5 x i8]* @.str1709, i64 0, i64 0)) #3
  %2 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 3) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([4 x %struct.luaL_Reg]* @pk_funcs, i64 0, i64 0), i32 0) #3
  tail call void @lua_createtable(%struct.lua_State* %L, i32 4, i32 0) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @searcher_preload, i32 1) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 1) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @searcher_Lua, i32 1) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 2) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @searcher_C, i32 1) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 3) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @searcher_Croot, i32 1) #3
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 4) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* getelementptr inbounds ([8 x i8]* @.str2710, i64 0, i64 0)) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([10 x i8]* @.str3711, i64 0, i64 0)) #3
  tail call fastcc void @setpath(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str4712, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str5713, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str6714, i64 0, i64 0), i8* getelementptr inbounds ([138 x i8]* @.str7715, i64 0, i64 0))
  tail call fastcc void @setpath(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str8716, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str9717, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str10718, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8]* @.str11719, i64 0, i64 0))
  %3 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8]* @.str12720, i64 0, i64 0), i64 10) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8]* @.str13721, i64 0, i64 0)) #3
  %4 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([8 x i8]* @.str14722, i64 0, i64 0)) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([7 x i8]* @.str15723, i64 0, i64 0)) #3
  %5 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([9 x i8]* @.str16724, i64 0, i64 0)) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8]* @.str17725, i64 0, i64 0)) #3
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -1001000, i32 2) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_setfuncs(%struct.lua_State* %L, %struct.luaL_Reg* getelementptr inbounds ([3 x %struct.luaL_Reg]* @ll_funcs, i64 0, i64 0), i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  ret i32 1
}

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

declare i8* @dlsym(i8*, i8*) #8

declare i8* @dlerror() #8

declare i8* @dlopen(i8*, i32) #8

declare i32 @dlclose(i8*) #8

; Function Attrs: nounwind ssp uwtable
define internal i32 @gctm(%struct.lua_State* %L) #0 {
  %1 = tail call i32 @luaL_len(%struct.lua_State* %L, i32 1) #3
  %2 = icmp sgt i32 %1, 0
  br i1 %2, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph, %0
  %n.01 = phi i32 [ %5, %.lr.ph ], [ %1, %0 ]
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 1, i32 %n.01) #3
  %3 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #3
  %4 = tail call i32 @dlclose(i8* %3) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %5 = add nsw i32 %n.01, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @searcher_preload(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([9 x i8]* @.str16724, i64 0, i64 0)) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* %1) #3
  %2 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %6

; <label>:4                                       ; preds = %0
  %5 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([33 x i8]* @.str43749, i64 0, i64 0), i8* %1) #3
  br label %6

; <label>:6                                       ; preds = %4, %0
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @searcher_Lua(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001001, i8* getelementptr inbounds ([5 x i8]* @.str4712, i64 0, i64 0)) #3
  %2 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %findfile.exit

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str38745, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str4712, i64 0, i64 0)) #3
  br label %findfile.exit

findfile.exit:                                    ; preds = %4, %0
  %6 = tail call fastcc i8* @searchpath(%struct.lua_State* %L, i8* %1, i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str34742, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str31739, i64 0, i64 0)) #3
  %7 = icmp eq i8* %6, null
  br i1 %7, label %checkload.exit, label %8

; <label>:8                                       ; preds = %findfile.exit
  %9 = tail call i32 @luaL_loadfilex(%struct.lua_State* %L, i8* %6, i8* null) #3
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %8
  %12 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %6) #3
  br label %checkload.exit

; <label>:13                                      ; preds = %8
  %14 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %15 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %16 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8]* @.str33741, i64 0, i64 0), i8* %14, i8* %6, i8* %15) #3
  br label %checkload.exit

checkload.exit:                                   ; preds = %13, %11, %findfile.exit
  %.0 = phi i32 [ 1, %findfile.exit ], [ 2, %11 ], [ %16, %13 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @searcher_C(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001001, i8* getelementptr inbounds ([6 x i8]* @.str8716, i64 0, i64 0)) #3
  %2 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %findfile.exit

; <label>:4                                       ; preds = %0
  %5 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str38745, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str8716, i64 0, i64 0)) #3
  br label %findfile.exit

findfile.exit:                                    ; preds = %4, %0
  %6 = tail call fastcc i8* @searchpath(%struct.lua_State* %L, i8* %1, i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str34742, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str31739, i64 0, i64 0)) #3
  %7 = icmp eq i8* %6, null
  br i1 %7, label %checkload.exit, label %8

; <label>:8                                       ; preds = %findfile.exit
  %9 = tail call fastcc i32 @loadfunc(%struct.lua_State* %L, i8* %6, i8* %1)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

; <label>:11                                      ; preds = %8
  %12 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %6) #3
  br label %checkload.exit

; <label>:13                                      ; preds = %8
  %14 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %15 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %16 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8]* @.str33741, i64 0, i64 0), i8* %14, i8* %6, i8* %15) #3
  br label %checkload.exit

checkload.exit:                                   ; preds = %13, %11, %findfile.exit
  %.0 = phi i32 [ 1, %findfile.exit ], [ 2, %11 ], [ %16, %13 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @searcher_Croot(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @strchr(i8* %1, i32 46) #3
  %3 = icmp eq i8* %2, null
  br i1 %3, label %26, label %4

; <label>:4                                       ; preds = %0
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint i8* %1 to i64
  %7 = sub i64 %5, %6
  %8 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %1, i64 %7) #3
  %9 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001001, i8* getelementptr inbounds ([6 x i8]* @.str8716, i64 0, i64 0)) #3
  %10 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %findfile.exit

; <label>:12                                      ; preds = %4
  %13 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str38745, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str8716, i64 0, i64 0)) #3
  br label %findfile.exit

findfile.exit:                                    ; preds = %12, %4
  %14 = tail call fastcc i8* @searchpath(%struct.lua_State* %L, i8* %9, i8* %10, i8* getelementptr inbounds ([2 x i8]* @.str34742, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str31739, i64 0, i64 0)) #3
  %15 = icmp eq i8* %14, null
  br i1 %15, label %26, label %16

; <label>:16                                      ; preds = %findfile.exit
  %17 = tail call fastcc i32 @loadfunc(%struct.lua_State* %L, i8* %14, i8* %1)
  switch i32 %17, label %18 [
    i32 0, label %24
    i32 2, label %22
  ]

; <label>:18                                      ; preds = %16
  %19 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %20 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %21 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([46 x i8]* @.str33741, i64 0, i64 0), i8* %19, i8* %14, i8* %20) #3
  br label %26

; <label>:22                                      ; preds = %16
  %23 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([30 x i8]* @.str32740, i64 0, i64 0), i8* %1, i8* %14) #3
  br label %26

; <label>:24                                      ; preds = %16
  %25 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %14) #3
  br label %26

; <label>:26                                      ; preds = %24, %22, %18, %findfile.exit, %0
  %.0 = phi i32 [ %21, %18 ], [ 1, %22 ], [ 2, %24 ], [ 0, %0 ], [ 1, %findfile.exit ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @setpath(%struct.lua_State* %L, i8* %fieldname, i8* nocapture readonly %envname1, i8* nocapture readonly %envname2, i8* %def) #0 {
  %1 = tail call i8* @getenv(i8* %envname1) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %.thread

; <label>:3                                       ; preds = %0
  %4 = tail call i8* @getenv(i8* %envname2) #3
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %.thread

.thread:                                          ; preds = %3, %0
  %path.01 = phi i8* [ %4, %3 ], [ %1, %0 ]
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([10 x i8]* @.str30738, i64 0, i64 0)) #3
  %6 = tail call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

; <label>:8                                       ; preds = %.thread, %3
  %9 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %def) #3
  br label %13

; <label>:10                                      ; preds = %.thread
  %11 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %path.01, i8* getelementptr inbounds ([3 x i8]* @.str27735, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str28736, i64 0, i64 0)) #3
  %12 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %11, i8* getelementptr inbounds ([2 x i8]* @.str29737, i64 0, i64 0), i8* %def) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  br label %13

; <label>:13                                      ; preds = %10, %8
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* %fieldname) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ll_loadlib(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #3
  %3 = tail call fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %1, i8* %2)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %9, label %5

; <label>:5                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  %6 = icmp eq i32 %3, 1
  %7 = select i1 %6, i8* getelementptr inbounds ([5 x i8]* @.str48754, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str49755, i64 0, i64 0)
  %8 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %7) #3
  br label %9

; <label>:9                                       ; preds = %5, %0
  %.0 = phi i32 [ 3, %5 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ll_searchpath(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = tail call i8* @luaL_checklstring(%struct.lua_State* %L, i32 2, i64* null) #3
  %3 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 3, i8* getelementptr inbounds ([2 x i8]* @.str34742, i64 0, i64 0), i64* null) #3
  %4 = tail call i8* @luaL_optlstring(%struct.lua_State* %L, i32 4, i8* getelementptr inbounds ([2 x i8]* @.str31739, i64 0, i64 0), i64* null) #3
  %5 = tail call fastcc i8* @searchpath(%struct.lua_State* %L, i8* %1, i8* %2, i8* %3, i8* %4)
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  tail call void @lua_pushnil(%struct.lua_State* %L) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  br label %8

; <label>:8                                       ; preds = %7, %0
  %.0 = phi i32 [ 2, %7 ], [ 1, %0 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ll_seeall(%struct.lua_State* %L) #0 {
  tail call void @luaL_checktype(%struct.lua_State* %L, i32 1, i32 5) #3
  %1 = tail call i32 @lua_getmetatable(%struct.lua_State* %L, i32 1) #3
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3                                       ; preds = %0
  tail call void @lua_createtable(%struct.lua_State* %L, i32 0, i32 1) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  %4 = tail call i32 @lua_setmetatable(%struct.lua_State* %L, i32 1) #3
  br label %5

; <label>:5                                       ; preds = %3, %0
  tail call void @lua_rawgeti(%struct.lua_State* %L, i32 -1001000, i32 2) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([8 x i8]* @.str47753, i64 0, i64 0)) #3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ll_module(%struct.lua_State* %L) #0 {
  %ar.i = alloca %struct.lua_Debug, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  call void @luaL_pushmodule(%struct.lua_State* %L, i8* %1, i32 1) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* getelementptr inbounds ([6 x i8]* @.str22730, i64 0, i64 0)) #3
  %3 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %4 = icmp eq i32 %3, 0
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br i1 %4, label %5, label %14

; <label>:5                                       ; preds = %0
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([3 x i8]* @.str25733, i64 0, i64 0)) #3
  %6 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %1) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([6 x i8]* @.str22730, i64 0, i64 0)) #3
  %7 = call i8* @strrchr(i8* %1, i32 46) #3
  %8 = icmp eq i8* %7, null
  %9 = getelementptr inbounds i8* %7, i64 1
  %dot.0.i = select i1 %8, i8* %1, i8* %9
  %10 = ptrtoint i8* %dot.0.i to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %1, i64 %12) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 -2, i8* getelementptr inbounds ([9 x i8]* @.str26734, i64 0, i64 0)) #3
  br label %14

; <label>:14                                      ; preds = %5, %0
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  %15 = bitcast %struct.lua_Debug* %ar.i to i8*
  call void @llvm.lifetime.start(i64 128, i8* %15) #3
  %16 = call i32 @lua_getstack(%struct.lua_State* %L, i32 1, %struct.lua_Debug* %ar.i) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %24, label %18

; <label>:18                                      ; preds = %14
  %19 = call i32 @lua_getinfo(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str23731, i64 0, i64 0), %struct.lua_Debug* %ar.i) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

; <label>:21                                      ; preds = %18
  %22 = call i32 @lua_iscfunction(%struct.lua_State* %L, i32 -1) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %set_env.exit, label %24

; <label>:24                                      ; preds = %21, %18, %14
  %25 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([40 x i8]* @.str24732, i64 0, i64 0)) #3
  br label %set_env.exit

set_env.exit:                                     ; preds = %24, %21
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  %26 = call i8* @lua_setupvalue(%struct.lua_State* %L, i32 -2, i32 1) #3
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @llvm.lifetime.end(i64 128, i8* %15) #3
  %27 = icmp slt i32 %2, 2
  br i1 %27, label %dooptions.exit, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %31, %set_env.exit
  %i.01.i = phi i32 [ %32, %31 ], [ 2, %set_env.exit ]
  %28 = call i32 @lua_type(%struct.lua_State* %L, i32 %i.01.i) #3
  %29 = icmp eq i32 %28, 6
  br i1 %29, label %30, label %31

; <label>:30                                      ; preds = %.lr.ph.i
  call void @lua_pushvalue(%struct.lua_State* %L, i32 %i.01.i) #3
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -2) #3
  call void @lua_callk(%struct.lua_State* %L, i32 1, i32 0, i32 0, i32 (%struct.lua_State*)* null) #3
  br label %31

; <label>:31                                      ; preds = %30, %.lr.ph.i
  %32 = add nsw i32 %i.01.i, 1
  %exitcond.i = icmp eq i32 %i.01.i, %2
  br i1 %exitcond.i, label %dooptions.exit, label %.lr.ph.i

dooptions.exit:                                   ; preds = %31, %set_env.exit
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ll_require(%struct.lua_State* %L) #0 {
  %msg.i = alloca %struct.luaL_Buffer, align 8
  %1 = call i8* @luaL_checklstring(%struct.lua_State* %L, i32 1, i64* null) #3
  call void @lua_settop(%struct.lua_State* %L, i32 1) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([8 x i8]* @.str14722, i64 0, i64 0)) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 2, i8* %1) #3
  %2 = call i32 @lua_toboolean(%struct.lua_State* %L, i32 -1) #3
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %34

; <label>:4                                       ; preds = %0
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %5 = bitcast %struct.luaL_Buffer* %msg.i to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %5) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %msg.i) #3
  call void @lua_getfield(%struct.lua_State* %L, i32 -1001001, i8* getelementptr inbounds ([10 x i8]* @.str3711, i64 0, i64 0)) #3
  %6 = call i32 @lua_type(%struct.lua_State* %L, i32 3) #3
  %7 = icmp eq i32 %6, 5
  br i1 %7, label %.preheader.i, label %8

; <label>:8                                       ; preds = %4
  %9 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([36 x i8]* @.str20728, i64 0, i64 0)) #3
  br label %.preheader.i

.preheader.i:                                     ; preds = %24, %8, %4
  %i.0.i = phi i32 [ %25, %24 ], [ 1, %4 ], [ 1, %8 ]
  call void @lua_rawgeti(%struct.lua_State* %L, i32 3, i32 %i.0.i) #3
  %10 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12                                      ; preds = %.preheader.i
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @luaL_pushresult(%struct.luaL_Buffer* %msg.i) #3
  %13 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %14 = call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([25 x i8]* @.str21729, i64 0, i64 0), i8* %1, i8* %13) #3
  br label %15

; <label>:15                                      ; preds = %12, %.preheader.i
  %16 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %1) #3
  call void @lua_callk(%struct.lua_State* %L, i32 1, i32 2, i32 0, i32 (%struct.lua_State*)* null) #3
  %17 = call i32 @lua_type(%struct.lua_State* %L, i32 -2) #3
  %18 = icmp eq i32 %17, 6
  br i1 %18, label %findloader.exit, label %19

; <label>:19                                      ; preds = %15
  %20 = call i32 @lua_isstring(%struct.lua_State* %L, i32 -2) #3
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

; <label>:22                                      ; preds = %19
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @luaL_addvalue(%struct.luaL_Buffer* %msg.i) #3
  br label %24

; <label>:23                                      ; preds = %19
  call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  br label %24

; <label>:24                                      ; preds = %23, %22
  %25 = add nsw i32 %i.0.i, 1
  br label %.preheader.i

findloader.exit:                                  ; preds = %15
  call void @llvm.lifetime.end(i64 1056, i8* %5) #3
  %26 = call i8* @lua_pushstring(%struct.lua_State* %L, i8* %1) #3
  call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  call void @lua_callk(%struct.lua_State* %L, i32 2, i32 1, i32 0, i32 (%struct.lua_State*)* null) #3
  %27 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

; <label>:29                                      ; preds = %findloader.exit
  call void @lua_setfield(%struct.lua_State* %L, i32 2, i8* %1) #3
  br label %30

; <label>:30                                      ; preds = %29, %findloader.exit
  call void @lua_getfield(%struct.lua_State* %L, i32 2, i8* %1) #3
  %31 = call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33                                      ; preds = %30
  call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  call void @lua_setfield(%struct.lua_State* %L, i32 2, i8* %1) #3
  br label %34

; <label>:34                                      ; preds = %33, %30, %0
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i8* @searchpath(%struct.lua_State* %L, i8* %name, i8* %path, i8* %sep, i8* %dirsep) #0 {
  %msg = alloca %struct.luaL_Buffer, align 8
  %1 = bitcast %struct.luaL_Buffer* %msg to i8*
  call void @llvm.lifetime.start(i64 1056, i8* %1) #3
  call void @luaL_buffinit(%struct.lua_State* %L, %struct.luaL_Buffer* %msg) #3
  %2 = load i8* %sep, align 1, !tbaa !86
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %.preheader, label %4

; <label>:4                                       ; preds = %0
  %5 = call i8* @luaL_gsub(%struct.lua_State* %L, i8* %name, i8* %sep, i8* %dirsep) #3
  br label %.preheader

.preheader:                                       ; preds = %4, %0
  %.01.ph = phi i8* [ %name, %0 ], [ %5, %4 ]
  br label %.backedge

.backedge:                                        ; preds = %26, %7, %.preheader
  %.0.i = phi i8* [ %path, %.preheader ], [ %8, %7 ], [ %l.0.i, %26 ]
  %6 = load i8* %.0.i, align 1, !tbaa !86
  switch i8 %6, label %9 [
    i8 59, label %7
    i8 0, label %pushnexttemplate.exit.thread
  ]

; <label>:7                                       ; preds = %.backedge
  %8 = getelementptr inbounds i8* %.0.i, i64 1
  br label %.backedge

; <label>:9                                       ; preds = %.backedge
  %10 = call i8* @strchr(i8* %.0.i, i32 59) #3
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %pushnexttemplate.exit

; <label>:12                                      ; preds = %9
  %13 = call i64 @strlen(i8* %.0.i) #3
  %14 = getelementptr inbounds i8* %.0.i, i64 %13
  br label %pushnexttemplate.exit

pushnexttemplate.exit:                            ; preds = %12, %9
  %l.0.i = phi i8* [ %14, %12 ], [ %10, %9 ]
  %15 = ptrtoint i8* %l.0.i to i64
  %16 = ptrtoint i8* %.0.i to i64
  %17 = sub i64 %15, %16
  %18 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %.0.i, i64 %17) #3
  %19 = icmp eq i8* %l.0.i, null
  br i1 %19, label %pushnexttemplate.exit.thread, label %20

; <label>:20                                      ; preds = %pushnexttemplate.exit
  %21 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %22 = call i8* @luaL_gsub(%struct.lua_State* %L, i8* %21, i8* getelementptr inbounds ([2 x i8]* @.str39746, i64 0, i64 0), i8* %.01.ph) #3
  call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  %23 = call %struct.__sFILE* @"\01_fopen"(i8* %22, i8* getelementptr inbounds ([2 x i8]* @.str41748, i64 0, i64 0)) #3
  %24 = icmp eq %struct.__sFILE* %23, null
  br i1 %24, label %26, label %readable.exit

readable.exit:                                    ; preds = %20
  %25 = call i32 @fclose(%struct.__sFILE* %23) #3
  br label %28

; <label>:26                                      ; preds = %20
  %27 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([15 x i8]* @.str40747, i64 0, i64 0), i8* %22) #3
  call void @lua_remove(%struct.lua_State* %L, i32 -2) #3
  call void @luaL_addvalue(%struct.luaL_Buffer* %msg) #3
  br label %.backedge

pushnexttemplate.exit.thread:                     ; preds = %pushnexttemplate.exit, %.backedge
  call void @luaL_pushresult(%struct.luaL_Buffer* %msg) #3
  br label %28

; <label>:28                                      ; preds = %pushnexttemplate.exit.thread, %readable.exit
  %.0 = phi i8* [ null, %pushnexttemplate.exit.thread ], [ %22, %readable.exit ]
  call void @llvm.lifetime.end(i64 1056, i8* %1) #3
  ret i8* %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @loadfunc(%struct.lua_State* %L, i8* %filename, i8* %modname) #0 {
  %1 = tail call i8* @luaL_gsub(%struct.lua_State* %L, i8* %modname, i8* getelementptr inbounds ([2 x i8]* @.str34742, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str35743, i64 0, i64 0)) #3
  %2 = tail call i8* @strchr(i8* %1, i32 45) #3
  %3 = icmp eq i8* %2, null
  br i1 %3, label %14, label %4

; <label>:4                                       ; preds = %0
  %5 = ptrtoint i8* %2 to i64
  %6 = ptrtoint i8* %1 to i64
  %7 = sub i64 %5, %6
  %8 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* %1, i64 %7) #3
  %9 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8]* @.str37744, i64 0, i64 0), i8* %8) #3
  %10 = tail call fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %filename, i8* %9)
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %12, label %17

; <label>:12                                      ; preds = %4
  %13 = getelementptr inbounds i8* %2, i64 1
  br label %14

; <label>:14                                      ; preds = %12, %0
  %.01 = phi i8* [ %13, %12 ], [ %1, %0 ]
  %15 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([11 x i8]* @.str37744, i64 0, i64 0), i8* %.01) #3
  %16 = tail call fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %filename, i8* %15)
  br label %17

; <label>:17                                      ; preds = %14, %4
  %.0 = phi i32 [ %16, %14 ], [ %10, %4 ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ll_loadfunc(%struct.lua_State* %L, i8* %path, i8* %sym) #0 {
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([7 x i8]* @.str708, i64 0, i64 0)) #3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1, i8* %path) #3
  %1 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -3) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %3, label %13

; <label>:3                                       ; preds = %0
  %4 = load i8* %sym, align 1, !tbaa !86
  %5 = icmp eq i8 %4, 42
  %6 = select i1 %5, i32 10, i32 6
  %7 = tail call i8* @dlopen(i8* %path, i32 %6) #3
  %8 = icmp eq i8* %7, null
  br i1 %8, label %ll_load.exit.thread, label %ll_load.exit

ll_load.exit.thread:                              ; preds = %3
  %9 = tail call i8* @dlerror() #3
  %10 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %9) #3
  br label %23

ll_load.exit:                                     ; preds = %3
  tail call void @lua_getfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([7 x i8]* @.str708, i64 0, i64 0)) #3
  tail call void @lua_pushlightuserdata(%struct.lua_State* %L, i8* %7) #3
  tail call void @lua_pushvalue(%struct.lua_State* %L, i32 -1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -3, i8* %path) #3
  %11 = tail call i32 @luaL_len(%struct.lua_State* %L, i32 -2) #3
  %12 = add nsw i32 %11, 1
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 %12) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br label %13

; <label>:13                                      ; preds = %ll_load.exit, %0
  %reg.0 = phi i8* [ %7, %ll_load.exit ], [ %1, %0 ]
  %14 = load i8* %sym, align 1, !tbaa !86
  %15 = icmp eq i8 %14, 42
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %13
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  br label %23

; <label>:17                                      ; preds = %13
  %18 = tail call i8* @dlsym(i8* %reg.0, i8* %sym) #3
  %cond = icmp eq i8* %18, null
  br i1 %cond, label %ll_sym.exit, label %21

ll_sym.exit:                                      ; preds = %17
  %19 = tail call i8* @dlerror() #3
  %20 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %19) #3
  br label %23

; <label>:21                                      ; preds = %17
  %22 = bitcast i8* %18 to i32 (%struct.lua_State*)*
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* %22, i32 0) #3
  br label %23

; <label>:23                                      ; preds = %21, %ll_sym.exit, %16, %ll_load.exit.thread
  %.0 = phi i32 [ 0, %16 ], [ 0, %21 ], [ 2, %ll_sym.exit ], [ 1, %ll_load.exit.thread ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define void @luaL_openlibs(%struct.lua_State* %L) #0 {
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str1757, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_base, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str2758, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_package, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str3759, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_coroutine, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str4760, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_table, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str5761, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_io, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([3 x i8]* @.str6762, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_os, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([7 x i8]* @.str7763, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_string, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str8764, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_bit32, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([5 x i8]* @.str9765, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_math, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  tail call void @luaL_requiref(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str10766, i64 0, i64 0), i32 (%struct.lua_State*)* @luaopen_debug, i32 1) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %1 = tail call i32 @luaL_getsubtable(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([9 x i8]* @.str756, i64 0, i64 0)) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
  %1 = tail call %struct.lua_State* @luaL_newstate() #3
  %2 = icmp eq %struct.lua_State* %1, null
  br i1 %2, label %3, label %15

; <label>:3                                       ; preds = %0
  %4 = load i8** %argv, align 8, !tbaa !25
  %5 = icmp eq i8* %4, null
  br i1 %5, label %l_message.exit, label %6

; <label>:6                                       ; preds = %3
  %7 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %8 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %7, i8* getelementptr inbounds ([5 x i8]* @.str27794, i64 0, i64 0), i8* %4) #3
  %9 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %10 = tail call i32 @fflush(%struct.__sFILE* %9) #3
  br label %l_message.exit

l_message.exit:                                   ; preds = %6, %3
  %11 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([4 x i8]* @.str31798, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8]* @.str767, i64 0, i64 0)) #3
  %13 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %14 = tail call i32 @fflush(%struct.__sFILE* %13) #3
  br label %42

; <label>:15                                      ; preds = %0
  tail call void @lua_pushcclosure(%struct.lua_State* %1, i32 (%struct.lua_State*)* @pmain, i32 0) #3
  %16 = sext i32 %argc to i64
  tail call void @lua_pushinteger(%struct.lua_State* %1, i64 %16) #3
  %17 = bitcast i8** %argv to i8*
  tail call void @lua_pushlightuserdata(%struct.lua_State* %1, i8* %17) #3
  %18 = tail call i32 @lua_pcallk(%struct.lua_State* %1, i32 2, i32 1, i32 0, i32 0, i32 (%struct.lua_State*)* null) #3
  %19 = tail call i32 @lua_toboolean(%struct.lua_State* %1, i32 -1) #3
  %20 = icmp eq i32 %18, 0
  br i1 %20, label %finalreport.exit, label %21

; <label>:21                                      ; preds = %15
  %22 = tail call i32 @lua_type(%struct.lua_State* %1, i32 -1) #3
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %24, label %26

; <label>:24                                      ; preds = %21
  %25 = tail call i8* @lua_tolstring(%struct.lua_State* %1, i32 -1, i64* null) #3
  br label %26

; <label>:26                                      ; preds = %24, %21
  %27 = phi i8* [ %25, %24 ], [ null, %21 ]
  %28 = icmp eq i8* %27, null
  %..i = select i1 %28, i8* getelementptr inbounds ([31 x i8]* @.str1768, i64 0, i64 0), i8* %27
  %29 = load i8** @progname, align 8, !tbaa !25
  %30 = icmp eq i8* %29, null
  br i1 %30, label %l_message.exit.i, label %31

; <label>:31                                      ; preds = %26
  %32 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %33 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %32, i8* getelementptr inbounds ([5 x i8]* @.str27794, i64 0, i64 0), i8* %29) #3
  %34 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %35 = tail call i32 @fflush(%struct.__sFILE* %34) #3
  br label %l_message.exit.i

l_message.exit.i:                                 ; preds = %31, %26
  %36 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %37 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %36, i8* getelementptr inbounds ([4 x i8]* @.str31798, i64 0, i64 0), i8* %..i) #3
  %38 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %39 = tail call i32 @fflush(%struct.__sFILE* %38) #3
  tail call void @lua_settop(%struct.lua_State* %1, i32 -2) #3
  br label %finalreport.exit

finalreport.exit:                                 ; preds = %l_message.exit.i, %15
  tail call void bitcast (void (%struct.lua_State.228*)* @lua_close to void (%struct.lua_State*)*)(%struct.lua_State* %1) #3
  %not. = icmp ne i32 %19, 0
  %. = and i1 %20, %not.
  %40 = zext i1 %. to i32
  %41 = xor i32 %40, 1
  br label %42

; <label>:42                                      ; preds = %finalreport.exit, %l_message.exit
  %.0 = phi i32 [ 1, %l_message.exit ], [ %41, %finalreport.exit ]
  ret i32 %.0
}

declare i32 @isatty(i32) #8

declare void (i32)* @signal(i32, void (i32)*) #8

declare i32 @add_history(i8*) #8

declare i8* @readline(i8*) #8

; Function Attrs: nounwind ssp uwtable
define internal i32 @pmain(%struct.lua_State* %L) #0 {
  %1 = tail call i64 @lua_tointegerx(%struct.lua_State* %L, i32 1, i32* null) #3
  %2 = trunc i64 %1 to i32
  %3 = tail call i8* @lua_touserdata(%struct.lua_State* %L, i32 2) #3
  %4 = bitcast i8* %3 to i8**
  %5 = load i8** %4, align 8, !tbaa !25
  %6 = icmp eq i8* %5, null
  br i1 %6, label %11, label %7

; <label>:7                                       ; preds = %0
  %8 = load i8* %5, align 1, !tbaa !86
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

; <label>:10                                      ; preds = %7
  store i8* %5, i8** @progname, align 8, !tbaa !25
  br label %11

; <label>:11                                      ; preds = %10, %7, %0
  %12 = getelementptr inbounds i8* %3, i64 8
  %13 = bitcast i8* %12 to i8**
  %14 = load i8** %13, align 8, !tbaa !25
  %15 = icmp eq i8* %14, null
  br i1 %15, label %.thread, label %.lr.ph.i

.lr.ph.i:                                         ; preds = %.thread103, %11
  %16 = phi i32 [ %61, %.thread103 ], [ 0, %11 ]
  %17 = phi i32 [ %62, %.thread103 ], [ 0, %11 ]
  %18 = phi i32 [ %63, %.thread103 ], [ 0, %11 ]
  %19 = phi i32 [ %64, %.thread103 ], [ 0, %11 ]
  %20 = phi i8* [ %68, %.thread103 ], [ %14, %11 ]
  %i.07.i = phi i32 [ %65, %.thread103 ], [ 1, %11 ]
  %21 = load i8* %20, align 1, !tbaa !86
  %22 = icmp eq i8 %21, 45
  br i1 %22, label %23, label %collectargs.exit

; <label>:23                                      ; preds = %.lr.ph.i
  %24 = getelementptr inbounds i8* %20, i64 1
  %25 = load i8* %24, align 1, !tbaa !86
  %26 = sext i8 %25 to i32
  switch i32 %26, label %59 [
    i32 45, label %27
    i32 0, label %collectargs.exit
    i32 69, label %.thread103
    i32 105, label %37
    i32 118, label %41
    i32 101, label %42
    i32 108, label %43
  ]

; <label>:27                                      ; preds = %23
  %28 = getelementptr inbounds i8* %20, i64 2
  %29 = load i8* %28, align 1, !tbaa !86
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %collectargs.exit.thread

; <label>:31                                      ; preds = %27
  %32 = add nsw i32 %i.07.i, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8** %4, i64 %33
  %35 = load i8** %34, align 8, !tbaa !25
  %36 = icmp eq i8* %35, null
  br i1 %36, label %collectargs.exit.thread18, label %collectargs.exit

; <label>:37                                      ; preds = %23
  %38 = getelementptr inbounds i8* %20, i64 2
  %39 = load i8* %38, align 1, !tbaa !86
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %.thread103, label %collectargs.exit.thread

; <label>:41                                      ; preds = %23
  %.pre.i = getelementptr inbounds i8* %20, i64 2
  %.pre = load i8* %.pre.i, align 1, !tbaa !86
  %phitmp = icmp eq i8 %.pre, 0
  br i1 %phitmp, label %.thread103, label %collectargs.exit.thread

; <label>:42                                      ; preds = %23
  br label %43

; <label>:43                                      ; preds = %42, %23
  %44 = phi i32 [ 1, %42 ], [ %17, %23 ]
  %45 = getelementptr inbounds i8* %20, i64 2
  %46 = load i8* %45, align 1, !tbaa !86
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %.thread103

; <label>:48                                      ; preds = %43
  %49 = add nsw i32 %i.07.i, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8** %4, i64 %50
  %52 = load i8** %51, align 8, !tbaa !25
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

; <label>:54                                      ; preds = %48
  %55 = load i8* %52, align 1, !tbaa !86
  %56 = icmp eq i8 %55, 45
  br i1 %56, label %57, label %.thread103

; <label>:57                                      ; preds = %54, %48
  %58 = sub nsw i32 0, %i.07.i
  br label %collectargs.exit

; <label>:59                                      ; preds = %23
  %60 = sub nsw i32 0, %i.07.i
  br label %collectargs.exit

.thread103:                                       ; preds = %54, %43, %41, %37, %23
  %61 = phi i32 [ %16, %54 ], [ %16, %43 ], [ 1, %23 ], [ %16, %41 ], [ %16, %37 ]
  %62 = phi i32 [ %44, %54 ], [ %44, %43 ], [ %17, %23 ], [ %17, %41 ], [ %17, %37 ]
  %63 = phi i32 [ %18, %54 ], [ %18, %43 ], [ %18, %23 ], [ 1, %41 ], [ 1, %37 ]
  %64 = phi i32 [ %19, %54 ], [ %19, %43 ], [ %19, %23 ], [ %19, %41 ], [ 1, %37 ]
  %i.1.i = phi i32 [ %49, %54 ], [ %i.07.i, %43 ], [ %i.07.i, %23 ], [ %i.07.i, %41 ], [ %i.07.i, %37 ]
  %65 = add nsw i32 %i.1.i, 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8** %4, i64 %66
  %68 = load i8** %67, align 8, !tbaa !25
  %69 = icmp eq i8* %68, null
  br i1 %69, label %collectargs.exit.thread18, label %.lr.ph.i

collectargs.exit:                                 ; preds = %59, %57, %31, %23, %.lr.ph.i
  %70 = phi i32 [ %17, %59 ], [ %44, %57 ], [ %17, %31 ], [ %17, %23 ], [ %17, %.lr.ph.i ]
  %.0.i = phi i32 [ %60, %59 ], [ %58, %57 ], [ %32, %31 ], [ %i.07.i, %23 ], [ %i.07.i, %.lr.ph.i ]
  %71 = icmp slt i32 %.0.i, 0
  br i1 %71, label %collectargs.exit.thread, label %collectargs.exit.thread18

collectargs.exit.thread:                          ; preds = %collectargs.exit, %41, %37, %27
  %.0.i12 = phi i32 [ %.0.i, %collectargs.exit ], [ -1, %27 ], [ -1, %37 ], [ -1, %41 ]
  %72 = sub nsw i32 0, %.0.i12
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8** %4, i64 %73
  %75 = load i8** %74, align 8, !tbaa !25
  %76 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %77 = load i8** @progname, align 8, !tbaa !25
  %78 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %76, i8* getelementptr inbounds ([5 x i8]* @.str27794, i64 0, i64 0), i8* %77) #3
  %79 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %80 = tail call i32 @fflush(%struct.__sFILE* %79) #3
  %81 = getelementptr inbounds i8* %75, i64 1
  %82 = load i8* %81, align 1, !tbaa !86
  switch i8 %82, label %88 [
    i8 101, label %83
    i8 108, label %83
  ]

; <label>:83                                      ; preds = %collectargs.exit.thread, %collectargs.exit.thread
  %84 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %85 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %84, i8* getelementptr inbounds ([21 x i8]* @.str28795, i64 0, i64 0), i8* %75) #3
  %86 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %87 = tail call i32 @fflush(%struct.__sFILE* %86) #3
  br label %print_usage.exit

; <label>:88                                      ; preds = %collectargs.exit.thread
  %89 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %90 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %89, i8* getelementptr inbounds ([26 x i8]* @.str29796, i64 0, i64 0), i8* %75) #3
  %91 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %92 = tail call i32 @fflush(%struct.__sFILE* %91) #3
  br label %print_usage.exit

print_usage.exit:                                 ; preds = %88, %83
  %93 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %94 = load i8** @progname, align 8, !tbaa !25
  %95 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %93, i8* getelementptr inbounds ([346 x i8]* @.str30797, i64 0, i64 0), i8* %94) #3
  %96 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %97 = tail call i32 @fflush(%struct.__sFILE* %96) #3
  br label %runargs.exit.thread

collectargs.exit.thread18:                        ; preds = %collectargs.exit, %.thread103, %31
  %.0.i19 = phi i32 [ %.0.i, %collectargs.exit ], [ 0, %31 ], [ 0, %.thread103 ]
  %98 = phi i32 [ %19, %collectargs.exit ], [ %19, %31 ], [ %64, %.thread103 ]
  %99 = phi i32 [ %18, %collectargs.exit ], [ %18, %31 ], [ %63, %.thread103 ]
  %100 = phi i32 [ %70, %collectargs.exit ], [ %17, %31 ], [ %62, %.thread103 ]
  %101 = phi i32 [ %16, %collectargs.exit ], [ %16, %31 ], [ %61, %.thread103 ]
  %102 = icmp eq i32 %99, 0
  br i1 %102, label %110, label %103

; <label>:103                                     ; preds = %collectargs.exit.thread18
  %104 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %105 = tail call i64 @"\01_fwrite"(i8* getelementptr inbounds ([52 x i8]* @.str26793, i64 0, i64 0), i64 1, i64 51, %struct.__sFILE* %104) #3
  %106 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %107 = tail call i64 @"\01_fwrite"(i8* getelementptr inbounds ([2 x i8]* @.str10777, i64 0, i64 0), i64 1, i64 1, %struct.__sFILE* %106) #3
  %108 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %109 = tail call i32 @fflush(%struct.__sFILE* %108) #3
  br label %110

; <label>:110                                     ; preds = %103, %collectargs.exit.thread18
  %111 = phi i1 [ true, %collectargs.exit.thread18 ], [ false, %103 ]
  %112 = icmp eq i32 %101, 0
  br i1 %112, label %.thread, label %113

; <label>:113                                     ; preds = %110
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  tail call void @lua_setfield(%struct.lua_State* %L, i32 -1001000, i8* getelementptr inbounds ([10 x i8]* @.str3770, i64 0, i64 0)) #3
  br label %.thread

.thread:                                          ; preds = %113, %110, %11
  %114 = phi i1 [ true, %110 ], [ false, %113 ], [ true, %11 ]
  %.0.i192223 = phi i32 [ %.0.i19, %110 ], [ %.0.i19, %113 ], [ 0, %11 ]
  %115 = phi i32 [ %98, %110 ], [ %98, %113 ], [ 0, %11 ]
  %116 = phi i32 [ %100, %110 ], [ %100, %113 ], [ 0, %11 ]
  %117 = phi i1 [ %111, %110 ], [ %111, %113 ], [ true, %11 ]
  tail call void @luaL_checkversion_(%struct.lua_State* %L, double 5.020000e+02) #3
  %118 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 0, i32 0) #3
  tail call void @luaL_openlibs(%struct.lua_State* %L) #3
  %119 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 1, i32 0) #3
  br i1 %114, label %120, label %handle_luainit.exit.thread

; <label>:120                                     ; preds = %.thread
  %121 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8]* @.str24791, i64 0, i64 1)) #3
  %122 = icmp eq i8* %121, null
  br i1 %122, label %123, label %.thread.i

; <label>:123                                     ; preds = %120
  %124 = tail call i8* @getenv(i8* getelementptr inbounds ([10 x i8]* @.str25792, i64 0, i64 1)) #3
  %125 = icmp eq i8* %124, null
  br i1 %125, label %handle_luainit.exit.thread, label %.thread.i

.thread.i:                                        ; preds = %123, %120
  %init.03.i = phi i8* [ %124, %123 ], [ %121, %120 ]
  %name.02.i = phi i8* [ getelementptr inbounds ([10 x i8]* @.str25792, i64 0, i64 0), %123 ], [ getelementptr inbounds ([14 x i8]* @.str24791, i64 0, i64 0), %120 ]
  %126 = load i8* %init.03.i, align 1, !tbaa !86
  %127 = icmp eq i8 %126, 64
  br i1 %127, label %128, label %138

; <label>:128                                     ; preds = %.thread.i
  %129 = getelementptr inbounds i8* %init.03.i, i64 1
  %130 = tail call i32 @luaL_loadfilex(%struct.lua_State* %L, i8* %129, i8* null) #3
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %dofile.exit.i

; <label>:132                                     ; preds = %128
  %133 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 %133) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %134 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %135 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 0, i32 0, i32 %133, i32 0, i32 (%struct.lua_State*)* null) #3
  %136 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 %133) #3
  br label %dofile.exit.i

dofile.exit.i:                                    ; preds = %132, %128
  %status.0.i.i = phi i32 [ %135, %132 ], [ %130, %128 ]
  %137 = tail call fastcc i32 @report(%struct.lua_State* %L, i32 %status.0.i.i) #3
  br label %handle_luainit.exit

; <label>:138                                     ; preds = %.thread.i
  %139 = tail call i64 @strlen(i8* %init.03.i) #3
  %140 = tail call i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %init.03.i, i64 %139, i8* %name.02.i, i8* null) #3
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %dostring.exit.i

; <label>:142                                     ; preds = %138
  %143 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 %143) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %144 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %145 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 0, i32 0, i32 %143, i32 0, i32 (%struct.lua_State*)* null) #3
  %146 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 %143) #3
  br label %dostring.exit.i

dostring.exit.i:                                  ; preds = %142, %138
  %status.0.i1.i = phi i32 [ %145, %142 ], [ %140, %138 ]
  %147 = tail call fastcc i32 @report(%struct.lua_State* %L, i32 %status.0.i1.i) #3
  br label %handle_luainit.exit

handle_luainit.exit:                              ; preds = %dostring.exit.i, %dofile.exit.i
  %.0.i4 = phi i32 [ %137, %dofile.exit.i ], [ %147, %dostring.exit.i ]
  %148 = icmp eq i32 %.0.i4, 0
  br i1 %148, label %handle_luainit.exit.thread, label %runargs.exit.thread

handle_luainit.exit.thread:                       ; preds = %handle_luainit.exit, %123, %.thread
  %149 = icmp sgt i32 %.0.i192223, 0
  %150 = select i1 %149, i32 %.0.i192223, i32 %2
  %151 = icmp sgt i32 %150, 1
  br i1 %151, label %.lr.ph.i5, label %.loopexit

.lr.ph.i5:                                        ; preds = %198, %handle_luainit.exit.thread
  %i.01.i = phi i32 [ %199, %198 ], [ 1, %handle_luainit.exit.thread ]
  %152 = sext i32 %i.01.i to i64
  %153 = getelementptr inbounds i8** %4, i64 %152
  %154 = load i8** %153, align 8, !tbaa !25
  %155 = getelementptr inbounds i8* %154, i64 1
  %156 = load i8* %155, align 1, !tbaa !86
  %157 = sext i8 %156 to i32
  switch i32 %157, label %198 [
    i32 101, label %158
    i32 108, label %178
  ]

; <label>:158                                     ; preds = %.lr.ph.i5
  %159 = getelementptr inbounds i8* %154, i64 2
  %160 = load i8* %159, align 1, !tbaa !86
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %167

; <label>:162                                     ; preds = %158
  %163 = add nsw i32 %i.01.i, 1
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8** %4, i64 %164
  %166 = load i8** %165, align 8, !tbaa !25
  br label %167

; <label>:167                                     ; preds = %162, %158
  %i.1.i6 = phi i32 [ %163, %162 ], [ %i.01.i, %158 ]
  %chunk.0.i = phi i8* [ %166, %162 ], [ %159, %158 ]
  %168 = tail call i64 @strlen(i8* %chunk.0.i) #3
  %169 = tail call i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %chunk.0.i, i64 %168, i8* getelementptr inbounds ([16 x i8]* @.str22789, i64 0, i64 0), i8* null) #3
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %dostring.exit.i8

; <label>:171                                     ; preds = %167
  %172 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 %172) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %173 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %174 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 0, i32 0, i32 %172, i32 0, i32 (%struct.lua_State*)* null) #3
  %175 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 %172) #3
  br label %dostring.exit.i8

dostring.exit.i8:                                 ; preds = %171, %167
  %status.0.i.i7 = phi i32 [ %174, %171 ], [ %169, %167 ]
  %176 = tail call fastcc i32 @report(%struct.lua_State* %L, i32 %status.0.i.i7) #3
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %198, label %runargs.exit.thread

; <label>:178                                     ; preds = %.lr.ph.i5
  %179 = getelementptr inbounds i8* %154, i64 2
  %180 = load i8* %179, align 1, !tbaa !86
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %187

; <label>:182                                     ; preds = %178
  %183 = add nsw i32 %i.01.i, 1
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8** %4, i64 %184
  %186 = load i8** %185, align 8, !tbaa !25
  br label %187

; <label>:187                                     ; preds = %182, %178
  %i.2.i = phi i32 [ %183, %182 ], [ %i.01.i, %178 ]
  %filename.0.i = phi i8* [ %186, %182 ], [ %179, %178 ]
  tail call void @lua_getglobal(%struct.lua_State* %L, i8* getelementptr inbounds ([8 x i8]* @.str23790, i64 0, i64 0)) #3
  %188 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %filename.0.i) #3
  %189 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %190 = add nsw i32 %189, -1
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 %190) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %191 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %192 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 1, i32 1, i32 %190, i32 0, i32 (%struct.lua_State*)* null) #3
  %193 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 %190) #3
  %194 = icmp eq i32 %192, 0
  br i1 %194, label %195, label %dolibrary.exit.i

; <label>:195                                     ; preds = %187
  tail call void @lua_setglobal(%struct.lua_State* %L, i8* %filename.0.i) #3
  br label %dolibrary.exit.i

dolibrary.exit.i:                                 ; preds = %195, %187
  %196 = tail call fastcc i32 @report(%struct.lua_State* %L, i32 %192) #3
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %runargs.exit.thread

; <label>:198                                     ; preds = %dolibrary.exit.i, %dostring.exit.i8, %.lr.ph.i5
  %i.3.i = phi i32 [ %i.01.i, %.lr.ph.i5 ], [ %i.2.i, %dolibrary.exit.i ], [ %i.1.i6, %dostring.exit.i8 ]
  %199 = add nsw i32 %i.3.i, 1
  %200 = icmp slt i32 %199, %150
  br i1 %200, label %.lr.ph.i5, label %.loopexit

.loopexit:                                        ; preds = %198, %handle_luainit.exit.thread
  %201 = icmp eq i32 %.0.i192223, 0
  br i1 %201, label %248, label %.preheader

.preheader:                                       ; preds = %.preheader, %.loopexit
  %indvars.iv = phi i32 [ %indvars.iv.next, %.preheader ], [ 0, %.loopexit ]
  %indvars.iv13.i.i = phi i64 [ %indvars.iv.next14.i.i, %.preheader ], [ 0, %.loopexit ]
  %202 = getelementptr inbounds i8** %4, i64 %indvars.iv13.i.i
  %203 = load i8** %202, align 8, !tbaa !25
  %204 = icmp eq i8* %203, null
  %indvars.iv.next14.i.i = add nuw nsw i64 %indvars.iv13.i.i, 1
  %indvars.iv.next = add nuw nsw i32 %indvars.iv, 1
  br i1 %204, label %205, label %.preheader

; <label>:205                                     ; preds = %.preheader
  %206 = trunc i64 %indvars.iv13.i.i to i32
  %207 = add i32 %.0.i192223, 1
  %208 = sub nsw i32 %206, %207
  %209 = add nsw i32 %208, 3
  tail call void @luaL_checkstack(%struct.lua_State* %L, i32 %209, i8* getelementptr inbounds ([29 x i8]* @.str21788, i64 0, i64 0)) #3
  %210 = icmp sgt i32 %206, %207
  br i1 %210, label %.lr.ph4.i.i, label %._crit_edge5.i.i

.lr.ph4.i.i:                                      ; preds = %205
  %211 = sext i32 %207 to i64
  br label %212

; <label>:212                                     ; preds = %212, %.lr.ph4.i.i
  %indvars.iv8.i.i = phi i64 [ %211, %.lr.ph4.i.i ], [ %indvars.iv.next9.i.i, %212 ]
  %i.02.i.i = phi i32 [ %207, %.lr.ph4.i.i ], [ %216, %212 ]
  %213 = getelementptr inbounds i8** %4, i64 %indvars.iv8.i.i
  %214 = load i8** %213, align 8, !tbaa !25
  %215 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %214) #3
  %216 = add nsw i32 %i.02.i.i, 1
  %indvars.iv.next9.i.i = add nsw i64 %indvars.iv8.i.i, 1
  %exitcond12.i.i = icmp eq i32 %216, %indvars.iv
  br i1 %exitcond12.i.i, label %._crit_edge5.i.i, label %212

._crit_edge5.i.i:                                 ; preds = %212, %205
  tail call void @lua_createtable(%struct.lua_State* %L, i32 %208, i32 %207) #3
  %217 = icmp sgt i32 %206, 0
  br i1 %217, label %.lr.ph.i.i, label %getargs.exit.i

.lr.ph.i.i:                                       ; preds = %.lr.ph.i.i, %._crit_edge5.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %.lr.ph.i.i ], [ 0, %._crit_edge5.i.i ]
  %218 = getelementptr inbounds i8** %4, i64 %indvars.iv.i.i
  %219 = load i8** %218, align 8, !tbaa !25
  %220 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %219) #3
  %221 = trunc i64 %indvars.iv.i.i to i32
  %222 = sub nsw i32 %221, %.0.i192223
  tail call void @lua_rawseti(%struct.lua_State* %L, i32 -2, i32 %222) #3
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next.i.i to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %indvars.iv
  br i1 %exitcond, label %getargs.exit.i, label %.lr.ph.i.i

getargs.exit.i:                                   ; preds = %.lr.ph.i.i, %._crit_edge5.i.i
  tail call void @lua_setglobal(%struct.lua_State* %L, i8* getelementptr inbounds ([4 x i8]* @.str18785, i64 0, i64 0)) #3
  %223 = sext i32 %.0.i192223 to i64
  %224 = getelementptr inbounds i8** %4, i64 %223
  %225 = load i8** %224, align 8, !tbaa !25
  %226 = tail call i32 @strcmp(i8* %225, i8* getelementptr inbounds ([2 x i8]* @.str19786, i64 0, i64 0)) #3
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %235

; <label>:228                                     ; preds = %getargs.exit.i
  %229 = add nsw i32 %.0.i192223, -1
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i8** %4, i64 %230
  %232 = load i8** %231, align 8, !tbaa !25
  %233 = tail call i32 @strcmp(i8* %232, i8* getelementptr inbounds ([3 x i8]* @.str20787, i64 0, i64 0)) #3
  %234 = icmp eq i32 %233, 0
  %..i10 = select i1 %234, i8* %225, i8* null
  br label %235

; <label>:235                                     ; preds = %228, %getargs.exit.i
  %fname.0.i = phi i8* [ %225, %getargs.exit.i ], [ %..i10, %228 ]
  %236 = tail call i32 @luaL_loadfilex(%struct.lua_State* %L, i8* %fname.0.i, i8* null) #3
  %237 = xor i32 %208, -1
  tail call void @lua_insert(%struct.lua_State* %L, i32 %237) #3
  %238 = icmp eq i32 %236, 0
  br i1 %238, label %239, label %245

; <label>:239                                     ; preds = %235
  %240 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  %241 = sub nsw i32 %240, %208
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 %241) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %242 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %243 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 %208, i32 -1, i32 %241, i32 0, i32 (%struct.lua_State*)* null) #3
  %244 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 %241) #3
  br label %handle_script.exit

; <label>:245                                     ; preds = %235
  tail call void @lua_settop(%struct.lua_State* %L, i32 %237) #3
  br label %handle_script.exit

handle_script.exit:                               ; preds = %245, %239
  %status.0.i11 = phi i32 [ %243, %239 ], [ %236, %245 ]
  %246 = tail call fastcc i32 @report(%struct.lua_State* %L, i32 %status.0.i11) #3
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %runargs.exit.thread

; <label>:248                                     ; preds = %handle_script.exit, %.loopexit
  %249 = icmp eq i32 %115, 0
  br i1 %249, label %251, label %250

; <label>:250                                     ; preds = %248
  tail call fastcc void @dotty(%struct.lua_State* %L)
  br label %273

; <label>:251                                     ; preds = %248
  %252 = or i32 %116, %.0.i192223
  %253 = icmp eq i32 %252, 0
  %or.cond3 = and i1 %253, %117
  br i1 %or.cond3, label %254, label %273

; <label>:254                                     ; preds = %251
  %255 = tail call i32 @isatty(i32 0) #3
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %264, label %257

; <label>:257                                     ; preds = %254
  %258 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %259 = tail call i64 @"\01_fwrite"(i8* getelementptr inbounds ([52 x i8]* @.str26793, i64 0, i64 0), i64 1, i64 51, %struct.__sFILE* %258) #3
  %260 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %261 = tail call i64 @"\01_fwrite"(i8* getelementptr inbounds ([2 x i8]* @.str10777, i64 0, i64 0), i64 1, i64 1, %struct.__sFILE* %260) #3
  %262 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %263 = tail call i32 @fflush(%struct.__sFILE* %262) #3
  tail call fastcc void @dotty(%struct.lua_State* %L)
  br label %273

; <label>:264                                     ; preds = %254
  %265 = tail call i32 @luaL_loadfilex(%struct.lua_State* %L, i8* null, i8* null) #3
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %dofile.exit

; <label>:267                                     ; preds = %264
  %268 = tail call i32 @lua_gettop(%struct.lua_State* %L) #3
  tail call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  tail call void @lua_insert(%struct.lua_State* %L, i32 %268) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %269 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %270 = tail call i32 @lua_pcallk(%struct.lua_State* %L, i32 0, i32 0, i32 %268, i32 0, i32 (%struct.lua_State*)* null) #3
  %271 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  tail call void @lua_remove(%struct.lua_State* %L, i32 %268) #3
  br label %dofile.exit

dofile.exit:                                      ; preds = %267, %264
  %status.0.i = phi i32 [ %270, %267 ], [ %265, %264 ]
  %272 = tail call fastcc i32 @report(%struct.lua_State* %L, i32 %status.0.i) #3
  br label %273

; <label>:273                                     ; preds = %dofile.exit, %257, %251, %250
  tail call void @lua_pushboolean(%struct.lua_State* %L, i32 1) #3
  br label %runargs.exit.thread

runargs.exit.thread:                              ; preds = %273, %handle_script.exit, %dolibrary.exit.i, %dostring.exit.i8, %handle_luainit.exit, %print_usage.exit
  %.0 = phi i32 [ 0, %print_usage.exit ], [ 1, %273 ], [ 0, %handle_luainit.exit ], [ 0, %handle_script.exit ], [ 0, %dostring.exit.i8 ], [ 0, %dolibrary.exit.i ]
  ret i32 %.0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @traceback(%struct.lua_State* %L) #0 {
  %1 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %2 = icmp eq i8* %1, null
  br i1 %2, label %4, label %3

; <label>:3                                       ; preds = %0
  tail call void @luaL_traceback(%struct.lua_State* %L, %struct.lua_State* %L, i8* %1, i32 1) #3
  br label %12

; <label>:4                                       ; preds = %0
  %5 = tail call i32 @lua_type(%struct.lua_State* %L, i32 1) #3
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %12, label %7

; <label>:7                                       ; preds = %4
  %8 = tail call i32 @luaL_callmeta(%struct.lua_State* %L, i32 1, i8* getelementptr inbounds ([11 x i8]* @.str5772, i64 0, i64 0)) #3
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

; <label>:10                                      ; preds = %7
  %11 = tail call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([19 x i8]* @.str6773, i64 0, i64 0), i64 18) #3
  br label %12

; <label>:12                                      ; preds = %10, %7, %4, %3
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal void @laction(i32 %i) #0 {
  %1 = tail call void (i32)* (i32, void (i32)*)* @signal(i32 %i, void (i32)* null) #3
  %2 = load %struct.lua_State** @globalL, align 8, !tbaa !25
  %3 = tail call i32 @lua_sethook(%struct.lua_State* %2, void (%struct.lua_State*, %struct.lua_Debug*)* @lstop, i32 11, i32 1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @report(%struct.lua_State* %L, i32 %status) #0 {
  %1 = icmp eq i32 %status, 0
  br i1 %1, label %20, label %2

; <label>:2                                       ; preds = %0
  %3 = tail call i32 @lua_type(%struct.lua_State* %L, i32 -1) #3
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %20, label %5

; <label>:5                                       ; preds = %2
  %6 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %7 = icmp eq i8* %6, null
  %. = select i1 %7, i8* getelementptr inbounds ([31 x i8]* @.str1768, i64 0, i64 0), i8* %6
  %8 = load i8** @progname, align 8, !tbaa !25
  %9 = icmp eq i8* %8, null
  br i1 %9, label %l_message.exit, label %10

; <label>:10                                      ; preds = %5
  %11 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %12 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %11, i8* getelementptr inbounds ([5 x i8]* @.str27794, i64 0, i64 0), i8* %8) #3
  %13 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %14 = tail call i32 @fflush(%struct.__sFILE* %13) #3
  br label %l_message.exit

l_message.exit:                                   ; preds = %10, %5
  %15 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %16 = tail call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %15, i8* getelementptr inbounds ([4 x i8]* @.str31798, i64 0, i64 0), i8* %.) #3
  %17 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %18 = tail call i32 @fflush(%struct.__sFILE* %17) #3
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  %19 = tail call i32 @lua_gc(%struct.lua_State* %L, i32 2, i32 0) #3
  br label %20

; <label>:20                                      ; preds = %l_message.exit, %2, %0
  ret i32 %status
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @dotty(%struct.lua_State* %L) #0 {
  %lmsg.i.i = alloca i64, align 8
  %l.i = alloca i64, align 8
  %1 = load i8** @progname, align 8, !tbaa !25
  store i8* null, i8** @progname, align 8, !tbaa !25
  %2 = bitcast i64* %l.i to i8*
  call void @llvm.lifetime.start(i64 8, i8* %2) #3
  call void @lua_settop(%struct.lua_State* %L, i32 0) #3
  %3 = call fastcc i32 @pushline(%struct.lua_State* %L, i32 1) #3
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %loadline.exit.thread, label %.preheader.i.lr.ph

.preheader.i.lr.ph:                               ; preds = %0
  %5 = bitcast i64* %lmsg.i.i to i8*
  br label %.preheader.i

.preheader.i:                                     ; preds = %.backedge, %.preheader.i.lr.ph
  %6 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* %l.i) #3
  %7 = load i64* %l.i, align 8, !tbaa !32
  %8 = call i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %6, i64 %7, i8* getelementptr inbounds ([7 x i8]* @.str11778, i64 0, i64 0), i8* null) #3
  call void @llvm.lifetime.start(i64 8, i8* %5) #3
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %.lr.ph.i, label %split5.i

.lr.ph.i:                                         ; preds = %20, %.preheader.i
  %10 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* %lmsg.i.i) #3
  %11 = load i64* %lmsg.i.i, align 8, !tbaa !32
  %12 = icmp ugt i64 %11, 4
  br i1 %12, label %13, label %split5.i

; <label>:13                                      ; preds = %.lr.ph.i
  %.sum.i.i = add i64 %11, -5
  %14 = getelementptr inbounds i8* %10, i64 %.sum.i.i
  %15 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([6 x i8]* @.str12779, i64 0, i64 0)) #3
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %split5.i

; <label>:17                                      ; preds = %13
  call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  call void @llvm.lifetime.end(i64 8, i8* %5) #3
  %18 = call fastcc i32 @pushline(%struct.lua_State* %L, i32 0) #3
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %loadline.exit.thread, label %20

; <label>:20                                      ; preds = %17
  %21 = call i8* @lua_pushlstring(%struct.lua_State* %L, i8* getelementptr inbounds ([2 x i8]* @.str10777, i64 0, i64 0), i64 1) #3
  call void @lua_insert(%struct.lua_State* %L, i32 -2) #3
  call void @lua_concat(%struct.lua_State* %L, i32 3) #3
  %22 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* %l.i) #3
  %23 = load i64* %l.i, align 8, !tbaa !32
  %24 = call i32 @luaL_loadbufferx(%struct.lua_State* %L, i8* %22, i64 %23, i8* getelementptr inbounds ([7 x i8]* @.str11778, i64 0, i64 0), i8* null) #3
  call void @llvm.lifetime.start(i64 8, i8* %5) #3
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %.lr.ph.i, label %split5.i

split5.i:                                         ; preds = %20, %13, %.lr.ph.i, %.preheader.i
  %.lcssa.i = phi i32 [ %8, %.preheader.i ], [ %24, %20 ], [ 3, %13 ], [ 3, %.lr.ph.i ]
  call void @llvm.lifetime.end(i64 8, i8* %5) #3
  %26 = call i64 @lua_rawlen(%struct.lua_State* %L, i32 1) #3
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %loadline.exit, label %28

; <label>:28                                      ; preds = %split5.i
  %29 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 1, i64* null) #3
  %30 = call i32 @add_history(i8* %29) #3
  br label %loadline.exit

loadline.exit:                                    ; preds = %28, %split5.i
  call void @lua_remove(%struct.lua_State* %L, i32 1) #3
  call void @llvm.lifetime.end(i64 8, i8* %2) #3
  switch i32 %.lcssa.i, label %.thread [
    i32 -1, label %loadline.exit.thread
    i32 0, label %32
  ]

.thread:                                          ; preds = %loadline.exit
  %31 = call fastcc i32 @report(%struct.lua_State* %L, i32 %.lcssa.i)
  br label %.backedge

; <label>:32                                      ; preds = %loadline.exit
  %33 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  call void @lua_pushcclosure(%struct.lua_State* %L, i32 (%struct.lua_State*)* @traceback, i32 0) #3
  call void @lua_insert(%struct.lua_State* %L, i32 %33) #3
  store %struct.lua_State* %L, %struct.lua_State** @globalL, align 8, !tbaa !25
  %34 = call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* @laction) #3
  %35 = call i32 @lua_pcallk(%struct.lua_State* %L, i32 0, i32 -1, i32 %33, i32 0, i32 (%struct.lua_State*)* null) #3
  %36 = call void (i32)* (i32, void (i32)*)* @signal(i32 2, void (i32)* null) #3
  call void @lua_remove(%struct.lua_State* %L, i32 %33) #3
  %37 = call fastcc i32 @report(%struct.lua_State* %L, i32 %35)
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %39, label %.backedge

; <label>:39                                      ; preds = %32
  %40 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %42, label %.backedge

; <label>:42                                      ; preds = %39
  call void @luaL_checkstack(%struct.lua_State* %L, i32 20, i8* getelementptr inbounds ([26 x i8]* @.str7774, i64 0, i64 0)) #3
  call void @lua_getglobal(%struct.lua_State* %L, i8* getelementptr inbounds ([6 x i8]* @.str8775, i64 0, i64 0)) #3
  call void @lua_insert(%struct.lua_State* %L, i32 1) #3
  %43 = call i32 @lua_gettop(%struct.lua_State* %L) #3
  %44 = add nsw i32 %43, -1
  %45 = call i32 @lua_pcallk(%struct.lua_State* %L, i32 %44, i32 0, i32 0, i32 0, i32 (%struct.lua_State*)* null) #3
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %.backedge, label %47

; <label>:47                                      ; preds = %42
  %48 = load i8** @progname, align 8, !tbaa !25
  %49 = call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %50 = call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([27 x i8]* @.str9776, i64 0, i64 0), i8* %49) #3
  %51 = icmp eq i8* %48, null
  br i1 %51, label %l_message.exit, label %52

; <label>:52                                      ; preds = %47
  %53 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %54 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %53, i8* getelementptr inbounds ([5 x i8]* @.str27794, i64 0, i64 0), i8* %48) #3
  %55 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %56 = call i32 @fflush(%struct.__sFILE* %55) #3
  br label %l_message.exit

l_message.exit:                                   ; preds = %52, %47
  %57 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %58 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %57, i8* getelementptr inbounds ([4 x i8]* @.str31798, i64 0, i64 0), i8* %50) #3
  %59 = load %struct.__sFILE** @__stderrp, align 8, !tbaa !25
  %60 = call i32 @fflush(%struct.__sFILE* %59) #3
  br label %.backedge

.backedge:                                        ; preds = %l_message.exit, %42, %39, %32, %.thread
  call void @llvm.lifetime.start(i64 8, i8* %2) #3
  call void @lua_settop(%struct.lua_State* %L, i32 0) #3
  %61 = call fastcc i32 @pushline(%struct.lua_State* %L, i32 1) #3
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %loadline.exit.thread, label %.preheader.i

loadline.exit.thread:                             ; preds = %.backedge, %loadline.exit, %17, %0
  call void @lua_settop(%struct.lua_State* %L, i32 0) #3
  %63 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %64 = call i64 @"\01_fwrite"(i8* getelementptr inbounds ([2 x i8]* @.str10777, i64 0, i64 0), i64 1, i64 1, %struct.__sFILE* %63) #3
  %65 = load %struct.__sFILE** @__stdoutp, align 8, !tbaa !25
  %66 = call i32 @fflush(%struct.__sFILE* %65) #3
  store i8* %1, i8** @progname, align 8, !tbaa !25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @lstop(%struct.lua_State* %L, %struct.lua_Debug* nocapture readnone %ar) #0 {
  %1 = tail call i32 @lua_sethook(%struct.lua_State* %L, void (%struct.lua_State*, %struct.lua_Debug*)* null, i32 0, i32 0) #3
  %2 = tail call i32 (%struct.lua_State*, i8*, ...)* @luaL_error(%struct.lua_State* %L, i8* getelementptr inbounds ([13 x i8]* @.str4771, i64 0, i64 0)) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @pushline(%struct.lua_State* %L, i32 %firstline) #0 {
  %1 = icmp ne i32 %firstline, 0
  %2 = select i1 %1, i8* getelementptr inbounds ([8 x i8]* @.str14781, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str15782, i64 0, i64 0)
  tail call void @lua_getglobal(%struct.lua_State* %L, i8* %2) #3
  %3 = tail call i8* @lua_tolstring(%struct.lua_State* %L, i32 -1, i64* null) #3
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %get_prompt.exit

; <label>:5                                       ; preds = %0
  %6 = select i1 %1, i8* getelementptr inbounds ([3 x i8]* @.str16783, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str17784, i64 0, i64 0)
  br label %get_prompt.exit

get_prompt.exit:                                  ; preds = %5, %0
  %p.0.i = phi i8* [ %6, %5 ], [ %3, %0 ]
  %7 = tail call i8* @readline(i8* %p.0.i) #3
  %8 = icmp eq i8* %7, null
  tail call void @lua_settop(%struct.lua_State* %L, i32 -2) #3
  br i1 %8, label %29, label %9

; <label>:9                                       ; preds = %get_prompt.exit
  %10 = tail call i64 @strlen(i8* %7) #3
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %18, label %12

; <label>:12                                      ; preds = %9
  %13 = add i64 %10, -1
  %14 = getelementptr inbounds i8* %7, i64 %13
  %15 = load i8* %14, align 1, !tbaa !86
  %16 = icmp eq i8 %15, 10
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %12
  store i8 0, i8* %14, align 1, !tbaa !86
  br label %18

; <label>:18                                      ; preds = %17, %12, %9
  %19 = icmp eq i32 %firstline, 0
  br i1 %19, label %26, label %20

; <label>:20                                      ; preds = %18
  %21 = load i8* %7, align 1, !tbaa !86
  %22 = icmp eq i8 %21, 61
  br i1 %22, label %23, label %26

; <label>:23                                      ; preds = %20
  %24 = getelementptr inbounds i8* %7, i64 1
  %25 = tail call i8* (%struct.lua_State*, i8*, ...)* @lua_pushfstring(%struct.lua_State* %L, i8* getelementptr inbounds ([10 x i8]* @.str13780, i64 0, i64 0), i8* %24) #3
  br label %28

; <label>:26                                      ; preds = %20, %18
  %27 = tail call i8* @lua_pushstring(%struct.lua_State* %L, i8* %7) #3
  br label %28

; <label>:28                                      ; preds = %26, %23
  tail call void @free(i8* %7)
  br label %29

; <label>:29                                      ; preds = %28, %get_prompt.exit
  %.0 = phi i32 [ 1, %28 ], [ 0, %get_prompt.exit ]
  ret i32 %.0
}

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { returns_twice "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { noreturn }
attributes #15 = { nounwind returns_twice }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)"}
!1 = metadata !{metadata !2, metadata !2, i64 0}
!2 = metadata !{metadata !"int", metadata !3, i64 0}
!3 = metadata !{metadata !"omnipotent char", metadata !4, i64 0}
!4 = metadata !{metadata !"Simple C/C++ TBAA"}
!5 = metadata !{metadata !6, metadata !7, i64 32}
!6 = metadata !{metadata !"lua_State", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !3, i64 10, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !2, i64 64, metadata !8, i64 68, metadata !8, i64 70, metadata !3, i64 72, metadata !3, i64 73, metadata !2, i64 76, metadata !2, i64 80, metadata !7, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !9, i64 120, metadata !10, i64 128}
!7 = metadata !{metadata !"any pointer", metadata !3, i64 0}
!8 = metadata !{metadata !"short", metadata !3, i64 0}
!9 = metadata !{metadata !"long", metadata !3, i64 0}
!10 = metadata !{metadata !"CallInfo", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !8, i64 32, metadata !3, i64 34, metadata !9, i64 40, metadata !3, i64 48}
!11 = metadata !{metadata !6, metadata !7, i64 48}
!12 = metadata !{metadata !6, metadata !7, i64 16}
!13 = metadata !{metadata !6, metadata !7, i64 56}
!14 = metadata !{metadata !10, metadata !7, i64 8}
!15 = metadata !{metadata !16, metadata !2, i64 8}
!16 = metadata !{metadata !"lua_TValue", metadata !3, i64 0, metadata !2, i64 8}
!17 = metadata !{metadata !6, metadata !7, i64 24}
!18 = metadata !{metadata !19, metadata !7, i64 256}
!19 = metadata !{metadata !"global_State", metadata !7, i64 0, metadata !7, i64 8, metadata !9, i64 16, metadata !9, i64 24, metadata !9, i64 32, metadata !9, i64 40, metadata !20, i64 48, metadata !16, i64 64, metadata !2, i64 80, metadata !3, i64 84, metadata !3, i64 85, metadata !3, i64 86, metadata !3, i64 87, metadata !2, i64 88, metadata !7, i64 96, metadata !7, i64 104, metadata !7, i64 112, metadata !7, i64 120, metadata !7, i64 128, metadata !7, i64 136, metadata !7, i64 144, metadata !7, i64 152, metadata !7, i64 160, metadata !7, i64 168, metadata !21, i64 176, metadata !22, i64 216, metadata !2, i64 240, metadata !2, i64 244, metadata !2, i64 248, metadata !7, i64 256, metadata !7, i64 264, metadata !7, i64 272, metadata !7, i64 280, metadata !3, i64 288, metadata !3, i64 424}
!20 = metadata !{metadata !"stringtable", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 12}
!21 = metadata !{metadata !"UpVal", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !7, i64 16, metadata !3, i64 24}
!22 = metadata !{metadata !"Mbuffer", metadata !7, i64 0, metadata !9, i64 8, metadata !9, i64 16}
!23 = metadata !{metadata !19, metadata !7, i64 272}
!24 = metadata !{metadata !10, metadata !7, i64 0}
!25 = metadata !{metadata !7, metadata !7, i64 0}
!26 = metadata !{metadata !27, metadata !3, i64 10}
!27 = metadata !{metadata !"CClosure", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !3, i64 10, metadata !7, i64 16, metadata !7, i64 24, metadata !3, i64 32}
!28 = metadata !{metadata !29, metadata !3, i64 9}
!29 = metadata !{metadata !"GCheader", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9}
!30 = metadata !{metadata !31, metadata !31, i64 0}
!31 = metadata !{metadata !"double", metadata !3, i64 0}
!32 = metadata !{metadata !9, metadata !9, i64 0}
!33 = metadata !{metadata !19, metadata !9, i64 24}
!34 = metadata !{metadata !35, metadata !9, i64 16}
!35 = metadata !{metadata !"", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !3, i64 10, metadata !2, i64 12, metadata !9, i64 16}
!36 = metadata !{metadata !37, metadata !9, i64 32}
!37 = metadata !{metadata !"", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !7, i64 16, metadata !7, i64 24, metadata !9, i64 32}
!38 = metadata !{metadata !35, metadata !3, i64 8}
!39 = metadata !{metadata !27, metadata !7, i64 24}
!40 = metadata !{metadata !19, metadata !7, i64 264}
!41 = metadata !{metadata !42, metadata !3, i64 10}
!42 = metadata !{metadata !"Table", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !3, i64 10, metadata !3, i64 11, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !2, i64 56}
!43 = metadata !{metadata !42, metadata !7, i64 16}
!44 = metadata !{metadata !37, metadata !7, i64 16}
!45 = metadata !{metadata !37, metadata !7, i64 24}
!46 = metadata !{metadata !10, metadata !3, i64 34}
!47 = metadata !{metadata !48, metadata !2, i64 0}
!48 = metadata !{metadata !"", metadata !2, i64 0, metadata !7, i64 8, metadata !9, i64 16, metadata !3, i64 24, metadata !3, i64 25}
!49 = metadata !{metadata !48, metadata !3, i64 25}
!50 = metadata !{metadata !6, metadata !8, i64 68}
!51 = metadata !{metadata !48, metadata !7, i64 8}
!52 = metadata !{metadata !53, metadata !7, i64 0}
!53 = metadata !{metadata !"CallS", metadata !7, i64 0, metadata !2, i64 8}
!54 = metadata !{metadata !53, metadata !2, i64 8}
!55 = metadata !{metadata !10, metadata !9, i64 40}
!56 = metadata !{metadata !6, metadata !3, i64 73}
!57 = metadata !{metadata !48, metadata !3, i64 24}
!58 = metadata !{metadata !6, metadata !9, i64 120}
!59 = metadata !{metadata !48, metadata !9, i64 16}
!60 = metadata !{metadata !61, metadata !3, i64 10}
!61 = metadata !{metadata !"LClosure", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !3, i64 10, metadata !7, i64 16, metadata !7, i64 24, metadata !3, i64 32}
!62 = metadata !{metadata !6, metadata !3, i64 10}
!63 = metadata !{metadata !19, metadata !3, i64 87}
!64 = metadata !{metadata !19, metadata !9, i64 16}
!65 = metadata !{metadata !19, metadata !3, i64 86}
!66 = metadata !{metadata !19, metadata !9, i64 40}
!67 = metadata !{metadata !19, metadata !3, i64 85}
!68 = metadata !{metadata !19, metadata !2, i64 240}
!69 = metadata !{metadata !19, metadata !2, i64 244}
!70 = metadata !{metadata !19, metadata !2, i64 248}
!71 = metadata !{metadata !19, metadata !7, i64 8}
!72 = metadata !{metadata !19, metadata !7, i64 0}
!73 = metadata !{metadata !74, metadata !2, i64 80}
!74 = metadata !{metadata !"Proto", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !2, i64 80, metadata !2, i64 84, metadata !2, i64 88, metadata !2, i64 92, metadata !2, i64 96, metadata !2, i64 100, metadata !2, i64 104, metadata !2, i64 108, metadata !7, i64 112, metadata !3, i64 120, metadata !3, i64 121, metadata !3, i64 122}
!75 = metadata !{metadata !21, metadata !7, i64 16}
!76 = metadata !{metadata !74, metadata !7, i64 56}
!77 = metadata !{metadata !78, metadata !7, i64 0}
!78 = metadata !{metadata !"Upvaldesc", metadata !7, i64 0, metadata !3, i64 8, metadata !3, i64 9}
!79 = metadata !{metadata !80, metadata !2, i64 40}
!80 = metadata !{metadata !"FuncState", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !2, i64 40, metadata !2, i64 44, metadata !2, i64 48, metadata !2, i64 52, metadata !2, i64 56, metadata !2, i64 60, metadata !8, i64 64, metadata !3, i64 66, metadata !3, i64 67, metadata !3, i64 68}
!81 = metadata !{metadata !80, metadata !2, i64 44}
!82 = metadata !{metadata !80, metadata !7, i64 0}
!83 = metadata !{metadata !74, metadata !7, i64 24}
!84 = metadata !{metadata !80, metadata !2, i64 48}
!85 = metadata !{metadata !80, metadata !7, i64 24}
!86 = metadata !{metadata !3, metadata !3, i64 0}
!87 = metadata !{metadata !80, metadata !3, i64 68}
!88 = metadata !{metadata !74, metadata !3, i64 122}
!89 = metadata !{metadata !90, metadata !7, i64 56}
!90 = metadata !{metadata !"LexState", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !91, i64 16, metadata !91, i64 32, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !7, i64 80, metadata !7, i64 88, metadata !7, i64 96, metadata !3, i64 104}
!91 = metadata !{metadata !"Token", metadata !2, i64 0, metadata !3, i64 8}
!92 = metadata !{metadata !93, metadata !3, i64 0}
!93 = metadata !{metadata !"expdesc", metadata !3, i64 0, metadata !3, i64 8, metadata !2, i64 16, metadata !2, i64 20}
!94 = metadata !{metadata !95, metadata !8, i64 0}
!95 = metadata !{metadata !"", metadata !8, i64 0, metadata !3, i64 2, metadata !3, i64 3}
!96 = metadata !{metadata !80, metadata !3, i64 66}
!97 = metadata !{metadata !95, metadata !3, i64 3}
!98 = metadata !{metadata !95, metadata !3, i64 2}
!99 = metadata !{metadata !93, metadata !2, i64 16}
!100 = metadata !{metadata !93, metadata !2, i64 20}
!101 = metadata !{metadata !80, metadata !2, i64 52}
!102 = metadata !{metadata !80, metadata !7, i64 8}
!103 = metadata !{i64 0, i64 4, metadata !86, i64 8, i64 2, metadata !104, i64 10, i64 1, metadata !86, i64 11, i64 1, metadata !86, i64 8, i64 4, metadata !1, i64 8, i64 8, metadata !30, i64 16, i64 4, metadata !1, i64 20, i64 4, metadata !1}
!104 = metadata !{metadata !8, metadata !8, i64 0}
!105 = metadata !{metadata !74, metadata !7, i64 40}
!106 = metadata !{metadata !74, metadata !2, i64 88}
!107 = metadata !{metadata !74, metadata !2, i64 92}
!108 = metadata !{metadata !90, metadata !2, i64 8}
!109 = metadata !{metadata !74, metadata !7, i64 16}
!110 = metadata !{metadata !74, metadata !2, i64 84}
!111 = metadata !{metadata !6, metadata !7, i64 40}
!112 = metadata !{metadata !6, metadata !7, i64 88}
!113 = metadata !{metadata !6, metadata !2, i64 76}
!114 = metadata !{metadata !6, metadata !2, i64 80}
!115 = metadata !{metadata !6, metadata !3, i64 72}
!116 = metadata !{metadata !117, metadata !7, i64 120}
!117 = metadata !{metadata !"lua_Debug", metadata !2, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !2, i64 40, metadata !2, i64 44, metadata !2, i64 48, metadata !3, i64 52, metadata !3, i64 53, metadata !3, i64 54, metadata !3, i64 55, metadata !3, i64 56, metadata !7, i64 120}
!118 = metadata !{metadata !27, metadata !3, i64 8}
!119 = metadata !{metadata !117, metadata !7, i64 32}
!120 = metadata !{metadata !117, metadata !2, i64 44}
!121 = metadata !{metadata !117, metadata !2, i64 48}
!122 = metadata !{metadata !74, metadata !7, i64 72}
!123 = metadata !{metadata !74, metadata !2, i64 104}
!124 = metadata !{metadata !74, metadata !2, i64 108}
!125 = metadata !{metadata !117, metadata !7, i64 24}
!126 = metadata !{metadata !117, metadata !2, i64 40}
!127 = metadata !{metadata !117, metadata !3, i64 52}
!128 = metadata !{metadata !117, metadata !3, i64 54}
!129 = metadata !{metadata !117, metadata !3, i64 53}
!130 = metadata !{metadata !74, metadata !3, i64 121}
!131 = metadata !{metadata !74, metadata !3, i64 120}
!132 = metadata !{metadata !117, metadata !3, i64 55}
!133 = metadata !{metadata !10, metadata !7, i64 16}
!134 = metadata !{metadata !117, metadata !7, i64 16}
!135 = metadata !{metadata !117, metadata !7, i64 8}
!136 = metadata !{metadata !137, metadata !7, i64 0}
!137 = metadata !{metadata !"", metadata !7, i64 0, metadata !7, i64 8}
!138 = metadata !{metadata !10, metadata !7, i64 24}
!139 = metadata !{metadata !6, metadata !7, i64 112}
!140 = metadata !{metadata !141, metadata !2, i64 156}
!141 = metadata !{metadata !"lua_longjmp", metadata !7, i64 0, metadata !3, i64 8, metadata !2, i64 156}
!142 = metadata !{metadata !6, metadata !8, i64 70}
!143 = metadata !{metadata !141, metadata !7, i64 0}
!144 = metadata !{metadata !6, metadata !2, i64 64}
!145 = metadata !{metadata !117, metadata !2, i64 0}
!146 = metadata !{metadata !10, metadata !8, i64 32}
!147 = metadata !{metadata !137, metadata !7, i64 8}
!148 = metadata !{metadata !19, metadata !7, i64 280}
!149 = metadata !{metadata !150, metadata !7, i64 0}
!150 = metadata !{metadata !"SParser", metadata !7, i64 0, metadata !22, i64 8, metadata !151, i64 32, metadata !7, i64 80, metadata !7, i64 88}
!151 = metadata !{metadata !"Dyndata", metadata !152, i64 0, metadata !153, i64 16, metadata !153, i64 32}
!152 = metadata !{metadata !"", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 12}
!153 = metadata !{metadata !"Labellist", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 12}
!154 = metadata !{metadata !150, metadata !7, i64 88}
!155 = metadata !{metadata !150, metadata !7, i64 80}
!156 = metadata !{metadata !150, metadata !2, i64 44}
!157 = metadata !{metadata !150, metadata !7, i64 48}
!158 = metadata !{metadata !150, metadata !2, i64 60}
!159 = metadata !{metadata !150, metadata !7, i64 64}
!160 = metadata !{metadata !150, metadata !2, i64 76}
!161 = metadata !{metadata !22, metadata !7, i64 0}
!162 = metadata !{metadata !22, metadata !9, i64 16}
!163 = metadata !{metadata !150, metadata !7, i64 32}
!164 = metadata !{metadata !165, metadata !9, i64 0}
!165 = metadata !{metadata !"Zio", metadata !9, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32}
!166 = metadata !{metadata !165, metadata !7, i64 8}
!167 = metadata !{metadata !168, metadata !7, i64 0}
!168 = metadata !{metadata !"", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !2, i64 24, metadata !2, i64 28}
!169 = metadata !{metadata !168, metadata !7, i64 8}
!170 = metadata !{metadata !168, metadata !7, i64 16}
!171 = metadata !{metadata !168, metadata !2, i64 24}
!172 = metadata !{metadata !168, metadata !2, i64 28}
!173 = metadata !{metadata !74, metadata !2, i64 96}
!174 = metadata !{metadata !74, metadata !7, i64 32}
!175 = metadata !{metadata !78, metadata !3, i64 8}
!176 = metadata !{metadata !78, metadata !3, i64 9}
!177 = metadata !{metadata !74, metadata !2, i64 100}
!178 = metadata !{metadata !74, metadata !7, i64 48}
!179 = metadata !{metadata !180, metadata !7, i64 0}
!180 = metadata !{metadata !"LocVar", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 12}
!181 = metadata !{metadata !180, metadata !2, i64 8}
!182 = metadata !{metadata !180, metadata !2, i64 12}
!183 = metadata !{metadata !61, metadata !7, i64 24}
!184 = metadata !{metadata !184, metadata !185, metadata !186}
!185 = metadata !{metadata !"llvm.loop.vectorize.width", i32 1}
!186 = metadata !{metadata !"llvm.loop.interleave.count", i32 1}
!187 = metadata !{metadata !187, metadata !185, metadata !186}
!188 = metadata !{metadata !19, metadata !3, i64 84}
!189 = metadata !{metadata !6, metadata !7, i64 96}
!190 = metadata !{metadata !21, metadata !7, i64 0}
!191 = metadata !{metadata !19, metadata !7, i64 96}
!192 = metadata !{metadata !29, metadata !7, i64 0}
!193 = metadata !{metadata !74, metadata !7, i64 64}
!194 = metadata !{metadata !19, metadata !7, i64 136}
!195 = metadata !{metadata !42, metadata !7, i64 48}
!196 = metadata !{metadata !74, metadata !7, i64 112}
!197 = metadata !{metadata !29, metadata !3, i64 8}
!198 = metadata !{metadata !19, metadata !7, i64 112}
!199 = metadata !{metadata !19, metadata !7, i64 104}
!200 = metadata !{metadata !19, metadata !2, i64 88}
!201 = metadata !{metadata !19, metadata !7, i64 120}
!202 = metadata !{metadata !19, metadata !7, i64 168}
!203 = metadata !{metadata !19, metadata !2, i64 60}
!204 = metadata !{metadata !19, metadata !7, i64 48}
!205 = metadata !{metadata !19, metadata !7, i64 128}
!206 = metadata !{metadata !61, metadata !7, i64 16}
!207 = metadata !{metadata !27, metadata !7, i64 16}
!208 = metadata !{metadata !6, metadata !7, i64 104}
!209 = metadata !{metadata !19, metadata !9, i64 32}
!210 = metadata !{metadata !19, metadata !2, i64 56}
!211 = metadata !{metadata !19, metadata !7, i64 144}
!212 = metadata !{metadata !19, metadata !7, i64 152}
!213 = metadata !{metadata !19, metadata !7, i64 160}
!214 = metadata !{metadata !42, metadata !3, i64 11}
!215 = metadata !{metadata !42, metadata !2, i64 56}
!216 = metadata !{metadata !42, metadata !7, i64 32}
!217 = metadata !{metadata !42, metadata !7, i64 24}
!218 = metadata !{metadata !35, metadata !3, i64 9}
!219 = metadata !{metadata !35, metadata !3, i64 10}
!220 = metadata !{metadata !90, metadata !2, i64 16}
!221 = metadata !{metadata !90, metadata !7, i64 48}
!222 = metadata !{metadata !90, metadata !3, i64 104}
!223 = metadata !{metadata !90, metadata !2, i64 0}
!224 = metadata !{metadata !90, metadata !2, i64 32}
!225 = metadata !{metadata !90, metadata !7, i64 64}
!226 = metadata !{metadata !90, metadata !2, i64 4}
!227 = metadata !{metadata !90, metadata !7, i64 88}
!228 = metadata !{metadata !90, metadata !7, i64 96}
!229 = metadata !{metadata !90, metadata !7, i64 72}
!230 = metadata !{i64 0, i64 4, metadata !1, i64 8, i64 8, metadata !30, i64 8, i64 8, metadata !25}
!231 = metadata !{metadata !22, metadata !9, i64 8}
!232 = metadata !{metadata !233, metadata !7, i64 0}
!233 = metadata !{metadata !"lconv", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !7, i64 40, metadata !7, i64 48, metadata !7, i64 56, metadata !7, i64 64, metadata !7, i64 72, metadata !3, i64 80, metadata !3, i64 81, metadata !3, i64 82, metadata !3, i64 83, metadata !3, i64 84, metadata !3, i64 85, metadata !3, i64 86, metadata !3, i64 87, metadata !3, i64 88, metadata !3, i64 89, metadata !3, i64 90, metadata !3, i64 91, metadata !3, i64 92, metadata !3, i64 93}
!234 = metadata !{metadata !90, metadata !7, i64 80}
!235 = metadata !{metadata !151, metadata !2, i64 40}
!236 = metadata !{metadata !151, metadata !2, i64 24}
!237 = metadata !{metadata !151, metadata !2, i64 8}
!238 = metadata !{metadata !80, metadata !7, i64 16}
!239 = metadata !{metadata !80, metadata !2, i64 56}
!240 = metadata !{metadata !80, metadata !2, i64 60}
!241 = metadata !{metadata !80, metadata !7, i64 32}
!242 = metadata !{metadata !243, metadata !3, i64 14}
!243 = metadata !{metadata !"BlockCnt", metadata !7, i64 0, metadata !8, i64 8, metadata !8, i64 10, metadata !3, i64 12, metadata !3, i64 13, metadata !3, i64 14}
!244 = metadata !{metadata !243, metadata !3, i64 12}
!245 = metadata !{metadata !243, metadata !8, i64 8}
!246 = metadata !{metadata !243, metadata !8, i64 10}
!247 = metadata !{metadata !243, metadata !3, i64 13}
!248 = metadata !{metadata !243, metadata !7, i64 0}
!249 = metadata !{metadata !80, metadata !3, i64 67}
!250 = metadata !{metadata !151, metadata !7, i64 0}
!251 = metadata !{metadata !252, metadata !8, i64 0}
!252 = metadata !{metadata !"Vardesc", metadata !8, i64 0}
!253 = metadata !{metadata !153, metadata !2, i64 8}
!254 = metadata !{metadata !153, metadata !7, i64 0}
!255 = metadata !{metadata !256, metadata !7, i64 0}
!256 = metadata !{metadata !"Labeldesc", metadata !7, i64 0, metadata !2, i64 8, metadata !2, i64 12, metadata !3, i64 16}
!257 = metadata !{metadata !256, metadata !2, i64 12}
!258 = metadata !{metadata !153, metadata !2, i64 12}
!259 = metadata !{metadata !256, metadata !3, i64 16}
!260 = metadata !{metadata !256, metadata !2, i64 8}
!261 = metadata !{metadata !262, metadata !7, i64 0}
!262 = metadata !{metadata !"LHS_assign", metadata !7, i64 0, metadata !93, i64 8}
!263 = metadata !{metadata !262, metadata !3, i64 8}
!264 = metadata !{metadata !80, metadata !8, i64 64}
!265 = metadata !{metadata !151, metadata !7, i64 32}
!266 = metadata !{metadata !151, metadata !7, i64 16}
!267 = metadata !{metadata !268, metadata !3, i64 0}
!268 = metadata !{metadata !"", metadata !3, i64 0, metadata !3, i64 1}
!269 = metadata !{metadata !268, metadata !3, i64 1}
!270 = metadata !{metadata !151, metadata !2, i64 12}
!271 = metadata !{i64 0, i64 8, metadata !25, i64 8, i64 4, metadata !1, i64 12, i64 4, metadata !1, i64 16, i64 1, metadata !86}
!272 = metadata !{metadata !273, metadata !2, i64 40}
!273 = metadata !{metadata !"ConsControl", metadata !93, i64 0, metadata !7, i64 24, metadata !2, i64 32, metadata !2, i64 36, metadata !2, i64 40}
!274 = metadata !{metadata !273, metadata !2, i64 32}
!275 = metadata !{metadata !273, metadata !2, i64 36}
!276 = metadata !{metadata !273, metadata !7, i64 24}
!277 = metadata !{metadata !273, metadata !3, i64 0}
!278 = metadata !{metadata !6, metadata !7, i64 0}
!279 = metadata !{metadata !6, metadata !3, i64 8}
!280 = metadata !{metadata !6, metadata !3, i64 9}
!281 = metadata !{metadata !19, metadata !2, i64 80}
!282 = metadata !{metadata !20, metadata !2, i64 12}
!283 = metadata !{metadata !20, metadata !7, i64 0}
!284 = metadata !{metadata !35, metadata !2, i64 12}
!285 = metadata !{metadata !20, metadata !2, i64 8}
!286 = metadata !{metadata !287, metadata !7, i64 16}
!287 = metadata !{metadata !"", metadata !3, i64 0, metadata !2, i64 8, metadata !7, i64 16}
!288 = metadata !{metadata !42, metadata !7, i64 40}
!289 = metadata !{metadata !289, metadata !185, metadata !186}
!290 = metadata !{metadata !290, metadata !185, metadata !186}
!291 = metadata !{i64 0, i64 8, metadata !25, i64 0, i64 8, metadata !25, i64 0, i64 4, metadata !1, i64 0, i64 8, metadata !25, i64 0, i64 8, metadata !30, i64 8, i64 4, metadata !1, i64 16, i64 8, metadata !25, i64 16, i64 8, metadata !25, i64 16, i64 4, metadata !1, i64 16, i64 8, metadata !25, i64 16, i64 8, metadata !30, i64 24, i64 4, metadata !1, i64 32, i64 8, metadata !25, i64 16, i64 8, metadata !25, i64 16, i64 8, metadata !25, i64 16, i64 4, metadata !1, i64 16, i64 8, metadata !25, i64 16, i64 8, metadata !30, i64 24, i64 4, metadata !1}
!292 = metadata !{metadata !293, metadata !7, i64 24}
!293 = metadata !{metadata !"", metadata !7, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24}
!294 = metadata !{metadata !293, metadata !7, i64 0}
!295 = metadata !{metadata !293, metadata !7, i64 8}
!296 = metadata !{metadata !293, metadata !7, i64 16}
!297 = metadata !{metadata !165, metadata !7, i64 32}
!298 = metadata !{metadata !165, metadata !7, i64 16}
!299 = metadata !{metadata !165, metadata !7, i64 24}
!300 = metadata !{metadata !301, metadata !7, i64 24}
!301 = metadata !{metadata !"luaL_Buffer", metadata !7, i64 0, metadata !9, i64 8, metadata !9, i64 16, metadata !7, i64 24, metadata !3, i64 32}
!302 = metadata !{metadata !301, metadata !9, i64 8}
!303 = metadata !{metadata !301, metadata !9, i64 16}
!304 = metadata !{metadata !301, metadata !7, i64 0}
!305 = metadata !{metadata !306, metadata !7, i64 8}
!306 = metadata !{metadata !"LoadF", metadata !2, i64 0, metadata !7, i64 8, metadata !3, i64 16}
!307 = metadata !{metadata !306, metadata !2, i64 0}
!308 = metadata !{metadata !309, metadata !7, i64 0}
!309 = metadata !{metadata !"LoadS", metadata !7, i64 0, metadata !9, i64 8}
!310 = metadata !{metadata !309, metadata !9, i64 8}
!311 = metadata !{metadata !312, metadata !7, i64 0}
!312 = metadata !{metadata !"luaL_Reg", metadata !7, i64 0, metadata !7, i64 8}
!313 = metadata !{metadata !314, metadata !7, i64 8}
!314 = metadata !{metadata !"luaL_Stream", metadata !7, i64 0, metadata !7, i64 8}
!315 = metadata !{metadata !314, metadata !7, i64 0}
!316 = metadata !{metadata !317, metadata !2, i64 0}
!317 = metadata !{metadata !"tm", metadata !2, i64 0, metadata !2, i64 4, metadata !2, i64 8, metadata !2, i64 12, metadata !2, i64 16, metadata !2, i64 20, metadata !2, i64 24, metadata !2, i64 28, metadata !2, i64 32, metadata !9, i64 40, metadata !7, i64 48}
!318 = metadata !{metadata !317, metadata !2, i64 4}
!319 = metadata !{metadata !317, metadata !2, i64 8}
!320 = metadata !{metadata !317, metadata !2, i64 12}
!321 = metadata !{metadata !317, metadata !2, i64 16}
!322 = metadata !{metadata !317, metadata !2, i64 20}
!323 = metadata !{metadata !317, metadata !2, i64 24}
!324 = metadata !{metadata !317, metadata !2, i64 28}
!325 = metadata !{metadata !317, metadata !2, i64 32}
!326 = metadata !{metadata !327, metadata !7, i64 32}
!327 = metadata !{metadata !"MatchState", metadata !2, i64 0, metadata !7, i64 8, metadata !7, i64 16, metadata !7, i64 24, metadata !7, i64 32, metadata !2, i64 40, metadata !3, i64 48}
!328 = metadata !{metadata !327, metadata !2, i64 0}
!329 = metadata !{metadata !327, metadata !7, i64 8}
!330 = metadata !{metadata !327, metadata !7, i64 16}
!331 = metadata !{metadata !327, metadata !7, i64 24}
!332 = metadata !{metadata !327, metadata !2, i64 40}
!333 = metadata !{metadata !334, metadata !9, i64 8}
!334 = metadata !{metadata !"", metadata !7, i64 0, metadata !9, i64 8}
!335 = metadata !{metadata !334, metadata !7, i64 0}
